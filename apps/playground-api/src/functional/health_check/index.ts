/**
 * @packageDocumentation
 * @module api.functional.health_check
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";
import type { Primitive } from "typia";

/**
 * @controller HealthCheckController.start
 * @path GET /health-check
 * @accessor api.functional.health_check.start
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function start(connection: IConnection): Promise<start.Output> {
  return PlainFetcher.fetch(connection, {
    ...start.METADATA,
    template: start.METADATA.path,
    path: start.path(),
  });
}
export namespace start {
  export type Output = Primitive<{ status: number; message: string }>;

  export const METADATA = {
    method: "GET",
    path: "/health-check",
    request: null,
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 200,
  } as const;

  export const path = () => "/health-check";
}
