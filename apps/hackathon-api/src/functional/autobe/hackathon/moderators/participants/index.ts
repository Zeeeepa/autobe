/**
 * @packageDocumentation
 * @module api.functional.autobe.hackathon.moderators.participants
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IAutoBeHackathonParticipant, IPage } from "@autobe/interface";
import type { IConnection } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";

/**
 * @controller AutoBeHackathonModeratorParticipantController.index
 * @path PATCH /autobe/hackathon/:hackathonCode/moderators/participants
 * @accessor api.functional.autobe.hackathon.moderators.participants.index
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function index(
  connection: IConnection,
  hackathonCode: string,
  body: index.Body,
): Promise<index.Output> {
  return PlainFetcher.fetch(
    {
      ...connection,
      headers: {
        ...connection.headers,
        "Content-Type": "application/json",
      },
    },
    {
      ...index.METADATA,
      template: index.METADATA.path,
      path: index.path(hackathonCode),
    },
    body,
  );
}
export namespace index {
  export type Body = IPage.IRequest;
  export type Output = IPage<IAutoBeHackathonParticipant.ISummary>;

  export const METADATA = {
    method: "PATCH",
    path: "/autobe/hackathon/:hackathonCode/moderators/participants",
    request: {
      type: "application/json",
      encrypted: false,
    },
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 200,
  } as const;

  export const path = (hackathonCode: string) =>
    `/autobe/hackathon/${encodeURIComponent(hackathonCode?.toString() ?? "null")}/moderators/participants`;
}
