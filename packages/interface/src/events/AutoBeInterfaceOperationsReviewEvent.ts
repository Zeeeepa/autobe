import { AutoBeOpenApi } from "../openapi";
import { AutoBeEventBase } from "./AutoBeEventBase";
import { AutoBeProgressEventBase } from "./AutoBeProgressEventBase";
import { AutoBeTokenUsageEventBase } from "./AutoBeTokenUsageEventBase";

/**
 * Event fired during the review and validation phase of API operation
 * definitions.
 *
 * This event occurs when the Interface agent is reviewing and validating the
 * generated API operations against business requirements, technical
 * specifications, and OpenAPI standards. The review phase ensures that each
 * operation properly implements the required functionality with correct
 * request/response schemas, authentication, error handling, and documentation.
 *
 * The review process involves systematic validation where the agent evaluates
 * operation completeness, parameter correctness, response accuracy, and overall
 * API design consistency. Operations that fail validation are marked for
 * revision to ensure the final API specification meets enterprise-level quality
 * standards.
 *
 * @author Kakasoo
 */
export interface AutoBeInterfaceOperationsReviewEvent
  extends AutoBeEventBase<"interfaceOperationsReview">,
    AutoBeProgressEventBase,
    AutoBeTokenUsageEventBase {
  /**
   * Original API operations submitted for review.
   *
   * The complete set of operations generated by the Interface Operations Agent
   * that require validation for security compliance, schema alignment, logical
   * consistency, and adherence to AutoBE standards. These are the operations
   * being evaluated for potential issues and improvements.
   */
  operations: AutoBeOpenApi.IOperation[];

  /**
   * Detailed review feedback from the Interface Operations Review Agent.
   *
   * Contains comprehensive assessment results including:
   *
   * - Security vulnerability analysis
   * - Schema compliance validation
   * - Logical consistency verification
   * - Standard adherence evaluation
   * - Identified critical issues and recommendations
   */
  review: string;

  /**
   * Amendment plan based on the review feedback.
   *
   * Structured action plan outlining specific corrections needed for:
   *
   * - Security issues (password exposure, authorization bypasses)
   * - Logic errors (mismatched return types, incorrect HTTP semantics)
   * - Schema violations (missing fields, type mismatches)
   *
   * If operations are perfect, explicitly states no changes are required.
   */
  plan: string;

  /**
   * Revised operations based on the amendment plan.
   *
   * The final corrected API operations after applying all fixes from the
   * improvement plan. If no issues were found during review, this contains the
   * original operations unchanged. These enhanced operations are ready for
   * schema generation and subsequent implementation phases.
   */
  content: AutoBeOpenApi.IOperation[];

  /**
   * Current iteration number of the operation review process.
   *
   * Indicates which revision cycle of the API operation review is currently
   * being executed. This step number helps track the iterative validation
   * process and provides context for understanding how many review cycles have
   * been completed to achieve the desired operation quality.
   *
   * The step value increments with each major review iteration, allowing
   * stakeholders to monitor the progressive refinement of API operations and
   * understand the validation rigor applied to the interface design.
   */
  step: number;
}
