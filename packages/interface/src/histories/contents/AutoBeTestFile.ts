import { AutoBeTestScenario } from "./AutoBeTestScenario";

/**
 * Represents a single test file generated by the Test agent with comprehensive
 * scenario metadata and source code.
 *
 * Each test file encapsulates a specific testing scenario with its file system
 * location, complete source code content, and detailed scenario information.
 * This structure provides rich context about the test's purpose, target API
 * endpoints, and expected behavior patterns, enabling better test organization
 * and maintenance.
 *
 * @author Kakasoo
 */
export interface AutoBeTestFile {
  /**
   * File system path where the test file should be located.
   *
   * Specifies the relative or absolute path for the test file within the
   * project structure. This location typically follows testing conventions and
   * may be organized by API endpoints, feature modules, or business domains to
   * ensure logical test suite organization and easy navigation.
   *
   * Example: "tests/e2e/users/authentication.test.ts"
   */
  location: string;

  /**
   * Complete TypeScript source code content of the test file.
   *
   * Contains the full implementation of test scenarios including imports,
   * helper functions, test setup/teardown logic, and individual test cases. The
   * content is structured as executable TypeScript code that implements
   * comprehensive end-to-end testing scenarios for specific API endpoints or
   * business functionality.
   *
   * Each test file typically includes multiple test functions that validate
   * different aspects of the API behavior, error handling, edge cases, and
   * business rule compliance.
   */
  content: string;

  /**
   * Detailed metadata describing the test scenario and its characteristics.
   *
   * Provides comprehensive information about what this test file covers,
   * including the specific API endpoints being tested, the business scenarios
   * being validated, expected outcomes, and any special conditions or
   * prerequisites. This metadata helps developers understand the test's purpose
   * and scope without having to analyze the source code directly.
   *
   * The scenario information is crucial for test maintenance, coverage
   * analysis, and ensuring that all business requirements are adequately tested
   * across the test suite.
   */
  scenario: AutoBeTestScenario;
}
