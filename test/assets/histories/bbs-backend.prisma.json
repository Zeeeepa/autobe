[
  {
    "id": "b51adde4-9e1e-4412-9641-df0869e3ab12",
    "type": "userMessage",
    "contents": [
      {
        "type": "text",
        "text": "I want to create a political/economic discussion board. Since I'm not familiar with programming, please write a requirements analysis report as you see fit. The report should be approximately 3 pages long.\n"
      }
    ],
    "created_at": "2025-06-09T05:49:50.474Z"
  },
  {
    "id": "355c182c-7587-407d-bc61-303a3843c6cf",
    "type": "userMessage",
    "contents": [
      {
        "type": "text",
        "text": "I want to create a political/economic discussion board. Since I'm not familiar with programming, please write a requirements analysis report as you see fit. The report should be approximately 3 pages long.\n"
      }
    ],
    "created_at": "2025-07-14T09:02:42.984Z"
  },
  {
    "id": "7d1f5537-6076-4953-b7d2-91810989115c",
    "type": "analyze",
    "reason": "The user has delegated planning and requirements analysis to me. They want to create a political/economic discussion board and have requested a comprehensive requirements analysis report of approximately 3 pages, acknowledging their lack of technical expertise. Proceeding to generate a detailed, structured requirement specification suitable for non-technical stakeholders.",
    "prefix": "discussionboard",
    "roles": [
      {
        "name": "member",
        "description": "A regular user who can register, login, create posts, comment, like, and report inappropriate content. Can participate in both political and economic discussions."
      },
      {
        "name": "moderator",
        "description": "A trusted user responsible for overseeing discussions, moderating posts and comments, managing reports, and enforcing community guidelines."
      },
      {
        "name": "admin",
        "description": "The system administrator with highest-level permissions. Can manage users, moderators, content, and platform settings."
      }
    ],
    "files": {
      "00_discussionboard_toc.md": "# Discussion Board Requirements Documentation\n\nWelcome to the requirements documentation for the Discussion Board system. This documentation is structured to provide comprehensive guidance through all phases of requirements analysis, scope clarification, functional breakdown, user roles, and permission systems. Each main section is linked for ease of navigation.\n\n---\n\n## Table of Contents\n\n1. **[Overview & Scope](01_discussionboard_overview_and_scope.md)**\n    - Summary of the Discussion Board, goals, in-scope/out-of-scope topics, definition of key terms, and business objectives.\n2. **[Functional Requirements](02_discussionboard_functional_requirements.md)**\n    - Detailing all major and minor features, including discussion categories, posting, commenting, moderation, reporting, liking, notification logic, and discussion filtering/searching.\n3. **[User Roles & Permissions](03_discussionboard_user_roles_and_permissions.md)**\n    - Matrix of user roles (member, moderator, admin), authentication, permission levels, role-based system behaviors, and administrative controls.\n\n---\n\n### Document Purpose\nThis documentation is crafted to support requirement gathering, team alignment, and development. Each section is modular and hyperlinked for easy reference, revisions, and review. Please use the links above to access detailed requirements for each area.\n\n### Navigation & Usage\n- Each document contains internal references and links to related sections for seamless navigation.\n- Use the Table of Contents to quickly jump to the part of the documentation most relevant to your needs.\n\n---\n\nFor definitions, updates, or feedback, contact the project owner. Continue to [01_discussionboard_overview_and_scope.md](01_discussionboard_overview_and_scope.md) to begin exploring the overview and scope of this project.",
      "01_discussionboard_overview_and_scope.md": "# Overview and Scope of the Political/Economic Discussion Board\n\n## Introduction\nThis document provides an in-depth overview, defines the scope, and captures the foundational goals and concepts behind the Political/Economic Discussion Board project. Designed as a central reference for all stakeholders—especially non-developers—it articulates the project's aspirations, boundaries, and success metrics. Clearly defined user roles (member, moderator, admin) guide feature and permissions planning throughout.\n\n## Purpose & Business Goals\nThe central purpose of this platform is to foster informed, respectful dialogue around political and economic topics. The project aims to:  \n- **Encourage community participation**: Enable users from diverse backgrounds to engage in meaningful discussions that bridge social and ideological divides.\n- **Support knowledge sharing**: Provide an accessible space for exchanging viewpoints, data, and analyses on current political and economic issues.\n- **Cultivate civil discourse**: Create mechanisms for respectful debate, reducing misinformation and toxic behavior through strong moderation and reporting.\n- **Drive platform growth & engagement**: Implement features (likes, comments, post creation, reporting) that increase daily active users, session duration, and content generation.\n- **Support platform scalability and stability**: Design for expansion, anticipating increased user volume and topic diversity as popularity grows.\n- **Establish brand authority**: Position the project as a go-to source for balanced, intelligent discussions in the targeted domain.\n\nKey business goals include:\n- Achieve a monthly active user base of 10,000 within the first year\n- Maintain user report resolution rates above 95% within 24 hours\n- Reach a user-generated content count (posts & comments) that grows by at least 15% month-over-month\n\n## Scope of the Project\n\nThe scope encompasses features that:\n- Enable user registration, authentication, and profile management\n- Allow members to create, edit, comment on, like, and report posts in political and economic categories\n- Empower moderators with moderation tools (editing, hiding, deleting, and flagging content, managing reports)\n- Provide admins with comprehensive management tools for all users, roles, and system configurations\n- Ensure robust permission handling, API authentication, and security\n- Present a modern, intuitive UI for desktop and mobile users\n- Integrate analytics to monitor platform use, flag abuse, and inform future feature planning\n\nThe platform intentionally excludes real-time chat features, external advertising modules, or direct financial transactions in its initial phase.\n\nFor detailed functional requirements, refer to [02_discussionboard_functional_requirements.md](./02_discussionboard_functional_requirements.md).\n\n## Target Audience & Stakeholders\n\nThe discussion board serves a broad and diverse audience:\n- **General Members**: Users interested in political and economic news, analysis, and conversation; includes students, professionals, and the general public.\n- **Content Contributors**: Subject-matter experts, bloggers, commentators, or news aggregators seeking a platform for outreach\n- **Moderators**: Community members trusted to uphold guidelines and foster respectful exchange; typically active, experienced participants\n- **Administrators**: Technical and content managers responsible for platform supervision, growth strategies, and user management\n\nAdditional stakeholders include:\n- **Partner organizations**: Universities, think tanks, or nonprofits seeking dialogue opportunities or knowledge sharing\n- **Platform Developers/Operations**: Technical staff implementing and maintaining the system\n- **Advertisers & Sponsors** (future phase): Entities interested in reaching an engaged, informed audience (currently outside scope)\n\n## Key Concepts and Definitions\n- **Member**: Authenticated user participating in posts, comments, likes, and reports; includes all community members by default\n- **Moderator**: Elevated user role with capability to enforce rules, manage content/reporting, and intervene in discussions when necessary\n- **Admin**: Ultimate system authority, controls user management, system configuration, and overall platform health\n\nSee permissions breakdown in [03_discussionboard_user_roles_and_permissions.md](./03_discussionboard_user_roles_and_permissions.md).\n\n## Out of Scope\nCertain advanced features are explicitly excluded:\n- Real-time voice/video chat\n- External ad serving or in-platform e-commerce\n- Integration with external single sign-on providers (SSO)\n\n## Success Criteria\nSuccess of the discussion board will be measured by both qualitative and quantitative indicators:\n- **Quantitative KPIs:**\n    - Monthly active users surpass 10,000\n    - User retention rate exceeds 60% after three months\n    - Content growth (posts, comments) increases at least 15% per month\n    - 95% of user reports resolved by moderators/admins within 24 hours\n- **Qualitative Metrics:**\n    - Positive community feedback (survey, net promoter score, review analysis)\n    - Notable recognition or partnership initiation with reputable organizations\n    - Platform cited as a reference or resource within political and economic discussions online\n- **Platform Reliability:**\n    - Achieve 99.5% or greater uptime across all core features\n    - Minimal downtime or critical incidents impacting user experience\n\nThese criteria will be continually reviewed and updated as the platform evolves.\n\n## Document References\n- [Table of Contents](./00_discussionboard_toc.md)\n- [Functional Requirements](./02_discussionboard_functional_requirements.md)\n- [User Roles & Permissions](./03_discussionboard_user_roles_and_permissions.md)",
      "02_discussionboard_functional_requirements.md": "# Discussion Board Functional Requirements\n\n## 1. Introduction\nThis document outlines the functional requirements for the Discussion Board platform, serving as guidance for system developers and stakeholders. It incorporates role-specific actions aligned with business goals, ensuring the platform supports robust user engagement and effective moderation.\n\n## 2. User Roles Covered\n- **Member**: Standard users who create and interact with content, and report inappropriate material.\n- **Moderator**: Trusted users with tools for content oversight and rule enforcement.\n- **Admin**: Platform managers with full system access and user administration capabilities.\n\n(For a breakdown of permissions, see [03_discussionboard_user_roles_and_permissions.md](./03_discussionboard_user_roles_and_permissions.md))\n\n## 3. Core Functional Requirements\n\n### 3.1. User Registration & Authentication\n- Users must be able to register new accounts and log in securely.\n- Support password reset and account recovery workflows.\n- Implement role-based authentication reflecting member, moderator, and admin distinctions.\n\n### 3.2. Creating & Managing Posts\n- Authenticated members can create, edit, and delete their own posts.\n- Posts must support categorization: at minimum, \"Politics\" and \"Economics\" boards.\n- Enable formatting (basic Markdown or WYSIWYG), tagging, and optional attachments (e.g., images).\n- Display post timestamps and author information.\n\n### 3.3. Commenting Functionality\n- Users can comment on posts within both discussion categories.\n- Support threaded (nested) comments for clear conversation flow.\n- Enable editing and deletion of own comments.\n- Comment timestamps and author info are shown.\n\n### 3.4. User Interactions (Likes & Reporting)\n- Registered users can like posts and comments (1 like per user per item).\n- Users may report posts/comments for abuse, spam, or other guideline violations.\n- Capture reporting reasons and support multiple report types.\n- Block double-reporting on identical content from the same user.\n\n### 3.5. Moderation Tools\n- Moderators access a dashboard displaying recent reports and flagged items.\n- Permit moderators to delete or hide posts/comments following review.\n- Enable warning issuing, user muting, or temporary bans.\n- Provide moderators with review status tracking for reported content.\n\n### 3.6. Administration\n- Admins can manage user accounts (activate, deactivate, assign/revoke roles).\n- Enable admin access to content analytics for audit and improvement.\n- Platform-wide settings (e.g., discussion board categories, moderation policies) are configurable by admins only.\n\n### 3.7. Notifications\n- Users receive in-app notifications for activity on their posts/comments (e.g., replies, likes, moderator actions).\n- Customizable notification preferences per user.\n\n### 3.8. Search & Discovery\n- Search functionality across posts and comments (by keyword, author, tags).\n- Filter posts by category, recency, popularity, or unresolved reports.\n\n### 3.9. Access & Security\n- All sensitive operations must enforce role-appropriate authentication.\n- Implement input validation and anti-spam protection.\n- All actions should be logged for auditability by admins.\n\n---\nFor additional details and rationale behind these features, see [01_discussionboard_overview_and_scope.md](./01_discussionboard_overview_and_scope.md).\n\nIs there anything to refine or expand within these requirements?",
      "03_discussionboard_user_roles_and_permissions.md": "# User Roles & Permissions for the Discussion Board\n\n## Overview\nProper role-based access control is essential for the operation, management, and security of the discussion board. This document outlines all user roles, their permissions, and summarizes core mechanisms for authentication and authorization. This model supports maintainability, secure access, and future feature growth.\n\n## Defined User Roles\n\n| Role       | Description                                                                                                       |\n|------------|-------------------------------------------------------------------------------------------------------------------|\n| Member     | Regular registered user who can participate in discussions, create and interact with posts, and use reporting features. |\n| Moderator  | Trusted user responsible for content oversight, enforcing guidelines, and handling reported items.               |\n| Admin      | System administrator with comprehensive platform control, including user, moderator, and settings management.     |\n\n## Permissions Matrix\n\n| Permission                              | Member | Moderator | Admin |\n|------------------------------------------|:------:|:---------:|:-----:|\n| Register / Login                        |   ✓    |     ✓     |   ✓   |\n| Create, Edit, Delete Own Posts          |   ✓    |     ✓     |   ✓   |\n| Comment / Like                          |   ✓    |     ✓     |   ✓   |\n| Report Inappropriate Content            |   ✓    |     ✓     |   ✓   |\n| Moderate (Edit/Delete Others’ Content)  |        |     ✓     |   ✓   |\n| Manage Reports/Resolve Issues           |        |     ✓     |   ✓   |\n| Manage Members (ban, role change)       |        |           |   ✓   |\n| Manage Moderators                       |        |           |   ✓   |\n| Access Admin Dashboard/Settings         |        |           |   ✓   |\n| Platform Configuration                  |        |           |   ✓   |\n\n## Role Change & Escalation\n- **Promotion to Moderator**: Only Admin can assign Moderator roles.\n- **Demotion/Promotion**: Admin can manage all role assignments. Members and Moderators cannot self-promote.\n- **Ban/Deactivate**: Admin can suspend or ban any user; Moderators may suggest bans (for Admin review).\n\n## Authentication & Authorization Model\n- **Authentication**: All users (member, moderator, admin) authenticate via secure login (email/password or SSO).\n- **Session Management**: Tokens/session cookies to represent active logins; refresh as required.\n- **Authorization**: Role is bundled with user profile; each API checks role-linked permissions prior to fulfilling requests.\n- **API Enforcement**: Endpoints are protected so only users with sufficient permissions can execute sensitive actions (e.g., moderation, admin commands).\n\n## User Management Flows\n- **User Registration & Login**: Members self-register; moderators/admins are promoted by Admin.\n- **Role Assignment/Revoke**: Only Admin has API/UI controls to configure roles for any user.\n- **Audit Logging**: Sensitive actions, especially bans or role changes, are logged for traceability.\n\n## Security & Best Practices\n- All privileged actions (moderator/admin) require authentication and strong authorization checks.\n- Minimize privilege escalation risk by preventing self-assignment of higher roles.\n- Regularly audit user role changes; provide notification of changes to affected users.\n\n## Appendix\n- For business rules and API endpoint protection: see [02_discussionboard_functional_requirements.md].\n- For the platform’s overall scope: see [01_discussionboard_overview_and_scope.md].\n"
    },
    "step": 0,
    "created_at": "2025-07-14T09:02:45.145Z",
    "completed_at": "2025-07-14T09:05:06.427Z"
  },
  {
    "type": "prisma",
    "id": "333340e6-7d58-45e9-9ae6-e2e2c741448a",
    "created_at": "2025-07-14T09:09:05.442Z",
    "completed_at": "2025-07-14T09:18:32.965Z",
    "reason": "Step to the Prisma DB schema generation after requirements analysis",
    "description": "",
    "result": {
      "success": true,
      "data": {
        "files": [
          {
            "filename": "schema-01-core.prisma",
            "namespace": "Core",
            "models": [
              {
                "name": "discussionboard_user",
                "description": "[User Master Record] - This implements the foundational user management requirement noted in the requirements analysis (02_discussionboard_functional_requirements.md Section 3.1: User Registration & Authentication). \n\nThis model captures core authentication and identity data for all discussion board participants—regardless of role (member, moderator, admin). Maintains strict 3NF compliance by isolating authentication data (email, credential info, status) from profile and role specialization, preventing duplication or transitive dependencies. For example, all roles reference this entity, and profile/details are managed in separate tables.\n\nKey relationships: Links 1:1 to discussionboard_user_profile. Related 1:N with role specializations (member/moderator/admin), posts, comments, and all historical user actions.\nSpecial behaviors: Only one email per user. Role management handled via join/role specialization tables. Soft deactivation supported by 'is_active' flag.",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "description": "[Primary Key] - Globally unique identifier for the user. Implements the requirements for traceable, referential user identity across all core tables (see 02_discussionboard_functional_requirements.md). 3NF enforced as surrogate key. For example, all foreign key relationships use this for core user reference.",
                  "isId": true,
                  "isGenerated": true
                },
                "foreignFields": [],
                "plainFields": [
                  {
                    "name": "email",
                    "type": "string",
                    "description": "[Authentication Email] - Implements unique login credential per user requirement. Business meaning: Used for login, notifications, and password recovery. Ensures normalization by existing only on user root entity and not duplicated elsewhere. Enforced unique constraint. E.g., user login process.",
                    "nullable": false
                  },
                  {
                    "name": "password_hash",
                    "type": "string",
                    "description": "[Password Hash] - Securely stores password hash for authentication workflow per 02_discussionboard_functional_requirements.md. Ensures separation from credential-independent profile info. Used for login verification.",
                    "nullable": false
                  },
                  {
                    "name": "is_active",
                    "type": "boolean",
                    "description": "[Active Status] - Tracks whether the user account is enabled or deactivated (requirement: Admin can deactivate). Normalization: not duplicated elsewhere. For account suspension procedures.",
                    "nullable": false
                  },
                  {
                    "name": "created_at",
                    "type": "datetime",
                    "description": "[Creation Timestamp] - When user joined. Required for audit and analytics (see success criteria in 01_discussionboard_overview_and_scope.md). Used in user growth/activation KPIs.",
                    "nullable": false
                  },
                  {
                    "name": "updated_at",
                    "type": "datetime",
                    "description": "[Last Update Timestamp] - Business: Audit and admin review. Ensures clean separation—no transitive dependency.",
                    "nullable": false
                  }
                ],
                "uniqueIndexes": [
                  {
                    "fieldNames": [
                      "email"
                    ],
                    "description": "Enforces single user per email (see authentication/user registration requirements).",
                    "unique": true
                  }
                ],
                "plainIndexes": [
                  {
                    "fieldNames": [
                      "is_active"
                    ],
                    "description": "Optimizes queries for active/inactive status, e.g., listing active users."
                  }
                ],
                "ginIndexes": []
              },
              {
                "name": "discussionboard_user_profile",
                "description": "[User Profile] - Implements user display/personalization requirements (02_discussionboard_functional_requirements.md, 3.1) distinct from root authentication. Holds display name, optional avatar, and bio—strictly 3NF as contact details, credentials, role, and settings are elsewhere. Used for member directories, post attributions, notifications.\n\nKey relationships: 1:1 with discussionboard_user (foreign key = unique). Not duplicated in role tables.\nSpecial behaviors: 1:1 uniqueness enforced. All user display data (NOT used for authentication).",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "description": "[Primary Key] - Globally unique identifier for the profile. Surrogate key for normalization. Ensures all profile retrieval and modifications are auditable.",
                  "isId": true,
                  "isGenerated": true
                },
                "foreignFields": [
                  {
                    "name": "user_id",
                    "type": "uuid",
                    "description": "[Foreign Key: discussionboard_user] - User this profile belongs to. Implements 1:1 user-profile relationship (requirement: one profile per account, never duplicated). Enforces normalization. E.g., to get profile when showing post author.",
                    "relation": {
                      "targetModel": "discussionboard_user",
                      "fkField": "user_id",
                      "name": "user_profile_user_id"
                    },
                    "unique": true,
                    "nullable": false
                  }
                ],
                "plainFields": [
                  {
                    "name": "display_name",
                    "type": "string",
                    "description": "[Display Name] - User's chosen name, shown publicly on posts/comments. Not used for authentication. Maintains 3NF by separating identity from credential tables. E.g., 'JohnDoe'.",
                    "nullable": false
                  },
                  {
                    "name": "avatar_url",
                    "type": "uri",
                    "description": "[Avatar Image] - Optional user image link. Not duplicated anywhere. Maintains normalized structure. Used on post lists/user bios.",
                    "nullable": true
                  },
                  {
                    "name": "bio",
                    "type": "string",
                    "description": "[User Bio] - Self-description or background, used on profiles/mouseover displays. Normalization: No business logic outside of display.",
                    "nullable": true
                  }
                ],
                "uniqueIndexes": [
                  {
                    "fieldNames": [
                      "user_id"
                    ],
                    "description": "Enforces strict 1:1 between profile and user root entity (see authentication/profile requirements).",
                    "unique": true
                  }
                ],
                "plainIndexes": [
                  {
                    "fieldNames": [
                      "display_name"
                    ],
                    "description": "For search (e.g. user directory, mention autocompletion)."
                  }
                ],
                "ginIndexes": [
                  {
                    "fieldName": "bio",
                    "description": "Fuzzy/full-text search of user bios (requirements for search/discovery in 02_discussionboard_functional_requirements.md)."
                  }
                ]
              },
              {
                "name": "discussionboard_member",
                "description": "[Member Role] - Implements domain model for general user participation rights (see user roles in 03_discussionboard_user_roles_and_permissions.md and participation requirements in 02_discussionboard_functional_requirements.md 3.2-3.4). This captures all accounts with base-level actions (posting, commenting, liking). All users with platform presence are members. 3NF: Only stores role-specific facts, no credential/profile fields duplicated.\n\nKey relationships: 1:1 with discussionboard_user. Related 1:N to posts, comments, likes, reports. Role is atomic, all privileges via explicit role presence.\nSpecial behaviors: Role assignment/demotion flows strictly auditable via foreign key.",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "description": "[Primary Key] - Each member has a dedicated, globally unique role assignment entry for traceability (even if admin or moderator). Enforces 3NF by using only a surrogate key.",
                  "isId": true,
                  "isGenerated": true
                },
                "foreignFields": [
                  {
                    "name": "user_id",
                    "type": "uuid",
                    "description": "[Foreign Key: discussionboard_user] - Account assigned this member role. Enforces 1:1 mapping, not duplicated for other roles. Needed for permissions matrix. E.g., to check if a user can create posts.",
                    "relation": {
                      "targetModel": "discussionboard_user",
                      "fkField": "user_id",
                      "name": "member_user_id"
                    },
                    "unique": true,
                    "nullable": false
                  }
                ],
                "plainFields": [
                  {
                    "name": "granted_at",
                    "type": "datetime",
                    "description": "[Membership Grant Timestamp] - When membership began. Required for audits, demotions, or calculating active duration. Maintains third normal form by not holding user or credential data.",
                    "nullable": false
                  }
                ],
                "uniqueIndexes": [
                  {
                    "fieldNames": [
                      "user_id"
                    ],
                    "description": "Enforces member role is assigned at most once per user. (No duplicate member records per user).",
                    "unique": true
                  }
                ],
                "plainIndexes": [],
                "ginIndexes": []
              },
              {
                "name": "discussionboard_moderator",
                "description": "[Moderator Role] - Implements elevated moderator assignment for trusted members, referencing business rules in 03_discussionboard_user_roles_and_permissions.md and moderation functions in 02_discussionboard_functional_requirements.md 3.5. Only users explicitly assigned this role are allowed moderation tools. 3NF-preserving: only stores moderator-specific info (no duplication of credentials/profile).\n\nKey relationships: 1:1 to discussionboard_user (atomic assignment). Related 1:N to reports, moderation actions.\nSpecial behaviors: Grant/revoke flows auditable. All permission checks cleanly reference this mapping.",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "description": "[Primary Key] - Unique identifier for moderator role assignment. Enforces traceability, audit, and clean separation. Used for all moderator-level permission checks.",
                  "isId": true,
                  "isGenerated": true
                },
                "foreignFields": [
                  {
                    "name": "user_id",
                    "type": "uuid",
                    "description": "[Foreign Key: discussionboard_user] - User granted moderator authority (must also be a member). 1:1 constraint by unique index. Never duplicated nor nullable. E.g., lookup for report review access.",
                    "relation": {
                      "targetModel": "discussionboard_user",
                      "fkField": "user_id",
                      "name": "moderator_user_id"
                    },
                    "unique": true,
                    "nullable": false
                  }
                ],
                "plainFields": [
                  {
                    "name": "assigned_at",
                    "type": "datetime",
                    "description": "[Moderator Grant Timestamp] - When moderator role was assigned. Auditing and compliance for all moderator promotions. Normalization: Never holds non-moderator info.",
                    "nullable": false
                  }
                ],
                "uniqueIndexes": [
                  {
                    "fieldNames": [
                      "user_id"
                    ],
                    "description": "Ensures only one moderator assignment can exist per user (requirement: unique role assignment).",
                    "unique": true
                  }
                ],
                "plainIndexes": [],
                "ginIndexes": []
              },
              {
                "name": "discussionboard_admin",
                "description": "[Admin Role] - Implements system administrator privilege assignment as per 03_discussionboard_user_roles_and_permissions.md and 02_discussionboard_functional_requirements.md (platform-wide management, user promotion/role reassignment). All platform-wide permissions are checked against this table. 3NF-compliant: only houses admin assignment data, never duplicates user or moderator/member details.\n\nKey relationships: 1:1 to discussionboard_user; referenced when determining admin dashboard/settings access. All permission checks reference this mapping.\nSpecial behaviors: Admin can demote/promote all other roles. Auditing via assignment timestamps. No transitive/admin details outside this entry.",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "description": "[Primary Key] - Surrogate key for admin role assignment. Allows auditing/change tracking for all promotions/demotions. Clean, normalized design.",
                  "isId": true,
                  "isGenerated": true
                },
                "foreignFields": [
                  {
                    "name": "user_id",
                    "type": "uuid",
                    "description": "[Foreign Key: discussionboard_user] - User assigned admin authority. Enforced 1:1 by unique index, not nullable. 3NF: Never duplicated.",
                    "relation": {
                      "targetModel": "discussionboard_user",
                      "fkField": "user_id",
                      "name": "admin_user_id"
                    },
                    "unique": true,
                    "nullable": false
                  }
                ],
                "plainFields": [
                  {
                    "name": "assigned_at",
                    "type": "datetime",
                    "description": "[Admin Assignment Timestamp] - When the admin role was assigned; fulfills trace and change-audit requirements for privileged role escalation. Normalized by excluding non-admin details.",
                    "nullable": false
                  }
                ],
                "uniqueIndexes": [
                  {
                    "fieldNames": [
                      "user_id"
                    ],
                    "description": "Guarantees unique admin assignment per user. No duplicate admin roles for a single account.",
                    "unique": true
                  }
                ],
                "plainIndexes": [],
                "ginIndexes": []
              }
            ]
          },
          {
            "filename": "schema-02-board.prisma",
            "namespace": "DiscussionBoard",
            "models": [
              {
                "name": "discussionboard_post",
                "description": "[Discussion Posts] - Implements Sections 3.2 (Creating & Managing Posts) and 3.1 (User Registration & Authentication) as detailed in the requirements (02_discussionboard_functional_requirements.md).\n\nStores the main discussion board contributions (posts), tracking author, category, creation/edit timestamps, and supports soft deletion. Ensures strict 3NF: posts do not contain redundant author or category data, referencing normalized member and category tables instead. Usage example: a post about economic policy references its author (member) and its category (e.g., 'Economics') without duplicating user/category info.\n\nKey relationships: discussionboard_member (author), discussionboard_post_category (category), attachments, tags, etc. Special behaviors: soft-delete is tracked via deleted_at; author/category FKs are required and not nullable.",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "description": "[Primary Key] - Unique identifier for each post as mandated for atomic access and historical auditing (Section 3.2)."
                },
                "foreignFields": [
                  {
                    "name": "author_member_id",
                    "type": "uuid",
                    "description": "[Author Member FK] - References the member authoring the post (see Section 3.2 in requirements). Maintains normalization by only referencing the member, not duplicating member data. E.g., used for showing all posts by a member.",
                    "relation": {
                      "name": "member",
                      "model": "discussionboard_member",
                      "targetModel": "discussionboard_member",
                      "fields": [
                        "author_member_id"
                      ],
                      "references": [
                        "id"
                      ],
                      "onDelete": "Restrict"
                    },
                    "unique": false,
                    "nullable": false
                  },
                  {
                    "name": "category_id",
                    "type": "uuid",
                    "description": "[Category FK] - Associates post with a category (Section 3.2). Provides link to normalized category without duplication of data. E.g., 'Politics' or 'Economics'.",
                    "relation": {
                      "name": "category",
                      "model": "discussionboard_post_category",
                      "targetModel": "discussionboard_post_category",
                      "fields": [
                        "category_id"
                      ],
                      "references": [
                        "id"
                      ],
                      "onDelete": "Restrict"
                    },
                    "unique": false,
                    "nullable": false
                  }
                ],
                "plainFields": [
                  {
                    "name": "title",
                    "type": "string",
                    "description": "[Post Title] - Implements discussion title per Section 3.2. Used for search/listings. Always non-null, atomic text.",
                    "nullable": false
                  },
                  {
                    "name": "body",
                    "type": "string",
                    "description": "[Post Content Body] - Main text body, supports formatting. Fully normalized; not nullable.",
                    "nullable": false
                  },
                  {
                    "name": "created_at",
                    "type": "datetime",
                    "description": "[Creation Timestamp] - Records when the post was made (Section 3.2, 3.9).",
                    "nullable": false
                  },
                  {
                    "name": "updated_at",
                    "type": "datetime",
                    "description": "[Update Timestamp] - Last time this post was edited (Section 3.2). Used for audit/versioning display.",
                    "nullable": false
                  },
                  {
                    "name": "deleted_at",
                    "type": "datetime",
                    "description": "[Deleted Timestamp] - Soft-deletion timestamp if post is hidden/deleted by member or moderator. Nullable if not deleted.",
                    "nullable": true
                  }
                ],
                "uniqueIndexes": [
                  {
                    "fieldNames": [
                      "author_member_id",
                      "created_at"
                    ],
                    "unique": true,
                    "description": "[Unique Author-Time] - Ensures each post from a member is unique for the same timestamp (prevents accidental duplicate submissions)."
                  }
                ],
                "plainIndexes": [
                  {
                    "fieldNames": [
                      "created_at"
                    ],
                    "description": "[Created At Index] - Optimizes queries by post date, aiding latest/sorted feed operations."
                  },
                  {
                    "fieldNames": [
                      "category_id",
                      "created_at"
                    ],
                    "description": "[Category/Date Index] - For filtering posts by category and sorting by recency."
                  }
                ],
                "ginIndexes": [
                  {
                    "fieldName": "title",
                    "description": "[Title Trigram Search] - Enables full-text, fuzzy search for post titles (Section 3.8)."
                  },
                  {
                    "fieldName": "body",
                    "description": "[Body Trigram Search] - Enables search by content body text as required in Section 3.8."
                  }
                ]
              },
              {
                "name": "discussionboard_post_category",
                "description": "[Discussion Post Categories] - Implements Section 3.2 and 3.6 (Admin). Categories like 'Politics' or 'Economics'—referenced by posts, maintained separately for normalization. Usage: admins manage categories; posts always reference a category. Special: cannot delete if referenced by a post.",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "description": "[Primary Key] - Uniquely identifies category; normalization ensures only atomic references used."
                },
                "foreignFields": [],
                "plainFields": [
                  {
                    "name": "name",
                    "type": "string",
                    "description": "[Category Name] - Per Section 3.2; e.g., 'Economics'. Used for filters/views. Unique and non-null.",
                    "nullable": false
                  },
                  {
                    "name": "description",
                    "type": "string",
                    "description": "[Category Description] - Extended human-readable info for admin/member UIs. Optional, normalized.",
                    "nullable": true
                  }
                ],
                "uniqueIndexes": [
                  {
                    "fieldNames": [
                      "name"
                    ],
                    "unique": true,
                    "description": "[Unique Category Name] - Prevents duplicate category names (admin controlled)."
                  }
                ],
                "plainIndexes": [],
                "ginIndexes": []
              },
              {
                "name": "discussionboard_post_tag",
                "description": "[Discussion Post Tags] - Implements tagging per Section 3.2 to enable content filtering/search without denormalization. Each tag is stored atomically and referenced by M:N join (not included here). E.g., post tagged 'inflation'. Usage: tag table ensures uniqueness; pure key-name pairs only.",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "description": "[Primary Key] - Unique atomic tag identity."
                },
                "foreignFields": [],
                "plainFields": [
                  {
                    "name": "name",
                    "type": "string",
                    "description": "[Tag Name] - Required label, e.g. 'inflation'. Uniqueness enforced; normalized/atomic.",
                    "nullable": false
                  }
                ],
                "uniqueIndexes": [
                  {
                    "fieldNames": [
                      "name"
                    ],
                    "unique": true,
                    "description": "[Unique Tag Name] - Disallows duplicate tags globally."
                  }
                ],
                "plainIndexes": [],
                "ginIndexes": []
              },
              {
                "name": "discussionboard_post_attachment",
                "description": "[Post Attachments] - Implements file/image management for posts (Section 3.2). Each attachment references one post, with file URL/type metadata. Maintains normalization with atomic URI/type; all files managed outside main post record; supports cascading delete on post removal.",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "description": "[Primary Key] - Unique attachment identity for tracking and referencing."
                },
                "foreignFields": [
                  {
                    "name": "post_id",
                    "type": "uuid",
                    "description": "[Post FK] - Attachment's parent post (Section 3.2). Referenced (not duplicated) for strict normalization. Cascades on post delete.",
                    "relation": {
                      "name": "post",
                      "model": "discussionboard_post",
                      "targetModel": "discussionboard_post",
                      "fields": [
                        "post_id"
                      ],
                      "references": [
                        "id"
                      ],
                      "onDelete": "Cascade"
                    },
                    "unique": false,
                    "nullable": false
                  }
                ],
                "plainFields": [
                  {
                    "name": "file_url",
                    "type": "uri",
                    "description": "[Attachment File URL] - Atomic URI (e.g., https://cdn.site/file.jpg). Required.",
                    "nullable": false
                  },
                  {
                    "name": "file_type",
                    "type": "string",
                    "description": "[Attachment MIME Type] - e.g. 'image/jpeg'. Required; normalized for filters.",
                    "nullable": false
                  },
                  {
                    "name": "uploaded_at",
                    "type": "datetime",
                    "description": "[Upload Timestamp] - Required point-in-time, supporting audit and ordering.",
                    "nullable": false
                  }
                ],
                "uniqueIndexes": [
                  {
                    "fieldNames": [
                      "post_id",
                      "file_url"
                    ],
                    "unique": true,
                    "description": "[Post-File Uniqueness] - Only one file with same URI per post."
                  }
                ],
                "plainIndexes": [
                  {
                    "fieldNames": [
                      "uploaded_at"
                    ],
                    "description": "[Upload Time Index] - Audit, management, and chronological sort optimization."
                  }
                ],
                "ginIndexes": []
              }
            ]
          },
          {
            "filename": "schema-03-comment.prisma",
            "namespace": "Comments",
            "models": [
              {
                "name": "discussionboard_comments",
                "description": "[Comment Model] - This implements the comment functionality as outlined under functional requirements (sections 3.3, 3.4, 3.5) and supports threaded/nested comments for both 'Politics' and 'Economics' board categories. \n\nAllows users to participate in ongoing discussions by adding, editing, and deleting their own comments, with support for threaded conversations, reporting, moderation, and in-line engagement (likes). Maintains 3NF by separating this entity from users, posts, likes, and reports. For example, a user can comment on a post, reply to other comments (recursively), and have their comment moderated or reported independently. \n\nKey relationships: Links to posts, users (authors), and parent comment (if threaded). Supports foreign keys to reporting, moderation, and liking mechanisms in other models.\nSpecial behaviors: Enforces only one parent per comment for tree structure, supports soft deletion, and maintains a precise audit trail without any pre-calculated metrics.",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "isId": true,
                  "isGenerated": true,
                  "description": "[Comment Primary Key] - Implements the unique identification (see 3NF and requirements mapping).\n\nGlobally unique identifier for each comment. Ensures 1NF uniqueness, enables precise referencing, and guarantees auditability and traceability across threads and moderation actions.\n"
                },
                "foreignFields": [
                  {
                    "name": "post_id",
                    "type": "uuid",
                    "relation": {
                      "name": "post",
                      "targetModel": "discussionboard_post"
                    },
                    "description": "[Foreign Key: Post] - Implements the post-comment linkage as per requirement 3.3.\n\nAssociates each comment with its parent post (mandatory). Ensures 2NF by linking to the full post entity, not duplicating post info. For example, when displaying a comment, the app can show the related post's category or title.\n",
                    "nullable": false,
                    "unique": false
                  },
                  {
                    "name": "author_id",
                    "type": "uuid",
                    "relation": {
                      "name": "author",
                      "targetModel": "discussionboard_user"
                    },
                    "description": "[Foreign Key: Author] - Implements comment authorship per requirements 3.3, 3.4.\n\nLinks the comment directly to its user (author). Maintains normalization by not storing author details redundantly; user details are referenced via foreign key.\n",
                    "nullable": false,
                    "unique": false
                  },
                  {
                    "name": "parent_comment_id",
                    "type": "uuid",
                    "relation": {
                      "name": "parent_comment",
                      "targetModel": "discussionboard_comments",
                      "mappingName": "recursive"
                    },
                    "description": "[Foreign Key: Parent Comment] - Supports threaded/reply comments as per 3.3.\n\nSelf-referential link for comment thread nesting (optional; null for root-level comments). Maintains normalization by linking only to one parent, supporting recursive conversation trees without redundancy.\n",
                    "nullable": true,
                    "unique": false
                  }
                ],
                "plainFields": [
                  {
                    "name": "content",
                    "type": "string",
                    "description": "[Comment Content] - Implements actual user message storage per requirement 3.3.\n\nHolds the content/message of the comment. Ensures normalization by storing only the user's entry, not derived or precomputed data. For example, users can edit this field within role constraints. No denormalized summary or rendering is stored in regular tables.\n",
                    "nullable": false
                  },
                  {
                    "name": "is_edited",
                    "type": "boolean",
                    "description": "[Edit Tracking Flag] - Supports edit-audit functionality per requirement 3.3 (editing own comments).\n\nBoolean indicating whether comment content has been modified since creation. Ensures normalization by storing only atomic edit status; edit history belongs in a separate snapshot/audit table if needed.\n",
                    "nullable": false
                  },
                  {
                    "name": "is_deleted",
                    "type": "boolean",
                    "description": "[Soft Delete Flag] - Enables reversible deletion per 3.3 and moderation (3.5).\n\nFlags comments as deleted (soft) without actual removal from database. Supports auditability and role-based recovery, ensuring no information loss for moderation history.\n",
                    "nullable": false
                  },
                  {
                    "name": "created_at",
                    "type": "datetime",
                    "description": "[Creation Timestamp] - Records when the comment was posted (requirements 3.3, 3.9).\n\nStores creation time of the comment. Ensures normalization as an atomic, non-derived value, and provides audit trail foundation.\n",
                    "nullable": false
                  },
                  {
                    "name": "updated_at",
                    "type": "datetime",
                    "description": "[Last Update Timestamp] - Tracks edits, moderation actions as in 3.3, 3.5, 3.9.\n\nRecords latest update timestamp (edit, moderation, recovery, etc). Maintains audit and traceability without derived/polyglot aggregates.\n",
                    "nullable": false
                  }
                ],
                "uniqueIndexes": [],
                "plainIndexes": [
                  {
                    "name": "idx_post_id_created_at",
                    "fieldNames": [
                      "post_id",
                      "created_at"
                    ],
                    "description": "[Post-Time Index] - Optimizes queries retrieving all comments in a specific post by time order (requirement 3.3, 3.8).\n\nSpeeds up browse, search, and notification checks for new comments in a thread/post."
                  },
                  {
                    "name": "idx_author_id_created_at",
                    "fieldNames": [
                      "author_id",
                      "created_at"
                    ],
                    "description": "[Author-Activity Index] - Supports queries for all comments made by a user, ordered by recency (requirements 3.3, 3.9, audit log).\n\nOptimizes moderation/history/audit flows."
                  },
                  {
                    "name": "idx_parent_comment_id",
                    "fieldNames": [
                      "parent_comment_id"
                    ],
                    "description": "[Threaded Comment Index] - Accelerates fetching of replies for a given comment (requirements 3.3 - threaded comments).\n\nImproves efficiency of displaying nested conversation trees."
                  }
                ],
                "ginIndexes": [
                  {
                    "name": "gin_content",
                    "fieldName": "content",
                    "description": "[Content Search GIN Index] - Enables full-text and fuzzy search over comment text per 3.8.\n\nImproves performance for search/discovery and moderating/reporting workflows (requirement 3.8)."
                  }
                ]
              }
            ]
          },
          {
            "filename": "schema-04-interaction.prisma",
            "namespace": "Interaction",
            "models": [
              {
                "name": "discussionboard_likes",
                "description": "User Content Like - This implements the user engagement and interaction requirements (see sections 3.4 and 3.8 of the requirements analysis).\n\nEnables the platform’s core like/voting system, allowing users to like posts or comments once, supporting quantifiable content popularity and user involvement. Maintains strict 3NF normalization by separating atomic like events, with no aggregate/calculated fields present. For example, when a user clicks 'like' on a post, a record is created here, which can later be used for denormalized like counts in mv_ tables only.\n\nKey relationships: references to both posts and comments for polymorphic liking, user reference, and indexes support multi-content type lookups.\nSpecial behaviors: Uniqueness enforced so a user may only like a given post OR comment once, but not both at once (polymorphic uniqueness). All deletions are soft-deletes for audit/compliant removal tracking.",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "description": "Primary Key - Implements entity uniqueness. Each like interaction is uniquely identified for precise auditing and event tracking.",
                  "isId": true,
                  "dbType": "uuid"
                },
                "foreignFields": [
                  {
                    "name": "user_id",
                    "type": "uuid",
                    "description": "User Foreign Key - Implements user traceability for interaction, mapping to discussionboard_user. Ensures which member created this like. For example, required when listing personal likes. Not nullable/required.",
                    "relation": {
                      "name": "user",
                      "targetModel": "discussionboard_user"
                    },
                    "nullable": false,
                    "unique": false
                  },
                  {
                    "name": "post_id",
                    "type": "uuid",
                    "description": "Polymorphic Foreign Key: Post - Implements which post the like is attached to (where applicable), mapping to discussionboard_post. NULL if the like is for a comment. Enforces atomic association. For example, a user clicking like on a post will set this field. Nullable for polymorphism.",
                    "relation": {
                      "name": "post",
                      "targetModel": "discussionboard_post"
                    },
                    "nullable": true,
                    "unique": false
                  },
                  {
                    "name": "comment_id",
                    "type": "uuid",
                    "description": "Polymorphic Foreign Key: Comment - Implements comment interaction scope, mapping to discussionboard_comments. NULL if the like is for a post. For example, liking a comment sets this field. Supports normalization and polymorphic association.",
                    "relation": {
                      "name": "comment",
                      "targetModel": "discussionboard_comments"
                    },
                    "nullable": true,
                    "unique": false
                  }
                ],
                "plainFields": [
                  {
                    "name": "created_at",
                    "type": "datetime",
                    "description": "Creation Timestamp - Implements requirement for auditable, timestamped actions. When the like event was created. Ensures atomicity by being non-null and standard across events.",
                    "nullable": false
                  },
                  {
                    "name": "deleted_at",
                    "type": "datetime",
                    "description": "Soft-delete Timestamp - Enables reversible removal of like event in compliance with audit logging. Null if like is active, set if removed. Maintains normalization; never used as a logical indicator, only as an event timestamp.",
                    "nullable": true
                  }
                ],
                "uniqueIndexes": [
                  {
                    "fieldNames": [
                      "user_id",
                      "post_id"
                    ],
                    "description": "Unique constraint to ensure a user can only like a given post once. Polymorphic enforcement for post-like scenario. Both null and non-null combinations (with comment_id) prevent double-liking content.",
                    "unique": true
                  },
                  {
                    "fieldNames": [
                      "user_id",
                      "comment_id"
                    ],
                    "description": "Unique constraint to ensure a user can only like a given comment once and cannot like both a post and comment with overlapping scope.",
                    "unique": true
                  }
                ],
                "plainIndexes": [
                  {
                    "fieldNames": [
                      "post_id"
                    ],
                    "description": "Supports fast aggregation and lookup of likes per post, useful for showing like counts on post lists."
                  },
                  {
                    "fieldNames": [
                      "comment_id"
                    ],
                    "description": "Supports lookup and aggregation on comments, for fast rendering of popular/recently-liked comments."
                  }
                ],
                "ginIndexes": []
              },
              {
                "name": "discussionboard_reports",
                "description": "User Content Report - This implements abuse/spam reporting requirements from sections 3.4, 3.5, 3.6, and 3.9.\n\nAllows users to report specific posts or comments for guideline violations, abuse, or spam. Maintains 3NF normalization by capturing only atomic reporting events (no report counts or summaries in table). For example, when a user flags a comment or post for review, a record is created here, with reason captured, for review by moderators/admins via reporting tools.\n\nKey relationships: references user (reporter), post (or comment), and enables polymorphic targeting of reports. Moderation actions are maintained elsewhere. Enforces business rules for no duplicate reports from the same user for the same content and logs reporting context for trace/audit.\nSpecial behaviors: Uniqueness constraints prevent double-reporting by same user per content type. Deletions are soft-deletes for compliance and history retention.",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "description": "Primary Key - Uniquely identifies each report for compliance, auditing, moderation, and traceability.",
                  "isId": true,
                  "dbType": "uuid"
                },
                "foreignFields": [
                  {
                    "name": "user_id",
                    "type": "uuid",
                    "description": "Reporter Foreign Key - References the user (from discussionboard_user) who submitted the report. Maintains accountability and supports user-based moderation analytics. Not nullable; always required.",
                    "relation": {
                      "name": "user",
                      "targetModel": "discussionboard_user"
                    },
                    "nullable": false,
                    "unique": false
                  },
                  {
                    "name": "post_id",
                    "type": "uuid",
                    "description": "Polymorphic Foreign Key: Post - Identifies the post that is being reported (if applicable). NULL if report targets a comment. Ensures correct, strictly normalized associativity, and prevents overlap with comment_id.",
                    "relation": {
                      "name": "post",
                      "targetModel": "discussionboard_post"
                    },
                    "nullable": true,
                    "unique": false
                  },
                  {
                    "name": "comment_id",
                    "type": "uuid",
                    "description": "Polymorphic Foreign Key: Comment - Identifies the comment being reported (if any). NULL if post is targeted. Supports polymorphic reporting of both content types. Enforces correct normalization.",
                    "relation": {
                      "name": "comment",
                      "targetModel": "discussionboard_comments"
                    },
                    "nullable": true,
                    "unique": false
                  }
                ],
                "plainFields": [
                  {
                    "name": "reason_code",
                    "type": "string",
                    "description": "Short Reason Code - Implements requirements for capturing structured event context (e.g. 'spam', 'abuse', 'off-topic'). Enables filtering and workflow logic. Follows a pre-set value list handled in application/business logic. 3NF maintained as reason text is never duplicated (codes only here).",
                    "nullable": false
                  },
                  {
                    "name": "reason_details",
                    "type": "string",
                    "description": "Detailed Reason (optional) - Implements reporting context capture for case auditing, moderation analytics, and transparency. Allows user to enter details or evidence. Nullable for cases where only the code is needed.",
                    "nullable": true
                  },
                  {
                    "name": "created_at",
                    "type": "datetime",
                    "description": "Report Creation Timestamp - Indicates when the report was made. Implements audit trail (requirement: 3.9 and moderation review within 24hr SLA). Non-null, ensures each report is audited with precise event time.",
                    "nullable": false
                  },
                  {
                    "name": "deleted_at",
                    "type": "datetime",
                    "description": "Soft-delete Timestamp - Enables soft-removal (not physical deletion) of reports for moderation or review compliance. Null if active, non-null when deleted. Ensures normalization and auditable workflow.",
                    "nullable": true
                  }
                ],
                "uniqueIndexes": [
                  {
                    "fieldNames": [
                      "user_id",
                      "post_id"
                    ],
                    "description": "Prevents a user from reporting the same post multiple times. Enforced for audit compliance and abuse protection.",
                    "unique": true
                  },
                  {
                    "fieldNames": [
                      "user_id",
                      "comment_id"
                    ],
                    "description": "Ensures no duplicate report by a single user against the same comment. Enforced for platform health and fair review.",
                    "unique": true
                  }
                ],
                "plainIndexes": [
                  {
                    "fieldNames": [
                      "post_id"
                    ],
                    "description": "Support efficient moderation dashboards (list/filter reports by post)."
                  },
                  {
                    "fieldNames": [
                      "comment_id"
                    ],
                    "description": "For moderation workflow lists to fetch all reports involving a particular comment."
                  }
                ],
                "ginIndexes": []
              }
            ]
          },
          {
            "filename": "schema-05-moderation.prisma",
            "namespace": "Moderation",
            "models": [
              {
                "name": "discussionboard_moderation_action",
                "description": "[Moderation Actions Log] - This implements the moderation action audit requirement from the requirements documentation (sections 02.3.5, 02.3.6, and 03).\nRecords every direct moderation activity such as hide, delete, warning issuance, and user muting/ban performed by moderators or admins. Maintains 3NF compliance by referencing target users, actions, posts, and comments instead of duplicating their data. For example, every time a moderator deletes a post or issues a warning, a new record is created here linking who did what, to which item, and why.\nKey relationships: links to moderator/admin (actor), target user, affected post/comment (if applicable).\nSpecial behaviors: strictly append-only (no updates); supports complete audit trail of moderation interventions.",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "isId": true,
                  "isGenerated": true,
                  "description": "[Primary key] - Standard internal identifier. Uniquely identifies each moderation action; ensures atomic representation of each occurrence."
                },
                "foreignFields": [
                  {
                    "name": "actor_id",
                    "type": "uuid",
                    "relation": {
                      "name": "actor",
                      "targetModel": "discussionboard_user",
                      "mappingName": "discussionboard_moderation_action_of_actor_id"
                    },
                    "description": "[Action originator] - Implements the 'who performed the action' requirement. References the moderator or admin user account executing the moderation. Ensures normalization by linking to user, not duplicating actor data. For example, when moderator #1234 deletes a comment, this field is #1234.",
                    "isRequired": true,
                    "unique": false,
                    "nullable": false
                  },
                  {
                    "name": "target_user_id",
                    "type": "uuid",
                    "relation": {
                      "name": "target_user",
                      "targetModel": "discussionboard_user",
                      "mappingName": "discussionboard_moderation_action_of_target_user_id"
                    },
                    "description": "[User targeted] - Fulfills the 'target of moderation' tracking requirement. Links to the affected user account (e.g., reported member). Ensures single source of truth for user data and enables traceability. For example, for a ban of user X, this references user X.",
                    "isRequired": true,
                    "unique": false,
                    "nullable": false
                  },
                  {
                    "name": "post_id",
                    "type": "uuid",
                    "relation": {
                      "name": "moderated_post",
                      "targetModel": "discussionboard_post"
                    },
                    "description": "[Affected post] - Implements moderation linkage for post-level actions. References the post if this action affects a specific post. Normalization preserved (nullable, as not all actions are post-related). For example, deleting a post links here; issuing a ban does not.",
                    "isRequired": false,
                    "unique": false,
                    "nullable": true
                  },
                  {
                    "name": "comment_id",
                    "type": "uuid",
                    "relation": {
                      "name": "moderated_comment",
                      "targetModel": "discussionboard_comments"
                    },
                    "description": "[Affected comment] - Moderation linkage to comment. References the comment if the action is on a specific comment. Kept nullable to preserve 3NF and flexibility. For example, hiding a comment references its id here.",
                    "isRequired": false,
                    "unique": false,
                    "nullable": true
                  }
                ],
                "plainFields": [
                  {
                    "name": "action_type",
                    "type": "string",
                    "isRequired": true,
                    "nullable": false,
                    "description": "[Action type] - Implements requirement to enumerate distinct moderation activities. Type of moderation: e.g., 'delete_post', 'hide_comment', etc. Maintains normalization."
                  },
                  {
                    "name": "reason",
                    "type": "string",
                    "isRequired": true,
                    "nullable": false,
                    "description": "[Reason] - Fulfills rationale for moderation. Stores moderator/admin's reason/comment. Ensures accountability, searchable, used for appeals."
                  },
                  {
                    "name": "created_at",
                    "type": "datetime",
                    "isRequired": true,
                    "nullable": false,
                    "description": "[Timestamp] - Implements time-based audit tracking. True creation time of the action record, guarantees traceability."
                  }
                ],
                "uniqueIndexes": [],
                "plainIndexes": [
                  {
                    "fieldNames": [
                      "actor_id",
                      "created_at"
                    ],
                    "description": "[Actor-chronological index] - For moderator/admin activity logs sorted by time."
                  },
                  {
                    "fieldNames": [
                      "target_user_id",
                      "created_at"
                    ],
                    "description": "[Target user moderation history] - Fast lookup of all actions against a user, time-ordered."
                  }
                ],
                "ginIndexes": []
              },
              {
                "name": "discussionboard_report_review",
                "description": "[Report Review Log] - Implements requirements for moderation report review workflow (sections 02.3.4, 02.3.5, 03).\nTracks moderator or admin handling of user-submitted reports on posts/comments. Maintains 3NF by referencing report, reviewer, affected post/comment, and action taken. For example, when a moderator reviews a reported post and marks it as 'resolved,' a record is created here linking to all relevant entities.\nKey relationships: links to the report, reviewer, optionally post/comment.\nSpecial behaviors: append-only, supports full reporting workflow and audit.",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "isId": true,
                  "isGenerated": true,
                  "description": "[Primary key] - Unique identifier for report reviews."
                },
                "foreignFields": [
                  {
                    "name": "report_id",
                    "type": "uuid",
                    "relation": {
                      "name": "report",
                      "targetModel": "discussionboard_reports"
                    },
                    "description": "[The report being reviewed] - Links to a specific user report for moderation review.",
                    "isRequired": true,
                    "unique": false,
                    "nullable": false
                  },
                  {
                    "name": "reviewer_id",
                    "type": "uuid",
                    "relation": {
                      "name": "reviewer",
                      "targetModel": "discussionboard_user"
                    },
                    "description": "[Moderator/admin reviewer] - References user carrying out the review.",
                    "isRequired": true,
                    "unique": false,
                    "nullable": false
                  },
                  {
                    "name": "post_id",
                    "type": "uuid",
                    "relation": {
                      "name": "reviewed_post",
                      "targetModel": "discussionboard_post"
                    },
                    "description": "[Reviewed post] - Links reviewed post, nullable because not all reports are about posts.",
                    "isRequired": false,
                    "unique": false,
                    "nullable": true
                  },
                  {
                    "name": "comment_id",
                    "type": "uuid",
                    "relation": {
                      "name": "reviewed_comment",
                      "targetModel": "discussionboard_comments"
                    },
                    "description": "[Reviewed comment] - Links reviewed comment, nullable because not all reports are about comments.",
                    "isRequired": false,
                    "unique": false,
                    "nullable": true
                  }
                ],
                "plainFields": [
                  {
                    "name": "review_status",
                    "type": "string",
                    "isRequired": true,
                    "nullable": false,
                    "description": "[Outcome status] - Status for reviewed reports: e.g., 'resolved', 'rejected', 'pending'."
                  },
                  {
                    "name": "moderator_comment",
                    "type": "string",
                    "isRequired": false,
                    "nullable": true,
                    "description": "[Review notes] - Optional comments from reviewer."
                  },
                  {
                    "name": "reviewed_at",
                    "type": "datetime",
                    "isRequired": true,
                    "nullable": false,
                    "description": "[Review timestamp] - Auditable time of moderation review."
                  }
                ],
                "uniqueIndexes": [
                  {
                    "fieldNames": [
                      "report_id"
                    ],
                    "unique": true,
                    "description": "[Unique per report] - Guarantees report can only be reviewed once."
                  }
                ],
                "plainIndexes": [
                  {
                    "fieldNames": [
                      "reviewer_id",
                      "reviewed_at"
                    ],
                    "description": "[Reviewer history] - Query all reviews by a moderator/admin in order."
                  }
                ],
                "ginIndexes": []
              },
              {
                "name": "discussionboard_warning",
                "description": "[Warnings Issued Log] - Implements moderator warning history per requirements (sections 02.3.5, 02.3.6, 03).\nStores warnings given by moderators/admins to users for guideline-violating behavior. Maintains 3NF by linking recipient, issuer, and optionally the relevant post/comment. For example, when a moderator issues a warning for an offensive comment, that instance is logged here.\nKey relationships: issued_by (moderator/admin), issued_to (target user), post/comment (context, nullable).\nSpecial behaviors: historical only (warnings are never updated, only issued).",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "isId": true,
                  "isGenerated": true,
                  "description": "[Primary key] - Globally unique identifier of each warning."
                },
                "foreignFields": [
                  {
                    "name": "issued_by_id",
                    "type": "uuid",
                    "relation": {
                      "name": "issuer",
                      "targetModel": "discussionboard_user",
                      "mappingName": "discussionboard_warning_of_issued_by_id"
                    },
                    "description": "[Issuer] - Moderator/admin user issuing the warning.",
                    "isRequired": true,
                    "unique": false,
                    "nullable": false
                  },
                  {
                    "name": "issued_to_id",
                    "type": "uuid",
                    "relation": {
                      "name": "recipient",
                      "targetModel": "discussionboard_user",
                      "mappingName": "discussionboard_warning_of_issued_to_id"
                    },
                    "description": "[Recipient] - User who receives the warning.",
                    "isRequired": true,
                    "unique": false,
                    "nullable": false
                  },
                  {
                    "name": "post_id",
                    "type": "uuid",
                    "relation": {
                      "name": "warning_post",
                      "targetModel": "discussionboard_post"
                    },
                    "description": "[Related post] - Cause for warning (optional, nullable).",
                    "isRequired": false,
                    "unique": false,
                    "nullable": true
                  },
                  {
                    "name": "comment_id",
                    "type": "uuid",
                    "relation": {
                      "name": "warning_comment",
                      "targetModel": "discussionboard_comments"
                    },
                    "description": "[Related comment] - Cause for warning (optional, nullable).",
                    "isRequired": false,
                    "unique": false,
                    "nullable": true
                  }
                ],
                "plainFields": [
                  {
                    "name": "warning_type",
                    "type": "string",
                    "isRequired": true,
                    "nullable": false,
                    "description": "[Type of warning] - Categorical reason: e.g., 'abuse', 'spam', etc."
                  },
                  {
                    "name": "message",
                    "type": "string",
                    "isRequired": true,
                    "nullable": false,
                    "description": "[Moderator message] - Human-explained rationale."
                  },
                  {
                    "name": "issued_at",
                    "type": "datetime",
                    "isRequired": true,
                    "nullable": false,
                    "description": "[Issue timestamp] - The date/time warning was given."
                  }
                ],
                "uniqueIndexes": [],
                "plainIndexes": [
                  {
                    "fieldNames": [
                      "issued_to_id",
                      "issued_at"
                    ],
                    "description": "[User warning history] - Find all warnings for a user time-ordered."
                  },
                  {
                    "fieldNames": [
                      "issued_by_id",
                      "issued_at"
                    ],
                    "description": "[Issuer moderation activity] - Which moderator issued which warnings, ordered."
                  }
                ],
                "ginIndexes": []
              },
              {
                "name": "discussionboard_ban",
                "description": "[User Ban Log] - This model realizes the user suspension/ban requirements (sections 02.3.5, 02.3.6, 03).\nRecords every instance of an account being banned or muted, whether temporarily or permanently, by moderator/admin decision. Maintains 3NF by relating only to ban actors and affected users, no calculated ban metrics.\nKey relationships: 'banned_by_id' (moderator/admin), 'banned_user_id' (target member), warning reference for context, no circular dependencies.\nSpecial behaviors: all bans are point-in-time records, may be queried for active status by expiry date.",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "isId": true,
                  "isGenerated": true,
                  "description": "[Primary key] - Unique ban instance ID; ensures each ban/mute event is singular and traceable."
                },
                "foreignFields": [
                  {
                    "name": "banned_user_id",
                    "type": "uuid",
                    "model": "discussionboard_user",
                    "relation": {
                      "name": "banned_user",
                      "fields": [
                        "banned_user_id"
                      ],
                      "references": [
                        "id"
                      ],
                      "targetModel": "discussionboard_user",
                      "onDelete": "Restrict",
                      "mappingName": "discussionboard_ban_of_banned_user_id"
                    },
                    "isRequired": true,
                    "unique": false,
                    "nullable": false,
                    "description": "[Banned user] - Who is subjected to the ban/mute, referencing the user entity."
                  },
                  {
                    "name": "banned_by_id",
                    "type": "uuid",
                    "model": "discussionboard_user",
                    "relation": {
                      "name": "ban_actor",
                      "fields": [
                        "banned_by_id"
                      ],
                      "references": [
                        "id"
                      ],
                      "targetModel": "discussionboard_user",
                      "onDelete": "Restrict",
                      "mappingName": "discussionboard_ban_of_banned_by_id"
                    },
                    "isRequired": true,
                    "unique": false,
                    "nullable": false,
                    "description": "[Moderator/admin] - Initiating user performing the ban/mute."
                  },
                  {
                    "name": "warning_id",
                    "type": "uuid",
                    "model": "discussionboard_warning",
                    "relation": {
                      "name": "related_warning",
                      "fields": [
                        "warning_id"
                      ],
                      "references": [
                        "id"
                      ],
                      "targetModel": "discussionboard_warning",
                      "onDelete": "SetNull"
                    },
                    "isRequired": false,
                    "unique": false,
                    "nullable": true,
                    "description": "[Related warning] - Optionally reference a specific prior warning that resulted in the ban/mute."
                  }
                ],
                "plainFields": [
                  {
                    "name": "ban_type",
                    "type": "string",
                    "isRequired": true,
                    "nullable": false,
                    "description": "[Ban type] - Type category; e.g., 'mute', 'temp_ban', 'perm_ban', etc."
                  },
                  {
                    "name": "reason",
                    "type": "string",
                    "isRequired": true,
                    "nullable": false,
                    "description": "[Ban reason] - Human-entered explanation for audit, traceability, and user appeals."
                  },
                  {
                    "name": "issued_at",
                    "type": "datetime",
                    "isRequired": true,
                    "nullable": false,
                    "description": "[Ban start time] - When ban was placed."
                  },
                  {
                    "name": "expires_at",
                    "type": "datetime",
                    "isRequired": false,
                    "nullable": true,
                    "description": "[Ban expiry] - When unban occurs (nullable for permanent bans)."
                  }
                ],
                "uniqueIndexes": [],
                "plainIndexes": [
                  {
                    "fieldNames": [
                      "banned_user_id",
                      "issued_at"
                    ],
                    "description": "[User ban history] - Chronological history of bans/mutes for a user."
                  },
                  {
                    "fieldNames": [
                      "banned_by_id",
                      "issued_at"
                    ],
                    "description": "[Moderator/admin ban log] - Track who issued bans/mutes over time."
                  }
                ],
                "ginIndexes": []
              }
            ]
          },
          {
            "filename": "schema-06-notification.prisma",
            "namespace": "Notification",
            "models": [
              {
                "name": "discussionboard_notification",
                "description": "[Notification delivery and history] - This implements the 'User Notifications' and system-triggered alert requirements from the functional requirements (Section 3.7).\n\nThis table records each notification sent to users (members, moderators, admins) regarding activity on posts, comments, moderator actions, and system events. Maintains full normalization (3NF) by storing atomic notification data and strictly referencing user and activity entities. For example, when a user receives a reply to their comment or a moderator action on their post, a new record is created here and references the relevant entities.\n\nKey relationships: References recipient user ({@link discussionboard_user}), optional linkage to post ({@link discussionboard_post}) or comment ({@link discussionboard_comments}), and moderator/admin actor when relevant. \nSpecial behaviors: Supports targeting individual users; system messages have nullable activity references. All user/system notifications are auditable. No denormalized or calculated fields.",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "description": "[Primary key] - Implements unique identification of each notification. Ensures atomic records. For example, used to reference or audit notification events.",
                  "nullable": false,
                  "unique": true,
                  "id": true
                },
                "foreignFields": [
                  {
                    "name": "recipient_user_id",
                    "type": "uuid",
                    "description": "[Notification recipient] - Implements which user receives the notification, mapped to requirements for personalized notifications. For example, used to display notifications on user dashboard. Normalization: ensures recipient is atomically referenced and avoids denormalization. REQUIRED.",
                    "nullable": false,
                    "unique": false,
                    "relation": {
                      "type": "belongsTo",
                      "targetModel": "discussionboard_user",
                      "fields": [
                        "recipient_user_id"
                      ],
                      "targetFields": [
                        "id"
                      ],
                      "name": "recipient_user",
                      "mappingName": "discussionboard_notification_of_recipient_user_id"
                    }
                  },
                  {
                    "name": "related_post_id",
                    "type": "uuid",
                    "description": "[Related post] - Associates notification with a post if applicable (e.g., reply, like on post). Fully normalized by optional reference. For example, used when notifying about replies or moderation of a post.",
                    "nullable": true,
                    "unique": false,
                    "relation": {
                      "type": "belongsTo",
                      "targetModel": "discussionboard_post",
                      "fields": [
                        "related_post_id"
                      ],
                      "targetFields": [
                        "id"
                      ],
                      "name": "related_post"
                    }
                  },
                  {
                    "name": "related_comment_id",
                    "type": "uuid",
                    "description": "[Related comment] - Associates notification with a comment if applicable (e.g., reply to comment, moderation). Normalized as optional reference. For example, used for notifications about comment mentions.",
                    "nullable": true,
                    "unique": false,
                    "relation": {
                      "type": "belongsTo",
                      "targetModel": "discussionboard_comments",
                      "fields": [
                        "related_comment_id"
                      ],
                      "targetFields": [
                        "id"
                      ],
                      "name": "related_comment"
                    }
                  },
                  {
                    "name": "actor_user_id",
                    "type": "uuid",
                    "description": "[Notification actor/user] - (Optional) The user who triggered this notification (e.g., who liked/commented, moderator/admin who performed action). If the event is system-triggered, this is null. For example, used for 'X replied to your post.' Ensures actor is atomically referenced, prevents denormalization.",
                    "nullable": true,
                    "unique": false,
                    "relation": {
                      "type": "belongsTo",
                      "targetModel": "discussionboard_user",
                      "fields": [
                        "actor_user_id"
                      ],
                      "targetFields": [
                        "id"
                      ],
                      "name": "actor_user",
                      "mappingName": "discussionboard_notification_of_actor_user_id"
                    }
                  }
                ],
                "plainFields": [
                  {
                    "name": "type",
                    "type": "string",
                    "description": "[Notification type] - Classifies the type of notification in accordance with Section 3.7's events (e.g., 'reply', 'like', 'moderator_action', 'system_message', etc.). Fully normalized. For example, enables UI filtering and template selection. Constraint: limited to allowed notification types via application logic.",
                    "nullable": false
                  },
                  {
                    "name": "message",
                    "type": "string",
                    "description": "[Notification body] - Human-readable message content sent to user. Implements functional requirement for notifications to explain events. Maintains normalization by storing only atomic message text; templates and aggregation are managed elsewhere. For example, 'Alice replied to your post.'",
                    "nullable": false
                  },
                  {
                    "name": "is_read",
                    "type": "boolean",
                    "description": "[Read/unread flag] - Tracks whether the notification has been marked as read by the recipient, as required by notification preference and in-app UX. Normalized as a pure flag. For example, unread messages appear in notification dropdown. Constraint: only toggled by recipient.",
                    "nullable": false
                  },
                  {
                    "name": "created_at",
                    "type": "datetime",
                    "description": "[Notification creation time] - Implements audit and sorting requirements for notification recency. Ensures full normalization; atomic timestamp. For example, used to order notifications in UI and for cleanup logic.",
                    "nullable": false
                  }
                ],
                "uniqueIndexes": [
                  {
                    "name": "unique_notification_per_event",
                    "fields": [
                      "recipient_user_id",
                      "type",
                      "related_post_id",
                      "related_comment_id",
                      "actor_user_id",
                      "created_at"
                    ],
                    "fieldNames": [
                      "recipient_user_id",
                      "type",
                      "related_post_id",
                      "related_comment_id",
                      "actor_user_id",
                      "created_at"
                    ],
                    "description": "[Business constraint] - Prevents duplicate notifications for the exact same event and recipient at the same timestamp. Ensures that accidental re-emission does not spam users.",
                    "unique": true
                  }
                ],
                "plainIndexes": [
                  {
                    "name": "idx_recipient_created_at",
                    "fields": [
                      "recipient_user_id",
                      "created_at"
                    ],
                    "fieldNames": [
                      "recipient_user_id",
                      "created_at"
                    ],
                    "description": "[Performance] - Optimizes queries to fetch notifications for a user in chronological order."
                  }
                ],
                "ginIndexes": []
              },
              {
                "name": "discussionboard_notification_preference",
                "description": "[User notification preferences] - Implements the notification preference system specified in requirements Section 3.7, giving users fine-grained control over what notifications they receive and how. All data is fully normalized.\n\nBusiness purpose: Enables per-user customization (mute, enable, push preference, etc.) for different notification types and channels. For example, a member might mute 'like' notifications but enable 'moderator_action' notifications on mobile.\n\nTechnical context: Direct link to each user ({@link discussionboard_user}), with one row per user (enforced by a unique constraint). No denormalization.\n\nUsage example: Used when generating notifications or respecting user muting/settings for different event types.\n\nSpecial behaviors: All boolean flags, atomic, fully normalized. No computed columns.",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "description": "[Primary key] - Implements unique identification for each user's notification preference record. Normalized; required for foreign key relationships and referencing.",
                  "nullable": false,
                  "unique": true,
                  "id": true
                },
                "foreignFields": [
                  {
                    "name": "user_id",
                    "type": "uuid",
                    "description": "[User owning preferences] - Implements one-to-one mapping from user to notification preferences, as required by the per-user customization use case. Fully normalized: enforced by unique constraint. For example, fetching preferences when user changes settings. Enforces referential integrity; on user deletion, preference row is cleaned up.\n\nSpecial behavior: unique per user.",
                    "nullable": false,
                    "unique": true,
                    "relation": {
                      "type": "belongsTo",
                      "targetModel": "discussionboard_user",
                      "fields": [
                        "user_id"
                      ],
                      "targetFields": [
                        "id"
                      ],
                      "name": "user"
                    }
                  }
                ],
                "plainFields": [
                  {
                    "name": "notify_reply",
                    "type": "boolean",
                    "description": "[Reply notification toggle] - User's option to receive notifications about direct replies. Implements user preference granularity requirement. For example, if false, the user does not get reply-related notifications. Fully normalized, no calculation.",
                    "nullable": false
                  },
                  {
                    "name": "notify_like",
                    "type": "boolean",
                    "description": "[Like notification toggle] - User's choice to receive/not receive notifications when their post or comment is liked. Maintains normalization. Example: toggling off keeps the user from being notified for likes.",
                    "nullable": false
                  },
                  {
                    "name": "notify_moderator_action",
                    "type": "boolean",
                    "description": "[Moderator action notification toggle] - Implements ability for users to be alerted when a moderator acts on their content. Normalization ensured. For example, disables notifications for moderation unless true.",
                    "nullable": false
                  },
                  {
                    "name": "notify_system_message",
                    "type": "boolean",
                    "description": "[System message notification toggle] - Whether user receives platform-wide messages or announcements. Normalization ensured. For example, used for site policy change notifications.",
                    "nullable": false
                  }
                ],
                "uniqueIndexes": [
                  {
                    "name": "unique_user_preference",
                    "fields": [
                      "user_id"
                    ],
                    "fieldNames": [
                      "user_id"
                    ],
                    "description": "[Business constraint] - Each user can only have one notification preference record, guaranteeing strict 1:1 mapping with user.",
                    "unique": true
                  }
                ],
                "plainIndexes": [],
                "ginIndexes": []
              }
            ]
          },
          {
            "filename": "schema-07-admin.prisma",
            "namespace": "Admin",
            "models": [
              {
                "name": "discussionboard_audit_log",
                "description": "[Audit Logging for Sensitive Actions] - This implements the audit logging and traceability requirements from the user management and security sections, specifically from 'Audit Logging' in the User Roles & Permissions and 'Access & Security' in the Functional Requirements documents. \n\nAllows full traceability and accountability across admin and privileged actions (e.g., role changes, bans, moderation actions). Maintains full 3NF normalization by separating audit trail details from direct business data, storing only atomic data and foreign key references. For example, every time a ban is issued, or a user changes role, an entry is created here independently of the action's core data tables.\n\nKey relationships: references the user (actor) performing the action, the affected user (target), and provides linkage via entity_type/entity_id for polymorphic connections to the target business object. \nSpecial behaviors: Should be written only by internal privileged actions, not by user-driven business flows. Designed for audit and compliance reviews. No calculated fields, strictly normalized.",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "isId": true,
                  "isGenerated": true,
                  "description": "[Primary Key] - Implements identity and uniqueness for each audit log entry. Fulfills the uniqueness requirement per audit record. Ensures normalization by enabling atomic audit entries. Always generated as a UUID."
                },
                "foreignFields": [
                  {
                    "name": "actor_user_id",
                    "type": "uuid",
                    "references": "discussionboard_user",
                    "isRequired": true,
                    "nullable": false,
                    "unique": false,
                    "relation": {
                      "sourceField": "actor_user_id",
                      "targetModel": "discussionboard_user",
                      "targetField": "id",
                      "name": "fk_audit_actor_user",
                      "mappingName": "discussionboard_audit_log_of_actor_user_id"
                    },
                    "description": "[Action Actor] - Implements the requirement to store the user responsible for each privileged action. Links to the user who performed the action. Ensures 3NF by storing only the user id as a reference; all other actor information must be joined as needed. For example, references the admin who issued a ban."
                  },
                  {
                    "name": "target_user_id",
                    "type": "uuid",
                    "references": "discussionboard_user",
                    "isRequired": false,
                    "nullable": true,
                    "unique": false,
                    "relation": {
                      "sourceField": "target_user_id",
                      "targetModel": "discussionboard_user",
                      "targetField": "id",
                      "name": "fk_audit_target_user",
                      "mappingName": "discussionboard_audit_log_of_target_user_id"
                    },
                    "description": "[Action Target] - Fulfills the requirement to capture who is affected by the action, if applicable (e.g., in bans, warnings, or demotions). Nullable for actions targeting system settings rather than specific users. Keeps direct reference only to target user id to stay normalized."
                  }
                ],
                "plainFields": [
                  {
                    "name": "action_type",
                    "type": "string",
                    "isRequired": true,
                    "nullable": false,
                    "description": "[Action Type] - Implements the action classification requirement. Business meaning: describes the category (e.g., 'ban', 'role_change', 'settings_update'). Ensures normalization by not encoding business logic; only keeps atomic values (string), never details or summaries."
                  },
                  {
                    "name": "entity_type",
                    "type": "string",
                    "isRequired": true,
                    "nullable": false,
                    "description": "[Entity Type] - Implements the need for polymorphic audit trail. Records the type of entity affected (e.g., 'user', 'post', 'comment', 'setting'). Ensures 3NF by representing entity type as atomic data, not as a foreign key or denormalized structure."
                  },
                  {
                    "name": "entity_id",
                    "type": "uuid",
                    "isRequired": false,
                    "nullable": true,
                    "description": "[Entity Reference] - Fulfills requirement to record which object was modified. Nullable for actions that do not target a specific entity. Ensures normalization by storing atomic reference only."
                  },
                  {
                    "name": "action_detail",
                    "type": "string",
                    "isRequired": false,
                    "nullable": true,
                    "description": "[Action Detail] - Implements extensible context for audit records. Stores optional contextual details, such as old/new role in a role change. Ensures normalization by keeping these as atomic strings, not by embedding object graphs."
                  },
                  {
                    "name": "created_at",
                    "type": "datetime",
                    "isRequired": true,
                    "nullable": false,
                    "description": "[Timestamp] - Implements audit trail requirement for time traceability. Business meaning: when the privileged action took place. Ensures normalization by using a single atomic datetime. Example: records ban date or role assignment time."
                  }
                ],
                "uniqueIndexes": [],
                "plainIndexes": [
                  {
                    "name": "idx_audit_actor",
                    "fieldNames": [
                      "actor_user_id",
                      "created_at"
                    ],
                    "description": "Composite index for efficiently querying audit trails by actor and recency."
                  },
                  {
                    "name": "idx_audit_target",
                    "fieldNames": [
                      "target_user_id",
                      "created_at"
                    ],
                    "description": "Composite index for audit lookups by affected user and time."
                  },
                  {
                    "name": "idx_audit_entity",
                    "fieldNames": [
                      "entity_type",
                      "entity_id"
                    ],
                    "description": "Index for efficiently filtering audit logs by business object (polymorphic linkage)."
                  }
                ],
                "ginIndexes": [
                  {
                    "fieldName": "action_detail",
                    "description": "GIN index for searching textual context in audit details (e.g., searching all role change comments or context data)."
                  }
                ]
              },
              {
                "name": "discussionboard_platform_setting",
                "description": "[Platform Configuration Management] - This implements requirements for platform-wide admin-configurable settings, drawn from 'Administration' in both the overview and functional requirements documents (see Admin: Platform Configuration, and Functionality: Platform-wide Settings). \n\nSolves the business problem of enabling admin users to manage platform-wide booleans, options, and policies in a normalized way. \nMaintains 3NF by storing one setting per row, keyed by setting name, value, and type—never groups or arrays. For example, \"MaxPostAttachments\" or \"EnableModerationQueue\" are single atomic settings stored here.\n\nKey relationships: No foreign keys; settings are manipulated by admin flows only. \nSpecial behaviors: Names are unique; mutating a setting should update only the single normalized row. No pre-calculated values or summaries—strictly atomic and normalized.",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "isId": true,
                  "isGenerated": true,
                  "description": "[Primary Key] - Unique identifier for each platform setting. 3NF compliance: prevents duplicate or ambiguous settings by row identity."
                },
                "foreignFields": [],
                "plainFields": [
                  {
                    "name": "name",
                    "type": "string",
                    "isRequired": true,
                    "nullable": false,
                    "description": "[Setting Name] - Implements the need to uniquely identify every platform setting. Should be a descriptive string (e.g., 'EnableModerationQueue'). Ensures normalization by not encoding arrays or objects, only simple strings."
                  },
                  {
                    "name": "value",
                    "type": "string",
                    "isRequired": true,
                    "nullable": false,
                    "description": "[Setting Value] - Implements storing current configuration/data. Can hold any atomic value as string (booleans='true'/'false', numbers as string, etc.). Ensures 3NF by keeping each value atomic and not embedding larger config structures."
                  },
                  {
                    "name": "type",
                    "type": "string",
                    "isRequired": true,
                    "nullable": false,
                    "description": "[Data Type Marker] - Fulfills the requirement to distinguish setting value interpretation (e.g., 'boolean', 'int', 'string'). Maintains normalization by storing type marker atomically. Example: allows parsing and validation at the application level."
                  },
                  {
                    "name": "updated_at",
                    "type": "datetime",
                    "isRequired": true,
                    "nullable": false,
                    "description": "[Last Updated Timestamp] - Supports auditability for platform changes. Maintains normalization by using a single atomic datetime. For example, allows the system to show when moderation settings were last updated."
                  }
                ],
                "uniqueIndexes": [
                  {
                    "name": "uix_setting_name",
                    "fieldNames": [
                      "name"
                    ],
                    "unique": true,
                    "description": "Uniqueness enforcement—no duplicate settings by name allowed."
                  }
                ],
                "plainIndexes": [],
                "ginIndexes": []
              }
            ]
          }
        ]
      }
    },
    "schemas": {
      "schema-01-core.prisma": "/// [User Master Record] - This implements the foundational user management requirement noted in the requirements analysis (02_discussionboard_functional_requirements.md Section 3.1: User Registration & Authentication). \n///\n/// This model captures core authentication and identity data for all discussion board participants—regardless of role (member, moderator, admin). Maintains strict 3NF compliance by isolating authentication data (email, credential info, status) from profile and role specialization, preventing duplication or transitive dependencies. For example, all roles reference this entity, and profile/details are managed in separate tables.\n///\n/// Key relationships: Links 1:1 to discussionboard_user_profile. Related 1:N with role specializations (member/moderator/admin), posts, comments, and all historical user actions.\n/// Special behaviors: Only one email per user. Role management handled via join/role specialization tables. Soft deactivation supported by 'is_active' flag.\n///\n/// @namespace Core\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_user {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary Key] - Globally unique identifier for the user. Implements the requirements for traceable, referential user identity across all core tables (see 02_discussionboard_functional_requirements.md). 3NF enforced as surrogate key. For example, all foreign key relationships use this for core user reference.\n  id String @id @db.Uuid\n  \n  /// [Authentication Email] - Implements unique login credential per user requirement. Business meaning: Used for login, notifications, and password recovery. Ensures normalization by existing only on user root entity and not duplicated elsewhere. Enforced unique constraint. E.g., user login process.\n  email String\n  \n  /// [Password Hash] - Securely stores password hash for authentication workflow per 02_discussionboard_functional_requirements.md. Ensures separation from credential-independent profile info. Used for login verification.\n  password_hash String\n  \n  /// [Active Status] - Tracks whether the user account is enabled or deactivated (requirement: Admin can deactivate). Normalization: not duplicated elsewhere. For account suspension procedures.\n  is_active Boolean\n  \n  /// [Creation Timestamp] - When user joined. Required for audit and analytics (see success criteria in 01_discussionboard_overview_and_scope.md). Used in user growth/activation KPIs.\n  created_at DateTime @db.Timestamptz\n  \n  /// [Last Update Timestamp] - Business: Audit and admin review. Ensures clean separation—no transitive dependency.\n  updated_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  discussionboard_user_profile discussionboard_user_profile?\n  discussionboard_member discussionboard_member?\n  discussionboard_moderator discussionboard_moderator?\n  discussionboard_admin discussionboard_admin?\n  discussionboard_comments discussionboard_comments[]\n  discussionboard_likes discussionboard_likes[]\n  discussionboard_reports discussionboard_reports[]\n  discussionboard_moderation_action_of_actor_id discussionboard_moderation_action[] @relation(\"discussionboard_moderation_action_of_actor_id\")\n  discussionboard_moderation_action_of_target_user_id discussionboard_moderation_action[] @relation(\"discussionboard_moderation_action_of_target_user_id\")\n  discussionboard_report_review discussionboard_report_review[]\n  discussionboard_warning_of_issued_by_id discussionboard_warning[] @relation(\"discussionboard_warning_of_issued_by_id\")\n  discussionboard_warning_of_issued_to_id discussionboard_warning[] @relation(\"discussionboard_warning_of_issued_to_id\")\n  discussionboard_ban_of_banned_user_id discussionboard_ban[] @relation(\"discussionboard_ban_of_banned_user_id\")\n  discussionboard_ban_of_banned_by_id discussionboard_ban[] @relation(\"discussionboard_ban_of_banned_by_id\")\n  discussionboard_notification_of_recipient_user_id discussionboard_notification[] @relation(\"discussionboard_notification_of_recipient_user_id\")\n  discussionboard_notification_of_actor_user_id discussionboard_notification[] @relation(\"discussionboard_notification_of_actor_user_id\")\n  discussionboard_notification_preference discussionboard_notification_preference?\n  discussionboard_audit_log_of_actor_user_id discussionboard_audit_log[] @relation(\"discussionboard_audit_log_of_actor_user_id\")\n  discussionboard_audit_log_of_target_user_id discussionboard_audit_log[] @relation(\"discussionboard_audit_log_of_target_user_id\")\n  \n  @@unique([email])\n  @@index([is_active])\n}\n\n/// [User Profile] - Implements user display/personalization requirements (02_discussionboard_functional_requirements.md, 3.1) distinct from root authentication. Holds display name, optional avatar, and bio—strictly 3NF as contact details, credentials, role, and settings are elsewhere. Used for member directories, post attributions, notifications.\n///\n/// Key relationships: 1:1 with discussionboard_user (foreign key = unique). Not duplicated in role tables.\n/// Special behaviors: 1:1 uniqueness enforced. All user display data (NOT used for authentication).\n///\n/// @namespace Core\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_user_profile {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary Key] - Globally unique identifier for the profile. Surrogate key for normalization. Ensures all profile retrieval and modifications are auditable.\n  id String @id @db.Uuid\n  \n  /// [Foreign Key: discussionboard_user] - User this profile belongs to. Implements 1:1 user-profile relationship (requirement: one profile per account, never duplicated). Enforces normalization. E.g., to get profile when showing post author.\n  user_id String @db.Uuid\n  \n  /// [Display Name] - User's chosen name, shown publicly on posts/comments. Not used for authentication. Maintains 3NF by separating identity from credential tables. E.g., 'JohnDoe'.\n  display_name String\n  \n  /// [Avatar Image] - Optional user image link. Not duplicated anywhere. Maintains normalized structure. Used on post lists/user bios.\n  avatar_url String? @db.VarChar(80000)\n  \n  /// [User Bio] - Self-description or background, used on profiles/mouseover displays. Normalization: No business logic outside of display.\n  bio String?\n  \n  //----\n  // RELATIONS\n  //----\n  user_profile_user_id discussionboard_user @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  \n  @@unique([user_id])\n  @@index([display_name])\n  @@index([bio(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// [Member Role] - Implements domain model for general user participation rights (see user roles in 03_discussionboard_user_roles_and_permissions.md and participation requirements in 02_discussionboard_functional_requirements.md 3.2-3.4). This captures all accounts with base-level actions (posting, commenting, liking). All users with platform presence are members. 3NF: Only stores role-specific facts, no credential/profile fields duplicated.\n///\n/// Key relationships: 1:1 with discussionboard_user. Related 1:N to posts, comments, likes, reports. Role is atomic, all privileges via explicit role presence.\n/// Special behaviors: Role assignment/demotion flows strictly auditable via foreign key.\n///\n/// @namespace Core\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_member {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary Key] - Each member has a dedicated, globally unique role assignment entry for traceability (even if admin or moderator). Enforces 3NF by using only a surrogate key.\n  id String @id @db.Uuid\n  \n  /// [Foreign Key: discussionboard_user] - Account assigned this member role. Enforces 1:1 mapping, not duplicated for other roles. Needed for permissions matrix. E.g., to check if a user can create posts.\n  user_id String @db.Uuid\n  \n  /// [Membership Grant Timestamp] - When membership began. Required for audits, demotions, or calculating active duration. Maintains third normal form by not holding user or credential data.\n  granted_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  member_user_id discussionboard_user @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  \n  discussionboard_post discussionboard_post[]\n  \n  @@unique([user_id])\n}\n\n/// [Moderator Role] - Implements elevated moderator assignment for trusted members, referencing business rules in 03_discussionboard_user_roles_and_permissions.md and moderation functions in 02_discussionboard_functional_requirements.md 3.5. Only users explicitly assigned this role are allowed moderation tools. 3NF-preserving: only stores moderator-specific info (no duplication of credentials/profile).\n///\n/// Key relationships: 1:1 to discussionboard_user (atomic assignment). Related 1:N to reports, moderation actions.\n/// Special behaviors: Grant/revoke flows auditable. All permission checks cleanly reference this mapping.\n///\n/// @namespace Core\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_moderator {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary Key] - Unique identifier for moderator role assignment. Enforces traceability, audit, and clean separation. Used for all moderator-level permission checks.\n  id String @id @db.Uuid\n  \n  /// [Foreign Key: discussionboard_user] - User granted moderator authority (must also be a member). 1:1 constraint by unique index. Never duplicated nor nullable. E.g., lookup for report review access.\n  user_id String @db.Uuid\n  \n  /// [Moderator Grant Timestamp] - When moderator role was assigned. Auditing and compliance for all moderator promotions. Normalization: Never holds non-moderator info.\n  assigned_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  moderator_user_id discussionboard_user @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  \n  @@unique([user_id])\n}\n\n/// [Admin Role] - Implements system administrator privilege assignment as per 03_discussionboard_user_roles_and_permissions.md and 02_discussionboard_functional_requirements.md (platform-wide management, user promotion/role reassignment). All platform-wide permissions are checked against this table. 3NF-compliant: only houses admin assignment data, never duplicates user or moderator/member details.\n///\n/// Key relationships: 1:1 to discussionboard_user; referenced when determining admin dashboard/settings access. All permission checks reference this mapping.\n/// Special behaviors: Admin can demote/promote all other roles. Auditing via assignment timestamps. No transitive/admin details outside this entry.\n///\n/// @namespace Core\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_admin {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary Key] - Surrogate key for admin role assignment. Allows auditing/change tracking for all promotions/demotions. Clean, normalized design.\n  id String @id @db.Uuid\n  \n  /// [Foreign Key: discussionboard_user] - User assigned admin authority. Enforced 1:1 by unique index, not nullable. 3NF: Never duplicated.\n  user_id String @db.Uuid\n  \n  /// [Admin Assignment Timestamp] - When the admin role was assigned; fulfills trace and change-audit requirements for privileged role escalation. Normalized by excluding non-admin details.\n  assigned_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  admin_user_id discussionboard_user @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  \n  @@unique([user_id])\n}",
      "schema-02-board.prisma": "/// [Discussion Posts] - Implements Sections 3.2 (Creating & Managing Posts) and 3.1 (User Registration & Authentication) as detailed in the requirements (02_discussionboard_functional_requirements.md).\n///\n/// Stores the main discussion board contributions (posts), tracking author, category, creation/edit timestamps, and supports soft deletion. Ensures strict 3NF: posts do not contain redundant author or category data, referencing normalized member and category tables instead. Usage example: a post about economic policy references its author (member) and its category (e.g., 'Economics') without duplicating user/category info.\n///\n/// Key relationships: discussionboard_member (author), discussionboard_post_category (category), attachments, tags, etc. Special behaviors: soft-delete is tracked via deleted_at; author/category FKs are required and not nullable.\n///\n/// @namespace DiscussionBoard\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_post {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary Key] - Unique identifier for each post as mandated for atomic access and historical auditing (Section 3.2).\n  id String @id @db.Uuid\n  \n  /// [Author Member FK] - References the member authoring the post (see Section 3.2 in requirements). Maintains normalization by only referencing the member, not duplicating member data. E.g., used for showing all posts by a member.\n  author_member_id String @db.Uuid\n  \n  /// [Category FK] - Associates post with a category (Section 3.2). Provides link to normalized category without duplication of data. E.g., 'Politics' or 'Economics'.\n  category_id String @db.Uuid\n  \n  /// [Post Title] - Implements discussion title per Section 3.2. Used for search/listings. Always non-null, atomic text.\n  title String\n  \n  /// [Post Content Body] - Main text body, supports formatting. Fully normalized; not nullable.\n  body String\n  \n  /// [Creation Timestamp] - Records when the post was made (Section 3.2, 3.9).\n  created_at DateTime @db.Timestamptz\n  \n  /// [Update Timestamp] - Last time this post was edited (Section 3.2). Used for audit/versioning display.\n  updated_at DateTime @db.Timestamptz\n  \n  /// [Deleted Timestamp] - Soft-deletion timestamp if post is hidden/deleted by member or moderator. Nullable if not deleted.\n  deleted_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  member discussionboard_member @relation(fields: [author_member_id], references: [id], onDelete: Cascade)\n  category discussionboard_post_category @relation(fields: [category_id], references: [id], onDelete: Cascade)\n  \n  discussionboard_post_attachment discussionboard_post_attachment[]\n  discussionboard_comments discussionboard_comments[]\n  discussionboard_likes discussionboard_likes[]\n  discussionboard_reports discussionboard_reports[]\n  discussionboard_moderation_action discussionboard_moderation_action[]\n  discussionboard_report_review discussionboard_report_review[]\n  discussionboard_warning discussionboard_warning[]\n  discussionboard_notification discussionboard_notification[]\n  \n  @@unique([author_member_id, created_at])\n  @@index([created_at])\n  @@index([category_id, created_at])\n  @@index([title(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n  @@index([body(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// [Discussion Post Categories] - Implements Section 3.2 and 3.6 (Admin). Categories like 'Politics' or 'Economics'—referenced by posts, maintained separately for normalization. Usage: admins manage categories; posts always reference a category. Special: cannot delete if referenced by a post.\n///\n/// @namespace DiscussionBoard\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_post_category {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary Key] - Uniquely identifies category; normalization ensures only atomic references used.\n  id String @id @db.Uuid\n  \n  /// [Category Name] - Per Section 3.2; e.g., 'Economics'. Used for filters/views. Unique and non-null.\n  name String\n  \n  /// [Category Description] - Extended human-readable info for admin/member UIs. Optional, normalized.\n  description String?\n  \n  //----\n  // RELATIONS\n  //----\n  discussionboard_post discussionboard_post[]\n  \n  @@unique([name])\n}\n\n/// [Discussion Post Tags] - Implements tagging per Section 3.2 to enable content filtering/search without denormalization. Each tag is stored atomically and referenced by M:N join (not included here). E.g., post tagged 'inflation'. Usage: tag table ensures uniqueness; pure key-name pairs only.\n///\n/// @namespace DiscussionBoard\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_post_tag {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary Key] - Unique atomic tag identity.\n  id String @id @db.Uuid\n  \n  /// [Tag Name] - Required label, e.g. 'inflation'. Uniqueness enforced; normalized/atomic.\n  name String\n  \n  //----\n  // RELATIONS\n  //----\n  @@unique([name])\n}\n\n/// [Post Attachments] - Implements file/image management for posts (Section 3.2). Each attachment references one post, with file URL/type metadata. Maintains normalization with atomic URI/type; all files managed outside main post record; supports cascading delete on post removal.\n///\n/// @namespace DiscussionBoard\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_post_attachment {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary Key] - Unique attachment identity for tracking and referencing.\n  id String @id @db.Uuid\n  \n  /// [Post FK] - Attachment's parent post (Section 3.2). Referenced (not duplicated) for strict normalization. Cascades on post delete.\n  post_id String @db.Uuid\n  \n  /// [Attachment File URL] - Atomic URI (e.g., https://cdn.site/file.jpg). Required.\n  file_url String @db.VarChar(80000)\n  \n  /// [Attachment MIME Type] - e.g. 'image/jpeg'. Required; normalized for filters.\n  file_type String\n  \n  /// [Upload Timestamp] - Required point-in-time, supporting audit and ordering.\n  uploaded_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  post discussionboard_post @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  \n  @@unique([post_id, file_url])\n  @@index([uploaded_at])\n}",
      "schema-03-comment.prisma": "/// [Comment Model] - This implements the comment functionality as outlined under functional requirements (sections 3.3, 3.4, 3.5) and supports threaded/nested comments for both 'Politics' and 'Economics' board categories. \n///\n/// Allows users to participate in ongoing discussions by adding, editing, and deleting their own comments, with support for threaded conversations, reporting, moderation, and in-line engagement (likes). Maintains 3NF by separating this entity from users, posts, likes, and reports. For example, a user can comment on a post, reply to other comments (recursively), and have their comment moderated or reported independently. \n///\n/// Key relationships: Links to posts, users (authors), and parent comment (if threaded). Supports foreign keys to reporting, moderation, and liking mechanisms in other models.\n/// Special behaviors: Enforces only one parent per comment for tree structure, supports soft deletion, and maintains a precise audit trail without any pre-calculated metrics.\n///\n/// @namespace Comments\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_comments {\n  //----\n  // COLUMNS\n  //----\n  /// [Comment Primary Key] - Implements the unique identification (see 3NF and requirements mapping).\n  ///\n  /// Globally unique identifier for each comment. Ensures 1NF uniqueness, enables precise referencing, and guarantees auditability and traceability across threads and moderation actions.\n  ///\n  id String @id @db.Uuid\n  \n  /// [Foreign Key: Post] - Implements the post-comment linkage as per requirement 3.3.\n  ///\n  /// Associates each comment with its parent post (mandatory). Ensures 2NF by linking to the full post entity, not duplicating post info. For example, when displaying a comment, the app can show the related post's category or title.\n  ///\n  post_id String @db.Uuid\n  \n  /// [Foreign Key: Author] - Implements comment authorship per requirements 3.3, 3.4.\n  ///\n  /// Links the comment directly to its user (author). Maintains normalization by not storing author details redundantly; user details are referenced via foreign key.\n  ///\n  author_id String @db.Uuid\n  \n  /// [Foreign Key: Parent Comment] - Supports threaded/reply comments as per 3.3.\n  ///\n  /// Self-referential link for comment thread nesting (optional; null for root-level comments). Maintains normalization by linking only to one parent, supporting recursive conversation trees without redundancy.\n  ///\n  parent_comment_id String? @db.Uuid\n  \n  /// [Comment Content] - Implements actual user message storage per requirement 3.3.\n  ///\n  /// Holds the content/message of the comment. Ensures normalization by storing only the user's entry, not derived or precomputed data. For example, users can edit this field within role constraints. No denormalized summary or rendering is stored in regular tables.\n  ///\n  content String\n  \n  /// [Edit Tracking Flag] - Supports edit-audit functionality per requirement 3.3 (editing own comments).\n  ///\n  /// Boolean indicating whether comment content has been modified since creation. Ensures normalization by storing only atomic edit status; edit history belongs in a separate snapshot/audit table if needed.\n  ///\n  is_edited Boolean\n  \n  /// [Soft Delete Flag] - Enables reversible deletion per 3.3 and moderation (3.5).\n  ///\n  /// Flags comments as deleted (soft) without actual removal from database. Supports auditability and role-based recovery, ensuring no information loss for moderation history.\n  ///\n  is_deleted Boolean\n  \n  /// [Creation Timestamp] - Records when the comment was posted (requirements 3.3, 3.9).\n  ///\n  /// Stores creation time of the comment. Ensures normalization as an atomic, non-derived value, and provides audit trail foundation.\n  ///\n  created_at DateTime @db.Timestamptz\n  \n  /// [Last Update Timestamp] - Tracks edits, moderation actions as in 3.3, 3.5, 3.9.\n  ///\n  /// Records latest update timestamp (edit, moderation, recovery, etc). Maintains audit and traceability without derived/polyglot aggregates.\n  ///\n  updated_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  post discussionboard_post @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  author discussionboard_user @relation(fields: [author_id], references: [id], onDelete: Cascade)\n  parent_comment discussionboard_comments? @relation(\"recursive\", fields: [parent_comment_id], references: [id], onDelete: Cascade)\n  \n  recursive discussionboard_comments[] @relation(\"recursive\")\n  discussionboard_likes discussionboard_likes[]\n  discussionboard_reports discussionboard_reports[]\n  discussionboard_moderation_action discussionboard_moderation_action[]\n  discussionboard_report_review discussionboard_report_review[]\n  discussionboard_warning discussionboard_warning[]\n  discussionboard_notification discussionboard_notification[]\n  \n  @@index([post_id, created_at])\n  @@index([author_id, created_at])\n  @@index([parent_comment_id])\n  @@index([content(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}",
      "schema-04-interaction.prisma": "/// User Content Like - This implements the user engagement and interaction requirements (see sections 3.4 and 3.8 of the requirements analysis).\n///\n/// Enables the platform’s core like/voting system, allowing users to like posts or comments once, supporting quantifiable content popularity and user involvement. Maintains strict 3NF normalization by separating atomic like events, with no aggregate/calculated fields present. For example, when a user clicks 'like' on a post, a record is created here, which can later be used for denormalized like counts in mv_ tables only.\n///\n/// Key relationships: references to both posts and comments for polymorphic liking, user reference, and indexes support multi-content type lookups.\n/// Special behaviors: Uniqueness enforced so a user may only like a given post OR comment once, but not both at once (polymorphic uniqueness). All deletions are soft-deletes for audit/compliant removal tracking.\n///\n/// @namespace Interaction\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_likes {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key - Implements entity uniqueness. Each like interaction is uniquely identified for precise auditing and event tracking.\n  id String @id @db.Uuid\n  \n  /// User Foreign Key - Implements user traceability for interaction, mapping to discussionboard_user. Ensures which member created this like. For example, required when listing personal likes. Not nullable/required.\n  user_id String @db.Uuid\n  \n  /// Polymorphic Foreign Key: Post - Implements which post the like is attached to (where applicable), mapping to discussionboard_post. NULL if the like is for a comment. Enforces atomic association. For example, a user clicking like on a post will set this field. Nullable for polymorphism.\n  post_id String? @db.Uuid\n  \n  /// Polymorphic Foreign Key: Comment - Implements comment interaction scope, mapping to discussionboard_comments. NULL if the like is for a post. For example, liking a comment sets this field. Supports normalization and polymorphic association.\n  comment_id String? @db.Uuid\n  \n  /// Creation Timestamp - Implements requirement for auditable, timestamped actions. When the like event was created. Ensures atomicity by being non-null and standard across events.\n  created_at DateTime @db.Timestamptz\n  \n  /// Soft-delete Timestamp - Enables reversible removal of like event in compliance with audit logging. Null if like is active, set if removed. Maintains normalization; never used as a logical indicator, only as an event timestamp.\n  deleted_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  user discussionboard_user @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  post discussionboard_post? @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  comment discussionboard_comments? @relation(fields: [comment_id], references: [id], onDelete: Cascade)\n  \n  @@unique([user_id, post_id])\n  @@unique([user_id, comment_id])\n  @@index([post_id])\n  @@index([comment_id])\n}\n\n/// User Content Report - This implements abuse/spam reporting requirements from sections 3.4, 3.5, 3.6, and 3.9.\n///\n/// Allows users to report specific posts or comments for guideline violations, abuse, or spam. Maintains 3NF normalization by capturing only atomic reporting events (no report counts or summaries in table). For example, when a user flags a comment or post for review, a record is created here, with reason captured, for review by moderators/admins via reporting tools.\n///\n/// Key relationships: references user (reporter), post (or comment), and enables polymorphic targeting of reports. Moderation actions are maintained elsewhere. Enforces business rules for no duplicate reports from the same user for the same content and logs reporting context for trace/audit.\n/// Special behaviors: Uniqueness constraints prevent double-reporting by same user per content type. Deletions are soft-deletes for compliance and history retention.\n///\n/// @namespace Interaction\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_reports {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key - Uniquely identifies each report for compliance, auditing, moderation, and traceability.\n  id String @id @db.Uuid\n  \n  /// Reporter Foreign Key - References the user (from discussionboard_user) who submitted the report. Maintains accountability and supports user-based moderation analytics. Not nullable; always required.\n  user_id String @db.Uuid\n  \n  /// Polymorphic Foreign Key: Post - Identifies the post that is being reported (if applicable). NULL if report targets a comment. Ensures correct, strictly normalized associativity, and prevents overlap with comment_id.\n  post_id String? @db.Uuid\n  \n  /// Polymorphic Foreign Key: Comment - Identifies the comment being reported (if any). NULL if post is targeted. Supports polymorphic reporting of both content types. Enforces correct normalization.\n  comment_id String? @db.Uuid\n  \n  /// Short Reason Code - Implements requirements for capturing structured event context (e.g. 'spam', 'abuse', 'off-topic'). Enables filtering and workflow logic. Follows a pre-set value list handled in application/business logic. 3NF maintained as reason text is never duplicated (codes only here).\n  reason_code String\n  \n  /// Detailed Reason (optional) - Implements reporting context capture for case auditing, moderation analytics, and transparency. Allows user to enter details or evidence. Nullable for cases where only the code is needed.\n  reason_details String?\n  \n  /// Report Creation Timestamp - Indicates when the report was made. Implements audit trail (requirement: 3.9 and moderation review within 24hr SLA). Non-null, ensures each report is audited with precise event time.\n  created_at DateTime @db.Timestamptz\n  \n  /// Soft-delete Timestamp - Enables soft-removal (not physical deletion) of reports for moderation or review compliance. Null if active, non-null when deleted. Ensures normalization and auditable workflow.\n  deleted_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  user discussionboard_user @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  post discussionboard_post? @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  comment discussionboard_comments? @relation(fields: [comment_id], references: [id], onDelete: Cascade)\n  \n  discussionboard_report_review discussionboard_report_review[]\n  \n  @@unique([user_id, post_id])\n  @@unique([user_id, comment_id])\n  @@index([post_id])\n  @@index([comment_id])\n}",
      "schema-05-moderation.prisma": "/// [Moderation Actions Log] - This implements the moderation action audit requirement from the requirements documentation (sections 02.3.5, 02.3.6, and 03).\n/// Records every direct moderation activity such as hide, delete, warning issuance, and user muting/ban performed by moderators or admins. Maintains 3NF compliance by referencing target users, actions, posts, and comments instead of duplicating their data. For example, every time a moderator deletes a post or issues a warning, a new record is created here linking who did what, to which item, and why.\n/// Key relationships: links to moderator/admin (actor), target user, affected post/comment (if applicable).\n/// Special behaviors: strictly append-only (no updates); supports complete audit trail of moderation interventions.\n///\n/// @namespace Moderation\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_moderation_action {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary key] - Standard internal identifier. Uniquely identifies each moderation action; ensures atomic representation of each occurrence.\n  id String @id @db.Uuid\n  \n  /// [Action originator] - Implements the 'who performed the action' requirement. References the moderator or admin user account executing the moderation. Ensures normalization by linking to user, not duplicating actor data. For example, when moderator #1234 deletes a comment, this field is #1234.\n  actor_id String @db.Uuid\n  \n  /// [User targeted] - Fulfills the 'target of moderation' tracking requirement. Links to the affected user account (e.g., reported member). Ensures single source of truth for user data and enables traceability. For example, for a ban of user X, this references user X.\n  target_user_id String @db.Uuid\n  \n  /// [Affected post] - Implements moderation linkage for post-level actions. References the post if this action affects a specific post. Normalization preserved (nullable, as not all actions are post-related). For example, deleting a post links here; issuing a ban does not.\n  post_id String? @db.Uuid\n  \n  /// [Affected comment] - Moderation linkage to comment. References the comment if the action is on a specific comment. Kept nullable to preserve 3NF and flexibility. For example, hiding a comment references its id here.\n  comment_id String? @db.Uuid\n  \n  /// [Action type] - Implements requirement to enumerate distinct moderation activities. Type of moderation: e.g., 'delete_post', 'hide_comment', etc. Maintains normalization.\n  action_type String\n  \n  /// [Reason] - Fulfills rationale for moderation. Stores moderator/admin's reason/comment. Ensures accountability, searchable, used for appeals.\n  reason String\n  \n  /// [Timestamp] - Implements time-based audit tracking. True creation time of the action record, guarantees traceability.\n  created_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  actor discussionboard_user @relation(\"discussionboard_moderation_action_of_actor_id\", fields: [actor_id], references: [id], onDelete: Cascade)\n  target_user discussionboard_user @relation(\"discussionboard_moderation_action_of_target_user_id\", fields: [target_user_id], references: [id], onDelete: Cascade)\n  moderated_post discussionboard_post? @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  moderated_comment discussionboard_comments? @relation(fields: [comment_id], references: [id], onDelete: Cascade)\n  \n  @@index([post_id])\n  @@index([comment_id])\n  \n  @@index([actor_id, created_at])\n  @@index([target_user_id, created_at])\n}\n\n/// [Report Review Log] - Implements requirements for moderation report review workflow (sections 02.3.4, 02.3.5, 03).\n/// Tracks moderator or admin handling of user-submitted reports on posts/comments. Maintains 3NF by referencing report, reviewer, affected post/comment, and action taken. For example, when a moderator reviews a reported post and marks it as 'resolved,' a record is created here linking to all relevant entities.\n/// Key relationships: links to the report, reviewer, optionally post/comment.\n/// Special behaviors: append-only, supports full reporting workflow and audit.\n///\n/// @namespace Moderation\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_report_review {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary key] - Unique identifier for report reviews.\n  id String @id @db.Uuid\n  \n  /// [The report being reviewed] - Links to a specific user report for moderation review.\n  report_id String @db.Uuid\n  \n  /// [Moderator/admin reviewer] - References user carrying out the review.\n  reviewer_id String @db.Uuid\n  \n  /// [Reviewed post] - Links reviewed post, nullable because not all reports are about posts.\n  post_id String? @db.Uuid\n  \n  /// [Reviewed comment] - Links reviewed comment, nullable because not all reports are about comments.\n  comment_id String? @db.Uuid\n  \n  /// [Outcome status] - Status for reviewed reports: e.g., 'resolved', 'rejected', 'pending'.\n  review_status String\n  \n  /// [Review notes] - Optional comments from reviewer.\n  moderator_comment String?\n  \n  /// [Review timestamp] - Auditable time of moderation review.\n  reviewed_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  report discussionboard_reports @relation(fields: [report_id], references: [id], onDelete: Cascade)\n  reviewer discussionboard_user @relation(fields: [reviewer_id], references: [id], onDelete: Cascade)\n  reviewed_post discussionboard_post? @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  reviewed_comment discussionboard_comments? @relation(fields: [comment_id], references: [id], onDelete: Cascade)\n  \n  @@index([post_id])\n  @@index([comment_id])\n  \n  @@unique([report_id])\n  @@index([reviewer_id, reviewed_at])\n}\n\n/// [Warnings Issued Log] - Implements moderator warning history per requirements (sections 02.3.5, 02.3.6, 03).\n/// Stores warnings given by moderators/admins to users for guideline-violating behavior. Maintains 3NF by linking recipient, issuer, and optionally the relevant post/comment. For example, when a moderator issues a warning for an offensive comment, that instance is logged here.\n/// Key relationships: issued_by (moderator/admin), issued_to (target user), post/comment (context, nullable).\n/// Special behaviors: historical only (warnings are never updated, only issued).\n///\n/// @namespace Moderation\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_warning {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary key] - Globally unique identifier of each warning.\n  id String @id @db.Uuid\n  \n  /// [Issuer] - Moderator/admin user issuing the warning.\n  issued_by_id String @db.Uuid\n  \n  /// [Recipient] - User who receives the warning.\n  issued_to_id String @db.Uuid\n  \n  /// [Related post] - Cause for warning (optional, nullable).\n  post_id String? @db.Uuid\n  \n  /// [Related comment] - Cause for warning (optional, nullable).\n  comment_id String? @db.Uuid\n  \n  /// [Type of warning] - Categorical reason: e.g., 'abuse', 'spam', etc.\n  warning_type String\n  \n  /// [Moderator message] - Human-explained rationale.\n  message String\n  \n  /// [Issue timestamp] - The date/time warning was given.\n  issued_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  issuer discussionboard_user @relation(\"discussionboard_warning_of_issued_by_id\", fields: [issued_by_id], references: [id], onDelete: Cascade)\n  recipient discussionboard_user @relation(\"discussionboard_warning_of_issued_to_id\", fields: [issued_to_id], references: [id], onDelete: Cascade)\n  warning_post discussionboard_post? @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  warning_comment discussionboard_comments? @relation(fields: [comment_id], references: [id], onDelete: Cascade)\n  \n  discussionboard_ban discussionboard_ban[]\n  \n  @@index([post_id])\n  @@index([comment_id])\n  \n  @@index([issued_to_id, issued_at])\n  @@index([issued_by_id, issued_at])\n}\n\n/// [User Ban Log] - This model realizes the user suspension/ban requirements (sections 02.3.5, 02.3.6, 03).\n/// Records every instance of an account being banned or muted, whether temporarily or permanently, by moderator/admin decision. Maintains 3NF by relating only to ban actors and affected users, no calculated ban metrics.\n/// Key relationships: 'banned_by_id' (moderator/admin), 'banned_user_id' (target member), warning reference for context, no circular dependencies.\n/// Special behaviors: all bans are point-in-time records, may be queried for active status by expiry date.\n///\n/// @namespace Moderation\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_ban {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary key] - Unique ban instance ID; ensures each ban/mute event is singular and traceable.\n  id String @id @db.Uuid\n  \n  /// [Banned user] - Who is subjected to the ban/mute, referencing the user entity.\n  banned_user_id String @db.Uuid\n  \n  /// [Moderator/admin] - Initiating user performing the ban/mute.\n  banned_by_id String @db.Uuid\n  \n  /// [Related warning] - Optionally reference a specific prior warning that resulted in the ban/mute.\n  warning_id String? @db.Uuid\n  \n  /// [Ban type] - Type category; e.g., 'mute', 'temp_ban', 'perm_ban', etc.\n  ban_type String\n  \n  /// [Ban reason] - Human-entered explanation for audit, traceability, and user appeals.\n  reason String\n  \n  /// [Ban start time] - When ban was placed.\n  issued_at DateTime @db.Timestamptz\n  \n  /// [Ban expiry] - When unban occurs (nullable for permanent bans).\n  expires_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  banned_user discussionboard_user @relation(\"discussionboard_ban_of_banned_user_id\", fields: [banned_user_id], references: [id], onDelete: Cascade)\n  ban_actor discussionboard_user @relation(\"discussionboard_ban_of_banned_by_id\", fields: [banned_by_id], references: [id], onDelete: Cascade)\n  related_warning discussionboard_warning? @relation(fields: [warning_id], references: [id], onDelete: Cascade)\n  \n  @@index([warning_id])\n  \n  @@index([banned_user_id, issued_at])\n  @@index([banned_by_id, issued_at])\n}",
      "schema-06-notification.prisma": "/// [Notification delivery and history] - This implements the 'User Notifications' and system-triggered alert requirements from the functional requirements (Section 3.7).\n///\n/// This table records each notification sent to users (members, moderators, admins) regarding activity on posts, comments, moderator actions, and system events. Maintains full normalization (3NF) by storing atomic notification data and strictly referencing user and activity entities. For example, when a user receives a reply to their comment or a moderator action on their post, a new record is created here and references the relevant entities.\n///\n/// Key relationships: References recipient user ({@link discussionboard_user}), optional linkage to post ({@link discussionboard_post}) or comment ({@link discussionboard_comments}), and moderator/admin actor when relevant. \n/// Special behaviors: Supports targeting individual users; system messages have nullable activity references. All user/system notifications are auditable. No denormalized or calculated fields.\n///\n/// @namespace Notification\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_notification {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary key] - Implements unique identification of each notification. Ensures atomic records. For example, used to reference or audit notification events.\n  id String @id @db.Uuid\n  \n  /// [Notification recipient] - Implements which user receives the notification, mapped to requirements for personalized notifications. For example, used to display notifications on user dashboard. Normalization: ensures recipient is atomically referenced and avoids denormalization. REQUIRED.\n  recipient_user_id String @db.Uuid\n  \n  /// [Related post] - Associates notification with a post if applicable (e.g., reply, like on post). Fully normalized by optional reference. For example, used when notifying about replies or moderation of a post.\n  related_post_id String? @db.Uuid\n  \n  /// [Related comment] - Associates notification with a comment if applicable (e.g., reply to comment, moderation). Normalized as optional reference. For example, used for notifications about comment mentions.\n  related_comment_id String? @db.Uuid\n  \n  /// [Notification actor/user] - (Optional) The user who triggered this notification (e.g., who liked/commented, moderator/admin who performed action). If the event is system-triggered, this is null. For example, used for 'X replied to your post.' Ensures actor is atomically referenced, prevents denormalization.\n  actor_user_id String? @db.Uuid\n  \n  /// [Notification type] - Classifies the type of notification in accordance with Section 3.7's events (e.g., 'reply', 'like', 'moderator_action', 'system_message', etc.). Fully normalized. For example, enables UI filtering and template selection. Constraint: limited to allowed notification types via application logic.\n  type String\n  \n  /// [Notification body] - Human-readable message content sent to user. Implements functional requirement for notifications to explain events. Maintains normalization by storing only atomic message text; templates and aggregation are managed elsewhere. For example, 'Alice replied to your post.'\n  message String\n  \n  /// [Read/unread flag] - Tracks whether the notification has been marked as read by the recipient, as required by notification preference and in-app UX. Normalized as a pure flag. For example, unread messages appear in notification dropdown. Constraint: only toggled by recipient.\n  is_read Boolean\n  \n  /// [Notification creation time] - Implements audit and sorting requirements for notification recency. Ensures full normalization; atomic timestamp. For example, used to order notifications in UI and for cleanup logic.\n  created_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  recipient_user discussionboard_user @relation(\"discussionboard_notification_of_recipient_user_id\", fields: [recipient_user_id], references: [id], onDelete: Cascade)\n  related_post discussionboard_post? @relation(fields: [related_post_id], references: [id], onDelete: Cascade)\n  related_comment discussionboard_comments? @relation(fields: [related_comment_id], references: [id], onDelete: Cascade)\n  actor_user discussionboard_user? @relation(\"discussionboard_notification_of_actor_user_id\", fields: [actor_user_id], references: [id], onDelete: Cascade)\n  \n  @@index([related_post_id])\n  @@index([related_comment_id])\n  @@index([actor_user_id])\n  \n  @@unique([recipient_user_id, type, related_post_id, related_comment_id, actor_user_id, created_at])\n  @@index([recipient_user_id, created_at])\n}\n\n/// [User notification preferences] - Implements the notification preference system specified in requirements Section 3.7, giving users fine-grained control over what notifications they receive and how. All data is fully normalized.\n///\n/// Business purpose: Enables per-user customization (mute, enable, push preference, etc.) for different notification types and channels. For example, a member might mute 'like' notifications but enable 'moderator_action' notifications on mobile.\n///\n/// Technical context: Direct link to each user ({@link discussionboard_user}), with one row per user (enforced by a unique constraint). No denormalization.\n///\n/// Usage example: Used when generating notifications or respecting user muting/settings for different event types.\n///\n/// Special behaviors: All boolean flags, atomic, fully normalized. No computed columns.\n///\n/// @namespace Notification\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_notification_preference {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary key] - Implements unique identification for each user's notification preference record. Normalized; required for foreign key relationships and referencing.\n  id String @id @db.Uuid\n  \n  /// [User owning preferences] - Implements one-to-one mapping from user to notification preferences, as required by the per-user customization use case. Fully normalized: enforced by unique constraint. For example, fetching preferences when user changes settings. Enforces referential integrity; on user deletion, preference row is cleaned up.\n  ///\n  /// Special behavior: unique per user.\n  user_id String @db.Uuid\n  \n  /// [Reply notification toggle] - User's option to receive notifications about direct replies. Implements user preference granularity requirement. For example, if false, the user does not get reply-related notifications. Fully normalized, no calculation.\n  notify_reply Boolean\n  \n  /// [Like notification toggle] - User's choice to receive/not receive notifications when their post or comment is liked. Maintains normalization. Example: toggling off keeps the user from being notified for likes.\n  notify_like Boolean\n  \n  /// [Moderator action notification toggle] - Implements ability for users to be alerted when a moderator acts on their content. Normalization ensured. For example, disables notifications for moderation unless true.\n  notify_moderator_action Boolean\n  \n  /// [System message notification toggle] - Whether user receives platform-wide messages or announcements. Normalization ensured. For example, used for site policy change notifications.\n  notify_system_message Boolean\n  \n  //----\n  // RELATIONS\n  //----\n  user discussionboard_user @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  \n  @@unique([user_id])\n}",
      "schema-07-admin.prisma": "/// [Audit Logging for Sensitive Actions] - This implements the audit logging and traceability requirements from the user management and security sections, specifically from 'Audit Logging' in the User Roles & Permissions and 'Access & Security' in the Functional Requirements documents. \n///\n/// Allows full traceability and accountability across admin and privileged actions (e.g., role changes, bans, moderation actions). Maintains full 3NF normalization by separating audit trail details from direct business data, storing only atomic data and foreign key references. For example, every time a ban is issued, or a user changes role, an entry is created here independently of the action's core data tables.\n///\n/// Key relationships: references the user (actor) performing the action, the affected user (target), and provides linkage via entity_type/entity_id for polymorphic connections to the target business object. \n/// Special behaviors: Should be written only by internal privileged actions, not by user-driven business flows. Designed for audit and compliance reviews. No calculated fields, strictly normalized.\n///\n/// @namespace Admin\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_audit_log {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary Key] - Implements identity and uniqueness for each audit log entry. Fulfills the uniqueness requirement per audit record. Ensures normalization by enabling atomic audit entries. Always generated as a UUID.\n  id String @id @db.Uuid\n  \n  /// [Action Actor] - Implements the requirement to store the user responsible for each privileged action. Links to the user who performed the action. Ensures 3NF by storing only the user id as a reference; all other actor information must be joined as needed. For example, references the admin who issued a ban.\n  actor_user_id String @db.Uuid\n  \n  /// [Action Target] - Fulfills the requirement to capture who is affected by the action, if applicable (e.g., in bans, warnings, or demotions). Nullable for actions targeting system settings rather than specific users. Keeps direct reference only to target user id to stay normalized.\n  target_user_id String? @db.Uuid\n  \n  /// [Action Type] - Implements the action classification requirement. Business meaning: describes the category (e.g., 'ban', 'role_change', 'settings_update'). Ensures normalization by not encoding business logic; only keeps atomic values (string), never details or summaries.\n  action_type String\n  \n  /// [Entity Type] - Implements the need for polymorphic audit trail. Records the type of entity affected (e.g., 'user', 'post', 'comment', 'setting'). Ensures 3NF by representing entity type as atomic data, not as a foreign key or denormalized structure.\n  entity_type String\n  \n  /// [Entity Reference] - Fulfills requirement to record which object was modified. Nullable for actions that do not target a specific entity. Ensures normalization by storing atomic reference only.\n  entity_id String? @db.Uuid\n  \n  /// [Action Detail] - Implements extensible context for audit records. Stores optional contextual details, such as old/new role in a role change. Ensures normalization by keeping these as atomic strings, not by embedding object graphs.\n  action_detail String?\n  \n  /// [Timestamp] - Implements audit trail requirement for time traceability. Business meaning: when the privileged action took place. Ensures normalization by using a single atomic datetime. Example: records ban date or role assignment time.\n  created_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  fk_audit_actor_user discussionboard_user @relation(\"discussionboard_audit_log_of_actor_user_id\", fields: [actor_user_id], references: [id], onDelete: Cascade)\n  fk_audit_target_user discussionboard_user? @relation(\"discussionboard_audit_log_of_target_user_id\", fields: [target_user_id], references: [id], onDelete: Cascade)\n  \n  @@index([actor_user_id, created_at])\n  @@index([target_user_id, created_at])\n  @@index([entity_type, entity_id])\n  @@index([action_detail(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// [Platform Configuration Management] - This implements requirements for platform-wide admin-configurable settings, drawn from 'Administration' in both the overview and functional requirements documents (see Admin: Platform Configuration, and Functionality: Platform-wide Settings). \n///\n/// Solves the business problem of enabling admin users to manage platform-wide booleans, options, and policies in a normalized way. \n/// Maintains 3NF by storing one setting per row, keyed by setting name, value, and type—never groups or arrays. For example, \"MaxPostAttachments\" or \"EnableModerationQueue\" are single atomic settings stored here.\n///\n/// Key relationships: No foreign keys; settings are manipulated by admin flows only. \n/// Special behaviors: Names are unique; mutating a setting should update only the single normalized row. No pre-calculated values or summaries—strictly atomic and normalized.\n///\n/// @namespace Admin\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_platform_setting {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary Key] - Unique identifier for each platform setting. 3NF compliance: prevents duplicate or ambiguous settings by row identity.\n  id String @id @db.Uuid\n  \n  /// [Setting Name] - Implements the need to uniquely identify every platform setting. Should be a descriptive string (e.g., 'EnableModerationQueue'). Ensures normalization by not encoding arrays or objects, only simple strings.\n  name String\n  \n  /// [Setting Value] - Implements storing current configuration/data. Can hold any atomic value as string (booleans='true'/'false', numbers as string, etc.). Ensures 3NF by keeping each value atomic and not embedding larger config structures.\n  value String\n  \n  /// [Data Type Marker] - Fulfills the requirement to distinguish setting value interpretation (e.g., 'boolean', 'int', 'string'). Maintains normalization by storing type marker atomically. Example: allows parsing and validation at the application level.\n  type String\n  \n  /// [Last Updated Timestamp] - Supports auditability for platform changes. Maintains normalization by using a single atomic datetime. For example, allows the system to show when moderation settings were last updated.\n  updated_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  @@unique([name])\n}",
      "main.prisma": "generator client {\n  provider        = \"prisma-client-js\"\n  previewFeatures = [\"postgresqlExtensions\", \"views\"]\n  binaryTargets   = [\"native\"]\n}\ndatasource db {\n  provider   = \"postgresql\"\n  url        = env(\"DATABASE_URL\")\n  extensions = []\n}\ngenerator markdown {\n  provider = \"prisma-markdown\"\n  output   = \"../docs/ERD.md\"\n}"
    },
    "compiled": {
      "type": "success",
      "schemas": {
        "schema-01-core.prisma": "/// [User Master Record] - This implements the foundational user management requirement noted in the requirements analysis (02_discussionboard_functional_requirements.md Section 3.1: User Registration & Authentication). \n///\n/// This model captures core authentication and identity data for all discussion board participants—regardless of role (member, moderator, admin). Maintains strict 3NF compliance by isolating authentication data (email, credential info, status) from profile and role specialization, preventing duplication or transitive dependencies. For example, all roles reference this entity, and profile/details are managed in separate tables.\n///\n/// Key relationships: Links 1:1 to discussionboard_user_profile. Related 1:N with role specializations (member/moderator/admin), posts, comments, and all historical user actions.\n/// Special behaviors: Only one email per user. Role management handled via join/role specialization tables. Soft deactivation supported by 'is_active' flag.\n///\n/// @namespace Core\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_user {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary Key] - Globally unique identifier for the user. Implements the requirements for traceable, referential user identity across all core tables (see 02_discussionboard_functional_requirements.md). 3NF enforced as surrogate key. For example, all foreign key relationships use this for core user reference.\n  id String @id @db.Uuid\n\n  /// [Authentication Email] - Implements unique login credential per user requirement. Business meaning: Used for login, notifications, and password recovery. Ensures normalization by existing only on user root entity and not duplicated elsewhere. Enforced unique constraint. E.g., user login process.\n  email String\n\n  /// [Password Hash] - Securely stores password hash for authentication workflow per 02_discussionboard_functional_requirements.md. Ensures separation from credential-independent profile info. Used for login verification.\n  password_hash String\n\n  /// [Active Status] - Tracks whether the user account is enabled or deactivated (requirement: Admin can deactivate). Normalization: not duplicated elsewhere. For account suspension procedures.\n  is_active Boolean\n\n  /// [Creation Timestamp] - When user joined. Required for audit and analytics (see success criteria in 01_discussionboard_overview_and_scope.md). Used in user growth/activation KPIs.\n  created_at DateTime @db.Timestamptz\n\n  /// [Last Update Timestamp] - Business: Audit and admin review. Ensures clean separation—no transitive dependency.\n  updated_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  discussionboard_user_profile                        discussionboard_user_profile?\n  discussionboard_member                              discussionboard_member?\n  discussionboard_moderator                           discussionboard_moderator?\n  discussionboard_admin                               discussionboard_admin?\n  discussionboard_comments                            discussionboard_comments[]\n  discussionboard_likes                               discussionboard_likes[]\n  discussionboard_reports                             discussionboard_reports[]\n  discussionboard_moderation_action_of_actor_id       discussionboard_moderation_action[]      @relation(\"discussionboard_moderation_action_of_actor_id\")\n  discussionboard_moderation_action_of_target_user_id discussionboard_moderation_action[]      @relation(\"discussionboard_moderation_action_of_target_user_id\")\n  discussionboard_report_review                       discussionboard_report_review[]\n  discussionboard_warning_of_issued_by_id             discussionboard_warning[]                @relation(\"discussionboard_warning_of_issued_by_id\")\n  discussionboard_warning_of_issued_to_id             discussionboard_warning[]                @relation(\"discussionboard_warning_of_issued_to_id\")\n  discussionboard_ban_of_banned_user_id               discussionboard_ban[]                    @relation(\"discussionboard_ban_of_banned_user_id\")\n  discussionboard_ban_of_banned_by_id                 discussionboard_ban[]                    @relation(\"discussionboard_ban_of_banned_by_id\")\n  discussionboard_notification_of_recipient_user_id   discussionboard_notification[]           @relation(\"discussionboard_notification_of_recipient_user_id\")\n  discussionboard_notification_of_actor_user_id       discussionboard_notification[]           @relation(\"discussionboard_notification_of_actor_user_id\")\n  discussionboard_notification_preference             discussionboard_notification_preference?\n  discussionboard_audit_log_of_actor_user_id          discussionboard_audit_log[]              @relation(\"discussionboard_audit_log_of_actor_user_id\")\n  discussionboard_audit_log_of_target_user_id         discussionboard_audit_log[]              @relation(\"discussionboard_audit_log_of_target_user_id\")\n\n  @@unique([email])\n  @@index([is_active])\n}\n\n/// [User Profile] - Implements user display/personalization requirements (02_discussionboard_functional_requirements.md, 3.1) distinct from root authentication. Holds display name, optional avatar, and bio—strictly 3NF as contact details, credentials, role, and settings are elsewhere. Used for member directories, post attributions, notifications.\n///\n/// Key relationships: 1:1 with discussionboard_user (foreign key = unique). Not duplicated in role tables.\n/// Special behaviors: 1:1 uniqueness enforced. All user display data (NOT used for authentication).\n///\n/// @namespace Core\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_user_profile {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary Key] - Globally unique identifier for the profile. Surrogate key for normalization. Ensures all profile retrieval and modifications are auditable.\n  id String @id @db.Uuid\n\n  /// [Foreign Key: discussionboard_user] - User this profile belongs to. Implements 1:1 user-profile relationship (requirement: one profile per account, never duplicated). Enforces normalization. E.g., to get profile when showing post author.\n  user_id String @db.Uuid\n\n  /// [Display Name] - User's chosen name, shown publicly on posts/comments. Not used for authentication. Maintains 3NF by separating identity from credential tables. E.g., 'JohnDoe'.\n  display_name String\n\n  /// [Avatar Image] - Optional user image link. Not duplicated anywhere. Maintains normalized structure. Used on post lists/user bios.\n  avatar_url String? @db.VarChar(80000)\n\n  /// [User Bio] - Self-description or background, used on profiles/mouseover displays. Normalization: No business logic outside of display.\n  bio String?\n\n  //----\n  // RELATIONS\n  //----\n  user_profile_user_id discussionboard_user @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@unique([user_id])\n  @@index([display_name])\n  @@index([bio(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// [Member Role] - Implements domain model for general user participation rights (see user roles in 03_discussionboard_user_roles_and_permissions.md and participation requirements in 02_discussionboard_functional_requirements.md 3.2-3.4). This captures all accounts with base-level actions (posting, commenting, liking). All users with platform presence are members. 3NF: Only stores role-specific facts, no credential/profile fields duplicated.\n///\n/// Key relationships: 1:1 with discussionboard_user. Related 1:N to posts, comments, likes, reports. Role is atomic, all privileges via explicit role presence.\n/// Special behaviors: Role assignment/demotion flows strictly auditable via foreign key.\n///\n/// @namespace Core\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_member {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary Key] - Each member has a dedicated, globally unique role assignment entry for traceability (even if admin or moderator). Enforces 3NF by using only a surrogate key.\n  id String @id @db.Uuid\n\n  /// [Foreign Key: discussionboard_user] - Account assigned this member role. Enforces 1:1 mapping, not duplicated for other roles. Needed for permissions matrix. E.g., to check if a user can create posts.\n  user_id String @db.Uuid\n\n  /// [Membership Grant Timestamp] - When membership began. Required for audits, demotions, or calculating active duration. Maintains third normal form by not holding user or credential data.\n  granted_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  member_user_id discussionboard_user @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  discussionboard_post discussionboard_post[]\n\n  @@unique([user_id])\n}\n\n/// [Moderator Role] - Implements elevated moderator assignment for trusted members, referencing business rules in 03_discussionboard_user_roles_and_permissions.md and moderation functions in 02_discussionboard_functional_requirements.md 3.5. Only users explicitly assigned this role are allowed moderation tools. 3NF-preserving: only stores moderator-specific info (no duplication of credentials/profile).\n///\n/// Key relationships: 1:1 to discussionboard_user (atomic assignment). Related 1:N to reports, moderation actions.\n/// Special behaviors: Grant/revoke flows auditable. All permission checks cleanly reference this mapping.\n///\n/// @namespace Core\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_moderator {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary Key] - Unique identifier for moderator role assignment. Enforces traceability, audit, and clean separation. Used for all moderator-level permission checks.\n  id String @id @db.Uuid\n\n  /// [Foreign Key: discussionboard_user] - User granted moderator authority (must also be a member). 1:1 constraint by unique index. Never duplicated nor nullable. E.g., lookup for report review access.\n  user_id String @db.Uuid\n\n  /// [Moderator Grant Timestamp] - When moderator role was assigned. Auditing and compliance for all moderator promotions. Normalization: Never holds non-moderator info.\n  assigned_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  moderator_user_id discussionboard_user @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@unique([user_id])\n}\n\n/// [Admin Role] - Implements system administrator privilege assignment as per 03_discussionboard_user_roles_and_permissions.md and 02_discussionboard_functional_requirements.md (platform-wide management, user promotion/role reassignment). All platform-wide permissions are checked against this table. 3NF-compliant: only houses admin assignment data, never duplicates user or moderator/member details.\n///\n/// Key relationships: 1:1 to discussionboard_user; referenced when determining admin dashboard/settings access. All permission checks reference this mapping.\n/// Special behaviors: Admin can demote/promote all other roles. Auditing via assignment timestamps. No transitive/admin details outside this entry.\n///\n/// @namespace Core\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_admin {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary Key] - Surrogate key for admin role assignment. Allows auditing/change tracking for all promotions/demotions. Clean, normalized design.\n  id String @id @db.Uuid\n\n  /// [Foreign Key: discussionboard_user] - User assigned admin authority. Enforced 1:1 by unique index, not nullable. 3NF: Never duplicated.\n  user_id String @db.Uuid\n\n  /// [Admin Assignment Timestamp] - When the admin role was assigned; fulfills trace and change-audit requirements for privileged role escalation. Normalized by excluding non-admin details.\n  assigned_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  admin_user_id discussionboard_user @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@unique([user_id])\n}\n",
        "schema-02-board.prisma": "/// [Discussion Posts] - Implements Sections 3.2 (Creating & Managing Posts) and 3.1 (User Registration & Authentication) as detailed in the requirements (02_discussionboard_functional_requirements.md).\n///\n/// Stores the main discussion board contributions (posts), tracking author, category, creation/edit timestamps, and supports soft deletion. Ensures strict 3NF: posts do not contain redundant author or category data, referencing normalized member and category tables instead. Usage example: a post about economic policy references its author (member) and its category (e.g., 'Economics') without duplicating user/category info.\n///\n/// Key relationships: discussionboard_member (author), discussionboard_post_category (category), attachments, tags, etc. Special behaviors: soft-delete is tracked via deleted_at; author/category FKs are required and not nullable.\n///\n/// @namespace DiscussionBoard\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_post {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary Key] - Unique identifier for each post as mandated for atomic access and historical auditing (Section 3.2).\n  id String @id @db.Uuid\n\n  /// [Author Member FK] - References the member authoring the post (see Section 3.2 in requirements). Maintains normalization by only referencing the member, not duplicating member data. E.g., used for showing all posts by a member.\n  author_member_id String @db.Uuid\n\n  /// [Category FK] - Associates post with a category (Section 3.2). Provides link to normalized category without duplication of data. E.g., 'Politics' or 'Economics'.\n  category_id String @db.Uuid\n\n  /// [Post Title] - Implements discussion title per Section 3.2. Used for search/listings. Always non-null, atomic text.\n  title String\n\n  /// [Post Content Body] - Main text body, supports formatting. Fully normalized; not nullable.\n  body String\n\n  /// [Creation Timestamp] - Records when the post was made (Section 3.2, 3.9).\n  created_at DateTime @db.Timestamptz\n\n  /// [Update Timestamp] - Last time this post was edited (Section 3.2). Used for audit/versioning display.\n  updated_at DateTime @db.Timestamptz\n\n  /// [Deleted Timestamp] - Soft-deletion timestamp if post is hidden/deleted by member or moderator. Nullable if not deleted.\n  deleted_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  member   discussionboard_member        @relation(fields: [author_member_id], references: [id], onDelete: Cascade)\n  category discussionboard_post_category @relation(fields: [category_id], references: [id], onDelete: Cascade)\n\n  discussionboard_post_attachment   discussionboard_post_attachment[]\n  discussionboard_comments          discussionboard_comments[]\n  discussionboard_likes             discussionboard_likes[]\n  discussionboard_reports           discussionboard_reports[]\n  discussionboard_moderation_action discussionboard_moderation_action[]\n  discussionboard_report_review     discussionboard_report_review[]\n  discussionboard_warning           discussionboard_warning[]\n  discussionboard_notification      discussionboard_notification[]\n\n  @@unique([author_member_id, created_at])\n  @@index([created_at])\n  @@index([category_id, created_at])\n  @@index([title(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n  @@index([body(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// [Discussion Post Categories] - Implements Section 3.2 and 3.6 (Admin). Categories like 'Politics' or 'Economics'—referenced by posts, maintained separately for normalization. Usage: admins manage categories; posts always reference a category. Special: cannot delete if referenced by a post.\n///\n/// @namespace DiscussionBoard\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_post_category {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary Key] - Uniquely identifies category; normalization ensures only atomic references used.\n  id String @id @db.Uuid\n\n  /// [Category Name] - Per Section 3.2; e.g., 'Economics'. Used for filters/views. Unique and non-null.\n  name String\n\n  /// [Category Description] - Extended human-readable info for admin/member UIs. Optional, normalized.\n  description String?\n\n  //----\n  // RELATIONS\n  //----\n  discussionboard_post discussionboard_post[]\n\n  @@unique([name])\n}\n\n/// [Discussion Post Tags] - Implements tagging per Section 3.2 to enable content filtering/search without denormalization. Each tag is stored atomically and referenced by M:N join (not included here). E.g., post tagged 'inflation'. Usage: tag table ensures uniqueness; pure key-name pairs only.\n///\n/// @namespace DiscussionBoard\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_post_tag {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary Key] - Unique atomic tag identity.\n  id String @id @db.Uuid\n\n  /// [Tag Name] - Required label, e.g. 'inflation'. Uniqueness enforced; normalized/atomic.\n  name String\n\n  //----\n  // RELATIONS\n  //----\n  @@unique([name])\n}\n\n/// [Post Attachments] - Implements file/image management for posts (Section 3.2). Each attachment references one post, with file URL/type metadata. Maintains normalization with atomic URI/type; all files managed outside main post record; supports cascading delete on post removal.\n///\n/// @namespace DiscussionBoard\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_post_attachment {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary Key] - Unique attachment identity for tracking and referencing.\n  id String @id @db.Uuid\n\n  /// [Post FK] - Attachment's parent post (Section 3.2). Referenced (not duplicated) for strict normalization. Cascades on post delete.\n  post_id String @db.Uuid\n\n  /// [Attachment File URL] - Atomic URI (e.g., https://cdn.site/file.jpg). Required.\n  file_url String @db.VarChar(80000)\n\n  /// [Attachment MIME Type] - e.g. 'image/jpeg'. Required; normalized for filters.\n  file_type String\n\n  /// [Upload Timestamp] - Required point-in-time, supporting audit and ordering.\n  uploaded_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  post discussionboard_post @relation(fields: [post_id], references: [id], onDelete: Cascade)\n\n  @@unique([post_id, file_url])\n  @@index([uploaded_at])\n}\n",
        "schema-03-comment.prisma": "/// [Comment Model] - This implements the comment functionality as outlined under functional requirements (sections 3.3, 3.4, 3.5) and supports threaded/nested comments for both 'Politics' and 'Economics' board categories. \n///\n/// Allows users to participate in ongoing discussions by adding, editing, and deleting their own comments, with support for threaded conversations, reporting, moderation, and in-line engagement (likes). Maintains 3NF by separating this entity from users, posts, likes, and reports. For example, a user can comment on a post, reply to other comments (recursively), and have their comment moderated or reported independently. \n///\n/// Key relationships: Links to posts, users (authors), and parent comment (if threaded). Supports foreign keys to reporting, moderation, and liking mechanisms in other models.\n/// Special behaviors: Enforces only one parent per comment for tree structure, supports soft deletion, and maintains a precise audit trail without any pre-calculated metrics.\n///\n/// @namespace Comments\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_comments {\n  //----\n  // COLUMNS\n  //----\n  /// [Comment Primary Key] - Implements the unique identification (see 3NF and requirements mapping).\n  ///\n  /// Globally unique identifier for each comment. Ensures 1NF uniqueness, enables precise referencing, and guarantees auditability and traceability across threads and moderation actions.\n  ///\n  id String @id @db.Uuid\n\n  /// [Foreign Key: Post] - Implements the post-comment linkage as per requirement 3.3.\n  ///\n  /// Associates each comment with its parent post (mandatory). Ensures 2NF by linking to the full post entity, not duplicating post info. For example, when displaying a comment, the app can show the related post's category or title.\n  ///\n  post_id String @db.Uuid\n\n  /// [Foreign Key: Author] - Implements comment authorship per requirements 3.3, 3.4.\n  ///\n  /// Links the comment directly to its user (author). Maintains normalization by not storing author details redundantly; user details are referenced via foreign key.\n  ///\n  author_id String @db.Uuid\n\n  /// [Foreign Key: Parent Comment] - Supports threaded/reply comments as per 3.3.\n  ///\n  /// Self-referential link for comment thread nesting (optional; null for root-level comments). Maintains normalization by linking only to one parent, supporting recursive conversation trees without redundancy.\n  ///\n  parent_comment_id String? @db.Uuid\n\n  /// [Comment Content] - Implements actual user message storage per requirement 3.3.\n  ///\n  /// Holds the content/message of the comment. Ensures normalization by storing only the user's entry, not derived or precomputed data. For example, users can edit this field within role constraints. No denormalized summary or rendering is stored in regular tables.\n  ///\n  content String\n\n  /// [Edit Tracking Flag] - Supports edit-audit functionality per requirement 3.3 (editing own comments).\n  ///\n  /// Boolean indicating whether comment content has been modified since creation. Ensures normalization by storing only atomic edit status; edit history belongs in a separate snapshot/audit table if needed.\n  ///\n  is_edited Boolean\n\n  /// [Soft Delete Flag] - Enables reversible deletion per 3.3 and moderation (3.5).\n  ///\n  /// Flags comments as deleted (soft) without actual removal from database. Supports auditability and role-based recovery, ensuring no information loss for moderation history.\n  ///\n  is_deleted Boolean\n\n  /// [Creation Timestamp] - Records when the comment was posted (requirements 3.3, 3.9).\n  ///\n  /// Stores creation time of the comment. Ensures normalization as an atomic, non-derived value, and provides audit trail foundation.\n  ///\n  created_at DateTime @db.Timestamptz\n\n  /// [Last Update Timestamp] - Tracks edits, moderation actions as in 3.3, 3.5, 3.9.\n  ///\n  /// Records latest update timestamp (edit, moderation, recovery, etc). Maintains audit and traceability without derived/polyglot aggregates.\n  ///\n  updated_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  post           discussionboard_post      @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  author         discussionboard_user      @relation(fields: [author_id], references: [id], onDelete: Cascade)\n  parent_comment discussionboard_comments? @relation(\"recursive\", fields: [parent_comment_id], references: [id], onDelete: Cascade)\n\n  recursive                         discussionboard_comments[]          @relation(\"recursive\")\n  discussionboard_likes             discussionboard_likes[]\n  discussionboard_reports           discussionboard_reports[]\n  discussionboard_moderation_action discussionboard_moderation_action[]\n  discussionboard_report_review     discussionboard_report_review[]\n  discussionboard_warning           discussionboard_warning[]\n  discussionboard_notification      discussionboard_notification[]\n\n  @@index([post_id, created_at])\n  @@index([author_id, created_at])\n  @@index([parent_comment_id])\n  @@index([content(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n",
        "schema-04-interaction.prisma": "/// User Content Like - This implements the user engagement and interaction requirements (see sections 3.4 and 3.8 of the requirements analysis).\n///\n/// Enables the platform’s core like/voting system, allowing users to like posts or comments once, supporting quantifiable content popularity and user involvement. Maintains strict 3NF normalization by separating atomic like events, with no aggregate/calculated fields present. For example, when a user clicks 'like' on a post, a record is created here, which can later be used for denormalized like counts in mv_ tables only.\n///\n/// Key relationships: references to both posts and comments for polymorphic liking, user reference, and indexes support multi-content type lookups.\n/// Special behaviors: Uniqueness enforced so a user may only like a given post OR comment once, but not both at once (polymorphic uniqueness). All deletions are soft-deletes for audit/compliant removal tracking.\n///\n/// @namespace Interaction\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_likes {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key - Implements entity uniqueness. Each like interaction is uniquely identified for precise auditing and event tracking.\n  id String @id @db.Uuid\n\n  /// User Foreign Key - Implements user traceability for interaction, mapping to discussionboard_user. Ensures which member created this like. For example, required when listing personal likes. Not nullable/required.\n  user_id String @db.Uuid\n\n  /// Polymorphic Foreign Key: Post - Implements which post the like is attached to (where applicable), mapping to discussionboard_post. NULL if the like is for a comment. Enforces atomic association. For example, a user clicking like on a post will set this field. Nullable for polymorphism.\n  post_id String? @db.Uuid\n\n  /// Polymorphic Foreign Key: Comment - Implements comment interaction scope, mapping to discussionboard_comments. NULL if the like is for a post. For example, liking a comment sets this field. Supports normalization and polymorphic association.\n  comment_id String? @db.Uuid\n\n  /// Creation Timestamp - Implements requirement for auditable, timestamped actions. When the like event was created. Ensures atomicity by being non-null and standard across events.\n  created_at DateTime @db.Timestamptz\n\n  /// Soft-delete Timestamp - Enables reversible removal of like event in compliance with audit logging. Null if like is active, set if removed. Maintains normalization; never used as a logical indicator, only as an event timestamp.\n  deleted_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  user    discussionboard_user      @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  post    discussionboard_post?     @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  comment discussionboard_comments? @relation(fields: [comment_id], references: [id], onDelete: Cascade)\n\n  @@unique([user_id, post_id])\n  @@unique([user_id, comment_id])\n  @@index([post_id])\n  @@index([comment_id])\n}\n\n/// User Content Report - This implements abuse/spam reporting requirements from sections 3.4, 3.5, 3.6, and 3.9.\n///\n/// Allows users to report specific posts or comments for guideline violations, abuse, or spam. Maintains 3NF normalization by capturing only atomic reporting events (no report counts or summaries in table). For example, when a user flags a comment or post for review, a record is created here, with reason captured, for review by moderators/admins via reporting tools.\n///\n/// Key relationships: references user (reporter), post (or comment), and enables polymorphic targeting of reports. Moderation actions are maintained elsewhere. Enforces business rules for no duplicate reports from the same user for the same content and logs reporting context for trace/audit.\n/// Special behaviors: Uniqueness constraints prevent double-reporting by same user per content type. Deletions are soft-deletes for compliance and history retention.\n///\n/// @namespace Interaction\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_reports {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key - Uniquely identifies each report for compliance, auditing, moderation, and traceability.\n  id String @id @db.Uuid\n\n  /// Reporter Foreign Key - References the user (from discussionboard_user) who submitted the report. Maintains accountability and supports user-based moderation analytics. Not nullable; always required.\n  user_id String @db.Uuid\n\n  /// Polymorphic Foreign Key: Post - Identifies the post that is being reported (if applicable). NULL if report targets a comment. Ensures correct, strictly normalized associativity, and prevents overlap with comment_id.\n  post_id String? @db.Uuid\n\n  /// Polymorphic Foreign Key: Comment - Identifies the comment being reported (if any). NULL if post is targeted. Supports polymorphic reporting of both content types. Enforces correct normalization.\n  comment_id String? @db.Uuid\n\n  /// Short Reason Code - Implements requirements for capturing structured event context (e.g. 'spam', 'abuse', 'off-topic'). Enables filtering and workflow logic. Follows a pre-set value list handled in application/business logic. 3NF maintained as reason text is never duplicated (codes only here).\n  reason_code String\n\n  /// Detailed Reason (optional) - Implements reporting context capture for case auditing, moderation analytics, and transparency. Allows user to enter details or evidence. Nullable for cases where only the code is needed.\n  reason_details String?\n\n  /// Report Creation Timestamp - Indicates when the report was made. Implements audit trail (requirement: 3.9 and moderation review within 24hr SLA). Non-null, ensures each report is audited with precise event time.\n  created_at DateTime @db.Timestamptz\n\n  /// Soft-delete Timestamp - Enables soft-removal (not physical deletion) of reports for moderation or review compliance. Null if active, non-null when deleted. Ensures normalization and auditable workflow.\n  deleted_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  user    discussionboard_user      @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  post    discussionboard_post?     @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  comment discussionboard_comments? @relation(fields: [comment_id], references: [id], onDelete: Cascade)\n\n  discussionboard_report_review discussionboard_report_review[]\n\n  @@unique([user_id, post_id])\n  @@unique([user_id, comment_id])\n  @@index([post_id])\n  @@index([comment_id])\n}\n",
        "schema-05-moderation.prisma": "/// [Moderation Actions Log] - This implements the moderation action audit requirement from the requirements documentation (sections 02.3.5, 02.3.6, and 03).\n/// Records every direct moderation activity such as hide, delete, warning issuance, and user muting/ban performed by moderators or admins. Maintains 3NF compliance by referencing target users, actions, posts, and comments instead of duplicating their data. For example, every time a moderator deletes a post or issues a warning, a new record is created here linking who did what, to which item, and why.\n/// Key relationships: links to moderator/admin (actor), target user, affected post/comment (if applicable).\n/// Special behaviors: strictly append-only (no updates); supports complete audit trail of moderation interventions.\n///\n/// @namespace Moderation\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_moderation_action {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary key] - Standard internal identifier. Uniquely identifies each moderation action; ensures atomic representation of each occurrence.\n  id String @id @db.Uuid\n\n  /// [Action originator] - Implements the 'who performed the action' requirement. References the moderator or admin user account executing the moderation. Ensures normalization by linking to user, not duplicating actor data. For example, when moderator #1234 deletes a comment, this field is #1234.\n  actor_id String @db.Uuid\n\n  /// [User targeted] - Fulfills the 'target of moderation' tracking requirement. Links to the affected user account (e.g., reported member). Ensures single source of truth for user data and enables traceability. For example, for a ban of user X, this references user X.\n  target_user_id String @db.Uuid\n\n  /// [Affected post] - Implements moderation linkage for post-level actions. References the post if this action affects a specific post. Normalization preserved (nullable, as not all actions are post-related). For example, deleting a post links here; issuing a ban does not.\n  post_id String? @db.Uuid\n\n  /// [Affected comment] - Moderation linkage to comment. References the comment if the action is on a specific comment. Kept nullable to preserve 3NF and flexibility. For example, hiding a comment references its id here.\n  comment_id String? @db.Uuid\n\n  /// [Action type] - Implements requirement to enumerate distinct moderation activities. Type of moderation: e.g., 'delete_post', 'hide_comment', etc. Maintains normalization.\n  action_type String\n\n  /// [Reason] - Fulfills rationale for moderation. Stores moderator/admin's reason/comment. Ensures accountability, searchable, used for appeals.\n  reason String\n\n  /// [Timestamp] - Implements time-based audit tracking. True creation time of the action record, guarantees traceability.\n  created_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  actor             discussionboard_user      @relation(\"discussionboard_moderation_action_of_actor_id\", fields: [actor_id], references: [id], onDelete: Cascade)\n  target_user       discussionboard_user      @relation(\"discussionboard_moderation_action_of_target_user_id\", fields: [target_user_id], references: [id], onDelete: Cascade)\n  moderated_post    discussionboard_post?     @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  moderated_comment discussionboard_comments? @relation(fields: [comment_id], references: [id], onDelete: Cascade)\n\n  @@index([post_id])\n  @@index([comment_id])\n  @@index([actor_id, created_at])\n  @@index([target_user_id, created_at])\n}\n\n/// [Report Review Log] - Implements requirements for moderation report review workflow (sections 02.3.4, 02.3.5, 03).\n/// Tracks moderator or admin handling of user-submitted reports on posts/comments. Maintains 3NF by referencing report, reviewer, affected post/comment, and action taken. For example, when a moderator reviews a reported post and marks it as 'resolved,' a record is created here linking to all relevant entities.\n/// Key relationships: links to the report, reviewer, optionally post/comment.\n/// Special behaviors: append-only, supports full reporting workflow and audit.\n///\n/// @namespace Moderation\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_report_review {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary key] - Unique identifier for report reviews.\n  id String @id @db.Uuid\n\n  /// [The report being reviewed] - Links to a specific user report for moderation review.\n  report_id String @db.Uuid\n\n  /// [Moderator/admin reviewer] - References user carrying out the review.\n  reviewer_id String @db.Uuid\n\n  /// [Reviewed post] - Links reviewed post, nullable because not all reports are about posts.\n  post_id String? @db.Uuid\n\n  /// [Reviewed comment] - Links reviewed comment, nullable because not all reports are about comments.\n  comment_id String? @db.Uuid\n\n  /// [Outcome status] - Status for reviewed reports: e.g., 'resolved', 'rejected', 'pending'.\n  review_status String\n\n  /// [Review notes] - Optional comments from reviewer.\n  moderator_comment String?\n\n  /// [Review timestamp] - Auditable time of moderation review.\n  reviewed_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  report           discussionboard_reports   @relation(fields: [report_id], references: [id], onDelete: Cascade)\n  reviewer         discussionboard_user      @relation(fields: [reviewer_id], references: [id], onDelete: Cascade)\n  reviewed_post    discussionboard_post?     @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  reviewed_comment discussionboard_comments? @relation(fields: [comment_id], references: [id], onDelete: Cascade)\n\n  @@unique([report_id])\n  @@index([post_id])\n  @@index([comment_id])\n  @@index([reviewer_id, reviewed_at])\n}\n\n/// [Warnings Issued Log] - Implements moderator warning history per requirements (sections 02.3.5, 02.3.6, 03).\n/// Stores warnings given by moderators/admins to users for guideline-violating behavior. Maintains 3NF by linking recipient, issuer, and optionally the relevant post/comment. For example, when a moderator issues a warning for an offensive comment, that instance is logged here.\n/// Key relationships: issued_by (moderator/admin), issued_to (target user), post/comment (context, nullable).\n/// Special behaviors: historical only (warnings are never updated, only issued).\n///\n/// @namespace Moderation\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_warning {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary key] - Globally unique identifier of each warning.\n  id String @id @db.Uuid\n\n  /// [Issuer] - Moderator/admin user issuing the warning.\n  issued_by_id String @db.Uuid\n\n  /// [Recipient] - User who receives the warning.\n  issued_to_id String @db.Uuid\n\n  /// [Related post] - Cause for warning (optional, nullable).\n  post_id String? @db.Uuid\n\n  /// [Related comment] - Cause for warning (optional, nullable).\n  comment_id String? @db.Uuid\n\n  /// [Type of warning] - Categorical reason: e.g., 'abuse', 'spam', etc.\n  warning_type String\n\n  /// [Moderator message] - Human-explained rationale.\n  message String\n\n  /// [Issue timestamp] - The date/time warning was given.\n  issued_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  issuer          discussionboard_user      @relation(\"discussionboard_warning_of_issued_by_id\", fields: [issued_by_id], references: [id], onDelete: Cascade)\n  recipient       discussionboard_user      @relation(\"discussionboard_warning_of_issued_to_id\", fields: [issued_to_id], references: [id], onDelete: Cascade)\n  warning_post    discussionboard_post?     @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  warning_comment discussionboard_comments? @relation(fields: [comment_id], references: [id], onDelete: Cascade)\n\n  discussionboard_ban discussionboard_ban[]\n\n  @@index([post_id])\n  @@index([comment_id])\n  @@index([issued_to_id, issued_at])\n  @@index([issued_by_id, issued_at])\n}\n\n/// [User Ban Log] - This model realizes the user suspension/ban requirements (sections 02.3.5, 02.3.6, 03).\n/// Records every instance of an account being banned or muted, whether temporarily or permanently, by moderator/admin decision. Maintains 3NF by relating only to ban actors and affected users, no calculated ban metrics.\n/// Key relationships: 'banned_by_id' (moderator/admin), 'banned_user_id' (target member), warning reference for context, no circular dependencies.\n/// Special behaviors: all bans are point-in-time records, may be queried for active status by expiry date.\n///\n/// @namespace Moderation\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_ban {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary key] - Unique ban instance ID; ensures each ban/mute event is singular and traceable.\n  id String @id @db.Uuid\n\n  /// [Banned user] - Who is subjected to the ban/mute, referencing the user entity.\n  banned_user_id String @db.Uuid\n\n  /// [Moderator/admin] - Initiating user performing the ban/mute.\n  banned_by_id String @db.Uuid\n\n  /// [Related warning] - Optionally reference a specific prior warning that resulted in the ban/mute.\n  warning_id String? @db.Uuid\n\n  /// [Ban type] - Type category; e.g., 'mute', 'temp_ban', 'perm_ban', etc.\n  ban_type String\n\n  /// [Ban reason] - Human-entered explanation for audit, traceability, and user appeals.\n  reason String\n\n  /// [Ban start time] - When ban was placed.\n  issued_at DateTime @db.Timestamptz\n\n  /// [Ban expiry] - When unban occurs (nullable for permanent bans).\n  expires_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  banned_user     discussionboard_user     @relation(\"discussionboard_ban_of_banned_user_id\", fields: [banned_user_id], references: [id], onDelete: Cascade)\n  ban_actor       discussionboard_user     @relation(\"discussionboard_ban_of_banned_by_id\", fields: [banned_by_id], references: [id], onDelete: Cascade)\n  related_warning discussionboard_warning? @relation(fields: [warning_id], references: [id], onDelete: Cascade)\n\n  @@index([warning_id])\n  @@index([banned_user_id, issued_at])\n  @@index([banned_by_id, issued_at])\n}\n",
        "schema-06-notification.prisma": "/// [Notification delivery and history] - This implements the 'User Notifications' and system-triggered alert requirements from the functional requirements (Section 3.7).\n///\n/// This table records each notification sent to users (members, moderators, admins) regarding activity on posts, comments, moderator actions, and system events. Maintains full normalization (3NF) by storing atomic notification data and strictly referencing user and activity entities. For example, when a user receives a reply to their comment or a moderator action on their post, a new record is created here and references the relevant entities.\n///\n/// Key relationships: References recipient user ({@link discussionboard_user}), optional linkage to post ({@link discussionboard_post}) or comment ({@link discussionboard_comments}), and moderator/admin actor when relevant. \n/// Special behaviors: Supports targeting individual users; system messages have nullable activity references. All user/system notifications are auditable. No denormalized or calculated fields.\n///\n/// @namespace Notification\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_notification {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary key] - Implements unique identification of each notification. Ensures atomic records. For example, used to reference or audit notification events.\n  id String @id @db.Uuid\n\n  /// [Notification recipient] - Implements which user receives the notification, mapped to requirements for personalized notifications. For example, used to display notifications on user dashboard. Normalization: ensures recipient is atomically referenced and avoids denormalization. REQUIRED.\n  recipient_user_id String @db.Uuid\n\n  /// [Related post] - Associates notification with a post if applicable (e.g., reply, like on post). Fully normalized by optional reference. For example, used when notifying about replies or moderation of a post.\n  related_post_id String? @db.Uuid\n\n  /// [Related comment] - Associates notification with a comment if applicable (e.g., reply to comment, moderation). Normalized as optional reference. For example, used for notifications about comment mentions.\n  related_comment_id String? @db.Uuid\n\n  /// [Notification actor/user] - (Optional) The user who triggered this notification (e.g., who liked/commented, moderator/admin who performed action). If the event is system-triggered, this is null. For example, used for 'X replied to your post.' Ensures actor is atomically referenced, prevents denormalization.\n  actor_user_id String? @db.Uuid\n\n  /// [Notification type] - Classifies the type of notification in accordance with Section 3.7's events (e.g., 'reply', 'like', 'moderator_action', 'system_message', etc.). Fully normalized. For example, enables UI filtering and template selection. Constraint: limited to allowed notification types via application logic.\n  type String\n\n  /// [Notification body] - Human-readable message content sent to user. Implements functional requirement for notifications to explain events. Maintains normalization by storing only atomic message text; templates and aggregation are managed elsewhere. For example, 'Alice replied to your post.'\n  message String\n\n  /// [Read/unread flag] - Tracks whether the notification has been marked as read by the recipient, as required by notification preference and in-app UX. Normalized as a pure flag. For example, unread messages appear in notification dropdown. Constraint: only toggled by recipient.\n  is_read Boolean\n\n  /// [Notification creation time] - Implements audit and sorting requirements for notification recency. Ensures full normalization; atomic timestamp. For example, used to order notifications in UI and for cleanup logic.\n  created_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  recipient_user  discussionboard_user      @relation(\"discussionboard_notification_of_recipient_user_id\", fields: [recipient_user_id], references: [id], onDelete: Cascade)\n  related_post    discussionboard_post?     @relation(fields: [related_post_id], references: [id], onDelete: Cascade)\n  related_comment discussionboard_comments? @relation(fields: [related_comment_id], references: [id], onDelete: Cascade)\n  actor_user      discussionboard_user?     @relation(\"discussionboard_notification_of_actor_user_id\", fields: [actor_user_id], references: [id], onDelete: Cascade)\n\n  @@unique([recipient_user_id, type, related_post_id, related_comment_id, actor_user_id, created_at])\n  @@index([related_post_id])\n  @@index([related_comment_id])\n  @@index([actor_user_id])\n  @@index([recipient_user_id, created_at])\n}\n\n/// [User notification preferences] - Implements the notification preference system specified in requirements Section 3.7, giving users fine-grained control over what notifications they receive and how. All data is fully normalized.\n///\n/// Business purpose: Enables per-user customization (mute, enable, push preference, etc.) for different notification types and channels. For example, a member might mute 'like' notifications but enable 'moderator_action' notifications on mobile.\n///\n/// Technical context: Direct link to each user ({@link discussionboard_user}), with one row per user (enforced by a unique constraint). No denormalization.\n///\n/// Usage example: Used when generating notifications or respecting user muting/settings for different event types.\n///\n/// Special behaviors: All boolean flags, atomic, fully normalized. No computed columns.\n///\n/// @namespace Notification\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_notification_preference {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary key] - Implements unique identification for each user's notification preference record. Normalized; required for foreign key relationships and referencing.\n  id String @id @db.Uuid\n\n  /// [User owning preferences] - Implements one-to-one mapping from user to notification preferences, as required by the per-user customization use case. Fully normalized: enforced by unique constraint. For example, fetching preferences when user changes settings. Enforces referential integrity; on user deletion, preference row is cleaned up.\n  ///\n  /// Special behavior: unique per user.\n  user_id String @db.Uuid\n\n  /// [Reply notification toggle] - User's option to receive notifications about direct replies. Implements user preference granularity requirement. For example, if false, the user does not get reply-related notifications. Fully normalized, no calculation.\n  notify_reply Boolean\n\n  /// [Like notification toggle] - User's choice to receive/not receive notifications when their post or comment is liked. Maintains normalization. Example: toggling off keeps the user from being notified for likes.\n  notify_like Boolean\n\n  /// [Moderator action notification toggle] - Implements ability for users to be alerted when a moderator acts on their content. Normalization ensured. For example, disables notifications for moderation unless true.\n  notify_moderator_action Boolean\n\n  /// [System message notification toggle] - Whether user receives platform-wide messages or announcements. Normalization ensured. For example, used for site policy change notifications.\n  notify_system_message Boolean\n\n  //----\n  // RELATIONS\n  //----\n  user discussionboard_user @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@unique([user_id])\n}\n",
        "schema-07-admin.prisma": "/// [Audit Logging for Sensitive Actions] - This implements the audit logging and traceability requirements from the user management and security sections, specifically from 'Audit Logging' in the User Roles & Permissions and 'Access & Security' in the Functional Requirements documents. \n///\n/// Allows full traceability and accountability across admin and privileged actions (e.g., role changes, bans, moderation actions). Maintains full 3NF normalization by separating audit trail details from direct business data, storing only atomic data and foreign key references. For example, every time a ban is issued, or a user changes role, an entry is created here independently of the action's core data tables.\n///\n/// Key relationships: references the user (actor) performing the action, the affected user (target), and provides linkage via entity_type/entity_id for polymorphic connections to the target business object. \n/// Special behaviors: Should be written only by internal privileged actions, not by user-driven business flows. Designed for audit and compliance reviews. No calculated fields, strictly normalized.\n///\n/// @namespace Admin\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_audit_log {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary Key] - Implements identity and uniqueness for each audit log entry. Fulfills the uniqueness requirement per audit record. Ensures normalization by enabling atomic audit entries. Always generated as a UUID.\n  id String @id @db.Uuid\n\n  /// [Action Actor] - Implements the requirement to store the user responsible for each privileged action. Links to the user who performed the action. Ensures 3NF by storing only the user id as a reference; all other actor information must be joined as needed. For example, references the admin who issued a ban.\n  actor_user_id String @db.Uuid\n\n  /// [Action Target] - Fulfills the requirement to capture who is affected by the action, if applicable (e.g., in bans, warnings, or demotions). Nullable for actions targeting system settings rather than specific users. Keeps direct reference only to target user id to stay normalized.\n  target_user_id String? @db.Uuid\n\n  /// [Action Type] - Implements the action classification requirement. Business meaning: describes the category (e.g., 'ban', 'role_change', 'settings_update'). Ensures normalization by not encoding business logic; only keeps atomic values (string), never details or summaries.\n  action_type String\n\n  /// [Entity Type] - Implements the need for polymorphic audit trail. Records the type of entity affected (e.g., 'user', 'post', 'comment', 'setting'). Ensures 3NF by representing entity type as atomic data, not as a foreign key or denormalized structure.\n  entity_type String\n\n  /// [Entity Reference] - Fulfills requirement to record which object was modified. Nullable for actions that do not target a specific entity. Ensures normalization by storing atomic reference only.\n  entity_id String? @db.Uuid\n\n  /// [Action Detail] - Implements extensible context for audit records. Stores optional contextual details, such as old/new role in a role change. Ensures normalization by keeping these as atomic strings, not by embedding object graphs.\n  action_detail String?\n\n  /// [Timestamp] - Implements audit trail requirement for time traceability. Business meaning: when the privileged action took place. Ensures normalization by using a single atomic datetime. Example: records ban date or role assignment time.\n  created_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  fk_audit_actor_user  discussionboard_user  @relation(\"discussionboard_audit_log_of_actor_user_id\", fields: [actor_user_id], references: [id], onDelete: Cascade)\n  fk_audit_target_user discussionboard_user? @relation(\"discussionboard_audit_log_of_target_user_id\", fields: [target_user_id], references: [id], onDelete: Cascade)\n\n  @@index([actor_user_id, created_at])\n  @@index([target_user_id, created_at])\n  @@index([entity_type, entity_id])\n  @@index([action_detail(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// [Platform Configuration Management] - This implements requirements for platform-wide admin-configurable settings, drawn from 'Administration' in both the overview and functional requirements documents (see Admin: Platform Configuration, and Functionality: Platform-wide Settings). \n///\n/// Solves the business problem of enabling admin users to manage platform-wide booleans, options, and policies in a normalized way. \n/// Maintains 3NF by storing one setting per row, keyed by setting name, value, and type—never groups or arrays. For example, \"MaxPostAttachments\" or \"EnableModerationQueue\" are single atomic settings stored here.\n///\n/// Key relationships: No foreign keys; settings are manipulated by admin flows only. \n/// Special behaviors: Names are unique; mutating a setting should update only the single normalized row. No pre-calculated values or summaries—strictly atomic and normalized.\n///\n/// @namespace Admin\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_platform_setting {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary Key] - Unique identifier for each platform setting. 3NF compliance: prevents duplicate or ambiguous settings by row identity.\n  id String @id @db.Uuid\n\n  /// [Setting Name] - Implements the need to uniquely identify every platform setting. Should be a descriptive string (e.g., 'EnableModerationQueue'). Ensures normalization by not encoding arrays or objects, only simple strings.\n  name String\n\n  /// [Setting Value] - Implements storing current configuration/data. Can hold any atomic value as string (booleans='true'/'false', numbers as string, etc.). Ensures 3NF by keeping each value atomic and not embedding larger config structures.\n  value String\n\n  /// [Data Type Marker] - Fulfills the requirement to distinguish setting value interpretation (e.g., 'boolean', 'int', 'string'). Maintains normalization by storing type marker atomically. Example: allows parsing and validation at the application level.\n  type String\n\n  /// [Last Updated Timestamp] - Supports auditability for platform changes. Maintains normalization by using a single atomic datetime. For example, allows the system to show when moderation settings were last updated.\n  updated_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  @@unique([name])\n}\n",
        "main.prisma": "generator client {\n  provider        = \"prisma-client-js\"\n  previewFeatures = [\"postgresqlExtensions\", \"views\"]\n  binaryTargets   = [\"native\"]\n}\n\ndatasource db {\n  provider   = \"postgresql\"\n  url        = env(\"DATABASE_URL\")\n  extensions = []\n}\n\ngenerator markdown {\n  provider = \"prisma-markdown\"\n  output   = \"../docs/ERD.md\"\n}\n"
      },
      "nodeModules": {
        "node_modules/.prisma/client/client.d.ts": "export * from \"./index\"",
        "node_modules/.prisma/client/default.d.ts": "export * from \"./index\"",
        "node_modules/.prisma/client/edge.d.ts": "export * from \"./default\"",
        "node_modules/.prisma/client/index.d.ts": "\n/**\n * Client\n**/\n\nimport * as runtime from './runtime/library.js';\nimport $Types = runtime.Types // general types\nimport $Public = runtime.Types.Public\nimport $Utils = runtime.Types.Utils\nimport $Extensions = runtime.Types.Extensions\nimport $Result = runtime.Types.Result\n\nexport type PrismaPromise<T> = $Public.PrismaPromise<T>\n\n\n/**\n * Model discussionboard_user\n * [User Master Record] - This implements the foundational user management requirement noted in the requirements analysis (02_discussionboard_functional_requirements.md Section 3.1: User Registration & Authentication). \n * \n * This model captures core authentication and identity data for all discussion board participants—regardless of role (member, moderator, admin). Maintains strict 3NF compliance by isolating authentication data (email, credential info, status) from profile and role specialization, preventing duplication or transitive dependencies. For example, all roles reference this entity, and profile/details are managed in separate tables.\n * \n * Key relationships: Links 1:1 to discussionboard_user_profile. Related 1:N with role specializations (member/moderator/admin), posts, comments, and all historical user actions.\n * Special behaviors: Only one email per user. Role management handled via join/role specialization tables. Soft deactivation supported by 'is_active' flag.\n * \n * @namespace Core\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_user = $Result.DefaultSelection<Prisma.$discussionboard_userPayload>\n/**\n * Model discussionboard_user_profile\n * [User Profile] - Implements user display/personalization requirements (02_discussionboard_functional_requirements.md, 3.1) distinct from root authentication. Holds display name, optional avatar, and bio—strictly 3NF as contact details, credentials, role, and settings are elsewhere. Used for member directories, post attributions, notifications.\n * \n * Key relationships: 1:1 with discussionboard_user (foreign key = unique). Not duplicated in role tables.\n * Special behaviors: 1:1 uniqueness enforced. All user display data (NOT used for authentication).\n * \n * @namespace Core\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_user_profile = $Result.DefaultSelection<Prisma.$discussionboard_user_profilePayload>\n/**\n * Model discussionboard_member\n * [Member Role] - Implements domain model for general user participation rights (see user roles in 03_discussionboard_user_roles_and_permissions.md and participation requirements in 02_discussionboard_functional_requirements.md 3.2-3.4). This captures all accounts with base-level actions (posting, commenting, liking). All users with platform presence are members. 3NF: Only stores role-specific facts, no credential/profile fields duplicated.\n * \n * Key relationships: 1:1 with discussionboard_user. Related 1:N to posts, comments, likes, reports. Role is atomic, all privileges via explicit role presence.\n * Special behaviors: Role assignment/demotion flows strictly auditable via foreign key.\n * \n * @namespace Core\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_member = $Result.DefaultSelection<Prisma.$discussionboard_memberPayload>\n/**\n * Model discussionboard_moderator\n * [Moderator Role] - Implements elevated moderator assignment for trusted members, referencing business rules in 03_discussionboard_user_roles_and_permissions.md and moderation functions in 02_discussionboard_functional_requirements.md 3.5. Only users explicitly assigned this role are allowed moderation tools. 3NF-preserving: only stores moderator-specific info (no duplication of credentials/profile).\n * \n * Key relationships: 1:1 to discussionboard_user (atomic assignment). Related 1:N to reports, moderation actions.\n * Special behaviors: Grant/revoke flows auditable. All permission checks cleanly reference this mapping.\n * \n * @namespace Core\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_moderator = $Result.DefaultSelection<Prisma.$discussionboard_moderatorPayload>\n/**\n * Model discussionboard_admin\n * [Admin Role] - Implements system administrator privilege assignment as per 03_discussionboard_user_roles_and_permissions.md and 02_discussionboard_functional_requirements.md (platform-wide management, user promotion/role reassignment). All platform-wide permissions are checked against this table. 3NF-compliant: only houses admin assignment data, never duplicates user or moderator/member details.\n * \n * Key relationships: 1:1 to discussionboard_user; referenced when determining admin dashboard/settings access. All permission checks reference this mapping.\n * Special behaviors: Admin can demote/promote all other roles. Auditing via assignment timestamps. No transitive/admin details outside this entry.\n * \n * @namespace Core\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_admin = $Result.DefaultSelection<Prisma.$discussionboard_adminPayload>\n/**\n * Model discussionboard_post\n * [Discussion Posts] - Implements Sections 3.2 (Creating & Managing Posts) and 3.1 (User Registration & Authentication) as detailed in the requirements (02_discussionboard_functional_requirements.md).\n * \n * Stores the main discussion board contributions (posts), tracking author, category, creation/edit timestamps, and supports soft deletion. Ensures strict 3NF: posts do not contain redundant author or category data, referencing normalized member and category tables instead. Usage example: a post about economic policy references its author (member) and its category (e.g., 'Economics') without duplicating user/category info.\n * \n * Key relationships: discussionboard_member (author), discussionboard_post_category (category), attachments, tags, etc. Special behaviors: soft-delete is tracked via deleted_at; author/category FKs are required and not nullable.\n * \n * @namespace DiscussionBoard\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_post = $Result.DefaultSelection<Prisma.$discussionboard_postPayload>\n/**\n * Model discussionboard_post_category\n * [Discussion Post Categories] - Implements Section 3.2 and 3.6 (Admin). Categories like 'Politics' or 'Economics'—referenced by posts, maintained separately for normalization. Usage: admins manage categories; posts always reference a category. Special: cannot delete if referenced by a post.\n * \n * @namespace DiscussionBoard\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_post_category = $Result.DefaultSelection<Prisma.$discussionboard_post_categoryPayload>\n/**\n * Model discussionboard_post_tag\n * [Discussion Post Tags] - Implements tagging per Section 3.2 to enable content filtering/search without denormalization. Each tag is stored atomically and referenced by M:N join (not included here). E.g., post tagged 'inflation'. Usage: tag table ensures uniqueness; pure key-name pairs only.\n * \n * @namespace DiscussionBoard\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_post_tag = $Result.DefaultSelection<Prisma.$discussionboard_post_tagPayload>\n/**\n * Model discussionboard_post_attachment\n * [Post Attachments] - Implements file/image management for posts (Section 3.2). Each attachment references one post, with file URL/type metadata. Maintains normalization with atomic URI/type; all files managed outside main post record; supports cascading delete on post removal.\n * \n * @namespace DiscussionBoard\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_post_attachment = $Result.DefaultSelection<Prisma.$discussionboard_post_attachmentPayload>\n/**\n * Model discussionboard_comments\n * [Comment Model] - This implements the comment functionality as outlined under functional requirements (sections 3.3, 3.4, 3.5) and supports threaded/nested comments for both 'Politics' and 'Economics' board categories. \n * \n * Allows users to participate in ongoing discussions by adding, editing, and deleting their own comments, with support for threaded conversations, reporting, moderation, and in-line engagement (likes). Maintains 3NF by separating this entity from users, posts, likes, and reports. For example, a user can comment on a post, reply to other comments (recursively), and have their comment moderated or reported independently. \n * \n * Key relationships: Links to posts, users (authors), and parent comment (if threaded). Supports foreign keys to reporting, moderation, and liking mechanisms in other models.\n * Special behaviors: Enforces only one parent per comment for tree structure, supports soft deletion, and maintains a precise audit trail without any pre-calculated metrics.\n * \n * @namespace Comments\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_comments = $Result.DefaultSelection<Prisma.$discussionboard_commentsPayload>\n/**\n * Model discussionboard_likes\n * User Content Like - This implements the user engagement and interaction requirements (see sections 3.4 and 3.8 of the requirements analysis).\n * \n * Enables the platform’s core like/voting system, allowing users to like posts or comments once, supporting quantifiable content popularity and user involvement. Maintains strict 3NF normalization by separating atomic like events, with no aggregate/calculated fields present. For example, when a user clicks 'like' on a post, a record is created here, which can later be used for denormalized like counts in mv_ tables only.\n * \n * Key relationships: references to both posts and comments for polymorphic liking, user reference, and indexes support multi-content type lookups.\n * Special behaviors: Uniqueness enforced so a user may only like a given post OR comment once, but not both at once (polymorphic uniqueness). All deletions are soft-deletes for audit/compliant removal tracking.\n * \n * @namespace Interaction\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_likes = $Result.DefaultSelection<Prisma.$discussionboard_likesPayload>\n/**\n * Model discussionboard_reports\n * User Content Report - This implements abuse/spam reporting requirements from sections 3.4, 3.5, 3.6, and 3.9.\n * \n * Allows users to report specific posts or comments for guideline violations, abuse, or spam. Maintains 3NF normalization by capturing only atomic reporting events (no report counts or summaries in table). For example, when a user flags a comment or post for review, a record is created here, with reason captured, for review by moderators/admins via reporting tools.\n * \n * Key relationships: references user (reporter), post (or comment), and enables polymorphic targeting of reports. Moderation actions are maintained elsewhere. Enforces business rules for no duplicate reports from the same user for the same content and logs reporting context for trace/audit.\n * Special behaviors: Uniqueness constraints prevent double-reporting by same user per content type. Deletions are soft-deletes for compliance and history retention.\n * \n * @namespace Interaction\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_reports = $Result.DefaultSelection<Prisma.$discussionboard_reportsPayload>\n/**\n * Model discussionboard_moderation_action\n * [Moderation Actions Log] - This implements the moderation action audit requirement from the requirements documentation (sections 02.3.5, 02.3.6, and 03).\n * Records every direct moderation activity such as hide, delete, warning issuance, and user muting/ban performed by moderators or admins. Maintains 3NF compliance by referencing target users, actions, posts, and comments instead of duplicating their data. For example, every time a moderator deletes a post or issues a warning, a new record is created here linking who did what, to which item, and why.\n * Key relationships: links to moderator/admin (actor), target user, affected post/comment (if applicable).\n * Special behaviors: strictly append-only (no updates); supports complete audit trail of moderation interventions.\n * \n * @namespace Moderation\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_moderation_action = $Result.DefaultSelection<Prisma.$discussionboard_moderation_actionPayload>\n/**\n * Model discussionboard_report_review\n * [Report Review Log] - Implements requirements for moderation report review workflow (sections 02.3.4, 02.3.5, 03).\n * Tracks moderator or admin handling of user-submitted reports on posts/comments. Maintains 3NF by referencing report, reviewer, affected post/comment, and action taken. For example, when a moderator reviews a reported post and marks it as 'resolved,' a record is created here linking to all relevant entities.\n * Key relationships: links to the report, reviewer, optionally post/comment.\n * Special behaviors: append-only, supports full reporting workflow and audit.\n * \n * @namespace Moderation\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_report_review = $Result.DefaultSelection<Prisma.$discussionboard_report_reviewPayload>\n/**\n * Model discussionboard_warning\n * [Warnings Issued Log] - Implements moderator warning history per requirements (sections 02.3.5, 02.3.6, 03).\n * Stores warnings given by moderators/admins to users for guideline-violating behavior. Maintains 3NF by linking recipient, issuer, and optionally the relevant post/comment. For example, when a moderator issues a warning for an offensive comment, that instance is logged here.\n * Key relationships: issued_by (moderator/admin), issued_to (target user), post/comment (context, nullable).\n * Special behaviors: historical only (warnings are never updated, only issued).\n * \n * @namespace Moderation\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_warning = $Result.DefaultSelection<Prisma.$discussionboard_warningPayload>\n/**\n * Model discussionboard_ban\n * [User Ban Log] - This model realizes the user suspension/ban requirements (sections 02.3.5, 02.3.6, 03).\n * Records every instance of an account being banned or muted, whether temporarily or permanently, by moderator/admin decision. Maintains 3NF by relating only to ban actors and affected users, no calculated ban metrics.\n * Key relationships: 'banned_by_id' (moderator/admin), 'banned_user_id' (target member), warning reference for context, no circular dependencies.\n * Special behaviors: all bans are point-in-time records, may be queried for active status by expiry date.\n * \n * @namespace Moderation\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_ban = $Result.DefaultSelection<Prisma.$discussionboard_banPayload>\n/**\n * Model discussionboard_notification\n * [Notification delivery and history] - This implements the 'User Notifications' and system-triggered alert requirements from the functional requirements (Section 3.7).\n * \n * This table records each notification sent to users (members, moderators, admins) regarding activity on posts, comments, moderator actions, and system events. Maintains full normalization (3NF) by storing atomic notification data and strictly referencing user and activity entities. For example, when a user receives a reply to their comment or a moderator action on their post, a new record is created here and references the relevant entities.\n * \n * Key relationships: References recipient user ({@link discussionboard_user}), optional linkage to post ({@link discussionboard_post}) or comment ({@link discussionboard_comments}), and moderator/admin actor when relevant. \n * Special behaviors: Supports targeting individual users; system messages have nullable activity references. All user/system notifications are auditable. No denormalized or calculated fields.\n * \n * @namespace Notification\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_notification = $Result.DefaultSelection<Prisma.$discussionboard_notificationPayload>\n/**\n * Model discussionboard_notification_preference\n * [User notification preferences] - Implements the notification preference system specified in requirements Section 3.7, giving users fine-grained control over what notifications they receive and how. All data is fully normalized.\n * \n * Business purpose: Enables per-user customization (mute, enable, push preference, etc.) for different notification types and channels. For example, a member might mute 'like' notifications but enable 'moderator_action' notifications on mobile.\n * \n * Technical context: Direct link to each user ({@link discussionboard_user}), with one row per user (enforced by a unique constraint). No denormalization.\n * \n * Usage example: Used when generating notifications or respecting user muting/settings for different event types.\n * \n * Special behaviors: All boolean flags, atomic, fully normalized. No computed columns.\n * \n * @namespace Notification\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_notification_preference = $Result.DefaultSelection<Prisma.$discussionboard_notification_preferencePayload>\n/**\n * Model discussionboard_audit_log\n * [Audit Logging for Sensitive Actions] - This implements the audit logging and traceability requirements from the user management and security sections, specifically from 'Audit Logging' in the User Roles & Permissions and 'Access & Security' in the Functional Requirements documents. \n * \n * Allows full traceability and accountability across admin and privileged actions (e.g., role changes, bans, moderation actions). Maintains full 3NF normalization by separating audit trail details from direct business data, storing only atomic data and foreign key references. For example, every time a ban is issued, or a user changes role, an entry is created here independently of the action's core data tables.\n * \n * Key relationships: references the user (actor) performing the action, the affected user (target), and provides linkage via entity_type/entity_id for polymorphic connections to the target business object. \n * Special behaviors: Should be written only by internal privileged actions, not by user-driven business flows. Designed for audit and compliance reviews. No calculated fields, strictly normalized.\n * \n * @namespace Admin\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_audit_log = $Result.DefaultSelection<Prisma.$discussionboard_audit_logPayload>\n/**\n * Model discussionboard_platform_setting\n * [Platform Configuration Management] - This implements requirements for platform-wide admin-configurable settings, drawn from 'Administration' in both the overview and functional requirements documents (see Admin: Platform Configuration, and Functionality: Platform-wide Settings). \n * \n * Solves the business problem of enabling admin users to manage platform-wide booleans, options, and policies in a normalized way. \n * Maintains 3NF by storing one setting per row, keyed by setting name, value, and type—never groups or arrays. For example, \"MaxPostAttachments\" or \"EnableModerationQueue\" are single atomic settings stored here.\n * \n * Key relationships: No foreign keys; settings are manipulated by admin flows only. \n * Special behaviors: Names are unique; mutating a setting should update only the single normalized row. No pre-calculated values or summaries—strictly atomic and normalized.\n * \n * @namespace Admin\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_platform_setting = $Result.DefaultSelection<Prisma.$discussionboard_platform_settingPayload>\n\n/**\n * ##  Prisma Client ʲˢ\n *\n * Type-safe database client for TypeScript & Node.js\n * @example\n * ```\n * const prisma = new PrismaClient()\n * // Fetch zero or more Discussionboard_users\n * const discussionboard_users = await prisma.discussionboard_user.findMany()\n * ```\n *\n *\n * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).\n */\nexport class PrismaClient<\n  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,\n  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,\n  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs\n> {\n  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }\n\n    /**\n   * ##  Prisma Client ʲˢ\n   *\n   * Type-safe database client for TypeScript & Node.js\n   * @example\n   * ```\n   * const prisma = new PrismaClient()\n   * // Fetch zero or more Discussionboard_users\n   * const discussionboard_users = await prisma.discussionboard_user.findMany()\n   * ```\n   *\n   *\n   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).\n   */\n\n  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);\n  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;\n\n  /**\n   * Connect with the database\n   */\n  $connect(): $Utils.JsPromise<void>;\n\n  /**\n   * Disconnect from the database\n   */\n  $disconnect(): $Utils.JsPromise<void>;\n\n  /**\n   * Add a middleware\n   * @deprecated since 4.16.0. For new code, prefer client extensions instead.\n   * @see https://pris.ly/d/extensions\n   */\n  $use(cb: Prisma.Middleware): void\n\n/**\n   * Executes a prepared raw query and returns the number of affected rows.\n   * @example\n   * ```\n   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`\n   * ```\n   *\n   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).\n   */\n  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;\n\n  /**\n   * Executes a raw query and returns the number of affected rows.\n   * Susceptible to SQL injections, see documentation.\n   * @example\n   * ```\n   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')\n   * ```\n   *\n   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).\n   */\n  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;\n\n  /**\n   * Performs a prepared raw query and returns the `SELECT` data.\n   * @example\n   * ```\n   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`\n   * ```\n   *\n   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).\n   */\n  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;\n\n  /**\n   * Performs a raw query and returns the `SELECT` data.\n   * Susceptible to SQL injections, see documentation.\n   * @example\n   * ```\n   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')\n   * ```\n   *\n   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).\n   */\n  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;\n\n\n  /**\n   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.\n   * @example\n   * ```\n   * const [george, bob, alice] = await prisma.$transaction([\n   *   prisma.user.create({ data: { name: 'George' } }),\n   *   prisma.user.create({ data: { name: 'Bob' } }),\n   *   prisma.user.create({ data: { name: 'Alice' } }),\n   * ])\n   * ```\n   * \n   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).\n   */\n  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>\n\n  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>\n\n\n  $extends: $Extensions.ExtendsHook<\"extends\", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {\n    extArgs: ExtArgs\n  }>>\n\n      /**\n   * `prisma.discussionboard_user`: Exposes CRUD operations for the **discussionboard_user** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_users\n    * const discussionboard_users = await prisma.discussionboard_user.findMany()\n    * ```\n    */\n  get discussionboard_user(): Prisma.discussionboard_userDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_user_profile`: Exposes CRUD operations for the **discussionboard_user_profile** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_user_profiles\n    * const discussionboard_user_profiles = await prisma.discussionboard_user_profile.findMany()\n    * ```\n    */\n  get discussionboard_user_profile(): Prisma.discussionboard_user_profileDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_member`: Exposes CRUD operations for the **discussionboard_member** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_members\n    * const discussionboard_members = await prisma.discussionboard_member.findMany()\n    * ```\n    */\n  get discussionboard_member(): Prisma.discussionboard_memberDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_moderator`: Exposes CRUD operations for the **discussionboard_moderator** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_moderators\n    * const discussionboard_moderators = await prisma.discussionboard_moderator.findMany()\n    * ```\n    */\n  get discussionboard_moderator(): Prisma.discussionboard_moderatorDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_admin`: Exposes CRUD operations for the **discussionboard_admin** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_admins\n    * const discussionboard_admins = await prisma.discussionboard_admin.findMany()\n    * ```\n    */\n  get discussionboard_admin(): Prisma.discussionboard_adminDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_post`: Exposes CRUD operations for the **discussionboard_post** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_posts\n    * const discussionboard_posts = await prisma.discussionboard_post.findMany()\n    * ```\n    */\n  get discussionboard_post(): Prisma.discussionboard_postDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_post_category`: Exposes CRUD operations for the **discussionboard_post_category** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_post_categories\n    * const discussionboard_post_categories = await prisma.discussionboard_post_category.findMany()\n    * ```\n    */\n  get discussionboard_post_category(): Prisma.discussionboard_post_categoryDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_post_tag`: Exposes CRUD operations for the **discussionboard_post_tag** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_post_tags\n    * const discussionboard_post_tags = await prisma.discussionboard_post_tag.findMany()\n    * ```\n    */\n  get discussionboard_post_tag(): Prisma.discussionboard_post_tagDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_post_attachment`: Exposes CRUD operations for the **discussionboard_post_attachment** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_post_attachments\n    * const discussionboard_post_attachments = await prisma.discussionboard_post_attachment.findMany()\n    * ```\n    */\n  get discussionboard_post_attachment(): Prisma.discussionboard_post_attachmentDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_comments`: Exposes CRUD operations for the **discussionboard_comments** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_comments\n    * const discussionboard_comments = await prisma.discussionboard_comments.findMany()\n    * ```\n    */\n  get discussionboard_comments(): Prisma.discussionboard_commentsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_likes`: Exposes CRUD operations for the **discussionboard_likes** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_likes\n    * const discussionboard_likes = await prisma.discussionboard_likes.findMany()\n    * ```\n    */\n  get discussionboard_likes(): Prisma.discussionboard_likesDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_reports`: Exposes CRUD operations for the **discussionboard_reports** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_reports\n    * const discussionboard_reports = await prisma.discussionboard_reports.findMany()\n    * ```\n    */\n  get discussionboard_reports(): Prisma.discussionboard_reportsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_moderation_action`: Exposes CRUD operations for the **discussionboard_moderation_action** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_moderation_actions\n    * const discussionboard_moderation_actions = await prisma.discussionboard_moderation_action.findMany()\n    * ```\n    */\n  get discussionboard_moderation_action(): Prisma.discussionboard_moderation_actionDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_report_review`: Exposes CRUD operations for the **discussionboard_report_review** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_report_reviews\n    * const discussionboard_report_reviews = await prisma.discussionboard_report_review.findMany()\n    * ```\n    */\n  get discussionboard_report_review(): Prisma.discussionboard_report_reviewDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_warning`: Exposes CRUD operations for the **discussionboard_warning** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_warnings\n    * const discussionboard_warnings = await prisma.discussionboard_warning.findMany()\n    * ```\n    */\n  get discussionboard_warning(): Prisma.discussionboard_warningDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_ban`: Exposes CRUD operations for the **discussionboard_ban** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_bans\n    * const discussionboard_bans = await prisma.discussionboard_ban.findMany()\n    * ```\n    */\n  get discussionboard_ban(): Prisma.discussionboard_banDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_notification`: Exposes CRUD operations for the **discussionboard_notification** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_notifications\n    * const discussionboard_notifications = await prisma.discussionboard_notification.findMany()\n    * ```\n    */\n  get discussionboard_notification(): Prisma.discussionboard_notificationDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_notification_preference`: Exposes CRUD operations for the **discussionboard_notification_preference** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_notification_preferences\n    * const discussionboard_notification_preferences = await prisma.discussionboard_notification_preference.findMany()\n    * ```\n    */\n  get discussionboard_notification_preference(): Prisma.discussionboard_notification_preferenceDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_audit_log`: Exposes CRUD operations for the **discussionboard_audit_log** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_audit_logs\n    * const discussionboard_audit_logs = await prisma.discussionboard_audit_log.findMany()\n    * ```\n    */\n  get discussionboard_audit_log(): Prisma.discussionboard_audit_logDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_platform_setting`: Exposes CRUD operations for the **discussionboard_platform_setting** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_platform_settings\n    * const discussionboard_platform_settings = await prisma.discussionboard_platform_setting.findMany()\n    * ```\n    */\n  get discussionboard_platform_setting(): Prisma.discussionboard_platform_settingDelegate<ExtArgs, ClientOptions>;\n}\n\nexport namespace Prisma {\n  export import DMMF = runtime.DMMF\n\n  export type PrismaPromise<T> = $Public.PrismaPromise<T>\n\n  /**\n   * Validator\n   */\n  export import validator = runtime.Public.validator\n\n  /**\n   * Prisma Errors\n   */\n  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError\n  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError\n  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError\n  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError\n  export import PrismaClientValidationError = runtime.PrismaClientValidationError\n\n  /**\n   * Re-export of sql-template-tag\n   */\n  export import sql = runtime.sqltag\n  export import empty = runtime.empty\n  export import join = runtime.join\n  export import raw = runtime.raw\n  export import Sql = runtime.Sql\n\n\n\n  /**\n   * Decimal.js\n   */\n  export import Decimal = runtime.Decimal\n\n  export type DecimalJsLike = runtime.DecimalJsLike\n\n  /**\n   * Metrics\n   */\n  export type Metrics = runtime.Metrics\n  export type Metric<T> = runtime.Metric<T>\n  export type MetricHistogram = runtime.MetricHistogram\n  export type MetricHistogramBucket = runtime.MetricHistogramBucket\n\n  /**\n  * Extensions\n  */\n  export import Extension = $Extensions.UserArgs\n  export import getExtensionContext = runtime.Extensions.getExtensionContext\n  export import Args = $Public.Args\n  export import Payload = $Public.Payload\n  export import Result = $Public.Result\n  export import Exact = $Public.Exact\n\n  /**\n   * Prisma Client JS version: local\n   * Query Engine version: local\n   */\n  export type PrismaVersion = {\n    client: string\n  }\n\n  export const prismaVersion: PrismaVersion\n\n  /**\n   * Utility Types\n   */\n\n\n  export import JsonObject = runtime.JsonObject\n  export import JsonArray = runtime.JsonArray\n  export import JsonValue = runtime.JsonValue\n  export import InputJsonObject = runtime.InputJsonObject\n  export import InputJsonArray = runtime.InputJsonArray\n  export import InputJsonValue = runtime.InputJsonValue\n\n  /**\n   * Types of the values used to represent different kinds of `null` values when working with JSON fields.\n   *\n   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n   */\n  namespace NullTypes {\n    /**\n    * Type of `Prisma.DbNull`.\n    *\n    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.\n    *\n    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n    */\n    class DbNull {\n      private DbNull: never\n      private constructor()\n    }\n\n    /**\n    * Type of `Prisma.JsonNull`.\n    *\n    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.\n    *\n    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n    */\n    class JsonNull {\n      private JsonNull: never\n      private constructor()\n    }\n\n    /**\n    * Type of `Prisma.AnyNull`.\n    *\n    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.\n    *\n    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n    */\n    class AnyNull {\n      private AnyNull: never\n      private constructor()\n    }\n  }\n\n  /**\n   * Helper for filtering JSON entries that have `null` on the database (empty on the db)\n   *\n   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n   */\n  export const DbNull: NullTypes.DbNull\n\n  /**\n   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)\n   *\n   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n   */\n  export const JsonNull: NullTypes.JsonNull\n\n  /**\n   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`\n   *\n   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n   */\n  export const AnyNull: NullTypes.AnyNull\n\n  type SelectAndInclude = {\n    select: any\n    include: any\n  }\n\n  type SelectAndOmit = {\n    select: any\n    omit: any\n  }\n\n  /**\n   * Get the type of the value, that the Promise holds.\n   */\n  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;\n\n  /**\n   * Get the return type of a function which returns a Promise.\n   */\n  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>\n\n  /**\n   * From T, pick a set of properties whose keys are in the union K\n   */\n  type Prisma__Pick<T, K extends keyof T> = {\n      [P in K]: T[P];\n  };\n\n\n  export type Enumerable<T> = T | Array<T>;\n\n  export type RequiredKeys<T> = {\n    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K\n  }[keyof T]\n\n  export type TruthyKeys<T> = keyof {\n    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K\n  }\n\n  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>\n\n  /**\n   * Subset\n   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection\n   */\n  export type Subset<T, U> = {\n    [key in keyof T]: key extends keyof U ? T[key] : never;\n  };\n\n  /**\n   * SelectSubset\n   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.\n   * Additionally, it validates, if both select and include are present. If the case, it errors.\n   */\n  export type SelectSubset<T, U> = {\n    [key in keyof T]: key extends keyof U ? T[key] : never\n  } &\n    (T extends SelectAndInclude\n      ? 'Please either choose `select` or `include`.'\n      : T extends SelectAndOmit\n        ? 'Please either choose `select` or `omit`.'\n        : {})\n\n  /**\n   * Subset + Intersection\n   * @desc From `T` pick properties that exist in `U` and intersect `K`\n   */\n  export type SubsetIntersection<T, U, K> = {\n    [key in keyof T]: key extends keyof U ? T[key] : never\n  } &\n    K\n\n  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };\n\n  /**\n   * XOR is needed to have a real mutually exclusive union type\n   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types\n   */\n  type XOR<T, U> =\n    T extends object ?\n    U extends object ?\n      (Without<T, U> & U) | (Without<U, T> & T)\n    : U : T\n\n\n  /**\n   * Is T a Record?\n   */\n  type IsObject<T extends any> = T extends Array<any>\n  ? False\n  : T extends Date\n  ? False\n  : T extends Uint8Array\n  ? False\n  : T extends BigInt\n  ? False\n  : T extends object\n  ? True\n  : False\n\n\n  /**\n   * If it's T[], return T\n   */\n  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T\n\n  /**\n   * From ts-toolbelt\n   */\n\n  type __Either<O extends object, K extends Key> = Omit<O, K> &\n    {\n      // Merge all but K\n      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities\n    }[K]\n\n  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>\n\n  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>\n\n  type _Either<\n    O extends object,\n    K extends Key,\n    strict extends Boolean\n  > = {\n    1: EitherStrict<O, K>\n    0: EitherLoose<O, K>\n  }[strict]\n\n  type Either<\n    O extends object,\n    K extends Key,\n    strict extends Boolean = 1\n  > = O extends unknown ? _Either<O, K, strict> : never\n\n  export type Union = any\n\n  type PatchUndefined<O extends object, O1 extends object> = {\n    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]\n  } & {}\n\n  /** Helper Types for \"Merge\" **/\n  export type IntersectOf<U extends Union> = (\n    U extends unknown ? (k: U) => void : never\n  ) extends (k: infer I) => void\n    ? I\n    : never\n\n  export type Overwrite<O extends object, O1 extends object> = {\n      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];\n  } & {};\n\n  type _Merge<U extends object> = IntersectOf<Overwrite<U, {\n      [K in keyof U]-?: At<U, K>;\n  }>>;\n\n  type Key = string | number | symbol;\n  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;\n  type AtStrict<O extends object, K extends Key> = O[K & keyof O];\n  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;\n  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {\n      1: AtStrict<O, K>;\n      0: AtLoose<O, K>;\n  }[strict];\n\n  export type ComputeRaw<A extends any> = A extends Function ? A : {\n    [K in keyof A]: A[K];\n  } & {};\n\n  export type OptionalFlat<O> = {\n    [K in keyof O]?: O[K];\n  } & {};\n\n  type _Record<K extends keyof any, T> = {\n    [P in K]: T;\n  };\n\n  // cause typescript not to expand types and preserve names\n  type NoExpand<T> = T extends unknown ? T : never;\n\n  // this type assumes the passed object is entirely optional\n  type AtLeast<O extends object, K extends string> = NoExpand<\n    O extends unknown\n    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)\n      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O\n    : never>;\n\n  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;\n\n  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;\n  /** End Helper Types for \"Merge\" **/\n\n  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;\n\n  /**\n  A [[Boolean]]\n  */\n  export type Boolean = True | False\n\n  // /**\n  // 1\n  // */\n  export type True = 1\n\n  /**\n  0\n  */\n  export type False = 0\n\n  export type Not<B extends Boolean> = {\n    0: 1\n    1: 0\n  }[B]\n\n  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]\n    ? 0 // anything `never` is false\n    : A1 extends A2\n    ? 1\n    : 0\n\n  export type Has<U extends Union, U1 extends Union> = Not<\n    Extends<Exclude<U1, U>, U1>\n  >\n\n  export type Or<B1 extends Boolean, B2 extends Boolean> = {\n    0: {\n      0: 0\n      1: 1\n    }\n    1: {\n      0: 1\n      1: 1\n    }\n  }[B1][B2]\n\n  export type Keys<U extends Union> = U extends unknown ? keyof U : never\n\n  type Cast<A, B> = A extends B ? A : B;\n\n  export const type: unique symbol;\n\n\n\n  /**\n   * Used by group by\n   */\n\n  export type GetScalarType<T, O> = O extends object ? {\n    [P in keyof T]: P extends keyof O\n      ? O[P]\n      : never\n  } : never\n\n  type FieldPaths<\n    T,\n    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>\n  > = IsObject<T> extends True ? U : T\n\n  type GetHavingFields<T> = {\n    [K in keyof T]: Or<\n      Or<Extends<'OR', K>, Extends<'AND', K>>,\n      Extends<'NOT', K>\n    > extends True\n      ? // infer is only needed to not hit TS limit\n        // based on the brilliant idea of Pierre-Antoine Mills\n        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437\n        T[K] extends infer TK\n        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>\n        : never\n      : {} extends FieldPaths<T[K]>\n      ? never\n      : K\n  }[keyof T]\n\n  /**\n   * Convert tuple to union\n   */\n  type _TupleToUnion<T> = T extends (infer E)[] ? E : never\n  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>\n  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T\n\n  /**\n   * Like `Pick`, but additionally can also accept an array of keys\n   */\n  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>\n\n  /**\n   * Exclude all keys with underscores\n   */\n  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T\n\n\n  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>\n\n  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>\n\n\n  export const ModelName: {\n    discussionboard_user: 'discussionboard_user',\n    discussionboard_user_profile: 'discussionboard_user_profile',\n    discussionboard_member: 'discussionboard_member',\n    discussionboard_moderator: 'discussionboard_moderator',\n    discussionboard_admin: 'discussionboard_admin',\n    discussionboard_post: 'discussionboard_post',\n    discussionboard_post_category: 'discussionboard_post_category',\n    discussionboard_post_tag: 'discussionboard_post_tag',\n    discussionboard_post_attachment: 'discussionboard_post_attachment',\n    discussionboard_comments: 'discussionboard_comments',\n    discussionboard_likes: 'discussionboard_likes',\n    discussionboard_reports: 'discussionboard_reports',\n    discussionboard_moderation_action: 'discussionboard_moderation_action',\n    discussionboard_report_review: 'discussionboard_report_review',\n    discussionboard_warning: 'discussionboard_warning',\n    discussionboard_ban: 'discussionboard_ban',\n    discussionboard_notification: 'discussionboard_notification',\n    discussionboard_notification_preference: 'discussionboard_notification_preference',\n    discussionboard_audit_log: 'discussionboard_audit_log',\n    discussionboard_platform_setting: 'discussionboard_platform_setting'\n  };\n\n  export type ModelName = (typeof ModelName)[keyof typeof ModelName]\n\n\n  export type Datasources = {\n    db?: Datasource\n  }\n\n  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {\n    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>\n  }\n\n  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {\n    globalOmitOptions: {\n      omit: GlobalOmitOptions\n    }\n    meta: {\n      modelProps: \"discussionboard_user\" | \"discussionboard_user_profile\" | \"discussionboard_member\" | \"discussionboard_moderator\" | \"discussionboard_admin\" | \"discussionboard_post\" | \"discussionboard_post_category\" | \"discussionboard_post_tag\" | \"discussionboard_post_attachment\" | \"discussionboard_comments\" | \"discussionboard_likes\" | \"discussionboard_reports\" | \"discussionboard_moderation_action\" | \"discussionboard_report_review\" | \"discussionboard_warning\" | \"discussionboard_ban\" | \"discussionboard_notification\" | \"discussionboard_notification_preference\" | \"discussionboard_audit_log\" | \"discussionboard_platform_setting\"\n      txIsolationLevel: Prisma.TransactionIsolationLevel\n    }\n    model: {\n      discussionboard_user: {\n        payload: Prisma.$discussionboard_userPayload<ExtArgs>\n        fields: Prisma.discussionboard_userFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_userFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_userPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_userFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_userPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_userFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_userPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_userFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_userPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_userFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_userPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_userCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_userPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_userCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_userCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_userPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_userDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_userPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_userUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_userPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_userDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_userUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_userUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_userPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_userUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_userPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_userAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_user>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_userGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_userGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_userCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_userCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_user_profile: {\n        payload: Prisma.$discussionboard_user_profilePayload<ExtArgs>\n        fields: Prisma.discussionboard_user_profileFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_user_profileFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_profilePayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_user_profileFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_profilePayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_user_profileFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_profilePayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_user_profileFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_profilePayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_user_profileFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_profilePayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_user_profileCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_profilePayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_user_profileCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_user_profileCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_profilePayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_user_profileDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_profilePayload>\n          }\n          update: {\n            args: Prisma.discussionboard_user_profileUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_profilePayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_user_profileDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_user_profileUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_user_profileUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_profilePayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_user_profileUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_profilePayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_user_profileAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_user_profile>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_user_profileGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_user_profileGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_user_profileCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_user_profileCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_member: {\n        payload: Prisma.$discussionboard_memberPayload<ExtArgs>\n        fields: Prisma.discussionboard_memberFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_memberFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_memberPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_memberFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_memberPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_memberFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_memberPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_memberFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_memberPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_memberFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_memberPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_memberCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_memberPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_memberCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_memberCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_memberPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_memberDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_memberPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_memberUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_memberPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_memberDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_memberUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_memberUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_memberPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_memberUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_memberPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_memberAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_member>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_memberGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_memberGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_memberCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_memberCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_moderator: {\n        payload: Prisma.$discussionboard_moderatorPayload<ExtArgs>\n        fields: Prisma.discussionboard_moderatorFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_moderatorFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderatorPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_moderatorFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderatorPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_moderatorFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderatorPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_moderatorFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderatorPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_moderatorFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderatorPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_moderatorCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderatorPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_moderatorCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_moderatorCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderatorPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_moderatorDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderatorPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_moderatorUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderatorPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_moderatorDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_moderatorUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_moderatorUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderatorPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_moderatorUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderatorPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_moderatorAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_moderator>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_moderatorGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_moderatorGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_moderatorCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_moderatorCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_admin: {\n        payload: Prisma.$discussionboard_adminPayload<ExtArgs>\n        fields: Prisma.discussionboard_adminFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_adminFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_adminPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_adminFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_adminPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_adminFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_adminPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_adminFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_adminPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_adminFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_adminPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_adminCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_adminPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_adminCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_adminCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_adminPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_adminDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_adminPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_adminUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_adminPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_adminDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_adminUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_adminUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_adminPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_adminUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_adminPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_adminAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_admin>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_adminGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_adminGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_adminCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_adminCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_post: {\n        payload: Prisma.$discussionboard_postPayload<ExtArgs>\n        fields: Prisma.discussionboard_postFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_postFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_postPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_postFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_postPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_postFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_postPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_postFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_postPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_postFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_postPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_postCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_postPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_postCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_postCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_postPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_postDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_postPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_postUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_postPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_postDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_postUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_postUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_postPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_postUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_postPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_postAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_post>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_postGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_postGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_postCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_postCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_post_category: {\n        payload: Prisma.$discussionboard_post_categoryPayload<ExtArgs>\n        fields: Prisma.discussionboard_post_categoryFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_post_categoryFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_categoryPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_post_categoryFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_categoryPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_post_categoryFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_categoryPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_post_categoryFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_categoryPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_post_categoryFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_categoryPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_post_categoryCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_categoryPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_post_categoryCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_post_categoryCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_categoryPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_post_categoryDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_categoryPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_post_categoryUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_categoryPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_post_categoryDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_post_categoryUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_post_categoryUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_categoryPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_post_categoryUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_categoryPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_post_categoryAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_post_category>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_post_categoryGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_post_categoryGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_post_categoryCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_post_categoryCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_post_tag: {\n        payload: Prisma.$discussionboard_post_tagPayload<ExtArgs>\n        fields: Prisma.discussionboard_post_tagFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_post_tagFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_tagPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_post_tagFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_tagPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_post_tagFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_tagPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_post_tagFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_tagPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_post_tagFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_tagPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_post_tagCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_tagPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_post_tagCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_post_tagCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_tagPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_post_tagDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_tagPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_post_tagUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_tagPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_post_tagDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_post_tagUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_post_tagUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_tagPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_post_tagUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_tagPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_post_tagAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_post_tag>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_post_tagGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_post_tagGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_post_tagCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_post_tagCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_post_attachment: {\n        payload: Prisma.$discussionboard_post_attachmentPayload<ExtArgs>\n        fields: Prisma.discussionboard_post_attachmentFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_post_attachmentFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_attachmentPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_post_attachmentFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_attachmentPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_post_attachmentFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_attachmentPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_post_attachmentFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_attachmentPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_post_attachmentFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_attachmentPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_post_attachmentCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_attachmentPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_post_attachmentCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_post_attachmentCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_attachmentPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_post_attachmentDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_attachmentPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_post_attachmentUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_attachmentPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_post_attachmentDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_post_attachmentUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_post_attachmentUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_attachmentPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_post_attachmentUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_attachmentPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_post_attachmentAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_post_attachment>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_post_attachmentGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_post_attachmentGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_post_attachmentCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_post_attachmentCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_comments: {\n        payload: Prisma.$discussionboard_commentsPayload<ExtArgs>\n        fields: Prisma.discussionboard_commentsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_commentsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_commentsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_commentsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_commentsPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_commentsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_commentsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_commentsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_commentsPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_commentsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_commentsPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_commentsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_commentsPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_commentsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_commentsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_commentsPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_commentsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_commentsPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_commentsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_commentsPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_commentsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_commentsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_commentsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_commentsPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_commentsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_commentsPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_commentsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_comments>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_commentsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_commentsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_commentsCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_commentsCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_likes: {\n        payload: Prisma.$discussionboard_likesPayload<ExtArgs>\n        fields: Prisma.discussionboard_likesFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_likesFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_likesPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_likesFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_likesPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_likesFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_likesPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_likesFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_likesPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_likesFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_likesPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_likesCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_likesPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_likesCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_likesCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_likesPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_likesDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_likesPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_likesUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_likesPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_likesDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_likesUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_likesUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_likesPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_likesUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_likesPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_likesAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_likes>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_likesGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_likesGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_likesCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_likesCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_reports: {\n        payload: Prisma.$discussionboard_reportsPayload<ExtArgs>\n        fields: Prisma.discussionboard_reportsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_reportsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_reportsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_reportsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_reportsPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_reportsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_reportsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_reportsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_reportsPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_reportsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_reportsPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_reportsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_reportsPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_reportsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_reportsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_reportsPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_reportsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_reportsPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_reportsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_reportsPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_reportsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_reportsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_reportsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_reportsPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_reportsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_reportsPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_reportsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_reports>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_reportsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_reportsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_reportsCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_reportsCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_moderation_action: {\n        payload: Prisma.$discussionboard_moderation_actionPayload<ExtArgs>\n        fields: Prisma.discussionboard_moderation_actionFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_moderation_actionFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderation_actionPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_moderation_actionFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderation_actionPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_moderation_actionFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderation_actionPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_moderation_actionFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderation_actionPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_moderation_actionFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderation_actionPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_moderation_actionCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderation_actionPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_moderation_actionCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_moderation_actionCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderation_actionPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_moderation_actionDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderation_actionPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_moderation_actionUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderation_actionPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_moderation_actionDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_moderation_actionUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_moderation_actionUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderation_actionPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_moderation_actionUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderation_actionPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_moderation_actionAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_moderation_action>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_moderation_actionGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_moderation_actionGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_moderation_actionCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_moderation_actionCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_report_review: {\n        payload: Prisma.$discussionboard_report_reviewPayload<ExtArgs>\n        fields: Prisma.discussionboard_report_reviewFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_report_reviewFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_report_reviewPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_report_reviewFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_report_reviewPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_report_reviewFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_report_reviewPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_report_reviewFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_report_reviewPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_report_reviewFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_report_reviewPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_report_reviewCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_report_reviewPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_report_reviewCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_report_reviewCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_report_reviewPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_report_reviewDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_report_reviewPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_report_reviewUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_report_reviewPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_report_reviewDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_report_reviewUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_report_reviewUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_report_reviewPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_report_reviewUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_report_reviewPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_report_reviewAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_report_review>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_report_reviewGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_report_reviewGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_report_reviewCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_report_reviewCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_warning: {\n        payload: Prisma.$discussionboard_warningPayload<ExtArgs>\n        fields: Prisma.discussionboard_warningFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_warningFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_warningPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_warningFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_warningPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_warningFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_warningPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_warningFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_warningPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_warningFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_warningPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_warningCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_warningPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_warningCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_warningCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_warningPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_warningDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_warningPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_warningUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_warningPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_warningDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_warningUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_warningUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_warningPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_warningUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_warningPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_warningAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_warning>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_warningGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_warningGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_warningCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_warningCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_ban: {\n        payload: Prisma.$discussionboard_banPayload<ExtArgs>\n        fields: Prisma.discussionboard_banFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_banFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_banPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_banFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_banPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_banFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_banPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_banFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_banPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_banFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_banPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_banCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_banPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_banCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_banCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_banPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_banDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_banPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_banUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_banPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_banDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_banUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_banUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_banPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_banUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_banPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_banAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_ban>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_banGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_banGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_banCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_banCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_notification: {\n        payload: Prisma.$discussionboard_notificationPayload<ExtArgs>\n        fields: Prisma.discussionboard_notificationFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_notificationFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notificationPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_notificationFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notificationPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_notificationFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notificationPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_notificationFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notificationPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_notificationFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notificationPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_notificationCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notificationPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_notificationCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_notificationCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notificationPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_notificationDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notificationPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_notificationUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notificationPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_notificationDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_notificationUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_notificationUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notificationPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_notificationUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notificationPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_notificationAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_notification>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_notificationGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_notificationGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_notificationCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_notificationCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_notification_preference: {\n        payload: Prisma.$discussionboard_notification_preferencePayload<ExtArgs>\n        fields: Prisma.discussionboard_notification_preferenceFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_notification_preferenceFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notification_preferencePayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_notification_preferenceFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notification_preferencePayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_notification_preferenceFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notification_preferencePayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_notification_preferenceFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notification_preferencePayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_notification_preferenceFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notification_preferencePayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_notification_preferenceCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notification_preferencePayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_notification_preferenceCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_notification_preferenceCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notification_preferencePayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_notification_preferenceDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notification_preferencePayload>\n          }\n          update: {\n            args: Prisma.discussionboard_notification_preferenceUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notification_preferencePayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_notification_preferenceDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_notification_preferenceUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_notification_preferenceUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notification_preferencePayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_notification_preferenceUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notification_preferencePayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_notification_preferenceAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_notification_preference>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_notification_preferenceGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_notification_preferenceGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_notification_preferenceCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_notification_preferenceCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_audit_log: {\n        payload: Prisma.$discussionboard_audit_logPayload<ExtArgs>\n        fields: Prisma.discussionboard_audit_logFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_audit_logFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_audit_logPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_audit_logFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_audit_logPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_audit_logFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_audit_logPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_audit_logFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_audit_logPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_audit_logFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_audit_logPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_audit_logCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_audit_logPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_audit_logCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_audit_logCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_audit_logPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_audit_logDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_audit_logPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_audit_logUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_audit_logPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_audit_logDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_audit_logUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_audit_logUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_audit_logPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_audit_logUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_audit_logPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_audit_logAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_audit_log>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_audit_logGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_audit_logGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_audit_logCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_audit_logCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_platform_setting: {\n        payload: Prisma.$discussionboard_platform_settingPayload<ExtArgs>\n        fields: Prisma.discussionboard_platform_settingFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_platform_settingFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_platform_settingPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_platform_settingFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_platform_settingPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_platform_settingFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_platform_settingPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_platform_settingFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_platform_settingPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_platform_settingFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_platform_settingPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_platform_settingCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_platform_settingPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_platform_settingCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_platform_settingCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_platform_settingPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_platform_settingDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_platform_settingPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_platform_settingUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_platform_settingPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_platform_settingDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_platform_settingUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_platform_settingUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_platform_settingPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_platform_settingUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_platform_settingPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_platform_settingAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_platform_setting>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_platform_settingGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_platform_settingGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_platform_settingCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_platform_settingCountAggregateOutputType> | number\n          }\n        }\n      }\n    }\n  } & {\n    other: {\n      payload: any\n      operations: {\n        $executeRaw: {\n          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],\n          result: any\n        }\n        $executeRawUnsafe: {\n          args: [query: string, ...values: any[]],\n          result: any\n        }\n        $queryRaw: {\n          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],\n          result: any\n        }\n        $queryRawUnsafe: {\n          args: [query: string, ...values: any[]],\n          result: any\n        }\n      }\n    }\n  }\n  export const defineExtension: $Extensions.ExtendsHook<\"define\", Prisma.TypeMapCb, $Extensions.DefaultArgs>\n  export type DefaultPrismaClient = PrismaClient\n  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'\n  export interface PrismaClientOptions {\n    /**\n     * Overwrites the datasource url from your schema.prisma file\n     */\n    datasources?: Datasources\n    /**\n     * Overwrites the datasource url from your schema.prisma file\n     */\n    datasourceUrl?: string\n    /**\n     * @default \"colorless\"\n     */\n    errorFormat?: ErrorFormat\n    /**\n     * @example\n     * ```\n     * // Defaults to stdout\n     * log: ['query', 'info', 'warn', 'error']\n     * \n     * // Emit as events\n     * log: [\n     *   { emit: 'stdout', level: 'query' },\n     *   { emit: 'stdout', level: 'info' },\n     *   { emit: 'stdout', level: 'warn' }\n     *   { emit: 'stdout', level: 'error' }\n     * ]\n     * ```\n     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).\n     */\n    log?: (LogLevel | LogDefinition)[]\n    /**\n     * The default values for transactionOptions\n     * maxWait ?= 2000\n     * timeout ?= 5000\n     */\n    transactionOptions?: {\n      maxWait?: number\n      timeout?: number\n      isolationLevel?: Prisma.TransactionIsolationLevel\n    }\n    /**\n     * Global configuration for omitting model fields by default.\n     * \n     * @example\n     * ```\n     * const prisma = new PrismaClient({\n     *   omit: {\n     *     user: {\n     *       password: true\n     *     }\n     *   }\n     * })\n     * ```\n     */\n    omit?: Prisma.GlobalOmitConfig\n  }\n  export type GlobalOmitConfig = {\n    discussionboard_user?: discussionboard_userOmit\n    discussionboard_user_profile?: discussionboard_user_profileOmit\n    discussionboard_member?: discussionboard_memberOmit\n    discussionboard_moderator?: discussionboard_moderatorOmit\n    discussionboard_admin?: discussionboard_adminOmit\n    discussionboard_post?: discussionboard_postOmit\n    discussionboard_post_category?: discussionboard_post_categoryOmit\n    discussionboard_post_tag?: discussionboard_post_tagOmit\n    discussionboard_post_attachment?: discussionboard_post_attachmentOmit\n    discussionboard_comments?: discussionboard_commentsOmit\n    discussionboard_likes?: discussionboard_likesOmit\n    discussionboard_reports?: discussionboard_reportsOmit\n    discussionboard_moderation_action?: discussionboard_moderation_actionOmit\n    discussionboard_report_review?: discussionboard_report_reviewOmit\n    discussionboard_warning?: discussionboard_warningOmit\n    discussionboard_ban?: discussionboard_banOmit\n    discussionboard_notification?: discussionboard_notificationOmit\n    discussionboard_notification_preference?: discussionboard_notification_preferenceOmit\n    discussionboard_audit_log?: discussionboard_audit_logOmit\n    discussionboard_platform_setting?: discussionboard_platform_settingOmit\n  }\n\n  /* Types for Logging */\n  export type LogLevel = 'info' | 'query' | 'warn' | 'error'\n  export type LogDefinition = {\n    level: LogLevel\n    emit: 'stdout' | 'event'\n  }\n\n  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never\n  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?\n    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>\n    : never\n\n  export type QueryEvent = {\n    timestamp: Date\n    query: string\n    params: string\n    duration: number\n    target: string\n  }\n\n  export type LogEvent = {\n    timestamp: Date\n    message: string\n    target: string\n  }\n  /* End Types for Logging */\n\n\n  export type PrismaAction =\n    | 'findUnique'\n    | 'findUniqueOrThrow'\n    | 'findMany'\n    | 'findFirst'\n    | 'findFirstOrThrow'\n    | 'create'\n    | 'createMany'\n    | 'createManyAndReturn'\n    | 'update'\n    | 'updateMany'\n    | 'updateManyAndReturn'\n    | 'upsert'\n    | 'delete'\n    | 'deleteMany'\n    | 'executeRaw'\n    | 'queryRaw'\n    | 'aggregate'\n    | 'count'\n    | 'runCommandRaw'\n    | 'findRaw'\n    | 'groupBy'\n\n  /**\n   * These options are being passed into the middleware as \"params\"\n   */\n  export type MiddlewareParams = {\n    model?: ModelName\n    action: PrismaAction\n    args: any\n    dataPath: string[]\n    runInTransaction: boolean\n  }\n\n  /**\n   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation\n   */\n  export type Middleware<T = any> = (\n    params: MiddlewareParams,\n    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,\n  ) => $Utils.JsPromise<T>\n\n  // tested in getLogLevel.test.ts\n  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;\n\n  /**\n   * `PrismaClient` proxy available in interactive transactions.\n   */\n  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>\n\n  export type Datasource = {\n    url?: string\n  }\n\n  /**\n   * Count Types\n   */\n\n\n  /**\n   * Count Type Discussionboard_userCountOutputType\n   */\n\n  export type Discussionboard_userCountOutputType = {\n    discussionboard_comments: number\n    discussionboard_likes: number\n    discussionboard_reports: number\n    discussionboard_moderation_action_of_actor_id: number\n    discussionboard_moderation_action_of_target_user_id: number\n    discussionboard_report_review: number\n    discussionboard_warning_of_issued_by_id: number\n    discussionboard_warning_of_issued_to_id: number\n    discussionboard_ban_of_banned_user_id: number\n    discussionboard_ban_of_banned_by_id: number\n    discussionboard_notification_of_recipient_user_id: number\n    discussionboard_notification_of_actor_user_id: number\n    discussionboard_audit_log_of_actor_user_id: number\n    discussionboard_audit_log_of_target_user_id: number\n  }\n\n  export type Discussionboard_userCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_comments?: boolean | Discussionboard_userCountOutputTypeCountDiscussionboard_commentsArgs\n    discussionboard_likes?: boolean | Discussionboard_userCountOutputTypeCountDiscussionboard_likesArgs\n    discussionboard_reports?: boolean | Discussionboard_userCountOutputTypeCountDiscussionboard_reportsArgs\n    discussionboard_moderation_action_of_actor_id?: boolean | Discussionboard_userCountOutputTypeCountDiscussionboard_moderation_action_of_actor_idArgs\n    discussionboard_moderation_action_of_target_user_id?: boolean | Discussionboard_userCountOutputTypeCountDiscussionboard_moderation_action_of_target_user_idArgs\n    discussionboard_report_review?: boolean | Discussionboard_userCountOutputTypeCountDiscussionboard_report_reviewArgs\n    discussionboard_warning_of_issued_by_id?: boolean | Discussionboard_userCountOutputTypeCountDiscussionboard_warning_of_issued_by_idArgs\n    discussionboard_warning_of_issued_to_id?: boolean | Discussionboard_userCountOutputTypeCountDiscussionboard_warning_of_issued_to_idArgs\n    discussionboard_ban_of_banned_user_id?: boolean | Discussionboard_userCountOutputTypeCountDiscussionboard_ban_of_banned_user_idArgs\n    discussionboard_ban_of_banned_by_id?: boolean | Discussionboard_userCountOutputTypeCountDiscussionboard_ban_of_banned_by_idArgs\n    discussionboard_notification_of_recipient_user_id?: boolean | Discussionboard_userCountOutputTypeCountDiscussionboard_notification_of_recipient_user_idArgs\n    discussionboard_notification_of_actor_user_id?: boolean | Discussionboard_userCountOutputTypeCountDiscussionboard_notification_of_actor_user_idArgs\n    discussionboard_audit_log_of_actor_user_id?: boolean | Discussionboard_userCountOutputTypeCountDiscussionboard_audit_log_of_actor_user_idArgs\n    discussionboard_audit_log_of_target_user_id?: boolean | Discussionboard_userCountOutputTypeCountDiscussionboard_audit_log_of_target_user_idArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Discussionboard_userCountOutputType without action\n   */\n  export type Discussionboard_userCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Discussionboard_userCountOutputType\n     */\n    select?: Discussionboard_userCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Discussionboard_userCountOutputType without action\n   */\n  export type Discussionboard_userCountOutputTypeCountDiscussionboard_commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_commentsWhereInput\n  }\n\n  /**\n   * Discussionboard_userCountOutputType without action\n   */\n  export type Discussionboard_userCountOutputTypeCountDiscussionboard_likesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_likesWhereInput\n  }\n\n  /**\n   * Discussionboard_userCountOutputType without action\n   */\n  export type Discussionboard_userCountOutputTypeCountDiscussionboard_reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_reportsWhereInput\n  }\n\n  /**\n   * Discussionboard_userCountOutputType without action\n   */\n  export type Discussionboard_userCountOutputTypeCountDiscussionboard_moderation_action_of_actor_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_moderation_actionWhereInput\n  }\n\n  /**\n   * Discussionboard_userCountOutputType without action\n   */\n  export type Discussionboard_userCountOutputTypeCountDiscussionboard_moderation_action_of_target_user_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_moderation_actionWhereInput\n  }\n\n  /**\n   * Discussionboard_userCountOutputType without action\n   */\n  export type Discussionboard_userCountOutputTypeCountDiscussionboard_report_reviewArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_report_reviewWhereInput\n  }\n\n  /**\n   * Discussionboard_userCountOutputType without action\n   */\n  export type Discussionboard_userCountOutputTypeCountDiscussionboard_warning_of_issued_by_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_warningWhereInput\n  }\n\n  /**\n   * Discussionboard_userCountOutputType without action\n   */\n  export type Discussionboard_userCountOutputTypeCountDiscussionboard_warning_of_issued_to_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_warningWhereInput\n  }\n\n  /**\n   * Discussionboard_userCountOutputType without action\n   */\n  export type Discussionboard_userCountOutputTypeCountDiscussionboard_ban_of_banned_user_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_banWhereInput\n  }\n\n  /**\n   * Discussionboard_userCountOutputType without action\n   */\n  export type Discussionboard_userCountOutputTypeCountDiscussionboard_ban_of_banned_by_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_banWhereInput\n  }\n\n  /**\n   * Discussionboard_userCountOutputType without action\n   */\n  export type Discussionboard_userCountOutputTypeCountDiscussionboard_notification_of_recipient_user_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_notificationWhereInput\n  }\n\n  /**\n   * Discussionboard_userCountOutputType without action\n   */\n  export type Discussionboard_userCountOutputTypeCountDiscussionboard_notification_of_actor_user_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_notificationWhereInput\n  }\n\n  /**\n   * Discussionboard_userCountOutputType without action\n   */\n  export type Discussionboard_userCountOutputTypeCountDiscussionboard_audit_log_of_actor_user_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_audit_logWhereInput\n  }\n\n  /**\n   * Discussionboard_userCountOutputType without action\n   */\n  export type Discussionboard_userCountOutputTypeCountDiscussionboard_audit_log_of_target_user_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_audit_logWhereInput\n  }\n\n\n  /**\n   * Count Type Discussionboard_memberCountOutputType\n   */\n\n  export type Discussionboard_memberCountOutputType = {\n    discussionboard_post: number\n  }\n\n  export type Discussionboard_memberCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_post?: boolean | Discussionboard_memberCountOutputTypeCountDiscussionboard_postArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Discussionboard_memberCountOutputType without action\n   */\n  export type Discussionboard_memberCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Discussionboard_memberCountOutputType\n     */\n    select?: Discussionboard_memberCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Discussionboard_memberCountOutputType without action\n   */\n  export type Discussionboard_memberCountOutputTypeCountDiscussionboard_postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_postWhereInput\n  }\n\n\n  /**\n   * Count Type Discussionboard_postCountOutputType\n   */\n\n  export type Discussionboard_postCountOutputType = {\n    discussionboard_post_attachment: number\n    discussionboard_comments: number\n    discussionboard_likes: number\n    discussionboard_reports: number\n    discussionboard_moderation_action: number\n    discussionboard_report_review: number\n    discussionboard_warning: number\n    discussionboard_notification: number\n  }\n\n  export type Discussionboard_postCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_post_attachment?: boolean | Discussionboard_postCountOutputTypeCountDiscussionboard_post_attachmentArgs\n    discussionboard_comments?: boolean | Discussionboard_postCountOutputTypeCountDiscussionboard_commentsArgs\n    discussionboard_likes?: boolean | Discussionboard_postCountOutputTypeCountDiscussionboard_likesArgs\n    discussionboard_reports?: boolean | Discussionboard_postCountOutputTypeCountDiscussionboard_reportsArgs\n    discussionboard_moderation_action?: boolean | Discussionboard_postCountOutputTypeCountDiscussionboard_moderation_actionArgs\n    discussionboard_report_review?: boolean | Discussionboard_postCountOutputTypeCountDiscussionboard_report_reviewArgs\n    discussionboard_warning?: boolean | Discussionboard_postCountOutputTypeCountDiscussionboard_warningArgs\n    discussionboard_notification?: boolean | Discussionboard_postCountOutputTypeCountDiscussionboard_notificationArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Discussionboard_postCountOutputType without action\n   */\n  export type Discussionboard_postCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Discussionboard_postCountOutputType\n     */\n    select?: Discussionboard_postCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Discussionboard_postCountOutputType without action\n   */\n  export type Discussionboard_postCountOutputTypeCountDiscussionboard_post_attachmentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_post_attachmentWhereInput\n  }\n\n  /**\n   * Discussionboard_postCountOutputType without action\n   */\n  export type Discussionboard_postCountOutputTypeCountDiscussionboard_commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_commentsWhereInput\n  }\n\n  /**\n   * Discussionboard_postCountOutputType without action\n   */\n  export type Discussionboard_postCountOutputTypeCountDiscussionboard_likesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_likesWhereInput\n  }\n\n  /**\n   * Discussionboard_postCountOutputType without action\n   */\n  export type Discussionboard_postCountOutputTypeCountDiscussionboard_reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_reportsWhereInput\n  }\n\n  /**\n   * Discussionboard_postCountOutputType without action\n   */\n  export type Discussionboard_postCountOutputTypeCountDiscussionboard_moderation_actionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_moderation_actionWhereInput\n  }\n\n  /**\n   * Discussionboard_postCountOutputType without action\n   */\n  export type Discussionboard_postCountOutputTypeCountDiscussionboard_report_reviewArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_report_reviewWhereInput\n  }\n\n  /**\n   * Discussionboard_postCountOutputType without action\n   */\n  export type Discussionboard_postCountOutputTypeCountDiscussionboard_warningArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_warningWhereInput\n  }\n\n  /**\n   * Discussionboard_postCountOutputType without action\n   */\n  export type Discussionboard_postCountOutputTypeCountDiscussionboard_notificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_notificationWhereInput\n  }\n\n\n  /**\n   * Count Type Discussionboard_post_categoryCountOutputType\n   */\n\n  export type Discussionboard_post_categoryCountOutputType = {\n    discussionboard_post: number\n  }\n\n  export type Discussionboard_post_categoryCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_post?: boolean | Discussionboard_post_categoryCountOutputTypeCountDiscussionboard_postArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Discussionboard_post_categoryCountOutputType without action\n   */\n  export type Discussionboard_post_categoryCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Discussionboard_post_categoryCountOutputType\n     */\n    select?: Discussionboard_post_categoryCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Discussionboard_post_categoryCountOutputType without action\n   */\n  export type Discussionboard_post_categoryCountOutputTypeCountDiscussionboard_postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_postWhereInput\n  }\n\n\n  /**\n   * Count Type Discussionboard_commentsCountOutputType\n   */\n\n  export type Discussionboard_commentsCountOutputType = {\n    recursive: number\n    discussionboard_likes: number\n    discussionboard_reports: number\n    discussionboard_moderation_action: number\n    discussionboard_report_review: number\n    discussionboard_warning: number\n    discussionboard_notification: number\n  }\n\n  export type Discussionboard_commentsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    recursive?: boolean | Discussionboard_commentsCountOutputTypeCountRecursiveArgs\n    discussionboard_likes?: boolean | Discussionboard_commentsCountOutputTypeCountDiscussionboard_likesArgs\n    discussionboard_reports?: boolean | Discussionboard_commentsCountOutputTypeCountDiscussionboard_reportsArgs\n    discussionboard_moderation_action?: boolean | Discussionboard_commentsCountOutputTypeCountDiscussionboard_moderation_actionArgs\n    discussionboard_report_review?: boolean | Discussionboard_commentsCountOutputTypeCountDiscussionboard_report_reviewArgs\n    discussionboard_warning?: boolean | Discussionboard_commentsCountOutputTypeCountDiscussionboard_warningArgs\n    discussionboard_notification?: boolean | Discussionboard_commentsCountOutputTypeCountDiscussionboard_notificationArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Discussionboard_commentsCountOutputType without action\n   */\n  export type Discussionboard_commentsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Discussionboard_commentsCountOutputType\n     */\n    select?: Discussionboard_commentsCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Discussionboard_commentsCountOutputType without action\n   */\n  export type Discussionboard_commentsCountOutputTypeCountRecursiveArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_commentsWhereInput\n  }\n\n  /**\n   * Discussionboard_commentsCountOutputType without action\n   */\n  export type Discussionboard_commentsCountOutputTypeCountDiscussionboard_likesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_likesWhereInput\n  }\n\n  /**\n   * Discussionboard_commentsCountOutputType without action\n   */\n  export type Discussionboard_commentsCountOutputTypeCountDiscussionboard_reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_reportsWhereInput\n  }\n\n  /**\n   * Discussionboard_commentsCountOutputType without action\n   */\n  export type Discussionboard_commentsCountOutputTypeCountDiscussionboard_moderation_actionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_moderation_actionWhereInput\n  }\n\n  /**\n   * Discussionboard_commentsCountOutputType without action\n   */\n  export type Discussionboard_commentsCountOutputTypeCountDiscussionboard_report_reviewArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_report_reviewWhereInput\n  }\n\n  /**\n   * Discussionboard_commentsCountOutputType without action\n   */\n  export type Discussionboard_commentsCountOutputTypeCountDiscussionboard_warningArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_warningWhereInput\n  }\n\n  /**\n   * Discussionboard_commentsCountOutputType without action\n   */\n  export type Discussionboard_commentsCountOutputTypeCountDiscussionboard_notificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_notificationWhereInput\n  }\n\n\n  /**\n   * Count Type Discussionboard_reportsCountOutputType\n   */\n\n  export type Discussionboard_reportsCountOutputType = {\n    discussionboard_report_review: number\n  }\n\n  export type Discussionboard_reportsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_report_review?: boolean | Discussionboard_reportsCountOutputTypeCountDiscussionboard_report_reviewArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Discussionboard_reportsCountOutputType without action\n   */\n  export type Discussionboard_reportsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Discussionboard_reportsCountOutputType\n     */\n    select?: Discussionboard_reportsCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Discussionboard_reportsCountOutputType without action\n   */\n  export type Discussionboard_reportsCountOutputTypeCountDiscussionboard_report_reviewArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_report_reviewWhereInput\n  }\n\n\n  /**\n   * Count Type Discussionboard_warningCountOutputType\n   */\n\n  export type Discussionboard_warningCountOutputType = {\n    discussionboard_ban: number\n  }\n\n  export type Discussionboard_warningCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_ban?: boolean | Discussionboard_warningCountOutputTypeCountDiscussionboard_banArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Discussionboard_warningCountOutputType without action\n   */\n  export type Discussionboard_warningCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Discussionboard_warningCountOutputType\n     */\n    select?: Discussionboard_warningCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Discussionboard_warningCountOutputType without action\n   */\n  export type Discussionboard_warningCountOutputTypeCountDiscussionboard_banArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_banWhereInput\n  }\n\n\n  /**\n   * Models\n   */\n\n  /**\n   * Model discussionboard_user\n   */\n\n  export type AggregateDiscussionboard_user = {\n    _count: Discussionboard_userCountAggregateOutputType | null\n    _min: Discussionboard_userMinAggregateOutputType | null\n    _max: Discussionboard_userMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_userMinAggregateOutputType = {\n    id: string | null\n    email: string | null\n    password_hash: string | null\n    is_active: boolean | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Discussionboard_userMaxAggregateOutputType = {\n    id: string | null\n    email: string | null\n    password_hash: string | null\n    is_active: boolean | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Discussionboard_userCountAggregateOutputType = {\n    id: number\n    email: number\n    password_hash: number\n    is_active: number\n    created_at: number\n    updated_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_userMinAggregateInputType = {\n    id?: true\n    email?: true\n    password_hash?: true\n    is_active?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Discussionboard_userMaxAggregateInputType = {\n    id?: true\n    email?: true\n    password_hash?: true\n    is_active?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Discussionboard_userCountAggregateInputType = {\n    id?: true\n    email?: true\n    password_hash?: true\n    is_active?: true\n    created_at?: true\n    updated_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_userAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_user to aggregate.\n     */\n    where?: discussionboard_userWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_users to fetch.\n     */\n    orderBy?: discussionboard_userOrderByWithRelationInput | discussionboard_userOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_userWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_users from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_users.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_users\n    **/\n    _count?: true | Discussionboard_userCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_userMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_userMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_userAggregateType<T extends Discussionboard_userAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_user]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_user[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_user[P]>\n  }\n\n\n\n\n  export type discussionboard_userGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_userWhereInput\n    orderBy?: discussionboard_userOrderByWithAggregationInput | discussionboard_userOrderByWithAggregationInput[]\n    by: Discussionboard_userScalarFieldEnum[] | Discussionboard_userScalarFieldEnum\n    having?: discussionboard_userScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_userCountAggregateInputType | true\n    _min?: Discussionboard_userMinAggregateInputType\n    _max?: Discussionboard_userMaxAggregateInputType\n  }\n\n  export type Discussionboard_userGroupByOutputType = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date\n    updated_at: Date\n    _count: Discussionboard_userCountAggregateOutputType | null\n    _min: Discussionboard_userMinAggregateOutputType | null\n    _max: Discussionboard_userMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_userGroupByPayload<T extends discussionboard_userGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_userGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_userGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_userGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_userGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_userSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    email?: boolean\n    password_hash?: boolean\n    is_active?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    discussionboard_user_profile?: boolean | discussionboard_user$discussionboard_user_profileArgs<ExtArgs>\n    discussionboard_member?: boolean | discussionboard_user$discussionboard_memberArgs<ExtArgs>\n    discussionboard_moderator?: boolean | discussionboard_user$discussionboard_moderatorArgs<ExtArgs>\n    discussionboard_admin?: boolean | discussionboard_user$discussionboard_adminArgs<ExtArgs>\n    discussionboard_comments?: boolean | discussionboard_user$discussionboard_commentsArgs<ExtArgs>\n    discussionboard_likes?: boolean | discussionboard_user$discussionboard_likesArgs<ExtArgs>\n    discussionboard_reports?: boolean | discussionboard_user$discussionboard_reportsArgs<ExtArgs>\n    discussionboard_moderation_action_of_actor_id?: boolean | discussionboard_user$discussionboard_moderation_action_of_actor_idArgs<ExtArgs>\n    discussionboard_moderation_action_of_target_user_id?: boolean | discussionboard_user$discussionboard_moderation_action_of_target_user_idArgs<ExtArgs>\n    discussionboard_report_review?: boolean | discussionboard_user$discussionboard_report_reviewArgs<ExtArgs>\n    discussionboard_warning_of_issued_by_id?: boolean | discussionboard_user$discussionboard_warning_of_issued_by_idArgs<ExtArgs>\n    discussionboard_warning_of_issued_to_id?: boolean | discussionboard_user$discussionboard_warning_of_issued_to_idArgs<ExtArgs>\n    discussionboard_ban_of_banned_user_id?: boolean | discussionboard_user$discussionboard_ban_of_banned_user_idArgs<ExtArgs>\n    discussionboard_ban_of_banned_by_id?: boolean | discussionboard_user$discussionboard_ban_of_banned_by_idArgs<ExtArgs>\n    discussionboard_notification_of_recipient_user_id?: boolean | discussionboard_user$discussionboard_notification_of_recipient_user_idArgs<ExtArgs>\n    discussionboard_notification_of_actor_user_id?: boolean | discussionboard_user$discussionboard_notification_of_actor_user_idArgs<ExtArgs>\n    discussionboard_notification_preference?: boolean | discussionboard_user$discussionboard_notification_preferenceArgs<ExtArgs>\n    discussionboard_audit_log_of_actor_user_id?: boolean | discussionboard_user$discussionboard_audit_log_of_actor_user_idArgs<ExtArgs>\n    discussionboard_audit_log_of_target_user_id?: boolean | discussionboard_user$discussionboard_audit_log_of_target_user_idArgs<ExtArgs>\n    _count?: boolean | Discussionboard_userCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_user\"]>\n\n  export type discussionboard_userSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    email?: boolean\n    password_hash?: boolean\n    is_active?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"discussionboard_user\"]>\n\n  export type discussionboard_userSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    email?: boolean\n    password_hash?: boolean\n    is_active?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"discussionboard_user\"]>\n\n  export type discussionboard_userSelectScalar = {\n    id?: boolean\n    email?: boolean\n    password_hash?: boolean\n    is_active?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }\n\n  export type discussionboard_userOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"email\" | \"password_hash\" | \"is_active\" | \"created_at\" | \"updated_at\", ExtArgs[\"result\"][\"discussionboard_user\"]>\n  export type discussionboard_userInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_user_profile?: boolean | discussionboard_user$discussionboard_user_profileArgs<ExtArgs>\n    discussionboard_member?: boolean | discussionboard_user$discussionboard_memberArgs<ExtArgs>\n    discussionboard_moderator?: boolean | discussionboard_user$discussionboard_moderatorArgs<ExtArgs>\n    discussionboard_admin?: boolean | discussionboard_user$discussionboard_adminArgs<ExtArgs>\n    discussionboard_comments?: boolean | discussionboard_user$discussionboard_commentsArgs<ExtArgs>\n    discussionboard_likes?: boolean | discussionboard_user$discussionboard_likesArgs<ExtArgs>\n    discussionboard_reports?: boolean | discussionboard_user$discussionboard_reportsArgs<ExtArgs>\n    discussionboard_moderation_action_of_actor_id?: boolean | discussionboard_user$discussionboard_moderation_action_of_actor_idArgs<ExtArgs>\n    discussionboard_moderation_action_of_target_user_id?: boolean | discussionboard_user$discussionboard_moderation_action_of_target_user_idArgs<ExtArgs>\n    discussionboard_report_review?: boolean | discussionboard_user$discussionboard_report_reviewArgs<ExtArgs>\n    discussionboard_warning_of_issued_by_id?: boolean | discussionboard_user$discussionboard_warning_of_issued_by_idArgs<ExtArgs>\n    discussionboard_warning_of_issued_to_id?: boolean | discussionboard_user$discussionboard_warning_of_issued_to_idArgs<ExtArgs>\n    discussionboard_ban_of_banned_user_id?: boolean | discussionboard_user$discussionboard_ban_of_banned_user_idArgs<ExtArgs>\n    discussionboard_ban_of_banned_by_id?: boolean | discussionboard_user$discussionboard_ban_of_banned_by_idArgs<ExtArgs>\n    discussionboard_notification_of_recipient_user_id?: boolean | discussionboard_user$discussionboard_notification_of_recipient_user_idArgs<ExtArgs>\n    discussionboard_notification_of_actor_user_id?: boolean | discussionboard_user$discussionboard_notification_of_actor_user_idArgs<ExtArgs>\n    discussionboard_notification_preference?: boolean | discussionboard_user$discussionboard_notification_preferenceArgs<ExtArgs>\n    discussionboard_audit_log_of_actor_user_id?: boolean | discussionboard_user$discussionboard_audit_log_of_actor_user_idArgs<ExtArgs>\n    discussionboard_audit_log_of_target_user_id?: boolean | discussionboard_user$discussionboard_audit_log_of_target_user_idArgs<ExtArgs>\n    _count?: boolean | Discussionboard_userCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_userIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}\n  export type discussionboard_userIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}\n\n  export type $discussionboard_userPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_user\"\n    objects: {\n      discussionboard_user_profile: Prisma.$discussionboard_user_profilePayload<ExtArgs> | null\n      discussionboard_member: Prisma.$discussionboard_memberPayload<ExtArgs> | null\n      discussionboard_moderator: Prisma.$discussionboard_moderatorPayload<ExtArgs> | null\n      discussionboard_admin: Prisma.$discussionboard_adminPayload<ExtArgs> | null\n      discussionboard_comments: Prisma.$discussionboard_commentsPayload<ExtArgs>[]\n      discussionboard_likes: Prisma.$discussionboard_likesPayload<ExtArgs>[]\n      discussionboard_reports: Prisma.$discussionboard_reportsPayload<ExtArgs>[]\n      discussionboard_moderation_action_of_actor_id: Prisma.$discussionboard_moderation_actionPayload<ExtArgs>[]\n      discussionboard_moderation_action_of_target_user_id: Prisma.$discussionboard_moderation_actionPayload<ExtArgs>[]\n      discussionboard_report_review: Prisma.$discussionboard_report_reviewPayload<ExtArgs>[]\n      discussionboard_warning_of_issued_by_id: Prisma.$discussionboard_warningPayload<ExtArgs>[]\n      discussionboard_warning_of_issued_to_id: Prisma.$discussionboard_warningPayload<ExtArgs>[]\n      discussionboard_ban_of_banned_user_id: Prisma.$discussionboard_banPayload<ExtArgs>[]\n      discussionboard_ban_of_banned_by_id: Prisma.$discussionboard_banPayload<ExtArgs>[]\n      discussionboard_notification_of_recipient_user_id: Prisma.$discussionboard_notificationPayload<ExtArgs>[]\n      discussionboard_notification_of_actor_user_id: Prisma.$discussionboard_notificationPayload<ExtArgs>[]\n      discussionboard_notification_preference: Prisma.$discussionboard_notification_preferencePayload<ExtArgs> | null\n      discussionboard_audit_log_of_actor_user_id: Prisma.$discussionboard_audit_logPayload<ExtArgs>[]\n      discussionboard_audit_log_of_target_user_id: Prisma.$discussionboard_audit_logPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * [Primary Key] - Globally unique identifier for the user. Implements the requirements for traceable, referential user identity across all core tables (see 02_discussionboard_functional_requirements.md). 3NF enforced as surrogate key. For example, all foreign key relationships use this for core user reference.\n       */\n      id: string\n      /**\n       * [Authentication Email] - Implements unique login credential per user requirement. Business meaning: Used for login, notifications, and password recovery. Ensures normalization by existing only on user root entity and not duplicated elsewhere. Enforced unique constraint. E.g., user login process.\n       */\n      email: string\n      /**\n       * [Password Hash] - Securely stores password hash for authentication workflow per 02_discussionboard_functional_requirements.md. Ensures separation from credential-independent profile info. Used for login verification.\n       */\n      password_hash: string\n      /**\n       * [Active Status] - Tracks whether the user account is enabled or deactivated (requirement: Admin can deactivate). Normalization: not duplicated elsewhere. For account suspension procedures.\n       */\n      is_active: boolean\n      /**\n       * [Creation Timestamp] - When user joined. Required for audit and analytics (see success criteria in 01_discussionboard_overview_and_scope.md). Used in user growth/activation KPIs.\n       */\n      created_at: Date\n      /**\n       * [Last Update Timestamp] - Business: Audit and admin review. Ensures clean separation—no transitive dependency.\n       */\n      updated_at: Date\n    }, ExtArgs[\"result\"][\"discussionboard_user\"]>\n    composites: {}\n  }\n\n  type discussionboard_userGetPayload<S extends boolean | null | undefined | discussionboard_userDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_userPayload, S>\n\n  type discussionboard_userCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_userFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_userCountAggregateInputType | true\n    }\n\n  export interface discussionboard_userDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_user'], meta: { name: 'discussionboard_user' } }\n    /**\n     * Find zero or one Discussionboard_user that matches the filter.\n     * @param {discussionboard_userFindUniqueArgs} args - Arguments to find a Discussionboard_user\n     * @example\n     * // Get one Discussionboard_user\n     * const discussionboard_user = await prisma.discussionboard_user.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_userFindUniqueArgs>(args: SelectSubset<T, discussionboard_userFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_userClient<$Result.GetResult<Prisma.$discussionboard_userPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_user that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_userFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_user\n     * @example\n     * // Get one Discussionboard_user\n     * const discussionboard_user = await prisma.discussionboard_user.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_userFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_userFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_userClient<$Result.GetResult<Prisma.$discussionboard_userPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_user that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_userFindFirstArgs} args - Arguments to find a Discussionboard_user\n     * @example\n     * // Get one Discussionboard_user\n     * const discussionboard_user = await prisma.discussionboard_user.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_userFindFirstArgs>(args?: SelectSubset<T, discussionboard_userFindFirstArgs<ExtArgs>>): Prisma__discussionboard_userClient<$Result.GetResult<Prisma.$discussionboard_userPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_user that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_userFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_user\n     * @example\n     * // Get one Discussionboard_user\n     * const discussionboard_user = await prisma.discussionboard_user.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_userFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_userFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_userClient<$Result.GetResult<Prisma.$discussionboard_userPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_users that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_userFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_users\n     * const discussionboard_users = await prisma.discussionboard_user.findMany()\n     * \n     * // Get first 10 Discussionboard_users\n     * const discussionboard_users = await prisma.discussionboard_user.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_userWithIdOnly = await prisma.discussionboard_user.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_userFindManyArgs>(args?: SelectSubset<T, discussionboard_userFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_userPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_user.\n     * @param {discussionboard_userCreateArgs} args - Arguments to create a Discussionboard_user.\n     * @example\n     * // Create one Discussionboard_user\n     * const Discussionboard_user = await prisma.discussionboard_user.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_user\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_userCreateArgs>(args: SelectSubset<T, discussionboard_userCreateArgs<ExtArgs>>): Prisma__discussionboard_userClient<$Result.GetResult<Prisma.$discussionboard_userPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_users.\n     * @param {discussionboard_userCreateManyArgs} args - Arguments to create many Discussionboard_users.\n     * @example\n     * // Create many Discussionboard_users\n     * const discussionboard_user = await prisma.discussionboard_user.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_userCreateManyArgs>(args?: SelectSubset<T, discussionboard_userCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_users and returns the data saved in the database.\n     * @param {discussionboard_userCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_users.\n     * @example\n     * // Create many Discussionboard_users\n     * const discussionboard_user = await prisma.discussionboard_user.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_users and only return the `id`\n     * const discussionboard_userWithIdOnly = await prisma.discussionboard_user.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_userCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_userCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_userPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_user.\n     * @param {discussionboard_userDeleteArgs} args - Arguments to delete one Discussionboard_user.\n     * @example\n     * // Delete one Discussionboard_user\n     * const Discussionboard_user = await prisma.discussionboard_user.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_user\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_userDeleteArgs>(args: SelectSubset<T, discussionboard_userDeleteArgs<ExtArgs>>): Prisma__discussionboard_userClient<$Result.GetResult<Prisma.$discussionboard_userPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_user.\n     * @param {discussionboard_userUpdateArgs} args - Arguments to update one Discussionboard_user.\n     * @example\n     * // Update one Discussionboard_user\n     * const discussionboard_user = await prisma.discussionboard_user.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_userUpdateArgs>(args: SelectSubset<T, discussionboard_userUpdateArgs<ExtArgs>>): Prisma__discussionboard_userClient<$Result.GetResult<Prisma.$discussionboard_userPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_users.\n     * @param {discussionboard_userDeleteManyArgs} args - Arguments to filter Discussionboard_users to delete.\n     * @example\n     * // Delete a few Discussionboard_users\n     * const { count } = await prisma.discussionboard_user.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_userDeleteManyArgs>(args?: SelectSubset<T, discussionboard_userDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_users.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_userUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_users\n     * const discussionboard_user = await prisma.discussionboard_user.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_userUpdateManyArgs>(args: SelectSubset<T, discussionboard_userUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_users and returns the data updated in the database.\n     * @param {discussionboard_userUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_users.\n     * @example\n     * // Update many Discussionboard_users\n     * const discussionboard_user = await prisma.discussionboard_user.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_users and only return the `id`\n     * const discussionboard_userWithIdOnly = await prisma.discussionboard_user.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_userUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_userUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_userPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_user.\n     * @param {discussionboard_userUpsertArgs} args - Arguments to update or create a Discussionboard_user.\n     * @example\n     * // Update or create a Discussionboard_user\n     * const discussionboard_user = await prisma.discussionboard_user.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_user\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_user we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_userUpsertArgs>(args: SelectSubset<T, discussionboard_userUpsertArgs<ExtArgs>>): Prisma__discussionboard_userClient<$Result.GetResult<Prisma.$discussionboard_userPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_users.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_userCountArgs} args - Arguments to filter Discussionboard_users to count.\n     * @example\n     * // Count the number of Discussionboard_users\n     * const count = await prisma.discussionboard_user.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_users we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_userCountArgs>(\n      args?: Subset<T, discussionboard_userCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_userCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_user.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_userAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_userAggregateArgs>(args: Subset<T, Discussionboard_userAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_userAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_user.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_userGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_userGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_userGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_userGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_userGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_userGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_user model\n   */\n  readonly fields: discussionboard_userFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_user.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_userClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    discussionboard_user_profile<T extends discussionboard_user$discussionboard_user_profileArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_user$discussionboard_user_profileArgs<ExtArgs>>): Prisma__discussionboard_user_profileClient<$Result.GetResult<Prisma.$discussionboard_user_profilePayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    discussionboard_member<T extends discussionboard_user$discussionboard_memberArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_user$discussionboard_memberArgs<ExtArgs>>): Prisma__discussionboard_memberClient<$Result.GetResult<Prisma.$discussionboard_memberPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    discussionboard_moderator<T extends discussionboard_user$discussionboard_moderatorArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_user$discussionboard_moderatorArgs<ExtArgs>>): Prisma__discussionboard_moderatorClient<$Result.GetResult<Prisma.$discussionboard_moderatorPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    discussionboard_admin<T extends discussionboard_user$discussionboard_adminArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_user$discussionboard_adminArgs<ExtArgs>>): Prisma__discussionboard_adminClient<$Result.GetResult<Prisma.$discussionboard_adminPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    discussionboard_comments<T extends discussionboard_user$discussionboard_commentsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_user$discussionboard_commentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_commentsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_likes<T extends discussionboard_user$discussionboard_likesArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_user$discussionboard_likesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_likesPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_reports<T extends discussionboard_user$discussionboard_reportsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_user$discussionboard_reportsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_reportsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_moderation_action_of_actor_id<T extends discussionboard_user$discussionboard_moderation_action_of_actor_idArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_user$discussionboard_moderation_action_of_actor_idArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_moderation_actionPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_moderation_action_of_target_user_id<T extends discussionboard_user$discussionboard_moderation_action_of_target_user_idArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_user$discussionboard_moderation_action_of_target_user_idArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_moderation_actionPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_report_review<T extends discussionboard_user$discussionboard_report_reviewArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_user$discussionboard_report_reviewArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_report_reviewPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_warning_of_issued_by_id<T extends discussionboard_user$discussionboard_warning_of_issued_by_idArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_user$discussionboard_warning_of_issued_by_idArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_warningPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_warning_of_issued_to_id<T extends discussionboard_user$discussionboard_warning_of_issued_to_idArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_user$discussionboard_warning_of_issued_to_idArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_warningPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_ban_of_banned_user_id<T extends discussionboard_user$discussionboard_ban_of_banned_user_idArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_user$discussionboard_ban_of_banned_user_idArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_banPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_ban_of_banned_by_id<T extends discussionboard_user$discussionboard_ban_of_banned_by_idArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_user$discussionboard_ban_of_banned_by_idArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_banPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_notification_of_recipient_user_id<T extends discussionboard_user$discussionboard_notification_of_recipient_user_idArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_user$discussionboard_notification_of_recipient_user_idArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_notificationPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_notification_of_actor_user_id<T extends discussionboard_user$discussionboard_notification_of_actor_user_idArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_user$discussionboard_notification_of_actor_user_idArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_notificationPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_notification_preference<T extends discussionboard_user$discussionboard_notification_preferenceArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_user$discussionboard_notification_preferenceArgs<ExtArgs>>): Prisma__discussionboard_notification_preferenceClient<$Result.GetResult<Prisma.$discussionboard_notification_preferencePayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    discussionboard_audit_log_of_actor_user_id<T extends discussionboard_user$discussionboard_audit_log_of_actor_user_idArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_user$discussionboard_audit_log_of_actor_user_idArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_audit_logPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_audit_log_of_target_user_id<T extends discussionboard_user$discussionboard_audit_log_of_target_user_idArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_user$discussionboard_audit_log_of_target_user_idArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_audit_logPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_user model\n   */\n  interface discussionboard_userFieldRefs {\n    readonly id: FieldRef<\"discussionboard_user\", 'String'>\n    readonly email: FieldRef<\"discussionboard_user\", 'String'>\n    readonly password_hash: FieldRef<\"discussionboard_user\", 'String'>\n    readonly is_active: FieldRef<\"discussionboard_user\", 'Boolean'>\n    readonly created_at: FieldRef<\"discussionboard_user\", 'DateTime'>\n    readonly updated_at: FieldRef<\"discussionboard_user\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_user findUnique\n   */\n  export type discussionboard_userFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user\n     */\n    select?: discussionboard_userSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user\n     */\n    omit?: discussionboard_userOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_userInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_user to fetch.\n     */\n    where: discussionboard_userWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_user findUniqueOrThrow\n   */\n  export type discussionboard_userFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user\n     */\n    select?: discussionboard_userSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user\n     */\n    omit?: discussionboard_userOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_userInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_user to fetch.\n     */\n    where: discussionboard_userWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_user findFirst\n   */\n  export type discussionboard_userFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user\n     */\n    select?: discussionboard_userSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user\n     */\n    omit?: discussionboard_userOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_userInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_user to fetch.\n     */\n    where?: discussionboard_userWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_users to fetch.\n     */\n    orderBy?: discussionboard_userOrderByWithRelationInput | discussionboard_userOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_users.\n     */\n    cursor?: discussionboard_userWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_users from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_users.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_users.\n     */\n    distinct?: Discussionboard_userScalarFieldEnum | Discussionboard_userScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_user findFirstOrThrow\n   */\n  export type discussionboard_userFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user\n     */\n    select?: discussionboard_userSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user\n     */\n    omit?: discussionboard_userOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_userInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_user to fetch.\n     */\n    where?: discussionboard_userWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_users to fetch.\n     */\n    orderBy?: discussionboard_userOrderByWithRelationInput | discussionboard_userOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_users.\n     */\n    cursor?: discussionboard_userWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_users from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_users.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_users.\n     */\n    distinct?: Discussionboard_userScalarFieldEnum | Discussionboard_userScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_user findMany\n   */\n  export type discussionboard_userFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user\n     */\n    select?: discussionboard_userSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user\n     */\n    omit?: discussionboard_userOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_userInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_users to fetch.\n     */\n    where?: discussionboard_userWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_users to fetch.\n     */\n    orderBy?: discussionboard_userOrderByWithRelationInput | discussionboard_userOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_users.\n     */\n    cursor?: discussionboard_userWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_users from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_users.\n     */\n    skip?: number\n    distinct?: Discussionboard_userScalarFieldEnum | Discussionboard_userScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_user create\n   */\n  export type discussionboard_userCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user\n     */\n    select?: discussionboard_userSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user\n     */\n    omit?: discussionboard_userOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_userInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_user.\n     */\n    data: XOR<discussionboard_userCreateInput, discussionboard_userUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_user createMany\n   */\n  export type discussionboard_userCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_users.\n     */\n    data: discussionboard_userCreateManyInput | discussionboard_userCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_user createManyAndReturn\n   */\n  export type discussionboard_userCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user\n     */\n    select?: discussionboard_userSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user\n     */\n    omit?: discussionboard_userOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_users.\n     */\n    data: discussionboard_userCreateManyInput | discussionboard_userCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_user update\n   */\n  export type discussionboard_userUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user\n     */\n    select?: discussionboard_userSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user\n     */\n    omit?: discussionboard_userOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_userInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_user.\n     */\n    data: XOR<discussionboard_userUpdateInput, discussionboard_userUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_user to update.\n     */\n    where: discussionboard_userWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_user updateMany\n   */\n  export type discussionboard_userUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_users.\n     */\n    data: XOR<discussionboard_userUpdateManyMutationInput, discussionboard_userUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_users to update\n     */\n    where?: discussionboard_userWhereInput\n    /**\n     * Limit how many discussionboard_users to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_user updateManyAndReturn\n   */\n  export type discussionboard_userUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user\n     */\n    select?: discussionboard_userSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user\n     */\n    omit?: discussionboard_userOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_users.\n     */\n    data: XOR<discussionboard_userUpdateManyMutationInput, discussionboard_userUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_users to update\n     */\n    where?: discussionboard_userWhereInput\n    /**\n     * Limit how many discussionboard_users to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_user upsert\n   */\n  export type discussionboard_userUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user\n     */\n    select?: discussionboard_userSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user\n     */\n    omit?: discussionboard_userOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_userInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_user to update in case it exists.\n     */\n    where: discussionboard_userWhereUniqueInput\n    /**\n     * In case the discussionboard_user found by the `where` argument doesn't exist, create a new discussionboard_user with this data.\n     */\n    create: XOR<discussionboard_userCreateInput, discussionboard_userUncheckedCreateInput>\n    /**\n     * In case the discussionboard_user was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_userUpdateInput, discussionboard_userUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_user delete\n   */\n  export type discussionboard_userDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user\n     */\n    select?: discussionboard_userSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user\n     */\n    omit?: discussionboard_userOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_userInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_user to delete.\n     */\n    where: discussionboard_userWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_user deleteMany\n   */\n  export type discussionboard_userDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_users to delete\n     */\n    where?: discussionboard_userWhereInput\n    /**\n     * Limit how many discussionboard_users to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_user.discussionboard_user_profile\n   */\n  export type discussionboard_user$discussionboard_user_profileArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_profile\n     */\n    select?: discussionboard_user_profileSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_profile\n     */\n    omit?: discussionboard_user_profileOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_profileInclude<ExtArgs> | null\n    where?: discussionboard_user_profileWhereInput\n  }\n\n  /**\n   * discussionboard_user.discussionboard_member\n   */\n  export type discussionboard_user$discussionboard_memberArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_member\n     */\n    select?: discussionboard_memberSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_member\n     */\n    omit?: discussionboard_memberOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_memberInclude<ExtArgs> | null\n    where?: discussionboard_memberWhereInput\n  }\n\n  /**\n   * discussionboard_user.discussionboard_moderator\n   */\n  export type discussionboard_user$discussionboard_moderatorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderator\n     */\n    select?: discussionboard_moderatorSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderator\n     */\n    omit?: discussionboard_moderatorOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderatorInclude<ExtArgs> | null\n    where?: discussionboard_moderatorWhereInput\n  }\n\n  /**\n   * discussionboard_user.discussionboard_admin\n   */\n  export type discussionboard_user$discussionboard_adminArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_admin\n     */\n    select?: discussionboard_adminSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_admin\n     */\n    omit?: discussionboard_adminOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_adminInclude<ExtArgs> | null\n    where?: discussionboard_adminWhereInput\n  }\n\n  /**\n   * discussionboard_user.discussionboard_comments\n   */\n  export type discussionboard_user$discussionboard_commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comments\n     */\n    select?: discussionboard_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comments\n     */\n    omit?: discussionboard_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_commentsInclude<ExtArgs> | null\n    where?: discussionboard_commentsWhereInput\n    orderBy?: discussionboard_commentsOrderByWithRelationInput | discussionboard_commentsOrderByWithRelationInput[]\n    cursor?: discussionboard_commentsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_commentsScalarFieldEnum | Discussionboard_commentsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_user.discussionboard_likes\n   */\n  export type discussionboard_user$discussionboard_likesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_likes\n     */\n    select?: discussionboard_likesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_likes\n     */\n    omit?: discussionboard_likesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_likesInclude<ExtArgs> | null\n    where?: discussionboard_likesWhereInput\n    orderBy?: discussionboard_likesOrderByWithRelationInput | discussionboard_likesOrderByWithRelationInput[]\n    cursor?: discussionboard_likesWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_likesScalarFieldEnum | Discussionboard_likesScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_user.discussionboard_reports\n   */\n  export type discussionboard_user$discussionboard_reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_reports\n     */\n    select?: discussionboard_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_reports\n     */\n    omit?: discussionboard_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_reportsInclude<ExtArgs> | null\n    where?: discussionboard_reportsWhereInput\n    orderBy?: discussionboard_reportsOrderByWithRelationInput | discussionboard_reportsOrderByWithRelationInput[]\n    cursor?: discussionboard_reportsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_reportsScalarFieldEnum | Discussionboard_reportsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_user.discussionboard_moderation_action_of_actor_id\n   */\n  export type discussionboard_user$discussionboard_moderation_action_of_actor_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderation_action\n     */\n    select?: discussionboard_moderation_actionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderation_action\n     */\n    omit?: discussionboard_moderation_actionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderation_actionInclude<ExtArgs> | null\n    where?: discussionboard_moderation_actionWhereInput\n    orderBy?: discussionboard_moderation_actionOrderByWithRelationInput | discussionboard_moderation_actionOrderByWithRelationInput[]\n    cursor?: discussionboard_moderation_actionWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_moderation_actionScalarFieldEnum | Discussionboard_moderation_actionScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_user.discussionboard_moderation_action_of_target_user_id\n   */\n  export type discussionboard_user$discussionboard_moderation_action_of_target_user_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderation_action\n     */\n    select?: discussionboard_moderation_actionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderation_action\n     */\n    omit?: discussionboard_moderation_actionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderation_actionInclude<ExtArgs> | null\n    where?: discussionboard_moderation_actionWhereInput\n    orderBy?: discussionboard_moderation_actionOrderByWithRelationInput | discussionboard_moderation_actionOrderByWithRelationInput[]\n    cursor?: discussionboard_moderation_actionWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_moderation_actionScalarFieldEnum | Discussionboard_moderation_actionScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_user.discussionboard_report_review\n   */\n  export type discussionboard_user$discussionboard_report_reviewArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_report_review\n     */\n    select?: discussionboard_report_reviewSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_report_review\n     */\n    omit?: discussionboard_report_reviewOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_report_reviewInclude<ExtArgs> | null\n    where?: discussionboard_report_reviewWhereInput\n    orderBy?: discussionboard_report_reviewOrderByWithRelationInput | discussionboard_report_reviewOrderByWithRelationInput[]\n    cursor?: discussionboard_report_reviewWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_report_reviewScalarFieldEnum | Discussionboard_report_reviewScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_user.discussionboard_warning_of_issued_by_id\n   */\n  export type discussionboard_user$discussionboard_warning_of_issued_by_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_warning\n     */\n    select?: discussionboard_warningSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_warning\n     */\n    omit?: discussionboard_warningOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_warningInclude<ExtArgs> | null\n    where?: discussionboard_warningWhereInput\n    orderBy?: discussionboard_warningOrderByWithRelationInput | discussionboard_warningOrderByWithRelationInput[]\n    cursor?: discussionboard_warningWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_warningScalarFieldEnum | Discussionboard_warningScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_user.discussionboard_warning_of_issued_to_id\n   */\n  export type discussionboard_user$discussionboard_warning_of_issued_to_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_warning\n     */\n    select?: discussionboard_warningSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_warning\n     */\n    omit?: discussionboard_warningOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_warningInclude<ExtArgs> | null\n    where?: discussionboard_warningWhereInput\n    orderBy?: discussionboard_warningOrderByWithRelationInput | discussionboard_warningOrderByWithRelationInput[]\n    cursor?: discussionboard_warningWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_warningScalarFieldEnum | Discussionboard_warningScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_user.discussionboard_ban_of_banned_user_id\n   */\n  export type discussionboard_user$discussionboard_ban_of_banned_user_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_ban\n     */\n    select?: discussionboard_banSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_ban\n     */\n    omit?: discussionboard_banOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_banInclude<ExtArgs> | null\n    where?: discussionboard_banWhereInput\n    orderBy?: discussionboard_banOrderByWithRelationInput | discussionboard_banOrderByWithRelationInput[]\n    cursor?: discussionboard_banWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_banScalarFieldEnum | Discussionboard_banScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_user.discussionboard_ban_of_banned_by_id\n   */\n  export type discussionboard_user$discussionboard_ban_of_banned_by_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_ban\n     */\n    select?: discussionboard_banSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_ban\n     */\n    omit?: discussionboard_banOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_banInclude<ExtArgs> | null\n    where?: discussionboard_banWhereInput\n    orderBy?: discussionboard_banOrderByWithRelationInput | discussionboard_banOrderByWithRelationInput[]\n    cursor?: discussionboard_banWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_banScalarFieldEnum | Discussionboard_banScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_user.discussionboard_notification_of_recipient_user_id\n   */\n  export type discussionboard_user$discussionboard_notification_of_recipient_user_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification\n     */\n    select?: discussionboard_notificationSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification\n     */\n    omit?: discussionboard_notificationOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notificationInclude<ExtArgs> | null\n    where?: discussionboard_notificationWhereInput\n    orderBy?: discussionboard_notificationOrderByWithRelationInput | discussionboard_notificationOrderByWithRelationInput[]\n    cursor?: discussionboard_notificationWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_notificationScalarFieldEnum | Discussionboard_notificationScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_user.discussionboard_notification_of_actor_user_id\n   */\n  export type discussionboard_user$discussionboard_notification_of_actor_user_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification\n     */\n    select?: discussionboard_notificationSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification\n     */\n    omit?: discussionboard_notificationOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notificationInclude<ExtArgs> | null\n    where?: discussionboard_notificationWhereInput\n    orderBy?: discussionboard_notificationOrderByWithRelationInput | discussionboard_notificationOrderByWithRelationInput[]\n    cursor?: discussionboard_notificationWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_notificationScalarFieldEnum | Discussionboard_notificationScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_user.discussionboard_notification_preference\n   */\n  export type discussionboard_user$discussionboard_notification_preferenceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification_preference\n     */\n    select?: discussionboard_notification_preferenceSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification_preference\n     */\n    omit?: discussionboard_notification_preferenceOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notification_preferenceInclude<ExtArgs> | null\n    where?: discussionboard_notification_preferenceWhereInput\n  }\n\n  /**\n   * discussionboard_user.discussionboard_audit_log_of_actor_user_id\n   */\n  export type discussionboard_user$discussionboard_audit_log_of_actor_user_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_audit_log\n     */\n    select?: discussionboard_audit_logSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_audit_log\n     */\n    omit?: discussionboard_audit_logOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_audit_logInclude<ExtArgs> | null\n    where?: discussionboard_audit_logWhereInput\n    orderBy?: discussionboard_audit_logOrderByWithRelationInput | discussionboard_audit_logOrderByWithRelationInput[]\n    cursor?: discussionboard_audit_logWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_audit_logScalarFieldEnum | Discussionboard_audit_logScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_user.discussionboard_audit_log_of_target_user_id\n   */\n  export type discussionboard_user$discussionboard_audit_log_of_target_user_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_audit_log\n     */\n    select?: discussionboard_audit_logSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_audit_log\n     */\n    omit?: discussionboard_audit_logOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_audit_logInclude<ExtArgs> | null\n    where?: discussionboard_audit_logWhereInput\n    orderBy?: discussionboard_audit_logOrderByWithRelationInput | discussionboard_audit_logOrderByWithRelationInput[]\n    cursor?: discussionboard_audit_logWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_audit_logScalarFieldEnum | Discussionboard_audit_logScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_user without action\n   */\n  export type discussionboard_userDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user\n     */\n    select?: discussionboard_userSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user\n     */\n    omit?: discussionboard_userOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_userInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_user_profile\n   */\n\n  export type AggregateDiscussionboard_user_profile = {\n    _count: Discussionboard_user_profileCountAggregateOutputType | null\n    _min: Discussionboard_user_profileMinAggregateOutputType | null\n    _max: Discussionboard_user_profileMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_user_profileMinAggregateOutputType = {\n    id: string | null\n    user_id: string | null\n    display_name: string | null\n    avatar_url: string | null\n    bio: string | null\n  }\n\n  export type Discussionboard_user_profileMaxAggregateOutputType = {\n    id: string | null\n    user_id: string | null\n    display_name: string | null\n    avatar_url: string | null\n    bio: string | null\n  }\n\n  export type Discussionboard_user_profileCountAggregateOutputType = {\n    id: number\n    user_id: number\n    display_name: number\n    avatar_url: number\n    bio: number\n    _all: number\n  }\n\n\n  export type Discussionboard_user_profileMinAggregateInputType = {\n    id?: true\n    user_id?: true\n    display_name?: true\n    avatar_url?: true\n    bio?: true\n  }\n\n  export type Discussionboard_user_profileMaxAggregateInputType = {\n    id?: true\n    user_id?: true\n    display_name?: true\n    avatar_url?: true\n    bio?: true\n  }\n\n  export type Discussionboard_user_profileCountAggregateInputType = {\n    id?: true\n    user_id?: true\n    display_name?: true\n    avatar_url?: true\n    bio?: true\n    _all?: true\n  }\n\n  export type Discussionboard_user_profileAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_user_profile to aggregate.\n     */\n    where?: discussionboard_user_profileWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_user_profiles to fetch.\n     */\n    orderBy?: discussionboard_user_profileOrderByWithRelationInput | discussionboard_user_profileOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_user_profileWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_user_profiles from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_user_profiles.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_user_profiles\n    **/\n    _count?: true | Discussionboard_user_profileCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_user_profileMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_user_profileMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_user_profileAggregateType<T extends Discussionboard_user_profileAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_user_profile]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_user_profile[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_user_profile[P]>\n  }\n\n\n\n\n  export type discussionboard_user_profileGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_user_profileWhereInput\n    orderBy?: discussionboard_user_profileOrderByWithAggregationInput | discussionboard_user_profileOrderByWithAggregationInput[]\n    by: Discussionboard_user_profileScalarFieldEnum[] | Discussionboard_user_profileScalarFieldEnum\n    having?: discussionboard_user_profileScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_user_profileCountAggregateInputType | true\n    _min?: Discussionboard_user_profileMinAggregateInputType\n    _max?: Discussionboard_user_profileMaxAggregateInputType\n  }\n\n  export type Discussionboard_user_profileGroupByOutputType = {\n    id: string\n    user_id: string\n    display_name: string\n    avatar_url: string | null\n    bio: string | null\n    _count: Discussionboard_user_profileCountAggregateOutputType | null\n    _min: Discussionboard_user_profileMinAggregateOutputType | null\n    _max: Discussionboard_user_profileMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_user_profileGroupByPayload<T extends discussionboard_user_profileGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_user_profileGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_user_profileGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_user_profileGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_user_profileGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_user_profileSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    display_name?: boolean\n    avatar_url?: boolean\n    bio?: boolean\n    user_profile_user_id?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_user_profile\"]>\n\n  export type discussionboard_user_profileSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    display_name?: boolean\n    avatar_url?: boolean\n    bio?: boolean\n    user_profile_user_id?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_user_profile\"]>\n\n  export type discussionboard_user_profileSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    display_name?: boolean\n    avatar_url?: boolean\n    bio?: boolean\n    user_profile_user_id?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_user_profile\"]>\n\n  export type discussionboard_user_profileSelectScalar = {\n    id?: boolean\n    user_id?: boolean\n    display_name?: boolean\n    avatar_url?: boolean\n    bio?: boolean\n  }\n\n  export type discussionboard_user_profileOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"user_id\" | \"display_name\" | \"avatar_url\" | \"bio\", ExtArgs[\"result\"][\"discussionboard_user_profile\"]>\n  export type discussionboard_user_profileInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    user_profile_user_id?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_user_profileIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    user_profile_user_id?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_user_profileIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    user_profile_user_id?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n  }\n\n  export type $discussionboard_user_profilePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_user_profile\"\n    objects: {\n      user_profile_user_id: Prisma.$discussionboard_userPayload<ExtArgs>\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * [Primary Key] - Globally unique identifier for the profile. Surrogate key for normalization. Ensures all profile retrieval and modifications are auditable.\n       */\n      id: string\n      /**\n       * [Foreign Key: discussionboard_user] - User this profile belongs to. Implements 1:1 user-profile relationship (requirement: one profile per account, never duplicated). Enforces normalization. E.g., to get profile when showing post author.\n       */\n      user_id: string\n      /**\n       * [Display Name] - User's chosen name, shown publicly on posts/comments. Not used for authentication. Maintains 3NF by separating identity from credential tables. E.g., 'JohnDoe'.\n       */\n      display_name: string\n      /**\n       * [Avatar Image] - Optional user image link. Not duplicated anywhere. Maintains normalized structure. Used on post lists/user bios.\n       */\n      avatar_url: string | null\n      /**\n       * [User Bio] - Self-description or background, used on profiles/mouseover displays. Normalization: No business logic outside of display.\n       */\n      bio: string | null\n    }, ExtArgs[\"result\"][\"discussionboard_user_profile\"]>\n    composites: {}\n  }\n\n  type discussionboard_user_profileGetPayload<S extends boolean | null | undefined | discussionboard_user_profileDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_user_profilePayload, S>\n\n  type discussionboard_user_profileCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_user_profileFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_user_profileCountAggregateInputType | true\n    }\n\n  export interface discussionboard_user_profileDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_user_profile'], meta: { name: 'discussionboard_user_profile' } }\n    /**\n     * Find zero or one Discussionboard_user_profile that matches the filter.\n     * @param {discussionboard_user_profileFindUniqueArgs} args - Arguments to find a Discussionboard_user_profile\n     * @example\n     * // Get one Discussionboard_user_profile\n     * const discussionboard_user_profile = await prisma.discussionboard_user_profile.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_user_profileFindUniqueArgs>(args: SelectSubset<T, discussionboard_user_profileFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_user_profileClient<$Result.GetResult<Prisma.$discussionboard_user_profilePayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_user_profile that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_user_profileFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_user_profile\n     * @example\n     * // Get one Discussionboard_user_profile\n     * const discussionboard_user_profile = await prisma.discussionboard_user_profile.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_user_profileFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_user_profileFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_user_profileClient<$Result.GetResult<Prisma.$discussionboard_user_profilePayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_user_profile that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_user_profileFindFirstArgs} args - Arguments to find a Discussionboard_user_profile\n     * @example\n     * // Get one Discussionboard_user_profile\n     * const discussionboard_user_profile = await prisma.discussionboard_user_profile.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_user_profileFindFirstArgs>(args?: SelectSubset<T, discussionboard_user_profileFindFirstArgs<ExtArgs>>): Prisma__discussionboard_user_profileClient<$Result.GetResult<Prisma.$discussionboard_user_profilePayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_user_profile that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_user_profileFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_user_profile\n     * @example\n     * // Get one Discussionboard_user_profile\n     * const discussionboard_user_profile = await prisma.discussionboard_user_profile.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_user_profileFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_user_profileFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_user_profileClient<$Result.GetResult<Prisma.$discussionboard_user_profilePayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_user_profiles that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_user_profileFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_user_profiles\n     * const discussionboard_user_profiles = await prisma.discussionboard_user_profile.findMany()\n     * \n     * // Get first 10 Discussionboard_user_profiles\n     * const discussionboard_user_profiles = await prisma.discussionboard_user_profile.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_user_profileWithIdOnly = await prisma.discussionboard_user_profile.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_user_profileFindManyArgs>(args?: SelectSubset<T, discussionboard_user_profileFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_user_profilePayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_user_profile.\n     * @param {discussionboard_user_profileCreateArgs} args - Arguments to create a Discussionboard_user_profile.\n     * @example\n     * // Create one Discussionboard_user_profile\n     * const Discussionboard_user_profile = await prisma.discussionboard_user_profile.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_user_profile\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_user_profileCreateArgs>(args: SelectSubset<T, discussionboard_user_profileCreateArgs<ExtArgs>>): Prisma__discussionboard_user_profileClient<$Result.GetResult<Prisma.$discussionboard_user_profilePayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_user_profiles.\n     * @param {discussionboard_user_profileCreateManyArgs} args - Arguments to create many Discussionboard_user_profiles.\n     * @example\n     * // Create many Discussionboard_user_profiles\n     * const discussionboard_user_profile = await prisma.discussionboard_user_profile.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_user_profileCreateManyArgs>(args?: SelectSubset<T, discussionboard_user_profileCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_user_profiles and returns the data saved in the database.\n     * @param {discussionboard_user_profileCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_user_profiles.\n     * @example\n     * // Create many Discussionboard_user_profiles\n     * const discussionboard_user_profile = await prisma.discussionboard_user_profile.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_user_profiles and only return the `id`\n     * const discussionboard_user_profileWithIdOnly = await prisma.discussionboard_user_profile.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_user_profileCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_user_profileCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_user_profilePayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_user_profile.\n     * @param {discussionboard_user_profileDeleteArgs} args - Arguments to delete one Discussionboard_user_profile.\n     * @example\n     * // Delete one Discussionboard_user_profile\n     * const Discussionboard_user_profile = await prisma.discussionboard_user_profile.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_user_profile\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_user_profileDeleteArgs>(args: SelectSubset<T, discussionboard_user_profileDeleteArgs<ExtArgs>>): Prisma__discussionboard_user_profileClient<$Result.GetResult<Prisma.$discussionboard_user_profilePayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_user_profile.\n     * @param {discussionboard_user_profileUpdateArgs} args - Arguments to update one Discussionboard_user_profile.\n     * @example\n     * // Update one Discussionboard_user_profile\n     * const discussionboard_user_profile = await prisma.discussionboard_user_profile.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_user_profileUpdateArgs>(args: SelectSubset<T, discussionboard_user_profileUpdateArgs<ExtArgs>>): Prisma__discussionboard_user_profileClient<$Result.GetResult<Prisma.$discussionboard_user_profilePayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_user_profiles.\n     * @param {discussionboard_user_profileDeleteManyArgs} args - Arguments to filter Discussionboard_user_profiles to delete.\n     * @example\n     * // Delete a few Discussionboard_user_profiles\n     * const { count } = await prisma.discussionboard_user_profile.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_user_profileDeleteManyArgs>(args?: SelectSubset<T, discussionboard_user_profileDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_user_profiles.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_user_profileUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_user_profiles\n     * const discussionboard_user_profile = await prisma.discussionboard_user_profile.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_user_profileUpdateManyArgs>(args: SelectSubset<T, discussionboard_user_profileUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_user_profiles and returns the data updated in the database.\n     * @param {discussionboard_user_profileUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_user_profiles.\n     * @example\n     * // Update many Discussionboard_user_profiles\n     * const discussionboard_user_profile = await prisma.discussionboard_user_profile.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_user_profiles and only return the `id`\n     * const discussionboard_user_profileWithIdOnly = await prisma.discussionboard_user_profile.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_user_profileUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_user_profileUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_user_profilePayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_user_profile.\n     * @param {discussionboard_user_profileUpsertArgs} args - Arguments to update or create a Discussionboard_user_profile.\n     * @example\n     * // Update or create a Discussionboard_user_profile\n     * const discussionboard_user_profile = await prisma.discussionboard_user_profile.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_user_profile\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_user_profile we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_user_profileUpsertArgs>(args: SelectSubset<T, discussionboard_user_profileUpsertArgs<ExtArgs>>): Prisma__discussionboard_user_profileClient<$Result.GetResult<Prisma.$discussionboard_user_profilePayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_user_profiles.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_user_profileCountArgs} args - Arguments to filter Discussionboard_user_profiles to count.\n     * @example\n     * // Count the number of Discussionboard_user_profiles\n     * const count = await prisma.discussionboard_user_profile.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_user_profiles we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_user_profileCountArgs>(\n      args?: Subset<T, discussionboard_user_profileCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_user_profileCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_user_profile.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_user_profileAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_user_profileAggregateArgs>(args: Subset<T, Discussionboard_user_profileAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_user_profileAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_user_profile.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_user_profileGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_user_profileGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_user_profileGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_user_profileGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_user_profileGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_user_profileGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_user_profile model\n   */\n  readonly fields: discussionboard_user_profileFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_user_profile.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_user_profileClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    user_profile_user_id<T extends discussionboard_userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_userDefaultArgs<ExtArgs>>): Prisma__discussionboard_userClient<$Result.GetResult<Prisma.$discussionboard_userPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_user_profile model\n   */\n  interface discussionboard_user_profileFieldRefs {\n    readonly id: FieldRef<\"discussionboard_user_profile\", 'String'>\n    readonly user_id: FieldRef<\"discussionboard_user_profile\", 'String'>\n    readonly display_name: FieldRef<\"discussionboard_user_profile\", 'String'>\n    readonly avatar_url: FieldRef<\"discussionboard_user_profile\", 'String'>\n    readonly bio: FieldRef<\"discussionboard_user_profile\", 'String'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_user_profile findUnique\n   */\n  export type discussionboard_user_profileFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_profile\n     */\n    select?: discussionboard_user_profileSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_profile\n     */\n    omit?: discussionboard_user_profileOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_profileInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_user_profile to fetch.\n     */\n    where: discussionboard_user_profileWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_user_profile findUniqueOrThrow\n   */\n  export type discussionboard_user_profileFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_profile\n     */\n    select?: discussionboard_user_profileSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_profile\n     */\n    omit?: discussionboard_user_profileOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_profileInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_user_profile to fetch.\n     */\n    where: discussionboard_user_profileWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_user_profile findFirst\n   */\n  export type discussionboard_user_profileFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_profile\n     */\n    select?: discussionboard_user_profileSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_profile\n     */\n    omit?: discussionboard_user_profileOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_profileInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_user_profile to fetch.\n     */\n    where?: discussionboard_user_profileWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_user_profiles to fetch.\n     */\n    orderBy?: discussionboard_user_profileOrderByWithRelationInput | discussionboard_user_profileOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_user_profiles.\n     */\n    cursor?: discussionboard_user_profileWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_user_profiles from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_user_profiles.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_user_profiles.\n     */\n    distinct?: Discussionboard_user_profileScalarFieldEnum | Discussionboard_user_profileScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_user_profile findFirstOrThrow\n   */\n  export type discussionboard_user_profileFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_profile\n     */\n    select?: discussionboard_user_profileSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_profile\n     */\n    omit?: discussionboard_user_profileOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_profileInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_user_profile to fetch.\n     */\n    where?: discussionboard_user_profileWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_user_profiles to fetch.\n     */\n    orderBy?: discussionboard_user_profileOrderByWithRelationInput | discussionboard_user_profileOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_user_profiles.\n     */\n    cursor?: discussionboard_user_profileWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_user_profiles from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_user_profiles.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_user_profiles.\n     */\n    distinct?: Discussionboard_user_profileScalarFieldEnum | Discussionboard_user_profileScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_user_profile findMany\n   */\n  export type discussionboard_user_profileFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_profile\n     */\n    select?: discussionboard_user_profileSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_profile\n     */\n    omit?: discussionboard_user_profileOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_profileInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_user_profiles to fetch.\n     */\n    where?: discussionboard_user_profileWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_user_profiles to fetch.\n     */\n    orderBy?: discussionboard_user_profileOrderByWithRelationInput | discussionboard_user_profileOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_user_profiles.\n     */\n    cursor?: discussionboard_user_profileWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_user_profiles from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_user_profiles.\n     */\n    skip?: number\n    distinct?: Discussionboard_user_profileScalarFieldEnum | Discussionboard_user_profileScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_user_profile create\n   */\n  export type discussionboard_user_profileCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_profile\n     */\n    select?: discussionboard_user_profileSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_profile\n     */\n    omit?: discussionboard_user_profileOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_profileInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_user_profile.\n     */\n    data: XOR<discussionboard_user_profileCreateInput, discussionboard_user_profileUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_user_profile createMany\n   */\n  export type discussionboard_user_profileCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_user_profiles.\n     */\n    data: discussionboard_user_profileCreateManyInput | discussionboard_user_profileCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_user_profile createManyAndReturn\n   */\n  export type discussionboard_user_profileCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_profile\n     */\n    select?: discussionboard_user_profileSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_profile\n     */\n    omit?: discussionboard_user_profileOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_user_profiles.\n     */\n    data: discussionboard_user_profileCreateManyInput | discussionboard_user_profileCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_profileIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_user_profile update\n   */\n  export type discussionboard_user_profileUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_profile\n     */\n    select?: discussionboard_user_profileSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_profile\n     */\n    omit?: discussionboard_user_profileOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_profileInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_user_profile.\n     */\n    data: XOR<discussionboard_user_profileUpdateInput, discussionboard_user_profileUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_user_profile to update.\n     */\n    where: discussionboard_user_profileWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_user_profile updateMany\n   */\n  export type discussionboard_user_profileUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_user_profiles.\n     */\n    data: XOR<discussionboard_user_profileUpdateManyMutationInput, discussionboard_user_profileUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_user_profiles to update\n     */\n    where?: discussionboard_user_profileWhereInput\n    /**\n     * Limit how many discussionboard_user_profiles to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_user_profile updateManyAndReturn\n   */\n  export type discussionboard_user_profileUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_profile\n     */\n    select?: discussionboard_user_profileSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_profile\n     */\n    omit?: discussionboard_user_profileOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_user_profiles.\n     */\n    data: XOR<discussionboard_user_profileUpdateManyMutationInput, discussionboard_user_profileUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_user_profiles to update\n     */\n    where?: discussionboard_user_profileWhereInput\n    /**\n     * Limit how many discussionboard_user_profiles to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_profileIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_user_profile upsert\n   */\n  export type discussionboard_user_profileUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_profile\n     */\n    select?: discussionboard_user_profileSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_profile\n     */\n    omit?: discussionboard_user_profileOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_profileInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_user_profile to update in case it exists.\n     */\n    where: discussionboard_user_profileWhereUniqueInput\n    /**\n     * In case the discussionboard_user_profile found by the `where` argument doesn't exist, create a new discussionboard_user_profile with this data.\n     */\n    create: XOR<discussionboard_user_profileCreateInput, discussionboard_user_profileUncheckedCreateInput>\n    /**\n     * In case the discussionboard_user_profile was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_user_profileUpdateInput, discussionboard_user_profileUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_user_profile delete\n   */\n  export type discussionboard_user_profileDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_profile\n     */\n    select?: discussionboard_user_profileSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_profile\n     */\n    omit?: discussionboard_user_profileOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_profileInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_user_profile to delete.\n     */\n    where: discussionboard_user_profileWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_user_profile deleteMany\n   */\n  export type discussionboard_user_profileDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_user_profiles to delete\n     */\n    where?: discussionboard_user_profileWhereInput\n    /**\n     * Limit how many discussionboard_user_profiles to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_user_profile without action\n   */\n  export type discussionboard_user_profileDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_profile\n     */\n    select?: discussionboard_user_profileSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_profile\n     */\n    omit?: discussionboard_user_profileOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_profileInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_member\n   */\n\n  export type AggregateDiscussionboard_member = {\n    _count: Discussionboard_memberCountAggregateOutputType | null\n    _min: Discussionboard_memberMinAggregateOutputType | null\n    _max: Discussionboard_memberMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_memberMinAggregateOutputType = {\n    id: string | null\n    user_id: string | null\n    granted_at: Date | null\n  }\n\n  export type Discussionboard_memberMaxAggregateOutputType = {\n    id: string | null\n    user_id: string | null\n    granted_at: Date | null\n  }\n\n  export type Discussionboard_memberCountAggregateOutputType = {\n    id: number\n    user_id: number\n    granted_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_memberMinAggregateInputType = {\n    id?: true\n    user_id?: true\n    granted_at?: true\n  }\n\n  export type Discussionboard_memberMaxAggregateInputType = {\n    id?: true\n    user_id?: true\n    granted_at?: true\n  }\n\n  export type Discussionboard_memberCountAggregateInputType = {\n    id?: true\n    user_id?: true\n    granted_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_memberAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_member to aggregate.\n     */\n    where?: discussionboard_memberWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_members to fetch.\n     */\n    orderBy?: discussionboard_memberOrderByWithRelationInput | discussionboard_memberOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_memberWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_members from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_members.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_members\n    **/\n    _count?: true | Discussionboard_memberCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_memberMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_memberMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_memberAggregateType<T extends Discussionboard_memberAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_member]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_member[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_member[P]>\n  }\n\n\n\n\n  export type discussionboard_memberGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_memberWhereInput\n    orderBy?: discussionboard_memberOrderByWithAggregationInput | discussionboard_memberOrderByWithAggregationInput[]\n    by: Discussionboard_memberScalarFieldEnum[] | Discussionboard_memberScalarFieldEnum\n    having?: discussionboard_memberScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_memberCountAggregateInputType | true\n    _min?: Discussionboard_memberMinAggregateInputType\n    _max?: Discussionboard_memberMaxAggregateInputType\n  }\n\n  export type Discussionboard_memberGroupByOutputType = {\n    id: string\n    user_id: string\n    granted_at: Date\n    _count: Discussionboard_memberCountAggregateOutputType | null\n    _min: Discussionboard_memberMinAggregateOutputType | null\n    _max: Discussionboard_memberMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_memberGroupByPayload<T extends discussionboard_memberGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_memberGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_memberGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_memberGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_memberGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_memberSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    granted_at?: boolean\n    member_user_id?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    discussionboard_post?: boolean | discussionboard_member$discussionboard_postArgs<ExtArgs>\n    _count?: boolean | Discussionboard_memberCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_member\"]>\n\n  export type discussionboard_memberSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    granted_at?: boolean\n    member_user_id?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_member\"]>\n\n  export type discussionboard_memberSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    granted_at?: boolean\n    member_user_id?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_member\"]>\n\n  export type discussionboard_memberSelectScalar = {\n    id?: boolean\n    user_id?: boolean\n    granted_at?: boolean\n  }\n\n  export type discussionboard_memberOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"user_id\" | \"granted_at\", ExtArgs[\"result\"][\"discussionboard_member\"]>\n  export type discussionboard_memberInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    member_user_id?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    discussionboard_post?: boolean | discussionboard_member$discussionboard_postArgs<ExtArgs>\n    _count?: boolean | Discussionboard_memberCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_memberIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    member_user_id?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_memberIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    member_user_id?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n  }\n\n  export type $discussionboard_memberPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_member\"\n    objects: {\n      member_user_id: Prisma.$discussionboard_userPayload<ExtArgs>\n      discussionboard_post: Prisma.$discussionboard_postPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * [Primary Key] - Each member has a dedicated, globally unique role assignment entry for traceability (even if admin or moderator). Enforces 3NF by using only a surrogate key.\n       */\n      id: string\n      /**\n       * [Foreign Key: discussionboard_user] - Account assigned this member role. Enforces 1:1 mapping, not duplicated for other roles. Needed for permissions matrix. E.g., to check if a user can create posts.\n       */\n      user_id: string\n      /**\n       * [Membership Grant Timestamp] - When membership began. Required for audits, demotions, or calculating active duration. Maintains third normal form by not holding user or credential data.\n       */\n      granted_at: Date\n    }, ExtArgs[\"result\"][\"discussionboard_member\"]>\n    composites: {}\n  }\n\n  type discussionboard_memberGetPayload<S extends boolean | null | undefined | discussionboard_memberDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_memberPayload, S>\n\n  type discussionboard_memberCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_memberFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_memberCountAggregateInputType | true\n    }\n\n  export interface discussionboard_memberDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_member'], meta: { name: 'discussionboard_member' } }\n    /**\n     * Find zero or one Discussionboard_member that matches the filter.\n     * @param {discussionboard_memberFindUniqueArgs} args - Arguments to find a Discussionboard_member\n     * @example\n     * // Get one Discussionboard_member\n     * const discussionboard_member = await prisma.discussionboard_member.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_memberFindUniqueArgs>(args: SelectSubset<T, discussionboard_memberFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_memberClient<$Result.GetResult<Prisma.$discussionboard_memberPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_member that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_memberFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_member\n     * @example\n     * // Get one Discussionboard_member\n     * const discussionboard_member = await prisma.discussionboard_member.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_memberFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_memberFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_memberClient<$Result.GetResult<Prisma.$discussionboard_memberPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_member that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_memberFindFirstArgs} args - Arguments to find a Discussionboard_member\n     * @example\n     * // Get one Discussionboard_member\n     * const discussionboard_member = await prisma.discussionboard_member.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_memberFindFirstArgs>(args?: SelectSubset<T, discussionboard_memberFindFirstArgs<ExtArgs>>): Prisma__discussionboard_memberClient<$Result.GetResult<Prisma.$discussionboard_memberPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_member that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_memberFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_member\n     * @example\n     * // Get one Discussionboard_member\n     * const discussionboard_member = await prisma.discussionboard_member.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_memberFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_memberFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_memberClient<$Result.GetResult<Prisma.$discussionboard_memberPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_members that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_memberFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_members\n     * const discussionboard_members = await prisma.discussionboard_member.findMany()\n     * \n     * // Get first 10 Discussionboard_members\n     * const discussionboard_members = await prisma.discussionboard_member.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_memberWithIdOnly = await prisma.discussionboard_member.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_memberFindManyArgs>(args?: SelectSubset<T, discussionboard_memberFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_memberPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_member.\n     * @param {discussionboard_memberCreateArgs} args - Arguments to create a Discussionboard_member.\n     * @example\n     * // Create one Discussionboard_member\n     * const Discussionboard_member = await prisma.discussionboard_member.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_member\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_memberCreateArgs>(args: SelectSubset<T, discussionboard_memberCreateArgs<ExtArgs>>): Prisma__discussionboard_memberClient<$Result.GetResult<Prisma.$discussionboard_memberPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_members.\n     * @param {discussionboard_memberCreateManyArgs} args - Arguments to create many Discussionboard_members.\n     * @example\n     * // Create many Discussionboard_members\n     * const discussionboard_member = await prisma.discussionboard_member.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_memberCreateManyArgs>(args?: SelectSubset<T, discussionboard_memberCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_members and returns the data saved in the database.\n     * @param {discussionboard_memberCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_members.\n     * @example\n     * // Create many Discussionboard_members\n     * const discussionboard_member = await prisma.discussionboard_member.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_members and only return the `id`\n     * const discussionboard_memberWithIdOnly = await prisma.discussionboard_member.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_memberCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_memberCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_memberPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_member.\n     * @param {discussionboard_memberDeleteArgs} args - Arguments to delete one Discussionboard_member.\n     * @example\n     * // Delete one Discussionboard_member\n     * const Discussionboard_member = await prisma.discussionboard_member.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_member\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_memberDeleteArgs>(args: SelectSubset<T, discussionboard_memberDeleteArgs<ExtArgs>>): Prisma__discussionboard_memberClient<$Result.GetResult<Prisma.$discussionboard_memberPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_member.\n     * @param {discussionboard_memberUpdateArgs} args - Arguments to update one Discussionboard_member.\n     * @example\n     * // Update one Discussionboard_member\n     * const discussionboard_member = await prisma.discussionboard_member.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_memberUpdateArgs>(args: SelectSubset<T, discussionboard_memberUpdateArgs<ExtArgs>>): Prisma__discussionboard_memberClient<$Result.GetResult<Prisma.$discussionboard_memberPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_members.\n     * @param {discussionboard_memberDeleteManyArgs} args - Arguments to filter Discussionboard_members to delete.\n     * @example\n     * // Delete a few Discussionboard_members\n     * const { count } = await prisma.discussionboard_member.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_memberDeleteManyArgs>(args?: SelectSubset<T, discussionboard_memberDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_members.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_memberUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_members\n     * const discussionboard_member = await prisma.discussionboard_member.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_memberUpdateManyArgs>(args: SelectSubset<T, discussionboard_memberUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_members and returns the data updated in the database.\n     * @param {discussionboard_memberUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_members.\n     * @example\n     * // Update many Discussionboard_members\n     * const discussionboard_member = await prisma.discussionboard_member.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_members and only return the `id`\n     * const discussionboard_memberWithIdOnly = await prisma.discussionboard_member.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_memberUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_memberUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_memberPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_member.\n     * @param {discussionboard_memberUpsertArgs} args - Arguments to update or create a Discussionboard_member.\n     * @example\n     * // Update or create a Discussionboard_member\n     * const discussionboard_member = await prisma.discussionboard_member.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_member\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_member we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_memberUpsertArgs>(args: SelectSubset<T, discussionboard_memberUpsertArgs<ExtArgs>>): Prisma__discussionboard_memberClient<$Result.GetResult<Prisma.$discussionboard_memberPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_members.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_memberCountArgs} args - Arguments to filter Discussionboard_members to count.\n     * @example\n     * // Count the number of Discussionboard_members\n     * const count = await prisma.discussionboard_member.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_members we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_memberCountArgs>(\n      args?: Subset<T, discussionboard_memberCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_memberCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_member.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_memberAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_memberAggregateArgs>(args: Subset<T, Discussionboard_memberAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_memberAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_member.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_memberGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_memberGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_memberGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_memberGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_memberGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_memberGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_member model\n   */\n  readonly fields: discussionboard_memberFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_member.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_memberClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    member_user_id<T extends discussionboard_userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_userDefaultArgs<ExtArgs>>): Prisma__discussionboard_userClient<$Result.GetResult<Prisma.$discussionboard_userPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    discussionboard_post<T extends discussionboard_member$discussionboard_postArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_member$discussionboard_postArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_postPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_member model\n   */\n  interface discussionboard_memberFieldRefs {\n    readonly id: FieldRef<\"discussionboard_member\", 'String'>\n    readonly user_id: FieldRef<\"discussionboard_member\", 'String'>\n    readonly granted_at: FieldRef<\"discussionboard_member\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_member findUnique\n   */\n  export type discussionboard_memberFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_member\n     */\n    select?: discussionboard_memberSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_member\n     */\n    omit?: discussionboard_memberOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_memberInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_member to fetch.\n     */\n    where: discussionboard_memberWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_member findUniqueOrThrow\n   */\n  export type discussionboard_memberFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_member\n     */\n    select?: discussionboard_memberSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_member\n     */\n    omit?: discussionboard_memberOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_memberInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_member to fetch.\n     */\n    where: discussionboard_memberWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_member findFirst\n   */\n  export type discussionboard_memberFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_member\n     */\n    select?: discussionboard_memberSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_member\n     */\n    omit?: discussionboard_memberOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_memberInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_member to fetch.\n     */\n    where?: discussionboard_memberWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_members to fetch.\n     */\n    orderBy?: discussionboard_memberOrderByWithRelationInput | discussionboard_memberOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_members.\n     */\n    cursor?: discussionboard_memberWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_members from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_members.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_members.\n     */\n    distinct?: Discussionboard_memberScalarFieldEnum | Discussionboard_memberScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_member findFirstOrThrow\n   */\n  export type discussionboard_memberFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_member\n     */\n    select?: discussionboard_memberSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_member\n     */\n    omit?: discussionboard_memberOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_memberInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_member to fetch.\n     */\n    where?: discussionboard_memberWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_members to fetch.\n     */\n    orderBy?: discussionboard_memberOrderByWithRelationInput | discussionboard_memberOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_members.\n     */\n    cursor?: discussionboard_memberWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_members from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_members.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_members.\n     */\n    distinct?: Discussionboard_memberScalarFieldEnum | Discussionboard_memberScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_member findMany\n   */\n  export type discussionboard_memberFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_member\n     */\n    select?: discussionboard_memberSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_member\n     */\n    omit?: discussionboard_memberOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_memberInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_members to fetch.\n     */\n    where?: discussionboard_memberWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_members to fetch.\n     */\n    orderBy?: discussionboard_memberOrderByWithRelationInput | discussionboard_memberOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_members.\n     */\n    cursor?: discussionboard_memberWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_members from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_members.\n     */\n    skip?: number\n    distinct?: Discussionboard_memberScalarFieldEnum | Discussionboard_memberScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_member create\n   */\n  export type discussionboard_memberCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_member\n     */\n    select?: discussionboard_memberSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_member\n     */\n    omit?: discussionboard_memberOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_memberInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_member.\n     */\n    data: XOR<discussionboard_memberCreateInput, discussionboard_memberUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_member createMany\n   */\n  export type discussionboard_memberCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_members.\n     */\n    data: discussionboard_memberCreateManyInput | discussionboard_memberCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_member createManyAndReturn\n   */\n  export type discussionboard_memberCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_member\n     */\n    select?: discussionboard_memberSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_member\n     */\n    omit?: discussionboard_memberOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_members.\n     */\n    data: discussionboard_memberCreateManyInput | discussionboard_memberCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_memberIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_member update\n   */\n  export type discussionboard_memberUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_member\n     */\n    select?: discussionboard_memberSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_member\n     */\n    omit?: discussionboard_memberOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_memberInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_member.\n     */\n    data: XOR<discussionboard_memberUpdateInput, discussionboard_memberUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_member to update.\n     */\n    where: discussionboard_memberWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_member updateMany\n   */\n  export type discussionboard_memberUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_members.\n     */\n    data: XOR<discussionboard_memberUpdateManyMutationInput, discussionboard_memberUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_members to update\n     */\n    where?: discussionboard_memberWhereInput\n    /**\n     * Limit how many discussionboard_members to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_member updateManyAndReturn\n   */\n  export type discussionboard_memberUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_member\n     */\n    select?: discussionboard_memberSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_member\n     */\n    omit?: discussionboard_memberOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_members.\n     */\n    data: XOR<discussionboard_memberUpdateManyMutationInput, discussionboard_memberUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_members to update\n     */\n    where?: discussionboard_memberWhereInput\n    /**\n     * Limit how many discussionboard_members to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_memberIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_member upsert\n   */\n  export type discussionboard_memberUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_member\n     */\n    select?: discussionboard_memberSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_member\n     */\n    omit?: discussionboard_memberOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_memberInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_member to update in case it exists.\n     */\n    where: discussionboard_memberWhereUniqueInput\n    /**\n     * In case the discussionboard_member found by the `where` argument doesn't exist, create a new discussionboard_member with this data.\n     */\n    create: XOR<discussionboard_memberCreateInput, discussionboard_memberUncheckedCreateInput>\n    /**\n     * In case the discussionboard_member was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_memberUpdateInput, discussionboard_memberUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_member delete\n   */\n  export type discussionboard_memberDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_member\n     */\n    select?: discussionboard_memberSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_member\n     */\n    omit?: discussionboard_memberOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_memberInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_member to delete.\n     */\n    where: discussionboard_memberWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_member deleteMany\n   */\n  export type discussionboard_memberDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_members to delete\n     */\n    where?: discussionboard_memberWhereInput\n    /**\n     * Limit how many discussionboard_members to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_member.discussionboard_post\n   */\n  export type discussionboard_member$discussionboard_postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post\n     */\n    select?: discussionboard_postSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post\n     */\n    omit?: discussionboard_postOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_postInclude<ExtArgs> | null\n    where?: discussionboard_postWhereInput\n    orderBy?: discussionboard_postOrderByWithRelationInput | discussionboard_postOrderByWithRelationInput[]\n    cursor?: discussionboard_postWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_postScalarFieldEnum | Discussionboard_postScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_member without action\n   */\n  export type discussionboard_memberDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_member\n     */\n    select?: discussionboard_memberSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_member\n     */\n    omit?: discussionboard_memberOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_memberInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_moderator\n   */\n\n  export type AggregateDiscussionboard_moderator = {\n    _count: Discussionboard_moderatorCountAggregateOutputType | null\n    _min: Discussionboard_moderatorMinAggregateOutputType | null\n    _max: Discussionboard_moderatorMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_moderatorMinAggregateOutputType = {\n    id: string | null\n    user_id: string | null\n    assigned_at: Date | null\n  }\n\n  export type Discussionboard_moderatorMaxAggregateOutputType = {\n    id: string | null\n    user_id: string | null\n    assigned_at: Date | null\n  }\n\n  export type Discussionboard_moderatorCountAggregateOutputType = {\n    id: number\n    user_id: number\n    assigned_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_moderatorMinAggregateInputType = {\n    id?: true\n    user_id?: true\n    assigned_at?: true\n  }\n\n  export type Discussionboard_moderatorMaxAggregateInputType = {\n    id?: true\n    user_id?: true\n    assigned_at?: true\n  }\n\n  export type Discussionboard_moderatorCountAggregateInputType = {\n    id?: true\n    user_id?: true\n    assigned_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_moderatorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_moderator to aggregate.\n     */\n    where?: discussionboard_moderatorWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_moderators to fetch.\n     */\n    orderBy?: discussionboard_moderatorOrderByWithRelationInput | discussionboard_moderatorOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_moderatorWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_moderators from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_moderators.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_moderators\n    **/\n    _count?: true | Discussionboard_moderatorCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_moderatorMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_moderatorMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_moderatorAggregateType<T extends Discussionboard_moderatorAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_moderator]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_moderator[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_moderator[P]>\n  }\n\n\n\n\n  export type discussionboard_moderatorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_moderatorWhereInput\n    orderBy?: discussionboard_moderatorOrderByWithAggregationInput | discussionboard_moderatorOrderByWithAggregationInput[]\n    by: Discussionboard_moderatorScalarFieldEnum[] | Discussionboard_moderatorScalarFieldEnum\n    having?: discussionboard_moderatorScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_moderatorCountAggregateInputType | true\n    _min?: Discussionboard_moderatorMinAggregateInputType\n    _max?: Discussionboard_moderatorMaxAggregateInputType\n  }\n\n  export type Discussionboard_moderatorGroupByOutputType = {\n    id: string\n    user_id: string\n    assigned_at: Date\n    _count: Discussionboard_moderatorCountAggregateOutputType | null\n    _min: Discussionboard_moderatorMinAggregateOutputType | null\n    _max: Discussionboard_moderatorMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_moderatorGroupByPayload<T extends discussionboard_moderatorGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_moderatorGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_moderatorGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_moderatorGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_moderatorGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_moderatorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    assigned_at?: boolean\n    moderator_user_id?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_moderator\"]>\n\n  export type discussionboard_moderatorSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    assigned_at?: boolean\n    moderator_user_id?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_moderator\"]>\n\n  export type discussionboard_moderatorSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    assigned_at?: boolean\n    moderator_user_id?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_moderator\"]>\n\n  export type discussionboard_moderatorSelectScalar = {\n    id?: boolean\n    user_id?: boolean\n    assigned_at?: boolean\n  }\n\n  export type discussionboard_moderatorOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"user_id\" | \"assigned_at\", ExtArgs[\"result\"][\"discussionboard_moderator\"]>\n  export type discussionboard_moderatorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    moderator_user_id?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_moderatorIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    moderator_user_id?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_moderatorIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    moderator_user_id?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n  }\n\n  export type $discussionboard_moderatorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_moderator\"\n    objects: {\n      moderator_user_id: Prisma.$discussionboard_userPayload<ExtArgs>\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * [Primary Key] - Unique identifier for moderator role assignment. Enforces traceability, audit, and clean separation. Used for all moderator-level permission checks.\n       */\n      id: string\n      /**\n       * [Foreign Key: discussionboard_user] - User granted moderator authority (must also be a member). 1:1 constraint by unique index. Never duplicated nor nullable. E.g., lookup for report review access.\n       */\n      user_id: string\n      /**\n       * [Moderator Grant Timestamp] - When moderator role was assigned. Auditing and compliance for all moderator promotions. Normalization: Never holds non-moderator info.\n       */\n      assigned_at: Date\n    }, ExtArgs[\"result\"][\"discussionboard_moderator\"]>\n    composites: {}\n  }\n\n  type discussionboard_moderatorGetPayload<S extends boolean | null | undefined | discussionboard_moderatorDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_moderatorPayload, S>\n\n  type discussionboard_moderatorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_moderatorFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_moderatorCountAggregateInputType | true\n    }\n\n  export interface discussionboard_moderatorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_moderator'], meta: { name: 'discussionboard_moderator' } }\n    /**\n     * Find zero or one Discussionboard_moderator that matches the filter.\n     * @param {discussionboard_moderatorFindUniqueArgs} args - Arguments to find a Discussionboard_moderator\n     * @example\n     * // Get one Discussionboard_moderator\n     * const discussionboard_moderator = await prisma.discussionboard_moderator.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_moderatorFindUniqueArgs>(args: SelectSubset<T, discussionboard_moderatorFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_moderatorClient<$Result.GetResult<Prisma.$discussionboard_moderatorPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_moderator that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_moderatorFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_moderator\n     * @example\n     * // Get one Discussionboard_moderator\n     * const discussionboard_moderator = await prisma.discussionboard_moderator.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_moderatorFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_moderatorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_moderatorClient<$Result.GetResult<Prisma.$discussionboard_moderatorPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_moderator that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_moderatorFindFirstArgs} args - Arguments to find a Discussionboard_moderator\n     * @example\n     * // Get one Discussionboard_moderator\n     * const discussionboard_moderator = await prisma.discussionboard_moderator.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_moderatorFindFirstArgs>(args?: SelectSubset<T, discussionboard_moderatorFindFirstArgs<ExtArgs>>): Prisma__discussionboard_moderatorClient<$Result.GetResult<Prisma.$discussionboard_moderatorPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_moderator that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_moderatorFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_moderator\n     * @example\n     * // Get one Discussionboard_moderator\n     * const discussionboard_moderator = await prisma.discussionboard_moderator.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_moderatorFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_moderatorFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_moderatorClient<$Result.GetResult<Prisma.$discussionboard_moderatorPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_moderators that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_moderatorFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_moderators\n     * const discussionboard_moderators = await prisma.discussionboard_moderator.findMany()\n     * \n     * // Get first 10 Discussionboard_moderators\n     * const discussionboard_moderators = await prisma.discussionboard_moderator.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_moderatorWithIdOnly = await prisma.discussionboard_moderator.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_moderatorFindManyArgs>(args?: SelectSubset<T, discussionboard_moderatorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_moderatorPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_moderator.\n     * @param {discussionboard_moderatorCreateArgs} args - Arguments to create a Discussionboard_moderator.\n     * @example\n     * // Create one Discussionboard_moderator\n     * const Discussionboard_moderator = await prisma.discussionboard_moderator.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_moderator\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_moderatorCreateArgs>(args: SelectSubset<T, discussionboard_moderatorCreateArgs<ExtArgs>>): Prisma__discussionboard_moderatorClient<$Result.GetResult<Prisma.$discussionboard_moderatorPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_moderators.\n     * @param {discussionboard_moderatorCreateManyArgs} args - Arguments to create many Discussionboard_moderators.\n     * @example\n     * // Create many Discussionboard_moderators\n     * const discussionboard_moderator = await prisma.discussionboard_moderator.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_moderatorCreateManyArgs>(args?: SelectSubset<T, discussionboard_moderatorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_moderators and returns the data saved in the database.\n     * @param {discussionboard_moderatorCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_moderators.\n     * @example\n     * // Create many Discussionboard_moderators\n     * const discussionboard_moderator = await prisma.discussionboard_moderator.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_moderators and only return the `id`\n     * const discussionboard_moderatorWithIdOnly = await prisma.discussionboard_moderator.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_moderatorCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_moderatorCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_moderatorPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_moderator.\n     * @param {discussionboard_moderatorDeleteArgs} args - Arguments to delete one Discussionboard_moderator.\n     * @example\n     * // Delete one Discussionboard_moderator\n     * const Discussionboard_moderator = await prisma.discussionboard_moderator.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_moderator\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_moderatorDeleteArgs>(args: SelectSubset<T, discussionboard_moderatorDeleteArgs<ExtArgs>>): Prisma__discussionboard_moderatorClient<$Result.GetResult<Prisma.$discussionboard_moderatorPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_moderator.\n     * @param {discussionboard_moderatorUpdateArgs} args - Arguments to update one Discussionboard_moderator.\n     * @example\n     * // Update one Discussionboard_moderator\n     * const discussionboard_moderator = await prisma.discussionboard_moderator.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_moderatorUpdateArgs>(args: SelectSubset<T, discussionboard_moderatorUpdateArgs<ExtArgs>>): Prisma__discussionboard_moderatorClient<$Result.GetResult<Prisma.$discussionboard_moderatorPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_moderators.\n     * @param {discussionboard_moderatorDeleteManyArgs} args - Arguments to filter Discussionboard_moderators to delete.\n     * @example\n     * // Delete a few Discussionboard_moderators\n     * const { count } = await prisma.discussionboard_moderator.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_moderatorDeleteManyArgs>(args?: SelectSubset<T, discussionboard_moderatorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_moderators.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_moderatorUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_moderators\n     * const discussionboard_moderator = await prisma.discussionboard_moderator.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_moderatorUpdateManyArgs>(args: SelectSubset<T, discussionboard_moderatorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_moderators and returns the data updated in the database.\n     * @param {discussionboard_moderatorUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_moderators.\n     * @example\n     * // Update many Discussionboard_moderators\n     * const discussionboard_moderator = await prisma.discussionboard_moderator.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_moderators and only return the `id`\n     * const discussionboard_moderatorWithIdOnly = await prisma.discussionboard_moderator.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_moderatorUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_moderatorUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_moderatorPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_moderator.\n     * @param {discussionboard_moderatorUpsertArgs} args - Arguments to update or create a Discussionboard_moderator.\n     * @example\n     * // Update or create a Discussionboard_moderator\n     * const discussionboard_moderator = await prisma.discussionboard_moderator.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_moderator\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_moderator we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_moderatorUpsertArgs>(args: SelectSubset<T, discussionboard_moderatorUpsertArgs<ExtArgs>>): Prisma__discussionboard_moderatorClient<$Result.GetResult<Prisma.$discussionboard_moderatorPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_moderators.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_moderatorCountArgs} args - Arguments to filter Discussionboard_moderators to count.\n     * @example\n     * // Count the number of Discussionboard_moderators\n     * const count = await prisma.discussionboard_moderator.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_moderators we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_moderatorCountArgs>(\n      args?: Subset<T, discussionboard_moderatorCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_moderatorCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_moderator.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_moderatorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_moderatorAggregateArgs>(args: Subset<T, Discussionboard_moderatorAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_moderatorAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_moderator.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_moderatorGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_moderatorGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_moderatorGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_moderatorGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_moderatorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_moderatorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_moderator model\n   */\n  readonly fields: discussionboard_moderatorFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_moderator.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_moderatorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    moderator_user_id<T extends discussionboard_userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_userDefaultArgs<ExtArgs>>): Prisma__discussionboard_userClient<$Result.GetResult<Prisma.$discussionboard_userPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_moderator model\n   */\n  interface discussionboard_moderatorFieldRefs {\n    readonly id: FieldRef<\"discussionboard_moderator\", 'String'>\n    readonly user_id: FieldRef<\"discussionboard_moderator\", 'String'>\n    readonly assigned_at: FieldRef<\"discussionboard_moderator\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_moderator findUnique\n   */\n  export type discussionboard_moderatorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderator\n     */\n    select?: discussionboard_moderatorSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderator\n     */\n    omit?: discussionboard_moderatorOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderatorInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_moderator to fetch.\n     */\n    where: discussionboard_moderatorWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_moderator findUniqueOrThrow\n   */\n  export type discussionboard_moderatorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderator\n     */\n    select?: discussionboard_moderatorSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderator\n     */\n    omit?: discussionboard_moderatorOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderatorInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_moderator to fetch.\n     */\n    where: discussionboard_moderatorWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_moderator findFirst\n   */\n  export type discussionboard_moderatorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderator\n     */\n    select?: discussionboard_moderatorSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderator\n     */\n    omit?: discussionboard_moderatorOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderatorInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_moderator to fetch.\n     */\n    where?: discussionboard_moderatorWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_moderators to fetch.\n     */\n    orderBy?: discussionboard_moderatorOrderByWithRelationInput | discussionboard_moderatorOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_moderators.\n     */\n    cursor?: discussionboard_moderatorWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_moderators from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_moderators.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_moderators.\n     */\n    distinct?: Discussionboard_moderatorScalarFieldEnum | Discussionboard_moderatorScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_moderator findFirstOrThrow\n   */\n  export type discussionboard_moderatorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderator\n     */\n    select?: discussionboard_moderatorSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderator\n     */\n    omit?: discussionboard_moderatorOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderatorInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_moderator to fetch.\n     */\n    where?: discussionboard_moderatorWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_moderators to fetch.\n     */\n    orderBy?: discussionboard_moderatorOrderByWithRelationInput | discussionboard_moderatorOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_moderators.\n     */\n    cursor?: discussionboard_moderatorWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_moderators from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_moderators.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_moderators.\n     */\n    distinct?: Discussionboard_moderatorScalarFieldEnum | Discussionboard_moderatorScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_moderator findMany\n   */\n  export type discussionboard_moderatorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderator\n     */\n    select?: discussionboard_moderatorSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderator\n     */\n    omit?: discussionboard_moderatorOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderatorInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_moderators to fetch.\n     */\n    where?: discussionboard_moderatorWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_moderators to fetch.\n     */\n    orderBy?: discussionboard_moderatorOrderByWithRelationInput | discussionboard_moderatorOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_moderators.\n     */\n    cursor?: discussionboard_moderatorWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_moderators from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_moderators.\n     */\n    skip?: number\n    distinct?: Discussionboard_moderatorScalarFieldEnum | Discussionboard_moderatorScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_moderator create\n   */\n  export type discussionboard_moderatorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderator\n     */\n    select?: discussionboard_moderatorSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderator\n     */\n    omit?: discussionboard_moderatorOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderatorInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_moderator.\n     */\n    data: XOR<discussionboard_moderatorCreateInput, discussionboard_moderatorUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_moderator createMany\n   */\n  export type discussionboard_moderatorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_moderators.\n     */\n    data: discussionboard_moderatorCreateManyInput | discussionboard_moderatorCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_moderator createManyAndReturn\n   */\n  export type discussionboard_moderatorCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderator\n     */\n    select?: discussionboard_moderatorSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderator\n     */\n    omit?: discussionboard_moderatorOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_moderators.\n     */\n    data: discussionboard_moderatorCreateManyInput | discussionboard_moderatorCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderatorIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_moderator update\n   */\n  export type discussionboard_moderatorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderator\n     */\n    select?: discussionboard_moderatorSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderator\n     */\n    omit?: discussionboard_moderatorOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderatorInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_moderator.\n     */\n    data: XOR<discussionboard_moderatorUpdateInput, discussionboard_moderatorUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_moderator to update.\n     */\n    where: discussionboard_moderatorWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_moderator updateMany\n   */\n  export type discussionboard_moderatorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_moderators.\n     */\n    data: XOR<discussionboard_moderatorUpdateManyMutationInput, discussionboard_moderatorUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_moderators to update\n     */\n    where?: discussionboard_moderatorWhereInput\n    /**\n     * Limit how many discussionboard_moderators to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_moderator updateManyAndReturn\n   */\n  export type discussionboard_moderatorUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderator\n     */\n    select?: discussionboard_moderatorSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderator\n     */\n    omit?: discussionboard_moderatorOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_moderators.\n     */\n    data: XOR<discussionboard_moderatorUpdateManyMutationInput, discussionboard_moderatorUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_moderators to update\n     */\n    where?: discussionboard_moderatorWhereInput\n    /**\n     * Limit how many discussionboard_moderators to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderatorIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_moderator upsert\n   */\n  export type discussionboard_moderatorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderator\n     */\n    select?: discussionboard_moderatorSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderator\n     */\n    omit?: discussionboard_moderatorOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderatorInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_moderator to update in case it exists.\n     */\n    where: discussionboard_moderatorWhereUniqueInput\n    /**\n     * In case the discussionboard_moderator found by the `where` argument doesn't exist, create a new discussionboard_moderator with this data.\n     */\n    create: XOR<discussionboard_moderatorCreateInput, discussionboard_moderatorUncheckedCreateInput>\n    /**\n     * In case the discussionboard_moderator was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_moderatorUpdateInput, discussionboard_moderatorUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_moderator delete\n   */\n  export type discussionboard_moderatorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderator\n     */\n    select?: discussionboard_moderatorSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderator\n     */\n    omit?: discussionboard_moderatorOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderatorInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_moderator to delete.\n     */\n    where: discussionboard_moderatorWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_moderator deleteMany\n   */\n  export type discussionboard_moderatorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_moderators to delete\n     */\n    where?: discussionboard_moderatorWhereInput\n    /**\n     * Limit how many discussionboard_moderators to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_moderator without action\n   */\n  export type discussionboard_moderatorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderator\n     */\n    select?: discussionboard_moderatorSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderator\n     */\n    omit?: discussionboard_moderatorOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderatorInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_admin\n   */\n\n  export type AggregateDiscussionboard_admin = {\n    _count: Discussionboard_adminCountAggregateOutputType | null\n    _min: Discussionboard_adminMinAggregateOutputType | null\n    _max: Discussionboard_adminMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_adminMinAggregateOutputType = {\n    id: string | null\n    user_id: string | null\n    assigned_at: Date | null\n  }\n\n  export type Discussionboard_adminMaxAggregateOutputType = {\n    id: string | null\n    user_id: string | null\n    assigned_at: Date | null\n  }\n\n  export type Discussionboard_adminCountAggregateOutputType = {\n    id: number\n    user_id: number\n    assigned_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_adminMinAggregateInputType = {\n    id?: true\n    user_id?: true\n    assigned_at?: true\n  }\n\n  export type Discussionboard_adminMaxAggregateInputType = {\n    id?: true\n    user_id?: true\n    assigned_at?: true\n  }\n\n  export type Discussionboard_adminCountAggregateInputType = {\n    id?: true\n    user_id?: true\n    assigned_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_adminAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_admin to aggregate.\n     */\n    where?: discussionboard_adminWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_admins to fetch.\n     */\n    orderBy?: discussionboard_adminOrderByWithRelationInput | discussionboard_adminOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_adminWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_admins from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_admins.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_admins\n    **/\n    _count?: true | Discussionboard_adminCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_adminMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_adminMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_adminAggregateType<T extends Discussionboard_adminAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_admin]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_admin[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_admin[P]>\n  }\n\n\n\n\n  export type discussionboard_adminGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_adminWhereInput\n    orderBy?: discussionboard_adminOrderByWithAggregationInput | discussionboard_adminOrderByWithAggregationInput[]\n    by: Discussionboard_adminScalarFieldEnum[] | Discussionboard_adminScalarFieldEnum\n    having?: discussionboard_adminScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_adminCountAggregateInputType | true\n    _min?: Discussionboard_adminMinAggregateInputType\n    _max?: Discussionboard_adminMaxAggregateInputType\n  }\n\n  export type Discussionboard_adminGroupByOutputType = {\n    id: string\n    user_id: string\n    assigned_at: Date\n    _count: Discussionboard_adminCountAggregateOutputType | null\n    _min: Discussionboard_adminMinAggregateOutputType | null\n    _max: Discussionboard_adminMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_adminGroupByPayload<T extends discussionboard_adminGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_adminGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_adminGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_adminGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_adminGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_adminSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    assigned_at?: boolean\n    admin_user_id?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_admin\"]>\n\n  export type discussionboard_adminSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    assigned_at?: boolean\n    admin_user_id?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_admin\"]>\n\n  export type discussionboard_adminSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    assigned_at?: boolean\n    admin_user_id?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_admin\"]>\n\n  export type discussionboard_adminSelectScalar = {\n    id?: boolean\n    user_id?: boolean\n    assigned_at?: boolean\n  }\n\n  export type discussionboard_adminOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"user_id\" | \"assigned_at\", ExtArgs[\"result\"][\"discussionboard_admin\"]>\n  export type discussionboard_adminInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    admin_user_id?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_adminIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    admin_user_id?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_adminIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    admin_user_id?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n  }\n\n  export type $discussionboard_adminPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_admin\"\n    objects: {\n      admin_user_id: Prisma.$discussionboard_userPayload<ExtArgs>\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * [Primary Key] - Surrogate key for admin role assignment. Allows auditing/change tracking for all promotions/demotions. Clean, normalized design.\n       */\n      id: string\n      /**\n       * [Foreign Key: discussionboard_user] - User assigned admin authority. Enforced 1:1 by unique index, not nullable. 3NF: Never duplicated.\n       */\n      user_id: string\n      /**\n       * [Admin Assignment Timestamp] - When the admin role was assigned; fulfills trace and change-audit requirements for privileged role escalation. Normalized by excluding non-admin details.\n       */\n      assigned_at: Date\n    }, ExtArgs[\"result\"][\"discussionboard_admin\"]>\n    composites: {}\n  }\n\n  type discussionboard_adminGetPayload<S extends boolean | null | undefined | discussionboard_adminDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_adminPayload, S>\n\n  type discussionboard_adminCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_adminFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_adminCountAggregateInputType | true\n    }\n\n  export interface discussionboard_adminDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_admin'], meta: { name: 'discussionboard_admin' } }\n    /**\n     * Find zero or one Discussionboard_admin that matches the filter.\n     * @param {discussionboard_adminFindUniqueArgs} args - Arguments to find a Discussionboard_admin\n     * @example\n     * // Get one Discussionboard_admin\n     * const discussionboard_admin = await prisma.discussionboard_admin.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_adminFindUniqueArgs>(args: SelectSubset<T, discussionboard_adminFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_adminClient<$Result.GetResult<Prisma.$discussionboard_adminPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_admin that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_adminFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_admin\n     * @example\n     * // Get one Discussionboard_admin\n     * const discussionboard_admin = await prisma.discussionboard_admin.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_adminFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_adminFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_adminClient<$Result.GetResult<Prisma.$discussionboard_adminPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_admin that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_adminFindFirstArgs} args - Arguments to find a Discussionboard_admin\n     * @example\n     * // Get one Discussionboard_admin\n     * const discussionboard_admin = await prisma.discussionboard_admin.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_adminFindFirstArgs>(args?: SelectSubset<T, discussionboard_adminFindFirstArgs<ExtArgs>>): Prisma__discussionboard_adminClient<$Result.GetResult<Prisma.$discussionboard_adminPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_admin that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_adminFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_admin\n     * @example\n     * // Get one Discussionboard_admin\n     * const discussionboard_admin = await prisma.discussionboard_admin.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_adminFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_adminFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_adminClient<$Result.GetResult<Prisma.$discussionboard_adminPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_admins that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_adminFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_admins\n     * const discussionboard_admins = await prisma.discussionboard_admin.findMany()\n     * \n     * // Get first 10 Discussionboard_admins\n     * const discussionboard_admins = await prisma.discussionboard_admin.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_adminWithIdOnly = await prisma.discussionboard_admin.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_adminFindManyArgs>(args?: SelectSubset<T, discussionboard_adminFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_adminPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_admin.\n     * @param {discussionboard_adminCreateArgs} args - Arguments to create a Discussionboard_admin.\n     * @example\n     * // Create one Discussionboard_admin\n     * const Discussionboard_admin = await prisma.discussionboard_admin.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_admin\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_adminCreateArgs>(args: SelectSubset<T, discussionboard_adminCreateArgs<ExtArgs>>): Prisma__discussionboard_adminClient<$Result.GetResult<Prisma.$discussionboard_adminPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_admins.\n     * @param {discussionboard_adminCreateManyArgs} args - Arguments to create many Discussionboard_admins.\n     * @example\n     * // Create many Discussionboard_admins\n     * const discussionboard_admin = await prisma.discussionboard_admin.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_adminCreateManyArgs>(args?: SelectSubset<T, discussionboard_adminCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_admins and returns the data saved in the database.\n     * @param {discussionboard_adminCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_admins.\n     * @example\n     * // Create many Discussionboard_admins\n     * const discussionboard_admin = await prisma.discussionboard_admin.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_admins and only return the `id`\n     * const discussionboard_adminWithIdOnly = await prisma.discussionboard_admin.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_adminCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_adminCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_adminPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_admin.\n     * @param {discussionboard_adminDeleteArgs} args - Arguments to delete one Discussionboard_admin.\n     * @example\n     * // Delete one Discussionboard_admin\n     * const Discussionboard_admin = await prisma.discussionboard_admin.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_admin\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_adminDeleteArgs>(args: SelectSubset<T, discussionboard_adminDeleteArgs<ExtArgs>>): Prisma__discussionboard_adminClient<$Result.GetResult<Prisma.$discussionboard_adminPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_admin.\n     * @param {discussionboard_adminUpdateArgs} args - Arguments to update one Discussionboard_admin.\n     * @example\n     * // Update one Discussionboard_admin\n     * const discussionboard_admin = await prisma.discussionboard_admin.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_adminUpdateArgs>(args: SelectSubset<T, discussionboard_adminUpdateArgs<ExtArgs>>): Prisma__discussionboard_adminClient<$Result.GetResult<Prisma.$discussionboard_adminPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_admins.\n     * @param {discussionboard_adminDeleteManyArgs} args - Arguments to filter Discussionboard_admins to delete.\n     * @example\n     * // Delete a few Discussionboard_admins\n     * const { count } = await prisma.discussionboard_admin.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_adminDeleteManyArgs>(args?: SelectSubset<T, discussionboard_adminDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_admins.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_adminUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_admins\n     * const discussionboard_admin = await prisma.discussionboard_admin.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_adminUpdateManyArgs>(args: SelectSubset<T, discussionboard_adminUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_admins and returns the data updated in the database.\n     * @param {discussionboard_adminUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_admins.\n     * @example\n     * // Update many Discussionboard_admins\n     * const discussionboard_admin = await prisma.discussionboard_admin.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_admins and only return the `id`\n     * const discussionboard_adminWithIdOnly = await prisma.discussionboard_admin.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_adminUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_adminUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_adminPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_admin.\n     * @param {discussionboard_adminUpsertArgs} args - Arguments to update or create a Discussionboard_admin.\n     * @example\n     * // Update or create a Discussionboard_admin\n     * const discussionboard_admin = await prisma.discussionboard_admin.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_admin\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_admin we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_adminUpsertArgs>(args: SelectSubset<T, discussionboard_adminUpsertArgs<ExtArgs>>): Prisma__discussionboard_adminClient<$Result.GetResult<Prisma.$discussionboard_adminPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_admins.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_adminCountArgs} args - Arguments to filter Discussionboard_admins to count.\n     * @example\n     * // Count the number of Discussionboard_admins\n     * const count = await prisma.discussionboard_admin.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_admins we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_adminCountArgs>(\n      args?: Subset<T, discussionboard_adminCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_adminCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_admin.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_adminAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_adminAggregateArgs>(args: Subset<T, Discussionboard_adminAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_adminAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_admin.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_adminGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_adminGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_adminGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_adminGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_adminGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_adminGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_admin model\n   */\n  readonly fields: discussionboard_adminFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_admin.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_adminClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    admin_user_id<T extends discussionboard_userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_userDefaultArgs<ExtArgs>>): Prisma__discussionboard_userClient<$Result.GetResult<Prisma.$discussionboard_userPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_admin model\n   */\n  interface discussionboard_adminFieldRefs {\n    readonly id: FieldRef<\"discussionboard_admin\", 'String'>\n    readonly user_id: FieldRef<\"discussionboard_admin\", 'String'>\n    readonly assigned_at: FieldRef<\"discussionboard_admin\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_admin findUnique\n   */\n  export type discussionboard_adminFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_admin\n     */\n    select?: discussionboard_adminSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_admin\n     */\n    omit?: discussionboard_adminOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_adminInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_admin to fetch.\n     */\n    where: discussionboard_adminWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_admin findUniqueOrThrow\n   */\n  export type discussionboard_adminFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_admin\n     */\n    select?: discussionboard_adminSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_admin\n     */\n    omit?: discussionboard_adminOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_adminInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_admin to fetch.\n     */\n    where: discussionboard_adminWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_admin findFirst\n   */\n  export type discussionboard_adminFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_admin\n     */\n    select?: discussionboard_adminSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_admin\n     */\n    omit?: discussionboard_adminOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_adminInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_admin to fetch.\n     */\n    where?: discussionboard_adminWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_admins to fetch.\n     */\n    orderBy?: discussionboard_adminOrderByWithRelationInput | discussionboard_adminOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_admins.\n     */\n    cursor?: discussionboard_adminWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_admins from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_admins.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_admins.\n     */\n    distinct?: Discussionboard_adminScalarFieldEnum | Discussionboard_adminScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_admin findFirstOrThrow\n   */\n  export type discussionboard_adminFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_admin\n     */\n    select?: discussionboard_adminSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_admin\n     */\n    omit?: discussionboard_adminOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_adminInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_admin to fetch.\n     */\n    where?: discussionboard_adminWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_admins to fetch.\n     */\n    orderBy?: discussionboard_adminOrderByWithRelationInput | discussionboard_adminOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_admins.\n     */\n    cursor?: discussionboard_adminWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_admins from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_admins.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_admins.\n     */\n    distinct?: Discussionboard_adminScalarFieldEnum | Discussionboard_adminScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_admin findMany\n   */\n  export type discussionboard_adminFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_admin\n     */\n    select?: discussionboard_adminSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_admin\n     */\n    omit?: discussionboard_adminOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_adminInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_admins to fetch.\n     */\n    where?: discussionboard_adminWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_admins to fetch.\n     */\n    orderBy?: discussionboard_adminOrderByWithRelationInput | discussionboard_adminOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_admins.\n     */\n    cursor?: discussionboard_adminWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_admins from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_admins.\n     */\n    skip?: number\n    distinct?: Discussionboard_adminScalarFieldEnum | Discussionboard_adminScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_admin create\n   */\n  export type discussionboard_adminCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_admin\n     */\n    select?: discussionboard_adminSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_admin\n     */\n    omit?: discussionboard_adminOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_adminInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_admin.\n     */\n    data: XOR<discussionboard_adminCreateInput, discussionboard_adminUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_admin createMany\n   */\n  export type discussionboard_adminCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_admins.\n     */\n    data: discussionboard_adminCreateManyInput | discussionboard_adminCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_admin createManyAndReturn\n   */\n  export type discussionboard_adminCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_admin\n     */\n    select?: discussionboard_adminSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_admin\n     */\n    omit?: discussionboard_adminOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_admins.\n     */\n    data: discussionboard_adminCreateManyInput | discussionboard_adminCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_adminIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_admin update\n   */\n  export type discussionboard_adminUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_admin\n     */\n    select?: discussionboard_adminSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_admin\n     */\n    omit?: discussionboard_adminOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_adminInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_admin.\n     */\n    data: XOR<discussionboard_adminUpdateInput, discussionboard_adminUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_admin to update.\n     */\n    where: discussionboard_adminWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_admin updateMany\n   */\n  export type discussionboard_adminUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_admins.\n     */\n    data: XOR<discussionboard_adminUpdateManyMutationInput, discussionboard_adminUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_admins to update\n     */\n    where?: discussionboard_adminWhereInput\n    /**\n     * Limit how many discussionboard_admins to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_admin updateManyAndReturn\n   */\n  export type discussionboard_adminUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_admin\n     */\n    select?: discussionboard_adminSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_admin\n     */\n    omit?: discussionboard_adminOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_admins.\n     */\n    data: XOR<discussionboard_adminUpdateManyMutationInput, discussionboard_adminUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_admins to update\n     */\n    where?: discussionboard_adminWhereInput\n    /**\n     * Limit how many discussionboard_admins to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_adminIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_admin upsert\n   */\n  export type discussionboard_adminUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_admin\n     */\n    select?: discussionboard_adminSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_admin\n     */\n    omit?: discussionboard_adminOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_adminInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_admin to update in case it exists.\n     */\n    where: discussionboard_adminWhereUniqueInput\n    /**\n     * In case the discussionboard_admin found by the `where` argument doesn't exist, create a new discussionboard_admin with this data.\n     */\n    create: XOR<discussionboard_adminCreateInput, discussionboard_adminUncheckedCreateInput>\n    /**\n     * In case the discussionboard_admin was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_adminUpdateInput, discussionboard_adminUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_admin delete\n   */\n  export type discussionboard_adminDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_admin\n     */\n    select?: discussionboard_adminSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_admin\n     */\n    omit?: discussionboard_adminOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_adminInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_admin to delete.\n     */\n    where: discussionboard_adminWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_admin deleteMany\n   */\n  export type discussionboard_adminDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_admins to delete\n     */\n    where?: discussionboard_adminWhereInput\n    /**\n     * Limit how many discussionboard_admins to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_admin without action\n   */\n  export type discussionboard_adminDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_admin\n     */\n    select?: discussionboard_adminSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_admin\n     */\n    omit?: discussionboard_adminOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_adminInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_post\n   */\n\n  export type AggregateDiscussionboard_post = {\n    _count: Discussionboard_postCountAggregateOutputType | null\n    _min: Discussionboard_postMinAggregateOutputType | null\n    _max: Discussionboard_postMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_postMinAggregateOutputType = {\n    id: string | null\n    author_member_id: string | null\n    category_id: string | null\n    title: string | null\n    body: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Discussionboard_postMaxAggregateOutputType = {\n    id: string | null\n    author_member_id: string | null\n    category_id: string | null\n    title: string | null\n    body: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Discussionboard_postCountAggregateOutputType = {\n    id: number\n    author_member_id: number\n    category_id: number\n    title: number\n    body: number\n    created_at: number\n    updated_at: number\n    deleted_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_postMinAggregateInputType = {\n    id?: true\n    author_member_id?: true\n    category_id?: true\n    title?: true\n    body?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Discussionboard_postMaxAggregateInputType = {\n    id?: true\n    author_member_id?: true\n    category_id?: true\n    title?: true\n    body?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Discussionboard_postCountAggregateInputType = {\n    id?: true\n    author_member_id?: true\n    category_id?: true\n    title?: true\n    body?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_postAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_post to aggregate.\n     */\n    where?: discussionboard_postWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_posts to fetch.\n     */\n    orderBy?: discussionboard_postOrderByWithRelationInput | discussionboard_postOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_postWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_posts from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_posts.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_posts\n    **/\n    _count?: true | Discussionboard_postCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_postMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_postMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_postAggregateType<T extends Discussionboard_postAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_post]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_post[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_post[P]>\n  }\n\n\n\n\n  export type discussionboard_postGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_postWhereInput\n    orderBy?: discussionboard_postOrderByWithAggregationInput | discussionboard_postOrderByWithAggregationInput[]\n    by: Discussionboard_postScalarFieldEnum[] | Discussionboard_postScalarFieldEnum\n    having?: discussionboard_postScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_postCountAggregateInputType | true\n    _min?: Discussionboard_postMinAggregateInputType\n    _max?: Discussionboard_postMaxAggregateInputType\n  }\n\n  export type Discussionboard_postGroupByOutputType = {\n    id: string\n    author_member_id: string\n    category_id: string\n    title: string\n    body: string\n    created_at: Date\n    updated_at: Date\n    deleted_at: Date | null\n    _count: Discussionboard_postCountAggregateOutputType | null\n    _min: Discussionboard_postMinAggregateOutputType | null\n    _max: Discussionboard_postMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_postGroupByPayload<T extends discussionboard_postGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_postGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_postGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_postGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_postGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_postSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    author_member_id?: boolean\n    category_id?: boolean\n    title?: boolean\n    body?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    member?: boolean | discussionboard_memberDefaultArgs<ExtArgs>\n    category?: boolean | discussionboard_post_categoryDefaultArgs<ExtArgs>\n    discussionboard_post_attachment?: boolean | discussionboard_post$discussionboard_post_attachmentArgs<ExtArgs>\n    discussionboard_comments?: boolean | discussionboard_post$discussionboard_commentsArgs<ExtArgs>\n    discussionboard_likes?: boolean | discussionboard_post$discussionboard_likesArgs<ExtArgs>\n    discussionboard_reports?: boolean | discussionboard_post$discussionboard_reportsArgs<ExtArgs>\n    discussionboard_moderation_action?: boolean | discussionboard_post$discussionboard_moderation_actionArgs<ExtArgs>\n    discussionboard_report_review?: boolean | discussionboard_post$discussionboard_report_reviewArgs<ExtArgs>\n    discussionboard_warning?: boolean | discussionboard_post$discussionboard_warningArgs<ExtArgs>\n    discussionboard_notification?: boolean | discussionboard_post$discussionboard_notificationArgs<ExtArgs>\n    _count?: boolean | Discussionboard_postCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_post\"]>\n\n  export type discussionboard_postSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    author_member_id?: boolean\n    category_id?: boolean\n    title?: boolean\n    body?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    member?: boolean | discussionboard_memberDefaultArgs<ExtArgs>\n    category?: boolean | discussionboard_post_categoryDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_post\"]>\n\n  export type discussionboard_postSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    author_member_id?: boolean\n    category_id?: boolean\n    title?: boolean\n    body?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    member?: boolean | discussionboard_memberDefaultArgs<ExtArgs>\n    category?: boolean | discussionboard_post_categoryDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_post\"]>\n\n  export type discussionboard_postSelectScalar = {\n    id?: boolean\n    author_member_id?: boolean\n    category_id?: boolean\n    title?: boolean\n    body?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }\n\n  export type discussionboard_postOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"author_member_id\" | \"category_id\" | \"title\" | \"body\" | \"created_at\" | \"updated_at\" | \"deleted_at\", ExtArgs[\"result\"][\"discussionboard_post\"]>\n  export type discussionboard_postInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    member?: boolean | discussionboard_memberDefaultArgs<ExtArgs>\n    category?: boolean | discussionboard_post_categoryDefaultArgs<ExtArgs>\n    discussionboard_post_attachment?: boolean | discussionboard_post$discussionboard_post_attachmentArgs<ExtArgs>\n    discussionboard_comments?: boolean | discussionboard_post$discussionboard_commentsArgs<ExtArgs>\n    discussionboard_likes?: boolean | discussionboard_post$discussionboard_likesArgs<ExtArgs>\n    discussionboard_reports?: boolean | discussionboard_post$discussionboard_reportsArgs<ExtArgs>\n    discussionboard_moderation_action?: boolean | discussionboard_post$discussionboard_moderation_actionArgs<ExtArgs>\n    discussionboard_report_review?: boolean | discussionboard_post$discussionboard_report_reviewArgs<ExtArgs>\n    discussionboard_warning?: boolean | discussionboard_post$discussionboard_warningArgs<ExtArgs>\n    discussionboard_notification?: boolean | discussionboard_post$discussionboard_notificationArgs<ExtArgs>\n    _count?: boolean | Discussionboard_postCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_postIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    member?: boolean | discussionboard_memberDefaultArgs<ExtArgs>\n    category?: boolean | discussionboard_post_categoryDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_postIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    member?: boolean | discussionboard_memberDefaultArgs<ExtArgs>\n    category?: boolean | discussionboard_post_categoryDefaultArgs<ExtArgs>\n  }\n\n  export type $discussionboard_postPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_post\"\n    objects: {\n      member: Prisma.$discussionboard_memberPayload<ExtArgs>\n      category: Prisma.$discussionboard_post_categoryPayload<ExtArgs>\n      discussionboard_post_attachment: Prisma.$discussionboard_post_attachmentPayload<ExtArgs>[]\n      discussionboard_comments: Prisma.$discussionboard_commentsPayload<ExtArgs>[]\n      discussionboard_likes: Prisma.$discussionboard_likesPayload<ExtArgs>[]\n      discussionboard_reports: Prisma.$discussionboard_reportsPayload<ExtArgs>[]\n      discussionboard_moderation_action: Prisma.$discussionboard_moderation_actionPayload<ExtArgs>[]\n      discussionboard_report_review: Prisma.$discussionboard_report_reviewPayload<ExtArgs>[]\n      discussionboard_warning: Prisma.$discussionboard_warningPayload<ExtArgs>[]\n      discussionboard_notification: Prisma.$discussionboard_notificationPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * [Primary Key] - Unique identifier for each post as mandated for atomic access and historical auditing (Section 3.2).\n       */\n      id: string\n      /**\n       * [Author Member FK] - References the member authoring the post (see Section 3.2 in requirements). Maintains normalization by only referencing the member, not duplicating member data. E.g., used for showing all posts by a member.\n       */\n      author_member_id: string\n      /**\n       * [Category FK] - Associates post with a category (Section 3.2). Provides link to normalized category without duplication of data. E.g., 'Politics' or 'Economics'.\n       */\n      category_id: string\n      /**\n       * [Post Title] - Implements discussion title per Section 3.2. Used for search/listings. Always non-null, atomic text.\n       */\n      title: string\n      /**\n       * [Post Content Body] - Main text body, supports formatting. Fully normalized; not nullable.\n       */\n      body: string\n      /**\n       * [Creation Timestamp] - Records when the post was made (Section 3.2, 3.9).\n       */\n      created_at: Date\n      /**\n       * [Update Timestamp] - Last time this post was edited (Section 3.2). Used for audit/versioning display.\n       */\n      updated_at: Date\n      /**\n       * [Deleted Timestamp] - Soft-deletion timestamp if post is hidden/deleted by member or moderator. Nullable if not deleted.\n       */\n      deleted_at: Date | null\n    }, ExtArgs[\"result\"][\"discussionboard_post\"]>\n    composites: {}\n  }\n\n  type discussionboard_postGetPayload<S extends boolean | null | undefined | discussionboard_postDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_postPayload, S>\n\n  type discussionboard_postCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_postFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_postCountAggregateInputType | true\n    }\n\n  export interface discussionboard_postDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_post'], meta: { name: 'discussionboard_post' } }\n    /**\n     * Find zero or one Discussionboard_post that matches the filter.\n     * @param {discussionboard_postFindUniqueArgs} args - Arguments to find a Discussionboard_post\n     * @example\n     * // Get one Discussionboard_post\n     * const discussionboard_post = await prisma.discussionboard_post.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_postFindUniqueArgs>(args: SelectSubset<T, discussionboard_postFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_postClient<$Result.GetResult<Prisma.$discussionboard_postPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_post that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_postFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_post\n     * @example\n     * // Get one Discussionboard_post\n     * const discussionboard_post = await prisma.discussionboard_post.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_postFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_postFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_postClient<$Result.GetResult<Prisma.$discussionboard_postPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_post that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_postFindFirstArgs} args - Arguments to find a Discussionboard_post\n     * @example\n     * // Get one Discussionboard_post\n     * const discussionboard_post = await prisma.discussionboard_post.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_postFindFirstArgs>(args?: SelectSubset<T, discussionboard_postFindFirstArgs<ExtArgs>>): Prisma__discussionboard_postClient<$Result.GetResult<Prisma.$discussionboard_postPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_post that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_postFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_post\n     * @example\n     * // Get one Discussionboard_post\n     * const discussionboard_post = await prisma.discussionboard_post.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_postFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_postFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_postClient<$Result.GetResult<Prisma.$discussionboard_postPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_posts that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_postFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_posts\n     * const discussionboard_posts = await prisma.discussionboard_post.findMany()\n     * \n     * // Get first 10 Discussionboard_posts\n     * const discussionboard_posts = await prisma.discussionboard_post.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_postWithIdOnly = await prisma.discussionboard_post.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_postFindManyArgs>(args?: SelectSubset<T, discussionboard_postFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_postPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_post.\n     * @param {discussionboard_postCreateArgs} args - Arguments to create a Discussionboard_post.\n     * @example\n     * // Create one Discussionboard_post\n     * const Discussionboard_post = await prisma.discussionboard_post.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_post\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_postCreateArgs>(args: SelectSubset<T, discussionboard_postCreateArgs<ExtArgs>>): Prisma__discussionboard_postClient<$Result.GetResult<Prisma.$discussionboard_postPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_posts.\n     * @param {discussionboard_postCreateManyArgs} args - Arguments to create many Discussionboard_posts.\n     * @example\n     * // Create many Discussionboard_posts\n     * const discussionboard_post = await prisma.discussionboard_post.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_postCreateManyArgs>(args?: SelectSubset<T, discussionboard_postCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_posts and returns the data saved in the database.\n     * @param {discussionboard_postCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_posts.\n     * @example\n     * // Create many Discussionboard_posts\n     * const discussionboard_post = await prisma.discussionboard_post.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_posts and only return the `id`\n     * const discussionboard_postWithIdOnly = await prisma.discussionboard_post.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_postCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_postCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_postPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_post.\n     * @param {discussionboard_postDeleteArgs} args - Arguments to delete one Discussionboard_post.\n     * @example\n     * // Delete one Discussionboard_post\n     * const Discussionboard_post = await prisma.discussionboard_post.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_post\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_postDeleteArgs>(args: SelectSubset<T, discussionboard_postDeleteArgs<ExtArgs>>): Prisma__discussionboard_postClient<$Result.GetResult<Prisma.$discussionboard_postPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_post.\n     * @param {discussionboard_postUpdateArgs} args - Arguments to update one Discussionboard_post.\n     * @example\n     * // Update one Discussionboard_post\n     * const discussionboard_post = await prisma.discussionboard_post.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_postUpdateArgs>(args: SelectSubset<T, discussionboard_postUpdateArgs<ExtArgs>>): Prisma__discussionboard_postClient<$Result.GetResult<Prisma.$discussionboard_postPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_posts.\n     * @param {discussionboard_postDeleteManyArgs} args - Arguments to filter Discussionboard_posts to delete.\n     * @example\n     * // Delete a few Discussionboard_posts\n     * const { count } = await prisma.discussionboard_post.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_postDeleteManyArgs>(args?: SelectSubset<T, discussionboard_postDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_posts.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_postUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_posts\n     * const discussionboard_post = await prisma.discussionboard_post.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_postUpdateManyArgs>(args: SelectSubset<T, discussionboard_postUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_posts and returns the data updated in the database.\n     * @param {discussionboard_postUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_posts.\n     * @example\n     * // Update many Discussionboard_posts\n     * const discussionboard_post = await prisma.discussionboard_post.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_posts and only return the `id`\n     * const discussionboard_postWithIdOnly = await prisma.discussionboard_post.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_postUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_postUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_postPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_post.\n     * @param {discussionboard_postUpsertArgs} args - Arguments to update or create a Discussionboard_post.\n     * @example\n     * // Update or create a Discussionboard_post\n     * const discussionboard_post = await prisma.discussionboard_post.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_post\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_post we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_postUpsertArgs>(args: SelectSubset<T, discussionboard_postUpsertArgs<ExtArgs>>): Prisma__discussionboard_postClient<$Result.GetResult<Prisma.$discussionboard_postPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_posts.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_postCountArgs} args - Arguments to filter Discussionboard_posts to count.\n     * @example\n     * // Count the number of Discussionboard_posts\n     * const count = await prisma.discussionboard_post.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_posts we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_postCountArgs>(\n      args?: Subset<T, discussionboard_postCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_postCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_post.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_postAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_postAggregateArgs>(args: Subset<T, Discussionboard_postAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_postAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_post.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_postGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_postGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_postGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_postGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_postGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_postGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_post model\n   */\n  readonly fields: discussionboard_postFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_post.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_postClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    member<T extends discussionboard_memberDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_memberDefaultArgs<ExtArgs>>): Prisma__discussionboard_memberClient<$Result.GetResult<Prisma.$discussionboard_memberPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    category<T extends discussionboard_post_categoryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_post_categoryDefaultArgs<ExtArgs>>): Prisma__discussionboard_post_categoryClient<$Result.GetResult<Prisma.$discussionboard_post_categoryPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    discussionboard_post_attachment<T extends discussionboard_post$discussionboard_post_attachmentArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_post$discussionboard_post_attachmentArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_post_attachmentPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_comments<T extends discussionboard_post$discussionboard_commentsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_post$discussionboard_commentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_commentsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_likes<T extends discussionboard_post$discussionboard_likesArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_post$discussionboard_likesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_likesPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_reports<T extends discussionboard_post$discussionboard_reportsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_post$discussionboard_reportsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_reportsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_moderation_action<T extends discussionboard_post$discussionboard_moderation_actionArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_post$discussionboard_moderation_actionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_moderation_actionPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_report_review<T extends discussionboard_post$discussionboard_report_reviewArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_post$discussionboard_report_reviewArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_report_reviewPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_warning<T extends discussionboard_post$discussionboard_warningArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_post$discussionboard_warningArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_warningPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_notification<T extends discussionboard_post$discussionboard_notificationArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_post$discussionboard_notificationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_notificationPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_post model\n   */\n  interface discussionboard_postFieldRefs {\n    readonly id: FieldRef<\"discussionboard_post\", 'String'>\n    readonly author_member_id: FieldRef<\"discussionboard_post\", 'String'>\n    readonly category_id: FieldRef<\"discussionboard_post\", 'String'>\n    readonly title: FieldRef<\"discussionboard_post\", 'String'>\n    readonly body: FieldRef<\"discussionboard_post\", 'String'>\n    readonly created_at: FieldRef<\"discussionboard_post\", 'DateTime'>\n    readonly updated_at: FieldRef<\"discussionboard_post\", 'DateTime'>\n    readonly deleted_at: FieldRef<\"discussionboard_post\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_post findUnique\n   */\n  export type discussionboard_postFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post\n     */\n    select?: discussionboard_postSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post\n     */\n    omit?: discussionboard_postOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_postInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_post to fetch.\n     */\n    where: discussionboard_postWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_post findUniqueOrThrow\n   */\n  export type discussionboard_postFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post\n     */\n    select?: discussionboard_postSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post\n     */\n    omit?: discussionboard_postOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_postInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_post to fetch.\n     */\n    where: discussionboard_postWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_post findFirst\n   */\n  export type discussionboard_postFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post\n     */\n    select?: discussionboard_postSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post\n     */\n    omit?: discussionboard_postOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_postInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_post to fetch.\n     */\n    where?: discussionboard_postWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_posts to fetch.\n     */\n    orderBy?: discussionboard_postOrderByWithRelationInput | discussionboard_postOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_posts.\n     */\n    cursor?: discussionboard_postWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_posts from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_posts.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_posts.\n     */\n    distinct?: Discussionboard_postScalarFieldEnum | Discussionboard_postScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_post findFirstOrThrow\n   */\n  export type discussionboard_postFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post\n     */\n    select?: discussionboard_postSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post\n     */\n    omit?: discussionboard_postOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_postInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_post to fetch.\n     */\n    where?: discussionboard_postWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_posts to fetch.\n     */\n    orderBy?: discussionboard_postOrderByWithRelationInput | discussionboard_postOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_posts.\n     */\n    cursor?: discussionboard_postWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_posts from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_posts.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_posts.\n     */\n    distinct?: Discussionboard_postScalarFieldEnum | Discussionboard_postScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_post findMany\n   */\n  export type discussionboard_postFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post\n     */\n    select?: discussionboard_postSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post\n     */\n    omit?: discussionboard_postOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_postInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_posts to fetch.\n     */\n    where?: discussionboard_postWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_posts to fetch.\n     */\n    orderBy?: discussionboard_postOrderByWithRelationInput | discussionboard_postOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_posts.\n     */\n    cursor?: discussionboard_postWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_posts from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_posts.\n     */\n    skip?: number\n    distinct?: Discussionboard_postScalarFieldEnum | Discussionboard_postScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_post create\n   */\n  export type discussionboard_postCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post\n     */\n    select?: discussionboard_postSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post\n     */\n    omit?: discussionboard_postOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_postInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_post.\n     */\n    data: XOR<discussionboard_postCreateInput, discussionboard_postUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_post createMany\n   */\n  export type discussionboard_postCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_posts.\n     */\n    data: discussionboard_postCreateManyInput | discussionboard_postCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_post createManyAndReturn\n   */\n  export type discussionboard_postCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post\n     */\n    select?: discussionboard_postSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post\n     */\n    omit?: discussionboard_postOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_posts.\n     */\n    data: discussionboard_postCreateManyInput | discussionboard_postCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_postIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_post update\n   */\n  export type discussionboard_postUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post\n     */\n    select?: discussionboard_postSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post\n     */\n    omit?: discussionboard_postOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_postInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_post.\n     */\n    data: XOR<discussionboard_postUpdateInput, discussionboard_postUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_post to update.\n     */\n    where: discussionboard_postWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_post updateMany\n   */\n  export type discussionboard_postUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_posts.\n     */\n    data: XOR<discussionboard_postUpdateManyMutationInput, discussionboard_postUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_posts to update\n     */\n    where?: discussionboard_postWhereInput\n    /**\n     * Limit how many discussionboard_posts to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_post updateManyAndReturn\n   */\n  export type discussionboard_postUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post\n     */\n    select?: discussionboard_postSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post\n     */\n    omit?: discussionboard_postOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_posts.\n     */\n    data: XOR<discussionboard_postUpdateManyMutationInput, discussionboard_postUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_posts to update\n     */\n    where?: discussionboard_postWhereInput\n    /**\n     * Limit how many discussionboard_posts to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_postIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_post upsert\n   */\n  export type discussionboard_postUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post\n     */\n    select?: discussionboard_postSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post\n     */\n    omit?: discussionboard_postOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_postInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_post to update in case it exists.\n     */\n    where: discussionboard_postWhereUniqueInput\n    /**\n     * In case the discussionboard_post found by the `where` argument doesn't exist, create a new discussionboard_post with this data.\n     */\n    create: XOR<discussionboard_postCreateInput, discussionboard_postUncheckedCreateInput>\n    /**\n     * In case the discussionboard_post was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_postUpdateInput, discussionboard_postUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_post delete\n   */\n  export type discussionboard_postDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post\n     */\n    select?: discussionboard_postSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post\n     */\n    omit?: discussionboard_postOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_postInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_post to delete.\n     */\n    where: discussionboard_postWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_post deleteMany\n   */\n  export type discussionboard_postDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_posts to delete\n     */\n    where?: discussionboard_postWhereInput\n    /**\n     * Limit how many discussionboard_posts to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_post.discussionboard_post_attachment\n   */\n  export type discussionboard_post$discussionboard_post_attachmentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_attachment\n     */\n    select?: discussionboard_post_attachmentSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_attachment\n     */\n    omit?: discussionboard_post_attachmentOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_attachmentInclude<ExtArgs> | null\n    where?: discussionboard_post_attachmentWhereInput\n    orderBy?: discussionboard_post_attachmentOrderByWithRelationInput | discussionboard_post_attachmentOrderByWithRelationInput[]\n    cursor?: discussionboard_post_attachmentWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_post_attachmentScalarFieldEnum | Discussionboard_post_attachmentScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_post.discussionboard_comments\n   */\n  export type discussionboard_post$discussionboard_commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comments\n     */\n    select?: discussionboard_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comments\n     */\n    omit?: discussionboard_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_commentsInclude<ExtArgs> | null\n    where?: discussionboard_commentsWhereInput\n    orderBy?: discussionboard_commentsOrderByWithRelationInput | discussionboard_commentsOrderByWithRelationInput[]\n    cursor?: discussionboard_commentsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_commentsScalarFieldEnum | Discussionboard_commentsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_post.discussionboard_likes\n   */\n  export type discussionboard_post$discussionboard_likesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_likes\n     */\n    select?: discussionboard_likesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_likes\n     */\n    omit?: discussionboard_likesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_likesInclude<ExtArgs> | null\n    where?: discussionboard_likesWhereInput\n    orderBy?: discussionboard_likesOrderByWithRelationInput | discussionboard_likesOrderByWithRelationInput[]\n    cursor?: discussionboard_likesWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_likesScalarFieldEnum | Discussionboard_likesScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_post.discussionboard_reports\n   */\n  export type discussionboard_post$discussionboard_reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_reports\n     */\n    select?: discussionboard_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_reports\n     */\n    omit?: discussionboard_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_reportsInclude<ExtArgs> | null\n    where?: discussionboard_reportsWhereInput\n    orderBy?: discussionboard_reportsOrderByWithRelationInput | discussionboard_reportsOrderByWithRelationInput[]\n    cursor?: discussionboard_reportsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_reportsScalarFieldEnum | Discussionboard_reportsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_post.discussionboard_moderation_action\n   */\n  export type discussionboard_post$discussionboard_moderation_actionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderation_action\n     */\n    select?: discussionboard_moderation_actionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderation_action\n     */\n    omit?: discussionboard_moderation_actionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderation_actionInclude<ExtArgs> | null\n    where?: discussionboard_moderation_actionWhereInput\n    orderBy?: discussionboard_moderation_actionOrderByWithRelationInput | discussionboard_moderation_actionOrderByWithRelationInput[]\n    cursor?: discussionboard_moderation_actionWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_moderation_actionScalarFieldEnum | Discussionboard_moderation_actionScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_post.discussionboard_report_review\n   */\n  export type discussionboard_post$discussionboard_report_reviewArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_report_review\n     */\n    select?: discussionboard_report_reviewSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_report_review\n     */\n    omit?: discussionboard_report_reviewOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_report_reviewInclude<ExtArgs> | null\n    where?: discussionboard_report_reviewWhereInput\n    orderBy?: discussionboard_report_reviewOrderByWithRelationInput | discussionboard_report_reviewOrderByWithRelationInput[]\n    cursor?: discussionboard_report_reviewWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_report_reviewScalarFieldEnum | Discussionboard_report_reviewScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_post.discussionboard_warning\n   */\n  export type discussionboard_post$discussionboard_warningArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_warning\n     */\n    select?: discussionboard_warningSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_warning\n     */\n    omit?: discussionboard_warningOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_warningInclude<ExtArgs> | null\n    where?: discussionboard_warningWhereInput\n    orderBy?: discussionboard_warningOrderByWithRelationInput | discussionboard_warningOrderByWithRelationInput[]\n    cursor?: discussionboard_warningWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_warningScalarFieldEnum | Discussionboard_warningScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_post.discussionboard_notification\n   */\n  export type discussionboard_post$discussionboard_notificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification\n     */\n    select?: discussionboard_notificationSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification\n     */\n    omit?: discussionboard_notificationOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notificationInclude<ExtArgs> | null\n    where?: discussionboard_notificationWhereInput\n    orderBy?: discussionboard_notificationOrderByWithRelationInput | discussionboard_notificationOrderByWithRelationInput[]\n    cursor?: discussionboard_notificationWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_notificationScalarFieldEnum | Discussionboard_notificationScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_post without action\n   */\n  export type discussionboard_postDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post\n     */\n    select?: discussionboard_postSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post\n     */\n    omit?: discussionboard_postOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_postInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_post_category\n   */\n\n  export type AggregateDiscussionboard_post_category = {\n    _count: Discussionboard_post_categoryCountAggregateOutputType | null\n    _min: Discussionboard_post_categoryMinAggregateOutputType | null\n    _max: Discussionboard_post_categoryMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_post_categoryMinAggregateOutputType = {\n    id: string | null\n    name: string | null\n    description: string | null\n  }\n\n  export type Discussionboard_post_categoryMaxAggregateOutputType = {\n    id: string | null\n    name: string | null\n    description: string | null\n  }\n\n  export type Discussionboard_post_categoryCountAggregateOutputType = {\n    id: number\n    name: number\n    description: number\n    _all: number\n  }\n\n\n  export type Discussionboard_post_categoryMinAggregateInputType = {\n    id?: true\n    name?: true\n    description?: true\n  }\n\n  export type Discussionboard_post_categoryMaxAggregateInputType = {\n    id?: true\n    name?: true\n    description?: true\n  }\n\n  export type Discussionboard_post_categoryCountAggregateInputType = {\n    id?: true\n    name?: true\n    description?: true\n    _all?: true\n  }\n\n  export type Discussionboard_post_categoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_post_category to aggregate.\n     */\n    where?: discussionboard_post_categoryWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_post_categories to fetch.\n     */\n    orderBy?: discussionboard_post_categoryOrderByWithRelationInput | discussionboard_post_categoryOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_post_categoryWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_post_categories from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_post_categories.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_post_categories\n    **/\n    _count?: true | Discussionboard_post_categoryCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_post_categoryMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_post_categoryMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_post_categoryAggregateType<T extends Discussionboard_post_categoryAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_post_category]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_post_category[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_post_category[P]>\n  }\n\n\n\n\n  export type discussionboard_post_categoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_post_categoryWhereInput\n    orderBy?: discussionboard_post_categoryOrderByWithAggregationInput | discussionboard_post_categoryOrderByWithAggregationInput[]\n    by: Discussionboard_post_categoryScalarFieldEnum[] | Discussionboard_post_categoryScalarFieldEnum\n    having?: discussionboard_post_categoryScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_post_categoryCountAggregateInputType | true\n    _min?: Discussionboard_post_categoryMinAggregateInputType\n    _max?: Discussionboard_post_categoryMaxAggregateInputType\n  }\n\n  export type Discussionboard_post_categoryGroupByOutputType = {\n    id: string\n    name: string\n    description: string | null\n    _count: Discussionboard_post_categoryCountAggregateOutputType | null\n    _min: Discussionboard_post_categoryMinAggregateOutputType | null\n    _max: Discussionboard_post_categoryMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_post_categoryGroupByPayload<T extends discussionboard_post_categoryGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_post_categoryGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_post_categoryGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_post_categoryGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_post_categoryGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_post_categorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    name?: boolean\n    description?: boolean\n    discussionboard_post?: boolean | discussionboard_post_category$discussionboard_postArgs<ExtArgs>\n    _count?: boolean | Discussionboard_post_categoryCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_post_category\"]>\n\n  export type discussionboard_post_categorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    name?: boolean\n    description?: boolean\n  }, ExtArgs[\"result\"][\"discussionboard_post_category\"]>\n\n  export type discussionboard_post_categorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    name?: boolean\n    description?: boolean\n  }, ExtArgs[\"result\"][\"discussionboard_post_category\"]>\n\n  export type discussionboard_post_categorySelectScalar = {\n    id?: boolean\n    name?: boolean\n    description?: boolean\n  }\n\n  export type discussionboard_post_categoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"name\" | \"description\", ExtArgs[\"result\"][\"discussionboard_post_category\"]>\n  export type discussionboard_post_categoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_post?: boolean | discussionboard_post_category$discussionboard_postArgs<ExtArgs>\n    _count?: boolean | Discussionboard_post_categoryCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_post_categoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}\n  export type discussionboard_post_categoryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}\n\n  export type $discussionboard_post_categoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_post_category\"\n    objects: {\n      discussionboard_post: Prisma.$discussionboard_postPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * [Primary Key] - Uniquely identifies category; normalization ensures only atomic references used.\n       */\n      id: string\n      /**\n       * [Category Name] - Per Section 3.2; e.g., 'Economics'. Used for filters/views. Unique and non-null.\n       */\n      name: string\n      /**\n       * [Category Description] - Extended human-readable info for admin/member UIs. Optional, normalized.\n       */\n      description: string | null\n    }, ExtArgs[\"result\"][\"discussionboard_post_category\"]>\n    composites: {}\n  }\n\n  type discussionboard_post_categoryGetPayload<S extends boolean | null | undefined | discussionboard_post_categoryDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_post_categoryPayload, S>\n\n  type discussionboard_post_categoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_post_categoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_post_categoryCountAggregateInputType | true\n    }\n\n  export interface discussionboard_post_categoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_post_category'], meta: { name: 'discussionboard_post_category' } }\n    /**\n     * Find zero or one Discussionboard_post_category that matches the filter.\n     * @param {discussionboard_post_categoryFindUniqueArgs} args - Arguments to find a Discussionboard_post_category\n     * @example\n     * // Get one Discussionboard_post_category\n     * const discussionboard_post_category = await prisma.discussionboard_post_category.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_post_categoryFindUniqueArgs>(args: SelectSubset<T, discussionboard_post_categoryFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_post_categoryClient<$Result.GetResult<Prisma.$discussionboard_post_categoryPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_post_category that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_post_categoryFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_post_category\n     * @example\n     * // Get one Discussionboard_post_category\n     * const discussionboard_post_category = await prisma.discussionboard_post_category.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_post_categoryFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_post_categoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_post_categoryClient<$Result.GetResult<Prisma.$discussionboard_post_categoryPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_post_category that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_post_categoryFindFirstArgs} args - Arguments to find a Discussionboard_post_category\n     * @example\n     * // Get one Discussionboard_post_category\n     * const discussionboard_post_category = await prisma.discussionboard_post_category.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_post_categoryFindFirstArgs>(args?: SelectSubset<T, discussionboard_post_categoryFindFirstArgs<ExtArgs>>): Prisma__discussionboard_post_categoryClient<$Result.GetResult<Prisma.$discussionboard_post_categoryPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_post_category that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_post_categoryFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_post_category\n     * @example\n     * // Get one Discussionboard_post_category\n     * const discussionboard_post_category = await prisma.discussionboard_post_category.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_post_categoryFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_post_categoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_post_categoryClient<$Result.GetResult<Prisma.$discussionboard_post_categoryPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_post_categories that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_post_categoryFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_post_categories\n     * const discussionboard_post_categories = await prisma.discussionboard_post_category.findMany()\n     * \n     * // Get first 10 Discussionboard_post_categories\n     * const discussionboard_post_categories = await prisma.discussionboard_post_category.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_post_categoryWithIdOnly = await prisma.discussionboard_post_category.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_post_categoryFindManyArgs>(args?: SelectSubset<T, discussionboard_post_categoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_post_categoryPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_post_category.\n     * @param {discussionboard_post_categoryCreateArgs} args - Arguments to create a Discussionboard_post_category.\n     * @example\n     * // Create one Discussionboard_post_category\n     * const Discussionboard_post_category = await prisma.discussionboard_post_category.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_post_category\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_post_categoryCreateArgs>(args: SelectSubset<T, discussionboard_post_categoryCreateArgs<ExtArgs>>): Prisma__discussionboard_post_categoryClient<$Result.GetResult<Prisma.$discussionboard_post_categoryPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_post_categories.\n     * @param {discussionboard_post_categoryCreateManyArgs} args - Arguments to create many Discussionboard_post_categories.\n     * @example\n     * // Create many Discussionboard_post_categories\n     * const discussionboard_post_category = await prisma.discussionboard_post_category.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_post_categoryCreateManyArgs>(args?: SelectSubset<T, discussionboard_post_categoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_post_categories and returns the data saved in the database.\n     * @param {discussionboard_post_categoryCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_post_categories.\n     * @example\n     * // Create many Discussionboard_post_categories\n     * const discussionboard_post_category = await prisma.discussionboard_post_category.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_post_categories and only return the `id`\n     * const discussionboard_post_categoryWithIdOnly = await prisma.discussionboard_post_category.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_post_categoryCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_post_categoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_post_categoryPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_post_category.\n     * @param {discussionboard_post_categoryDeleteArgs} args - Arguments to delete one Discussionboard_post_category.\n     * @example\n     * // Delete one Discussionboard_post_category\n     * const Discussionboard_post_category = await prisma.discussionboard_post_category.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_post_category\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_post_categoryDeleteArgs>(args: SelectSubset<T, discussionboard_post_categoryDeleteArgs<ExtArgs>>): Prisma__discussionboard_post_categoryClient<$Result.GetResult<Prisma.$discussionboard_post_categoryPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_post_category.\n     * @param {discussionboard_post_categoryUpdateArgs} args - Arguments to update one Discussionboard_post_category.\n     * @example\n     * // Update one Discussionboard_post_category\n     * const discussionboard_post_category = await prisma.discussionboard_post_category.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_post_categoryUpdateArgs>(args: SelectSubset<T, discussionboard_post_categoryUpdateArgs<ExtArgs>>): Prisma__discussionboard_post_categoryClient<$Result.GetResult<Prisma.$discussionboard_post_categoryPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_post_categories.\n     * @param {discussionboard_post_categoryDeleteManyArgs} args - Arguments to filter Discussionboard_post_categories to delete.\n     * @example\n     * // Delete a few Discussionboard_post_categories\n     * const { count } = await prisma.discussionboard_post_category.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_post_categoryDeleteManyArgs>(args?: SelectSubset<T, discussionboard_post_categoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_post_categories.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_post_categoryUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_post_categories\n     * const discussionboard_post_category = await prisma.discussionboard_post_category.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_post_categoryUpdateManyArgs>(args: SelectSubset<T, discussionboard_post_categoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_post_categories and returns the data updated in the database.\n     * @param {discussionboard_post_categoryUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_post_categories.\n     * @example\n     * // Update many Discussionboard_post_categories\n     * const discussionboard_post_category = await prisma.discussionboard_post_category.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_post_categories and only return the `id`\n     * const discussionboard_post_categoryWithIdOnly = await prisma.discussionboard_post_category.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_post_categoryUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_post_categoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_post_categoryPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_post_category.\n     * @param {discussionboard_post_categoryUpsertArgs} args - Arguments to update or create a Discussionboard_post_category.\n     * @example\n     * // Update or create a Discussionboard_post_category\n     * const discussionboard_post_category = await prisma.discussionboard_post_category.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_post_category\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_post_category we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_post_categoryUpsertArgs>(args: SelectSubset<T, discussionboard_post_categoryUpsertArgs<ExtArgs>>): Prisma__discussionboard_post_categoryClient<$Result.GetResult<Prisma.$discussionboard_post_categoryPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_post_categories.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_post_categoryCountArgs} args - Arguments to filter Discussionboard_post_categories to count.\n     * @example\n     * // Count the number of Discussionboard_post_categories\n     * const count = await prisma.discussionboard_post_category.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_post_categories we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_post_categoryCountArgs>(\n      args?: Subset<T, discussionboard_post_categoryCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_post_categoryCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_post_category.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_post_categoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_post_categoryAggregateArgs>(args: Subset<T, Discussionboard_post_categoryAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_post_categoryAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_post_category.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_post_categoryGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_post_categoryGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_post_categoryGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_post_categoryGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_post_categoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_post_categoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_post_category model\n   */\n  readonly fields: discussionboard_post_categoryFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_post_category.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_post_categoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    discussionboard_post<T extends discussionboard_post_category$discussionboard_postArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_post_category$discussionboard_postArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_postPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_post_category model\n   */\n  interface discussionboard_post_categoryFieldRefs {\n    readonly id: FieldRef<\"discussionboard_post_category\", 'String'>\n    readonly name: FieldRef<\"discussionboard_post_category\", 'String'>\n    readonly description: FieldRef<\"discussionboard_post_category\", 'String'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_post_category findUnique\n   */\n  export type discussionboard_post_categoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_category\n     */\n    select?: discussionboard_post_categorySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_category\n     */\n    omit?: discussionboard_post_categoryOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_categoryInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_post_category to fetch.\n     */\n    where: discussionboard_post_categoryWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_post_category findUniqueOrThrow\n   */\n  export type discussionboard_post_categoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_category\n     */\n    select?: discussionboard_post_categorySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_category\n     */\n    omit?: discussionboard_post_categoryOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_categoryInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_post_category to fetch.\n     */\n    where: discussionboard_post_categoryWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_post_category findFirst\n   */\n  export type discussionboard_post_categoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_category\n     */\n    select?: discussionboard_post_categorySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_category\n     */\n    omit?: discussionboard_post_categoryOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_categoryInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_post_category to fetch.\n     */\n    where?: discussionboard_post_categoryWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_post_categories to fetch.\n     */\n    orderBy?: discussionboard_post_categoryOrderByWithRelationInput | discussionboard_post_categoryOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_post_categories.\n     */\n    cursor?: discussionboard_post_categoryWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_post_categories from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_post_categories.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_post_categories.\n     */\n    distinct?: Discussionboard_post_categoryScalarFieldEnum | Discussionboard_post_categoryScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_post_category findFirstOrThrow\n   */\n  export type discussionboard_post_categoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_category\n     */\n    select?: discussionboard_post_categorySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_category\n     */\n    omit?: discussionboard_post_categoryOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_categoryInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_post_category to fetch.\n     */\n    where?: discussionboard_post_categoryWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_post_categories to fetch.\n     */\n    orderBy?: discussionboard_post_categoryOrderByWithRelationInput | discussionboard_post_categoryOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_post_categories.\n     */\n    cursor?: discussionboard_post_categoryWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_post_categories from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_post_categories.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_post_categories.\n     */\n    distinct?: Discussionboard_post_categoryScalarFieldEnum | Discussionboard_post_categoryScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_post_category findMany\n   */\n  export type discussionboard_post_categoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_category\n     */\n    select?: discussionboard_post_categorySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_category\n     */\n    omit?: discussionboard_post_categoryOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_categoryInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_post_categories to fetch.\n     */\n    where?: discussionboard_post_categoryWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_post_categories to fetch.\n     */\n    orderBy?: discussionboard_post_categoryOrderByWithRelationInput | discussionboard_post_categoryOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_post_categories.\n     */\n    cursor?: discussionboard_post_categoryWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_post_categories from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_post_categories.\n     */\n    skip?: number\n    distinct?: Discussionboard_post_categoryScalarFieldEnum | Discussionboard_post_categoryScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_post_category create\n   */\n  export type discussionboard_post_categoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_category\n     */\n    select?: discussionboard_post_categorySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_category\n     */\n    omit?: discussionboard_post_categoryOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_categoryInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_post_category.\n     */\n    data: XOR<discussionboard_post_categoryCreateInput, discussionboard_post_categoryUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_post_category createMany\n   */\n  export type discussionboard_post_categoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_post_categories.\n     */\n    data: discussionboard_post_categoryCreateManyInput | discussionboard_post_categoryCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_post_category createManyAndReturn\n   */\n  export type discussionboard_post_categoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_category\n     */\n    select?: discussionboard_post_categorySelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_category\n     */\n    omit?: discussionboard_post_categoryOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_post_categories.\n     */\n    data: discussionboard_post_categoryCreateManyInput | discussionboard_post_categoryCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_post_category update\n   */\n  export type discussionboard_post_categoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_category\n     */\n    select?: discussionboard_post_categorySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_category\n     */\n    omit?: discussionboard_post_categoryOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_categoryInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_post_category.\n     */\n    data: XOR<discussionboard_post_categoryUpdateInput, discussionboard_post_categoryUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_post_category to update.\n     */\n    where: discussionboard_post_categoryWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_post_category updateMany\n   */\n  export type discussionboard_post_categoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_post_categories.\n     */\n    data: XOR<discussionboard_post_categoryUpdateManyMutationInput, discussionboard_post_categoryUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_post_categories to update\n     */\n    where?: discussionboard_post_categoryWhereInput\n    /**\n     * Limit how many discussionboard_post_categories to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_post_category updateManyAndReturn\n   */\n  export type discussionboard_post_categoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_category\n     */\n    select?: discussionboard_post_categorySelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_category\n     */\n    omit?: discussionboard_post_categoryOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_post_categories.\n     */\n    data: XOR<discussionboard_post_categoryUpdateManyMutationInput, discussionboard_post_categoryUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_post_categories to update\n     */\n    where?: discussionboard_post_categoryWhereInput\n    /**\n     * Limit how many discussionboard_post_categories to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_post_category upsert\n   */\n  export type discussionboard_post_categoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_category\n     */\n    select?: discussionboard_post_categorySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_category\n     */\n    omit?: discussionboard_post_categoryOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_categoryInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_post_category to update in case it exists.\n     */\n    where: discussionboard_post_categoryWhereUniqueInput\n    /**\n     * In case the discussionboard_post_category found by the `where` argument doesn't exist, create a new discussionboard_post_category with this data.\n     */\n    create: XOR<discussionboard_post_categoryCreateInput, discussionboard_post_categoryUncheckedCreateInput>\n    /**\n     * In case the discussionboard_post_category was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_post_categoryUpdateInput, discussionboard_post_categoryUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_post_category delete\n   */\n  export type discussionboard_post_categoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_category\n     */\n    select?: discussionboard_post_categorySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_category\n     */\n    omit?: discussionboard_post_categoryOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_categoryInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_post_category to delete.\n     */\n    where: discussionboard_post_categoryWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_post_category deleteMany\n   */\n  export type discussionboard_post_categoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_post_categories to delete\n     */\n    where?: discussionboard_post_categoryWhereInput\n    /**\n     * Limit how many discussionboard_post_categories to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_post_category.discussionboard_post\n   */\n  export type discussionboard_post_category$discussionboard_postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post\n     */\n    select?: discussionboard_postSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post\n     */\n    omit?: discussionboard_postOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_postInclude<ExtArgs> | null\n    where?: discussionboard_postWhereInput\n    orderBy?: discussionboard_postOrderByWithRelationInput | discussionboard_postOrderByWithRelationInput[]\n    cursor?: discussionboard_postWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_postScalarFieldEnum | Discussionboard_postScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_post_category without action\n   */\n  export type discussionboard_post_categoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_category\n     */\n    select?: discussionboard_post_categorySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_category\n     */\n    omit?: discussionboard_post_categoryOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_categoryInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_post_tag\n   */\n\n  export type AggregateDiscussionboard_post_tag = {\n    _count: Discussionboard_post_tagCountAggregateOutputType | null\n    _min: Discussionboard_post_tagMinAggregateOutputType | null\n    _max: Discussionboard_post_tagMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_post_tagMinAggregateOutputType = {\n    id: string | null\n    name: string | null\n  }\n\n  export type Discussionboard_post_tagMaxAggregateOutputType = {\n    id: string | null\n    name: string | null\n  }\n\n  export type Discussionboard_post_tagCountAggregateOutputType = {\n    id: number\n    name: number\n    _all: number\n  }\n\n\n  export type Discussionboard_post_tagMinAggregateInputType = {\n    id?: true\n    name?: true\n  }\n\n  export type Discussionboard_post_tagMaxAggregateInputType = {\n    id?: true\n    name?: true\n  }\n\n  export type Discussionboard_post_tagCountAggregateInputType = {\n    id?: true\n    name?: true\n    _all?: true\n  }\n\n  export type Discussionboard_post_tagAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_post_tag to aggregate.\n     */\n    where?: discussionboard_post_tagWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_post_tags to fetch.\n     */\n    orderBy?: discussionboard_post_tagOrderByWithRelationInput | discussionboard_post_tagOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_post_tagWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_post_tags from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_post_tags.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_post_tags\n    **/\n    _count?: true | Discussionboard_post_tagCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_post_tagMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_post_tagMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_post_tagAggregateType<T extends Discussionboard_post_tagAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_post_tag]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_post_tag[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_post_tag[P]>\n  }\n\n\n\n\n  export type discussionboard_post_tagGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_post_tagWhereInput\n    orderBy?: discussionboard_post_tagOrderByWithAggregationInput | discussionboard_post_tagOrderByWithAggregationInput[]\n    by: Discussionboard_post_tagScalarFieldEnum[] | Discussionboard_post_tagScalarFieldEnum\n    having?: discussionboard_post_tagScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_post_tagCountAggregateInputType | true\n    _min?: Discussionboard_post_tagMinAggregateInputType\n    _max?: Discussionboard_post_tagMaxAggregateInputType\n  }\n\n  export type Discussionboard_post_tagGroupByOutputType = {\n    id: string\n    name: string\n    _count: Discussionboard_post_tagCountAggregateOutputType | null\n    _min: Discussionboard_post_tagMinAggregateOutputType | null\n    _max: Discussionboard_post_tagMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_post_tagGroupByPayload<T extends discussionboard_post_tagGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_post_tagGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_post_tagGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_post_tagGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_post_tagGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_post_tagSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    name?: boolean\n  }, ExtArgs[\"result\"][\"discussionboard_post_tag\"]>\n\n  export type discussionboard_post_tagSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    name?: boolean\n  }, ExtArgs[\"result\"][\"discussionboard_post_tag\"]>\n\n  export type discussionboard_post_tagSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    name?: boolean\n  }, ExtArgs[\"result\"][\"discussionboard_post_tag\"]>\n\n  export type discussionboard_post_tagSelectScalar = {\n    id?: boolean\n    name?: boolean\n  }\n\n  export type discussionboard_post_tagOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"name\", ExtArgs[\"result\"][\"discussionboard_post_tag\"]>\n\n  export type $discussionboard_post_tagPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_post_tag\"\n    objects: {}\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * [Primary Key] - Unique atomic tag identity.\n       */\n      id: string\n      /**\n       * [Tag Name] - Required label, e.g. 'inflation'. Uniqueness enforced; normalized/atomic.\n       */\n      name: string\n    }, ExtArgs[\"result\"][\"discussionboard_post_tag\"]>\n    composites: {}\n  }\n\n  type discussionboard_post_tagGetPayload<S extends boolean | null | undefined | discussionboard_post_tagDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_post_tagPayload, S>\n\n  type discussionboard_post_tagCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_post_tagFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_post_tagCountAggregateInputType | true\n    }\n\n  export interface discussionboard_post_tagDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_post_tag'], meta: { name: 'discussionboard_post_tag' } }\n    /**\n     * Find zero or one Discussionboard_post_tag that matches the filter.\n     * @param {discussionboard_post_tagFindUniqueArgs} args - Arguments to find a Discussionboard_post_tag\n     * @example\n     * // Get one Discussionboard_post_tag\n     * const discussionboard_post_tag = await prisma.discussionboard_post_tag.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_post_tagFindUniqueArgs>(args: SelectSubset<T, discussionboard_post_tagFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_post_tagClient<$Result.GetResult<Prisma.$discussionboard_post_tagPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_post_tag that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_post_tagFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_post_tag\n     * @example\n     * // Get one Discussionboard_post_tag\n     * const discussionboard_post_tag = await prisma.discussionboard_post_tag.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_post_tagFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_post_tagFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_post_tagClient<$Result.GetResult<Prisma.$discussionboard_post_tagPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_post_tag that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_post_tagFindFirstArgs} args - Arguments to find a Discussionboard_post_tag\n     * @example\n     * // Get one Discussionboard_post_tag\n     * const discussionboard_post_tag = await prisma.discussionboard_post_tag.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_post_tagFindFirstArgs>(args?: SelectSubset<T, discussionboard_post_tagFindFirstArgs<ExtArgs>>): Prisma__discussionboard_post_tagClient<$Result.GetResult<Prisma.$discussionboard_post_tagPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_post_tag that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_post_tagFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_post_tag\n     * @example\n     * // Get one Discussionboard_post_tag\n     * const discussionboard_post_tag = await prisma.discussionboard_post_tag.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_post_tagFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_post_tagFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_post_tagClient<$Result.GetResult<Prisma.$discussionboard_post_tagPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_post_tags that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_post_tagFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_post_tags\n     * const discussionboard_post_tags = await prisma.discussionboard_post_tag.findMany()\n     * \n     * // Get first 10 Discussionboard_post_tags\n     * const discussionboard_post_tags = await prisma.discussionboard_post_tag.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_post_tagWithIdOnly = await prisma.discussionboard_post_tag.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_post_tagFindManyArgs>(args?: SelectSubset<T, discussionboard_post_tagFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_post_tagPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_post_tag.\n     * @param {discussionboard_post_tagCreateArgs} args - Arguments to create a Discussionboard_post_tag.\n     * @example\n     * // Create one Discussionboard_post_tag\n     * const Discussionboard_post_tag = await prisma.discussionboard_post_tag.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_post_tag\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_post_tagCreateArgs>(args: SelectSubset<T, discussionboard_post_tagCreateArgs<ExtArgs>>): Prisma__discussionboard_post_tagClient<$Result.GetResult<Prisma.$discussionboard_post_tagPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_post_tags.\n     * @param {discussionboard_post_tagCreateManyArgs} args - Arguments to create many Discussionboard_post_tags.\n     * @example\n     * // Create many Discussionboard_post_tags\n     * const discussionboard_post_tag = await prisma.discussionboard_post_tag.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_post_tagCreateManyArgs>(args?: SelectSubset<T, discussionboard_post_tagCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_post_tags and returns the data saved in the database.\n     * @param {discussionboard_post_tagCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_post_tags.\n     * @example\n     * // Create many Discussionboard_post_tags\n     * const discussionboard_post_tag = await prisma.discussionboard_post_tag.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_post_tags and only return the `id`\n     * const discussionboard_post_tagWithIdOnly = await prisma.discussionboard_post_tag.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_post_tagCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_post_tagCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_post_tagPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_post_tag.\n     * @param {discussionboard_post_tagDeleteArgs} args - Arguments to delete one Discussionboard_post_tag.\n     * @example\n     * // Delete one Discussionboard_post_tag\n     * const Discussionboard_post_tag = await prisma.discussionboard_post_tag.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_post_tag\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_post_tagDeleteArgs>(args: SelectSubset<T, discussionboard_post_tagDeleteArgs<ExtArgs>>): Prisma__discussionboard_post_tagClient<$Result.GetResult<Prisma.$discussionboard_post_tagPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_post_tag.\n     * @param {discussionboard_post_tagUpdateArgs} args - Arguments to update one Discussionboard_post_tag.\n     * @example\n     * // Update one Discussionboard_post_tag\n     * const discussionboard_post_tag = await prisma.discussionboard_post_tag.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_post_tagUpdateArgs>(args: SelectSubset<T, discussionboard_post_tagUpdateArgs<ExtArgs>>): Prisma__discussionboard_post_tagClient<$Result.GetResult<Prisma.$discussionboard_post_tagPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_post_tags.\n     * @param {discussionboard_post_tagDeleteManyArgs} args - Arguments to filter Discussionboard_post_tags to delete.\n     * @example\n     * // Delete a few Discussionboard_post_tags\n     * const { count } = await prisma.discussionboard_post_tag.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_post_tagDeleteManyArgs>(args?: SelectSubset<T, discussionboard_post_tagDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_post_tags.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_post_tagUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_post_tags\n     * const discussionboard_post_tag = await prisma.discussionboard_post_tag.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_post_tagUpdateManyArgs>(args: SelectSubset<T, discussionboard_post_tagUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_post_tags and returns the data updated in the database.\n     * @param {discussionboard_post_tagUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_post_tags.\n     * @example\n     * // Update many Discussionboard_post_tags\n     * const discussionboard_post_tag = await prisma.discussionboard_post_tag.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_post_tags and only return the `id`\n     * const discussionboard_post_tagWithIdOnly = await prisma.discussionboard_post_tag.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_post_tagUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_post_tagUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_post_tagPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_post_tag.\n     * @param {discussionboard_post_tagUpsertArgs} args - Arguments to update or create a Discussionboard_post_tag.\n     * @example\n     * // Update or create a Discussionboard_post_tag\n     * const discussionboard_post_tag = await prisma.discussionboard_post_tag.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_post_tag\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_post_tag we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_post_tagUpsertArgs>(args: SelectSubset<T, discussionboard_post_tagUpsertArgs<ExtArgs>>): Prisma__discussionboard_post_tagClient<$Result.GetResult<Prisma.$discussionboard_post_tagPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_post_tags.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_post_tagCountArgs} args - Arguments to filter Discussionboard_post_tags to count.\n     * @example\n     * // Count the number of Discussionboard_post_tags\n     * const count = await prisma.discussionboard_post_tag.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_post_tags we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_post_tagCountArgs>(\n      args?: Subset<T, discussionboard_post_tagCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_post_tagCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_post_tag.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_post_tagAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_post_tagAggregateArgs>(args: Subset<T, Discussionboard_post_tagAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_post_tagAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_post_tag.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_post_tagGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_post_tagGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_post_tagGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_post_tagGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_post_tagGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_post_tagGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_post_tag model\n   */\n  readonly fields: discussionboard_post_tagFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_post_tag.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_post_tagClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_post_tag model\n   */\n  interface discussionboard_post_tagFieldRefs {\n    readonly id: FieldRef<\"discussionboard_post_tag\", 'String'>\n    readonly name: FieldRef<\"discussionboard_post_tag\", 'String'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_post_tag findUnique\n   */\n  export type discussionboard_post_tagFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_tag\n     */\n    select?: discussionboard_post_tagSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_tag\n     */\n    omit?: discussionboard_post_tagOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_post_tag to fetch.\n     */\n    where: discussionboard_post_tagWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_post_tag findUniqueOrThrow\n   */\n  export type discussionboard_post_tagFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_tag\n     */\n    select?: discussionboard_post_tagSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_tag\n     */\n    omit?: discussionboard_post_tagOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_post_tag to fetch.\n     */\n    where: discussionboard_post_tagWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_post_tag findFirst\n   */\n  export type discussionboard_post_tagFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_tag\n     */\n    select?: discussionboard_post_tagSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_tag\n     */\n    omit?: discussionboard_post_tagOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_post_tag to fetch.\n     */\n    where?: discussionboard_post_tagWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_post_tags to fetch.\n     */\n    orderBy?: discussionboard_post_tagOrderByWithRelationInput | discussionboard_post_tagOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_post_tags.\n     */\n    cursor?: discussionboard_post_tagWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_post_tags from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_post_tags.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_post_tags.\n     */\n    distinct?: Discussionboard_post_tagScalarFieldEnum | Discussionboard_post_tagScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_post_tag findFirstOrThrow\n   */\n  export type discussionboard_post_tagFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_tag\n     */\n    select?: discussionboard_post_tagSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_tag\n     */\n    omit?: discussionboard_post_tagOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_post_tag to fetch.\n     */\n    where?: discussionboard_post_tagWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_post_tags to fetch.\n     */\n    orderBy?: discussionboard_post_tagOrderByWithRelationInput | discussionboard_post_tagOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_post_tags.\n     */\n    cursor?: discussionboard_post_tagWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_post_tags from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_post_tags.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_post_tags.\n     */\n    distinct?: Discussionboard_post_tagScalarFieldEnum | Discussionboard_post_tagScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_post_tag findMany\n   */\n  export type discussionboard_post_tagFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_tag\n     */\n    select?: discussionboard_post_tagSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_tag\n     */\n    omit?: discussionboard_post_tagOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_post_tags to fetch.\n     */\n    where?: discussionboard_post_tagWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_post_tags to fetch.\n     */\n    orderBy?: discussionboard_post_tagOrderByWithRelationInput | discussionboard_post_tagOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_post_tags.\n     */\n    cursor?: discussionboard_post_tagWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_post_tags from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_post_tags.\n     */\n    skip?: number\n    distinct?: Discussionboard_post_tagScalarFieldEnum | Discussionboard_post_tagScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_post_tag create\n   */\n  export type discussionboard_post_tagCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_tag\n     */\n    select?: discussionboard_post_tagSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_tag\n     */\n    omit?: discussionboard_post_tagOmit<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_post_tag.\n     */\n    data: XOR<discussionboard_post_tagCreateInput, discussionboard_post_tagUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_post_tag createMany\n   */\n  export type discussionboard_post_tagCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_post_tags.\n     */\n    data: discussionboard_post_tagCreateManyInput | discussionboard_post_tagCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_post_tag createManyAndReturn\n   */\n  export type discussionboard_post_tagCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_tag\n     */\n    select?: discussionboard_post_tagSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_tag\n     */\n    omit?: discussionboard_post_tagOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_post_tags.\n     */\n    data: discussionboard_post_tagCreateManyInput | discussionboard_post_tagCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_post_tag update\n   */\n  export type discussionboard_post_tagUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_tag\n     */\n    select?: discussionboard_post_tagSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_tag\n     */\n    omit?: discussionboard_post_tagOmit<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_post_tag.\n     */\n    data: XOR<discussionboard_post_tagUpdateInput, discussionboard_post_tagUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_post_tag to update.\n     */\n    where: discussionboard_post_tagWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_post_tag updateMany\n   */\n  export type discussionboard_post_tagUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_post_tags.\n     */\n    data: XOR<discussionboard_post_tagUpdateManyMutationInput, discussionboard_post_tagUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_post_tags to update\n     */\n    where?: discussionboard_post_tagWhereInput\n    /**\n     * Limit how many discussionboard_post_tags to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_post_tag updateManyAndReturn\n   */\n  export type discussionboard_post_tagUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_tag\n     */\n    select?: discussionboard_post_tagSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_tag\n     */\n    omit?: discussionboard_post_tagOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_post_tags.\n     */\n    data: XOR<discussionboard_post_tagUpdateManyMutationInput, discussionboard_post_tagUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_post_tags to update\n     */\n    where?: discussionboard_post_tagWhereInput\n    /**\n     * Limit how many discussionboard_post_tags to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_post_tag upsert\n   */\n  export type discussionboard_post_tagUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_tag\n     */\n    select?: discussionboard_post_tagSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_tag\n     */\n    omit?: discussionboard_post_tagOmit<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_post_tag to update in case it exists.\n     */\n    where: discussionboard_post_tagWhereUniqueInput\n    /**\n     * In case the discussionboard_post_tag found by the `where` argument doesn't exist, create a new discussionboard_post_tag with this data.\n     */\n    create: XOR<discussionboard_post_tagCreateInput, discussionboard_post_tagUncheckedCreateInput>\n    /**\n     * In case the discussionboard_post_tag was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_post_tagUpdateInput, discussionboard_post_tagUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_post_tag delete\n   */\n  export type discussionboard_post_tagDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_tag\n     */\n    select?: discussionboard_post_tagSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_tag\n     */\n    omit?: discussionboard_post_tagOmit<ExtArgs> | null\n    /**\n     * Filter which discussionboard_post_tag to delete.\n     */\n    where: discussionboard_post_tagWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_post_tag deleteMany\n   */\n  export type discussionboard_post_tagDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_post_tags to delete\n     */\n    where?: discussionboard_post_tagWhereInput\n    /**\n     * Limit how many discussionboard_post_tags to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_post_tag without action\n   */\n  export type discussionboard_post_tagDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_tag\n     */\n    select?: discussionboard_post_tagSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_tag\n     */\n    omit?: discussionboard_post_tagOmit<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_post_attachment\n   */\n\n  export type AggregateDiscussionboard_post_attachment = {\n    _count: Discussionboard_post_attachmentCountAggregateOutputType | null\n    _min: Discussionboard_post_attachmentMinAggregateOutputType | null\n    _max: Discussionboard_post_attachmentMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_post_attachmentMinAggregateOutputType = {\n    id: string | null\n    post_id: string | null\n    file_url: string | null\n    file_type: string | null\n    uploaded_at: Date | null\n  }\n\n  export type Discussionboard_post_attachmentMaxAggregateOutputType = {\n    id: string | null\n    post_id: string | null\n    file_url: string | null\n    file_type: string | null\n    uploaded_at: Date | null\n  }\n\n  export type Discussionboard_post_attachmentCountAggregateOutputType = {\n    id: number\n    post_id: number\n    file_url: number\n    file_type: number\n    uploaded_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_post_attachmentMinAggregateInputType = {\n    id?: true\n    post_id?: true\n    file_url?: true\n    file_type?: true\n    uploaded_at?: true\n  }\n\n  export type Discussionboard_post_attachmentMaxAggregateInputType = {\n    id?: true\n    post_id?: true\n    file_url?: true\n    file_type?: true\n    uploaded_at?: true\n  }\n\n  export type Discussionboard_post_attachmentCountAggregateInputType = {\n    id?: true\n    post_id?: true\n    file_url?: true\n    file_type?: true\n    uploaded_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_post_attachmentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_post_attachment to aggregate.\n     */\n    where?: discussionboard_post_attachmentWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_post_attachments to fetch.\n     */\n    orderBy?: discussionboard_post_attachmentOrderByWithRelationInput | discussionboard_post_attachmentOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_post_attachmentWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_post_attachments from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_post_attachments.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_post_attachments\n    **/\n    _count?: true | Discussionboard_post_attachmentCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_post_attachmentMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_post_attachmentMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_post_attachmentAggregateType<T extends Discussionboard_post_attachmentAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_post_attachment]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_post_attachment[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_post_attachment[P]>\n  }\n\n\n\n\n  export type discussionboard_post_attachmentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_post_attachmentWhereInput\n    orderBy?: discussionboard_post_attachmentOrderByWithAggregationInput | discussionboard_post_attachmentOrderByWithAggregationInput[]\n    by: Discussionboard_post_attachmentScalarFieldEnum[] | Discussionboard_post_attachmentScalarFieldEnum\n    having?: discussionboard_post_attachmentScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_post_attachmentCountAggregateInputType | true\n    _min?: Discussionboard_post_attachmentMinAggregateInputType\n    _max?: Discussionboard_post_attachmentMaxAggregateInputType\n  }\n\n  export type Discussionboard_post_attachmentGroupByOutputType = {\n    id: string\n    post_id: string\n    file_url: string\n    file_type: string\n    uploaded_at: Date\n    _count: Discussionboard_post_attachmentCountAggregateOutputType | null\n    _min: Discussionboard_post_attachmentMinAggregateOutputType | null\n    _max: Discussionboard_post_attachmentMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_post_attachmentGroupByPayload<T extends discussionboard_post_attachmentGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_post_attachmentGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_post_attachmentGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_post_attachmentGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_post_attachmentGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_post_attachmentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    post_id?: boolean\n    file_url?: boolean\n    file_type?: boolean\n    uploaded_at?: boolean\n    post?: boolean | discussionboard_postDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_post_attachment\"]>\n\n  export type discussionboard_post_attachmentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    post_id?: boolean\n    file_url?: boolean\n    file_type?: boolean\n    uploaded_at?: boolean\n    post?: boolean | discussionboard_postDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_post_attachment\"]>\n\n  export type discussionboard_post_attachmentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    post_id?: boolean\n    file_url?: boolean\n    file_type?: boolean\n    uploaded_at?: boolean\n    post?: boolean | discussionboard_postDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_post_attachment\"]>\n\n  export type discussionboard_post_attachmentSelectScalar = {\n    id?: boolean\n    post_id?: boolean\n    file_url?: boolean\n    file_type?: boolean\n    uploaded_at?: boolean\n  }\n\n  export type discussionboard_post_attachmentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"post_id\" | \"file_url\" | \"file_type\" | \"uploaded_at\", ExtArgs[\"result\"][\"discussionboard_post_attachment\"]>\n  export type discussionboard_post_attachmentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    post?: boolean | discussionboard_postDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_post_attachmentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    post?: boolean | discussionboard_postDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_post_attachmentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    post?: boolean | discussionboard_postDefaultArgs<ExtArgs>\n  }\n\n  export type $discussionboard_post_attachmentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_post_attachment\"\n    objects: {\n      post: Prisma.$discussionboard_postPayload<ExtArgs>\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * [Primary Key] - Unique attachment identity for tracking and referencing.\n       */\n      id: string\n      /**\n       * [Post FK] - Attachment's parent post (Section 3.2). Referenced (not duplicated) for strict normalization. Cascades on post delete.\n       */\n      post_id: string\n      /**\n       * [Attachment File URL] - Atomic URI (e.g., https://cdn.site/file.jpg). Required.\n       */\n      file_url: string\n      /**\n       * [Attachment MIME Type] - e.g. 'image/jpeg'. Required; normalized for filters.\n       */\n      file_type: string\n      /**\n       * [Upload Timestamp] - Required point-in-time, supporting audit and ordering.\n       */\n      uploaded_at: Date\n    }, ExtArgs[\"result\"][\"discussionboard_post_attachment\"]>\n    composites: {}\n  }\n\n  type discussionboard_post_attachmentGetPayload<S extends boolean | null | undefined | discussionboard_post_attachmentDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_post_attachmentPayload, S>\n\n  type discussionboard_post_attachmentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_post_attachmentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_post_attachmentCountAggregateInputType | true\n    }\n\n  export interface discussionboard_post_attachmentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_post_attachment'], meta: { name: 'discussionboard_post_attachment' } }\n    /**\n     * Find zero or one Discussionboard_post_attachment that matches the filter.\n     * @param {discussionboard_post_attachmentFindUniqueArgs} args - Arguments to find a Discussionboard_post_attachment\n     * @example\n     * // Get one Discussionboard_post_attachment\n     * const discussionboard_post_attachment = await prisma.discussionboard_post_attachment.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_post_attachmentFindUniqueArgs>(args: SelectSubset<T, discussionboard_post_attachmentFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_post_attachmentClient<$Result.GetResult<Prisma.$discussionboard_post_attachmentPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_post_attachment that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_post_attachmentFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_post_attachment\n     * @example\n     * // Get one Discussionboard_post_attachment\n     * const discussionboard_post_attachment = await prisma.discussionboard_post_attachment.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_post_attachmentFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_post_attachmentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_post_attachmentClient<$Result.GetResult<Prisma.$discussionboard_post_attachmentPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_post_attachment that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_post_attachmentFindFirstArgs} args - Arguments to find a Discussionboard_post_attachment\n     * @example\n     * // Get one Discussionboard_post_attachment\n     * const discussionboard_post_attachment = await prisma.discussionboard_post_attachment.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_post_attachmentFindFirstArgs>(args?: SelectSubset<T, discussionboard_post_attachmentFindFirstArgs<ExtArgs>>): Prisma__discussionboard_post_attachmentClient<$Result.GetResult<Prisma.$discussionboard_post_attachmentPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_post_attachment that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_post_attachmentFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_post_attachment\n     * @example\n     * // Get one Discussionboard_post_attachment\n     * const discussionboard_post_attachment = await prisma.discussionboard_post_attachment.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_post_attachmentFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_post_attachmentFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_post_attachmentClient<$Result.GetResult<Prisma.$discussionboard_post_attachmentPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_post_attachments that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_post_attachmentFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_post_attachments\n     * const discussionboard_post_attachments = await prisma.discussionboard_post_attachment.findMany()\n     * \n     * // Get first 10 Discussionboard_post_attachments\n     * const discussionboard_post_attachments = await prisma.discussionboard_post_attachment.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_post_attachmentWithIdOnly = await prisma.discussionboard_post_attachment.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_post_attachmentFindManyArgs>(args?: SelectSubset<T, discussionboard_post_attachmentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_post_attachmentPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_post_attachment.\n     * @param {discussionboard_post_attachmentCreateArgs} args - Arguments to create a Discussionboard_post_attachment.\n     * @example\n     * // Create one Discussionboard_post_attachment\n     * const Discussionboard_post_attachment = await prisma.discussionboard_post_attachment.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_post_attachment\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_post_attachmentCreateArgs>(args: SelectSubset<T, discussionboard_post_attachmentCreateArgs<ExtArgs>>): Prisma__discussionboard_post_attachmentClient<$Result.GetResult<Prisma.$discussionboard_post_attachmentPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_post_attachments.\n     * @param {discussionboard_post_attachmentCreateManyArgs} args - Arguments to create many Discussionboard_post_attachments.\n     * @example\n     * // Create many Discussionboard_post_attachments\n     * const discussionboard_post_attachment = await prisma.discussionboard_post_attachment.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_post_attachmentCreateManyArgs>(args?: SelectSubset<T, discussionboard_post_attachmentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_post_attachments and returns the data saved in the database.\n     * @param {discussionboard_post_attachmentCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_post_attachments.\n     * @example\n     * // Create many Discussionboard_post_attachments\n     * const discussionboard_post_attachment = await prisma.discussionboard_post_attachment.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_post_attachments and only return the `id`\n     * const discussionboard_post_attachmentWithIdOnly = await prisma.discussionboard_post_attachment.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_post_attachmentCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_post_attachmentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_post_attachmentPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_post_attachment.\n     * @param {discussionboard_post_attachmentDeleteArgs} args - Arguments to delete one Discussionboard_post_attachment.\n     * @example\n     * // Delete one Discussionboard_post_attachment\n     * const Discussionboard_post_attachment = await prisma.discussionboard_post_attachment.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_post_attachment\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_post_attachmentDeleteArgs>(args: SelectSubset<T, discussionboard_post_attachmentDeleteArgs<ExtArgs>>): Prisma__discussionboard_post_attachmentClient<$Result.GetResult<Prisma.$discussionboard_post_attachmentPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_post_attachment.\n     * @param {discussionboard_post_attachmentUpdateArgs} args - Arguments to update one Discussionboard_post_attachment.\n     * @example\n     * // Update one Discussionboard_post_attachment\n     * const discussionboard_post_attachment = await prisma.discussionboard_post_attachment.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_post_attachmentUpdateArgs>(args: SelectSubset<T, discussionboard_post_attachmentUpdateArgs<ExtArgs>>): Prisma__discussionboard_post_attachmentClient<$Result.GetResult<Prisma.$discussionboard_post_attachmentPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_post_attachments.\n     * @param {discussionboard_post_attachmentDeleteManyArgs} args - Arguments to filter Discussionboard_post_attachments to delete.\n     * @example\n     * // Delete a few Discussionboard_post_attachments\n     * const { count } = await prisma.discussionboard_post_attachment.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_post_attachmentDeleteManyArgs>(args?: SelectSubset<T, discussionboard_post_attachmentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_post_attachments.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_post_attachmentUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_post_attachments\n     * const discussionboard_post_attachment = await prisma.discussionboard_post_attachment.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_post_attachmentUpdateManyArgs>(args: SelectSubset<T, discussionboard_post_attachmentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_post_attachments and returns the data updated in the database.\n     * @param {discussionboard_post_attachmentUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_post_attachments.\n     * @example\n     * // Update many Discussionboard_post_attachments\n     * const discussionboard_post_attachment = await prisma.discussionboard_post_attachment.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_post_attachments and only return the `id`\n     * const discussionboard_post_attachmentWithIdOnly = await prisma.discussionboard_post_attachment.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_post_attachmentUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_post_attachmentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_post_attachmentPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_post_attachment.\n     * @param {discussionboard_post_attachmentUpsertArgs} args - Arguments to update or create a Discussionboard_post_attachment.\n     * @example\n     * // Update or create a Discussionboard_post_attachment\n     * const discussionboard_post_attachment = await prisma.discussionboard_post_attachment.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_post_attachment\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_post_attachment we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_post_attachmentUpsertArgs>(args: SelectSubset<T, discussionboard_post_attachmentUpsertArgs<ExtArgs>>): Prisma__discussionboard_post_attachmentClient<$Result.GetResult<Prisma.$discussionboard_post_attachmentPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_post_attachments.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_post_attachmentCountArgs} args - Arguments to filter Discussionboard_post_attachments to count.\n     * @example\n     * // Count the number of Discussionboard_post_attachments\n     * const count = await prisma.discussionboard_post_attachment.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_post_attachments we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_post_attachmentCountArgs>(\n      args?: Subset<T, discussionboard_post_attachmentCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_post_attachmentCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_post_attachment.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_post_attachmentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_post_attachmentAggregateArgs>(args: Subset<T, Discussionboard_post_attachmentAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_post_attachmentAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_post_attachment.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_post_attachmentGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_post_attachmentGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_post_attachmentGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_post_attachmentGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_post_attachmentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_post_attachmentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_post_attachment model\n   */\n  readonly fields: discussionboard_post_attachmentFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_post_attachment.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_post_attachmentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    post<T extends discussionboard_postDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_postDefaultArgs<ExtArgs>>): Prisma__discussionboard_postClient<$Result.GetResult<Prisma.$discussionboard_postPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_post_attachment model\n   */\n  interface discussionboard_post_attachmentFieldRefs {\n    readonly id: FieldRef<\"discussionboard_post_attachment\", 'String'>\n    readonly post_id: FieldRef<\"discussionboard_post_attachment\", 'String'>\n    readonly file_url: FieldRef<\"discussionboard_post_attachment\", 'String'>\n    readonly file_type: FieldRef<\"discussionboard_post_attachment\", 'String'>\n    readonly uploaded_at: FieldRef<\"discussionboard_post_attachment\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_post_attachment findUnique\n   */\n  export type discussionboard_post_attachmentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_attachment\n     */\n    select?: discussionboard_post_attachmentSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_attachment\n     */\n    omit?: discussionboard_post_attachmentOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_attachmentInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_post_attachment to fetch.\n     */\n    where: discussionboard_post_attachmentWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_post_attachment findUniqueOrThrow\n   */\n  export type discussionboard_post_attachmentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_attachment\n     */\n    select?: discussionboard_post_attachmentSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_attachment\n     */\n    omit?: discussionboard_post_attachmentOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_attachmentInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_post_attachment to fetch.\n     */\n    where: discussionboard_post_attachmentWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_post_attachment findFirst\n   */\n  export type discussionboard_post_attachmentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_attachment\n     */\n    select?: discussionboard_post_attachmentSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_attachment\n     */\n    omit?: discussionboard_post_attachmentOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_attachmentInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_post_attachment to fetch.\n     */\n    where?: discussionboard_post_attachmentWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_post_attachments to fetch.\n     */\n    orderBy?: discussionboard_post_attachmentOrderByWithRelationInput | discussionboard_post_attachmentOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_post_attachments.\n     */\n    cursor?: discussionboard_post_attachmentWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_post_attachments from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_post_attachments.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_post_attachments.\n     */\n    distinct?: Discussionboard_post_attachmentScalarFieldEnum | Discussionboard_post_attachmentScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_post_attachment findFirstOrThrow\n   */\n  export type discussionboard_post_attachmentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_attachment\n     */\n    select?: discussionboard_post_attachmentSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_attachment\n     */\n    omit?: discussionboard_post_attachmentOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_attachmentInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_post_attachment to fetch.\n     */\n    where?: discussionboard_post_attachmentWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_post_attachments to fetch.\n     */\n    orderBy?: discussionboard_post_attachmentOrderByWithRelationInput | discussionboard_post_attachmentOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_post_attachments.\n     */\n    cursor?: discussionboard_post_attachmentWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_post_attachments from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_post_attachments.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_post_attachments.\n     */\n    distinct?: Discussionboard_post_attachmentScalarFieldEnum | Discussionboard_post_attachmentScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_post_attachment findMany\n   */\n  export type discussionboard_post_attachmentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_attachment\n     */\n    select?: discussionboard_post_attachmentSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_attachment\n     */\n    omit?: discussionboard_post_attachmentOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_attachmentInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_post_attachments to fetch.\n     */\n    where?: discussionboard_post_attachmentWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_post_attachments to fetch.\n     */\n    orderBy?: discussionboard_post_attachmentOrderByWithRelationInput | discussionboard_post_attachmentOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_post_attachments.\n     */\n    cursor?: discussionboard_post_attachmentWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_post_attachments from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_post_attachments.\n     */\n    skip?: number\n    distinct?: Discussionboard_post_attachmentScalarFieldEnum | Discussionboard_post_attachmentScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_post_attachment create\n   */\n  export type discussionboard_post_attachmentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_attachment\n     */\n    select?: discussionboard_post_attachmentSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_attachment\n     */\n    omit?: discussionboard_post_attachmentOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_attachmentInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_post_attachment.\n     */\n    data: XOR<discussionboard_post_attachmentCreateInput, discussionboard_post_attachmentUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_post_attachment createMany\n   */\n  export type discussionboard_post_attachmentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_post_attachments.\n     */\n    data: discussionboard_post_attachmentCreateManyInput | discussionboard_post_attachmentCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_post_attachment createManyAndReturn\n   */\n  export type discussionboard_post_attachmentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_attachment\n     */\n    select?: discussionboard_post_attachmentSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_attachment\n     */\n    omit?: discussionboard_post_attachmentOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_post_attachments.\n     */\n    data: discussionboard_post_attachmentCreateManyInput | discussionboard_post_attachmentCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_attachmentIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_post_attachment update\n   */\n  export type discussionboard_post_attachmentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_attachment\n     */\n    select?: discussionboard_post_attachmentSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_attachment\n     */\n    omit?: discussionboard_post_attachmentOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_attachmentInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_post_attachment.\n     */\n    data: XOR<discussionboard_post_attachmentUpdateInput, discussionboard_post_attachmentUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_post_attachment to update.\n     */\n    where: discussionboard_post_attachmentWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_post_attachment updateMany\n   */\n  export type discussionboard_post_attachmentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_post_attachments.\n     */\n    data: XOR<discussionboard_post_attachmentUpdateManyMutationInput, discussionboard_post_attachmentUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_post_attachments to update\n     */\n    where?: discussionboard_post_attachmentWhereInput\n    /**\n     * Limit how many discussionboard_post_attachments to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_post_attachment updateManyAndReturn\n   */\n  export type discussionboard_post_attachmentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_attachment\n     */\n    select?: discussionboard_post_attachmentSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_attachment\n     */\n    omit?: discussionboard_post_attachmentOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_post_attachments.\n     */\n    data: XOR<discussionboard_post_attachmentUpdateManyMutationInput, discussionboard_post_attachmentUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_post_attachments to update\n     */\n    where?: discussionboard_post_attachmentWhereInput\n    /**\n     * Limit how many discussionboard_post_attachments to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_attachmentIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_post_attachment upsert\n   */\n  export type discussionboard_post_attachmentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_attachment\n     */\n    select?: discussionboard_post_attachmentSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_attachment\n     */\n    omit?: discussionboard_post_attachmentOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_attachmentInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_post_attachment to update in case it exists.\n     */\n    where: discussionboard_post_attachmentWhereUniqueInput\n    /**\n     * In case the discussionboard_post_attachment found by the `where` argument doesn't exist, create a new discussionboard_post_attachment with this data.\n     */\n    create: XOR<discussionboard_post_attachmentCreateInput, discussionboard_post_attachmentUncheckedCreateInput>\n    /**\n     * In case the discussionboard_post_attachment was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_post_attachmentUpdateInput, discussionboard_post_attachmentUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_post_attachment delete\n   */\n  export type discussionboard_post_attachmentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_attachment\n     */\n    select?: discussionboard_post_attachmentSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_attachment\n     */\n    omit?: discussionboard_post_attachmentOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_attachmentInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_post_attachment to delete.\n     */\n    where: discussionboard_post_attachmentWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_post_attachment deleteMany\n   */\n  export type discussionboard_post_attachmentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_post_attachments to delete\n     */\n    where?: discussionboard_post_attachmentWhereInput\n    /**\n     * Limit how many discussionboard_post_attachments to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_post_attachment without action\n   */\n  export type discussionboard_post_attachmentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_attachment\n     */\n    select?: discussionboard_post_attachmentSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_attachment\n     */\n    omit?: discussionboard_post_attachmentOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_attachmentInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_comments\n   */\n\n  export type AggregateDiscussionboard_comments = {\n    _count: Discussionboard_commentsCountAggregateOutputType | null\n    _min: Discussionboard_commentsMinAggregateOutputType | null\n    _max: Discussionboard_commentsMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_commentsMinAggregateOutputType = {\n    id: string | null\n    post_id: string | null\n    author_id: string | null\n    parent_comment_id: string | null\n    content: string | null\n    is_edited: boolean | null\n    is_deleted: boolean | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Discussionboard_commentsMaxAggregateOutputType = {\n    id: string | null\n    post_id: string | null\n    author_id: string | null\n    parent_comment_id: string | null\n    content: string | null\n    is_edited: boolean | null\n    is_deleted: boolean | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Discussionboard_commentsCountAggregateOutputType = {\n    id: number\n    post_id: number\n    author_id: number\n    parent_comment_id: number\n    content: number\n    is_edited: number\n    is_deleted: number\n    created_at: number\n    updated_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_commentsMinAggregateInputType = {\n    id?: true\n    post_id?: true\n    author_id?: true\n    parent_comment_id?: true\n    content?: true\n    is_edited?: true\n    is_deleted?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Discussionboard_commentsMaxAggregateInputType = {\n    id?: true\n    post_id?: true\n    author_id?: true\n    parent_comment_id?: true\n    content?: true\n    is_edited?: true\n    is_deleted?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Discussionboard_commentsCountAggregateInputType = {\n    id?: true\n    post_id?: true\n    author_id?: true\n    parent_comment_id?: true\n    content?: true\n    is_edited?: true\n    is_deleted?: true\n    created_at?: true\n    updated_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_commentsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_comments to aggregate.\n     */\n    where?: discussionboard_commentsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_comments to fetch.\n     */\n    orderBy?: discussionboard_commentsOrderByWithRelationInput | discussionboard_commentsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_commentsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_comments from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_comments.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_comments\n    **/\n    _count?: true | Discussionboard_commentsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_commentsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_commentsMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_commentsAggregateType<T extends Discussionboard_commentsAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_comments]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_comments[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_comments[P]>\n  }\n\n\n\n\n  export type discussionboard_commentsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_commentsWhereInput\n    orderBy?: discussionboard_commentsOrderByWithAggregationInput | discussionboard_commentsOrderByWithAggregationInput[]\n    by: Discussionboard_commentsScalarFieldEnum[] | Discussionboard_commentsScalarFieldEnum\n    having?: discussionboard_commentsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_commentsCountAggregateInputType | true\n    _min?: Discussionboard_commentsMinAggregateInputType\n    _max?: Discussionboard_commentsMaxAggregateInputType\n  }\n\n  export type Discussionboard_commentsGroupByOutputType = {\n    id: string\n    post_id: string\n    author_id: string\n    parent_comment_id: string | null\n    content: string\n    is_edited: boolean\n    is_deleted: boolean\n    created_at: Date\n    updated_at: Date\n    _count: Discussionboard_commentsCountAggregateOutputType | null\n    _min: Discussionboard_commentsMinAggregateOutputType | null\n    _max: Discussionboard_commentsMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_commentsGroupByPayload<T extends discussionboard_commentsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_commentsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_commentsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_commentsGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_commentsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_commentsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    post_id?: boolean\n    author_id?: boolean\n    parent_comment_id?: boolean\n    content?: boolean\n    is_edited?: boolean\n    is_deleted?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    post?: boolean | discussionboard_postDefaultArgs<ExtArgs>\n    author?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    parent_comment?: boolean | discussionboard_comments$parent_commentArgs<ExtArgs>\n    recursive?: boolean | discussionboard_comments$recursiveArgs<ExtArgs>\n    discussionboard_likes?: boolean | discussionboard_comments$discussionboard_likesArgs<ExtArgs>\n    discussionboard_reports?: boolean | discussionboard_comments$discussionboard_reportsArgs<ExtArgs>\n    discussionboard_moderation_action?: boolean | discussionboard_comments$discussionboard_moderation_actionArgs<ExtArgs>\n    discussionboard_report_review?: boolean | discussionboard_comments$discussionboard_report_reviewArgs<ExtArgs>\n    discussionboard_warning?: boolean | discussionboard_comments$discussionboard_warningArgs<ExtArgs>\n    discussionboard_notification?: boolean | discussionboard_comments$discussionboard_notificationArgs<ExtArgs>\n    _count?: boolean | Discussionboard_commentsCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_comments\"]>\n\n  export type discussionboard_commentsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    post_id?: boolean\n    author_id?: boolean\n    parent_comment_id?: boolean\n    content?: boolean\n    is_edited?: boolean\n    is_deleted?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    post?: boolean | discussionboard_postDefaultArgs<ExtArgs>\n    author?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    parent_comment?: boolean | discussionboard_comments$parent_commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_comments\"]>\n\n  export type discussionboard_commentsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    post_id?: boolean\n    author_id?: boolean\n    parent_comment_id?: boolean\n    content?: boolean\n    is_edited?: boolean\n    is_deleted?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    post?: boolean | discussionboard_postDefaultArgs<ExtArgs>\n    author?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    parent_comment?: boolean | discussionboard_comments$parent_commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_comments\"]>\n\n  export type discussionboard_commentsSelectScalar = {\n    id?: boolean\n    post_id?: boolean\n    author_id?: boolean\n    parent_comment_id?: boolean\n    content?: boolean\n    is_edited?: boolean\n    is_deleted?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }\n\n  export type discussionboard_commentsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"post_id\" | \"author_id\" | \"parent_comment_id\" | \"content\" | \"is_edited\" | \"is_deleted\" | \"created_at\" | \"updated_at\", ExtArgs[\"result\"][\"discussionboard_comments\"]>\n  export type discussionboard_commentsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    post?: boolean | discussionboard_postDefaultArgs<ExtArgs>\n    author?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    parent_comment?: boolean | discussionboard_comments$parent_commentArgs<ExtArgs>\n    recursive?: boolean | discussionboard_comments$recursiveArgs<ExtArgs>\n    discussionboard_likes?: boolean | discussionboard_comments$discussionboard_likesArgs<ExtArgs>\n    discussionboard_reports?: boolean | discussionboard_comments$discussionboard_reportsArgs<ExtArgs>\n    discussionboard_moderation_action?: boolean | discussionboard_comments$discussionboard_moderation_actionArgs<ExtArgs>\n    discussionboard_report_review?: boolean | discussionboard_comments$discussionboard_report_reviewArgs<ExtArgs>\n    discussionboard_warning?: boolean | discussionboard_comments$discussionboard_warningArgs<ExtArgs>\n    discussionboard_notification?: boolean | discussionboard_comments$discussionboard_notificationArgs<ExtArgs>\n    _count?: boolean | Discussionboard_commentsCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_commentsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    post?: boolean | discussionboard_postDefaultArgs<ExtArgs>\n    author?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    parent_comment?: boolean | discussionboard_comments$parent_commentArgs<ExtArgs>\n  }\n  export type discussionboard_commentsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    post?: boolean | discussionboard_postDefaultArgs<ExtArgs>\n    author?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    parent_comment?: boolean | discussionboard_comments$parent_commentArgs<ExtArgs>\n  }\n\n  export type $discussionboard_commentsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_comments\"\n    objects: {\n      post: Prisma.$discussionboard_postPayload<ExtArgs>\n      author: Prisma.$discussionboard_userPayload<ExtArgs>\n      parent_comment: Prisma.$discussionboard_commentsPayload<ExtArgs> | null\n      recursive: Prisma.$discussionboard_commentsPayload<ExtArgs>[]\n      discussionboard_likes: Prisma.$discussionboard_likesPayload<ExtArgs>[]\n      discussionboard_reports: Prisma.$discussionboard_reportsPayload<ExtArgs>[]\n      discussionboard_moderation_action: Prisma.$discussionboard_moderation_actionPayload<ExtArgs>[]\n      discussionboard_report_review: Prisma.$discussionboard_report_reviewPayload<ExtArgs>[]\n      discussionboard_warning: Prisma.$discussionboard_warningPayload<ExtArgs>[]\n      discussionboard_notification: Prisma.$discussionboard_notificationPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * [Comment Primary Key] - Implements the unique identification (see 3NF and requirements mapping).\n       * \n       * Globally unique identifier for each comment. Ensures 1NF uniqueness, enables precise referencing, and guarantees auditability and traceability across threads and moderation actions.\n       * \n       */\n      id: string\n      /**\n       * [Foreign Key: Post] - Implements the post-comment linkage as per requirement 3.3.\n       * \n       * Associates each comment with its parent post (mandatory). Ensures 2NF by linking to the full post entity, not duplicating post info. For example, when displaying a comment, the app can show the related post's category or title.\n       * \n       */\n      post_id: string\n      /**\n       * [Foreign Key: Author] - Implements comment authorship per requirements 3.3, 3.4.\n       * \n       * Links the comment directly to its user (author). Maintains normalization by not storing author details redundantly; user details are referenced via foreign key.\n       * \n       */\n      author_id: string\n      /**\n       * [Foreign Key: Parent Comment] - Supports threaded/reply comments as per 3.3.\n       * \n       * Self-referential link for comment thread nesting (optional; null for root-level comments). Maintains normalization by linking only to one parent, supporting recursive conversation trees without redundancy.\n       * \n       */\n      parent_comment_id: string | null\n      /**\n       * [Comment Content] - Implements actual user message storage per requirement 3.3.\n       * \n       * Holds the content/message of the comment. Ensures normalization by storing only the user's entry, not derived or precomputed data. For example, users can edit this field within role constraints. No denormalized summary or rendering is stored in regular tables.\n       * \n       */\n      content: string\n      /**\n       * [Edit Tracking Flag] - Supports edit-audit functionality per requirement 3.3 (editing own comments).\n       * \n       * Boolean indicating whether comment content has been modified since creation. Ensures normalization by storing only atomic edit status; edit history belongs in a separate snapshot/audit table if needed.\n       * \n       */\n      is_edited: boolean\n      /**\n       * [Soft Delete Flag] - Enables reversible deletion per 3.3 and moderation (3.5).\n       * \n       * Flags comments as deleted (soft) without actual removal from database. Supports auditability and role-based recovery, ensuring no information loss for moderation history.\n       * \n       */\n      is_deleted: boolean\n      /**\n       * [Creation Timestamp] - Records when the comment was posted (requirements 3.3, 3.9).\n       * \n       * Stores creation time of the comment. Ensures normalization as an atomic, non-derived value, and provides audit trail foundation.\n       * \n       */\n      created_at: Date\n      /**\n       * [Last Update Timestamp] - Tracks edits, moderation actions as in 3.3, 3.5, 3.9.\n       * \n       * Records latest update timestamp (edit, moderation, recovery, etc). Maintains audit and traceability without derived/polyglot aggregates.\n       * \n       */\n      updated_at: Date\n    }, ExtArgs[\"result\"][\"discussionboard_comments\"]>\n    composites: {}\n  }\n\n  type discussionboard_commentsGetPayload<S extends boolean | null | undefined | discussionboard_commentsDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_commentsPayload, S>\n\n  type discussionboard_commentsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_commentsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_commentsCountAggregateInputType | true\n    }\n\n  export interface discussionboard_commentsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_comments'], meta: { name: 'discussionboard_comments' } }\n    /**\n     * Find zero or one Discussionboard_comments that matches the filter.\n     * @param {discussionboard_commentsFindUniqueArgs} args - Arguments to find a Discussionboard_comments\n     * @example\n     * // Get one Discussionboard_comments\n     * const discussionboard_comments = await prisma.discussionboard_comments.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_commentsFindUniqueArgs>(args: SelectSubset<T, discussionboard_commentsFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_commentsClient<$Result.GetResult<Prisma.$discussionboard_commentsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_comments that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_commentsFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_comments\n     * @example\n     * // Get one Discussionboard_comments\n     * const discussionboard_comments = await prisma.discussionboard_comments.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_commentsFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_commentsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_commentsClient<$Result.GetResult<Prisma.$discussionboard_commentsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_comments that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_commentsFindFirstArgs} args - Arguments to find a Discussionboard_comments\n     * @example\n     * // Get one Discussionboard_comments\n     * const discussionboard_comments = await prisma.discussionboard_comments.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_commentsFindFirstArgs>(args?: SelectSubset<T, discussionboard_commentsFindFirstArgs<ExtArgs>>): Prisma__discussionboard_commentsClient<$Result.GetResult<Prisma.$discussionboard_commentsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_comments that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_commentsFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_comments\n     * @example\n     * // Get one Discussionboard_comments\n     * const discussionboard_comments = await prisma.discussionboard_comments.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_commentsFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_commentsFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_commentsClient<$Result.GetResult<Prisma.$discussionboard_commentsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_comments that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_commentsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_comments\n     * const discussionboard_comments = await prisma.discussionboard_comments.findMany()\n     * \n     * // Get first 10 Discussionboard_comments\n     * const discussionboard_comments = await prisma.discussionboard_comments.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_commentsWithIdOnly = await prisma.discussionboard_comments.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_commentsFindManyArgs>(args?: SelectSubset<T, discussionboard_commentsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_commentsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_comments.\n     * @param {discussionboard_commentsCreateArgs} args - Arguments to create a Discussionboard_comments.\n     * @example\n     * // Create one Discussionboard_comments\n     * const Discussionboard_comments = await prisma.discussionboard_comments.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_comments\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_commentsCreateArgs>(args: SelectSubset<T, discussionboard_commentsCreateArgs<ExtArgs>>): Prisma__discussionboard_commentsClient<$Result.GetResult<Prisma.$discussionboard_commentsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_comments.\n     * @param {discussionboard_commentsCreateManyArgs} args - Arguments to create many Discussionboard_comments.\n     * @example\n     * // Create many Discussionboard_comments\n     * const discussionboard_comments = await prisma.discussionboard_comments.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_commentsCreateManyArgs>(args?: SelectSubset<T, discussionboard_commentsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_comments and returns the data saved in the database.\n     * @param {discussionboard_commentsCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_comments.\n     * @example\n     * // Create many Discussionboard_comments\n     * const discussionboard_comments = await prisma.discussionboard_comments.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_comments and only return the `id`\n     * const discussionboard_commentsWithIdOnly = await prisma.discussionboard_comments.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_commentsCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_commentsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_commentsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_comments.\n     * @param {discussionboard_commentsDeleteArgs} args - Arguments to delete one Discussionboard_comments.\n     * @example\n     * // Delete one Discussionboard_comments\n     * const Discussionboard_comments = await prisma.discussionboard_comments.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_comments\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_commentsDeleteArgs>(args: SelectSubset<T, discussionboard_commentsDeleteArgs<ExtArgs>>): Prisma__discussionboard_commentsClient<$Result.GetResult<Prisma.$discussionboard_commentsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_comments.\n     * @param {discussionboard_commentsUpdateArgs} args - Arguments to update one Discussionboard_comments.\n     * @example\n     * // Update one Discussionboard_comments\n     * const discussionboard_comments = await prisma.discussionboard_comments.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_commentsUpdateArgs>(args: SelectSubset<T, discussionboard_commentsUpdateArgs<ExtArgs>>): Prisma__discussionboard_commentsClient<$Result.GetResult<Prisma.$discussionboard_commentsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_comments.\n     * @param {discussionboard_commentsDeleteManyArgs} args - Arguments to filter Discussionboard_comments to delete.\n     * @example\n     * // Delete a few Discussionboard_comments\n     * const { count } = await prisma.discussionboard_comments.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_commentsDeleteManyArgs>(args?: SelectSubset<T, discussionboard_commentsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_comments.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_commentsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_comments\n     * const discussionboard_comments = await prisma.discussionboard_comments.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_commentsUpdateManyArgs>(args: SelectSubset<T, discussionboard_commentsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_comments and returns the data updated in the database.\n     * @param {discussionboard_commentsUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_comments.\n     * @example\n     * // Update many Discussionboard_comments\n     * const discussionboard_comments = await prisma.discussionboard_comments.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_comments and only return the `id`\n     * const discussionboard_commentsWithIdOnly = await prisma.discussionboard_comments.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_commentsUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_commentsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_commentsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_comments.\n     * @param {discussionboard_commentsUpsertArgs} args - Arguments to update or create a Discussionboard_comments.\n     * @example\n     * // Update or create a Discussionboard_comments\n     * const discussionboard_comments = await prisma.discussionboard_comments.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_comments\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_comments we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_commentsUpsertArgs>(args: SelectSubset<T, discussionboard_commentsUpsertArgs<ExtArgs>>): Prisma__discussionboard_commentsClient<$Result.GetResult<Prisma.$discussionboard_commentsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_comments.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_commentsCountArgs} args - Arguments to filter Discussionboard_comments to count.\n     * @example\n     * // Count the number of Discussionboard_comments\n     * const count = await prisma.discussionboard_comments.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_comments we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_commentsCountArgs>(\n      args?: Subset<T, discussionboard_commentsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_commentsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_comments.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_commentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_commentsAggregateArgs>(args: Subset<T, Discussionboard_commentsAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_commentsAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_comments.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_commentsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_commentsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_commentsGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_commentsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_commentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_commentsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_comments model\n   */\n  readonly fields: discussionboard_commentsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_comments.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_commentsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    post<T extends discussionboard_postDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_postDefaultArgs<ExtArgs>>): Prisma__discussionboard_postClient<$Result.GetResult<Prisma.$discussionboard_postPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    author<T extends discussionboard_userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_userDefaultArgs<ExtArgs>>): Prisma__discussionboard_userClient<$Result.GetResult<Prisma.$discussionboard_userPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    parent_comment<T extends discussionboard_comments$parent_commentArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_comments$parent_commentArgs<ExtArgs>>): Prisma__discussionboard_commentsClient<$Result.GetResult<Prisma.$discussionboard_commentsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    recursive<T extends discussionboard_comments$recursiveArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_comments$recursiveArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_commentsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_likes<T extends discussionboard_comments$discussionboard_likesArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_comments$discussionboard_likesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_likesPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_reports<T extends discussionboard_comments$discussionboard_reportsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_comments$discussionboard_reportsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_reportsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_moderation_action<T extends discussionboard_comments$discussionboard_moderation_actionArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_comments$discussionboard_moderation_actionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_moderation_actionPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_report_review<T extends discussionboard_comments$discussionboard_report_reviewArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_comments$discussionboard_report_reviewArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_report_reviewPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_warning<T extends discussionboard_comments$discussionboard_warningArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_comments$discussionboard_warningArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_warningPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_notification<T extends discussionboard_comments$discussionboard_notificationArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_comments$discussionboard_notificationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_notificationPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_comments model\n   */\n  interface discussionboard_commentsFieldRefs {\n    readonly id: FieldRef<\"discussionboard_comments\", 'String'>\n    readonly post_id: FieldRef<\"discussionboard_comments\", 'String'>\n    readonly author_id: FieldRef<\"discussionboard_comments\", 'String'>\n    readonly parent_comment_id: FieldRef<\"discussionboard_comments\", 'String'>\n    readonly content: FieldRef<\"discussionboard_comments\", 'String'>\n    readonly is_edited: FieldRef<\"discussionboard_comments\", 'Boolean'>\n    readonly is_deleted: FieldRef<\"discussionboard_comments\", 'Boolean'>\n    readonly created_at: FieldRef<\"discussionboard_comments\", 'DateTime'>\n    readonly updated_at: FieldRef<\"discussionboard_comments\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_comments findUnique\n   */\n  export type discussionboard_commentsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comments\n     */\n    select?: discussionboard_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comments\n     */\n    omit?: discussionboard_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_commentsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_comments to fetch.\n     */\n    where: discussionboard_commentsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_comments findUniqueOrThrow\n   */\n  export type discussionboard_commentsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comments\n     */\n    select?: discussionboard_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comments\n     */\n    omit?: discussionboard_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_commentsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_comments to fetch.\n     */\n    where: discussionboard_commentsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_comments findFirst\n   */\n  export type discussionboard_commentsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comments\n     */\n    select?: discussionboard_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comments\n     */\n    omit?: discussionboard_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_commentsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_comments to fetch.\n     */\n    where?: discussionboard_commentsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_comments to fetch.\n     */\n    orderBy?: discussionboard_commentsOrderByWithRelationInput | discussionboard_commentsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_comments.\n     */\n    cursor?: discussionboard_commentsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_comments from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_comments.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_comments.\n     */\n    distinct?: Discussionboard_commentsScalarFieldEnum | Discussionboard_commentsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_comments findFirstOrThrow\n   */\n  export type discussionboard_commentsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comments\n     */\n    select?: discussionboard_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comments\n     */\n    omit?: discussionboard_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_commentsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_comments to fetch.\n     */\n    where?: discussionboard_commentsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_comments to fetch.\n     */\n    orderBy?: discussionboard_commentsOrderByWithRelationInput | discussionboard_commentsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_comments.\n     */\n    cursor?: discussionboard_commentsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_comments from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_comments.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_comments.\n     */\n    distinct?: Discussionboard_commentsScalarFieldEnum | Discussionboard_commentsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_comments findMany\n   */\n  export type discussionboard_commentsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comments\n     */\n    select?: discussionboard_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comments\n     */\n    omit?: discussionboard_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_commentsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_comments to fetch.\n     */\n    where?: discussionboard_commentsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_comments to fetch.\n     */\n    orderBy?: discussionboard_commentsOrderByWithRelationInput | discussionboard_commentsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_comments.\n     */\n    cursor?: discussionboard_commentsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_comments from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_comments.\n     */\n    skip?: number\n    distinct?: Discussionboard_commentsScalarFieldEnum | Discussionboard_commentsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_comments create\n   */\n  export type discussionboard_commentsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comments\n     */\n    select?: discussionboard_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comments\n     */\n    omit?: discussionboard_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_commentsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_comments.\n     */\n    data: XOR<discussionboard_commentsCreateInput, discussionboard_commentsUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_comments createMany\n   */\n  export type discussionboard_commentsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_comments.\n     */\n    data: discussionboard_commentsCreateManyInput | discussionboard_commentsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_comments createManyAndReturn\n   */\n  export type discussionboard_commentsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comments\n     */\n    select?: discussionboard_commentsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comments\n     */\n    omit?: discussionboard_commentsOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_comments.\n     */\n    data: discussionboard_commentsCreateManyInput | discussionboard_commentsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_commentsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_comments update\n   */\n  export type discussionboard_commentsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comments\n     */\n    select?: discussionboard_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comments\n     */\n    omit?: discussionboard_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_commentsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_comments.\n     */\n    data: XOR<discussionboard_commentsUpdateInput, discussionboard_commentsUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_comments to update.\n     */\n    where: discussionboard_commentsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_comments updateMany\n   */\n  export type discussionboard_commentsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_comments.\n     */\n    data: XOR<discussionboard_commentsUpdateManyMutationInput, discussionboard_commentsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_comments to update\n     */\n    where?: discussionboard_commentsWhereInput\n    /**\n     * Limit how many discussionboard_comments to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_comments updateManyAndReturn\n   */\n  export type discussionboard_commentsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comments\n     */\n    select?: discussionboard_commentsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comments\n     */\n    omit?: discussionboard_commentsOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_comments.\n     */\n    data: XOR<discussionboard_commentsUpdateManyMutationInput, discussionboard_commentsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_comments to update\n     */\n    where?: discussionboard_commentsWhereInput\n    /**\n     * Limit how many discussionboard_comments to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_commentsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_comments upsert\n   */\n  export type discussionboard_commentsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comments\n     */\n    select?: discussionboard_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comments\n     */\n    omit?: discussionboard_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_commentsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_comments to update in case it exists.\n     */\n    where: discussionboard_commentsWhereUniqueInput\n    /**\n     * In case the discussionboard_comments found by the `where` argument doesn't exist, create a new discussionboard_comments with this data.\n     */\n    create: XOR<discussionboard_commentsCreateInput, discussionboard_commentsUncheckedCreateInput>\n    /**\n     * In case the discussionboard_comments was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_commentsUpdateInput, discussionboard_commentsUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_comments delete\n   */\n  export type discussionboard_commentsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comments\n     */\n    select?: discussionboard_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comments\n     */\n    omit?: discussionboard_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_commentsInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_comments to delete.\n     */\n    where: discussionboard_commentsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_comments deleteMany\n   */\n  export type discussionboard_commentsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_comments to delete\n     */\n    where?: discussionboard_commentsWhereInput\n    /**\n     * Limit how many discussionboard_comments to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_comments.parent_comment\n   */\n  export type discussionboard_comments$parent_commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comments\n     */\n    select?: discussionboard_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comments\n     */\n    omit?: discussionboard_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_commentsInclude<ExtArgs> | null\n    where?: discussionboard_commentsWhereInput\n  }\n\n  /**\n   * discussionboard_comments.recursive\n   */\n  export type discussionboard_comments$recursiveArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comments\n     */\n    select?: discussionboard_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comments\n     */\n    omit?: discussionboard_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_commentsInclude<ExtArgs> | null\n    where?: discussionboard_commentsWhereInput\n    orderBy?: discussionboard_commentsOrderByWithRelationInput | discussionboard_commentsOrderByWithRelationInput[]\n    cursor?: discussionboard_commentsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_commentsScalarFieldEnum | Discussionboard_commentsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_comments.discussionboard_likes\n   */\n  export type discussionboard_comments$discussionboard_likesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_likes\n     */\n    select?: discussionboard_likesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_likes\n     */\n    omit?: discussionboard_likesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_likesInclude<ExtArgs> | null\n    where?: discussionboard_likesWhereInput\n    orderBy?: discussionboard_likesOrderByWithRelationInput | discussionboard_likesOrderByWithRelationInput[]\n    cursor?: discussionboard_likesWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_likesScalarFieldEnum | Discussionboard_likesScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_comments.discussionboard_reports\n   */\n  export type discussionboard_comments$discussionboard_reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_reports\n     */\n    select?: discussionboard_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_reports\n     */\n    omit?: discussionboard_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_reportsInclude<ExtArgs> | null\n    where?: discussionboard_reportsWhereInput\n    orderBy?: discussionboard_reportsOrderByWithRelationInput | discussionboard_reportsOrderByWithRelationInput[]\n    cursor?: discussionboard_reportsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_reportsScalarFieldEnum | Discussionboard_reportsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_comments.discussionboard_moderation_action\n   */\n  export type discussionboard_comments$discussionboard_moderation_actionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderation_action\n     */\n    select?: discussionboard_moderation_actionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderation_action\n     */\n    omit?: discussionboard_moderation_actionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderation_actionInclude<ExtArgs> | null\n    where?: discussionboard_moderation_actionWhereInput\n    orderBy?: discussionboard_moderation_actionOrderByWithRelationInput | discussionboard_moderation_actionOrderByWithRelationInput[]\n    cursor?: discussionboard_moderation_actionWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_moderation_actionScalarFieldEnum | Discussionboard_moderation_actionScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_comments.discussionboard_report_review\n   */\n  export type discussionboard_comments$discussionboard_report_reviewArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_report_review\n     */\n    select?: discussionboard_report_reviewSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_report_review\n     */\n    omit?: discussionboard_report_reviewOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_report_reviewInclude<ExtArgs> | null\n    where?: discussionboard_report_reviewWhereInput\n    orderBy?: discussionboard_report_reviewOrderByWithRelationInput | discussionboard_report_reviewOrderByWithRelationInput[]\n    cursor?: discussionboard_report_reviewWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_report_reviewScalarFieldEnum | Discussionboard_report_reviewScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_comments.discussionboard_warning\n   */\n  export type discussionboard_comments$discussionboard_warningArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_warning\n     */\n    select?: discussionboard_warningSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_warning\n     */\n    omit?: discussionboard_warningOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_warningInclude<ExtArgs> | null\n    where?: discussionboard_warningWhereInput\n    orderBy?: discussionboard_warningOrderByWithRelationInput | discussionboard_warningOrderByWithRelationInput[]\n    cursor?: discussionboard_warningWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_warningScalarFieldEnum | Discussionboard_warningScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_comments.discussionboard_notification\n   */\n  export type discussionboard_comments$discussionboard_notificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification\n     */\n    select?: discussionboard_notificationSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification\n     */\n    omit?: discussionboard_notificationOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notificationInclude<ExtArgs> | null\n    where?: discussionboard_notificationWhereInput\n    orderBy?: discussionboard_notificationOrderByWithRelationInput | discussionboard_notificationOrderByWithRelationInput[]\n    cursor?: discussionboard_notificationWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_notificationScalarFieldEnum | Discussionboard_notificationScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_comments without action\n   */\n  export type discussionboard_commentsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comments\n     */\n    select?: discussionboard_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comments\n     */\n    omit?: discussionboard_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_commentsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_likes\n   */\n\n  export type AggregateDiscussionboard_likes = {\n    _count: Discussionboard_likesCountAggregateOutputType | null\n    _min: Discussionboard_likesMinAggregateOutputType | null\n    _max: Discussionboard_likesMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_likesMinAggregateOutputType = {\n    id: string | null\n    user_id: string | null\n    post_id: string | null\n    comment_id: string | null\n    created_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Discussionboard_likesMaxAggregateOutputType = {\n    id: string | null\n    user_id: string | null\n    post_id: string | null\n    comment_id: string | null\n    created_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Discussionboard_likesCountAggregateOutputType = {\n    id: number\n    user_id: number\n    post_id: number\n    comment_id: number\n    created_at: number\n    deleted_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_likesMinAggregateInputType = {\n    id?: true\n    user_id?: true\n    post_id?: true\n    comment_id?: true\n    created_at?: true\n    deleted_at?: true\n  }\n\n  export type Discussionboard_likesMaxAggregateInputType = {\n    id?: true\n    user_id?: true\n    post_id?: true\n    comment_id?: true\n    created_at?: true\n    deleted_at?: true\n  }\n\n  export type Discussionboard_likesCountAggregateInputType = {\n    id?: true\n    user_id?: true\n    post_id?: true\n    comment_id?: true\n    created_at?: true\n    deleted_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_likesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_likes to aggregate.\n     */\n    where?: discussionboard_likesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_likes to fetch.\n     */\n    orderBy?: discussionboard_likesOrderByWithRelationInput | discussionboard_likesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_likesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_likes from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_likes.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_likes\n    **/\n    _count?: true | Discussionboard_likesCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_likesMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_likesMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_likesAggregateType<T extends Discussionboard_likesAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_likes]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_likes[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_likes[P]>\n  }\n\n\n\n\n  export type discussionboard_likesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_likesWhereInput\n    orderBy?: discussionboard_likesOrderByWithAggregationInput | discussionboard_likesOrderByWithAggregationInput[]\n    by: Discussionboard_likesScalarFieldEnum[] | Discussionboard_likesScalarFieldEnum\n    having?: discussionboard_likesScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_likesCountAggregateInputType | true\n    _min?: Discussionboard_likesMinAggregateInputType\n    _max?: Discussionboard_likesMaxAggregateInputType\n  }\n\n  export type Discussionboard_likesGroupByOutputType = {\n    id: string\n    user_id: string\n    post_id: string | null\n    comment_id: string | null\n    created_at: Date\n    deleted_at: Date | null\n    _count: Discussionboard_likesCountAggregateOutputType | null\n    _min: Discussionboard_likesMinAggregateOutputType | null\n    _max: Discussionboard_likesMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_likesGroupByPayload<T extends discussionboard_likesGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_likesGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_likesGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_likesGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_likesGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_likesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    created_at?: boolean\n    deleted_at?: boolean\n    user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    post?: boolean | discussionboard_likes$postArgs<ExtArgs>\n    comment?: boolean | discussionboard_likes$commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_likes\"]>\n\n  export type discussionboard_likesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    created_at?: boolean\n    deleted_at?: boolean\n    user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    post?: boolean | discussionboard_likes$postArgs<ExtArgs>\n    comment?: boolean | discussionboard_likes$commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_likes\"]>\n\n  export type discussionboard_likesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    created_at?: boolean\n    deleted_at?: boolean\n    user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    post?: boolean | discussionboard_likes$postArgs<ExtArgs>\n    comment?: boolean | discussionboard_likes$commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_likes\"]>\n\n  export type discussionboard_likesSelectScalar = {\n    id?: boolean\n    user_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    created_at?: boolean\n    deleted_at?: boolean\n  }\n\n  export type discussionboard_likesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"user_id\" | \"post_id\" | \"comment_id\" | \"created_at\" | \"deleted_at\", ExtArgs[\"result\"][\"discussionboard_likes\"]>\n  export type discussionboard_likesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    post?: boolean | discussionboard_likes$postArgs<ExtArgs>\n    comment?: boolean | discussionboard_likes$commentArgs<ExtArgs>\n  }\n  export type discussionboard_likesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    post?: boolean | discussionboard_likes$postArgs<ExtArgs>\n    comment?: boolean | discussionboard_likes$commentArgs<ExtArgs>\n  }\n  export type discussionboard_likesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    post?: boolean | discussionboard_likes$postArgs<ExtArgs>\n    comment?: boolean | discussionboard_likes$commentArgs<ExtArgs>\n  }\n\n  export type $discussionboard_likesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_likes\"\n    objects: {\n      user: Prisma.$discussionboard_userPayload<ExtArgs>\n      post: Prisma.$discussionboard_postPayload<ExtArgs> | null\n      comment: Prisma.$discussionboard_commentsPayload<ExtArgs> | null\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key - Implements entity uniqueness. Each like interaction is uniquely identified for precise auditing and event tracking.\n       */\n      id: string\n      /**\n       * User Foreign Key - Implements user traceability for interaction, mapping to discussionboard_user. Ensures which member created this like. For example, required when listing personal likes. Not nullable/required.\n       */\n      user_id: string\n      /**\n       * Polymorphic Foreign Key: Post - Implements which post the like is attached to (where applicable), mapping to discussionboard_post. NULL if the like is for a comment. Enforces atomic association. For example, a user clicking like on a post will set this field. Nullable for polymorphism.\n       */\n      post_id: string | null\n      /**\n       * Polymorphic Foreign Key: Comment - Implements comment interaction scope, mapping to discussionboard_comments. NULL if the like is for a post. For example, liking a comment sets this field. Supports normalization and polymorphic association.\n       */\n      comment_id: string | null\n      /**\n       * Creation Timestamp - Implements requirement for auditable, timestamped actions. When the like event was created. Ensures atomicity by being non-null and standard across events.\n       */\n      created_at: Date\n      /**\n       * Soft-delete Timestamp - Enables reversible removal of like event in compliance with audit logging. Null if like is active, set if removed. Maintains normalization; never used as a logical indicator, only as an event timestamp.\n       */\n      deleted_at: Date | null\n    }, ExtArgs[\"result\"][\"discussionboard_likes\"]>\n    composites: {}\n  }\n\n  type discussionboard_likesGetPayload<S extends boolean | null | undefined | discussionboard_likesDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_likesPayload, S>\n\n  type discussionboard_likesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_likesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_likesCountAggregateInputType | true\n    }\n\n  export interface discussionboard_likesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_likes'], meta: { name: 'discussionboard_likes' } }\n    /**\n     * Find zero or one Discussionboard_likes that matches the filter.\n     * @param {discussionboard_likesFindUniqueArgs} args - Arguments to find a Discussionboard_likes\n     * @example\n     * // Get one Discussionboard_likes\n     * const discussionboard_likes = await prisma.discussionboard_likes.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_likesFindUniqueArgs>(args: SelectSubset<T, discussionboard_likesFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_likesClient<$Result.GetResult<Prisma.$discussionboard_likesPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_likes that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_likesFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_likes\n     * @example\n     * // Get one Discussionboard_likes\n     * const discussionboard_likes = await prisma.discussionboard_likes.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_likesFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_likesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_likesClient<$Result.GetResult<Prisma.$discussionboard_likesPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_likes that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_likesFindFirstArgs} args - Arguments to find a Discussionboard_likes\n     * @example\n     * // Get one Discussionboard_likes\n     * const discussionboard_likes = await prisma.discussionboard_likes.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_likesFindFirstArgs>(args?: SelectSubset<T, discussionboard_likesFindFirstArgs<ExtArgs>>): Prisma__discussionboard_likesClient<$Result.GetResult<Prisma.$discussionboard_likesPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_likes that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_likesFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_likes\n     * @example\n     * // Get one Discussionboard_likes\n     * const discussionboard_likes = await prisma.discussionboard_likes.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_likesFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_likesFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_likesClient<$Result.GetResult<Prisma.$discussionboard_likesPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_likes that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_likesFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_likes\n     * const discussionboard_likes = await prisma.discussionboard_likes.findMany()\n     * \n     * // Get first 10 Discussionboard_likes\n     * const discussionboard_likes = await prisma.discussionboard_likes.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_likesWithIdOnly = await prisma.discussionboard_likes.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_likesFindManyArgs>(args?: SelectSubset<T, discussionboard_likesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_likesPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_likes.\n     * @param {discussionboard_likesCreateArgs} args - Arguments to create a Discussionboard_likes.\n     * @example\n     * // Create one Discussionboard_likes\n     * const Discussionboard_likes = await prisma.discussionboard_likes.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_likes\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_likesCreateArgs>(args: SelectSubset<T, discussionboard_likesCreateArgs<ExtArgs>>): Prisma__discussionboard_likesClient<$Result.GetResult<Prisma.$discussionboard_likesPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_likes.\n     * @param {discussionboard_likesCreateManyArgs} args - Arguments to create many Discussionboard_likes.\n     * @example\n     * // Create many Discussionboard_likes\n     * const discussionboard_likes = await prisma.discussionboard_likes.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_likesCreateManyArgs>(args?: SelectSubset<T, discussionboard_likesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_likes and returns the data saved in the database.\n     * @param {discussionboard_likesCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_likes.\n     * @example\n     * // Create many Discussionboard_likes\n     * const discussionboard_likes = await prisma.discussionboard_likes.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_likes and only return the `id`\n     * const discussionboard_likesWithIdOnly = await prisma.discussionboard_likes.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_likesCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_likesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_likesPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_likes.\n     * @param {discussionboard_likesDeleteArgs} args - Arguments to delete one Discussionboard_likes.\n     * @example\n     * // Delete one Discussionboard_likes\n     * const Discussionboard_likes = await prisma.discussionboard_likes.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_likes\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_likesDeleteArgs>(args: SelectSubset<T, discussionboard_likesDeleteArgs<ExtArgs>>): Prisma__discussionboard_likesClient<$Result.GetResult<Prisma.$discussionboard_likesPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_likes.\n     * @param {discussionboard_likesUpdateArgs} args - Arguments to update one Discussionboard_likes.\n     * @example\n     * // Update one Discussionboard_likes\n     * const discussionboard_likes = await prisma.discussionboard_likes.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_likesUpdateArgs>(args: SelectSubset<T, discussionboard_likesUpdateArgs<ExtArgs>>): Prisma__discussionboard_likesClient<$Result.GetResult<Prisma.$discussionboard_likesPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_likes.\n     * @param {discussionboard_likesDeleteManyArgs} args - Arguments to filter Discussionboard_likes to delete.\n     * @example\n     * // Delete a few Discussionboard_likes\n     * const { count } = await prisma.discussionboard_likes.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_likesDeleteManyArgs>(args?: SelectSubset<T, discussionboard_likesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_likes.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_likesUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_likes\n     * const discussionboard_likes = await prisma.discussionboard_likes.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_likesUpdateManyArgs>(args: SelectSubset<T, discussionboard_likesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_likes and returns the data updated in the database.\n     * @param {discussionboard_likesUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_likes.\n     * @example\n     * // Update many Discussionboard_likes\n     * const discussionboard_likes = await prisma.discussionboard_likes.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_likes and only return the `id`\n     * const discussionboard_likesWithIdOnly = await prisma.discussionboard_likes.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_likesUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_likesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_likesPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_likes.\n     * @param {discussionboard_likesUpsertArgs} args - Arguments to update or create a Discussionboard_likes.\n     * @example\n     * // Update or create a Discussionboard_likes\n     * const discussionboard_likes = await prisma.discussionboard_likes.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_likes\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_likes we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_likesUpsertArgs>(args: SelectSubset<T, discussionboard_likesUpsertArgs<ExtArgs>>): Prisma__discussionboard_likesClient<$Result.GetResult<Prisma.$discussionboard_likesPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_likes.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_likesCountArgs} args - Arguments to filter Discussionboard_likes to count.\n     * @example\n     * // Count the number of Discussionboard_likes\n     * const count = await prisma.discussionboard_likes.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_likes we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_likesCountArgs>(\n      args?: Subset<T, discussionboard_likesCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_likesCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_likes.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_likesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_likesAggregateArgs>(args: Subset<T, Discussionboard_likesAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_likesAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_likes.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_likesGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_likesGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_likesGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_likesGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_likesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_likesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_likes model\n   */\n  readonly fields: discussionboard_likesFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_likes.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_likesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    user<T extends discussionboard_userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_userDefaultArgs<ExtArgs>>): Prisma__discussionboard_userClient<$Result.GetResult<Prisma.$discussionboard_userPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    post<T extends discussionboard_likes$postArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_likes$postArgs<ExtArgs>>): Prisma__discussionboard_postClient<$Result.GetResult<Prisma.$discussionboard_postPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    comment<T extends discussionboard_likes$commentArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_likes$commentArgs<ExtArgs>>): Prisma__discussionboard_commentsClient<$Result.GetResult<Prisma.$discussionboard_commentsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_likes model\n   */\n  interface discussionboard_likesFieldRefs {\n    readonly id: FieldRef<\"discussionboard_likes\", 'String'>\n    readonly user_id: FieldRef<\"discussionboard_likes\", 'String'>\n    readonly post_id: FieldRef<\"discussionboard_likes\", 'String'>\n    readonly comment_id: FieldRef<\"discussionboard_likes\", 'String'>\n    readonly created_at: FieldRef<\"discussionboard_likes\", 'DateTime'>\n    readonly deleted_at: FieldRef<\"discussionboard_likes\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_likes findUnique\n   */\n  export type discussionboard_likesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_likes\n     */\n    select?: discussionboard_likesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_likes\n     */\n    omit?: discussionboard_likesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_likesInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_likes to fetch.\n     */\n    where: discussionboard_likesWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_likes findUniqueOrThrow\n   */\n  export type discussionboard_likesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_likes\n     */\n    select?: discussionboard_likesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_likes\n     */\n    omit?: discussionboard_likesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_likesInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_likes to fetch.\n     */\n    where: discussionboard_likesWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_likes findFirst\n   */\n  export type discussionboard_likesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_likes\n     */\n    select?: discussionboard_likesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_likes\n     */\n    omit?: discussionboard_likesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_likesInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_likes to fetch.\n     */\n    where?: discussionboard_likesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_likes to fetch.\n     */\n    orderBy?: discussionboard_likesOrderByWithRelationInput | discussionboard_likesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_likes.\n     */\n    cursor?: discussionboard_likesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_likes from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_likes.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_likes.\n     */\n    distinct?: Discussionboard_likesScalarFieldEnum | Discussionboard_likesScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_likes findFirstOrThrow\n   */\n  export type discussionboard_likesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_likes\n     */\n    select?: discussionboard_likesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_likes\n     */\n    omit?: discussionboard_likesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_likesInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_likes to fetch.\n     */\n    where?: discussionboard_likesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_likes to fetch.\n     */\n    orderBy?: discussionboard_likesOrderByWithRelationInput | discussionboard_likesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_likes.\n     */\n    cursor?: discussionboard_likesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_likes from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_likes.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_likes.\n     */\n    distinct?: Discussionboard_likesScalarFieldEnum | Discussionboard_likesScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_likes findMany\n   */\n  export type discussionboard_likesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_likes\n     */\n    select?: discussionboard_likesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_likes\n     */\n    omit?: discussionboard_likesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_likesInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_likes to fetch.\n     */\n    where?: discussionboard_likesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_likes to fetch.\n     */\n    orderBy?: discussionboard_likesOrderByWithRelationInput | discussionboard_likesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_likes.\n     */\n    cursor?: discussionboard_likesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_likes from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_likes.\n     */\n    skip?: number\n    distinct?: Discussionboard_likesScalarFieldEnum | Discussionboard_likesScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_likes create\n   */\n  export type discussionboard_likesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_likes\n     */\n    select?: discussionboard_likesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_likes\n     */\n    omit?: discussionboard_likesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_likesInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_likes.\n     */\n    data: XOR<discussionboard_likesCreateInput, discussionboard_likesUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_likes createMany\n   */\n  export type discussionboard_likesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_likes.\n     */\n    data: discussionboard_likesCreateManyInput | discussionboard_likesCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_likes createManyAndReturn\n   */\n  export type discussionboard_likesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_likes\n     */\n    select?: discussionboard_likesSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_likes\n     */\n    omit?: discussionboard_likesOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_likes.\n     */\n    data: discussionboard_likesCreateManyInput | discussionboard_likesCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_likesIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_likes update\n   */\n  export type discussionboard_likesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_likes\n     */\n    select?: discussionboard_likesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_likes\n     */\n    omit?: discussionboard_likesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_likesInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_likes.\n     */\n    data: XOR<discussionboard_likesUpdateInput, discussionboard_likesUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_likes to update.\n     */\n    where: discussionboard_likesWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_likes updateMany\n   */\n  export type discussionboard_likesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_likes.\n     */\n    data: XOR<discussionboard_likesUpdateManyMutationInput, discussionboard_likesUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_likes to update\n     */\n    where?: discussionboard_likesWhereInput\n    /**\n     * Limit how many discussionboard_likes to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_likes updateManyAndReturn\n   */\n  export type discussionboard_likesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_likes\n     */\n    select?: discussionboard_likesSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_likes\n     */\n    omit?: discussionboard_likesOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_likes.\n     */\n    data: XOR<discussionboard_likesUpdateManyMutationInput, discussionboard_likesUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_likes to update\n     */\n    where?: discussionboard_likesWhereInput\n    /**\n     * Limit how many discussionboard_likes to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_likesIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_likes upsert\n   */\n  export type discussionboard_likesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_likes\n     */\n    select?: discussionboard_likesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_likes\n     */\n    omit?: discussionboard_likesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_likesInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_likes to update in case it exists.\n     */\n    where: discussionboard_likesWhereUniqueInput\n    /**\n     * In case the discussionboard_likes found by the `where` argument doesn't exist, create a new discussionboard_likes with this data.\n     */\n    create: XOR<discussionboard_likesCreateInput, discussionboard_likesUncheckedCreateInput>\n    /**\n     * In case the discussionboard_likes was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_likesUpdateInput, discussionboard_likesUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_likes delete\n   */\n  export type discussionboard_likesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_likes\n     */\n    select?: discussionboard_likesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_likes\n     */\n    omit?: discussionboard_likesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_likesInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_likes to delete.\n     */\n    where: discussionboard_likesWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_likes deleteMany\n   */\n  export type discussionboard_likesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_likes to delete\n     */\n    where?: discussionboard_likesWhereInput\n    /**\n     * Limit how many discussionboard_likes to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_likes.post\n   */\n  export type discussionboard_likes$postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post\n     */\n    select?: discussionboard_postSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post\n     */\n    omit?: discussionboard_postOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_postInclude<ExtArgs> | null\n    where?: discussionboard_postWhereInput\n  }\n\n  /**\n   * discussionboard_likes.comment\n   */\n  export type discussionboard_likes$commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comments\n     */\n    select?: discussionboard_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comments\n     */\n    omit?: discussionboard_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_commentsInclude<ExtArgs> | null\n    where?: discussionboard_commentsWhereInput\n  }\n\n  /**\n   * discussionboard_likes without action\n   */\n  export type discussionboard_likesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_likes\n     */\n    select?: discussionboard_likesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_likes\n     */\n    omit?: discussionboard_likesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_likesInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_reports\n   */\n\n  export type AggregateDiscussionboard_reports = {\n    _count: Discussionboard_reportsCountAggregateOutputType | null\n    _min: Discussionboard_reportsMinAggregateOutputType | null\n    _max: Discussionboard_reportsMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_reportsMinAggregateOutputType = {\n    id: string | null\n    user_id: string | null\n    post_id: string | null\n    comment_id: string | null\n    reason_code: string | null\n    reason_details: string | null\n    created_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Discussionboard_reportsMaxAggregateOutputType = {\n    id: string | null\n    user_id: string | null\n    post_id: string | null\n    comment_id: string | null\n    reason_code: string | null\n    reason_details: string | null\n    created_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Discussionboard_reportsCountAggregateOutputType = {\n    id: number\n    user_id: number\n    post_id: number\n    comment_id: number\n    reason_code: number\n    reason_details: number\n    created_at: number\n    deleted_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_reportsMinAggregateInputType = {\n    id?: true\n    user_id?: true\n    post_id?: true\n    comment_id?: true\n    reason_code?: true\n    reason_details?: true\n    created_at?: true\n    deleted_at?: true\n  }\n\n  export type Discussionboard_reportsMaxAggregateInputType = {\n    id?: true\n    user_id?: true\n    post_id?: true\n    comment_id?: true\n    reason_code?: true\n    reason_details?: true\n    created_at?: true\n    deleted_at?: true\n  }\n\n  export type Discussionboard_reportsCountAggregateInputType = {\n    id?: true\n    user_id?: true\n    post_id?: true\n    comment_id?: true\n    reason_code?: true\n    reason_details?: true\n    created_at?: true\n    deleted_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_reportsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_reports to aggregate.\n     */\n    where?: discussionboard_reportsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_reports to fetch.\n     */\n    orderBy?: discussionboard_reportsOrderByWithRelationInput | discussionboard_reportsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_reportsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_reports from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_reports.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_reports\n    **/\n    _count?: true | Discussionboard_reportsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_reportsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_reportsMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_reportsAggregateType<T extends Discussionboard_reportsAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_reports]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_reports[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_reports[P]>\n  }\n\n\n\n\n  export type discussionboard_reportsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_reportsWhereInput\n    orderBy?: discussionboard_reportsOrderByWithAggregationInput | discussionboard_reportsOrderByWithAggregationInput[]\n    by: Discussionboard_reportsScalarFieldEnum[] | Discussionboard_reportsScalarFieldEnum\n    having?: discussionboard_reportsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_reportsCountAggregateInputType | true\n    _min?: Discussionboard_reportsMinAggregateInputType\n    _max?: Discussionboard_reportsMaxAggregateInputType\n  }\n\n  export type Discussionboard_reportsGroupByOutputType = {\n    id: string\n    user_id: string\n    post_id: string | null\n    comment_id: string | null\n    reason_code: string\n    reason_details: string | null\n    created_at: Date\n    deleted_at: Date | null\n    _count: Discussionboard_reportsCountAggregateOutputType | null\n    _min: Discussionboard_reportsMinAggregateOutputType | null\n    _max: Discussionboard_reportsMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_reportsGroupByPayload<T extends discussionboard_reportsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_reportsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_reportsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_reportsGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_reportsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_reportsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    reason_code?: boolean\n    reason_details?: boolean\n    created_at?: boolean\n    deleted_at?: boolean\n    user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    post?: boolean | discussionboard_reports$postArgs<ExtArgs>\n    comment?: boolean | discussionboard_reports$commentArgs<ExtArgs>\n    discussionboard_report_review?: boolean | discussionboard_reports$discussionboard_report_reviewArgs<ExtArgs>\n    _count?: boolean | Discussionboard_reportsCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_reports\"]>\n\n  export type discussionboard_reportsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    reason_code?: boolean\n    reason_details?: boolean\n    created_at?: boolean\n    deleted_at?: boolean\n    user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    post?: boolean | discussionboard_reports$postArgs<ExtArgs>\n    comment?: boolean | discussionboard_reports$commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_reports\"]>\n\n  export type discussionboard_reportsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    reason_code?: boolean\n    reason_details?: boolean\n    created_at?: boolean\n    deleted_at?: boolean\n    user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    post?: boolean | discussionboard_reports$postArgs<ExtArgs>\n    comment?: boolean | discussionboard_reports$commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_reports\"]>\n\n  export type discussionboard_reportsSelectScalar = {\n    id?: boolean\n    user_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    reason_code?: boolean\n    reason_details?: boolean\n    created_at?: boolean\n    deleted_at?: boolean\n  }\n\n  export type discussionboard_reportsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"user_id\" | \"post_id\" | \"comment_id\" | \"reason_code\" | \"reason_details\" | \"created_at\" | \"deleted_at\", ExtArgs[\"result\"][\"discussionboard_reports\"]>\n  export type discussionboard_reportsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    post?: boolean | discussionboard_reports$postArgs<ExtArgs>\n    comment?: boolean | discussionboard_reports$commentArgs<ExtArgs>\n    discussionboard_report_review?: boolean | discussionboard_reports$discussionboard_report_reviewArgs<ExtArgs>\n    _count?: boolean | Discussionboard_reportsCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_reportsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    post?: boolean | discussionboard_reports$postArgs<ExtArgs>\n    comment?: boolean | discussionboard_reports$commentArgs<ExtArgs>\n  }\n  export type discussionboard_reportsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    post?: boolean | discussionboard_reports$postArgs<ExtArgs>\n    comment?: boolean | discussionboard_reports$commentArgs<ExtArgs>\n  }\n\n  export type $discussionboard_reportsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_reports\"\n    objects: {\n      user: Prisma.$discussionboard_userPayload<ExtArgs>\n      post: Prisma.$discussionboard_postPayload<ExtArgs> | null\n      comment: Prisma.$discussionboard_commentsPayload<ExtArgs> | null\n      discussionboard_report_review: Prisma.$discussionboard_report_reviewPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key - Uniquely identifies each report for compliance, auditing, moderation, and traceability.\n       */\n      id: string\n      /**\n       * Reporter Foreign Key - References the user (from discussionboard_user) who submitted the report. Maintains accountability and supports user-based moderation analytics. Not nullable; always required.\n       */\n      user_id: string\n      /**\n       * Polymorphic Foreign Key: Post - Identifies the post that is being reported (if applicable). NULL if report targets a comment. Ensures correct, strictly normalized associativity, and prevents overlap with comment_id.\n       */\n      post_id: string | null\n      /**\n       * Polymorphic Foreign Key: Comment - Identifies the comment being reported (if any). NULL if post is targeted. Supports polymorphic reporting of both content types. Enforces correct normalization.\n       */\n      comment_id: string | null\n      /**\n       * Short Reason Code - Implements requirements for capturing structured event context (e.g. 'spam', 'abuse', 'off-topic'). Enables filtering and workflow logic. Follows a pre-set value list handled in application/business logic. 3NF maintained as reason text is never duplicated (codes only here).\n       */\n      reason_code: string\n      /**\n       * Detailed Reason (optional) - Implements reporting context capture for case auditing, moderation analytics, and transparency. Allows user to enter details or evidence. Nullable for cases where only the code is needed.\n       */\n      reason_details: string | null\n      /**\n       * Report Creation Timestamp - Indicates when the report was made. Implements audit trail (requirement: 3.9 and moderation review within 24hr SLA). Non-null, ensures each report is audited with precise event time.\n       */\n      created_at: Date\n      /**\n       * Soft-delete Timestamp - Enables soft-removal (not physical deletion) of reports for moderation or review compliance. Null if active, non-null when deleted. Ensures normalization and auditable workflow.\n       */\n      deleted_at: Date | null\n    }, ExtArgs[\"result\"][\"discussionboard_reports\"]>\n    composites: {}\n  }\n\n  type discussionboard_reportsGetPayload<S extends boolean | null | undefined | discussionboard_reportsDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_reportsPayload, S>\n\n  type discussionboard_reportsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_reportsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_reportsCountAggregateInputType | true\n    }\n\n  export interface discussionboard_reportsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_reports'], meta: { name: 'discussionboard_reports' } }\n    /**\n     * Find zero or one Discussionboard_reports that matches the filter.\n     * @param {discussionboard_reportsFindUniqueArgs} args - Arguments to find a Discussionboard_reports\n     * @example\n     * // Get one Discussionboard_reports\n     * const discussionboard_reports = await prisma.discussionboard_reports.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_reportsFindUniqueArgs>(args: SelectSubset<T, discussionboard_reportsFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_reportsClient<$Result.GetResult<Prisma.$discussionboard_reportsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_reports that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_reportsFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_reports\n     * @example\n     * // Get one Discussionboard_reports\n     * const discussionboard_reports = await prisma.discussionboard_reports.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_reportsFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_reportsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_reportsClient<$Result.GetResult<Prisma.$discussionboard_reportsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_reports that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_reportsFindFirstArgs} args - Arguments to find a Discussionboard_reports\n     * @example\n     * // Get one Discussionboard_reports\n     * const discussionboard_reports = await prisma.discussionboard_reports.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_reportsFindFirstArgs>(args?: SelectSubset<T, discussionboard_reportsFindFirstArgs<ExtArgs>>): Prisma__discussionboard_reportsClient<$Result.GetResult<Prisma.$discussionboard_reportsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_reports that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_reportsFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_reports\n     * @example\n     * // Get one Discussionboard_reports\n     * const discussionboard_reports = await prisma.discussionboard_reports.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_reportsFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_reportsFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_reportsClient<$Result.GetResult<Prisma.$discussionboard_reportsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_reports that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_reportsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_reports\n     * const discussionboard_reports = await prisma.discussionboard_reports.findMany()\n     * \n     * // Get first 10 Discussionboard_reports\n     * const discussionboard_reports = await prisma.discussionboard_reports.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_reportsWithIdOnly = await prisma.discussionboard_reports.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_reportsFindManyArgs>(args?: SelectSubset<T, discussionboard_reportsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_reportsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_reports.\n     * @param {discussionboard_reportsCreateArgs} args - Arguments to create a Discussionboard_reports.\n     * @example\n     * // Create one Discussionboard_reports\n     * const Discussionboard_reports = await prisma.discussionboard_reports.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_reports\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_reportsCreateArgs>(args: SelectSubset<T, discussionboard_reportsCreateArgs<ExtArgs>>): Prisma__discussionboard_reportsClient<$Result.GetResult<Prisma.$discussionboard_reportsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_reports.\n     * @param {discussionboard_reportsCreateManyArgs} args - Arguments to create many Discussionboard_reports.\n     * @example\n     * // Create many Discussionboard_reports\n     * const discussionboard_reports = await prisma.discussionboard_reports.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_reportsCreateManyArgs>(args?: SelectSubset<T, discussionboard_reportsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_reports and returns the data saved in the database.\n     * @param {discussionboard_reportsCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_reports.\n     * @example\n     * // Create many Discussionboard_reports\n     * const discussionboard_reports = await prisma.discussionboard_reports.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_reports and only return the `id`\n     * const discussionboard_reportsWithIdOnly = await prisma.discussionboard_reports.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_reportsCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_reportsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_reportsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_reports.\n     * @param {discussionboard_reportsDeleteArgs} args - Arguments to delete one Discussionboard_reports.\n     * @example\n     * // Delete one Discussionboard_reports\n     * const Discussionboard_reports = await prisma.discussionboard_reports.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_reports\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_reportsDeleteArgs>(args: SelectSubset<T, discussionboard_reportsDeleteArgs<ExtArgs>>): Prisma__discussionboard_reportsClient<$Result.GetResult<Prisma.$discussionboard_reportsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_reports.\n     * @param {discussionboard_reportsUpdateArgs} args - Arguments to update one Discussionboard_reports.\n     * @example\n     * // Update one Discussionboard_reports\n     * const discussionboard_reports = await prisma.discussionboard_reports.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_reportsUpdateArgs>(args: SelectSubset<T, discussionboard_reportsUpdateArgs<ExtArgs>>): Prisma__discussionboard_reportsClient<$Result.GetResult<Prisma.$discussionboard_reportsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_reports.\n     * @param {discussionboard_reportsDeleteManyArgs} args - Arguments to filter Discussionboard_reports to delete.\n     * @example\n     * // Delete a few Discussionboard_reports\n     * const { count } = await prisma.discussionboard_reports.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_reportsDeleteManyArgs>(args?: SelectSubset<T, discussionboard_reportsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_reports.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_reportsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_reports\n     * const discussionboard_reports = await prisma.discussionboard_reports.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_reportsUpdateManyArgs>(args: SelectSubset<T, discussionboard_reportsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_reports and returns the data updated in the database.\n     * @param {discussionboard_reportsUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_reports.\n     * @example\n     * // Update many Discussionboard_reports\n     * const discussionboard_reports = await prisma.discussionboard_reports.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_reports and only return the `id`\n     * const discussionboard_reportsWithIdOnly = await prisma.discussionboard_reports.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_reportsUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_reportsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_reportsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_reports.\n     * @param {discussionboard_reportsUpsertArgs} args - Arguments to update or create a Discussionboard_reports.\n     * @example\n     * // Update or create a Discussionboard_reports\n     * const discussionboard_reports = await prisma.discussionboard_reports.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_reports\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_reports we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_reportsUpsertArgs>(args: SelectSubset<T, discussionboard_reportsUpsertArgs<ExtArgs>>): Prisma__discussionboard_reportsClient<$Result.GetResult<Prisma.$discussionboard_reportsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_reports.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_reportsCountArgs} args - Arguments to filter Discussionboard_reports to count.\n     * @example\n     * // Count the number of Discussionboard_reports\n     * const count = await prisma.discussionboard_reports.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_reports we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_reportsCountArgs>(\n      args?: Subset<T, discussionboard_reportsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_reportsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_reports.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_reportsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_reportsAggregateArgs>(args: Subset<T, Discussionboard_reportsAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_reportsAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_reports.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_reportsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_reportsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_reportsGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_reportsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_reportsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_reportsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_reports model\n   */\n  readonly fields: discussionboard_reportsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_reports.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_reportsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    user<T extends discussionboard_userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_userDefaultArgs<ExtArgs>>): Prisma__discussionboard_userClient<$Result.GetResult<Prisma.$discussionboard_userPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    post<T extends discussionboard_reports$postArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_reports$postArgs<ExtArgs>>): Prisma__discussionboard_postClient<$Result.GetResult<Prisma.$discussionboard_postPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    comment<T extends discussionboard_reports$commentArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_reports$commentArgs<ExtArgs>>): Prisma__discussionboard_commentsClient<$Result.GetResult<Prisma.$discussionboard_commentsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    discussionboard_report_review<T extends discussionboard_reports$discussionboard_report_reviewArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_reports$discussionboard_report_reviewArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_report_reviewPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_reports model\n   */\n  interface discussionboard_reportsFieldRefs {\n    readonly id: FieldRef<\"discussionboard_reports\", 'String'>\n    readonly user_id: FieldRef<\"discussionboard_reports\", 'String'>\n    readonly post_id: FieldRef<\"discussionboard_reports\", 'String'>\n    readonly comment_id: FieldRef<\"discussionboard_reports\", 'String'>\n    readonly reason_code: FieldRef<\"discussionboard_reports\", 'String'>\n    readonly reason_details: FieldRef<\"discussionboard_reports\", 'String'>\n    readonly created_at: FieldRef<\"discussionboard_reports\", 'DateTime'>\n    readonly deleted_at: FieldRef<\"discussionboard_reports\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_reports findUnique\n   */\n  export type discussionboard_reportsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_reports\n     */\n    select?: discussionboard_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_reports\n     */\n    omit?: discussionboard_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_reportsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_reports to fetch.\n     */\n    where: discussionboard_reportsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_reports findUniqueOrThrow\n   */\n  export type discussionboard_reportsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_reports\n     */\n    select?: discussionboard_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_reports\n     */\n    omit?: discussionboard_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_reportsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_reports to fetch.\n     */\n    where: discussionboard_reportsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_reports findFirst\n   */\n  export type discussionboard_reportsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_reports\n     */\n    select?: discussionboard_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_reports\n     */\n    omit?: discussionboard_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_reportsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_reports to fetch.\n     */\n    where?: discussionboard_reportsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_reports to fetch.\n     */\n    orderBy?: discussionboard_reportsOrderByWithRelationInput | discussionboard_reportsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_reports.\n     */\n    cursor?: discussionboard_reportsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_reports from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_reports.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_reports.\n     */\n    distinct?: Discussionboard_reportsScalarFieldEnum | Discussionboard_reportsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_reports findFirstOrThrow\n   */\n  export type discussionboard_reportsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_reports\n     */\n    select?: discussionboard_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_reports\n     */\n    omit?: discussionboard_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_reportsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_reports to fetch.\n     */\n    where?: discussionboard_reportsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_reports to fetch.\n     */\n    orderBy?: discussionboard_reportsOrderByWithRelationInput | discussionboard_reportsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_reports.\n     */\n    cursor?: discussionboard_reportsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_reports from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_reports.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_reports.\n     */\n    distinct?: Discussionboard_reportsScalarFieldEnum | Discussionboard_reportsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_reports findMany\n   */\n  export type discussionboard_reportsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_reports\n     */\n    select?: discussionboard_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_reports\n     */\n    omit?: discussionboard_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_reportsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_reports to fetch.\n     */\n    where?: discussionboard_reportsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_reports to fetch.\n     */\n    orderBy?: discussionboard_reportsOrderByWithRelationInput | discussionboard_reportsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_reports.\n     */\n    cursor?: discussionboard_reportsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_reports from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_reports.\n     */\n    skip?: number\n    distinct?: Discussionboard_reportsScalarFieldEnum | Discussionboard_reportsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_reports create\n   */\n  export type discussionboard_reportsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_reports\n     */\n    select?: discussionboard_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_reports\n     */\n    omit?: discussionboard_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_reportsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_reports.\n     */\n    data: XOR<discussionboard_reportsCreateInput, discussionboard_reportsUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_reports createMany\n   */\n  export type discussionboard_reportsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_reports.\n     */\n    data: discussionboard_reportsCreateManyInput | discussionboard_reportsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_reports createManyAndReturn\n   */\n  export type discussionboard_reportsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_reports\n     */\n    select?: discussionboard_reportsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_reports\n     */\n    omit?: discussionboard_reportsOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_reports.\n     */\n    data: discussionboard_reportsCreateManyInput | discussionboard_reportsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_reportsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_reports update\n   */\n  export type discussionboard_reportsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_reports\n     */\n    select?: discussionboard_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_reports\n     */\n    omit?: discussionboard_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_reportsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_reports.\n     */\n    data: XOR<discussionboard_reportsUpdateInput, discussionboard_reportsUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_reports to update.\n     */\n    where: discussionboard_reportsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_reports updateMany\n   */\n  export type discussionboard_reportsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_reports.\n     */\n    data: XOR<discussionboard_reportsUpdateManyMutationInput, discussionboard_reportsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_reports to update\n     */\n    where?: discussionboard_reportsWhereInput\n    /**\n     * Limit how many discussionboard_reports to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_reports updateManyAndReturn\n   */\n  export type discussionboard_reportsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_reports\n     */\n    select?: discussionboard_reportsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_reports\n     */\n    omit?: discussionboard_reportsOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_reports.\n     */\n    data: XOR<discussionboard_reportsUpdateManyMutationInput, discussionboard_reportsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_reports to update\n     */\n    where?: discussionboard_reportsWhereInput\n    /**\n     * Limit how many discussionboard_reports to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_reportsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_reports upsert\n   */\n  export type discussionboard_reportsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_reports\n     */\n    select?: discussionboard_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_reports\n     */\n    omit?: discussionboard_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_reportsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_reports to update in case it exists.\n     */\n    where: discussionboard_reportsWhereUniqueInput\n    /**\n     * In case the discussionboard_reports found by the `where` argument doesn't exist, create a new discussionboard_reports with this data.\n     */\n    create: XOR<discussionboard_reportsCreateInput, discussionboard_reportsUncheckedCreateInput>\n    /**\n     * In case the discussionboard_reports was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_reportsUpdateInput, discussionboard_reportsUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_reports delete\n   */\n  export type discussionboard_reportsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_reports\n     */\n    select?: discussionboard_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_reports\n     */\n    omit?: discussionboard_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_reportsInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_reports to delete.\n     */\n    where: discussionboard_reportsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_reports deleteMany\n   */\n  export type discussionboard_reportsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_reports to delete\n     */\n    where?: discussionboard_reportsWhereInput\n    /**\n     * Limit how many discussionboard_reports to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_reports.post\n   */\n  export type discussionboard_reports$postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post\n     */\n    select?: discussionboard_postSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post\n     */\n    omit?: discussionboard_postOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_postInclude<ExtArgs> | null\n    where?: discussionboard_postWhereInput\n  }\n\n  /**\n   * discussionboard_reports.comment\n   */\n  export type discussionboard_reports$commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comments\n     */\n    select?: discussionboard_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comments\n     */\n    omit?: discussionboard_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_commentsInclude<ExtArgs> | null\n    where?: discussionboard_commentsWhereInput\n  }\n\n  /**\n   * discussionboard_reports.discussionboard_report_review\n   */\n  export type discussionboard_reports$discussionboard_report_reviewArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_report_review\n     */\n    select?: discussionboard_report_reviewSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_report_review\n     */\n    omit?: discussionboard_report_reviewOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_report_reviewInclude<ExtArgs> | null\n    where?: discussionboard_report_reviewWhereInput\n    orderBy?: discussionboard_report_reviewOrderByWithRelationInput | discussionboard_report_reviewOrderByWithRelationInput[]\n    cursor?: discussionboard_report_reviewWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_report_reviewScalarFieldEnum | Discussionboard_report_reviewScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_reports without action\n   */\n  export type discussionboard_reportsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_reports\n     */\n    select?: discussionboard_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_reports\n     */\n    omit?: discussionboard_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_reportsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_moderation_action\n   */\n\n  export type AggregateDiscussionboard_moderation_action = {\n    _count: Discussionboard_moderation_actionCountAggregateOutputType | null\n    _min: Discussionboard_moderation_actionMinAggregateOutputType | null\n    _max: Discussionboard_moderation_actionMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_moderation_actionMinAggregateOutputType = {\n    id: string | null\n    actor_id: string | null\n    target_user_id: string | null\n    post_id: string | null\n    comment_id: string | null\n    action_type: string | null\n    reason: string | null\n    created_at: Date | null\n  }\n\n  export type Discussionboard_moderation_actionMaxAggregateOutputType = {\n    id: string | null\n    actor_id: string | null\n    target_user_id: string | null\n    post_id: string | null\n    comment_id: string | null\n    action_type: string | null\n    reason: string | null\n    created_at: Date | null\n  }\n\n  export type Discussionboard_moderation_actionCountAggregateOutputType = {\n    id: number\n    actor_id: number\n    target_user_id: number\n    post_id: number\n    comment_id: number\n    action_type: number\n    reason: number\n    created_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_moderation_actionMinAggregateInputType = {\n    id?: true\n    actor_id?: true\n    target_user_id?: true\n    post_id?: true\n    comment_id?: true\n    action_type?: true\n    reason?: true\n    created_at?: true\n  }\n\n  export type Discussionboard_moderation_actionMaxAggregateInputType = {\n    id?: true\n    actor_id?: true\n    target_user_id?: true\n    post_id?: true\n    comment_id?: true\n    action_type?: true\n    reason?: true\n    created_at?: true\n  }\n\n  export type Discussionboard_moderation_actionCountAggregateInputType = {\n    id?: true\n    actor_id?: true\n    target_user_id?: true\n    post_id?: true\n    comment_id?: true\n    action_type?: true\n    reason?: true\n    created_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_moderation_actionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_moderation_action to aggregate.\n     */\n    where?: discussionboard_moderation_actionWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_moderation_actions to fetch.\n     */\n    orderBy?: discussionboard_moderation_actionOrderByWithRelationInput | discussionboard_moderation_actionOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_moderation_actionWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_moderation_actions from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_moderation_actions.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_moderation_actions\n    **/\n    _count?: true | Discussionboard_moderation_actionCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_moderation_actionMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_moderation_actionMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_moderation_actionAggregateType<T extends Discussionboard_moderation_actionAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_moderation_action]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_moderation_action[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_moderation_action[P]>\n  }\n\n\n\n\n  export type discussionboard_moderation_actionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_moderation_actionWhereInput\n    orderBy?: discussionboard_moderation_actionOrderByWithAggregationInput | discussionboard_moderation_actionOrderByWithAggregationInput[]\n    by: Discussionboard_moderation_actionScalarFieldEnum[] | Discussionboard_moderation_actionScalarFieldEnum\n    having?: discussionboard_moderation_actionScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_moderation_actionCountAggregateInputType | true\n    _min?: Discussionboard_moderation_actionMinAggregateInputType\n    _max?: Discussionboard_moderation_actionMaxAggregateInputType\n  }\n\n  export type Discussionboard_moderation_actionGroupByOutputType = {\n    id: string\n    actor_id: string\n    target_user_id: string\n    post_id: string | null\n    comment_id: string | null\n    action_type: string\n    reason: string\n    created_at: Date\n    _count: Discussionboard_moderation_actionCountAggregateOutputType | null\n    _min: Discussionboard_moderation_actionMinAggregateOutputType | null\n    _max: Discussionboard_moderation_actionMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_moderation_actionGroupByPayload<T extends discussionboard_moderation_actionGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_moderation_actionGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_moderation_actionGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_moderation_actionGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_moderation_actionGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_moderation_actionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    actor_id?: boolean\n    target_user_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    action_type?: boolean\n    reason?: boolean\n    created_at?: boolean\n    actor?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    target_user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    moderated_post?: boolean | discussionboard_moderation_action$moderated_postArgs<ExtArgs>\n    moderated_comment?: boolean | discussionboard_moderation_action$moderated_commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_moderation_action\"]>\n\n  export type discussionboard_moderation_actionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    actor_id?: boolean\n    target_user_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    action_type?: boolean\n    reason?: boolean\n    created_at?: boolean\n    actor?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    target_user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    moderated_post?: boolean | discussionboard_moderation_action$moderated_postArgs<ExtArgs>\n    moderated_comment?: boolean | discussionboard_moderation_action$moderated_commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_moderation_action\"]>\n\n  export type discussionboard_moderation_actionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    actor_id?: boolean\n    target_user_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    action_type?: boolean\n    reason?: boolean\n    created_at?: boolean\n    actor?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    target_user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    moderated_post?: boolean | discussionboard_moderation_action$moderated_postArgs<ExtArgs>\n    moderated_comment?: boolean | discussionboard_moderation_action$moderated_commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_moderation_action\"]>\n\n  export type discussionboard_moderation_actionSelectScalar = {\n    id?: boolean\n    actor_id?: boolean\n    target_user_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    action_type?: boolean\n    reason?: boolean\n    created_at?: boolean\n  }\n\n  export type discussionboard_moderation_actionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"actor_id\" | \"target_user_id\" | \"post_id\" | \"comment_id\" | \"action_type\" | \"reason\" | \"created_at\", ExtArgs[\"result\"][\"discussionboard_moderation_action\"]>\n  export type discussionboard_moderation_actionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    actor?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    target_user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    moderated_post?: boolean | discussionboard_moderation_action$moderated_postArgs<ExtArgs>\n    moderated_comment?: boolean | discussionboard_moderation_action$moderated_commentArgs<ExtArgs>\n  }\n  export type discussionboard_moderation_actionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    actor?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    target_user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    moderated_post?: boolean | discussionboard_moderation_action$moderated_postArgs<ExtArgs>\n    moderated_comment?: boolean | discussionboard_moderation_action$moderated_commentArgs<ExtArgs>\n  }\n  export type discussionboard_moderation_actionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    actor?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    target_user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    moderated_post?: boolean | discussionboard_moderation_action$moderated_postArgs<ExtArgs>\n    moderated_comment?: boolean | discussionboard_moderation_action$moderated_commentArgs<ExtArgs>\n  }\n\n  export type $discussionboard_moderation_actionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_moderation_action\"\n    objects: {\n      actor: Prisma.$discussionboard_userPayload<ExtArgs>\n      target_user: Prisma.$discussionboard_userPayload<ExtArgs>\n      moderated_post: Prisma.$discussionboard_postPayload<ExtArgs> | null\n      moderated_comment: Prisma.$discussionboard_commentsPayload<ExtArgs> | null\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * [Primary key] - Standard internal identifier. Uniquely identifies each moderation action; ensures atomic representation of each occurrence.\n       */\n      id: string\n      /**\n       * [Action originator] - Implements the 'who performed the action' requirement. References the moderator or admin user account executing the moderation. Ensures normalization by linking to user, not duplicating actor data. For example, when moderator #1234 deletes a comment, this field is #1234.\n       */\n      actor_id: string\n      /**\n       * [User targeted] - Fulfills the 'target of moderation' tracking requirement. Links to the affected user account (e.g., reported member). Ensures single source of truth for user data and enables traceability. For example, for a ban of user X, this references user X.\n       */\n      target_user_id: string\n      /**\n       * [Affected post] - Implements moderation linkage for post-level actions. References the post if this action affects a specific post. Normalization preserved (nullable, as not all actions are post-related). For example, deleting a post links here; issuing a ban does not.\n       */\n      post_id: string | null\n      /**\n       * [Affected comment] - Moderation linkage to comment. References the comment if the action is on a specific comment. Kept nullable to preserve 3NF and flexibility. For example, hiding a comment references its id here.\n       */\n      comment_id: string | null\n      /**\n       * [Action type] - Implements requirement to enumerate distinct moderation activities. Type of moderation: e.g., 'delete_post', 'hide_comment', etc. Maintains normalization.\n       */\n      action_type: string\n      /**\n       * [Reason] - Fulfills rationale for moderation. Stores moderator/admin's reason/comment. Ensures accountability, searchable, used for appeals.\n       */\n      reason: string\n      /**\n       * [Timestamp] - Implements time-based audit tracking. True creation time of the action record, guarantees traceability.\n       */\n      created_at: Date\n    }, ExtArgs[\"result\"][\"discussionboard_moderation_action\"]>\n    composites: {}\n  }\n\n  type discussionboard_moderation_actionGetPayload<S extends boolean | null | undefined | discussionboard_moderation_actionDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_moderation_actionPayload, S>\n\n  type discussionboard_moderation_actionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_moderation_actionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_moderation_actionCountAggregateInputType | true\n    }\n\n  export interface discussionboard_moderation_actionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_moderation_action'], meta: { name: 'discussionboard_moderation_action' } }\n    /**\n     * Find zero or one Discussionboard_moderation_action that matches the filter.\n     * @param {discussionboard_moderation_actionFindUniqueArgs} args - Arguments to find a Discussionboard_moderation_action\n     * @example\n     * // Get one Discussionboard_moderation_action\n     * const discussionboard_moderation_action = await prisma.discussionboard_moderation_action.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_moderation_actionFindUniqueArgs>(args: SelectSubset<T, discussionboard_moderation_actionFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_moderation_actionClient<$Result.GetResult<Prisma.$discussionboard_moderation_actionPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_moderation_action that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_moderation_actionFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_moderation_action\n     * @example\n     * // Get one Discussionboard_moderation_action\n     * const discussionboard_moderation_action = await prisma.discussionboard_moderation_action.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_moderation_actionFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_moderation_actionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_moderation_actionClient<$Result.GetResult<Prisma.$discussionboard_moderation_actionPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_moderation_action that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_moderation_actionFindFirstArgs} args - Arguments to find a Discussionboard_moderation_action\n     * @example\n     * // Get one Discussionboard_moderation_action\n     * const discussionboard_moderation_action = await prisma.discussionboard_moderation_action.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_moderation_actionFindFirstArgs>(args?: SelectSubset<T, discussionboard_moderation_actionFindFirstArgs<ExtArgs>>): Prisma__discussionboard_moderation_actionClient<$Result.GetResult<Prisma.$discussionboard_moderation_actionPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_moderation_action that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_moderation_actionFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_moderation_action\n     * @example\n     * // Get one Discussionboard_moderation_action\n     * const discussionboard_moderation_action = await prisma.discussionboard_moderation_action.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_moderation_actionFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_moderation_actionFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_moderation_actionClient<$Result.GetResult<Prisma.$discussionboard_moderation_actionPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_moderation_actions that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_moderation_actionFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_moderation_actions\n     * const discussionboard_moderation_actions = await prisma.discussionboard_moderation_action.findMany()\n     * \n     * // Get first 10 Discussionboard_moderation_actions\n     * const discussionboard_moderation_actions = await prisma.discussionboard_moderation_action.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_moderation_actionWithIdOnly = await prisma.discussionboard_moderation_action.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_moderation_actionFindManyArgs>(args?: SelectSubset<T, discussionboard_moderation_actionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_moderation_actionPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_moderation_action.\n     * @param {discussionboard_moderation_actionCreateArgs} args - Arguments to create a Discussionboard_moderation_action.\n     * @example\n     * // Create one Discussionboard_moderation_action\n     * const Discussionboard_moderation_action = await prisma.discussionboard_moderation_action.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_moderation_action\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_moderation_actionCreateArgs>(args: SelectSubset<T, discussionboard_moderation_actionCreateArgs<ExtArgs>>): Prisma__discussionboard_moderation_actionClient<$Result.GetResult<Prisma.$discussionboard_moderation_actionPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_moderation_actions.\n     * @param {discussionboard_moderation_actionCreateManyArgs} args - Arguments to create many Discussionboard_moderation_actions.\n     * @example\n     * // Create many Discussionboard_moderation_actions\n     * const discussionboard_moderation_action = await prisma.discussionboard_moderation_action.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_moderation_actionCreateManyArgs>(args?: SelectSubset<T, discussionboard_moderation_actionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_moderation_actions and returns the data saved in the database.\n     * @param {discussionboard_moderation_actionCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_moderation_actions.\n     * @example\n     * // Create many Discussionboard_moderation_actions\n     * const discussionboard_moderation_action = await prisma.discussionboard_moderation_action.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_moderation_actions and only return the `id`\n     * const discussionboard_moderation_actionWithIdOnly = await prisma.discussionboard_moderation_action.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_moderation_actionCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_moderation_actionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_moderation_actionPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_moderation_action.\n     * @param {discussionboard_moderation_actionDeleteArgs} args - Arguments to delete one Discussionboard_moderation_action.\n     * @example\n     * // Delete one Discussionboard_moderation_action\n     * const Discussionboard_moderation_action = await prisma.discussionboard_moderation_action.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_moderation_action\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_moderation_actionDeleteArgs>(args: SelectSubset<T, discussionboard_moderation_actionDeleteArgs<ExtArgs>>): Prisma__discussionboard_moderation_actionClient<$Result.GetResult<Prisma.$discussionboard_moderation_actionPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_moderation_action.\n     * @param {discussionboard_moderation_actionUpdateArgs} args - Arguments to update one Discussionboard_moderation_action.\n     * @example\n     * // Update one Discussionboard_moderation_action\n     * const discussionboard_moderation_action = await prisma.discussionboard_moderation_action.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_moderation_actionUpdateArgs>(args: SelectSubset<T, discussionboard_moderation_actionUpdateArgs<ExtArgs>>): Prisma__discussionboard_moderation_actionClient<$Result.GetResult<Prisma.$discussionboard_moderation_actionPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_moderation_actions.\n     * @param {discussionboard_moderation_actionDeleteManyArgs} args - Arguments to filter Discussionboard_moderation_actions to delete.\n     * @example\n     * // Delete a few Discussionboard_moderation_actions\n     * const { count } = await prisma.discussionboard_moderation_action.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_moderation_actionDeleteManyArgs>(args?: SelectSubset<T, discussionboard_moderation_actionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_moderation_actions.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_moderation_actionUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_moderation_actions\n     * const discussionboard_moderation_action = await prisma.discussionboard_moderation_action.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_moderation_actionUpdateManyArgs>(args: SelectSubset<T, discussionboard_moderation_actionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_moderation_actions and returns the data updated in the database.\n     * @param {discussionboard_moderation_actionUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_moderation_actions.\n     * @example\n     * // Update many Discussionboard_moderation_actions\n     * const discussionboard_moderation_action = await prisma.discussionboard_moderation_action.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_moderation_actions and only return the `id`\n     * const discussionboard_moderation_actionWithIdOnly = await prisma.discussionboard_moderation_action.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_moderation_actionUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_moderation_actionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_moderation_actionPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_moderation_action.\n     * @param {discussionboard_moderation_actionUpsertArgs} args - Arguments to update or create a Discussionboard_moderation_action.\n     * @example\n     * // Update or create a Discussionboard_moderation_action\n     * const discussionboard_moderation_action = await prisma.discussionboard_moderation_action.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_moderation_action\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_moderation_action we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_moderation_actionUpsertArgs>(args: SelectSubset<T, discussionboard_moderation_actionUpsertArgs<ExtArgs>>): Prisma__discussionboard_moderation_actionClient<$Result.GetResult<Prisma.$discussionboard_moderation_actionPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_moderation_actions.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_moderation_actionCountArgs} args - Arguments to filter Discussionboard_moderation_actions to count.\n     * @example\n     * // Count the number of Discussionboard_moderation_actions\n     * const count = await prisma.discussionboard_moderation_action.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_moderation_actions we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_moderation_actionCountArgs>(\n      args?: Subset<T, discussionboard_moderation_actionCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_moderation_actionCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_moderation_action.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_moderation_actionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_moderation_actionAggregateArgs>(args: Subset<T, Discussionboard_moderation_actionAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_moderation_actionAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_moderation_action.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_moderation_actionGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_moderation_actionGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_moderation_actionGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_moderation_actionGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_moderation_actionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_moderation_actionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_moderation_action model\n   */\n  readonly fields: discussionboard_moderation_actionFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_moderation_action.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_moderation_actionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    actor<T extends discussionboard_userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_userDefaultArgs<ExtArgs>>): Prisma__discussionboard_userClient<$Result.GetResult<Prisma.$discussionboard_userPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    target_user<T extends discussionboard_userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_userDefaultArgs<ExtArgs>>): Prisma__discussionboard_userClient<$Result.GetResult<Prisma.$discussionboard_userPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    moderated_post<T extends discussionboard_moderation_action$moderated_postArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_moderation_action$moderated_postArgs<ExtArgs>>): Prisma__discussionboard_postClient<$Result.GetResult<Prisma.$discussionboard_postPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    moderated_comment<T extends discussionboard_moderation_action$moderated_commentArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_moderation_action$moderated_commentArgs<ExtArgs>>): Prisma__discussionboard_commentsClient<$Result.GetResult<Prisma.$discussionboard_commentsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_moderation_action model\n   */\n  interface discussionboard_moderation_actionFieldRefs {\n    readonly id: FieldRef<\"discussionboard_moderation_action\", 'String'>\n    readonly actor_id: FieldRef<\"discussionboard_moderation_action\", 'String'>\n    readonly target_user_id: FieldRef<\"discussionboard_moderation_action\", 'String'>\n    readonly post_id: FieldRef<\"discussionboard_moderation_action\", 'String'>\n    readonly comment_id: FieldRef<\"discussionboard_moderation_action\", 'String'>\n    readonly action_type: FieldRef<\"discussionboard_moderation_action\", 'String'>\n    readonly reason: FieldRef<\"discussionboard_moderation_action\", 'String'>\n    readonly created_at: FieldRef<\"discussionboard_moderation_action\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_moderation_action findUnique\n   */\n  export type discussionboard_moderation_actionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderation_action\n     */\n    select?: discussionboard_moderation_actionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderation_action\n     */\n    omit?: discussionboard_moderation_actionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderation_actionInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_moderation_action to fetch.\n     */\n    where: discussionboard_moderation_actionWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_moderation_action findUniqueOrThrow\n   */\n  export type discussionboard_moderation_actionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderation_action\n     */\n    select?: discussionboard_moderation_actionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderation_action\n     */\n    omit?: discussionboard_moderation_actionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderation_actionInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_moderation_action to fetch.\n     */\n    where: discussionboard_moderation_actionWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_moderation_action findFirst\n   */\n  export type discussionboard_moderation_actionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderation_action\n     */\n    select?: discussionboard_moderation_actionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderation_action\n     */\n    omit?: discussionboard_moderation_actionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderation_actionInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_moderation_action to fetch.\n     */\n    where?: discussionboard_moderation_actionWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_moderation_actions to fetch.\n     */\n    orderBy?: discussionboard_moderation_actionOrderByWithRelationInput | discussionboard_moderation_actionOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_moderation_actions.\n     */\n    cursor?: discussionboard_moderation_actionWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_moderation_actions from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_moderation_actions.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_moderation_actions.\n     */\n    distinct?: Discussionboard_moderation_actionScalarFieldEnum | Discussionboard_moderation_actionScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_moderation_action findFirstOrThrow\n   */\n  export type discussionboard_moderation_actionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderation_action\n     */\n    select?: discussionboard_moderation_actionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderation_action\n     */\n    omit?: discussionboard_moderation_actionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderation_actionInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_moderation_action to fetch.\n     */\n    where?: discussionboard_moderation_actionWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_moderation_actions to fetch.\n     */\n    orderBy?: discussionboard_moderation_actionOrderByWithRelationInput | discussionboard_moderation_actionOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_moderation_actions.\n     */\n    cursor?: discussionboard_moderation_actionWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_moderation_actions from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_moderation_actions.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_moderation_actions.\n     */\n    distinct?: Discussionboard_moderation_actionScalarFieldEnum | Discussionboard_moderation_actionScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_moderation_action findMany\n   */\n  export type discussionboard_moderation_actionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderation_action\n     */\n    select?: discussionboard_moderation_actionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderation_action\n     */\n    omit?: discussionboard_moderation_actionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderation_actionInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_moderation_actions to fetch.\n     */\n    where?: discussionboard_moderation_actionWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_moderation_actions to fetch.\n     */\n    orderBy?: discussionboard_moderation_actionOrderByWithRelationInput | discussionboard_moderation_actionOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_moderation_actions.\n     */\n    cursor?: discussionboard_moderation_actionWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_moderation_actions from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_moderation_actions.\n     */\n    skip?: number\n    distinct?: Discussionboard_moderation_actionScalarFieldEnum | Discussionboard_moderation_actionScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_moderation_action create\n   */\n  export type discussionboard_moderation_actionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderation_action\n     */\n    select?: discussionboard_moderation_actionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderation_action\n     */\n    omit?: discussionboard_moderation_actionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderation_actionInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_moderation_action.\n     */\n    data: XOR<discussionboard_moderation_actionCreateInput, discussionboard_moderation_actionUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_moderation_action createMany\n   */\n  export type discussionboard_moderation_actionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_moderation_actions.\n     */\n    data: discussionboard_moderation_actionCreateManyInput | discussionboard_moderation_actionCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_moderation_action createManyAndReturn\n   */\n  export type discussionboard_moderation_actionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderation_action\n     */\n    select?: discussionboard_moderation_actionSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderation_action\n     */\n    omit?: discussionboard_moderation_actionOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_moderation_actions.\n     */\n    data: discussionboard_moderation_actionCreateManyInput | discussionboard_moderation_actionCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderation_actionIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_moderation_action update\n   */\n  export type discussionboard_moderation_actionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderation_action\n     */\n    select?: discussionboard_moderation_actionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderation_action\n     */\n    omit?: discussionboard_moderation_actionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderation_actionInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_moderation_action.\n     */\n    data: XOR<discussionboard_moderation_actionUpdateInput, discussionboard_moderation_actionUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_moderation_action to update.\n     */\n    where: discussionboard_moderation_actionWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_moderation_action updateMany\n   */\n  export type discussionboard_moderation_actionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_moderation_actions.\n     */\n    data: XOR<discussionboard_moderation_actionUpdateManyMutationInput, discussionboard_moderation_actionUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_moderation_actions to update\n     */\n    where?: discussionboard_moderation_actionWhereInput\n    /**\n     * Limit how many discussionboard_moderation_actions to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_moderation_action updateManyAndReturn\n   */\n  export type discussionboard_moderation_actionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderation_action\n     */\n    select?: discussionboard_moderation_actionSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderation_action\n     */\n    omit?: discussionboard_moderation_actionOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_moderation_actions.\n     */\n    data: XOR<discussionboard_moderation_actionUpdateManyMutationInput, discussionboard_moderation_actionUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_moderation_actions to update\n     */\n    where?: discussionboard_moderation_actionWhereInput\n    /**\n     * Limit how many discussionboard_moderation_actions to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderation_actionIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_moderation_action upsert\n   */\n  export type discussionboard_moderation_actionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderation_action\n     */\n    select?: discussionboard_moderation_actionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderation_action\n     */\n    omit?: discussionboard_moderation_actionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderation_actionInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_moderation_action to update in case it exists.\n     */\n    where: discussionboard_moderation_actionWhereUniqueInput\n    /**\n     * In case the discussionboard_moderation_action found by the `where` argument doesn't exist, create a new discussionboard_moderation_action with this data.\n     */\n    create: XOR<discussionboard_moderation_actionCreateInput, discussionboard_moderation_actionUncheckedCreateInput>\n    /**\n     * In case the discussionboard_moderation_action was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_moderation_actionUpdateInput, discussionboard_moderation_actionUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_moderation_action delete\n   */\n  export type discussionboard_moderation_actionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderation_action\n     */\n    select?: discussionboard_moderation_actionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderation_action\n     */\n    omit?: discussionboard_moderation_actionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderation_actionInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_moderation_action to delete.\n     */\n    where: discussionboard_moderation_actionWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_moderation_action deleteMany\n   */\n  export type discussionboard_moderation_actionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_moderation_actions to delete\n     */\n    where?: discussionboard_moderation_actionWhereInput\n    /**\n     * Limit how many discussionboard_moderation_actions to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_moderation_action.moderated_post\n   */\n  export type discussionboard_moderation_action$moderated_postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post\n     */\n    select?: discussionboard_postSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post\n     */\n    omit?: discussionboard_postOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_postInclude<ExtArgs> | null\n    where?: discussionboard_postWhereInput\n  }\n\n  /**\n   * discussionboard_moderation_action.moderated_comment\n   */\n  export type discussionboard_moderation_action$moderated_commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comments\n     */\n    select?: discussionboard_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comments\n     */\n    omit?: discussionboard_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_commentsInclude<ExtArgs> | null\n    where?: discussionboard_commentsWhereInput\n  }\n\n  /**\n   * discussionboard_moderation_action without action\n   */\n  export type discussionboard_moderation_actionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderation_action\n     */\n    select?: discussionboard_moderation_actionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderation_action\n     */\n    omit?: discussionboard_moderation_actionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderation_actionInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_report_review\n   */\n\n  export type AggregateDiscussionboard_report_review = {\n    _count: Discussionboard_report_reviewCountAggregateOutputType | null\n    _min: Discussionboard_report_reviewMinAggregateOutputType | null\n    _max: Discussionboard_report_reviewMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_report_reviewMinAggregateOutputType = {\n    id: string | null\n    report_id: string | null\n    reviewer_id: string | null\n    post_id: string | null\n    comment_id: string | null\n    review_status: string | null\n    moderator_comment: string | null\n    reviewed_at: Date | null\n  }\n\n  export type Discussionboard_report_reviewMaxAggregateOutputType = {\n    id: string | null\n    report_id: string | null\n    reviewer_id: string | null\n    post_id: string | null\n    comment_id: string | null\n    review_status: string | null\n    moderator_comment: string | null\n    reviewed_at: Date | null\n  }\n\n  export type Discussionboard_report_reviewCountAggregateOutputType = {\n    id: number\n    report_id: number\n    reviewer_id: number\n    post_id: number\n    comment_id: number\n    review_status: number\n    moderator_comment: number\n    reviewed_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_report_reviewMinAggregateInputType = {\n    id?: true\n    report_id?: true\n    reviewer_id?: true\n    post_id?: true\n    comment_id?: true\n    review_status?: true\n    moderator_comment?: true\n    reviewed_at?: true\n  }\n\n  export type Discussionboard_report_reviewMaxAggregateInputType = {\n    id?: true\n    report_id?: true\n    reviewer_id?: true\n    post_id?: true\n    comment_id?: true\n    review_status?: true\n    moderator_comment?: true\n    reviewed_at?: true\n  }\n\n  export type Discussionboard_report_reviewCountAggregateInputType = {\n    id?: true\n    report_id?: true\n    reviewer_id?: true\n    post_id?: true\n    comment_id?: true\n    review_status?: true\n    moderator_comment?: true\n    reviewed_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_report_reviewAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_report_review to aggregate.\n     */\n    where?: discussionboard_report_reviewWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_report_reviews to fetch.\n     */\n    orderBy?: discussionboard_report_reviewOrderByWithRelationInput | discussionboard_report_reviewOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_report_reviewWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_report_reviews from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_report_reviews.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_report_reviews\n    **/\n    _count?: true | Discussionboard_report_reviewCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_report_reviewMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_report_reviewMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_report_reviewAggregateType<T extends Discussionboard_report_reviewAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_report_review]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_report_review[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_report_review[P]>\n  }\n\n\n\n\n  export type discussionboard_report_reviewGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_report_reviewWhereInput\n    orderBy?: discussionboard_report_reviewOrderByWithAggregationInput | discussionboard_report_reviewOrderByWithAggregationInput[]\n    by: Discussionboard_report_reviewScalarFieldEnum[] | Discussionboard_report_reviewScalarFieldEnum\n    having?: discussionboard_report_reviewScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_report_reviewCountAggregateInputType | true\n    _min?: Discussionboard_report_reviewMinAggregateInputType\n    _max?: Discussionboard_report_reviewMaxAggregateInputType\n  }\n\n  export type Discussionboard_report_reviewGroupByOutputType = {\n    id: string\n    report_id: string\n    reviewer_id: string\n    post_id: string | null\n    comment_id: string | null\n    review_status: string\n    moderator_comment: string | null\n    reviewed_at: Date\n    _count: Discussionboard_report_reviewCountAggregateOutputType | null\n    _min: Discussionboard_report_reviewMinAggregateOutputType | null\n    _max: Discussionboard_report_reviewMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_report_reviewGroupByPayload<T extends discussionboard_report_reviewGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_report_reviewGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_report_reviewGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_report_reviewGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_report_reviewGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_report_reviewSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    report_id?: boolean\n    reviewer_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    review_status?: boolean\n    moderator_comment?: boolean\n    reviewed_at?: boolean\n    report?: boolean | discussionboard_reportsDefaultArgs<ExtArgs>\n    reviewer?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    reviewed_post?: boolean | discussionboard_report_review$reviewed_postArgs<ExtArgs>\n    reviewed_comment?: boolean | discussionboard_report_review$reviewed_commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_report_review\"]>\n\n  export type discussionboard_report_reviewSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    report_id?: boolean\n    reviewer_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    review_status?: boolean\n    moderator_comment?: boolean\n    reviewed_at?: boolean\n    report?: boolean | discussionboard_reportsDefaultArgs<ExtArgs>\n    reviewer?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    reviewed_post?: boolean | discussionboard_report_review$reviewed_postArgs<ExtArgs>\n    reviewed_comment?: boolean | discussionboard_report_review$reviewed_commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_report_review\"]>\n\n  export type discussionboard_report_reviewSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    report_id?: boolean\n    reviewer_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    review_status?: boolean\n    moderator_comment?: boolean\n    reviewed_at?: boolean\n    report?: boolean | discussionboard_reportsDefaultArgs<ExtArgs>\n    reviewer?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    reviewed_post?: boolean | discussionboard_report_review$reviewed_postArgs<ExtArgs>\n    reviewed_comment?: boolean | discussionboard_report_review$reviewed_commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_report_review\"]>\n\n  export type discussionboard_report_reviewSelectScalar = {\n    id?: boolean\n    report_id?: boolean\n    reviewer_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    review_status?: boolean\n    moderator_comment?: boolean\n    reviewed_at?: boolean\n  }\n\n  export type discussionboard_report_reviewOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"report_id\" | \"reviewer_id\" | \"post_id\" | \"comment_id\" | \"review_status\" | \"moderator_comment\" | \"reviewed_at\", ExtArgs[\"result\"][\"discussionboard_report_review\"]>\n  export type discussionboard_report_reviewInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    report?: boolean | discussionboard_reportsDefaultArgs<ExtArgs>\n    reviewer?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    reviewed_post?: boolean | discussionboard_report_review$reviewed_postArgs<ExtArgs>\n    reviewed_comment?: boolean | discussionboard_report_review$reviewed_commentArgs<ExtArgs>\n  }\n  export type discussionboard_report_reviewIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    report?: boolean | discussionboard_reportsDefaultArgs<ExtArgs>\n    reviewer?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    reviewed_post?: boolean | discussionboard_report_review$reviewed_postArgs<ExtArgs>\n    reviewed_comment?: boolean | discussionboard_report_review$reviewed_commentArgs<ExtArgs>\n  }\n  export type discussionboard_report_reviewIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    report?: boolean | discussionboard_reportsDefaultArgs<ExtArgs>\n    reviewer?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    reviewed_post?: boolean | discussionboard_report_review$reviewed_postArgs<ExtArgs>\n    reviewed_comment?: boolean | discussionboard_report_review$reviewed_commentArgs<ExtArgs>\n  }\n\n  export type $discussionboard_report_reviewPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_report_review\"\n    objects: {\n      report: Prisma.$discussionboard_reportsPayload<ExtArgs>\n      reviewer: Prisma.$discussionboard_userPayload<ExtArgs>\n      reviewed_post: Prisma.$discussionboard_postPayload<ExtArgs> | null\n      reviewed_comment: Prisma.$discussionboard_commentsPayload<ExtArgs> | null\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * [Primary key] - Unique identifier for report reviews.\n       */\n      id: string\n      /**\n       * [The report being reviewed] - Links to a specific user report for moderation review.\n       */\n      report_id: string\n      /**\n       * [Moderator/admin reviewer] - References user carrying out the review.\n       */\n      reviewer_id: string\n      /**\n       * [Reviewed post] - Links reviewed post, nullable because not all reports are about posts.\n       */\n      post_id: string | null\n      /**\n       * [Reviewed comment] - Links reviewed comment, nullable because not all reports are about comments.\n       */\n      comment_id: string | null\n      /**\n       * [Outcome status] - Status for reviewed reports: e.g., 'resolved', 'rejected', 'pending'.\n       */\n      review_status: string\n      /**\n       * [Review notes] - Optional comments from reviewer.\n       */\n      moderator_comment: string | null\n      /**\n       * [Review timestamp] - Auditable time of moderation review.\n       */\n      reviewed_at: Date\n    }, ExtArgs[\"result\"][\"discussionboard_report_review\"]>\n    composites: {}\n  }\n\n  type discussionboard_report_reviewGetPayload<S extends boolean | null | undefined | discussionboard_report_reviewDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_report_reviewPayload, S>\n\n  type discussionboard_report_reviewCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_report_reviewFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_report_reviewCountAggregateInputType | true\n    }\n\n  export interface discussionboard_report_reviewDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_report_review'], meta: { name: 'discussionboard_report_review' } }\n    /**\n     * Find zero or one Discussionboard_report_review that matches the filter.\n     * @param {discussionboard_report_reviewFindUniqueArgs} args - Arguments to find a Discussionboard_report_review\n     * @example\n     * // Get one Discussionboard_report_review\n     * const discussionboard_report_review = await prisma.discussionboard_report_review.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_report_reviewFindUniqueArgs>(args: SelectSubset<T, discussionboard_report_reviewFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_report_reviewClient<$Result.GetResult<Prisma.$discussionboard_report_reviewPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_report_review that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_report_reviewFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_report_review\n     * @example\n     * // Get one Discussionboard_report_review\n     * const discussionboard_report_review = await prisma.discussionboard_report_review.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_report_reviewFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_report_reviewFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_report_reviewClient<$Result.GetResult<Prisma.$discussionboard_report_reviewPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_report_review that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_report_reviewFindFirstArgs} args - Arguments to find a Discussionboard_report_review\n     * @example\n     * // Get one Discussionboard_report_review\n     * const discussionboard_report_review = await prisma.discussionboard_report_review.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_report_reviewFindFirstArgs>(args?: SelectSubset<T, discussionboard_report_reviewFindFirstArgs<ExtArgs>>): Prisma__discussionboard_report_reviewClient<$Result.GetResult<Prisma.$discussionboard_report_reviewPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_report_review that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_report_reviewFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_report_review\n     * @example\n     * // Get one Discussionboard_report_review\n     * const discussionboard_report_review = await prisma.discussionboard_report_review.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_report_reviewFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_report_reviewFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_report_reviewClient<$Result.GetResult<Prisma.$discussionboard_report_reviewPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_report_reviews that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_report_reviewFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_report_reviews\n     * const discussionboard_report_reviews = await prisma.discussionboard_report_review.findMany()\n     * \n     * // Get first 10 Discussionboard_report_reviews\n     * const discussionboard_report_reviews = await prisma.discussionboard_report_review.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_report_reviewWithIdOnly = await prisma.discussionboard_report_review.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_report_reviewFindManyArgs>(args?: SelectSubset<T, discussionboard_report_reviewFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_report_reviewPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_report_review.\n     * @param {discussionboard_report_reviewCreateArgs} args - Arguments to create a Discussionboard_report_review.\n     * @example\n     * // Create one Discussionboard_report_review\n     * const Discussionboard_report_review = await prisma.discussionboard_report_review.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_report_review\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_report_reviewCreateArgs>(args: SelectSubset<T, discussionboard_report_reviewCreateArgs<ExtArgs>>): Prisma__discussionboard_report_reviewClient<$Result.GetResult<Prisma.$discussionboard_report_reviewPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_report_reviews.\n     * @param {discussionboard_report_reviewCreateManyArgs} args - Arguments to create many Discussionboard_report_reviews.\n     * @example\n     * // Create many Discussionboard_report_reviews\n     * const discussionboard_report_review = await prisma.discussionboard_report_review.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_report_reviewCreateManyArgs>(args?: SelectSubset<T, discussionboard_report_reviewCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_report_reviews and returns the data saved in the database.\n     * @param {discussionboard_report_reviewCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_report_reviews.\n     * @example\n     * // Create many Discussionboard_report_reviews\n     * const discussionboard_report_review = await prisma.discussionboard_report_review.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_report_reviews and only return the `id`\n     * const discussionboard_report_reviewWithIdOnly = await prisma.discussionboard_report_review.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_report_reviewCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_report_reviewCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_report_reviewPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_report_review.\n     * @param {discussionboard_report_reviewDeleteArgs} args - Arguments to delete one Discussionboard_report_review.\n     * @example\n     * // Delete one Discussionboard_report_review\n     * const Discussionboard_report_review = await prisma.discussionboard_report_review.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_report_review\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_report_reviewDeleteArgs>(args: SelectSubset<T, discussionboard_report_reviewDeleteArgs<ExtArgs>>): Prisma__discussionboard_report_reviewClient<$Result.GetResult<Prisma.$discussionboard_report_reviewPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_report_review.\n     * @param {discussionboard_report_reviewUpdateArgs} args - Arguments to update one Discussionboard_report_review.\n     * @example\n     * // Update one Discussionboard_report_review\n     * const discussionboard_report_review = await prisma.discussionboard_report_review.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_report_reviewUpdateArgs>(args: SelectSubset<T, discussionboard_report_reviewUpdateArgs<ExtArgs>>): Prisma__discussionboard_report_reviewClient<$Result.GetResult<Prisma.$discussionboard_report_reviewPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_report_reviews.\n     * @param {discussionboard_report_reviewDeleteManyArgs} args - Arguments to filter Discussionboard_report_reviews to delete.\n     * @example\n     * // Delete a few Discussionboard_report_reviews\n     * const { count } = await prisma.discussionboard_report_review.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_report_reviewDeleteManyArgs>(args?: SelectSubset<T, discussionboard_report_reviewDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_report_reviews.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_report_reviewUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_report_reviews\n     * const discussionboard_report_review = await prisma.discussionboard_report_review.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_report_reviewUpdateManyArgs>(args: SelectSubset<T, discussionboard_report_reviewUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_report_reviews and returns the data updated in the database.\n     * @param {discussionboard_report_reviewUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_report_reviews.\n     * @example\n     * // Update many Discussionboard_report_reviews\n     * const discussionboard_report_review = await prisma.discussionboard_report_review.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_report_reviews and only return the `id`\n     * const discussionboard_report_reviewWithIdOnly = await prisma.discussionboard_report_review.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_report_reviewUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_report_reviewUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_report_reviewPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_report_review.\n     * @param {discussionboard_report_reviewUpsertArgs} args - Arguments to update or create a Discussionboard_report_review.\n     * @example\n     * // Update or create a Discussionboard_report_review\n     * const discussionboard_report_review = await prisma.discussionboard_report_review.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_report_review\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_report_review we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_report_reviewUpsertArgs>(args: SelectSubset<T, discussionboard_report_reviewUpsertArgs<ExtArgs>>): Prisma__discussionboard_report_reviewClient<$Result.GetResult<Prisma.$discussionboard_report_reviewPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_report_reviews.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_report_reviewCountArgs} args - Arguments to filter Discussionboard_report_reviews to count.\n     * @example\n     * // Count the number of Discussionboard_report_reviews\n     * const count = await prisma.discussionboard_report_review.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_report_reviews we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_report_reviewCountArgs>(\n      args?: Subset<T, discussionboard_report_reviewCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_report_reviewCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_report_review.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_report_reviewAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_report_reviewAggregateArgs>(args: Subset<T, Discussionboard_report_reviewAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_report_reviewAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_report_review.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_report_reviewGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_report_reviewGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_report_reviewGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_report_reviewGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_report_reviewGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_report_reviewGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_report_review model\n   */\n  readonly fields: discussionboard_report_reviewFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_report_review.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_report_reviewClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    report<T extends discussionboard_reportsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_reportsDefaultArgs<ExtArgs>>): Prisma__discussionboard_reportsClient<$Result.GetResult<Prisma.$discussionboard_reportsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    reviewer<T extends discussionboard_userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_userDefaultArgs<ExtArgs>>): Prisma__discussionboard_userClient<$Result.GetResult<Prisma.$discussionboard_userPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    reviewed_post<T extends discussionboard_report_review$reviewed_postArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_report_review$reviewed_postArgs<ExtArgs>>): Prisma__discussionboard_postClient<$Result.GetResult<Prisma.$discussionboard_postPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    reviewed_comment<T extends discussionboard_report_review$reviewed_commentArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_report_review$reviewed_commentArgs<ExtArgs>>): Prisma__discussionboard_commentsClient<$Result.GetResult<Prisma.$discussionboard_commentsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_report_review model\n   */\n  interface discussionboard_report_reviewFieldRefs {\n    readonly id: FieldRef<\"discussionboard_report_review\", 'String'>\n    readonly report_id: FieldRef<\"discussionboard_report_review\", 'String'>\n    readonly reviewer_id: FieldRef<\"discussionboard_report_review\", 'String'>\n    readonly post_id: FieldRef<\"discussionboard_report_review\", 'String'>\n    readonly comment_id: FieldRef<\"discussionboard_report_review\", 'String'>\n    readonly review_status: FieldRef<\"discussionboard_report_review\", 'String'>\n    readonly moderator_comment: FieldRef<\"discussionboard_report_review\", 'String'>\n    readonly reviewed_at: FieldRef<\"discussionboard_report_review\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_report_review findUnique\n   */\n  export type discussionboard_report_reviewFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_report_review\n     */\n    select?: discussionboard_report_reviewSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_report_review\n     */\n    omit?: discussionboard_report_reviewOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_report_reviewInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_report_review to fetch.\n     */\n    where: discussionboard_report_reviewWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_report_review findUniqueOrThrow\n   */\n  export type discussionboard_report_reviewFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_report_review\n     */\n    select?: discussionboard_report_reviewSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_report_review\n     */\n    omit?: discussionboard_report_reviewOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_report_reviewInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_report_review to fetch.\n     */\n    where: discussionboard_report_reviewWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_report_review findFirst\n   */\n  export type discussionboard_report_reviewFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_report_review\n     */\n    select?: discussionboard_report_reviewSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_report_review\n     */\n    omit?: discussionboard_report_reviewOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_report_reviewInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_report_review to fetch.\n     */\n    where?: discussionboard_report_reviewWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_report_reviews to fetch.\n     */\n    orderBy?: discussionboard_report_reviewOrderByWithRelationInput | discussionboard_report_reviewOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_report_reviews.\n     */\n    cursor?: discussionboard_report_reviewWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_report_reviews from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_report_reviews.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_report_reviews.\n     */\n    distinct?: Discussionboard_report_reviewScalarFieldEnum | Discussionboard_report_reviewScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_report_review findFirstOrThrow\n   */\n  export type discussionboard_report_reviewFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_report_review\n     */\n    select?: discussionboard_report_reviewSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_report_review\n     */\n    omit?: discussionboard_report_reviewOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_report_reviewInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_report_review to fetch.\n     */\n    where?: discussionboard_report_reviewWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_report_reviews to fetch.\n     */\n    orderBy?: discussionboard_report_reviewOrderByWithRelationInput | discussionboard_report_reviewOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_report_reviews.\n     */\n    cursor?: discussionboard_report_reviewWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_report_reviews from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_report_reviews.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_report_reviews.\n     */\n    distinct?: Discussionboard_report_reviewScalarFieldEnum | Discussionboard_report_reviewScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_report_review findMany\n   */\n  export type discussionboard_report_reviewFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_report_review\n     */\n    select?: discussionboard_report_reviewSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_report_review\n     */\n    omit?: discussionboard_report_reviewOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_report_reviewInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_report_reviews to fetch.\n     */\n    where?: discussionboard_report_reviewWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_report_reviews to fetch.\n     */\n    orderBy?: discussionboard_report_reviewOrderByWithRelationInput | discussionboard_report_reviewOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_report_reviews.\n     */\n    cursor?: discussionboard_report_reviewWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_report_reviews from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_report_reviews.\n     */\n    skip?: number\n    distinct?: Discussionboard_report_reviewScalarFieldEnum | Discussionboard_report_reviewScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_report_review create\n   */\n  export type discussionboard_report_reviewCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_report_review\n     */\n    select?: discussionboard_report_reviewSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_report_review\n     */\n    omit?: discussionboard_report_reviewOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_report_reviewInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_report_review.\n     */\n    data: XOR<discussionboard_report_reviewCreateInput, discussionboard_report_reviewUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_report_review createMany\n   */\n  export type discussionboard_report_reviewCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_report_reviews.\n     */\n    data: discussionboard_report_reviewCreateManyInput | discussionboard_report_reviewCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_report_review createManyAndReturn\n   */\n  export type discussionboard_report_reviewCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_report_review\n     */\n    select?: discussionboard_report_reviewSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_report_review\n     */\n    omit?: discussionboard_report_reviewOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_report_reviews.\n     */\n    data: discussionboard_report_reviewCreateManyInput | discussionboard_report_reviewCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_report_reviewIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_report_review update\n   */\n  export type discussionboard_report_reviewUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_report_review\n     */\n    select?: discussionboard_report_reviewSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_report_review\n     */\n    omit?: discussionboard_report_reviewOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_report_reviewInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_report_review.\n     */\n    data: XOR<discussionboard_report_reviewUpdateInput, discussionboard_report_reviewUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_report_review to update.\n     */\n    where: discussionboard_report_reviewWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_report_review updateMany\n   */\n  export type discussionboard_report_reviewUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_report_reviews.\n     */\n    data: XOR<discussionboard_report_reviewUpdateManyMutationInput, discussionboard_report_reviewUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_report_reviews to update\n     */\n    where?: discussionboard_report_reviewWhereInput\n    /**\n     * Limit how many discussionboard_report_reviews to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_report_review updateManyAndReturn\n   */\n  export type discussionboard_report_reviewUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_report_review\n     */\n    select?: discussionboard_report_reviewSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_report_review\n     */\n    omit?: discussionboard_report_reviewOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_report_reviews.\n     */\n    data: XOR<discussionboard_report_reviewUpdateManyMutationInput, discussionboard_report_reviewUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_report_reviews to update\n     */\n    where?: discussionboard_report_reviewWhereInput\n    /**\n     * Limit how many discussionboard_report_reviews to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_report_reviewIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_report_review upsert\n   */\n  export type discussionboard_report_reviewUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_report_review\n     */\n    select?: discussionboard_report_reviewSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_report_review\n     */\n    omit?: discussionboard_report_reviewOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_report_reviewInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_report_review to update in case it exists.\n     */\n    where: discussionboard_report_reviewWhereUniqueInput\n    /**\n     * In case the discussionboard_report_review found by the `where` argument doesn't exist, create a new discussionboard_report_review with this data.\n     */\n    create: XOR<discussionboard_report_reviewCreateInput, discussionboard_report_reviewUncheckedCreateInput>\n    /**\n     * In case the discussionboard_report_review was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_report_reviewUpdateInput, discussionboard_report_reviewUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_report_review delete\n   */\n  export type discussionboard_report_reviewDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_report_review\n     */\n    select?: discussionboard_report_reviewSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_report_review\n     */\n    omit?: discussionboard_report_reviewOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_report_reviewInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_report_review to delete.\n     */\n    where: discussionboard_report_reviewWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_report_review deleteMany\n   */\n  export type discussionboard_report_reviewDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_report_reviews to delete\n     */\n    where?: discussionboard_report_reviewWhereInput\n    /**\n     * Limit how many discussionboard_report_reviews to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_report_review.reviewed_post\n   */\n  export type discussionboard_report_review$reviewed_postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post\n     */\n    select?: discussionboard_postSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post\n     */\n    omit?: discussionboard_postOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_postInclude<ExtArgs> | null\n    where?: discussionboard_postWhereInput\n  }\n\n  /**\n   * discussionboard_report_review.reviewed_comment\n   */\n  export type discussionboard_report_review$reviewed_commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comments\n     */\n    select?: discussionboard_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comments\n     */\n    omit?: discussionboard_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_commentsInclude<ExtArgs> | null\n    where?: discussionboard_commentsWhereInput\n  }\n\n  /**\n   * discussionboard_report_review without action\n   */\n  export type discussionboard_report_reviewDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_report_review\n     */\n    select?: discussionboard_report_reviewSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_report_review\n     */\n    omit?: discussionboard_report_reviewOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_report_reviewInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_warning\n   */\n\n  export type AggregateDiscussionboard_warning = {\n    _count: Discussionboard_warningCountAggregateOutputType | null\n    _min: Discussionboard_warningMinAggregateOutputType | null\n    _max: Discussionboard_warningMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_warningMinAggregateOutputType = {\n    id: string | null\n    issued_by_id: string | null\n    issued_to_id: string | null\n    post_id: string | null\n    comment_id: string | null\n    warning_type: string | null\n    message: string | null\n    issued_at: Date | null\n  }\n\n  export type Discussionboard_warningMaxAggregateOutputType = {\n    id: string | null\n    issued_by_id: string | null\n    issued_to_id: string | null\n    post_id: string | null\n    comment_id: string | null\n    warning_type: string | null\n    message: string | null\n    issued_at: Date | null\n  }\n\n  export type Discussionboard_warningCountAggregateOutputType = {\n    id: number\n    issued_by_id: number\n    issued_to_id: number\n    post_id: number\n    comment_id: number\n    warning_type: number\n    message: number\n    issued_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_warningMinAggregateInputType = {\n    id?: true\n    issued_by_id?: true\n    issued_to_id?: true\n    post_id?: true\n    comment_id?: true\n    warning_type?: true\n    message?: true\n    issued_at?: true\n  }\n\n  export type Discussionboard_warningMaxAggregateInputType = {\n    id?: true\n    issued_by_id?: true\n    issued_to_id?: true\n    post_id?: true\n    comment_id?: true\n    warning_type?: true\n    message?: true\n    issued_at?: true\n  }\n\n  export type Discussionboard_warningCountAggregateInputType = {\n    id?: true\n    issued_by_id?: true\n    issued_to_id?: true\n    post_id?: true\n    comment_id?: true\n    warning_type?: true\n    message?: true\n    issued_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_warningAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_warning to aggregate.\n     */\n    where?: discussionboard_warningWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_warnings to fetch.\n     */\n    orderBy?: discussionboard_warningOrderByWithRelationInput | discussionboard_warningOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_warningWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_warnings from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_warnings.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_warnings\n    **/\n    _count?: true | Discussionboard_warningCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_warningMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_warningMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_warningAggregateType<T extends Discussionboard_warningAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_warning]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_warning[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_warning[P]>\n  }\n\n\n\n\n  export type discussionboard_warningGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_warningWhereInput\n    orderBy?: discussionboard_warningOrderByWithAggregationInput | discussionboard_warningOrderByWithAggregationInput[]\n    by: Discussionboard_warningScalarFieldEnum[] | Discussionboard_warningScalarFieldEnum\n    having?: discussionboard_warningScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_warningCountAggregateInputType | true\n    _min?: Discussionboard_warningMinAggregateInputType\n    _max?: Discussionboard_warningMaxAggregateInputType\n  }\n\n  export type Discussionboard_warningGroupByOutputType = {\n    id: string\n    issued_by_id: string\n    issued_to_id: string\n    post_id: string | null\n    comment_id: string | null\n    warning_type: string\n    message: string\n    issued_at: Date\n    _count: Discussionboard_warningCountAggregateOutputType | null\n    _min: Discussionboard_warningMinAggregateOutputType | null\n    _max: Discussionboard_warningMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_warningGroupByPayload<T extends discussionboard_warningGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_warningGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_warningGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_warningGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_warningGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_warningSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    issued_by_id?: boolean\n    issued_to_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    warning_type?: boolean\n    message?: boolean\n    issued_at?: boolean\n    issuer?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    recipient?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    warning_post?: boolean | discussionboard_warning$warning_postArgs<ExtArgs>\n    warning_comment?: boolean | discussionboard_warning$warning_commentArgs<ExtArgs>\n    discussionboard_ban?: boolean | discussionboard_warning$discussionboard_banArgs<ExtArgs>\n    _count?: boolean | Discussionboard_warningCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_warning\"]>\n\n  export type discussionboard_warningSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    issued_by_id?: boolean\n    issued_to_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    warning_type?: boolean\n    message?: boolean\n    issued_at?: boolean\n    issuer?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    recipient?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    warning_post?: boolean | discussionboard_warning$warning_postArgs<ExtArgs>\n    warning_comment?: boolean | discussionboard_warning$warning_commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_warning\"]>\n\n  export type discussionboard_warningSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    issued_by_id?: boolean\n    issued_to_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    warning_type?: boolean\n    message?: boolean\n    issued_at?: boolean\n    issuer?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    recipient?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    warning_post?: boolean | discussionboard_warning$warning_postArgs<ExtArgs>\n    warning_comment?: boolean | discussionboard_warning$warning_commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_warning\"]>\n\n  export type discussionboard_warningSelectScalar = {\n    id?: boolean\n    issued_by_id?: boolean\n    issued_to_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    warning_type?: boolean\n    message?: boolean\n    issued_at?: boolean\n  }\n\n  export type discussionboard_warningOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"issued_by_id\" | \"issued_to_id\" | \"post_id\" | \"comment_id\" | \"warning_type\" | \"message\" | \"issued_at\", ExtArgs[\"result\"][\"discussionboard_warning\"]>\n  export type discussionboard_warningInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    issuer?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    recipient?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    warning_post?: boolean | discussionboard_warning$warning_postArgs<ExtArgs>\n    warning_comment?: boolean | discussionboard_warning$warning_commentArgs<ExtArgs>\n    discussionboard_ban?: boolean | discussionboard_warning$discussionboard_banArgs<ExtArgs>\n    _count?: boolean | Discussionboard_warningCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_warningIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    issuer?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    recipient?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    warning_post?: boolean | discussionboard_warning$warning_postArgs<ExtArgs>\n    warning_comment?: boolean | discussionboard_warning$warning_commentArgs<ExtArgs>\n  }\n  export type discussionboard_warningIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    issuer?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    recipient?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    warning_post?: boolean | discussionboard_warning$warning_postArgs<ExtArgs>\n    warning_comment?: boolean | discussionboard_warning$warning_commentArgs<ExtArgs>\n  }\n\n  export type $discussionboard_warningPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_warning\"\n    objects: {\n      issuer: Prisma.$discussionboard_userPayload<ExtArgs>\n      recipient: Prisma.$discussionboard_userPayload<ExtArgs>\n      warning_post: Prisma.$discussionboard_postPayload<ExtArgs> | null\n      warning_comment: Prisma.$discussionboard_commentsPayload<ExtArgs> | null\n      discussionboard_ban: Prisma.$discussionboard_banPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * [Primary key] - Globally unique identifier of each warning.\n       */\n      id: string\n      /**\n       * [Issuer] - Moderator/admin user issuing the warning.\n       */\n      issued_by_id: string\n      /**\n       * [Recipient] - User who receives the warning.\n       */\n      issued_to_id: string\n      /**\n       * [Related post] - Cause for warning (optional, nullable).\n       */\n      post_id: string | null\n      /**\n       * [Related comment] - Cause for warning (optional, nullable).\n       */\n      comment_id: string | null\n      /**\n       * [Type of warning] - Categorical reason: e.g., 'abuse', 'spam', etc.\n       */\n      warning_type: string\n      /**\n       * [Moderator message] - Human-explained rationale.\n       */\n      message: string\n      /**\n       * [Issue timestamp] - The date/time warning was given.\n       */\n      issued_at: Date\n    }, ExtArgs[\"result\"][\"discussionboard_warning\"]>\n    composites: {}\n  }\n\n  type discussionboard_warningGetPayload<S extends boolean | null | undefined | discussionboard_warningDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_warningPayload, S>\n\n  type discussionboard_warningCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_warningFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_warningCountAggregateInputType | true\n    }\n\n  export interface discussionboard_warningDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_warning'], meta: { name: 'discussionboard_warning' } }\n    /**\n     * Find zero or one Discussionboard_warning that matches the filter.\n     * @param {discussionboard_warningFindUniqueArgs} args - Arguments to find a Discussionboard_warning\n     * @example\n     * // Get one Discussionboard_warning\n     * const discussionboard_warning = await prisma.discussionboard_warning.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_warningFindUniqueArgs>(args: SelectSubset<T, discussionboard_warningFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_warningClient<$Result.GetResult<Prisma.$discussionboard_warningPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_warning that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_warningFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_warning\n     * @example\n     * // Get one Discussionboard_warning\n     * const discussionboard_warning = await prisma.discussionboard_warning.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_warningFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_warningFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_warningClient<$Result.GetResult<Prisma.$discussionboard_warningPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_warning that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_warningFindFirstArgs} args - Arguments to find a Discussionboard_warning\n     * @example\n     * // Get one Discussionboard_warning\n     * const discussionboard_warning = await prisma.discussionboard_warning.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_warningFindFirstArgs>(args?: SelectSubset<T, discussionboard_warningFindFirstArgs<ExtArgs>>): Prisma__discussionboard_warningClient<$Result.GetResult<Prisma.$discussionboard_warningPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_warning that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_warningFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_warning\n     * @example\n     * // Get one Discussionboard_warning\n     * const discussionboard_warning = await prisma.discussionboard_warning.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_warningFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_warningFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_warningClient<$Result.GetResult<Prisma.$discussionboard_warningPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_warnings that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_warningFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_warnings\n     * const discussionboard_warnings = await prisma.discussionboard_warning.findMany()\n     * \n     * // Get first 10 Discussionboard_warnings\n     * const discussionboard_warnings = await prisma.discussionboard_warning.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_warningWithIdOnly = await prisma.discussionboard_warning.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_warningFindManyArgs>(args?: SelectSubset<T, discussionboard_warningFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_warningPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_warning.\n     * @param {discussionboard_warningCreateArgs} args - Arguments to create a Discussionboard_warning.\n     * @example\n     * // Create one Discussionboard_warning\n     * const Discussionboard_warning = await prisma.discussionboard_warning.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_warning\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_warningCreateArgs>(args: SelectSubset<T, discussionboard_warningCreateArgs<ExtArgs>>): Prisma__discussionboard_warningClient<$Result.GetResult<Prisma.$discussionboard_warningPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_warnings.\n     * @param {discussionboard_warningCreateManyArgs} args - Arguments to create many Discussionboard_warnings.\n     * @example\n     * // Create many Discussionboard_warnings\n     * const discussionboard_warning = await prisma.discussionboard_warning.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_warningCreateManyArgs>(args?: SelectSubset<T, discussionboard_warningCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_warnings and returns the data saved in the database.\n     * @param {discussionboard_warningCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_warnings.\n     * @example\n     * // Create many Discussionboard_warnings\n     * const discussionboard_warning = await prisma.discussionboard_warning.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_warnings and only return the `id`\n     * const discussionboard_warningWithIdOnly = await prisma.discussionboard_warning.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_warningCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_warningCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_warningPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_warning.\n     * @param {discussionboard_warningDeleteArgs} args - Arguments to delete one Discussionboard_warning.\n     * @example\n     * // Delete one Discussionboard_warning\n     * const Discussionboard_warning = await prisma.discussionboard_warning.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_warning\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_warningDeleteArgs>(args: SelectSubset<T, discussionboard_warningDeleteArgs<ExtArgs>>): Prisma__discussionboard_warningClient<$Result.GetResult<Prisma.$discussionboard_warningPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_warning.\n     * @param {discussionboard_warningUpdateArgs} args - Arguments to update one Discussionboard_warning.\n     * @example\n     * // Update one Discussionboard_warning\n     * const discussionboard_warning = await prisma.discussionboard_warning.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_warningUpdateArgs>(args: SelectSubset<T, discussionboard_warningUpdateArgs<ExtArgs>>): Prisma__discussionboard_warningClient<$Result.GetResult<Prisma.$discussionboard_warningPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_warnings.\n     * @param {discussionboard_warningDeleteManyArgs} args - Arguments to filter Discussionboard_warnings to delete.\n     * @example\n     * // Delete a few Discussionboard_warnings\n     * const { count } = await prisma.discussionboard_warning.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_warningDeleteManyArgs>(args?: SelectSubset<T, discussionboard_warningDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_warnings.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_warningUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_warnings\n     * const discussionboard_warning = await prisma.discussionboard_warning.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_warningUpdateManyArgs>(args: SelectSubset<T, discussionboard_warningUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_warnings and returns the data updated in the database.\n     * @param {discussionboard_warningUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_warnings.\n     * @example\n     * // Update many Discussionboard_warnings\n     * const discussionboard_warning = await prisma.discussionboard_warning.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_warnings and only return the `id`\n     * const discussionboard_warningWithIdOnly = await prisma.discussionboard_warning.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_warningUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_warningUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_warningPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_warning.\n     * @param {discussionboard_warningUpsertArgs} args - Arguments to update or create a Discussionboard_warning.\n     * @example\n     * // Update or create a Discussionboard_warning\n     * const discussionboard_warning = await prisma.discussionboard_warning.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_warning\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_warning we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_warningUpsertArgs>(args: SelectSubset<T, discussionboard_warningUpsertArgs<ExtArgs>>): Prisma__discussionboard_warningClient<$Result.GetResult<Prisma.$discussionboard_warningPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_warnings.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_warningCountArgs} args - Arguments to filter Discussionboard_warnings to count.\n     * @example\n     * // Count the number of Discussionboard_warnings\n     * const count = await prisma.discussionboard_warning.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_warnings we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_warningCountArgs>(\n      args?: Subset<T, discussionboard_warningCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_warningCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_warning.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_warningAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_warningAggregateArgs>(args: Subset<T, Discussionboard_warningAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_warningAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_warning.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_warningGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_warningGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_warningGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_warningGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_warningGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_warningGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_warning model\n   */\n  readonly fields: discussionboard_warningFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_warning.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_warningClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    issuer<T extends discussionboard_userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_userDefaultArgs<ExtArgs>>): Prisma__discussionboard_userClient<$Result.GetResult<Prisma.$discussionboard_userPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    recipient<T extends discussionboard_userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_userDefaultArgs<ExtArgs>>): Prisma__discussionboard_userClient<$Result.GetResult<Prisma.$discussionboard_userPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    warning_post<T extends discussionboard_warning$warning_postArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_warning$warning_postArgs<ExtArgs>>): Prisma__discussionboard_postClient<$Result.GetResult<Prisma.$discussionboard_postPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    warning_comment<T extends discussionboard_warning$warning_commentArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_warning$warning_commentArgs<ExtArgs>>): Prisma__discussionboard_commentsClient<$Result.GetResult<Prisma.$discussionboard_commentsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    discussionboard_ban<T extends discussionboard_warning$discussionboard_banArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_warning$discussionboard_banArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_banPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_warning model\n   */\n  interface discussionboard_warningFieldRefs {\n    readonly id: FieldRef<\"discussionboard_warning\", 'String'>\n    readonly issued_by_id: FieldRef<\"discussionboard_warning\", 'String'>\n    readonly issued_to_id: FieldRef<\"discussionboard_warning\", 'String'>\n    readonly post_id: FieldRef<\"discussionboard_warning\", 'String'>\n    readonly comment_id: FieldRef<\"discussionboard_warning\", 'String'>\n    readonly warning_type: FieldRef<\"discussionboard_warning\", 'String'>\n    readonly message: FieldRef<\"discussionboard_warning\", 'String'>\n    readonly issued_at: FieldRef<\"discussionboard_warning\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_warning findUnique\n   */\n  export type discussionboard_warningFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_warning\n     */\n    select?: discussionboard_warningSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_warning\n     */\n    omit?: discussionboard_warningOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_warningInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_warning to fetch.\n     */\n    where: discussionboard_warningWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_warning findUniqueOrThrow\n   */\n  export type discussionboard_warningFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_warning\n     */\n    select?: discussionboard_warningSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_warning\n     */\n    omit?: discussionboard_warningOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_warningInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_warning to fetch.\n     */\n    where: discussionboard_warningWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_warning findFirst\n   */\n  export type discussionboard_warningFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_warning\n     */\n    select?: discussionboard_warningSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_warning\n     */\n    omit?: discussionboard_warningOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_warningInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_warning to fetch.\n     */\n    where?: discussionboard_warningWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_warnings to fetch.\n     */\n    orderBy?: discussionboard_warningOrderByWithRelationInput | discussionboard_warningOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_warnings.\n     */\n    cursor?: discussionboard_warningWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_warnings from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_warnings.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_warnings.\n     */\n    distinct?: Discussionboard_warningScalarFieldEnum | Discussionboard_warningScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_warning findFirstOrThrow\n   */\n  export type discussionboard_warningFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_warning\n     */\n    select?: discussionboard_warningSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_warning\n     */\n    omit?: discussionboard_warningOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_warningInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_warning to fetch.\n     */\n    where?: discussionboard_warningWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_warnings to fetch.\n     */\n    orderBy?: discussionboard_warningOrderByWithRelationInput | discussionboard_warningOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_warnings.\n     */\n    cursor?: discussionboard_warningWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_warnings from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_warnings.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_warnings.\n     */\n    distinct?: Discussionboard_warningScalarFieldEnum | Discussionboard_warningScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_warning findMany\n   */\n  export type discussionboard_warningFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_warning\n     */\n    select?: discussionboard_warningSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_warning\n     */\n    omit?: discussionboard_warningOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_warningInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_warnings to fetch.\n     */\n    where?: discussionboard_warningWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_warnings to fetch.\n     */\n    orderBy?: discussionboard_warningOrderByWithRelationInput | discussionboard_warningOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_warnings.\n     */\n    cursor?: discussionboard_warningWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_warnings from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_warnings.\n     */\n    skip?: number\n    distinct?: Discussionboard_warningScalarFieldEnum | Discussionboard_warningScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_warning create\n   */\n  export type discussionboard_warningCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_warning\n     */\n    select?: discussionboard_warningSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_warning\n     */\n    omit?: discussionboard_warningOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_warningInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_warning.\n     */\n    data: XOR<discussionboard_warningCreateInput, discussionboard_warningUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_warning createMany\n   */\n  export type discussionboard_warningCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_warnings.\n     */\n    data: discussionboard_warningCreateManyInput | discussionboard_warningCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_warning createManyAndReturn\n   */\n  export type discussionboard_warningCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_warning\n     */\n    select?: discussionboard_warningSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_warning\n     */\n    omit?: discussionboard_warningOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_warnings.\n     */\n    data: discussionboard_warningCreateManyInput | discussionboard_warningCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_warningIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_warning update\n   */\n  export type discussionboard_warningUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_warning\n     */\n    select?: discussionboard_warningSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_warning\n     */\n    omit?: discussionboard_warningOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_warningInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_warning.\n     */\n    data: XOR<discussionboard_warningUpdateInput, discussionboard_warningUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_warning to update.\n     */\n    where: discussionboard_warningWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_warning updateMany\n   */\n  export type discussionboard_warningUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_warnings.\n     */\n    data: XOR<discussionboard_warningUpdateManyMutationInput, discussionboard_warningUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_warnings to update\n     */\n    where?: discussionboard_warningWhereInput\n    /**\n     * Limit how many discussionboard_warnings to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_warning updateManyAndReturn\n   */\n  export type discussionboard_warningUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_warning\n     */\n    select?: discussionboard_warningSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_warning\n     */\n    omit?: discussionboard_warningOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_warnings.\n     */\n    data: XOR<discussionboard_warningUpdateManyMutationInput, discussionboard_warningUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_warnings to update\n     */\n    where?: discussionboard_warningWhereInput\n    /**\n     * Limit how many discussionboard_warnings to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_warningIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_warning upsert\n   */\n  export type discussionboard_warningUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_warning\n     */\n    select?: discussionboard_warningSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_warning\n     */\n    omit?: discussionboard_warningOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_warningInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_warning to update in case it exists.\n     */\n    where: discussionboard_warningWhereUniqueInput\n    /**\n     * In case the discussionboard_warning found by the `where` argument doesn't exist, create a new discussionboard_warning with this data.\n     */\n    create: XOR<discussionboard_warningCreateInput, discussionboard_warningUncheckedCreateInput>\n    /**\n     * In case the discussionboard_warning was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_warningUpdateInput, discussionboard_warningUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_warning delete\n   */\n  export type discussionboard_warningDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_warning\n     */\n    select?: discussionboard_warningSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_warning\n     */\n    omit?: discussionboard_warningOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_warningInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_warning to delete.\n     */\n    where: discussionboard_warningWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_warning deleteMany\n   */\n  export type discussionboard_warningDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_warnings to delete\n     */\n    where?: discussionboard_warningWhereInput\n    /**\n     * Limit how many discussionboard_warnings to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_warning.warning_post\n   */\n  export type discussionboard_warning$warning_postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post\n     */\n    select?: discussionboard_postSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post\n     */\n    omit?: discussionboard_postOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_postInclude<ExtArgs> | null\n    where?: discussionboard_postWhereInput\n  }\n\n  /**\n   * discussionboard_warning.warning_comment\n   */\n  export type discussionboard_warning$warning_commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comments\n     */\n    select?: discussionboard_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comments\n     */\n    omit?: discussionboard_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_commentsInclude<ExtArgs> | null\n    where?: discussionboard_commentsWhereInput\n  }\n\n  /**\n   * discussionboard_warning.discussionboard_ban\n   */\n  export type discussionboard_warning$discussionboard_banArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_ban\n     */\n    select?: discussionboard_banSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_ban\n     */\n    omit?: discussionboard_banOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_banInclude<ExtArgs> | null\n    where?: discussionboard_banWhereInput\n    orderBy?: discussionboard_banOrderByWithRelationInput | discussionboard_banOrderByWithRelationInput[]\n    cursor?: discussionboard_banWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_banScalarFieldEnum | Discussionboard_banScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_warning without action\n   */\n  export type discussionboard_warningDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_warning\n     */\n    select?: discussionboard_warningSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_warning\n     */\n    omit?: discussionboard_warningOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_warningInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_ban\n   */\n\n  export type AggregateDiscussionboard_ban = {\n    _count: Discussionboard_banCountAggregateOutputType | null\n    _min: Discussionboard_banMinAggregateOutputType | null\n    _max: Discussionboard_banMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_banMinAggregateOutputType = {\n    id: string | null\n    banned_user_id: string | null\n    banned_by_id: string | null\n    warning_id: string | null\n    ban_type: string | null\n    reason: string | null\n    issued_at: Date | null\n    expires_at: Date | null\n  }\n\n  export type Discussionboard_banMaxAggregateOutputType = {\n    id: string | null\n    banned_user_id: string | null\n    banned_by_id: string | null\n    warning_id: string | null\n    ban_type: string | null\n    reason: string | null\n    issued_at: Date | null\n    expires_at: Date | null\n  }\n\n  export type Discussionboard_banCountAggregateOutputType = {\n    id: number\n    banned_user_id: number\n    banned_by_id: number\n    warning_id: number\n    ban_type: number\n    reason: number\n    issued_at: number\n    expires_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_banMinAggregateInputType = {\n    id?: true\n    banned_user_id?: true\n    banned_by_id?: true\n    warning_id?: true\n    ban_type?: true\n    reason?: true\n    issued_at?: true\n    expires_at?: true\n  }\n\n  export type Discussionboard_banMaxAggregateInputType = {\n    id?: true\n    banned_user_id?: true\n    banned_by_id?: true\n    warning_id?: true\n    ban_type?: true\n    reason?: true\n    issued_at?: true\n    expires_at?: true\n  }\n\n  export type Discussionboard_banCountAggregateInputType = {\n    id?: true\n    banned_user_id?: true\n    banned_by_id?: true\n    warning_id?: true\n    ban_type?: true\n    reason?: true\n    issued_at?: true\n    expires_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_banAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_ban to aggregate.\n     */\n    where?: discussionboard_banWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_bans to fetch.\n     */\n    orderBy?: discussionboard_banOrderByWithRelationInput | discussionboard_banOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_banWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_bans from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_bans.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_bans\n    **/\n    _count?: true | Discussionboard_banCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_banMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_banMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_banAggregateType<T extends Discussionboard_banAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_ban]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_ban[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_ban[P]>\n  }\n\n\n\n\n  export type discussionboard_banGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_banWhereInput\n    orderBy?: discussionboard_banOrderByWithAggregationInput | discussionboard_banOrderByWithAggregationInput[]\n    by: Discussionboard_banScalarFieldEnum[] | Discussionboard_banScalarFieldEnum\n    having?: discussionboard_banScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_banCountAggregateInputType | true\n    _min?: Discussionboard_banMinAggregateInputType\n    _max?: Discussionboard_banMaxAggregateInputType\n  }\n\n  export type Discussionboard_banGroupByOutputType = {\n    id: string\n    banned_user_id: string\n    banned_by_id: string\n    warning_id: string | null\n    ban_type: string\n    reason: string\n    issued_at: Date\n    expires_at: Date | null\n    _count: Discussionboard_banCountAggregateOutputType | null\n    _min: Discussionboard_banMinAggregateOutputType | null\n    _max: Discussionboard_banMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_banGroupByPayload<T extends discussionboard_banGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_banGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_banGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_banGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_banGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_banSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    banned_user_id?: boolean\n    banned_by_id?: boolean\n    warning_id?: boolean\n    ban_type?: boolean\n    reason?: boolean\n    issued_at?: boolean\n    expires_at?: boolean\n    banned_user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    ban_actor?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    related_warning?: boolean | discussionboard_ban$related_warningArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_ban\"]>\n\n  export type discussionboard_banSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    banned_user_id?: boolean\n    banned_by_id?: boolean\n    warning_id?: boolean\n    ban_type?: boolean\n    reason?: boolean\n    issued_at?: boolean\n    expires_at?: boolean\n    banned_user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    ban_actor?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    related_warning?: boolean | discussionboard_ban$related_warningArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_ban\"]>\n\n  export type discussionboard_banSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    banned_user_id?: boolean\n    banned_by_id?: boolean\n    warning_id?: boolean\n    ban_type?: boolean\n    reason?: boolean\n    issued_at?: boolean\n    expires_at?: boolean\n    banned_user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    ban_actor?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    related_warning?: boolean | discussionboard_ban$related_warningArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_ban\"]>\n\n  export type discussionboard_banSelectScalar = {\n    id?: boolean\n    banned_user_id?: boolean\n    banned_by_id?: boolean\n    warning_id?: boolean\n    ban_type?: boolean\n    reason?: boolean\n    issued_at?: boolean\n    expires_at?: boolean\n  }\n\n  export type discussionboard_banOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"banned_user_id\" | \"banned_by_id\" | \"warning_id\" | \"ban_type\" | \"reason\" | \"issued_at\" | \"expires_at\", ExtArgs[\"result\"][\"discussionboard_ban\"]>\n  export type discussionboard_banInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    banned_user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    ban_actor?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    related_warning?: boolean | discussionboard_ban$related_warningArgs<ExtArgs>\n  }\n  export type discussionboard_banIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    banned_user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    ban_actor?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    related_warning?: boolean | discussionboard_ban$related_warningArgs<ExtArgs>\n  }\n  export type discussionboard_banIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    banned_user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    ban_actor?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    related_warning?: boolean | discussionboard_ban$related_warningArgs<ExtArgs>\n  }\n\n  export type $discussionboard_banPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_ban\"\n    objects: {\n      banned_user: Prisma.$discussionboard_userPayload<ExtArgs>\n      ban_actor: Prisma.$discussionboard_userPayload<ExtArgs>\n      related_warning: Prisma.$discussionboard_warningPayload<ExtArgs> | null\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * [Primary key] - Unique ban instance ID; ensures each ban/mute event is singular and traceable.\n       */\n      id: string\n      /**\n       * [Banned user] - Who is subjected to the ban/mute, referencing the user entity.\n       */\n      banned_user_id: string\n      /**\n       * [Moderator/admin] - Initiating user performing the ban/mute.\n       */\n      banned_by_id: string\n      /**\n       * [Related warning] - Optionally reference a specific prior warning that resulted in the ban/mute.\n       */\n      warning_id: string | null\n      /**\n       * [Ban type] - Type category; e.g., 'mute', 'temp_ban', 'perm_ban', etc.\n       */\n      ban_type: string\n      /**\n       * [Ban reason] - Human-entered explanation for audit, traceability, and user appeals.\n       */\n      reason: string\n      /**\n       * [Ban start time] - When ban was placed.\n       */\n      issued_at: Date\n      /**\n       * [Ban expiry] - When unban occurs (nullable for permanent bans).\n       */\n      expires_at: Date | null\n    }, ExtArgs[\"result\"][\"discussionboard_ban\"]>\n    composites: {}\n  }\n\n  type discussionboard_banGetPayload<S extends boolean | null | undefined | discussionboard_banDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_banPayload, S>\n\n  type discussionboard_banCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_banFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_banCountAggregateInputType | true\n    }\n\n  export interface discussionboard_banDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_ban'], meta: { name: 'discussionboard_ban' } }\n    /**\n     * Find zero or one Discussionboard_ban that matches the filter.\n     * @param {discussionboard_banFindUniqueArgs} args - Arguments to find a Discussionboard_ban\n     * @example\n     * // Get one Discussionboard_ban\n     * const discussionboard_ban = await prisma.discussionboard_ban.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_banFindUniqueArgs>(args: SelectSubset<T, discussionboard_banFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_banClient<$Result.GetResult<Prisma.$discussionboard_banPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_ban that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_banFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_ban\n     * @example\n     * // Get one Discussionboard_ban\n     * const discussionboard_ban = await prisma.discussionboard_ban.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_banFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_banFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_banClient<$Result.GetResult<Prisma.$discussionboard_banPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_ban that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_banFindFirstArgs} args - Arguments to find a Discussionboard_ban\n     * @example\n     * // Get one Discussionboard_ban\n     * const discussionboard_ban = await prisma.discussionboard_ban.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_banFindFirstArgs>(args?: SelectSubset<T, discussionboard_banFindFirstArgs<ExtArgs>>): Prisma__discussionboard_banClient<$Result.GetResult<Prisma.$discussionboard_banPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_ban that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_banFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_ban\n     * @example\n     * // Get one Discussionboard_ban\n     * const discussionboard_ban = await prisma.discussionboard_ban.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_banFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_banFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_banClient<$Result.GetResult<Prisma.$discussionboard_banPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_bans that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_banFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_bans\n     * const discussionboard_bans = await prisma.discussionboard_ban.findMany()\n     * \n     * // Get first 10 Discussionboard_bans\n     * const discussionboard_bans = await prisma.discussionboard_ban.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_banWithIdOnly = await prisma.discussionboard_ban.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_banFindManyArgs>(args?: SelectSubset<T, discussionboard_banFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_banPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_ban.\n     * @param {discussionboard_banCreateArgs} args - Arguments to create a Discussionboard_ban.\n     * @example\n     * // Create one Discussionboard_ban\n     * const Discussionboard_ban = await prisma.discussionboard_ban.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_ban\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_banCreateArgs>(args: SelectSubset<T, discussionboard_banCreateArgs<ExtArgs>>): Prisma__discussionboard_banClient<$Result.GetResult<Prisma.$discussionboard_banPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_bans.\n     * @param {discussionboard_banCreateManyArgs} args - Arguments to create many Discussionboard_bans.\n     * @example\n     * // Create many Discussionboard_bans\n     * const discussionboard_ban = await prisma.discussionboard_ban.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_banCreateManyArgs>(args?: SelectSubset<T, discussionboard_banCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_bans and returns the data saved in the database.\n     * @param {discussionboard_banCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_bans.\n     * @example\n     * // Create many Discussionboard_bans\n     * const discussionboard_ban = await prisma.discussionboard_ban.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_bans and only return the `id`\n     * const discussionboard_banWithIdOnly = await prisma.discussionboard_ban.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_banCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_banCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_banPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_ban.\n     * @param {discussionboard_banDeleteArgs} args - Arguments to delete one Discussionboard_ban.\n     * @example\n     * // Delete one Discussionboard_ban\n     * const Discussionboard_ban = await prisma.discussionboard_ban.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_ban\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_banDeleteArgs>(args: SelectSubset<T, discussionboard_banDeleteArgs<ExtArgs>>): Prisma__discussionboard_banClient<$Result.GetResult<Prisma.$discussionboard_banPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_ban.\n     * @param {discussionboard_banUpdateArgs} args - Arguments to update one Discussionboard_ban.\n     * @example\n     * // Update one Discussionboard_ban\n     * const discussionboard_ban = await prisma.discussionboard_ban.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_banUpdateArgs>(args: SelectSubset<T, discussionboard_banUpdateArgs<ExtArgs>>): Prisma__discussionboard_banClient<$Result.GetResult<Prisma.$discussionboard_banPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_bans.\n     * @param {discussionboard_banDeleteManyArgs} args - Arguments to filter Discussionboard_bans to delete.\n     * @example\n     * // Delete a few Discussionboard_bans\n     * const { count } = await prisma.discussionboard_ban.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_banDeleteManyArgs>(args?: SelectSubset<T, discussionboard_banDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_bans.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_banUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_bans\n     * const discussionboard_ban = await prisma.discussionboard_ban.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_banUpdateManyArgs>(args: SelectSubset<T, discussionboard_banUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_bans and returns the data updated in the database.\n     * @param {discussionboard_banUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_bans.\n     * @example\n     * // Update many Discussionboard_bans\n     * const discussionboard_ban = await prisma.discussionboard_ban.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_bans and only return the `id`\n     * const discussionboard_banWithIdOnly = await prisma.discussionboard_ban.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_banUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_banUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_banPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_ban.\n     * @param {discussionboard_banUpsertArgs} args - Arguments to update or create a Discussionboard_ban.\n     * @example\n     * // Update or create a Discussionboard_ban\n     * const discussionboard_ban = await prisma.discussionboard_ban.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_ban\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_ban we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_banUpsertArgs>(args: SelectSubset<T, discussionboard_banUpsertArgs<ExtArgs>>): Prisma__discussionboard_banClient<$Result.GetResult<Prisma.$discussionboard_banPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_bans.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_banCountArgs} args - Arguments to filter Discussionboard_bans to count.\n     * @example\n     * // Count the number of Discussionboard_bans\n     * const count = await prisma.discussionboard_ban.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_bans we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_banCountArgs>(\n      args?: Subset<T, discussionboard_banCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_banCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_ban.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_banAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_banAggregateArgs>(args: Subset<T, Discussionboard_banAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_banAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_ban.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_banGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_banGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_banGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_banGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_banGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_banGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_ban model\n   */\n  readonly fields: discussionboard_banFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_ban.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_banClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    banned_user<T extends discussionboard_userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_userDefaultArgs<ExtArgs>>): Prisma__discussionboard_userClient<$Result.GetResult<Prisma.$discussionboard_userPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    ban_actor<T extends discussionboard_userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_userDefaultArgs<ExtArgs>>): Prisma__discussionboard_userClient<$Result.GetResult<Prisma.$discussionboard_userPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    related_warning<T extends discussionboard_ban$related_warningArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_ban$related_warningArgs<ExtArgs>>): Prisma__discussionboard_warningClient<$Result.GetResult<Prisma.$discussionboard_warningPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_ban model\n   */\n  interface discussionboard_banFieldRefs {\n    readonly id: FieldRef<\"discussionboard_ban\", 'String'>\n    readonly banned_user_id: FieldRef<\"discussionboard_ban\", 'String'>\n    readonly banned_by_id: FieldRef<\"discussionboard_ban\", 'String'>\n    readonly warning_id: FieldRef<\"discussionboard_ban\", 'String'>\n    readonly ban_type: FieldRef<\"discussionboard_ban\", 'String'>\n    readonly reason: FieldRef<\"discussionboard_ban\", 'String'>\n    readonly issued_at: FieldRef<\"discussionboard_ban\", 'DateTime'>\n    readonly expires_at: FieldRef<\"discussionboard_ban\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_ban findUnique\n   */\n  export type discussionboard_banFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_ban\n     */\n    select?: discussionboard_banSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_ban\n     */\n    omit?: discussionboard_banOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_banInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_ban to fetch.\n     */\n    where: discussionboard_banWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_ban findUniqueOrThrow\n   */\n  export type discussionboard_banFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_ban\n     */\n    select?: discussionboard_banSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_ban\n     */\n    omit?: discussionboard_banOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_banInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_ban to fetch.\n     */\n    where: discussionboard_banWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_ban findFirst\n   */\n  export type discussionboard_banFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_ban\n     */\n    select?: discussionboard_banSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_ban\n     */\n    omit?: discussionboard_banOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_banInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_ban to fetch.\n     */\n    where?: discussionboard_banWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_bans to fetch.\n     */\n    orderBy?: discussionboard_banOrderByWithRelationInput | discussionboard_banOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_bans.\n     */\n    cursor?: discussionboard_banWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_bans from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_bans.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_bans.\n     */\n    distinct?: Discussionboard_banScalarFieldEnum | Discussionboard_banScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_ban findFirstOrThrow\n   */\n  export type discussionboard_banFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_ban\n     */\n    select?: discussionboard_banSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_ban\n     */\n    omit?: discussionboard_banOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_banInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_ban to fetch.\n     */\n    where?: discussionboard_banWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_bans to fetch.\n     */\n    orderBy?: discussionboard_banOrderByWithRelationInput | discussionboard_banOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_bans.\n     */\n    cursor?: discussionboard_banWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_bans from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_bans.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_bans.\n     */\n    distinct?: Discussionboard_banScalarFieldEnum | Discussionboard_banScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_ban findMany\n   */\n  export type discussionboard_banFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_ban\n     */\n    select?: discussionboard_banSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_ban\n     */\n    omit?: discussionboard_banOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_banInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_bans to fetch.\n     */\n    where?: discussionboard_banWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_bans to fetch.\n     */\n    orderBy?: discussionboard_banOrderByWithRelationInput | discussionboard_banOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_bans.\n     */\n    cursor?: discussionboard_banWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_bans from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_bans.\n     */\n    skip?: number\n    distinct?: Discussionboard_banScalarFieldEnum | Discussionboard_banScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_ban create\n   */\n  export type discussionboard_banCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_ban\n     */\n    select?: discussionboard_banSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_ban\n     */\n    omit?: discussionboard_banOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_banInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_ban.\n     */\n    data: XOR<discussionboard_banCreateInput, discussionboard_banUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_ban createMany\n   */\n  export type discussionboard_banCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_bans.\n     */\n    data: discussionboard_banCreateManyInput | discussionboard_banCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_ban createManyAndReturn\n   */\n  export type discussionboard_banCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_ban\n     */\n    select?: discussionboard_banSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_ban\n     */\n    omit?: discussionboard_banOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_bans.\n     */\n    data: discussionboard_banCreateManyInput | discussionboard_banCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_banIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_ban update\n   */\n  export type discussionboard_banUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_ban\n     */\n    select?: discussionboard_banSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_ban\n     */\n    omit?: discussionboard_banOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_banInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_ban.\n     */\n    data: XOR<discussionboard_banUpdateInput, discussionboard_banUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_ban to update.\n     */\n    where: discussionboard_banWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_ban updateMany\n   */\n  export type discussionboard_banUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_bans.\n     */\n    data: XOR<discussionboard_banUpdateManyMutationInput, discussionboard_banUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_bans to update\n     */\n    where?: discussionboard_banWhereInput\n    /**\n     * Limit how many discussionboard_bans to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_ban updateManyAndReturn\n   */\n  export type discussionboard_banUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_ban\n     */\n    select?: discussionboard_banSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_ban\n     */\n    omit?: discussionboard_banOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_bans.\n     */\n    data: XOR<discussionboard_banUpdateManyMutationInput, discussionboard_banUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_bans to update\n     */\n    where?: discussionboard_banWhereInput\n    /**\n     * Limit how many discussionboard_bans to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_banIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_ban upsert\n   */\n  export type discussionboard_banUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_ban\n     */\n    select?: discussionboard_banSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_ban\n     */\n    omit?: discussionboard_banOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_banInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_ban to update in case it exists.\n     */\n    where: discussionboard_banWhereUniqueInput\n    /**\n     * In case the discussionboard_ban found by the `where` argument doesn't exist, create a new discussionboard_ban with this data.\n     */\n    create: XOR<discussionboard_banCreateInput, discussionboard_banUncheckedCreateInput>\n    /**\n     * In case the discussionboard_ban was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_banUpdateInput, discussionboard_banUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_ban delete\n   */\n  export type discussionboard_banDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_ban\n     */\n    select?: discussionboard_banSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_ban\n     */\n    omit?: discussionboard_banOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_banInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_ban to delete.\n     */\n    where: discussionboard_banWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_ban deleteMany\n   */\n  export type discussionboard_banDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_bans to delete\n     */\n    where?: discussionboard_banWhereInput\n    /**\n     * Limit how many discussionboard_bans to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_ban.related_warning\n   */\n  export type discussionboard_ban$related_warningArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_warning\n     */\n    select?: discussionboard_warningSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_warning\n     */\n    omit?: discussionboard_warningOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_warningInclude<ExtArgs> | null\n    where?: discussionboard_warningWhereInput\n  }\n\n  /**\n   * discussionboard_ban without action\n   */\n  export type discussionboard_banDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_ban\n     */\n    select?: discussionboard_banSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_ban\n     */\n    omit?: discussionboard_banOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_banInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_notification\n   */\n\n  export type AggregateDiscussionboard_notification = {\n    _count: Discussionboard_notificationCountAggregateOutputType | null\n    _min: Discussionboard_notificationMinAggregateOutputType | null\n    _max: Discussionboard_notificationMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_notificationMinAggregateOutputType = {\n    id: string | null\n    recipient_user_id: string | null\n    related_post_id: string | null\n    related_comment_id: string | null\n    actor_user_id: string | null\n    type: string | null\n    message: string | null\n    is_read: boolean | null\n    created_at: Date | null\n  }\n\n  export type Discussionboard_notificationMaxAggregateOutputType = {\n    id: string | null\n    recipient_user_id: string | null\n    related_post_id: string | null\n    related_comment_id: string | null\n    actor_user_id: string | null\n    type: string | null\n    message: string | null\n    is_read: boolean | null\n    created_at: Date | null\n  }\n\n  export type Discussionboard_notificationCountAggregateOutputType = {\n    id: number\n    recipient_user_id: number\n    related_post_id: number\n    related_comment_id: number\n    actor_user_id: number\n    type: number\n    message: number\n    is_read: number\n    created_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_notificationMinAggregateInputType = {\n    id?: true\n    recipient_user_id?: true\n    related_post_id?: true\n    related_comment_id?: true\n    actor_user_id?: true\n    type?: true\n    message?: true\n    is_read?: true\n    created_at?: true\n  }\n\n  export type Discussionboard_notificationMaxAggregateInputType = {\n    id?: true\n    recipient_user_id?: true\n    related_post_id?: true\n    related_comment_id?: true\n    actor_user_id?: true\n    type?: true\n    message?: true\n    is_read?: true\n    created_at?: true\n  }\n\n  export type Discussionboard_notificationCountAggregateInputType = {\n    id?: true\n    recipient_user_id?: true\n    related_post_id?: true\n    related_comment_id?: true\n    actor_user_id?: true\n    type?: true\n    message?: true\n    is_read?: true\n    created_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_notificationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_notification to aggregate.\n     */\n    where?: discussionboard_notificationWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_notifications to fetch.\n     */\n    orderBy?: discussionboard_notificationOrderByWithRelationInput | discussionboard_notificationOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_notificationWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_notifications from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_notifications.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_notifications\n    **/\n    _count?: true | Discussionboard_notificationCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_notificationMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_notificationMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_notificationAggregateType<T extends Discussionboard_notificationAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_notification]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_notification[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_notification[P]>\n  }\n\n\n\n\n  export type discussionboard_notificationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_notificationWhereInput\n    orderBy?: discussionboard_notificationOrderByWithAggregationInput | discussionboard_notificationOrderByWithAggregationInput[]\n    by: Discussionboard_notificationScalarFieldEnum[] | Discussionboard_notificationScalarFieldEnum\n    having?: discussionboard_notificationScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_notificationCountAggregateInputType | true\n    _min?: Discussionboard_notificationMinAggregateInputType\n    _max?: Discussionboard_notificationMaxAggregateInputType\n  }\n\n  export type Discussionboard_notificationGroupByOutputType = {\n    id: string\n    recipient_user_id: string\n    related_post_id: string | null\n    related_comment_id: string | null\n    actor_user_id: string | null\n    type: string\n    message: string\n    is_read: boolean\n    created_at: Date\n    _count: Discussionboard_notificationCountAggregateOutputType | null\n    _min: Discussionboard_notificationMinAggregateOutputType | null\n    _max: Discussionboard_notificationMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_notificationGroupByPayload<T extends discussionboard_notificationGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_notificationGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_notificationGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_notificationGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_notificationGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_notificationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    recipient_user_id?: boolean\n    related_post_id?: boolean\n    related_comment_id?: boolean\n    actor_user_id?: boolean\n    type?: boolean\n    message?: boolean\n    is_read?: boolean\n    created_at?: boolean\n    recipient_user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    related_post?: boolean | discussionboard_notification$related_postArgs<ExtArgs>\n    related_comment?: boolean | discussionboard_notification$related_commentArgs<ExtArgs>\n    actor_user?: boolean | discussionboard_notification$actor_userArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_notification\"]>\n\n  export type discussionboard_notificationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    recipient_user_id?: boolean\n    related_post_id?: boolean\n    related_comment_id?: boolean\n    actor_user_id?: boolean\n    type?: boolean\n    message?: boolean\n    is_read?: boolean\n    created_at?: boolean\n    recipient_user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    related_post?: boolean | discussionboard_notification$related_postArgs<ExtArgs>\n    related_comment?: boolean | discussionboard_notification$related_commentArgs<ExtArgs>\n    actor_user?: boolean | discussionboard_notification$actor_userArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_notification\"]>\n\n  export type discussionboard_notificationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    recipient_user_id?: boolean\n    related_post_id?: boolean\n    related_comment_id?: boolean\n    actor_user_id?: boolean\n    type?: boolean\n    message?: boolean\n    is_read?: boolean\n    created_at?: boolean\n    recipient_user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    related_post?: boolean | discussionboard_notification$related_postArgs<ExtArgs>\n    related_comment?: boolean | discussionboard_notification$related_commentArgs<ExtArgs>\n    actor_user?: boolean | discussionboard_notification$actor_userArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_notification\"]>\n\n  export type discussionboard_notificationSelectScalar = {\n    id?: boolean\n    recipient_user_id?: boolean\n    related_post_id?: boolean\n    related_comment_id?: boolean\n    actor_user_id?: boolean\n    type?: boolean\n    message?: boolean\n    is_read?: boolean\n    created_at?: boolean\n  }\n\n  export type discussionboard_notificationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"recipient_user_id\" | \"related_post_id\" | \"related_comment_id\" | \"actor_user_id\" | \"type\" | \"message\" | \"is_read\" | \"created_at\", ExtArgs[\"result\"][\"discussionboard_notification\"]>\n  export type discussionboard_notificationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    recipient_user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    related_post?: boolean | discussionboard_notification$related_postArgs<ExtArgs>\n    related_comment?: boolean | discussionboard_notification$related_commentArgs<ExtArgs>\n    actor_user?: boolean | discussionboard_notification$actor_userArgs<ExtArgs>\n  }\n  export type discussionboard_notificationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    recipient_user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    related_post?: boolean | discussionboard_notification$related_postArgs<ExtArgs>\n    related_comment?: boolean | discussionboard_notification$related_commentArgs<ExtArgs>\n    actor_user?: boolean | discussionboard_notification$actor_userArgs<ExtArgs>\n  }\n  export type discussionboard_notificationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    recipient_user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    related_post?: boolean | discussionboard_notification$related_postArgs<ExtArgs>\n    related_comment?: boolean | discussionboard_notification$related_commentArgs<ExtArgs>\n    actor_user?: boolean | discussionboard_notification$actor_userArgs<ExtArgs>\n  }\n\n  export type $discussionboard_notificationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_notification\"\n    objects: {\n      recipient_user: Prisma.$discussionboard_userPayload<ExtArgs>\n      related_post: Prisma.$discussionboard_postPayload<ExtArgs> | null\n      related_comment: Prisma.$discussionboard_commentsPayload<ExtArgs> | null\n      actor_user: Prisma.$discussionboard_userPayload<ExtArgs> | null\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * [Primary key] - Implements unique identification of each notification. Ensures atomic records. For example, used to reference or audit notification events.\n       */\n      id: string\n      /**\n       * [Notification recipient] - Implements which user receives the notification, mapped to requirements for personalized notifications. For example, used to display notifications on user dashboard. Normalization: ensures recipient is atomically referenced and avoids denormalization. REQUIRED.\n       */\n      recipient_user_id: string\n      /**\n       * [Related post] - Associates notification with a post if applicable (e.g., reply, like on post). Fully normalized by optional reference. For example, used when notifying about replies or moderation of a post.\n       */\n      related_post_id: string | null\n      /**\n       * [Related comment] - Associates notification with a comment if applicable (e.g., reply to comment, moderation). Normalized as optional reference. For example, used for notifications about comment mentions.\n       */\n      related_comment_id: string | null\n      /**\n       * [Notification actor/user] - (Optional) The user who triggered this notification (e.g., who liked/commented, moderator/admin who performed action). If the event is system-triggered, this is null. For example, used for 'X replied to your post.' Ensures actor is atomically referenced, prevents denormalization.\n       */\n      actor_user_id: string | null\n      /**\n       * [Notification type] - Classifies the type of notification in accordance with Section 3.7's events (e.g., 'reply', 'like', 'moderator_action', 'system_message', etc.). Fully normalized. For example, enables UI filtering and template selection. Constraint: limited to allowed notification types via application logic.\n       */\n      type: string\n      /**\n       * [Notification body] - Human-readable message content sent to user. Implements functional requirement for notifications to explain events. Maintains normalization by storing only atomic message text; templates and aggregation are managed elsewhere. For example, 'Alice replied to your post.'\n       */\n      message: string\n      /**\n       * [Read/unread flag] - Tracks whether the notification has been marked as read by the recipient, as required by notification preference and in-app UX. Normalized as a pure flag. For example, unread messages appear in notification dropdown. Constraint: only toggled by recipient.\n       */\n      is_read: boolean\n      /**\n       * [Notification creation time] - Implements audit and sorting requirements for notification recency. Ensures full normalization; atomic timestamp. For example, used to order notifications in UI and for cleanup logic.\n       */\n      created_at: Date\n    }, ExtArgs[\"result\"][\"discussionboard_notification\"]>\n    composites: {}\n  }\n\n  type discussionboard_notificationGetPayload<S extends boolean | null | undefined | discussionboard_notificationDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_notificationPayload, S>\n\n  type discussionboard_notificationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_notificationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_notificationCountAggregateInputType | true\n    }\n\n  export interface discussionboard_notificationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_notification'], meta: { name: 'discussionboard_notification' } }\n    /**\n     * Find zero or one Discussionboard_notification that matches the filter.\n     * @param {discussionboard_notificationFindUniqueArgs} args - Arguments to find a Discussionboard_notification\n     * @example\n     * // Get one Discussionboard_notification\n     * const discussionboard_notification = await prisma.discussionboard_notification.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_notificationFindUniqueArgs>(args: SelectSubset<T, discussionboard_notificationFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_notificationClient<$Result.GetResult<Prisma.$discussionboard_notificationPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_notification that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_notificationFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_notification\n     * @example\n     * // Get one Discussionboard_notification\n     * const discussionboard_notification = await prisma.discussionboard_notification.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_notificationFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_notificationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_notificationClient<$Result.GetResult<Prisma.$discussionboard_notificationPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_notification that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_notificationFindFirstArgs} args - Arguments to find a Discussionboard_notification\n     * @example\n     * // Get one Discussionboard_notification\n     * const discussionboard_notification = await prisma.discussionboard_notification.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_notificationFindFirstArgs>(args?: SelectSubset<T, discussionboard_notificationFindFirstArgs<ExtArgs>>): Prisma__discussionboard_notificationClient<$Result.GetResult<Prisma.$discussionboard_notificationPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_notification that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_notificationFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_notification\n     * @example\n     * // Get one Discussionboard_notification\n     * const discussionboard_notification = await prisma.discussionboard_notification.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_notificationFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_notificationFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_notificationClient<$Result.GetResult<Prisma.$discussionboard_notificationPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_notifications that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_notificationFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_notifications\n     * const discussionboard_notifications = await prisma.discussionboard_notification.findMany()\n     * \n     * // Get first 10 Discussionboard_notifications\n     * const discussionboard_notifications = await prisma.discussionboard_notification.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_notificationWithIdOnly = await prisma.discussionboard_notification.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_notificationFindManyArgs>(args?: SelectSubset<T, discussionboard_notificationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_notificationPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_notification.\n     * @param {discussionboard_notificationCreateArgs} args - Arguments to create a Discussionboard_notification.\n     * @example\n     * // Create one Discussionboard_notification\n     * const Discussionboard_notification = await prisma.discussionboard_notification.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_notification\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_notificationCreateArgs>(args: SelectSubset<T, discussionboard_notificationCreateArgs<ExtArgs>>): Prisma__discussionboard_notificationClient<$Result.GetResult<Prisma.$discussionboard_notificationPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_notifications.\n     * @param {discussionboard_notificationCreateManyArgs} args - Arguments to create many Discussionboard_notifications.\n     * @example\n     * // Create many Discussionboard_notifications\n     * const discussionboard_notification = await prisma.discussionboard_notification.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_notificationCreateManyArgs>(args?: SelectSubset<T, discussionboard_notificationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_notifications and returns the data saved in the database.\n     * @param {discussionboard_notificationCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_notifications.\n     * @example\n     * // Create many Discussionboard_notifications\n     * const discussionboard_notification = await prisma.discussionboard_notification.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_notifications and only return the `id`\n     * const discussionboard_notificationWithIdOnly = await prisma.discussionboard_notification.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_notificationCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_notificationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_notificationPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_notification.\n     * @param {discussionboard_notificationDeleteArgs} args - Arguments to delete one Discussionboard_notification.\n     * @example\n     * // Delete one Discussionboard_notification\n     * const Discussionboard_notification = await prisma.discussionboard_notification.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_notification\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_notificationDeleteArgs>(args: SelectSubset<T, discussionboard_notificationDeleteArgs<ExtArgs>>): Prisma__discussionboard_notificationClient<$Result.GetResult<Prisma.$discussionboard_notificationPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_notification.\n     * @param {discussionboard_notificationUpdateArgs} args - Arguments to update one Discussionboard_notification.\n     * @example\n     * // Update one Discussionboard_notification\n     * const discussionboard_notification = await prisma.discussionboard_notification.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_notificationUpdateArgs>(args: SelectSubset<T, discussionboard_notificationUpdateArgs<ExtArgs>>): Prisma__discussionboard_notificationClient<$Result.GetResult<Prisma.$discussionboard_notificationPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_notifications.\n     * @param {discussionboard_notificationDeleteManyArgs} args - Arguments to filter Discussionboard_notifications to delete.\n     * @example\n     * // Delete a few Discussionboard_notifications\n     * const { count } = await prisma.discussionboard_notification.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_notificationDeleteManyArgs>(args?: SelectSubset<T, discussionboard_notificationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_notifications.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_notificationUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_notifications\n     * const discussionboard_notification = await prisma.discussionboard_notification.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_notificationUpdateManyArgs>(args: SelectSubset<T, discussionboard_notificationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_notifications and returns the data updated in the database.\n     * @param {discussionboard_notificationUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_notifications.\n     * @example\n     * // Update many Discussionboard_notifications\n     * const discussionboard_notification = await prisma.discussionboard_notification.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_notifications and only return the `id`\n     * const discussionboard_notificationWithIdOnly = await prisma.discussionboard_notification.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_notificationUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_notificationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_notificationPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_notification.\n     * @param {discussionboard_notificationUpsertArgs} args - Arguments to update or create a Discussionboard_notification.\n     * @example\n     * // Update or create a Discussionboard_notification\n     * const discussionboard_notification = await prisma.discussionboard_notification.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_notification\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_notification we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_notificationUpsertArgs>(args: SelectSubset<T, discussionboard_notificationUpsertArgs<ExtArgs>>): Prisma__discussionboard_notificationClient<$Result.GetResult<Prisma.$discussionboard_notificationPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_notifications.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_notificationCountArgs} args - Arguments to filter Discussionboard_notifications to count.\n     * @example\n     * // Count the number of Discussionboard_notifications\n     * const count = await prisma.discussionboard_notification.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_notifications we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_notificationCountArgs>(\n      args?: Subset<T, discussionboard_notificationCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_notificationCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_notification.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_notificationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_notificationAggregateArgs>(args: Subset<T, Discussionboard_notificationAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_notificationAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_notification.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_notificationGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_notificationGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_notificationGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_notificationGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_notificationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_notificationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_notification model\n   */\n  readonly fields: discussionboard_notificationFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_notification.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_notificationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    recipient_user<T extends discussionboard_userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_userDefaultArgs<ExtArgs>>): Prisma__discussionboard_userClient<$Result.GetResult<Prisma.$discussionboard_userPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    related_post<T extends discussionboard_notification$related_postArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_notification$related_postArgs<ExtArgs>>): Prisma__discussionboard_postClient<$Result.GetResult<Prisma.$discussionboard_postPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    related_comment<T extends discussionboard_notification$related_commentArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_notification$related_commentArgs<ExtArgs>>): Prisma__discussionboard_commentsClient<$Result.GetResult<Prisma.$discussionboard_commentsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    actor_user<T extends discussionboard_notification$actor_userArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_notification$actor_userArgs<ExtArgs>>): Prisma__discussionboard_userClient<$Result.GetResult<Prisma.$discussionboard_userPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_notification model\n   */\n  interface discussionboard_notificationFieldRefs {\n    readonly id: FieldRef<\"discussionboard_notification\", 'String'>\n    readonly recipient_user_id: FieldRef<\"discussionboard_notification\", 'String'>\n    readonly related_post_id: FieldRef<\"discussionboard_notification\", 'String'>\n    readonly related_comment_id: FieldRef<\"discussionboard_notification\", 'String'>\n    readonly actor_user_id: FieldRef<\"discussionboard_notification\", 'String'>\n    readonly type: FieldRef<\"discussionboard_notification\", 'String'>\n    readonly message: FieldRef<\"discussionboard_notification\", 'String'>\n    readonly is_read: FieldRef<\"discussionboard_notification\", 'Boolean'>\n    readonly created_at: FieldRef<\"discussionboard_notification\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_notification findUnique\n   */\n  export type discussionboard_notificationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification\n     */\n    select?: discussionboard_notificationSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification\n     */\n    omit?: discussionboard_notificationOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notificationInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_notification to fetch.\n     */\n    where: discussionboard_notificationWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_notification findUniqueOrThrow\n   */\n  export type discussionboard_notificationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification\n     */\n    select?: discussionboard_notificationSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification\n     */\n    omit?: discussionboard_notificationOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notificationInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_notification to fetch.\n     */\n    where: discussionboard_notificationWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_notification findFirst\n   */\n  export type discussionboard_notificationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification\n     */\n    select?: discussionboard_notificationSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification\n     */\n    omit?: discussionboard_notificationOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notificationInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_notification to fetch.\n     */\n    where?: discussionboard_notificationWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_notifications to fetch.\n     */\n    orderBy?: discussionboard_notificationOrderByWithRelationInput | discussionboard_notificationOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_notifications.\n     */\n    cursor?: discussionboard_notificationWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_notifications from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_notifications.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_notifications.\n     */\n    distinct?: Discussionboard_notificationScalarFieldEnum | Discussionboard_notificationScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_notification findFirstOrThrow\n   */\n  export type discussionboard_notificationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification\n     */\n    select?: discussionboard_notificationSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification\n     */\n    omit?: discussionboard_notificationOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notificationInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_notification to fetch.\n     */\n    where?: discussionboard_notificationWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_notifications to fetch.\n     */\n    orderBy?: discussionboard_notificationOrderByWithRelationInput | discussionboard_notificationOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_notifications.\n     */\n    cursor?: discussionboard_notificationWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_notifications from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_notifications.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_notifications.\n     */\n    distinct?: Discussionboard_notificationScalarFieldEnum | Discussionboard_notificationScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_notification findMany\n   */\n  export type discussionboard_notificationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification\n     */\n    select?: discussionboard_notificationSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification\n     */\n    omit?: discussionboard_notificationOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notificationInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_notifications to fetch.\n     */\n    where?: discussionboard_notificationWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_notifications to fetch.\n     */\n    orderBy?: discussionboard_notificationOrderByWithRelationInput | discussionboard_notificationOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_notifications.\n     */\n    cursor?: discussionboard_notificationWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_notifications from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_notifications.\n     */\n    skip?: number\n    distinct?: Discussionboard_notificationScalarFieldEnum | Discussionboard_notificationScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_notification create\n   */\n  export type discussionboard_notificationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification\n     */\n    select?: discussionboard_notificationSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification\n     */\n    omit?: discussionboard_notificationOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notificationInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_notification.\n     */\n    data: XOR<discussionboard_notificationCreateInput, discussionboard_notificationUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_notification createMany\n   */\n  export type discussionboard_notificationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_notifications.\n     */\n    data: discussionboard_notificationCreateManyInput | discussionboard_notificationCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_notification createManyAndReturn\n   */\n  export type discussionboard_notificationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification\n     */\n    select?: discussionboard_notificationSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification\n     */\n    omit?: discussionboard_notificationOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_notifications.\n     */\n    data: discussionboard_notificationCreateManyInput | discussionboard_notificationCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notificationIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_notification update\n   */\n  export type discussionboard_notificationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification\n     */\n    select?: discussionboard_notificationSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification\n     */\n    omit?: discussionboard_notificationOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notificationInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_notification.\n     */\n    data: XOR<discussionboard_notificationUpdateInput, discussionboard_notificationUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_notification to update.\n     */\n    where: discussionboard_notificationWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_notification updateMany\n   */\n  export type discussionboard_notificationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_notifications.\n     */\n    data: XOR<discussionboard_notificationUpdateManyMutationInput, discussionboard_notificationUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_notifications to update\n     */\n    where?: discussionboard_notificationWhereInput\n    /**\n     * Limit how many discussionboard_notifications to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_notification updateManyAndReturn\n   */\n  export type discussionboard_notificationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification\n     */\n    select?: discussionboard_notificationSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification\n     */\n    omit?: discussionboard_notificationOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_notifications.\n     */\n    data: XOR<discussionboard_notificationUpdateManyMutationInput, discussionboard_notificationUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_notifications to update\n     */\n    where?: discussionboard_notificationWhereInput\n    /**\n     * Limit how many discussionboard_notifications to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notificationIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_notification upsert\n   */\n  export type discussionboard_notificationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification\n     */\n    select?: discussionboard_notificationSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification\n     */\n    omit?: discussionboard_notificationOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notificationInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_notification to update in case it exists.\n     */\n    where: discussionboard_notificationWhereUniqueInput\n    /**\n     * In case the discussionboard_notification found by the `where` argument doesn't exist, create a new discussionboard_notification with this data.\n     */\n    create: XOR<discussionboard_notificationCreateInput, discussionboard_notificationUncheckedCreateInput>\n    /**\n     * In case the discussionboard_notification was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_notificationUpdateInput, discussionboard_notificationUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_notification delete\n   */\n  export type discussionboard_notificationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification\n     */\n    select?: discussionboard_notificationSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification\n     */\n    omit?: discussionboard_notificationOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notificationInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_notification to delete.\n     */\n    where: discussionboard_notificationWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_notification deleteMany\n   */\n  export type discussionboard_notificationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_notifications to delete\n     */\n    where?: discussionboard_notificationWhereInput\n    /**\n     * Limit how many discussionboard_notifications to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_notification.related_post\n   */\n  export type discussionboard_notification$related_postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post\n     */\n    select?: discussionboard_postSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post\n     */\n    omit?: discussionboard_postOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_postInclude<ExtArgs> | null\n    where?: discussionboard_postWhereInput\n  }\n\n  /**\n   * discussionboard_notification.related_comment\n   */\n  export type discussionboard_notification$related_commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comments\n     */\n    select?: discussionboard_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comments\n     */\n    omit?: discussionboard_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_commentsInclude<ExtArgs> | null\n    where?: discussionboard_commentsWhereInput\n  }\n\n  /**\n   * discussionboard_notification.actor_user\n   */\n  export type discussionboard_notification$actor_userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user\n     */\n    select?: discussionboard_userSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user\n     */\n    omit?: discussionboard_userOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_userInclude<ExtArgs> | null\n    where?: discussionboard_userWhereInput\n  }\n\n  /**\n   * discussionboard_notification without action\n   */\n  export type discussionboard_notificationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification\n     */\n    select?: discussionboard_notificationSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification\n     */\n    omit?: discussionboard_notificationOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notificationInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_notification_preference\n   */\n\n  export type AggregateDiscussionboard_notification_preference = {\n    _count: Discussionboard_notification_preferenceCountAggregateOutputType | null\n    _min: Discussionboard_notification_preferenceMinAggregateOutputType | null\n    _max: Discussionboard_notification_preferenceMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_notification_preferenceMinAggregateOutputType = {\n    id: string | null\n    user_id: string | null\n    notify_reply: boolean | null\n    notify_like: boolean | null\n    notify_moderator_action: boolean | null\n    notify_system_message: boolean | null\n  }\n\n  export type Discussionboard_notification_preferenceMaxAggregateOutputType = {\n    id: string | null\n    user_id: string | null\n    notify_reply: boolean | null\n    notify_like: boolean | null\n    notify_moderator_action: boolean | null\n    notify_system_message: boolean | null\n  }\n\n  export type Discussionboard_notification_preferenceCountAggregateOutputType = {\n    id: number\n    user_id: number\n    notify_reply: number\n    notify_like: number\n    notify_moderator_action: number\n    notify_system_message: number\n    _all: number\n  }\n\n\n  export type Discussionboard_notification_preferenceMinAggregateInputType = {\n    id?: true\n    user_id?: true\n    notify_reply?: true\n    notify_like?: true\n    notify_moderator_action?: true\n    notify_system_message?: true\n  }\n\n  export type Discussionboard_notification_preferenceMaxAggregateInputType = {\n    id?: true\n    user_id?: true\n    notify_reply?: true\n    notify_like?: true\n    notify_moderator_action?: true\n    notify_system_message?: true\n  }\n\n  export type Discussionboard_notification_preferenceCountAggregateInputType = {\n    id?: true\n    user_id?: true\n    notify_reply?: true\n    notify_like?: true\n    notify_moderator_action?: true\n    notify_system_message?: true\n    _all?: true\n  }\n\n  export type Discussionboard_notification_preferenceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_notification_preference to aggregate.\n     */\n    where?: discussionboard_notification_preferenceWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_notification_preferences to fetch.\n     */\n    orderBy?: discussionboard_notification_preferenceOrderByWithRelationInput | discussionboard_notification_preferenceOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_notification_preferenceWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_notification_preferences from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_notification_preferences.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_notification_preferences\n    **/\n    _count?: true | Discussionboard_notification_preferenceCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_notification_preferenceMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_notification_preferenceMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_notification_preferenceAggregateType<T extends Discussionboard_notification_preferenceAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_notification_preference]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_notification_preference[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_notification_preference[P]>\n  }\n\n\n\n\n  export type discussionboard_notification_preferenceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_notification_preferenceWhereInput\n    orderBy?: discussionboard_notification_preferenceOrderByWithAggregationInput | discussionboard_notification_preferenceOrderByWithAggregationInput[]\n    by: Discussionboard_notification_preferenceScalarFieldEnum[] | Discussionboard_notification_preferenceScalarFieldEnum\n    having?: discussionboard_notification_preferenceScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_notification_preferenceCountAggregateInputType | true\n    _min?: Discussionboard_notification_preferenceMinAggregateInputType\n    _max?: Discussionboard_notification_preferenceMaxAggregateInputType\n  }\n\n  export type Discussionboard_notification_preferenceGroupByOutputType = {\n    id: string\n    user_id: string\n    notify_reply: boolean\n    notify_like: boolean\n    notify_moderator_action: boolean\n    notify_system_message: boolean\n    _count: Discussionboard_notification_preferenceCountAggregateOutputType | null\n    _min: Discussionboard_notification_preferenceMinAggregateOutputType | null\n    _max: Discussionboard_notification_preferenceMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_notification_preferenceGroupByPayload<T extends discussionboard_notification_preferenceGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_notification_preferenceGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_notification_preferenceGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_notification_preferenceGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_notification_preferenceGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_notification_preferenceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    notify_reply?: boolean\n    notify_like?: boolean\n    notify_moderator_action?: boolean\n    notify_system_message?: boolean\n    user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_notification_preference\"]>\n\n  export type discussionboard_notification_preferenceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    notify_reply?: boolean\n    notify_like?: boolean\n    notify_moderator_action?: boolean\n    notify_system_message?: boolean\n    user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_notification_preference\"]>\n\n  export type discussionboard_notification_preferenceSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    notify_reply?: boolean\n    notify_like?: boolean\n    notify_moderator_action?: boolean\n    notify_system_message?: boolean\n    user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_notification_preference\"]>\n\n  export type discussionboard_notification_preferenceSelectScalar = {\n    id?: boolean\n    user_id?: boolean\n    notify_reply?: boolean\n    notify_like?: boolean\n    notify_moderator_action?: boolean\n    notify_system_message?: boolean\n  }\n\n  export type discussionboard_notification_preferenceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"user_id\" | \"notify_reply\" | \"notify_like\" | \"notify_moderator_action\" | \"notify_system_message\", ExtArgs[\"result\"][\"discussionboard_notification_preference\"]>\n  export type discussionboard_notification_preferenceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_notification_preferenceIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_notification_preferenceIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n  }\n\n  export type $discussionboard_notification_preferencePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_notification_preference\"\n    objects: {\n      user: Prisma.$discussionboard_userPayload<ExtArgs>\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * [Primary key] - Implements unique identification for each user's notification preference record. Normalized; required for foreign key relationships and referencing.\n       */\n      id: string\n      /**\n       * [User owning preferences] - Implements one-to-one mapping from user to notification preferences, as required by the per-user customization use case. Fully normalized: enforced by unique constraint. For example, fetching preferences when user changes settings. Enforces referential integrity; on user deletion, preference row is cleaned up.\n       * \n       * Special behavior: unique per user.\n       */\n      user_id: string\n      /**\n       * [Reply notification toggle] - User's option to receive notifications about direct replies. Implements user preference granularity requirement. For example, if false, the user does not get reply-related notifications. Fully normalized, no calculation.\n       */\n      notify_reply: boolean\n      /**\n       * [Like notification toggle] - User's choice to receive/not receive notifications when their post or comment is liked. Maintains normalization. Example: toggling off keeps the user from being notified for likes.\n       */\n      notify_like: boolean\n      /**\n       * [Moderator action notification toggle] - Implements ability for users to be alerted when a moderator acts on their content. Normalization ensured. For example, disables notifications for moderation unless true.\n       */\n      notify_moderator_action: boolean\n      /**\n       * [System message notification toggle] - Whether user receives platform-wide messages or announcements. Normalization ensured. For example, used for site policy change notifications.\n       */\n      notify_system_message: boolean\n    }, ExtArgs[\"result\"][\"discussionboard_notification_preference\"]>\n    composites: {}\n  }\n\n  type discussionboard_notification_preferenceGetPayload<S extends boolean | null | undefined | discussionboard_notification_preferenceDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_notification_preferencePayload, S>\n\n  type discussionboard_notification_preferenceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_notification_preferenceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_notification_preferenceCountAggregateInputType | true\n    }\n\n  export interface discussionboard_notification_preferenceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_notification_preference'], meta: { name: 'discussionboard_notification_preference' } }\n    /**\n     * Find zero or one Discussionboard_notification_preference that matches the filter.\n     * @param {discussionboard_notification_preferenceFindUniqueArgs} args - Arguments to find a Discussionboard_notification_preference\n     * @example\n     * // Get one Discussionboard_notification_preference\n     * const discussionboard_notification_preference = await prisma.discussionboard_notification_preference.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_notification_preferenceFindUniqueArgs>(args: SelectSubset<T, discussionboard_notification_preferenceFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_notification_preferenceClient<$Result.GetResult<Prisma.$discussionboard_notification_preferencePayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_notification_preference that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_notification_preferenceFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_notification_preference\n     * @example\n     * // Get one Discussionboard_notification_preference\n     * const discussionboard_notification_preference = await prisma.discussionboard_notification_preference.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_notification_preferenceFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_notification_preferenceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_notification_preferenceClient<$Result.GetResult<Prisma.$discussionboard_notification_preferencePayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_notification_preference that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_notification_preferenceFindFirstArgs} args - Arguments to find a Discussionboard_notification_preference\n     * @example\n     * // Get one Discussionboard_notification_preference\n     * const discussionboard_notification_preference = await prisma.discussionboard_notification_preference.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_notification_preferenceFindFirstArgs>(args?: SelectSubset<T, discussionboard_notification_preferenceFindFirstArgs<ExtArgs>>): Prisma__discussionboard_notification_preferenceClient<$Result.GetResult<Prisma.$discussionboard_notification_preferencePayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_notification_preference that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_notification_preferenceFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_notification_preference\n     * @example\n     * // Get one Discussionboard_notification_preference\n     * const discussionboard_notification_preference = await prisma.discussionboard_notification_preference.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_notification_preferenceFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_notification_preferenceFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_notification_preferenceClient<$Result.GetResult<Prisma.$discussionboard_notification_preferencePayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_notification_preferences that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_notification_preferenceFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_notification_preferences\n     * const discussionboard_notification_preferences = await prisma.discussionboard_notification_preference.findMany()\n     * \n     * // Get first 10 Discussionboard_notification_preferences\n     * const discussionboard_notification_preferences = await prisma.discussionboard_notification_preference.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_notification_preferenceWithIdOnly = await prisma.discussionboard_notification_preference.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_notification_preferenceFindManyArgs>(args?: SelectSubset<T, discussionboard_notification_preferenceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_notification_preferencePayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_notification_preference.\n     * @param {discussionboard_notification_preferenceCreateArgs} args - Arguments to create a Discussionboard_notification_preference.\n     * @example\n     * // Create one Discussionboard_notification_preference\n     * const Discussionboard_notification_preference = await prisma.discussionboard_notification_preference.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_notification_preference\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_notification_preferenceCreateArgs>(args: SelectSubset<T, discussionboard_notification_preferenceCreateArgs<ExtArgs>>): Prisma__discussionboard_notification_preferenceClient<$Result.GetResult<Prisma.$discussionboard_notification_preferencePayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_notification_preferences.\n     * @param {discussionboard_notification_preferenceCreateManyArgs} args - Arguments to create many Discussionboard_notification_preferences.\n     * @example\n     * // Create many Discussionboard_notification_preferences\n     * const discussionboard_notification_preference = await prisma.discussionboard_notification_preference.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_notification_preferenceCreateManyArgs>(args?: SelectSubset<T, discussionboard_notification_preferenceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_notification_preferences and returns the data saved in the database.\n     * @param {discussionboard_notification_preferenceCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_notification_preferences.\n     * @example\n     * // Create many Discussionboard_notification_preferences\n     * const discussionboard_notification_preference = await prisma.discussionboard_notification_preference.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_notification_preferences and only return the `id`\n     * const discussionboard_notification_preferenceWithIdOnly = await prisma.discussionboard_notification_preference.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_notification_preferenceCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_notification_preferenceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_notification_preferencePayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_notification_preference.\n     * @param {discussionboard_notification_preferenceDeleteArgs} args - Arguments to delete one Discussionboard_notification_preference.\n     * @example\n     * // Delete one Discussionboard_notification_preference\n     * const Discussionboard_notification_preference = await prisma.discussionboard_notification_preference.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_notification_preference\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_notification_preferenceDeleteArgs>(args: SelectSubset<T, discussionboard_notification_preferenceDeleteArgs<ExtArgs>>): Prisma__discussionboard_notification_preferenceClient<$Result.GetResult<Prisma.$discussionboard_notification_preferencePayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_notification_preference.\n     * @param {discussionboard_notification_preferenceUpdateArgs} args - Arguments to update one Discussionboard_notification_preference.\n     * @example\n     * // Update one Discussionboard_notification_preference\n     * const discussionboard_notification_preference = await prisma.discussionboard_notification_preference.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_notification_preferenceUpdateArgs>(args: SelectSubset<T, discussionboard_notification_preferenceUpdateArgs<ExtArgs>>): Prisma__discussionboard_notification_preferenceClient<$Result.GetResult<Prisma.$discussionboard_notification_preferencePayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_notification_preferences.\n     * @param {discussionboard_notification_preferenceDeleteManyArgs} args - Arguments to filter Discussionboard_notification_preferences to delete.\n     * @example\n     * // Delete a few Discussionboard_notification_preferences\n     * const { count } = await prisma.discussionboard_notification_preference.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_notification_preferenceDeleteManyArgs>(args?: SelectSubset<T, discussionboard_notification_preferenceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_notification_preferences.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_notification_preferenceUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_notification_preferences\n     * const discussionboard_notification_preference = await prisma.discussionboard_notification_preference.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_notification_preferenceUpdateManyArgs>(args: SelectSubset<T, discussionboard_notification_preferenceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_notification_preferences and returns the data updated in the database.\n     * @param {discussionboard_notification_preferenceUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_notification_preferences.\n     * @example\n     * // Update many Discussionboard_notification_preferences\n     * const discussionboard_notification_preference = await prisma.discussionboard_notification_preference.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_notification_preferences and only return the `id`\n     * const discussionboard_notification_preferenceWithIdOnly = await prisma.discussionboard_notification_preference.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_notification_preferenceUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_notification_preferenceUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_notification_preferencePayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_notification_preference.\n     * @param {discussionboard_notification_preferenceUpsertArgs} args - Arguments to update or create a Discussionboard_notification_preference.\n     * @example\n     * // Update or create a Discussionboard_notification_preference\n     * const discussionboard_notification_preference = await prisma.discussionboard_notification_preference.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_notification_preference\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_notification_preference we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_notification_preferenceUpsertArgs>(args: SelectSubset<T, discussionboard_notification_preferenceUpsertArgs<ExtArgs>>): Prisma__discussionboard_notification_preferenceClient<$Result.GetResult<Prisma.$discussionboard_notification_preferencePayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_notification_preferences.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_notification_preferenceCountArgs} args - Arguments to filter Discussionboard_notification_preferences to count.\n     * @example\n     * // Count the number of Discussionboard_notification_preferences\n     * const count = await prisma.discussionboard_notification_preference.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_notification_preferences we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_notification_preferenceCountArgs>(\n      args?: Subset<T, discussionboard_notification_preferenceCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_notification_preferenceCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_notification_preference.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_notification_preferenceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_notification_preferenceAggregateArgs>(args: Subset<T, Discussionboard_notification_preferenceAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_notification_preferenceAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_notification_preference.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_notification_preferenceGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_notification_preferenceGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_notification_preferenceGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_notification_preferenceGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_notification_preferenceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_notification_preferenceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_notification_preference model\n   */\n  readonly fields: discussionboard_notification_preferenceFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_notification_preference.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_notification_preferenceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    user<T extends discussionboard_userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_userDefaultArgs<ExtArgs>>): Prisma__discussionboard_userClient<$Result.GetResult<Prisma.$discussionboard_userPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_notification_preference model\n   */\n  interface discussionboard_notification_preferenceFieldRefs {\n    readonly id: FieldRef<\"discussionboard_notification_preference\", 'String'>\n    readonly user_id: FieldRef<\"discussionboard_notification_preference\", 'String'>\n    readonly notify_reply: FieldRef<\"discussionboard_notification_preference\", 'Boolean'>\n    readonly notify_like: FieldRef<\"discussionboard_notification_preference\", 'Boolean'>\n    readonly notify_moderator_action: FieldRef<\"discussionboard_notification_preference\", 'Boolean'>\n    readonly notify_system_message: FieldRef<\"discussionboard_notification_preference\", 'Boolean'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_notification_preference findUnique\n   */\n  export type discussionboard_notification_preferenceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification_preference\n     */\n    select?: discussionboard_notification_preferenceSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification_preference\n     */\n    omit?: discussionboard_notification_preferenceOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notification_preferenceInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_notification_preference to fetch.\n     */\n    where: discussionboard_notification_preferenceWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_notification_preference findUniqueOrThrow\n   */\n  export type discussionboard_notification_preferenceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification_preference\n     */\n    select?: discussionboard_notification_preferenceSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification_preference\n     */\n    omit?: discussionboard_notification_preferenceOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notification_preferenceInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_notification_preference to fetch.\n     */\n    where: discussionboard_notification_preferenceWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_notification_preference findFirst\n   */\n  export type discussionboard_notification_preferenceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification_preference\n     */\n    select?: discussionboard_notification_preferenceSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification_preference\n     */\n    omit?: discussionboard_notification_preferenceOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notification_preferenceInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_notification_preference to fetch.\n     */\n    where?: discussionboard_notification_preferenceWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_notification_preferences to fetch.\n     */\n    orderBy?: discussionboard_notification_preferenceOrderByWithRelationInput | discussionboard_notification_preferenceOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_notification_preferences.\n     */\n    cursor?: discussionboard_notification_preferenceWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_notification_preferences from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_notification_preferences.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_notification_preferences.\n     */\n    distinct?: Discussionboard_notification_preferenceScalarFieldEnum | Discussionboard_notification_preferenceScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_notification_preference findFirstOrThrow\n   */\n  export type discussionboard_notification_preferenceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification_preference\n     */\n    select?: discussionboard_notification_preferenceSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification_preference\n     */\n    omit?: discussionboard_notification_preferenceOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notification_preferenceInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_notification_preference to fetch.\n     */\n    where?: discussionboard_notification_preferenceWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_notification_preferences to fetch.\n     */\n    orderBy?: discussionboard_notification_preferenceOrderByWithRelationInput | discussionboard_notification_preferenceOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_notification_preferences.\n     */\n    cursor?: discussionboard_notification_preferenceWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_notification_preferences from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_notification_preferences.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_notification_preferences.\n     */\n    distinct?: Discussionboard_notification_preferenceScalarFieldEnum | Discussionboard_notification_preferenceScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_notification_preference findMany\n   */\n  export type discussionboard_notification_preferenceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification_preference\n     */\n    select?: discussionboard_notification_preferenceSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification_preference\n     */\n    omit?: discussionboard_notification_preferenceOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notification_preferenceInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_notification_preferences to fetch.\n     */\n    where?: discussionboard_notification_preferenceWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_notification_preferences to fetch.\n     */\n    orderBy?: discussionboard_notification_preferenceOrderByWithRelationInput | discussionboard_notification_preferenceOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_notification_preferences.\n     */\n    cursor?: discussionboard_notification_preferenceWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_notification_preferences from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_notification_preferences.\n     */\n    skip?: number\n    distinct?: Discussionboard_notification_preferenceScalarFieldEnum | Discussionboard_notification_preferenceScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_notification_preference create\n   */\n  export type discussionboard_notification_preferenceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification_preference\n     */\n    select?: discussionboard_notification_preferenceSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification_preference\n     */\n    omit?: discussionboard_notification_preferenceOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notification_preferenceInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_notification_preference.\n     */\n    data: XOR<discussionboard_notification_preferenceCreateInput, discussionboard_notification_preferenceUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_notification_preference createMany\n   */\n  export type discussionboard_notification_preferenceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_notification_preferences.\n     */\n    data: discussionboard_notification_preferenceCreateManyInput | discussionboard_notification_preferenceCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_notification_preference createManyAndReturn\n   */\n  export type discussionboard_notification_preferenceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification_preference\n     */\n    select?: discussionboard_notification_preferenceSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification_preference\n     */\n    omit?: discussionboard_notification_preferenceOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_notification_preferences.\n     */\n    data: discussionboard_notification_preferenceCreateManyInput | discussionboard_notification_preferenceCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notification_preferenceIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_notification_preference update\n   */\n  export type discussionboard_notification_preferenceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification_preference\n     */\n    select?: discussionboard_notification_preferenceSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification_preference\n     */\n    omit?: discussionboard_notification_preferenceOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notification_preferenceInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_notification_preference.\n     */\n    data: XOR<discussionboard_notification_preferenceUpdateInput, discussionboard_notification_preferenceUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_notification_preference to update.\n     */\n    where: discussionboard_notification_preferenceWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_notification_preference updateMany\n   */\n  export type discussionboard_notification_preferenceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_notification_preferences.\n     */\n    data: XOR<discussionboard_notification_preferenceUpdateManyMutationInput, discussionboard_notification_preferenceUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_notification_preferences to update\n     */\n    where?: discussionboard_notification_preferenceWhereInput\n    /**\n     * Limit how many discussionboard_notification_preferences to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_notification_preference updateManyAndReturn\n   */\n  export type discussionboard_notification_preferenceUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification_preference\n     */\n    select?: discussionboard_notification_preferenceSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification_preference\n     */\n    omit?: discussionboard_notification_preferenceOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_notification_preferences.\n     */\n    data: XOR<discussionboard_notification_preferenceUpdateManyMutationInput, discussionboard_notification_preferenceUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_notification_preferences to update\n     */\n    where?: discussionboard_notification_preferenceWhereInput\n    /**\n     * Limit how many discussionboard_notification_preferences to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notification_preferenceIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_notification_preference upsert\n   */\n  export type discussionboard_notification_preferenceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification_preference\n     */\n    select?: discussionboard_notification_preferenceSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification_preference\n     */\n    omit?: discussionboard_notification_preferenceOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notification_preferenceInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_notification_preference to update in case it exists.\n     */\n    where: discussionboard_notification_preferenceWhereUniqueInput\n    /**\n     * In case the discussionboard_notification_preference found by the `where` argument doesn't exist, create a new discussionboard_notification_preference with this data.\n     */\n    create: XOR<discussionboard_notification_preferenceCreateInput, discussionboard_notification_preferenceUncheckedCreateInput>\n    /**\n     * In case the discussionboard_notification_preference was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_notification_preferenceUpdateInput, discussionboard_notification_preferenceUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_notification_preference delete\n   */\n  export type discussionboard_notification_preferenceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification_preference\n     */\n    select?: discussionboard_notification_preferenceSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification_preference\n     */\n    omit?: discussionboard_notification_preferenceOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notification_preferenceInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_notification_preference to delete.\n     */\n    where: discussionboard_notification_preferenceWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_notification_preference deleteMany\n   */\n  export type discussionboard_notification_preferenceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_notification_preferences to delete\n     */\n    where?: discussionboard_notification_preferenceWhereInput\n    /**\n     * Limit how many discussionboard_notification_preferences to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_notification_preference without action\n   */\n  export type discussionboard_notification_preferenceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification_preference\n     */\n    select?: discussionboard_notification_preferenceSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification_preference\n     */\n    omit?: discussionboard_notification_preferenceOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notification_preferenceInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_audit_log\n   */\n\n  export type AggregateDiscussionboard_audit_log = {\n    _count: Discussionboard_audit_logCountAggregateOutputType | null\n    _min: Discussionboard_audit_logMinAggregateOutputType | null\n    _max: Discussionboard_audit_logMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_audit_logMinAggregateOutputType = {\n    id: string | null\n    actor_user_id: string | null\n    target_user_id: string | null\n    action_type: string | null\n    entity_type: string | null\n    entity_id: string | null\n    action_detail: string | null\n    created_at: Date | null\n  }\n\n  export type Discussionboard_audit_logMaxAggregateOutputType = {\n    id: string | null\n    actor_user_id: string | null\n    target_user_id: string | null\n    action_type: string | null\n    entity_type: string | null\n    entity_id: string | null\n    action_detail: string | null\n    created_at: Date | null\n  }\n\n  export type Discussionboard_audit_logCountAggregateOutputType = {\n    id: number\n    actor_user_id: number\n    target_user_id: number\n    action_type: number\n    entity_type: number\n    entity_id: number\n    action_detail: number\n    created_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_audit_logMinAggregateInputType = {\n    id?: true\n    actor_user_id?: true\n    target_user_id?: true\n    action_type?: true\n    entity_type?: true\n    entity_id?: true\n    action_detail?: true\n    created_at?: true\n  }\n\n  export type Discussionboard_audit_logMaxAggregateInputType = {\n    id?: true\n    actor_user_id?: true\n    target_user_id?: true\n    action_type?: true\n    entity_type?: true\n    entity_id?: true\n    action_detail?: true\n    created_at?: true\n  }\n\n  export type Discussionboard_audit_logCountAggregateInputType = {\n    id?: true\n    actor_user_id?: true\n    target_user_id?: true\n    action_type?: true\n    entity_type?: true\n    entity_id?: true\n    action_detail?: true\n    created_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_audit_logAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_audit_log to aggregate.\n     */\n    where?: discussionboard_audit_logWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_audit_logs to fetch.\n     */\n    orderBy?: discussionboard_audit_logOrderByWithRelationInput | discussionboard_audit_logOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_audit_logWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_audit_logs from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_audit_logs.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_audit_logs\n    **/\n    _count?: true | Discussionboard_audit_logCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_audit_logMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_audit_logMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_audit_logAggregateType<T extends Discussionboard_audit_logAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_audit_log]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_audit_log[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_audit_log[P]>\n  }\n\n\n\n\n  export type discussionboard_audit_logGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_audit_logWhereInput\n    orderBy?: discussionboard_audit_logOrderByWithAggregationInput | discussionboard_audit_logOrderByWithAggregationInput[]\n    by: Discussionboard_audit_logScalarFieldEnum[] | Discussionboard_audit_logScalarFieldEnum\n    having?: discussionboard_audit_logScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_audit_logCountAggregateInputType | true\n    _min?: Discussionboard_audit_logMinAggregateInputType\n    _max?: Discussionboard_audit_logMaxAggregateInputType\n  }\n\n  export type Discussionboard_audit_logGroupByOutputType = {\n    id: string\n    actor_user_id: string\n    target_user_id: string | null\n    action_type: string\n    entity_type: string\n    entity_id: string | null\n    action_detail: string | null\n    created_at: Date\n    _count: Discussionboard_audit_logCountAggregateOutputType | null\n    _min: Discussionboard_audit_logMinAggregateOutputType | null\n    _max: Discussionboard_audit_logMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_audit_logGroupByPayload<T extends discussionboard_audit_logGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_audit_logGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_audit_logGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_audit_logGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_audit_logGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_audit_logSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    actor_user_id?: boolean\n    target_user_id?: boolean\n    action_type?: boolean\n    entity_type?: boolean\n    entity_id?: boolean\n    action_detail?: boolean\n    created_at?: boolean\n    fk_audit_actor_user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    fk_audit_target_user?: boolean | discussionboard_audit_log$fk_audit_target_userArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_audit_log\"]>\n\n  export type discussionboard_audit_logSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    actor_user_id?: boolean\n    target_user_id?: boolean\n    action_type?: boolean\n    entity_type?: boolean\n    entity_id?: boolean\n    action_detail?: boolean\n    created_at?: boolean\n    fk_audit_actor_user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    fk_audit_target_user?: boolean | discussionboard_audit_log$fk_audit_target_userArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_audit_log\"]>\n\n  export type discussionboard_audit_logSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    actor_user_id?: boolean\n    target_user_id?: boolean\n    action_type?: boolean\n    entity_type?: boolean\n    entity_id?: boolean\n    action_detail?: boolean\n    created_at?: boolean\n    fk_audit_actor_user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    fk_audit_target_user?: boolean | discussionboard_audit_log$fk_audit_target_userArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_audit_log\"]>\n\n  export type discussionboard_audit_logSelectScalar = {\n    id?: boolean\n    actor_user_id?: boolean\n    target_user_id?: boolean\n    action_type?: boolean\n    entity_type?: boolean\n    entity_id?: boolean\n    action_detail?: boolean\n    created_at?: boolean\n  }\n\n  export type discussionboard_audit_logOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"actor_user_id\" | \"target_user_id\" | \"action_type\" | \"entity_type\" | \"entity_id\" | \"action_detail\" | \"created_at\", ExtArgs[\"result\"][\"discussionboard_audit_log\"]>\n  export type discussionboard_audit_logInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_audit_actor_user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    fk_audit_target_user?: boolean | discussionboard_audit_log$fk_audit_target_userArgs<ExtArgs>\n  }\n  export type discussionboard_audit_logIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_audit_actor_user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    fk_audit_target_user?: boolean | discussionboard_audit_log$fk_audit_target_userArgs<ExtArgs>\n  }\n  export type discussionboard_audit_logIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_audit_actor_user?: boolean | discussionboard_userDefaultArgs<ExtArgs>\n    fk_audit_target_user?: boolean | discussionboard_audit_log$fk_audit_target_userArgs<ExtArgs>\n  }\n\n  export type $discussionboard_audit_logPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_audit_log\"\n    objects: {\n      fk_audit_actor_user: Prisma.$discussionboard_userPayload<ExtArgs>\n      fk_audit_target_user: Prisma.$discussionboard_userPayload<ExtArgs> | null\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * [Primary Key] - Implements identity and uniqueness for each audit log entry. Fulfills the uniqueness requirement per audit record. Ensures normalization by enabling atomic audit entries. Always generated as a UUID.\n       */\n      id: string\n      /**\n       * [Action Actor] - Implements the requirement to store the user responsible for each privileged action. Links to the user who performed the action. Ensures 3NF by storing only the user id as a reference; all other actor information must be joined as needed. For example, references the admin who issued a ban.\n       */\n      actor_user_id: string\n      /**\n       * [Action Target] - Fulfills the requirement to capture who is affected by the action, if applicable (e.g., in bans, warnings, or demotions). Nullable for actions targeting system settings rather than specific users. Keeps direct reference only to target user id to stay normalized.\n       */\n      target_user_id: string | null\n      /**\n       * [Action Type] - Implements the action classification requirement. Business meaning: describes the category (e.g., 'ban', 'role_change', 'settings_update'). Ensures normalization by not encoding business logic; only keeps atomic values (string), never details or summaries.\n       */\n      action_type: string\n      /**\n       * [Entity Type] - Implements the need for polymorphic audit trail. Records the type of entity affected (e.g., 'user', 'post', 'comment', 'setting'). Ensures 3NF by representing entity type as atomic data, not as a foreign key or denormalized structure.\n       */\n      entity_type: string\n      /**\n       * [Entity Reference] - Fulfills requirement to record which object was modified. Nullable for actions that do not target a specific entity. Ensures normalization by storing atomic reference only.\n       */\n      entity_id: string | null\n      /**\n       * [Action Detail] - Implements extensible context for audit records. Stores optional contextual details, such as old/new role in a role change. Ensures normalization by keeping these as atomic strings, not by embedding object graphs.\n       */\n      action_detail: string | null\n      /**\n       * [Timestamp] - Implements audit trail requirement for time traceability. Business meaning: when the privileged action took place. Ensures normalization by using a single atomic datetime. Example: records ban date or role assignment time.\n       */\n      created_at: Date\n    }, ExtArgs[\"result\"][\"discussionboard_audit_log\"]>\n    composites: {}\n  }\n\n  type discussionboard_audit_logGetPayload<S extends boolean | null | undefined | discussionboard_audit_logDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_audit_logPayload, S>\n\n  type discussionboard_audit_logCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_audit_logFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_audit_logCountAggregateInputType | true\n    }\n\n  export interface discussionboard_audit_logDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_audit_log'], meta: { name: 'discussionboard_audit_log' } }\n    /**\n     * Find zero or one Discussionboard_audit_log that matches the filter.\n     * @param {discussionboard_audit_logFindUniqueArgs} args - Arguments to find a Discussionboard_audit_log\n     * @example\n     * // Get one Discussionboard_audit_log\n     * const discussionboard_audit_log = await prisma.discussionboard_audit_log.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_audit_logFindUniqueArgs>(args: SelectSubset<T, discussionboard_audit_logFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_audit_logClient<$Result.GetResult<Prisma.$discussionboard_audit_logPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_audit_log that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_audit_logFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_audit_log\n     * @example\n     * // Get one Discussionboard_audit_log\n     * const discussionboard_audit_log = await prisma.discussionboard_audit_log.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_audit_logFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_audit_logFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_audit_logClient<$Result.GetResult<Prisma.$discussionboard_audit_logPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_audit_log that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_audit_logFindFirstArgs} args - Arguments to find a Discussionboard_audit_log\n     * @example\n     * // Get one Discussionboard_audit_log\n     * const discussionboard_audit_log = await prisma.discussionboard_audit_log.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_audit_logFindFirstArgs>(args?: SelectSubset<T, discussionboard_audit_logFindFirstArgs<ExtArgs>>): Prisma__discussionboard_audit_logClient<$Result.GetResult<Prisma.$discussionboard_audit_logPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_audit_log that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_audit_logFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_audit_log\n     * @example\n     * // Get one Discussionboard_audit_log\n     * const discussionboard_audit_log = await prisma.discussionboard_audit_log.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_audit_logFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_audit_logFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_audit_logClient<$Result.GetResult<Prisma.$discussionboard_audit_logPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_audit_logs that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_audit_logFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_audit_logs\n     * const discussionboard_audit_logs = await prisma.discussionboard_audit_log.findMany()\n     * \n     * // Get first 10 Discussionboard_audit_logs\n     * const discussionboard_audit_logs = await prisma.discussionboard_audit_log.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_audit_logWithIdOnly = await prisma.discussionboard_audit_log.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_audit_logFindManyArgs>(args?: SelectSubset<T, discussionboard_audit_logFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_audit_logPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_audit_log.\n     * @param {discussionboard_audit_logCreateArgs} args - Arguments to create a Discussionboard_audit_log.\n     * @example\n     * // Create one Discussionboard_audit_log\n     * const Discussionboard_audit_log = await prisma.discussionboard_audit_log.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_audit_log\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_audit_logCreateArgs>(args: SelectSubset<T, discussionboard_audit_logCreateArgs<ExtArgs>>): Prisma__discussionboard_audit_logClient<$Result.GetResult<Prisma.$discussionboard_audit_logPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_audit_logs.\n     * @param {discussionboard_audit_logCreateManyArgs} args - Arguments to create many Discussionboard_audit_logs.\n     * @example\n     * // Create many Discussionboard_audit_logs\n     * const discussionboard_audit_log = await prisma.discussionboard_audit_log.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_audit_logCreateManyArgs>(args?: SelectSubset<T, discussionboard_audit_logCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_audit_logs and returns the data saved in the database.\n     * @param {discussionboard_audit_logCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_audit_logs.\n     * @example\n     * // Create many Discussionboard_audit_logs\n     * const discussionboard_audit_log = await prisma.discussionboard_audit_log.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_audit_logs and only return the `id`\n     * const discussionboard_audit_logWithIdOnly = await prisma.discussionboard_audit_log.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_audit_logCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_audit_logCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_audit_logPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_audit_log.\n     * @param {discussionboard_audit_logDeleteArgs} args - Arguments to delete one Discussionboard_audit_log.\n     * @example\n     * // Delete one Discussionboard_audit_log\n     * const Discussionboard_audit_log = await prisma.discussionboard_audit_log.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_audit_log\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_audit_logDeleteArgs>(args: SelectSubset<T, discussionboard_audit_logDeleteArgs<ExtArgs>>): Prisma__discussionboard_audit_logClient<$Result.GetResult<Prisma.$discussionboard_audit_logPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_audit_log.\n     * @param {discussionboard_audit_logUpdateArgs} args - Arguments to update one Discussionboard_audit_log.\n     * @example\n     * // Update one Discussionboard_audit_log\n     * const discussionboard_audit_log = await prisma.discussionboard_audit_log.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_audit_logUpdateArgs>(args: SelectSubset<T, discussionboard_audit_logUpdateArgs<ExtArgs>>): Prisma__discussionboard_audit_logClient<$Result.GetResult<Prisma.$discussionboard_audit_logPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_audit_logs.\n     * @param {discussionboard_audit_logDeleteManyArgs} args - Arguments to filter Discussionboard_audit_logs to delete.\n     * @example\n     * // Delete a few Discussionboard_audit_logs\n     * const { count } = await prisma.discussionboard_audit_log.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_audit_logDeleteManyArgs>(args?: SelectSubset<T, discussionboard_audit_logDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_audit_logs.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_audit_logUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_audit_logs\n     * const discussionboard_audit_log = await prisma.discussionboard_audit_log.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_audit_logUpdateManyArgs>(args: SelectSubset<T, discussionboard_audit_logUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_audit_logs and returns the data updated in the database.\n     * @param {discussionboard_audit_logUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_audit_logs.\n     * @example\n     * // Update many Discussionboard_audit_logs\n     * const discussionboard_audit_log = await prisma.discussionboard_audit_log.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_audit_logs and only return the `id`\n     * const discussionboard_audit_logWithIdOnly = await prisma.discussionboard_audit_log.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_audit_logUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_audit_logUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_audit_logPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_audit_log.\n     * @param {discussionboard_audit_logUpsertArgs} args - Arguments to update or create a Discussionboard_audit_log.\n     * @example\n     * // Update or create a Discussionboard_audit_log\n     * const discussionboard_audit_log = await prisma.discussionboard_audit_log.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_audit_log\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_audit_log we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_audit_logUpsertArgs>(args: SelectSubset<T, discussionboard_audit_logUpsertArgs<ExtArgs>>): Prisma__discussionboard_audit_logClient<$Result.GetResult<Prisma.$discussionboard_audit_logPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_audit_logs.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_audit_logCountArgs} args - Arguments to filter Discussionboard_audit_logs to count.\n     * @example\n     * // Count the number of Discussionboard_audit_logs\n     * const count = await prisma.discussionboard_audit_log.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_audit_logs we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_audit_logCountArgs>(\n      args?: Subset<T, discussionboard_audit_logCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_audit_logCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_audit_log.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_audit_logAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_audit_logAggregateArgs>(args: Subset<T, Discussionboard_audit_logAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_audit_logAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_audit_log.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_audit_logGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_audit_logGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_audit_logGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_audit_logGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_audit_logGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_audit_logGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_audit_log model\n   */\n  readonly fields: discussionboard_audit_logFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_audit_log.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_audit_logClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    fk_audit_actor_user<T extends discussionboard_userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_userDefaultArgs<ExtArgs>>): Prisma__discussionboard_userClient<$Result.GetResult<Prisma.$discussionboard_userPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    fk_audit_target_user<T extends discussionboard_audit_log$fk_audit_target_userArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_audit_log$fk_audit_target_userArgs<ExtArgs>>): Prisma__discussionboard_userClient<$Result.GetResult<Prisma.$discussionboard_userPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_audit_log model\n   */\n  interface discussionboard_audit_logFieldRefs {\n    readonly id: FieldRef<\"discussionboard_audit_log\", 'String'>\n    readonly actor_user_id: FieldRef<\"discussionboard_audit_log\", 'String'>\n    readonly target_user_id: FieldRef<\"discussionboard_audit_log\", 'String'>\n    readonly action_type: FieldRef<\"discussionboard_audit_log\", 'String'>\n    readonly entity_type: FieldRef<\"discussionboard_audit_log\", 'String'>\n    readonly entity_id: FieldRef<\"discussionboard_audit_log\", 'String'>\n    readonly action_detail: FieldRef<\"discussionboard_audit_log\", 'String'>\n    readonly created_at: FieldRef<\"discussionboard_audit_log\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_audit_log findUnique\n   */\n  export type discussionboard_audit_logFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_audit_log\n     */\n    select?: discussionboard_audit_logSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_audit_log\n     */\n    omit?: discussionboard_audit_logOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_audit_logInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_audit_log to fetch.\n     */\n    where: discussionboard_audit_logWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_audit_log findUniqueOrThrow\n   */\n  export type discussionboard_audit_logFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_audit_log\n     */\n    select?: discussionboard_audit_logSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_audit_log\n     */\n    omit?: discussionboard_audit_logOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_audit_logInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_audit_log to fetch.\n     */\n    where: discussionboard_audit_logWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_audit_log findFirst\n   */\n  export type discussionboard_audit_logFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_audit_log\n     */\n    select?: discussionboard_audit_logSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_audit_log\n     */\n    omit?: discussionboard_audit_logOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_audit_logInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_audit_log to fetch.\n     */\n    where?: discussionboard_audit_logWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_audit_logs to fetch.\n     */\n    orderBy?: discussionboard_audit_logOrderByWithRelationInput | discussionboard_audit_logOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_audit_logs.\n     */\n    cursor?: discussionboard_audit_logWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_audit_logs from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_audit_logs.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_audit_logs.\n     */\n    distinct?: Discussionboard_audit_logScalarFieldEnum | Discussionboard_audit_logScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_audit_log findFirstOrThrow\n   */\n  export type discussionboard_audit_logFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_audit_log\n     */\n    select?: discussionboard_audit_logSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_audit_log\n     */\n    omit?: discussionboard_audit_logOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_audit_logInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_audit_log to fetch.\n     */\n    where?: discussionboard_audit_logWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_audit_logs to fetch.\n     */\n    orderBy?: discussionboard_audit_logOrderByWithRelationInput | discussionboard_audit_logOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_audit_logs.\n     */\n    cursor?: discussionboard_audit_logWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_audit_logs from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_audit_logs.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_audit_logs.\n     */\n    distinct?: Discussionboard_audit_logScalarFieldEnum | Discussionboard_audit_logScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_audit_log findMany\n   */\n  export type discussionboard_audit_logFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_audit_log\n     */\n    select?: discussionboard_audit_logSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_audit_log\n     */\n    omit?: discussionboard_audit_logOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_audit_logInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_audit_logs to fetch.\n     */\n    where?: discussionboard_audit_logWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_audit_logs to fetch.\n     */\n    orderBy?: discussionboard_audit_logOrderByWithRelationInput | discussionboard_audit_logOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_audit_logs.\n     */\n    cursor?: discussionboard_audit_logWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_audit_logs from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_audit_logs.\n     */\n    skip?: number\n    distinct?: Discussionboard_audit_logScalarFieldEnum | Discussionboard_audit_logScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_audit_log create\n   */\n  export type discussionboard_audit_logCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_audit_log\n     */\n    select?: discussionboard_audit_logSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_audit_log\n     */\n    omit?: discussionboard_audit_logOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_audit_logInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_audit_log.\n     */\n    data: XOR<discussionboard_audit_logCreateInput, discussionboard_audit_logUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_audit_log createMany\n   */\n  export type discussionboard_audit_logCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_audit_logs.\n     */\n    data: discussionboard_audit_logCreateManyInput | discussionboard_audit_logCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_audit_log createManyAndReturn\n   */\n  export type discussionboard_audit_logCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_audit_log\n     */\n    select?: discussionboard_audit_logSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_audit_log\n     */\n    omit?: discussionboard_audit_logOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_audit_logs.\n     */\n    data: discussionboard_audit_logCreateManyInput | discussionboard_audit_logCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_audit_logIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_audit_log update\n   */\n  export type discussionboard_audit_logUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_audit_log\n     */\n    select?: discussionboard_audit_logSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_audit_log\n     */\n    omit?: discussionboard_audit_logOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_audit_logInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_audit_log.\n     */\n    data: XOR<discussionboard_audit_logUpdateInput, discussionboard_audit_logUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_audit_log to update.\n     */\n    where: discussionboard_audit_logWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_audit_log updateMany\n   */\n  export type discussionboard_audit_logUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_audit_logs.\n     */\n    data: XOR<discussionboard_audit_logUpdateManyMutationInput, discussionboard_audit_logUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_audit_logs to update\n     */\n    where?: discussionboard_audit_logWhereInput\n    /**\n     * Limit how many discussionboard_audit_logs to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_audit_log updateManyAndReturn\n   */\n  export type discussionboard_audit_logUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_audit_log\n     */\n    select?: discussionboard_audit_logSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_audit_log\n     */\n    omit?: discussionboard_audit_logOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_audit_logs.\n     */\n    data: XOR<discussionboard_audit_logUpdateManyMutationInput, discussionboard_audit_logUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_audit_logs to update\n     */\n    where?: discussionboard_audit_logWhereInput\n    /**\n     * Limit how many discussionboard_audit_logs to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_audit_logIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_audit_log upsert\n   */\n  export type discussionboard_audit_logUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_audit_log\n     */\n    select?: discussionboard_audit_logSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_audit_log\n     */\n    omit?: discussionboard_audit_logOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_audit_logInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_audit_log to update in case it exists.\n     */\n    where: discussionboard_audit_logWhereUniqueInput\n    /**\n     * In case the discussionboard_audit_log found by the `where` argument doesn't exist, create a new discussionboard_audit_log with this data.\n     */\n    create: XOR<discussionboard_audit_logCreateInput, discussionboard_audit_logUncheckedCreateInput>\n    /**\n     * In case the discussionboard_audit_log was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_audit_logUpdateInput, discussionboard_audit_logUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_audit_log delete\n   */\n  export type discussionboard_audit_logDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_audit_log\n     */\n    select?: discussionboard_audit_logSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_audit_log\n     */\n    omit?: discussionboard_audit_logOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_audit_logInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_audit_log to delete.\n     */\n    where: discussionboard_audit_logWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_audit_log deleteMany\n   */\n  export type discussionboard_audit_logDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_audit_logs to delete\n     */\n    where?: discussionboard_audit_logWhereInput\n    /**\n     * Limit how many discussionboard_audit_logs to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_audit_log.fk_audit_target_user\n   */\n  export type discussionboard_audit_log$fk_audit_target_userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user\n     */\n    select?: discussionboard_userSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user\n     */\n    omit?: discussionboard_userOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_userInclude<ExtArgs> | null\n    where?: discussionboard_userWhereInput\n  }\n\n  /**\n   * discussionboard_audit_log without action\n   */\n  export type discussionboard_audit_logDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_audit_log\n     */\n    select?: discussionboard_audit_logSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_audit_log\n     */\n    omit?: discussionboard_audit_logOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_audit_logInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_platform_setting\n   */\n\n  export type AggregateDiscussionboard_platform_setting = {\n    _count: Discussionboard_platform_settingCountAggregateOutputType | null\n    _min: Discussionboard_platform_settingMinAggregateOutputType | null\n    _max: Discussionboard_platform_settingMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_platform_settingMinAggregateOutputType = {\n    id: string | null\n    name: string | null\n    value: string | null\n    type: string | null\n    updated_at: Date | null\n  }\n\n  export type Discussionboard_platform_settingMaxAggregateOutputType = {\n    id: string | null\n    name: string | null\n    value: string | null\n    type: string | null\n    updated_at: Date | null\n  }\n\n  export type Discussionboard_platform_settingCountAggregateOutputType = {\n    id: number\n    name: number\n    value: number\n    type: number\n    updated_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_platform_settingMinAggregateInputType = {\n    id?: true\n    name?: true\n    value?: true\n    type?: true\n    updated_at?: true\n  }\n\n  export type Discussionboard_platform_settingMaxAggregateInputType = {\n    id?: true\n    name?: true\n    value?: true\n    type?: true\n    updated_at?: true\n  }\n\n  export type Discussionboard_platform_settingCountAggregateInputType = {\n    id?: true\n    name?: true\n    value?: true\n    type?: true\n    updated_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_platform_settingAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_platform_setting to aggregate.\n     */\n    where?: discussionboard_platform_settingWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_platform_settings to fetch.\n     */\n    orderBy?: discussionboard_platform_settingOrderByWithRelationInput | discussionboard_platform_settingOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_platform_settingWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_platform_settings from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_platform_settings.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_platform_settings\n    **/\n    _count?: true | Discussionboard_platform_settingCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_platform_settingMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_platform_settingMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_platform_settingAggregateType<T extends Discussionboard_platform_settingAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_platform_setting]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_platform_setting[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_platform_setting[P]>\n  }\n\n\n\n\n  export type discussionboard_platform_settingGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_platform_settingWhereInput\n    orderBy?: discussionboard_platform_settingOrderByWithAggregationInput | discussionboard_platform_settingOrderByWithAggregationInput[]\n    by: Discussionboard_platform_settingScalarFieldEnum[] | Discussionboard_platform_settingScalarFieldEnum\n    having?: discussionboard_platform_settingScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_platform_settingCountAggregateInputType | true\n    _min?: Discussionboard_platform_settingMinAggregateInputType\n    _max?: Discussionboard_platform_settingMaxAggregateInputType\n  }\n\n  export type Discussionboard_platform_settingGroupByOutputType = {\n    id: string\n    name: string\n    value: string\n    type: string\n    updated_at: Date\n    _count: Discussionboard_platform_settingCountAggregateOutputType | null\n    _min: Discussionboard_platform_settingMinAggregateOutputType | null\n    _max: Discussionboard_platform_settingMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_platform_settingGroupByPayload<T extends discussionboard_platform_settingGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_platform_settingGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_platform_settingGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_platform_settingGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_platform_settingGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_platform_settingSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    name?: boolean\n    value?: boolean\n    type?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"discussionboard_platform_setting\"]>\n\n  export type discussionboard_platform_settingSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    name?: boolean\n    value?: boolean\n    type?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"discussionboard_platform_setting\"]>\n\n  export type discussionboard_platform_settingSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    name?: boolean\n    value?: boolean\n    type?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"discussionboard_platform_setting\"]>\n\n  export type discussionboard_platform_settingSelectScalar = {\n    id?: boolean\n    name?: boolean\n    value?: boolean\n    type?: boolean\n    updated_at?: boolean\n  }\n\n  export type discussionboard_platform_settingOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"name\" | \"value\" | \"type\" | \"updated_at\", ExtArgs[\"result\"][\"discussionboard_platform_setting\"]>\n\n  export type $discussionboard_platform_settingPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_platform_setting\"\n    objects: {}\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * [Primary Key] - Unique identifier for each platform setting. 3NF compliance: prevents duplicate or ambiguous settings by row identity.\n       */\n      id: string\n      /**\n       * [Setting Name] - Implements the need to uniquely identify every platform setting. Should be a descriptive string (e.g., 'EnableModerationQueue'). Ensures normalization by not encoding arrays or objects, only simple strings.\n       */\n      name: string\n      /**\n       * [Setting Value] - Implements storing current configuration/data. Can hold any atomic value as string (booleans='true'/'false', numbers as string, etc.). Ensures 3NF by keeping each value atomic and not embedding larger config structures.\n       */\n      value: string\n      /**\n       * [Data Type Marker] - Fulfills the requirement to distinguish setting value interpretation (e.g., 'boolean', 'int', 'string'). Maintains normalization by storing type marker atomically. Example: allows parsing and validation at the application level.\n       */\n      type: string\n      /**\n       * [Last Updated Timestamp] - Supports auditability for platform changes. Maintains normalization by using a single atomic datetime. For example, allows the system to show when moderation settings were last updated.\n       */\n      updated_at: Date\n    }, ExtArgs[\"result\"][\"discussionboard_platform_setting\"]>\n    composites: {}\n  }\n\n  type discussionboard_platform_settingGetPayload<S extends boolean | null | undefined | discussionboard_platform_settingDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_platform_settingPayload, S>\n\n  type discussionboard_platform_settingCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_platform_settingFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_platform_settingCountAggregateInputType | true\n    }\n\n  export interface discussionboard_platform_settingDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_platform_setting'], meta: { name: 'discussionboard_platform_setting' } }\n    /**\n     * Find zero or one Discussionboard_platform_setting that matches the filter.\n     * @param {discussionboard_platform_settingFindUniqueArgs} args - Arguments to find a Discussionboard_platform_setting\n     * @example\n     * // Get one Discussionboard_platform_setting\n     * const discussionboard_platform_setting = await prisma.discussionboard_platform_setting.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_platform_settingFindUniqueArgs>(args: SelectSubset<T, discussionboard_platform_settingFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_platform_settingClient<$Result.GetResult<Prisma.$discussionboard_platform_settingPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_platform_setting that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_platform_settingFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_platform_setting\n     * @example\n     * // Get one Discussionboard_platform_setting\n     * const discussionboard_platform_setting = await prisma.discussionboard_platform_setting.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_platform_settingFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_platform_settingFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_platform_settingClient<$Result.GetResult<Prisma.$discussionboard_platform_settingPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_platform_setting that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_platform_settingFindFirstArgs} args - Arguments to find a Discussionboard_platform_setting\n     * @example\n     * // Get one Discussionboard_platform_setting\n     * const discussionboard_platform_setting = await prisma.discussionboard_platform_setting.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_platform_settingFindFirstArgs>(args?: SelectSubset<T, discussionboard_platform_settingFindFirstArgs<ExtArgs>>): Prisma__discussionboard_platform_settingClient<$Result.GetResult<Prisma.$discussionboard_platform_settingPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_platform_setting that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_platform_settingFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_platform_setting\n     * @example\n     * // Get one Discussionboard_platform_setting\n     * const discussionboard_platform_setting = await prisma.discussionboard_platform_setting.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_platform_settingFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_platform_settingFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_platform_settingClient<$Result.GetResult<Prisma.$discussionboard_platform_settingPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_platform_settings that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_platform_settingFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_platform_settings\n     * const discussionboard_platform_settings = await prisma.discussionboard_platform_setting.findMany()\n     * \n     * // Get first 10 Discussionboard_platform_settings\n     * const discussionboard_platform_settings = await prisma.discussionboard_platform_setting.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_platform_settingWithIdOnly = await prisma.discussionboard_platform_setting.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_platform_settingFindManyArgs>(args?: SelectSubset<T, discussionboard_platform_settingFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_platform_settingPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_platform_setting.\n     * @param {discussionboard_platform_settingCreateArgs} args - Arguments to create a Discussionboard_platform_setting.\n     * @example\n     * // Create one Discussionboard_platform_setting\n     * const Discussionboard_platform_setting = await prisma.discussionboard_platform_setting.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_platform_setting\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_platform_settingCreateArgs>(args: SelectSubset<T, discussionboard_platform_settingCreateArgs<ExtArgs>>): Prisma__discussionboard_platform_settingClient<$Result.GetResult<Prisma.$discussionboard_platform_settingPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_platform_settings.\n     * @param {discussionboard_platform_settingCreateManyArgs} args - Arguments to create many Discussionboard_platform_settings.\n     * @example\n     * // Create many Discussionboard_platform_settings\n     * const discussionboard_platform_setting = await prisma.discussionboard_platform_setting.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_platform_settingCreateManyArgs>(args?: SelectSubset<T, discussionboard_platform_settingCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_platform_settings and returns the data saved in the database.\n     * @param {discussionboard_platform_settingCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_platform_settings.\n     * @example\n     * // Create many Discussionboard_platform_settings\n     * const discussionboard_platform_setting = await prisma.discussionboard_platform_setting.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_platform_settings and only return the `id`\n     * const discussionboard_platform_settingWithIdOnly = await prisma.discussionboard_platform_setting.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_platform_settingCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_platform_settingCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_platform_settingPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_platform_setting.\n     * @param {discussionboard_platform_settingDeleteArgs} args - Arguments to delete one Discussionboard_platform_setting.\n     * @example\n     * // Delete one Discussionboard_platform_setting\n     * const Discussionboard_platform_setting = await prisma.discussionboard_platform_setting.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_platform_setting\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_platform_settingDeleteArgs>(args: SelectSubset<T, discussionboard_platform_settingDeleteArgs<ExtArgs>>): Prisma__discussionboard_platform_settingClient<$Result.GetResult<Prisma.$discussionboard_platform_settingPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_platform_setting.\n     * @param {discussionboard_platform_settingUpdateArgs} args - Arguments to update one Discussionboard_platform_setting.\n     * @example\n     * // Update one Discussionboard_platform_setting\n     * const discussionboard_platform_setting = await prisma.discussionboard_platform_setting.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_platform_settingUpdateArgs>(args: SelectSubset<T, discussionboard_platform_settingUpdateArgs<ExtArgs>>): Prisma__discussionboard_platform_settingClient<$Result.GetResult<Prisma.$discussionboard_platform_settingPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_platform_settings.\n     * @param {discussionboard_platform_settingDeleteManyArgs} args - Arguments to filter Discussionboard_platform_settings to delete.\n     * @example\n     * // Delete a few Discussionboard_platform_settings\n     * const { count } = await prisma.discussionboard_platform_setting.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_platform_settingDeleteManyArgs>(args?: SelectSubset<T, discussionboard_platform_settingDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_platform_settings.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_platform_settingUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_platform_settings\n     * const discussionboard_platform_setting = await prisma.discussionboard_platform_setting.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_platform_settingUpdateManyArgs>(args: SelectSubset<T, discussionboard_platform_settingUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_platform_settings and returns the data updated in the database.\n     * @param {discussionboard_platform_settingUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_platform_settings.\n     * @example\n     * // Update many Discussionboard_platform_settings\n     * const discussionboard_platform_setting = await prisma.discussionboard_platform_setting.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_platform_settings and only return the `id`\n     * const discussionboard_platform_settingWithIdOnly = await prisma.discussionboard_platform_setting.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_platform_settingUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_platform_settingUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_platform_settingPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_platform_setting.\n     * @param {discussionboard_platform_settingUpsertArgs} args - Arguments to update or create a Discussionboard_platform_setting.\n     * @example\n     * // Update or create a Discussionboard_platform_setting\n     * const discussionboard_platform_setting = await prisma.discussionboard_platform_setting.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_platform_setting\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_platform_setting we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_platform_settingUpsertArgs>(args: SelectSubset<T, discussionboard_platform_settingUpsertArgs<ExtArgs>>): Prisma__discussionboard_platform_settingClient<$Result.GetResult<Prisma.$discussionboard_platform_settingPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_platform_settings.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_platform_settingCountArgs} args - Arguments to filter Discussionboard_platform_settings to count.\n     * @example\n     * // Count the number of Discussionboard_platform_settings\n     * const count = await prisma.discussionboard_platform_setting.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_platform_settings we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_platform_settingCountArgs>(\n      args?: Subset<T, discussionboard_platform_settingCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_platform_settingCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_platform_setting.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_platform_settingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_platform_settingAggregateArgs>(args: Subset<T, Discussionboard_platform_settingAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_platform_settingAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_platform_setting.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_platform_settingGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_platform_settingGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_platform_settingGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_platform_settingGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_platform_settingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_platform_settingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_platform_setting model\n   */\n  readonly fields: discussionboard_platform_settingFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_platform_setting.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_platform_settingClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_platform_setting model\n   */\n  interface discussionboard_platform_settingFieldRefs {\n    readonly id: FieldRef<\"discussionboard_platform_setting\", 'String'>\n    readonly name: FieldRef<\"discussionboard_platform_setting\", 'String'>\n    readonly value: FieldRef<\"discussionboard_platform_setting\", 'String'>\n    readonly type: FieldRef<\"discussionboard_platform_setting\", 'String'>\n    readonly updated_at: FieldRef<\"discussionboard_platform_setting\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_platform_setting findUnique\n   */\n  export type discussionboard_platform_settingFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_platform_setting\n     */\n    select?: discussionboard_platform_settingSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_platform_setting\n     */\n    omit?: discussionboard_platform_settingOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_platform_setting to fetch.\n     */\n    where: discussionboard_platform_settingWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_platform_setting findUniqueOrThrow\n   */\n  export type discussionboard_platform_settingFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_platform_setting\n     */\n    select?: discussionboard_platform_settingSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_platform_setting\n     */\n    omit?: discussionboard_platform_settingOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_platform_setting to fetch.\n     */\n    where: discussionboard_platform_settingWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_platform_setting findFirst\n   */\n  export type discussionboard_platform_settingFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_platform_setting\n     */\n    select?: discussionboard_platform_settingSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_platform_setting\n     */\n    omit?: discussionboard_platform_settingOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_platform_setting to fetch.\n     */\n    where?: discussionboard_platform_settingWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_platform_settings to fetch.\n     */\n    orderBy?: discussionboard_platform_settingOrderByWithRelationInput | discussionboard_platform_settingOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_platform_settings.\n     */\n    cursor?: discussionboard_platform_settingWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_platform_settings from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_platform_settings.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_platform_settings.\n     */\n    distinct?: Discussionboard_platform_settingScalarFieldEnum | Discussionboard_platform_settingScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_platform_setting findFirstOrThrow\n   */\n  export type discussionboard_platform_settingFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_platform_setting\n     */\n    select?: discussionboard_platform_settingSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_platform_setting\n     */\n    omit?: discussionboard_platform_settingOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_platform_setting to fetch.\n     */\n    where?: discussionboard_platform_settingWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_platform_settings to fetch.\n     */\n    orderBy?: discussionboard_platform_settingOrderByWithRelationInput | discussionboard_platform_settingOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_platform_settings.\n     */\n    cursor?: discussionboard_platform_settingWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_platform_settings from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_platform_settings.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_platform_settings.\n     */\n    distinct?: Discussionboard_platform_settingScalarFieldEnum | Discussionboard_platform_settingScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_platform_setting findMany\n   */\n  export type discussionboard_platform_settingFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_platform_setting\n     */\n    select?: discussionboard_platform_settingSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_platform_setting\n     */\n    omit?: discussionboard_platform_settingOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_platform_settings to fetch.\n     */\n    where?: discussionboard_platform_settingWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_platform_settings to fetch.\n     */\n    orderBy?: discussionboard_platform_settingOrderByWithRelationInput | discussionboard_platform_settingOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_platform_settings.\n     */\n    cursor?: discussionboard_platform_settingWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_platform_settings from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_platform_settings.\n     */\n    skip?: number\n    distinct?: Discussionboard_platform_settingScalarFieldEnum | Discussionboard_platform_settingScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_platform_setting create\n   */\n  export type discussionboard_platform_settingCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_platform_setting\n     */\n    select?: discussionboard_platform_settingSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_platform_setting\n     */\n    omit?: discussionboard_platform_settingOmit<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_platform_setting.\n     */\n    data: XOR<discussionboard_platform_settingCreateInput, discussionboard_platform_settingUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_platform_setting createMany\n   */\n  export type discussionboard_platform_settingCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_platform_settings.\n     */\n    data: discussionboard_platform_settingCreateManyInput | discussionboard_platform_settingCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_platform_setting createManyAndReturn\n   */\n  export type discussionboard_platform_settingCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_platform_setting\n     */\n    select?: discussionboard_platform_settingSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_platform_setting\n     */\n    omit?: discussionboard_platform_settingOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_platform_settings.\n     */\n    data: discussionboard_platform_settingCreateManyInput | discussionboard_platform_settingCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_platform_setting update\n   */\n  export type discussionboard_platform_settingUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_platform_setting\n     */\n    select?: discussionboard_platform_settingSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_platform_setting\n     */\n    omit?: discussionboard_platform_settingOmit<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_platform_setting.\n     */\n    data: XOR<discussionboard_platform_settingUpdateInput, discussionboard_platform_settingUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_platform_setting to update.\n     */\n    where: discussionboard_platform_settingWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_platform_setting updateMany\n   */\n  export type discussionboard_platform_settingUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_platform_settings.\n     */\n    data: XOR<discussionboard_platform_settingUpdateManyMutationInput, discussionboard_platform_settingUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_platform_settings to update\n     */\n    where?: discussionboard_platform_settingWhereInput\n    /**\n     * Limit how many discussionboard_platform_settings to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_platform_setting updateManyAndReturn\n   */\n  export type discussionboard_platform_settingUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_platform_setting\n     */\n    select?: discussionboard_platform_settingSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_platform_setting\n     */\n    omit?: discussionboard_platform_settingOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_platform_settings.\n     */\n    data: XOR<discussionboard_platform_settingUpdateManyMutationInput, discussionboard_platform_settingUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_platform_settings to update\n     */\n    where?: discussionboard_platform_settingWhereInput\n    /**\n     * Limit how many discussionboard_platform_settings to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_platform_setting upsert\n   */\n  export type discussionboard_platform_settingUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_platform_setting\n     */\n    select?: discussionboard_platform_settingSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_platform_setting\n     */\n    omit?: discussionboard_platform_settingOmit<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_platform_setting to update in case it exists.\n     */\n    where: discussionboard_platform_settingWhereUniqueInput\n    /**\n     * In case the discussionboard_platform_setting found by the `where` argument doesn't exist, create a new discussionboard_platform_setting with this data.\n     */\n    create: XOR<discussionboard_platform_settingCreateInput, discussionboard_platform_settingUncheckedCreateInput>\n    /**\n     * In case the discussionboard_platform_setting was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_platform_settingUpdateInput, discussionboard_platform_settingUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_platform_setting delete\n   */\n  export type discussionboard_platform_settingDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_platform_setting\n     */\n    select?: discussionboard_platform_settingSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_platform_setting\n     */\n    omit?: discussionboard_platform_settingOmit<ExtArgs> | null\n    /**\n     * Filter which discussionboard_platform_setting to delete.\n     */\n    where: discussionboard_platform_settingWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_platform_setting deleteMany\n   */\n  export type discussionboard_platform_settingDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_platform_settings to delete\n     */\n    where?: discussionboard_platform_settingWhereInput\n    /**\n     * Limit how many discussionboard_platform_settings to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_platform_setting without action\n   */\n  export type discussionboard_platform_settingDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_platform_setting\n     */\n    select?: discussionboard_platform_settingSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_platform_setting\n     */\n    omit?: discussionboard_platform_settingOmit<ExtArgs> | null\n  }\n\n\n  /**\n   * Enums\n   */\n\n  export const TransactionIsolationLevel: {\n    ReadUncommitted: 'ReadUncommitted',\n    ReadCommitted: 'ReadCommitted',\n    RepeatableRead: 'RepeatableRead',\n    Serializable: 'Serializable'\n  };\n\n  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]\n\n\n  export const Discussionboard_userScalarFieldEnum: {\n    id: 'id',\n    email: 'email',\n    password_hash: 'password_hash',\n    is_active: 'is_active',\n    created_at: 'created_at',\n    updated_at: 'updated_at'\n  };\n\n  export type Discussionboard_userScalarFieldEnum = (typeof Discussionboard_userScalarFieldEnum)[keyof typeof Discussionboard_userScalarFieldEnum]\n\n\n  export const Discussionboard_user_profileScalarFieldEnum: {\n    id: 'id',\n    user_id: 'user_id',\n    display_name: 'display_name',\n    avatar_url: 'avatar_url',\n    bio: 'bio'\n  };\n\n  export type Discussionboard_user_profileScalarFieldEnum = (typeof Discussionboard_user_profileScalarFieldEnum)[keyof typeof Discussionboard_user_profileScalarFieldEnum]\n\n\n  export const Discussionboard_memberScalarFieldEnum: {\n    id: 'id',\n    user_id: 'user_id',\n    granted_at: 'granted_at'\n  };\n\n  export type Discussionboard_memberScalarFieldEnum = (typeof Discussionboard_memberScalarFieldEnum)[keyof typeof Discussionboard_memberScalarFieldEnum]\n\n\n  export const Discussionboard_moderatorScalarFieldEnum: {\n    id: 'id',\n    user_id: 'user_id',\n    assigned_at: 'assigned_at'\n  };\n\n  export type Discussionboard_moderatorScalarFieldEnum = (typeof Discussionboard_moderatorScalarFieldEnum)[keyof typeof Discussionboard_moderatorScalarFieldEnum]\n\n\n  export const Discussionboard_adminScalarFieldEnum: {\n    id: 'id',\n    user_id: 'user_id',\n    assigned_at: 'assigned_at'\n  };\n\n  export type Discussionboard_adminScalarFieldEnum = (typeof Discussionboard_adminScalarFieldEnum)[keyof typeof Discussionboard_adminScalarFieldEnum]\n\n\n  export const Discussionboard_postScalarFieldEnum: {\n    id: 'id',\n    author_member_id: 'author_member_id',\n    category_id: 'category_id',\n    title: 'title',\n    body: 'body',\n    created_at: 'created_at',\n    updated_at: 'updated_at',\n    deleted_at: 'deleted_at'\n  };\n\n  export type Discussionboard_postScalarFieldEnum = (typeof Discussionboard_postScalarFieldEnum)[keyof typeof Discussionboard_postScalarFieldEnum]\n\n\n  export const Discussionboard_post_categoryScalarFieldEnum: {\n    id: 'id',\n    name: 'name',\n    description: 'description'\n  };\n\n  export type Discussionboard_post_categoryScalarFieldEnum = (typeof Discussionboard_post_categoryScalarFieldEnum)[keyof typeof Discussionboard_post_categoryScalarFieldEnum]\n\n\n  export const Discussionboard_post_tagScalarFieldEnum: {\n    id: 'id',\n    name: 'name'\n  };\n\n  export type Discussionboard_post_tagScalarFieldEnum = (typeof Discussionboard_post_tagScalarFieldEnum)[keyof typeof Discussionboard_post_tagScalarFieldEnum]\n\n\n  export const Discussionboard_post_attachmentScalarFieldEnum: {\n    id: 'id',\n    post_id: 'post_id',\n    file_url: 'file_url',\n    file_type: 'file_type',\n    uploaded_at: 'uploaded_at'\n  };\n\n  export type Discussionboard_post_attachmentScalarFieldEnum = (typeof Discussionboard_post_attachmentScalarFieldEnum)[keyof typeof Discussionboard_post_attachmentScalarFieldEnum]\n\n\n  export const Discussionboard_commentsScalarFieldEnum: {\n    id: 'id',\n    post_id: 'post_id',\n    author_id: 'author_id',\n    parent_comment_id: 'parent_comment_id',\n    content: 'content',\n    is_edited: 'is_edited',\n    is_deleted: 'is_deleted',\n    created_at: 'created_at',\n    updated_at: 'updated_at'\n  };\n\n  export type Discussionboard_commentsScalarFieldEnum = (typeof Discussionboard_commentsScalarFieldEnum)[keyof typeof Discussionboard_commentsScalarFieldEnum]\n\n\n  export const Discussionboard_likesScalarFieldEnum: {\n    id: 'id',\n    user_id: 'user_id',\n    post_id: 'post_id',\n    comment_id: 'comment_id',\n    created_at: 'created_at',\n    deleted_at: 'deleted_at'\n  };\n\n  export type Discussionboard_likesScalarFieldEnum = (typeof Discussionboard_likesScalarFieldEnum)[keyof typeof Discussionboard_likesScalarFieldEnum]\n\n\n  export const Discussionboard_reportsScalarFieldEnum: {\n    id: 'id',\n    user_id: 'user_id',\n    post_id: 'post_id',\n    comment_id: 'comment_id',\n    reason_code: 'reason_code',\n    reason_details: 'reason_details',\n    created_at: 'created_at',\n    deleted_at: 'deleted_at'\n  };\n\n  export type Discussionboard_reportsScalarFieldEnum = (typeof Discussionboard_reportsScalarFieldEnum)[keyof typeof Discussionboard_reportsScalarFieldEnum]\n\n\n  export const Discussionboard_moderation_actionScalarFieldEnum: {\n    id: 'id',\n    actor_id: 'actor_id',\n    target_user_id: 'target_user_id',\n    post_id: 'post_id',\n    comment_id: 'comment_id',\n    action_type: 'action_type',\n    reason: 'reason',\n    created_at: 'created_at'\n  };\n\n  export type Discussionboard_moderation_actionScalarFieldEnum = (typeof Discussionboard_moderation_actionScalarFieldEnum)[keyof typeof Discussionboard_moderation_actionScalarFieldEnum]\n\n\n  export const Discussionboard_report_reviewScalarFieldEnum: {\n    id: 'id',\n    report_id: 'report_id',\n    reviewer_id: 'reviewer_id',\n    post_id: 'post_id',\n    comment_id: 'comment_id',\n    review_status: 'review_status',\n    moderator_comment: 'moderator_comment',\n    reviewed_at: 'reviewed_at'\n  };\n\n  export type Discussionboard_report_reviewScalarFieldEnum = (typeof Discussionboard_report_reviewScalarFieldEnum)[keyof typeof Discussionboard_report_reviewScalarFieldEnum]\n\n\n  export const Discussionboard_warningScalarFieldEnum: {\n    id: 'id',\n    issued_by_id: 'issued_by_id',\n    issued_to_id: 'issued_to_id',\n    post_id: 'post_id',\n    comment_id: 'comment_id',\n    warning_type: 'warning_type',\n    message: 'message',\n    issued_at: 'issued_at'\n  };\n\n  export type Discussionboard_warningScalarFieldEnum = (typeof Discussionboard_warningScalarFieldEnum)[keyof typeof Discussionboard_warningScalarFieldEnum]\n\n\n  export const Discussionboard_banScalarFieldEnum: {\n    id: 'id',\n    banned_user_id: 'banned_user_id',\n    banned_by_id: 'banned_by_id',\n    warning_id: 'warning_id',\n    ban_type: 'ban_type',\n    reason: 'reason',\n    issued_at: 'issued_at',\n    expires_at: 'expires_at'\n  };\n\n  export type Discussionboard_banScalarFieldEnum = (typeof Discussionboard_banScalarFieldEnum)[keyof typeof Discussionboard_banScalarFieldEnum]\n\n\n  export const Discussionboard_notificationScalarFieldEnum: {\n    id: 'id',\n    recipient_user_id: 'recipient_user_id',\n    related_post_id: 'related_post_id',\n    related_comment_id: 'related_comment_id',\n    actor_user_id: 'actor_user_id',\n    type: 'type',\n    message: 'message',\n    is_read: 'is_read',\n    created_at: 'created_at'\n  };\n\n  export type Discussionboard_notificationScalarFieldEnum = (typeof Discussionboard_notificationScalarFieldEnum)[keyof typeof Discussionboard_notificationScalarFieldEnum]\n\n\n  export const Discussionboard_notification_preferenceScalarFieldEnum: {\n    id: 'id',\n    user_id: 'user_id',\n    notify_reply: 'notify_reply',\n    notify_like: 'notify_like',\n    notify_moderator_action: 'notify_moderator_action',\n    notify_system_message: 'notify_system_message'\n  };\n\n  export type Discussionboard_notification_preferenceScalarFieldEnum = (typeof Discussionboard_notification_preferenceScalarFieldEnum)[keyof typeof Discussionboard_notification_preferenceScalarFieldEnum]\n\n\n  export const Discussionboard_audit_logScalarFieldEnum: {\n    id: 'id',\n    actor_user_id: 'actor_user_id',\n    target_user_id: 'target_user_id',\n    action_type: 'action_type',\n    entity_type: 'entity_type',\n    entity_id: 'entity_id',\n    action_detail: 'action_detail',\n    created_at: 'created_at'\n  };\n\n  export type Discussionboard_audit_logScalarFieldEnum = (typeof Discussionboard_audit_logScalarFieldEnum)[keyof typeof Discussionboard_audit_logScalarFieldEnum]\n\n\n  export const Discussionboard_platform_settingScalarFieldEnum: {\n    id: 'id',\n    name: 'name',\n    value: 'value',\n    type: 'type',\n    updated_at: 'updated_at'\n  };\n\n  export type Discussionboard_platform_settingScalarFieldEnum = (typeof Discussionboard_platform_settingScalarFieldEnum)[keyof typeof Discussionboard_platform_settingScalarFieldEnum]\n\n\n  export const SortOrder: {\n    asc: 'asc',\n    desc: 'desc'\n  };\n\n  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]\n\n\n  export const QueryMode: {\n    default: 'default',\n    insensitive: 'insensitive'\n  };\n\n  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]\n\n\n  export const NullsOrder: {\n    first: 'first',\n    last: 'last'\n  };\n\n  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]\n\n\n  /**\n   * Field references\n   */\n\n\n  /**\n   * Reference to a field of type 'String'\n   */\n  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>\n    \n\n\n  /**\n   * Reference to a field of type 'String[]'\n   */\n  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>\n    \n\n\n  /**\n   * Reference to a field of type 'Boolean'\n   */\n  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>\n    \n\n\n  /**\n   * Reference to a field of type 'DateTime'\n   */\n  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>\n    \n\n\n  /**\n   * Reference to a field of type 'DateTime[]'\n   */\n  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>\n    \n\n\n  /**\n   * Reference to a field of type 'Int'\n   */\n  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>\n    \n\n\n  /**\n   * Reference to a field of type 'Int[]'\n   */\n  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>\n    \n  /**\n   * Deep Input Types\n   */\n\n\n  export type discussionboard_userWhereInput = {\n    AND?: discussionboard_userWhereInput | discussionboard_userWhereInput[]\n    OR?: discussionboard_userWhereInput[]\n    NOT?: discussionboard_userWhereInput | discussionboard_userWhereInput[]\n    id?: UuidFilter<\"discussionboard_user\"> | string\n    email?: StringFilter<\"discussionboard_user\"> | string\n    password_hash?: StringFilter<\"discussionboard_user\"> | string\n    is_active?: BoolFilter<\"discussionboard_user\"> | boolean\n    created_at?: DateTimeFilter<\"discussionboard_user\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussionboard_user\"> | Date | string\n    discussionboard_user_profile?: XOR<Discussionboard_user_profileNullableScalarRelationFilter, discussionboard_user_profileWhereInput> | null\n    discussionboard_member?: XOR<Discussionboard_memberNullableScalarRelationFilter, discussionboard_memberWhereInput> | null\n    discussionboard_moderator?: XOR<Discussionboard_moderatorNullableScalarRelationFilter, discussionboard_moderatorWhereInput> | null\n    discussionboard_admin?: XOR<Discussionboard_adminNullableScalarRelationFilter, discussionboard_adminWhereInput> | null\n    discussionboard_comments?: Discussionboard_commentsListRelationFilter\n    discussionboard_likes?: Discussionboard_likesListRelationFilter\n    discussionboard_reports?: Discussionboard_reportsListRelationFilter\n    discussionboard_moderation_action_of_actor_id?: Discussionboard_moderation_actionListRelationFilter\n    discussionboard_moderation_action_of_target_user_id?: Discussionboard_moderation_actionListRelationFilter\n    discussionboard_report_review?: Discussionboard_report_reviewListRelationFilter\n    discussionboard_warning_of_issued_by_id?: Discussionboard_warningListRelationFilter\n    discussionboard_warning_of_issued_to_id?: Discussionboard_warningListRelationFilter\n    discussionboard_ban_of_banned_user_id?: Discussionboard_banListRelationFilter\n    discussionboard_ban_of_banned_by_id?: Discussionboard_banListRelationFilter\n    discussionboard_notification_of_recipient_user_id?: Discussionboard_notificationListRelationFilter\n    discussionboard_notification_of_actor_user_id?: Discussionboard_notificationListRelationFilter\n    discussionboard_notification_preference?: XOR<Discussionboard_notification_preferenceNullableScalarRelationFilter, discussionboard_notification_preferenceWhereInput> | null\n    discussionboard_audit_log_of_actor_user_id?: Discussionboard_audit_logListRelationFilter\n    discussionboard_audit_log_of_target_user_id?: Discussionboard_audit_logListRelationFilter\n  }\n\n  export type discussionboard_userOrderByWithRelationInput = {\n    id?: SortOrder\n    email?: SortOrder\n    password_hash?: SortOrder\n    is_active?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    discussionboard_user_profile?: discussionboard_user_profileOrderByWithRelationInput\n    discussionboard_member?: discussionboard_memberOrderByWithRelationInput\n    discussionboard_moderator?: discussionboard_moderatorOrderByWithRelationInput\n    discussionboard_admin?: discussionboard_adminOrderByWithRelationInput\n    discussionboard_comments?: discussionboard_commentsOrderByRelationAggregateInput\n    discussionboard_likes?: discussionboard_likesOrderByRelationAggregateInput\n    discussionboard_reports?: discussionboard_reportsOrderByRelationAggregateInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionOrderByRelationAggregateInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionOrderByRelationAggregateInput\n    discussionboard_report_review?: discussionboard_report_reviewOrderByRelationAggregateInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningOrderByRelationAggregateInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningOrderByRelationAggregateInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banOrderByRelationAggregateInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banOrderByRelationAggregateInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationOrderByRelationAggregateInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationOrderByRelationAggregateInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceOrderByWithRelationInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logOrderByRelationAggregateInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logOrderByRelationAggregateInput\n  }\n\n  export type discussionboard_userWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    email?: string\n    AND?: discussionboard_userWhereInput | discussionboard_userWhereInput[]\n    OR?: discussionboard_userWhereInput[]\n    NOT?: discussionboard_userWhereInput | discussionboard_userWhereInput[]\n    password_hash?: StringFilter<\"discussionboard_user\"> | string\n    is_active?: BoolFilter<\"discussionboard_user\"> | boolean\n    created_at?: DateTimeFilter<\"discussionboard_user\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussionboard_user\"> | Date | string\n    discussionboard_user_profile?: XOR<Discussionboard_user_profileNullableScalarRelationFilter, discussionboard_user_profileWhereInput> | null\n    discussionboard_member?: XOR<Discussionboard_memberNullableScalarRelationFilter, discussionboard_memberWhereInput> | null\n    discussionboard_moderator?: XOR<Discussionboard_moderatorNullableScalarRelationFilter, discussionboard_moderatorWhereInput> | null\n    discussionboard_admin?: XOR<Discussionboard_adminNullableScalarRelationFilter, discussionboard_adminWhereInput> | null\n    discussionboard_comments?: Discussionboard_commentsListRelationFilter\n    discussionboard_likes?: Discussionboard_likesListRelationFilter\n    discussionboard_reports?: Discussionboard_reportsListRelationFilter\n    discussionboard_moderation_action_of_actor_id?: Discussionboard_moderation_actionListRelationFilter\n    discussionboard_moderation_action_of_target_user_id?: Discussionboard_moderation_actionListRelationFilter\n    discussionboard_report_review?: Discussionboard_report_reviewListRelationFilter\n    discussionboard_warning_of_issued_by_id?: Discussionboard_warningListRelationFilter\n    discussionboard_warning_of_issued_to_id?: Discussionboard_warningListRelationFilter\n    discussionboard_ban_of_banned_user_id?: Discussionboard_banListRelationFilter\n    discussionboard_ban_of_banned_by_id?: Discussionboard_banListRelationFilter\n    discussionboard_notification_of_recipient_user_id?: Discussionboard_notificationListRelationFilter\n    discussionboard_notification_of_actor_user_id?: Discussionboard_notificationListRelationFilter\n    discussionboard_notification_preference?: XOR<Discussionboard_notification_preferenceNullableScalarRelationFilter, discussionboard_notification_preferenceWhereInput> | null\n    discussionboard_audit_log_of_actor_user_id?: Discussionboard_audit_logListRelationFilter\n    discussionboard_audit_log_of_target_user_id?: Discussionboard_audit_logListRelationFilter\n  }, \"id\" | \"email\">\n\n  export type discussionboard_userOrderByWithAggregationInput = {\n    id?: SortOrder\n    email?: SortOrder\n    password_hash?: SortOrder\n    is_active?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    _count?: discussionboard_userCountOrderByAggregateInput\n    _max?: discussionboard_userMaxOrderByAggregateInput\n    _min?: discussionboard_userMinOrderByAggregateInput\n  }\n\n  export type discussionboard_userScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_userScalarWhereWithAggregatesInput | discussionboard_userScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_userScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_userScalarWhereWithAggregatesInput | discussionboard_userScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_user\"> | string\n    email?: StringWithAggregatesFilter<\"discussionboard_user\"> | string\n    password_hash?: StringWithAggregatesFilter<\"discussionboard_user\"> | string\n    is_active?: BoolWithAggregatesFilter<\"discussionboard_user\"> | boolean\n    created_at?: DateTimeWithAggregatesFilter<\"discussionboard_user\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"discussionboard_user\"> | Date | string\n  }\n\n  export type discussionboard_user_profileWhereInput = {\n    AND?: discussionboard_user_profileWhereInput | discussionboard_user_profileWhereInput[]\n    OR?: discussionboard_user_profileWhereInput[]\n    NOT?: discussionboard_user_profileWhereInput | discussionboard_user_profileWhereInput[]\n    id?: UuidFilter<\"discussionboard_user_profile\"> | string\n    user_id?: UuidFilter<\"discussionboard_user_profile\"> | string\n    display_name?: StringFilter<\"discussionboard_user_profile\"> | string\n    avatar_url?: StringNullableFilter<\"discussionboard_user_profile\"> | string | null\n    bio?: StringNullableFilter<\"discussionboard_user_profile\"> | string | null\n    user_profile_user_id?: XOR<Discussionboard_userScalarRelationFilter, discussionboard_userWhereInput>\n  }\n\n  export type discussionboard_user_profileOrderByWithRelationInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    display_name?: SortOrder\n    avatar_url?: SortOrderInput | SortOrder\n    bio?: SortOrderInput | SortOrder\n    user_profile_user_id?: discussionboard_userOrderByWithRelationInput\n  }\n\n  export type discussionboard_user_profileWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    user_id?: string\n    AND?: discussionboard_user_profileWhereInput | discussionboard_user_profileWhereInput[]\n    OR?: discussionboard_user_profileWhereInput[]\n    NOT?: discussionboard_user_profileWhereInput | discussionboard_user_profileWhereInput[]\n    display_name?: StringFilter<\"discussionboard_user_profile\"> | string\n    avatar_url?: StringNullableFilter<\"discussionboard_user_profile\"> | string | null\n    bio?: StringNullableFilter<\"discussionboard_user_profile\"> | string | null\n    user_profile_user_id?: XOR<Discussionboard_userScalarRelationFilter, discussionboard_userWhereInput>\n  }, \"id\" | \"user_id\">\n\n  export type discussionboard_user_profileOrderByWithAggregationInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    display_name?: SortOrder\n    avatar_url?: SortOrderInput | SortOrder\n    bio?: SortOrderInput | SortOrder\n    _count?: discussionboard_user_profileCountOrderByAggregateInput\n    _max?: discussionboard_user_profileMaxOrderByAggregateInput\n    _min?: discussionboard_user_profileMinOrderByAggregateInput\n  }\n\n  export type discussionboard_user_profileScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_user_profileScalarWhereWithAggregatesInput | discussionboard_user_profileScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_user_profileScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_user_profileScalarWhereWithAggregatesInput | discussionboard_user_profileScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_user_profile\"> | string\n    user_id?: UuidWithAggregatesFilter<\"discussionboard_user_profile\"> | string\n    display_name?: StringWithAggregatesFilter<\"discussionboard_user_profile\"> | string\n    avatar_url?: StringNullableWithAggregatesFilter<\"discussionboard_user_profile\"> | string | null\n    bio?: StringNullableWithAggregatesFilter<\"discussionboard_user_profile\"> | string | null\n  }\n\n  export type discussionboard_memberWhereInput = {\n    AND?: discussionboard_memberWhereInput | discussionboard_memberWhereInput[]\n    OR?: discussionboard_memberWhereInput[]\n    NOT?: discussionboard_memberWhereInput | discussionboard_memberWhereInput[]\n    id?: UuidFilter<\"discussionboard_member\"> | string\n    user_id?: UuidFilter<\"discussionboard_member\"> | string\n    granted_at?: DateTimeFilter<\"discussionboard_member\"> | Date | string\n    member_user_id?: XOR<Discussionboard_userScalarRelationFilter, discussionboard_userWhereInput>\n    discussionboard_post?: Discussionboard_postListRelationFilter\n  }\n\n  export type discussionboard_memberOrderByWithRelationInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    granted_at?: SortOrder\n    member_user_id?: discussionboard_userOrderByWithRelationInput\n    discussionboard_post?: discussionboard_postOrderByRelationAggregateInput\n  }\n\n  export type discussionboard_memberWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    user_id?: string\n    AND?: discussionboard_memberWhereInput | discussionboard_memberWhereInput[]\n    OR?: discussionboard_memberWhereInput[]\n    NOT?: discussionboard_memberWhereInput | discussionboard_memberWhereInput[]\n    granted_at?: DateTimeFilter<\"discussionboard_member\"> | Date | string\n    member_user_id?: XOR<Discussionboard_userScalarRelationFilter, discussionboard_userWhereInput>\n    discussionboard_post?: Discussionboard_postListRelationFilter\n  }, \"id\" | \"user_id\">\n\n  export type discussionboard_memberOrderByWithAggregationInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    granted_at?: SortOrder\n    _count?: discussionboard_memberCountOrderByAggregateInput\n    _max?: discussionboard_memberMaxOrderByAggregateInput\n    _min?: discussionboard_memberMinOrderByAggregateInput\n  }\n\n  export type discussionboard_memberScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_memberScalarWhereWithAggregatesInput | discussionboard_memberScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_memberScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_memberScalarWhereWithAggregatesInput | discussionboard_memberScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_member\"> | string\n    user_id?: UuidWithAggregatesFilter<\"discussionboard_member\"> | string\n    granted_at?: DateTimeWithAggregatesFilter<\"discussionboard_member\"> | Date | string\n  }\n\n  export type discussionboard_moderatorWhereInput = {\n    AND?: discussionboard_moderatorWhereInput | discussionboard_moderatorWhereInput[]\n    OR?: discussionboard_moderatorWhereInput[]\n    NOT?: discussionboard_moderatorWhereInput | discussionboard_moderatorWhereInput[]\n    id?: UuidFilter<\"discussionboard_moderator\"> | string\n    user_id?: UuidFilter<\"discussionboard_moderator\"> | string\n    assigned_at?: DateTimeFilter<\"discussionboard_moderator\"> | Date | string\n    moderator_user_id?: XOR<Discussionboard_userScalarRelationFilter, discussionboard_userWhereInput>\n  }\n\n  export type discussionboard_moderatorOrderByWithRelationInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    assigned_at?: SortOrder\n    moderator_user_id?: discussionboard_userOrderByWithRelationInput\n  }\n\n  export type discussionboard_moderatorWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    user_id?: string\n    AND?: discussionboard_moderatorWhereInput | discussionboard_moderatorWhereInput[]\n    OR?: discussionboard_moderatorWhereInput[]\n    NOT?: discussionboard_moderatorWhereInput | discussionboard_moderatorWhereInput[]\n    assigned_at?: DateTimeFilter<\"discussionboard_moderator\"> | Date | string\n    moderator_user_id?: XOR<Discussionboard_userScalarRelationFilter, discussionboard_userWhereInput>\n  }, \"id\" | \"user_id\">\n\n  export type discussionboard_moderatorOrderByWithAggregationInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    assigned_at?: SortOrder\n    _count?: discussionboard_moderatorCountOrderByAggregateInput\n    _max?: discussionboard_moderatorMaxOrderByAggregateInput\n    _min?: discussionboard_moderatorMinOrderByAggregateInput\n  }\n\n  export type discussionboard_moderatorScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_moderatorScalarWhereWithAggregatesInput | discussionboard_moderatorScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_moderatorScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_moderatorScalarWhereWithAggregatesInput | discussionboard_moderatorScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_moderator\"> | string\n    user_id?: UuidWithAggregatesFilter<\"discussionboard_moderator\"> | string\n    assigned_at?: DateTimeWithAggregatesFilter<\"discussionboard_moderator\"> | Date | string\n  }\n\n  export type discussionboard_adminWhereInput = {\n    AND?: discussionboard_adminWhereInput | discussionboard_adminWhereInput[]\n    OR?: discussionboard_adminWhereInput[]\n    NOT?: discussionboard_adminWhereInput | discussionboard_adminWhereInput[]\n    id?: UuidFilter<\"discussionboard_admin\"> | string\n    user_id?: UuidFilter<\"discussionboard_admin\"> | string\n    assigned_at?: DateTimeFilter<\"discussionboard_admin\"> | Date | string\n    admin_user_id?: XOR<Discussionboard_userScalarRelationFilter, discussionboard_userWhereInput>\n  }\n\n  export type discussionboard_adminOrderByWithRelationInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    assigned_at?: SortOrder\n    admin_user_id?: discussionboard_userOrderByWithRelationInput\n  }\n\n  export type discussionboard_adminWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    user_id?: string\n    AND?: discussionboard_adminWhereInput | discussionboard_adminWhereInput[]\n    OR?: discussionboard_adminWhereInput[]\n    NOT?: discussionboard_adminWhereInput | discussionboard_adminWhereInput[]\n    assigned_at?: DateTimeFilter<\"discussionboard_admin\"> | Date | string\n    admin_user_id?: XOR<Discussionboard_userScalarRelationFilter, discussionboard_userWhereInput>\n  }, \"id\" | \"user_id\">\n\n  export type discussionboard_adminOrderByWithAggregationInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    assigned_at?: SortOrder\n    _count?: discussionboard_adminCountOrderByAggregateInput\n    _max?: discussionboard_adminMaxOrderByAggregateInput\n    _min?: discussionboard_adminMinOrderByAggregateInput\n  }\n\n  export type discussionboard_adminScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_adminScalarWhereWithAggregatesInput | discussionboard_adminScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_adminScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_adminScalarWhereWithAggregatesInput | discussionboard_adminScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_admin\"> | string\n    user_id?: UuidWithAggregatesFilter<\"discussionboard_admin\"> | string\n    assigned_at?: DateTimeWithAggregatesFilter<\"discussionboard_admin\"> | Date | string\n  }\n\n  export type discussionboard_postWhereInput = {\n    AND?: discussionboard_postWhereInput | discussionboard_postWhereInput[]\n    OR?: discussionboard_postWhereInput[]\n    NOT?: discussionboard_postWhereInput | discussionboard_postWhereInput[]\n    id?: UuidFilter<\"discussionboard_post\"> | string\n    author_member_id?: UuidFilter<\"discussionboard_post\"> | string\n    category_id?: UuidFilter<\"discussionboard_post\"> | string\n    title?: StringFilter<\"discussionboard_post\"> | string\n    body?: StringFilter<\"discussionboard_post\"> | string\n    created_at?: DateTimeFilter<\"discussionboard_post\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussionboard_post\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"discussionboard_post\"> | Date | string | null\n    member?: XOR<Discussionboard_memberScalarRelationFilter, discussionboard_memberWhereInput>\n    category?: XOR<Discussionboard_post_categoryScalarRelationFilter, discussionboard_post_categoryWhereInput>\n    discussionboard_post_attachment?: Discussionboard_post_attachmentListRelationFilter\n    discussionboard_comments?: Discussionboard_commentsListRelationFilter\n    discussionboard_likes?: Discussionboard_likesListRelationFilter\n    discussionboard_reports?: Discussionboard_reportsListRelationFilter\n    discussionboard_moderation_action?: Discussionboard_moderation_actionListRelationFilter\n    discussionboard_report_review?: Discussionboard_report_reviewListRelationFilter\n    discussionboard_warning?: Discussionboard_warningListRelationFilter\n    discussionboard_notification?: Discussionboard_notificationListRelationFilter\n  }\n\n  export type discussionboard_postOrderByWithRelationInput = {\n    id?: SortOrder\n    author_member_id?: SortOrder\n    category_id?: SortOrder\n    title?: SortOrder\n    body?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    member?: discussionboard_memberOrderByWithRelationInput\n    category?: discussionboard_post_categoryOrderByWithRelationInput\n    discussionboard_post_attachment?: discussionboard_post_attachmentOrderByRelationAggregateInput\n    discussionboard_comments?: discussionboard_commentsOrderByRelationAggregateInput\n    discussionboard_likes?: discussionboard_likesOrderByRelationAggregateInput\n    discussionboard_reports?: discussionboard_reportsOrderByRelationAggregateInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionOrderByRelationAggregateInput\n    discussionboard_report_review?: discussionboard_report_reviewOrderByRelationAggregateInput\n    discussionboard_warning?: discussionboard_warningOrderByRelationAggregateInput\n    discussionboard_notification?: discussionboard_notificationOrderByRelationAggregateInput\n  }\n\n  export type discussionboard_postWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    author_member_id_created_at?: discussionboard_postAuthor_member_idCreated_atCompoundUniqueInput\n    AND?: discussionboard_postWhereInput | discussionboard_postWhereInput[]\n    OR?: discussionboard_postWhereInput[]\n    NOT?: discussionboard_postWhereInput | discussionboard_postWhereInput[]\n    author_member_id?: UuidFilter<\"discussionboard_post\"> | string\n    category_id?: UuidFilter<\"discussionboard_post\"> | string\n    title?: StringFilter<\"discussionboard_post\"> | string\n    body?: StringFilter<\"discussionboard_post\"> | string\n    created_at?: DateTimeFilter<\"discussionboard_post\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussionboard_post\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"discussionboard_post\"> | Date | string | null\n    member?: XOR<Discussionboard_memberScalarRelationFilter, discussionboard_memberWhereInput>\n    category?: XOR<Discussionboard_post_categoryScalarRelationFilter, discussionboard_post_categoryWhereInput>\n    discussionboard_post_attachment?: Discussionboard_post_attachmentListRelationFilter\n    discussionboard_comments?: Discussionboard_commentsListRelationFilter\n    discussionboard_likes?: Discussionboard_likesListRelationFilter\n    discussionboard_reports?: Discussionboard_reportsListRelationFilter\n    discussionboard_moderation_action?: Discussionboard_moderation_actionListRelationFilter\n    discussionboard_report_review?: Discussionboard_report_reviewListRelationFilter\n    discussionboard_warning?: Discussionboard_warningListRelationFilter\n    discussionboard_notification?: Discussionboard_notificationListRelationFilter\n  }, \"id\" | \"author_member_id_created_at\">\n\n  export type discussionboard_postOrderByWithAggregationInput = {\n    id?: SortOrder\n    author_member_id?: SortOrder\n    category_id?: SortOrder\n    title?: SortOrder\n    body?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    _count?: discussionboard_postCountOrderByAggregateInput\n    _max?: discussionboard_postMaxOrderByAggregateInput\n    _min?: discussionboard_postMinOrderByAggregateInput\n  }\n\n  export type discussionboard_postScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_postScalarWhereWithAggregatesInput | discussionboard_postScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_postScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_postScalarWhereWithAggregatesInput | discussionboard_postScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_post\"> | string\n    author_member_id?: UuidWithAggregatesFilter<\"discussionboard_post\"> | string\n    category_id?: UuidWithAggregatesFilter<\"discussionboard_post\"> | string\n    title?: StringWithAggregatesFilter<\"discussionboard_post\"> | string\n    body?: StringWithAggregatesFilter<\"discussionboard_post\"> | string\n    created_at?: DateTimeWithAggregatesFilter<\"discussionboard_post\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"discussionboard_post\"> | Date | string\n    deleted_at?: DateTimeNullableWithAggregatesFilter<\"discussionboard_post\"> | Date | string | null\n  }\n\n  export type discussionboard_post_categoryWhereInput = {\n    AND?: discussionboard_post_categoryWhereInput | discussionboard_post_categoryWhereInput[]\n    OR?: discussionboard_post_categoryWhereInput[]\n    NOT?: discussionboard_post_categoryWhereInput | discussionboard_post_categoryWhereInput[]\n    id?: UuidFilter<\"discussionboard_post_category\"> | string\n    name?: StringFilter<\"discussionboard_post_category\"> | string\n    description?: StringNullableFilter<\"discussionboard_post_category\"> | string | null\n    discussionboard_post?: Discussionboard_postListRelationFilter\n  }\n\n  export type discussionboard_post_categoryOrderByWithRelationInput = {\n    id?: SortOrder\n    name?: SortOrder\n    description?: SortOrderInput | SortOrder\n    discussionboard_post?: discussionboard_postOrderByRelationAggregateInput\n  }\n\n  export type discussionboard_post_categoryWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    name?: string\n    AND?: discussionboard_post_categoryWhereInput | discussionboard_post_categoryWhereInput[]\n    OR?: discussionboard_post_categoryWhereInput[]\n    NOT?: discussionboard_post_categoryWhereInput | discussionboard_post_categoryWhereInput[]\n    description?: StringNullableFilter<\"discussionboard_post_category\"> | string | null\n    discussionboard_post?: Discussionboard_postListRelationFilter\n  }, \"id\" | \"name\">\n\n  export type discussionboard_post_categoryOrderByWithAggregationInput = {\n    id?: SortOrder\n    name?: SortOrder\n    description?: SortOrderInput | SortOrder\n    _count?: discussionboard_post_categoryCountOrderByAggregateInput\n    _max?: discussionboard_post_categoryMaxOrderByAggregateInput\n    _min?: discussionboard_post_categoryMinOrderByAggregateInput\n  }\n\n  export type discussionboard_post_categoryScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_post_categoryScalarWhereWithAggregatesInput | discussionboard_post_categoryScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_post_categoryScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_post_categoryScalarWhereWithAggregatesInput | discussionboard_post_categoryScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_post_category\"> | string\n    name?: StringWithAggregatesFilter<\"discussionboard_post_category\"> | string\n    description?: StringNullableWithAggregatesFilter<\"discussionboard_post_category\"> | string | null\n  }\n\n  export type discussionboard_post_tagWhereInput = {\n    AND?: discussionboard_post_tagWhereInput | discussionboard_post_tagWhereInput[]\n    OR?: discussionboard_post_tagWhereInput[]\n    NOT?: discussionboard_post_tagWhereInput | discussionboard_post_tagWhereInput[]\n    id?: UuidFilter<\"discussionboard_post_tag\"> | string\n    name?: StringFilter<\"discussionboard_post_tag\"> | string\n  }\n\n  export type discussionboard_post_tagOrderByWithRelationInput = {\n    id?: SortOrder\n    name?: SortOrder\n  }\n\n  export type discussionboard_post_tagWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    name?: string\n    AND?: discussionboard_post_tagWhereInput | discussionboard_post_tagWhereInput[]\n    OR?: discussionboard_post_tagWhereInput[]\n    NOT?: discussionboard_post_tagWhereInput | discussionboard_post_tagWhereInput[]\n  }, \"id\" | \"name\">\n\n  export type discussionboard_post_tagOrderByWithAggregationInput = {\n    id?: SortOrder\n    name?: SortOrder\n    _count?: discussionboard_post_tagCountOrderByAggregateInput\n    _max?: discussionboard_post_tagMaxOrderByAggregateInput\n    _min?: discussionboard_post_tagMinOrderByAggregateInput\n  }\n\n  export type discussionboard_post_tagScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_post_tagScalarWhereWithAggregatesInput | discussionboard_post_tagScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_post_tagScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_post_tagScalarWhereWithAggregatesInput | discussionboard_post_tagScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_post_tag\"> | string\n    name?: StringWithAggregatesFilter<\"discussionboard_post_tag\"> | string\n  }\n\n  export type discussionboard_post_attachmentWhereInput = {\n    AND?: discussionboard_post_attachmentWhereInput | discussionboard_post_attachmentWhereInput[]\n    OR?: discussionboard_post_attachmentWhereInput[]\n    NOT?: discussionboard_post_attachmentWhereInput | discussionboard_post_attachmentWhereInput[]\n    id?: UuidFilter<\"discussionboard_post_attachment\"> | string\n    post_id?: UuidFilter<\"discussionboard_post_attachment\"> | string\n    file_url?: StringFilter<\"discussionboard_post_attachment\"> | string\n    file_type?: StringFilter<\"discussionboard_post_attachment\"> | string\n    uploaded_at?: DateTimeFilter<\"discussionboard_post_attachment\"> | Date | string\n    post?: XOR<Discussionboard_postScalarRelationFilter, discussionboard_postWhereInput>\n  }\n\n  export type discussionboard_post_attachmentOrderByWithRelationInput = {\n    id?: SortOrder\n    post_id?: SortOrder\n    file_url?: SortOrder\n    file_type?: SortOrder\n    uploaded_at?: SortOrder\n    post?: discussionboard_postOrderByWithRelationInput\n  }\n\n  export type discussionboard_post_attachmentWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    post_id_file_url?: discussionboard_post_attachmentPost_idFile_urlCompoundUniqueInput\n    AND?: discussionboard_post_attachmentWhereInput | discussionboard_post_attachmentWhereInput[]\n    OR?: discussionboard_post_attachmentWhereInput[]\n    NOT?: discussionboard_post_attachmentWhereInput | discussionboard_post_attachmentWhereInput[]\n    post_id?: UuidFilter<\"discussionboard_post_attachment\"> | string\n    file_url?: StringFilter<\"discussionboard_post_attachment\"> | string\n    file_type?: StringFilter<\"discussionboard_post_attachment\"> | string\n    uploaded_at?: DateTimeFilter<\"discussionboard_post_attachment\"> | Date | string\n    post?: XOR<Discussionboard_postScalarRelationFilter, discussionboard_postWhereInput>\n  }, \"id\" | \"post_id_file_url\">\n\n  export type discussionboard_post_attachmentOrderByWithAggregationInput = {\n    id?: SortOrder\n    post_id?: SortOrder\n    file_url?: SortOrder\n    file_type?: SortOrder\n    uploaded_at?: SortOrder\n    _count?: discussionboard_post_attachmentCountOrderByAggregateInput\n    _max?: discussionboard_post_attachmentMaxOrderByAggregateInput\n    _min?: discussionboard_post_attachmentMinOrderByAggregateInput\n  }\n\n  export type discussionboard_post_attachmentScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_post_attachmentScalarWhereWithAggregatesInput | discussionboard_post_attachmentScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_post_attachmentScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_post_attachmentScalarWhereWithAggregatesInput | discussionboard_post_attachmentScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_post_attachment\"> | string\n    post_id?: UuidWithAggregatesFilter<\"discussionboard_post_attachment\"> | string\n    file_url?: StringWithAggregatesFilter<\"discussionboard_post_attachment\"> | string\n    file_type?: StringWithAggregatesFilter<\"discussionboard_post_attachment\"> | string\n    uploaded_at?: DateTimeWithAggregatesFilter<\"discussionboard_post_attachment\"> | Date | string\n  }\n\n  export type discussionboard_commentsWhereInput = {\n    AND?: discussionboard_commentsWhereInput | discussionboard_commentsWhereInput[]\n    OR?: discussionboard_commentsWhereInput[]\n    NOT?: discussionboard_commentsWhereInput | discussionboard_commentsWhereInput[]\n    id?: UuidFilter<\"discussionboard_comments\"> | string\n    post_id?: UuidFilter<\"discussionboard_comments\"> | string\n    author_id?: UuidFilter<\"discussionboard_comments\"> | string\n    parent_comment_id?: UuidNullableFilter<\"discussionboard_comments\"> | string | null\n    content?: StringFilter<\"discussionboard_comments\"> | string\n    is_edited?: BoolFilter<\"discussionboard_comments\"> | boolean\n    is_deleted?: BoolFilter<\"discussionboard_comments\"> | boolean\n    created_at?: DateTimeFilter<\"discussionboard_comments\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussionboard_comments\"> | Date | string\n    post?: XOR<Discussionboard_postScalarRelationFilter, discussionboard_postWhereInput>\n    author?: XOR<Discussionboard_userScalarRelationFilter, discussionboard_userWhereInput>\n    parent_comment?: XOR<Discussionboard_commentsNullableScalarRelationFilter, discussionboard_commentsWhereInput> | null\n    recursive?: Discussionboard_commentsListRelationFilter\n    discussionboard_likes?: Discussionboard_likesListRelationFilter\n    discussionboard_reports?: Discussionboard_reportsListRelationFilter\n    discussionboard_moderation_action?: Discussionboard_moderation_actionListRelationFilter\n    discussionboard_report_review?: Discussionboard_report_reviewListRelationFilter\n    discussionboard_warning?: Discussionboard_warningListRelationFilter\n    discussionboard_notification?: Discussionboard_notificationListRelationFilter\n  }\n\n  export type discussionboard_commentsOrderByWithRelationInput = {\n    id?: SortOrder\n    post_id?: SortOrder\n    author_id?: SortOrder\n    parent_comment_id?: SortOrderInput | SortOrder\n    content?: SortOrder\n    is_edited?: SortOrder\n    is_deleted?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    post?: discussionboard_postOrderByWithRelationInput\n    author?: discussionboard_userOrderByWithRelationInput\n    parent_comment?: discussionboard_commentsOrderByWithRelationInput\n    recursive?: discussionboard_commentsOrderByRelationAggregateInput\n    discussionboard_likes?: discussionboard_likesOrderByRelationAggregateInput\n    discussionboard_reports?: discussionboard_reportsOrderByRelationAggregateInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionOrderByRelationAggregateInput\n    discussionboard_report_review?: discussionboard_report_reviewOrderByRelationAggregateInput\n    discussionboard_warning?: discussionboard_warningOrderByRelationAggregateInput\n    discussionboard_notification?: discussionboard_notificationOrderByRelationAggregateInput\n  }\n\n  export type discussionboard_commentsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: discussionboard_commentsWhereInput | discussionboard_commentsWhereInput[]\n    OR?: discussionboard_commentsWhereInput[]\n    NOT?: discussionboard_commentsWhereInput | discussionboard_commentsWhereInput[]\n    post_id?: UuidFilter<\"discussionboard_comments\"> | string\n    author_id?: UuidFilter<\"discussionboard_comments\"> | string\n    parent_comment_id?: UuidNullableFilter<\"discussionboard_comments\"> | string | null\n    content?: StringFilter<\"discussionboard_comments\"> | string\n    is_edited?: BoolFilter<\"discussionboard_comments\"> | boolean\n    is_deleted?: BoolFilter<\"discussionboard_comments\"> | boolean\n    created_at?: DateTimeFilter<\"discussionboard_comments\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussionboard_comments\"> | Date | string\n    post?: XOR<Discussionboard_postScalarRelationFilter, discussionboard_postWhereInput>\n    author?: XOR<Discussionboard_userScalarRelationFilter, discussionboard_userWhereInput>\n    parent_comment?: XOR<Discussionboard_commentsNullableScalarRelationFilter, discussionboard_commentsWhereInput> | null\n    recursive?: Discussionboard_commentsListRelationFilter\n    discussionboard_likes?: Discussionboard_likesListRelationFilter\n    discussionboard_reports?: Discussionboard_reportsListRelationFilter\n    discussionboard_moderation_action?: Discussionboard_moderation_actionListRelationFilter\n    discussionboard_report_review?: Discussionboard_report_reviewListRelationFilter\n    discussionboard_warning?: Discussionboard_warningListRelationFilter\n    discussionboard_notification?: Discussionboard_notificationListRelationFilter\n  }, \"id\">\n\n  export type discussionboard_commentsOrderByWithAggregationInput = {\n    id?: SortOrder\n    post_id?: SortOrder\n    author_id?: SortOrder\n    parent_comment_id?: SortOrderInput | SortOrder\n    content?: SortOrder\n    is_edited?: SortOrder\n    is_deleted?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    _count?: discussionboard_commentsCountOrderByAggregateInput\n    _max?: discussionboard_commentsMaxOrderByAggregateInput\n    _min?: discussionboard_commentsMinOrderByAggregateInput\n  }\n\n  export type discussionboard_commentsScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_commentsScalarWhereWithAggregatesInput | discussionboard_commentsScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_commentsScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_commentsScalarWhereWithAggregatesInput | discussionboard_commentsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_comments\"> | string\n    post_id?: UuidWithAggregatesFilter<\"discussionboard_comments\"> | string\n    author_id?: UuidWithAggregatesFilter<\"discussionboard_comments\"> | string\n    parent_comment_id?: UuidNullableWithAggregatesFilter<\"discussionboard_comments\"> | string | null\n    content?: StringWithAggregatesFilter<\"discussionboard_comments\"> | string\n    is_edited?: BoolWithAggregatesFilter<\"discussionboard_comments\"> | boolean\n    is_deleted?: BoolWithAggregatesFilter<\"discussionboard_comments\"> | boolean\n    created_at?: DateTimeWithAggregatesFilter<\"discussionboard_comments\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"discussionboard_comments\"> | Date | string\n  }\n\n  export type discussionboard_likesWhereInput = {\n    AND?: discussionboard_likesWhereInput | discussionboard_likesWhereInput[]\n    OR?: discussionboard_likesWhereInput[]\n    NOT?: discussionboard_likesWhereInput | discussionboard_likesWhereInput[]\n    id?: UuidFilter<\"discussionboard_likes\"> | string\n    user_id?: UuidFilter<\"discussionboard_likes\"> | string\n    post_id?: UuidNullableFilter<\"discussionboard_likes\"> | string | null\n    comment_id?: UuidNullableFilter<\"discussionboard_likes\"> | string | null\n    created_at?: DateTimeFilter<\"discussionboard_likes\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"discussionboard_likes\"> | Date | string | null\n    user?: XOR<Discussionboard_userScalarRelationFilter, discussionboard_userWhereInput>\n    post?: XOR<Discussionboard_postNullableScalarRelationFilter, discussionboard_postWhereInput> | null\n    comment?: XOR<Discussionboard_commentsNullableScalarRelationFilter, discussionboard_commentsWhereInput> | null\n  }\n\n  export type discussionboard_likesOrderByWithRelationInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    post_id?: SortOrderInput | SortOrder\n    comment_id?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    user?: discussionboard_userOrderByWithRelationInput\n    post?: discussionboard_postOrderByWithRelationInput\n    comment?: discussionboard_commentsOrderByWithRelationInput\n  }\n\n  export type discussionboard_likesWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    user_id_post_id?: discussionboard_likesUser_idPost_idCompoundUniqueInput\n    user_id_comment_id?: discussionboard_likesUser_idComment_idCompoundUniqueInput\n    AND?: discussionboard_likesWhereInput | discussionboard_likesWhereInput[]\n    OR?: discussionboard_likesWhereInput[]\n    NOT?: discussionboard_likesWhereInput | discussionboard_likesWhereInput[]\n    user_id?: UuidFilter<\"discussionboard_likes\"> | string\n    post_id?: UuidNullableFilter<\"discussionboard_likes\"> | string | null\n    comment_id?: UuidNullableFilter<\"discussionboard_likes\"> | string | null\n    created_at?: DateTimeFilter<\"discussionboard_likes\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"discussionboard_likes\"> | Date | string | null\n    user?: XOR<Discussionboard_userScalarRelationFilter, discussionboard_userWhereInput>\n    post?: XOR<Discussionboard_postNullableScalarRelationFilter, discussionboard_postWhereInput> | null\n    comment?: XOR<Discussionboard_commentsNullableScalarRelationFilter, discussionboard_commentsWhereInput> | null\n  }, \"id\" | \"user_id_post_id\" | \"user_id_comment_id\">\n\n  export type discussionboard_likesOrderByWithAggregationInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    post_id?: SortOrderInput | SortOrder\n    comment_id?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    _count?: discussionboard_likesCountOrderByAggregateInput\n    _max?: discussionboard_likesMaxOrderByAggregateInput\n    _min?: discussionboard_likesMinOrderByAggregateInput\n  }\n\n  export type discussionboard_likesScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_likesScalarWhereWithAggregatesInput | discussionboard_likesScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_likesScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_likesScalarWhereWithAggregatesInput | discussionboard_likesScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_likes\"> | string\n    user_id?: UuidWithAggregatesFilter<\"discussionboard_likes\"> | string\n    post_id?: UuidNullableWithAggregatesFilter<\"discussionboard_likes\"> | string | null\n    comment_id?: UuidNullableWithAggregatesFilter<\"discussionboard_likes\"> | string | null\n    created_at?: DateTimeWithAggregatesFilter<\"discussionboard_likes\"> | Date | string\n    deleted_at?: DateTimeNullableWithAggregatesFilter<\"discussionboard_likes\"> | Date | string | null\n  }\n\n  export type discussionboard_reportsWhereInput = {\n    AND?: discussionboard_reportsWhereInput | discussionboard_reportsWhereInput[]\n    OR?: discussionboard_reportsWhereInput[]\n    NOT?: discussionboard_reportsWhereInput | discussionboard_reportsWhereInput[]\n    id?: UuidFilter<\"discussionboard_reports\"> | string\n    user_id?: UuidFilter<\"discussionboard_reports\"> | string\n    post_id?: UuidNullableFilter<\"discussionboard_reports\"> | string | null\n    comment_id?: UuidNullableFilter<\"discussionboard_reports\"> | string | null\n    reason_code?: StringFilter<\"discussionboard_reports\"> | string\n    reason_details?: StringNullableFilter<\"discussionboard_reports\"> | string | null\n    created_at?: DateTimeFilter<\"discussionboard_reports\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"discussionboard_reports\"> | Date | string | null\n    user?: XOR<Discussionboard_userScalarRelationFilter, discussionboard_userWhereInput>\n    post?: XOR<Discussionboard_postNullableScalarRelationFilter, discussionboard_postWhereInput> | null\n    comment?: XOR<Discussionboard_commentsNullableScalarRelationFilter, discussionboard_commentsWhereInput> | null\n    discussionboard_report_review?: Discussionboard_report_reviewListRelationFilter\n  }\n\n  export type discussionboard_reportsOrderByWithRelationInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    post_id?: SortOrderInput | SortOrder\n    comment_id?: SortOrderInput | SortOrder\n    reason_code?: SortOrder\n    reason_details?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    user?: discussionboard_userOrderByWithRelationInput\n    post?: discussionboard_postOrderByWithRelationInput\n    comment?: discussionboard_commentsOrderByWithRelationInput\n    discussionboard_report_review?: discussionboard_report_reviewOrderByRelationAggregateInput\n  }\n\n  export type discussionboard_reportsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    user_id_post_id?: discussionboard_reportsUser_idPost_idCompoundUniqueInput\n    user_id_comment_id?: discussionboard_reportsUser_idComment_idCompoundUniqueInput\n    AND?: discussionboard_reportsWhereInput | discussionboard_reportsWhereInput[]\n    OR?: discussionboard_reportsWhereInput[]\n    NOT?: discussionboard_reportsWhereInput | discussionboard_reportsWhereInput[]\n    user_id?: UuidFilter<\"discussionboard_reports\"> | string\n    post_id?: UuidNullableFilter<\"discussionboard_reports\"> | string | null\n    comment_id?: UuidNullableFilter<\"discussionboard_reports\"> | string | null\n    reason_code?: StringFilter<\"discussionboard_reports\"> | string\n    reason_details?: StringNullableFilter<\"discussionboard_reports\"> | string | null\n    created_at?: DateTimeFilter<\"discussionboard_reports\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"discussionboard_reports\"> | Date | string | null\n    user?: XOR<Discussionboard_userScalarRelationFilter, discussionboard_userWhereInput>\n    post?: XOR<Discussionboard_postNullableScalarRelationFilter, discussionboard_postWhereInput> | null\n    comment?: XOR<Discussionboard_commentsNullableScalarRelationFilter, discussionboard_commentsWhereInput> | null\n    discussionboard_report_review?: Discussionboard_report_reviewListRelationFilter\n  }, \"id\" | \"user_id_post_id\" | \"user_id_comment_id\">\n\n  export type discussionboard_reportsOrderByWithAggregationInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    post_id?: SortOrderInput | SortOrder\n    comment_id?: SortOrderInput | SortOrder\n    reason_code?: SortOrder\n    reason_details?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    _count?: discussionboard_reportsCountOrderByAggregateInput\n    _max?: discussionboard_reportsMaxOrderByAggregateInput\n    _min?: discussionboard_reportsMinOrderByAggregateInput\n  }\n\n  export type discussionboard_reportsScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_reportsScalarWhereWithAggregatesInput | discussionboard_reportsScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_reportsScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_reportsScalarWhereWithAggregatesInput | discussionboard_reportsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_reports\"> | string\n    user_id?: UuidWithAggregatesFilter<\"discussionboard_reports\"> | string\n    post_id?: UuidNullableWithAggregatesFilter<\"discussionboard_reports\"> | string | null\n    comment_id?: UuidNullableWithAggregatesFilter<\"discussionboard_reports\"> | string | null\n    reason_code?: StringWithAggregatesFilter<\"discussionboard_reports\"> | string\n    reason_details?: StringNullableWithAggregatesFilter<\"discussionboard_reports\"> | string | null\n    created_at?: DateTimeWithAggregatesFilter<\"discussionboard_reports\"> | Date | string\n    deleted_at?: DateTimeNullableWithAggregatesFilter<\"discussionboard_reports\"> | Date | string | null\n  }\n\n  export type discussionboard_moderation_actionWhereInput = {\n    AND?: discussionboard_moderation_actionWhereInput | discussionboard_moderation_actionWhereInput[]\n    OR?: discussionboard_moderation_actionWhereInput[]\n    NOT?: discussionboard_moderation_actionWhereInput | discussionboard_moderation_actionWhereInput[]\n    id?: UuidFilter<\"discussionboard_moderation_action\"> | string\n    actor_id?: UuidFilter<\"discussionboard_moderation_action\"> | string\n    target_user_id?: UuidFilter<\"discussionboard_moderation_action\"> | string\n    post_id?: UuidNullableFilter<\"discussionboard_moderation_action\"> | string | null\n    comment_id?: UuidNullableFilter<\"discussionboard_moderation_action\"> | string | null\n    action_type?: StringFilter<\"discussionboard_moderation_action\"> | string\n    reason?: StringFilter<\"discussionboard_moderation_action\"> | string\n    created_at?: DateTimeFilter<\"discussionboard_moderation_action\"> | Date | string\n    actor?: XOR<Discussionboard_userScalarRelationFilter, discussionboard_userWhereInput>\n    target_user?: XOR<Discussionboard_userScalarRelationFilter, discussionboard_userWhereInput>\n    moderated_post?: XOR<Discussionboard_postNullableScalarRelationFilter, discussionboard_postWhereInput> | null\n    moderated_comment?: XOR<Discussionboard_commentsNullableScalarRelationFilter, discussionboard_commentsWhereInput> | null\n  }\n\n  export type discussionboard_moderation_actionOrderByWithRelationInput = {\n    id?: SortOrder\n    actor_id?: SortOrder\n    target_user_id?: SortOrder\n    post_id?: SortOrderInput | SortOrder\n    comment_id?: SortOrderInput | SortOrder\n    action_type?: SortOrder\n    reason?: SortOrder\n    created_at?: SortOrder\n    actor?: discussionboard_userOrderByWithRelationInput\n    target_user?: discussionboard_userOrderByWithRelationInput\n    moderated_post?: discussionboard_postOrderByWithRelationInput\n    moderated_comment?: discussionboard_commentsOrderByWithRelationInput\n  }\n\n  export type discussionboard_moderation_actionWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: discussionboard_moderation_actionWhereInput | discussionboard_moderation_actionWhereInput[]\n    OR?: discussionboard_moderation_actionWhereInput[]\n    NOT?: discussionboard_moderation_actionWhereInput | discussionboard_moderation_actionWhereInput[]\n    actor_id?: UuidFilter<\"discussionboard_moderation_action\"> | string\n    target_user_id?: UuidFilter<\"discussionboard_moderation_action\"> | string\n    post_id?: UuidNullableFilter<\"discussionboard_moderation_action\"> | string | null\n    comment_id?: UuidNullableFilter<\"discussionboard_moderation_action\"> | string | null\n    action_type?: StringFilter<\"discussionboard_moderation_action\"> | string\n    reason?: StringFilter<\"discussionboard_moderation_action\"> | string\n    created_at?: DateTimeFilter<\"discussionboard_moderation_action\"> | Date | string\n    actor?: XOR<Discussionboard_userScalarRelationFilter, discussionboard_userWhereInput>\n    target_user?: XOR<Discussionboard_userScalarRelationFilter, discussionboard_userWhereInput>\n    moderated_post?: XOR<Discussionboard_postNullableScalarRelationFilter, discussionboard_postWhereInput> | null\n    moderated_comment?: XOR<Discussionboard_commentsNullableScalarRelationFilter, discussionboard_commentsWhereInput> | null\n  }, \"id\">\n\n  export type discussionboard_moderation_actionOrderByWithAggregationInput = {\n    id?: SortOrder\n    actor_id?: SortOrder\n    target_user_id?: SortOrder\n    post_id?: SortOrderInput | SortOrder\n    comment_id?: SortOrderInput | SortOrder\n    action_type?: SortOrder\n    reason?: SortOrder\n    created_at?: SortOrder\n    _count?: discussionboard_moderation_actionCountOrderByAggregateInput\n    _max?: discussionboard_moderation_actionMaxOrderByAggregateInput\n    _min?: discussionboard_moderation_actionMinOrderByAggregateInput\n  }\n\n  export type discussionboard_moderation_actionScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_moderation_actionScalarWhereWithAggregatesInput | discussionboard_moderation_actionScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_moderation_actionScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_moderation_actionScalarWhereWithAggregatesInput | discussionboard_moderation_actionScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_moderation_action\"> | string\n    actor_id?: UuidWithAggregatesFilter<\"discussionboard_moderation_action\"> | string\n    target_user_id?: UuidWithAggregatesFilter<\"discussionboard_moderation_action\"> | string\n    post_id?: UuidNullableWithAggregatesFilter<\"discussionboard_moderation_action\"> | string | null\n    comment_id?: UuidNullableWithAggregatesFilter<\"discussionboard_moderation_action\"> | string | null\n    action_type?: StringWithAggregatesFilter<\"discussionboard_moderation_action\"> | string\n    reason?: StringWithAggregatesFilter<\"discussionboard_moderation_action\"> | string\n    created_at?: DateTimeWithAggregatesFilter<\"discussionboard_moderation_action\"> | Date | string\n  }\n\n  export type discussionboard_report_reviewWhereInput = {\n    AND?: discussionboard_report_reviewWhereInput | discussionboard_report_reviewWhereInput[]\n    OR?: discussionboard_report_reviewWhereInput[]\n    NOT?: discussionboard_report_reviewWhereInput | discussionboard_report_reviewWhereInput[]\n    id?: UuidFilter<\"discussionboard_report_review\"> | string\n    report_id?: UuidFilter<\"discussionboard_report_review\"> | string\n    reviewer_id?: UuidFilter<\"discussionboard_report_review\"> | string\n    post_id?: UuidNullableFilter<\"discussionboard_report_review\"> | string | null\n    comment_id?: UuidNullableFilter<\"discussionboard_report_review\"> | string | null\n    review_status?: StringFilter<\"discussionboard_report_review\"> | string\n    moderator_comment?: StringNullableFilter<\"discussionboard_report_review\"> | string | null\n    reviewed_at?: DateTimeFilter<\"discussionboard_report_review\"> | Date | string\n    report?: XOR<Discussionboard_reportsScalarRelationFilter, discussionboard_reportsWhereInput>\n    reviewer?: XOR<Discussionboard_userScalarRelationFilter, discussionboard_userWhereInput>\n    reviewed_post?: XOR<Discussionboard_postNullableScalarRelationFilter, discussionboard_postWhereInput> | null\n    reviewed_comment?: XOR<Discussionboard_commentsNullableScalarRelationFilter, discussionboard_commentsWhereInput> | null\n  }\n\n  export type discussionboard_report_reviewOrderByWithRelationInput = {\n    id?: SortOrder\n    report_id?: SortOrder\n    reviewer_id?: SortOrder\n    post_id?: SortOrderInput | SortOrder\n    comment_id?: SortOrderInput | SortOrder\n    review_status?: SortOrder\n    moderator_comment?: SortOrderInput | SortOrder\n    reviewed_at?: SortOrder\n    report?: discussionboard_reportsOrderByWithRelationInput\n    reviewer?: discussionboard_userOrderByWithRelationInput\n    reviewed_post?: discussionboard_postOrderByWithRelationInput\n    reviewed_comment?: discussionboard_commentsOrderByWithRelationInput\n  }\n\n  export type discussionboard_report_reviewWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    report_id?: string\n    AND?: discussionboard_report_reviewWhereInput | discussionboard_report_reviewWhereInput[]\n    OR?: discussionboard_report_reviewWhereInput[]\n    NOT?: discussionboard_report_reviewWhereInput | discussionboard_report_reviewWhereInput[]\n    reviewer_id?: UuidFilter<\"discussionboard_report_review\"> | string\n    post_id?: UuidNullableFilter<\"discussionboard_report_review\"> | string | null\n    comment_id?: UuidNullableFilter<\"discussionboard_report_review\"> | string | null\n    review_status?: StringFilter<\"discussionboard_report_review\"> | string\n    moderator_comment?: StringNullableFilter<\"discussionboard_report_review\"> | string | null\n    reviewed_at?: DateTimeFilter<\"discussionboard_report_review\"> | Date | string\n    report?: XOR<Discussionboard_reportsScalarRelationFilter, discussionboard_reportsWhereInput>\n    reviewer?: XOR<Discussionboard_userScalarRelationFilter, discussionboard_userWhereInput>\n    reviewed_post?: XOR<Discussionboard_postNullableScalarRelationFilter, discussionboard_postWhereInput> | null\n    reviewed_comment?: XOR<Discussionboard_commentsNullableScalarRelationFilter, discussionboard_commentsWhereInput> | null\n  }, \"id\" | \"report_id\">\n\n  export type discussionboard_report_reviewOrderByWithAggregationInput = {\n    id?: SortOrder\n    report_id?: SortOrder\n    reviewer_id?: SortOrder\n    post_id?: SortOrderInput | SortOrder\n    comment_id?: SortOrderInput | SortOrder\n    review_status?: SortOrder\n    moderator_comment?: SortOrderInput | SortOrder\n    reviewed_at?: SortOrder\n    _count?: discussionboard_report_reviewCountOrderByAggregateInput\n    _max?: discussionboard_report_reviewMaxOrderByAggregateInput\n    _min?: discussionboard_report_reviewMinOrderByAggregateInput\n  }\n\n  export type discussionboard_report_reviewScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_report_reviewScalarWhereWithAggregatesInput | discussionboard_report_reviewScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_report_reviewScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_report_reviewScalarWhereWithAggregatesInput | discussionboard_report_reviewScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_report_review\"> | string\n    report_id?: UuidWithAggregatesFilter<\"discussionboard_report_review\"> | string\n    reviewer_id?: UuidWithAggregatesFilter<\"discussionboard_report_review\"> | string\n    post_id?: UuidNullableWithAggregatesFilter<\"discussionboard_report_review\"> | string | null\n    comment_id?: UuidNullableWithAggregatesFilter<\"discussionboard_report_review\"> | string | null\n    review_status?: StringWithAggregatesFilter<\"discussionboard_report_review\"> | string\n    moderator_comment?: StringNullableWithAggregatesFilter<\"discussionboard_report_review\"> | string | null\n    reviewed_at?: DateTimeWithAggregatesFilter<\"discussionboard_report_review\"> | Date | string\n  }\n\n  export type discussionboard_warningWhereInput = {\n    AND?: discussionboard_warningWhereInput | discussionboard_warningWhereInput[]\n    OR?: discussionboard_warningWhereInput[]\n    NOT?: discussionboard_warningWhereInput | discussionboard_warningWhereInput[]\n    id?: UuidFilter<\"discussionboard_warning\"> | string\n    issued_by_id?: UuidFilter<\"discussionboard_warning\"> | string\n    issued_to_id?: UuidFilter<\"discussionboard_warning\"> | string\n    post_id?: UuidNullableFilter<\"discussionboard_warning\"> | string | null\n    comment_id?: UuidNullableFilter<\"discussionboard_warning\"> | string | null\n    warning_type?: StringFilter<\"discussionboard_warning\"> | string\n    message?: StringFilter<\"discussionboard_warning\"> | string\n    issued_at?: DateTimeFilter<\"discussionboard_warning\"> | Date | string\n    issuer?: XOR<Discussionboard_userScalarRelationFilter, discussionboard_userWhereInput>\n    recipient?: XOR<Discussionboard_userScalarRelationFilter, discussionboard_userWhereInput>\n    warning_post?: XOR<Discussionboard_postNullableScalarRelationFilter, discussionboard_postWhereInput> | null\n    warning_comment?: XOR<Discussionboard_commentsNullableScalarRelationFilter, discussionboard_commentsWhereInput> | null\n    discussionboard_ban?: Discussionboard_banListRelationFilter\n  }\n\n  export type discussionboard_warningOrderByWithRelationInput = {\n    id?: SortOrder\n    issued_by_id?: SortOrder\n    issued_to_id?: SortOrder\n    post_id?: SortOrderInput | SortOrder\n    comment_id?: SortOrderInput | SortOrder\n    warning_type?: SortOrder\n    message?: SortOrder\n    issued_at?: SortOrder\n    issuer?: discussionboard_userOrderByWithRelationInput\n    recipient?: discussionboard_userOrderByWithRelationInput\n    warning_post?: discussionboard_postOrderByWithRelationInput\n    warning_comment?: discussionboard_commentsOrderByWithRelationInput\n    discussionboard_ban?: discussionboard_banOrderByRelationAggregateInput\n  }\n\n  export type discussionboard_warningWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: discussionboard_warningWhereInput | discussionboard_warningWhereInput[]\n    OR?: discussionboard_warningWhereInput[]\n    NOT?: discussionboard_warningWhereInput | discussionboard_warningWhereInput[]\n    issued_by_id?: UuidFilter<\"discussionboard_warning\"> | string\n    issued_to_id?: UuidFilter<\"discussionboard_warning\"> | string\n    post_id?: UuidNullableFilter<\"discussionboard_warning\"> | string | null\n    comment_id?: UuidNullableFilter<\"discussionboard_warning\"> | string | null\n    warning_type?: StringFilter<\"discussionboard_warning\"> | string\n    message?: StringFilter<\"discussionboard_warning\"> | string\n    issued_at?: DateTimeFilter<\"discussionboard_warning\"> | Date | string\n    issuer?: XOR<Discussionboard_userScalarRelationFilter, discussionboard_userWhereInput>\n    recipient?: XOR<Discussionboard_userScalarRelationFilter, discussionboard_userWhereInput>\n    warning_post?: XOR<Discussionboard_postNullableScalarRelationFilter, discussionboard_postWhereInput> | null\n    warning_comment?: XOR<Discussionboard_commentsNullableScalarRelationFilter, discussionboard_commentsWhereInput> | null\n    discussionboard_ban?: Discussionboard_banListRelationFilter\n  }, \"id\">\n\n  export type discussionboard_warningOrderByWithAggregationInput = {\n    id?: SortOrder\n    issued_by_id?: SortOrder\n    issued_to_id?: SortOrder\n    post_id?: SortOrderInput | SortOrder\n    comment_id?: SortOrderInput | SortOrder\n    warning_type?: SortOrder\n    message?: SortOrder\n    issued_at?: SortOrder\n    _count?: discussionboard_warningCountOrderByAggregateInput\n    _max?: discussionboard_warningMaxOrderByAggregateInput\n    _min?: discussionboard_warningMinOrderByAggregateInput\n  }\n\n  export type discussionboard_warningScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_warningScalarWhereWithAggregatesInput | discussionboard_warningScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_warningScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_warningScalarWhereWithAggregatesInput | discussionboard_warningScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_warning\"> | string\n    issued_by_id?: UuidWithAggregatesFilter<\"discussionboard_warning\"> | string\n    issued_to_id?: UuidWithAggregatesFilter<\"discussionboard_warning\"> | string\n    post_id?: UuidNullableWithAggregatesFilter<\"discussionboard_warning\"> | string | null\n    comment_id?: UuidNullableWithAggregatesFilter<\"discussionboard_warning\"> | string | null\n    warning_type?: StringWithAggregatesFilter<\"discussionboard_warning\"> | string\n    message?: StringWithAggregatesFilter<\"discussionboard_warning\"> | string\n    issued_at?: DateTimeWithAggregatesFilter<\"discussionboard_warning\"> | Date | string\n  }\n\n  export type discussionboard_banWhereInput = {\n    AND?: discussionboard_banWhereInput | discussionboard_banWhereInput[]\n    OR?: discussionboard_banWhereInput[]\n    NOT?: discussionboard_banWhereInput | discussionboard_banWhereInput[]\n    id?: UuidFilter<\"discussionboard_ban\"> | string\n    banned_user_id?: UuidFilter<\"discussionboard_ban\"> | string\n    banned_by_id?: UuidFilter<\"discussionboard_ban\"> | string\n    warning_id?: UuidNullableFilter<\"discussionboard_ban\"> | string | null\n    ban_type?: StringFilter<\"discussionboard_ban\"> | string\n    reason?: StringFilter<\"discussionboard_ban\"> | string\n    issued_at?: DateTimeFilter<\"discussionboard_ban\"> | Date | string\n    expires_at?: DateTimeNullableFilter<\"discussionboard_ban\"> | Date | string | null\n    banned_user?: XOR<Discussionboard_userScalarRelationFilter, discussionboard_userWhereInput>\n    ban_actor?: XOR<Discussionboard_userScalarRelationFilter, discussionboard_userWhereInput>\n    related_warning?: XOR<Discussionboard_warningNullableScalarRelationFilter, discussionboard_warningWhereInput> | null\n  }\n\n  export type discussionboard_banOrderByWithRelationInput = {\n    id?: SortOrder\n    banned_user_id?: SortOrder\n    banned_by_id?: SortOrder\n    warning_id?: SortOrderInput | SortOrder\n    ban_type?: SortOrder\n    reason?: SortOrder\n    issued_at?: SortOrder\n    expires_at?: SortOrderInput | SortOrder\n    banned_user?: discussionboard_userOrderByWithRelationInput\n    ban_actor?: discussionboard_userOrderByWithRelationInput\n    related_warning?: discussionboard_warningOrderByWithRelationInput\n  }\n\n  export type discussionboard_banWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: discussionboard_banWhereInput | discussionboard_banWhereInput[]\n    OR?: discussionboard_banWhereInput[]\n    NOT?: discussionboard_banWhereInput | discussionboard_banWhereInput[]\n    banned_user_id?: UuidFilter<\"discussionboard_ban\"> | string\n    banned_by_id?: UuidFilter<\"discussionboard_ban\"> | string\n    warning_id?: UuidNullableFilter<\"discussionboard_ban\"> | string | null\n    ban_type?: StringFilter<\"discussionboard_ban\"> | string\n    reason?: StringFilter<\"discussionboard_ban\"> | string\n    issued_at?: DateTimeFilter<\"discussionboard_ban\"> | Date | string\n    expires_at?: DateTimeNullableFilter<\"discussionboard_ban\"> | Date | string | null\n    banned_user?: XOR<Discussionboard_userScalarRelationFilter, discussionboard_userWhereInput>\n    ban_actor?: XOR<Discussionboard_userScalarRelationFilter, discussionboard_userWhereInput>\n    related_warning?: XOR<Discussionboard_warningNullableScalarRelationFilter, discussionboard_warningWhereInput> | null\n  }, \"id\">\n\n  export type discussionboard_banOrderByWithAggregationInput = {\n    id?: SortOrder\n    banned_user_id?: SortOrder\n    banned_by_id?: SortOrder\n    warning_id?: SortOrderInput | SortOrder\n    ban_type?: SortOrder\n    reason?: SortOrder\n    issued_at?: SortOrder\n    expires_at?: SortOrderInput | SortOrder\n    _count?: discussionboard_banCountOrderByAggregateInput\n    _max?: discussionboard_banMaxOrderByAggregateInput\n    _min?: discussionboard_banMinOrderByAggregateInput\n  }\n\n  export type discussionboard_banScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_banScalarWhereWithAggregatesInput | discussionboard_banScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_banScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_banScalarWhereWithAggregatesInput | discussionboard_banScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_ban\"> | string\n    banned_user_id?: UuidWithAggregatesFilter<\"discussionboard_ban\"> | string\n    banned_by_id?: UuidWithAggregatesFilter<\"discussionboard_ban\"> | string\n    warning_id?: UuidNullableWithAggregatesFilter<\"discussionboard_ban\"> | string | null\n    ban_type?: StringWithAggregatesFilter<\"discussionboard_ban\"> | string\n    reason?: StringWithAggregatesFilter<\"discussionboard_ban\"> | string\n    issued_at?: DateTimeWithAggregatesFilter<\"discussionboard_ban\"> | Date | string\n    expires_at?: DateTimeNullableWithAggregatesFilter<\"discussionboard_ban\"> | Date | string | null\n  }\n\n  export type discussionboard_notificationWhereInput = {\n    AND?: discussionboard_notificationWhereInput | discussionboard_notificationWhereInput[]\n    OR?: discussionboard_notificationWhereInput[]\n    NOT?: discussionboard_notificationWhereInput | discussionboard_notificationWhereInput[]\n    id?: UuidFilter<\"discussionboard_notification\"> | string\n    recipient_user_id?: UuidFilter<\"discussionboard_notification\"> | string\n    related_post_id?: UuidNullableFilter<\"discussionboard_notification\"> | string | null\n    related_comment_id?: UuidNullableFilter<\"discussionboard_notification\"> | string | null\n    actor_user_id?: UuidNullableFilter<\"discussionboard_notification\"> | string | null\n    type?: StringFilter<\"discussionboard_notification\"> | string\n    message?: StringFilter<\"discussionboard_notification\"> | string\n    is_read?: BoolFilter<\"discussionboard_notification\"> | boolean\n    created_at?: DateTimeFilter<\"discussionboard_notification\"> | Date | string\n    recipient_user?: XOR<Discussionboard_userScalarRelationFilter, discussionboard_userWhereInput>\n    related_post?: XOR<Discussionboard_postNullableScalarRelationFilter, discussionboard_postWhereInput> | null\n    related_comment?: XOR<Discussionboard_commentsNullableScalarRelationFilter, discussionboard_commentsWhereInput> | null\n    actor_user?: XOR<Discussionboard_userNullableScalarRelationFilter, discussionboard_userWhereInput> | null\n  }\n\n  export type discussionboard_notificationOrderByWithRelationInput = {\n    id?: SortOrder\n    recipient_user_id?: SortOrder\n    related_post_id?: SortOrderInput | SortOrder\n    related_comment_id?: SortOrderInput | SortOrder\n    actor_user_id?: SortOrderInput | SortOrder\n    type?: SortOrder\n    message?: SortOrder\n    is_read?: SortOrder\n    created_at?: SortOrder\n    recipient_user?: discussionboard_userOrderByWithRelationInput\n    related_post?: discussionboard_postOrderByWithRelationInput\n    related_comment?: discussionboard_commentsOrderByWithRelationInput\n    actor_user?: discussionboard_userOrderByWithRelationInput\n  }\n\n  export type discussionboard_notificationWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    recipient_user_id_type_related_post_id_related_comment_id_actor_user_id_created_at?: discussionboard_notificationRecipient_user_idTypeRelated_post_idRelated_comment_idActor_user_idCreated_atCompoundUniqueInput\n    AND?: discussionboard_notificationWhereInput | discussionboard_notificationWhereInput[]\n    OR?: discussionboard_notificationWhereInput[]\n    NOT?: discussionboard_notificationWhereInput | discussionboard_notificationWhereInput[]\n    recipient_user_id?: UuidFilter<\"discussionboard_notification\"> | string\n    related_post_id?: UuidNullableFilter<\"discussionboard_notification\"> | string | null\n    related_comment_id?: UuidNullableFilter<\"discussionboard_notification\"> | string | null\n    actor_user_id?: UuidNullableFilter<\"discussionboard_notification\"> | string | null\n    type?: StringFilter<\"discussionboard_notification\"> | string\n    message?: StringFilter<\"discussionboard_notification\"> | string\n    is_read?: BoolFilter<\"discussionboard_notification\"> | boolean\n    created_at?: DateTimeFilter<\"discussionboard_notification\"> | Date | string\n    recipient_user?: XOR<Discussionboard_userScalarRelationFilter, discussionboard_userWhereInput>\n    related_post?: XOR<Discussionboard_postNullableScalarRelationFilter, discussionboard_postWhereInput> | null\n    related_comment?: XOR<Discussionboard_commentsNullableScalarRelationFilter, discussionboard_commentsWhereInput> | null\n    actor_user?: XOR<Discussionboard_userNullableScalarRelationFilter, discussionboard_userWhereInput> | null\n  }, \"id\" | \"recipient_user_id_type_related_post_id_related_comment_id_actor_user_id_created_at\">\n\n  export type discussionboard_notificationOrderByWithAggregationInput = {\n    id?: SortOrder\n    recipient_user_id?: SortOrder\n    related_post_id?: SortOrderInput | SortOrder\n    related_comment_id?: SortOrderInput | SortOrder\n    actor_user_id?: SortOrderInput | SortOrder\n    type?: SortOrder\n    message?: SortOrder\n    is_read?: SortOrder\n    created_at?: SortOrder\n    _count?: discussionboard_notificationCountOrderByAggregateInput\n    _max?: discussionboard_notificationMaxOrderByAggregateInput\n    _min?: discussionboard_notificationMinOrderByAggregateInput\n  }\n\n  export type discussionboard_notificationScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_notificationScalarWhereWithAggregatesInput | discussionboard_notificationScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_notificationScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_notificationScalarWhereWithAggregatesInput | discussionboard_notificationScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_notification\"> | string\n    recipient_user_id?: UuidWithAggregatesFilter<\"discussionboard_notification\"> | string\n    related_post_id?: UuidNullableWithAggregatesFilter<\"discussionboard_notification\"> | string | null\n    related_comment_id?: UuidNullableWithAggregatesFilter<\"discussionboard_notification\"> | string | null\n    actor_user_id?: UuidNullableWithAggregatesFilter<\"discussionboard_notification\"> | string | null\n    type?: StringWithAggregatesFilter<\"discussionboard_notification\"> | string\n    message?: StringWithAggregatesFilter<\"discussionboard_notification\"> | string\n    is_read?: BoolWithAggregatesFilter<\"discussionboard_notification\"> | boolean\n    created_at?: DateTimeWithAggregatesFilter<\"discussionboard_notification\"> | Date | string\n  }\n\n  export type discussionboard_notification_preferenceWhereInput = {\n    AND?: discussionboard_notification_preferenceWhereInput | discussionboard_notification_preferenceWhereInput[]\n    OR?: discussionboard_notification_preferenceWhereInput[]\n    NOT?: discussionboard_notification_preferenceWhereInput | discussionboard_notification_preferenceWhereInput[]\n    id?: UuidFilter<\"discussionboard_notification_preference\"> | string\n    user_id?: UuidFilter<\"discussionboard_notification_preference\"> | string\n    notify_reply?: BoolFilter<\"discussionboard_notification_preference\"> | boolean\n    notify_like?: BoolFilter<\"discussionboard_notification_preference\"> | boolean\n    notify_moderator_action?: BoolFilter<\"discussionboard_notification_preference\"> | boolean\n    notify_system_message?: BoolFilter<\"discussionboard_notification_preference\"> | boolean\n    user?: XOR<Discussionboard_userScalarRelationFilter, discussionboard_userWhereInput>\n  }\n\n  export type discussionboard_notification_preferenceOrderByWithRelationInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    notify_reply?: SortOrder\n    notify_like?: SortOrder\n    notify_moderator_action?: SortOrder\n    notify_system_message?: SortOrder\n    user?: discussionboard_userOrderByWithRelationInput\n  }\n\n  export type discussionboard_notification_preferenceWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    user_id?: string\n    AND?: discussionboard_notification_preferenceWhereInput | discussionboard_notification_preferenceWhereInput[]\n    OR?: discussionboard_notification_preferenceWhereInput[]\n    NOT?: discussionboard_notification_preferenceWhereInput | discussionboard_notification_preferenceWhereInput[]\n    notify_reply?: BoolFilter<\"discussionboard_notification_preference\"> | boolean\n    notify_like?: BoolFilter<\"discussionboard_notification_preference\"> | boolean\n    notify_moderator_action?: BoolFilter<\"discussionboard_notification_preference\"> | boolean\n    notify_system_message?: BoolFilter<\"discussionboard_notification_preference\"> | boolean\n    user?: XOR<Discussionboard_userScalarRelationFilter, discussionboard_userWhereInput>\n  }, \"id\" | \"user_id\">\n\n  export type discussionboard_notification_preferenceOrderByWithAggregationInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    notify_reply?: SortOrder\n    notify_like?: SortOrder\n    notify_moderator_action?: SortOrder\n    notify_system_message?: SortOrder\n    _count?: discussionboard_notification_preferenceCountOrderByAggregateInput\n    _max?: discussionboard_notification_preferenceMaxOrderByAggregateInput\n    _min?: discussionboard_notification_preferenceMinOrderByAggregateInput\n  }\n\n  export type discussionboard_notification_preferenceScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_notification_preferenceScalarWhereWithAggregatesInput | discussionboard_notification_preferenceScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_notification_preferenceScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_notification_preferenceScalarWhereWithAggregatesInput | discussionboard_notification_preferenceScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_notification_preference\"> | string\n    user_id?: UuidWithAggregatesFilter<\"discussionboard_notification_preference\"> | string\n    notify_reply?: BoolWithAggregatesFilter<\"discussionboard_notification_preference\"> | boolean\n    notify_like?: BoolWithAggregatesFilter<\"discussionboard_notification_preference\"> | boolean\n    notify_moderator_action?: BoolWithAggregatesFilter<\"discussionboard_notification_preference\"> | boolean\n    notify_system_message?: BoolWithAggregatesFilter<\"discussionboard_notification_preference\"> | boolean\n  }\n\n  export type discussionboard_audit_logWhereInput = {\n    AND?: discussionboard_audit_logWhereInput | discussionboard_audit_logWhereInput[]\n    OR?: discussionboard_audit_logWhereInput[]\n    NOT?: discussionboard_audit_logWhereInput | discussionboard_audit_logWhereInput[]\n    id?: UuidFilter<\"discussionboard_audit_log\"> | string\n    actor_user_id?: UuidFilter<\"discussionboard_audit_log\"> | string\n    target_user_id?: UuidNullableFilter<\"discussionboard_audit_log\"> | string | null\n    action_type?: StringFilter<\"discussionboard_audit_log\"> | string\n    entity_type?: StringFilter<\"discussionboard_audit_log\"> | string\n    entity_id?: UuidNullableFilter<\"discussionboard_audit_log\"> | string | null\n    action_detail?: StringNullableFilter<\"discussionboard_audit_log\"> | string | null\n    created_at?: DateTimeFilter<\"discussionboard_audit_log\"> | Date | string\n    fk_audit_actor_user?: XOR<Discussionboard_userScalarRelationFilter, discussionboard_userWhereInput>\n    fk_audit_target_user?: XOR<Discussionboard_userNullableScalarRelationFilter, discussionboard_userWhereInput> | null\n  }\n\n  export type discussionboard_audit_logOrderByWithRelationInput = {\n    id?: SortOrder\n    actor_user_id?: SortOrder\n    target_user_id?: SortOrderInput | SortOrder\n    action_type?: SortOrder\n    entity_type?: SortOrder\n    entity_id?: SortOrderInput | SortOrder\n    action_detail?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    fk_audit_actor_user?: discussionboard_userOrderByWithRelationInput\n    fk_audit_target_user?: discussionboard_userOrderByWithRelationInput\n  }\n\n  export type discussionboard_audit_logWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: discussionboard_audit_logWhereInput | discussionboard_audit_logWhereInput[]\n    OR?: discussionboard_audit_logWhereInput[]\n    NOT?: discussionboard_audit_logWhereInput | discussionboard_audit_logWhereInput[]\n    actor_user_id?: UuidFilter<\"discussionboard_audit_log\"> | string\n    target_user_id?: UuidNullableFilter<\"discussionboard_audit_log\"> | string | null\n    action_type?: StringFilter<\"discussionboard_audit_log\"> | string\n    entity_type?: StringFilter<\"discussionboard_audit_log\"> | string\n    entity_id?: UuidNullableFilter<\"discussionboard_audit_log\"> | string | null\n    action_detail?: StringNullableFilter<\"discussionboard_audit_log\"> | string | null\n    created_at?: DateTimeFilter<\"discussionboard_audit_log\"> | Date | string\n    fk_audit_actor_user?: XOR<Discussionboard_userScalarRelationFilter, discussionboard_userWhereInput>\n    fk_audit_target_user?: XOR<Discussionboard_userNullableScalarRelationFilter, discussionboard_userWhereInput> | null\n  }, \"id\">\n\n  export type discussionboard_audit_logOrderByWithAggregationInput = {\n    id?: SortOrder\n    actor_user_id?: SortOrder\n    target_user_id?: SortOrderInput | SortOrder\n    action_type?: SortOrder\n    entity_type?: SortOrder\n    entity_id?: SortOrderInput | SortOrder\n    action_detail?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    _count?: discussionboard_audit_logCountOrderByAggregateInput\n    _max?: discussionboard_audit_logMaxOrderByAggregateInput\n    _min?: discussionboard_audit_logMinOrderByAggregateInput\n  }\n\n  export type discussionboard_audit_logScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_audit_logScalarWhereWithAggregatesInput | discussionboard_audit_logScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_audit_logScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_audit_logScalarWhereWithAggregatesInput | discussionboard_audit_logScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_audit_log\"> | string\n    actor_user_id?: UuidWithAggregatesFilter<\"discussionboard_audit_log\"> | string\n    target_user_id?: UuidNullableWithAggregatesFilter<\"discussionboard_audit_log\"> | string | null\n    action_type?: StringWithAggregatesFilter<\"discussionboard_audit_log\"> | string\n    entity_type?: StringWithAggregatesFilter<\"discussionboard_audit_log\"> | string\n    entity_id?: UuidNullableWithAggregatesFilter<\"discussionboard_audit_log\"> | string | null\n    action_detail?: StringNullableWithAggregatesFilter<\"discussionboard_audit_log\"> | string | null\n    created_at?: DateTimeWithAggregatesFilter<\"discussionboard_audit_log\"> | Date | string\n  }\n\n  export type discussionboard_platform_settingWhereInput = {\n    AND?: discussionboard_platform_settingWhereInput | discussionboard_platform_settingWhereInput[]\n    OR?: discussionboard_platform_settingWhereInput[]\n    NOT?: discussionboard_platform_settingWhereInput | discussionboard_platform_settingWhereInput[]\n    id?: UuidFilter<\"discussionboard_platform_setting\"> | string\n    name?: StringFilter<\"discussionboard_platform_setting\"> | string\n    value?: StringFilter<\"discussionboard_platform_setting\"> | string\n    type?: StringFilter<\"discussionboard_platform_setting\"> | string\n    updated_at?: DateTimeFilter<\"discussionboard_platform_setting\"> | Date | string\n  }\n\n  export type discussionboard_platform_settingOrderByWithRelationInput = {\n    id?: SortOrder\n    name?: SortOrder\n    value?: SortOrder\n    type?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_platform_settingWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    name?: string\n    AND?: discussionboard_platform_settingWhereInput | discussionboard_platform_settingWhereInput[]\n    OR?: discussionboard_platform_settingWhereInput[]\n    NOT?: discussionboard_platform_settingWhereInput | discussionboard_platform_settingWhereInput[]\n    value?: StringFilter<\"discussionboard_platform_setting\"> | string\n    type?: StringFilter<\"discussionboard_platform_setting\"> | string\n    updated_at?: DateTimeFilter<\"discussionboard_platform_setting\"> | Date | string\n  }, \"id\" | \"name\">\n\n  export type discussionboard_platform_settingOrderByWithAggregationInput = {\n    id?: SortOrder\n    name?: SortOrder\n    value?: SortOrder\n    type?: SortOrder\n    updated_at?: SortOrder\n    _count?: discussionboard_platform_settingCountOrderByAggregateInput\n    _max?: discussionboard_platform_settingMaxOrderByAggregateInput\n    _min?: discussionboard_platform_settingMinOrderByAggregateInput\n  }\n\n  export type discussionboard_platform_settingScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_platform_settingScalarWhereWithAggregatesInput | discussionboard_platform_settingScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_platform_settingScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_platform_settingScalarWhereWithAggregatesInput | discussionboard_platform_settingScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_platform_setting\"> | string\n    name?: StringWithAggregatesFilter<\"discussionboard_platform_setting\"> | string\n    value?: StringWithAggregatesFilter<\"discussionboard_platform_setting\"> | string\n    type?: StringWithAggregatesFilter<\"discussionboard_platform_setting\"> | string\n    updated_at?: DateTimeWithAggregatesFilter<\"discussionboard_platform_setting\"> | Date | string\n  }\n\n  export type discussionboard_userCreateInput = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_user_profile?: discussionboard_user_profileCreateNestedOneWithoutUser_profile_user_idInput\n    discussionboard_member?: discussionboard_memberCreateNestedOneWithoutMember_user_idInput\n    discussionboard_moderator?: discussionboard_moderatorCreateNestedOneWithoutModerator_user_idInput\n    discussionboard_admin?: discussionboard_adminCreateNestedOneWithoutAdmin_user_idInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_likes?: discussionboard_likesCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutUserInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionCreateNestedManyWithoutActorInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionCreateNestedManyWithoutTarget_userInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReviewerInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningCreateNestedManyWithoutIssuerInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningCreateNestedManyWithoutRecipientInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banCreateNestedManyWithoutBanned_userInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banCreateNestedManyWithoutBan_actorInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationCreateNestedManyWithoutRecipient_userInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationCreateNestedManyWithoutActor_userInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceCreateNestedOneWithoutUserInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logCreateNestedManyWithoutFk_audit_actor_userInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logCreateNestedManyWithoutFk_audit_target_userInput\n  }\n\n  export type discussionboard_userUncheckedCreateInput = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUncheckedCreateNestedOneWithoutUser_profile_user_idInput\n    discussionboard_member?: discussionboard_memberUncheckedCreateNestedOneWithoutMember_user_idInput\n    discussionboard_moderator?: discussionboard_moderatorUncheckedCreateNestedOneWithoutModerator_user_idInput\n    discussionboard_admin?: discussionboard_adminUncheckedCreateNestedOneWithoutAdmin_user_idInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_likes?: discussionboard_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutActorInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutTarget_userInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewerInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUncheckedCreateNestedManyWithoutIssuerInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUncheckedCreateNestedManyWithoutRecipientInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUncheckedCreateNestedManyWithoutBanned_userInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUncheckedCreateNestedManyWithoutBan_actorInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUncheckedCreateNestedManyWithoutRecipient_userInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUncheckedCreateNestedManyWithoutActor_userInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUncheckedCreateNestedOneWithoutUserInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUncheckedCreateNestedManyWithoutFk_audit_actor_userInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUncheckedCreateNestedManyWithoutFk_audit_target_userInput\n  }\n\n  export type discussionboard_userUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUpdateOneWithoutUser_profile_user_idNestedInput\n    discussionboard_member?: discussionboard_memberUpdateOneWithoutMember_user_idNestedInput\n    discussionboard_moderator?: discussionboard_moderatorUpdateOneWithoutModerator_user_idNestedInput\n    discussionboard_admin?: discussionboard_adminUpdateOneWithoutAdmin_user_idNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_likes?: discussionboard_likesUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUpdateManyWithoutActorNestedInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUpdateManyWithoutTarget_userNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReviewerNestedInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUpdateManyWithoutIssuerNestedInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUpdateManyWithoutRecipientNestedInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUpdateManyWithoutBanned_userNestedInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUpdateManyWithoutBan_actorNestedInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUpdateManyWithoutRecipient_userNestedInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUpdateManyWithoutActor_userNestedInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUpdateOneWithoutUserNestedInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUpdateManyWithoutFk_audit_actor_userNestedInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUpdateManyWithoutFk_audit_target_userNestedInput\n  }\n\n  export type discussionboard_userUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUncheckedUpdateOneWithoutUser_profile_user_idNestedInput\n    discussionboard_member?: discussionboard_memberUncheckedUpdateOneWithoutMember_user_idNestedInput\n    discussionboard_moderator?: discussionboard_moderatorUncheckedUpdateOneWithoutModerator_user_idNestedInput\n    discussionboard_admin?: discussionboard_adminUncheckedUpdateOneWithoutAdmin_user_idNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_likes?: discussionboard_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUncheckedUpdateManyWithoutActorNestedInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUncheckedUpdateManyWithoutTarget_userNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReviewerNestedInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUncheckedUpdateManyWithoutIssuerNestedInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUncheckedUpdateManyWithoutRecipientNestedInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUncheckedUpdateManyWithoutBanned_userNestedInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUncheckedUpdateManyWithoutBan_actorNestedInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUncheckedUpdateManyWithoutRecipient_userNestedInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUncheckedUpdateManyWithoutActor_userNestedInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUncheckedUpdateOneWithoutUserNestedInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_actor_userNestedInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_target_userNestedInput\n  }\n\n  export type discussionboard_userCreateManyInput = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_userUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_userUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_user_profileCreateInput = {\n    id: string\n    display_name: string\n    avatar_url?: string | null\n    bio?: string | null\n    user_profile_user_id: discussionboard_userCreateNestedOneWithoutDiscussionboard_user_profileInput\n  }\n\n  export type discussionboard_user_profileUncheckedCreateInput = {\n    id: string\n    user_id: string\n    display_name: string\n    avatar_url?: string | null\n    bio?: string | null\n  }\n\n  export type discussionboard_user_profileUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    display_name?: StringFieldUpdateOperationsInput | string\n    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null\n    bio?: NullableStringFieldUpdateOperationsInput | string | null\n    user_profile_user_id?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_user_profileNestedInput\n  }\n\n  export type discussionboard_user_profileUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    display_name?: StringFieldUpdateOperationsInput | string\n    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null\n    bio?: NullableStringFieldUpdateOperationsInput | string | null\n  }\n\n  export type discussionboard_user_profileCreateManyInput = {\n    id: string\n    user_id: string\n    display_name: string\n    avatar_url?: string | null\n    bio?: string | null\n  }\n\n  export type discussionboard_user_profileUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    display_name?: StringFieldUpdateOperationsInput | string\n    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null\n    bio?: NullableStringFieldUpdateOperationsInput | string | null\n  }\n\n  export type discussionboard_user_profileUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    display_name?: StringFieldUpdateOperationsInput | string\n    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null\n    bio?: NullableStringFieldUpdateOperationsInput | string | null\n  }\n\n  export type discussionboard_memberCreateInput = {\n    id: string\n    granted_at: Date | string\n    member_user_id: discussionboard_userCreateNestedOneWithoutDiscussionboard_memberInput\n    discussionboard_post?: discussionboard_postCreateNestedManyWithoutMemberInput\n  }\n\n  export type discussionboard_memberUncheckedCreateInput = {\n    id: string\n    user_id: string\n    granted_at: Date | string\n    discussionboard_post?: discussionboard_postUncheckedCreateNestedManyWithoutMemberInput\n  }\n\n  export type discussionboard_memberUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    member_user_id?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_memberNestedInput\n    discussionboard_post?: discussionboard_postUpdateManyWithoutMemberNestedInput\n  }\n\n  export type discussionboard_memberUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_post?: discussionboard_postUncheckedUpdateManyWithoutMemberNestedInput\n  }\n\n  export type discussionboard_memberCreateManyInput = {\n    id: string\n    user_id: string\n    granted_at: Date | string\n  }\n\n  export type discussionboard_memberUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_memberUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_moderatorCreateInput = {\n    id: string\n    assigned_at: Date | string\n    moderator_user_id: discussionboard_userCreateNestedOneWithoutDiscussionboard_moderatorInput\n  }\n\n  export type discussionboard_moderatorUncheckedCreateInput = {\n    id: string\n    user_id: string\n    assigned_at: Date | string\n  }\n\n  export type discussionboard_moderatorUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    moderator_user_id?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_moderatorNestedInput\n  }\n\n  export type discussionboard_moderatorUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_moderatorCreateManyInput = {\n    id: string\n    user_id: string\n    assigned_at: Date | string\n  }\n\n  export type discussionboard_moderatorUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_moderatorUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_adminCreateInput = {\n    id: string\n    assigned_at: Date | string\n    admin_user_id: discussionboard_userCreateNestedOneWithoutDiscussionboard_adminInput\n  }\n\n  export type discussionboard_adminUncheckedCreateInput = {\n    id: string\n    user_id: string\n    assigned_at: Date | string\n  }\n\n  export type discussionboard_adminUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    admin_user_id?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_adminNestedInput\n  }\n\n  export type discussionboard_adminUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_adminCreateManyInput = {\n    id: string\n    user_id: string\n    assigned_at: Date | string\n  }\n\n  export type discussionboard_adminUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_adminUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_postCreateInput = {\n    id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    member: discussionboard_memberCreateNestedOneWithoutDiscussionboard_postInput\n    category: discussionboard_post_categoryCreateNestedOneWithoutDiscussionboard_postInput\n    discussionboard_post_attachment?: discussionboard_post_attachmentCreateNestedManyWithoutPostInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutPostInput\n    discussionboard_likes?: discussionboard_likesCreateNestedManyWithoutPostInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutPostInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionCreateNestedManyWithoutModerated_postInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReviewed_postInput\n    discussionboard_warning?: discussionboard_warningCreateNestedManyWithoutWarning_postInput\n    discussionboard_notification?: discussionboard_notificationCreateNestedManyWithoutRelated_postInput\n  }\n\n  export type discussionboard_postUncheckedCreateInput = {\n    id: string\n    author_member_id: string\n    category_id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussionboard_post_attachment?: discussionboard_post_attachmentUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_likes?: discussionboard_likesUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutModerated_postInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewed_postInput\n    discussionboard_warning?: discussionboard_warningUncheckedCreateNestedManyWithoutWarning_postInput\n    discussionboard_notification?: discussionboard_notificationUncheckedCreateNestedManyWithoutRelated_postInput\n  }\n\n  export type discussionboard_postUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    member?: discussionboard_memberUpdateOneRequiredWithoutDiscussionboard_postNestedInput\n    category?: discussionboard_post_categoryUpdateOneRequiredWithoutDiscussionboard_postNestedInput\n    discussionboard_post_attachment?: discussionboard_post_attachmentUpdateManyWithoutPostNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutPostNestedInput\n    discussionboard_likes?: discussionboard_likesUpdateManyWithoutPostNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutPostNestedInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUpdateManyWithoutModerated_postNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReviewed_postNestedInput\n    discussionboard_warning?: discussionboard_warningUpdateManyWithoutWarning_postNestedInput\n    discussionboard_notification?: discussionboard_notificationUpdateManyWithoutRelated_postNestedInput\n  }\n\n  export type discussionboard_postUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    author_member_id?: StringFieldUpdateOperationsInput | string\n    category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_post_attachment?: discussionboard_post_attachmentUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_likes?: discussionboard_likesUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUncheckedUpdateManyWithoutModerated_postNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReviewed_postNestedInput\n    discussionboard_warning?: discussionboard_warningUncheckedUpdateManyWithoutWarning_postNestedInput\n    discussionboard_notification?: discussionboard_notificationUncheckedUpdateManyWithoutRelated_postNestedInput\n  }\n\n  export type discussionboard_postCreateManyInput = {\n    id: string\n    author_member_id: string\n    category_id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type discussionboard_postUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_postUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    author_member_id?: StringFieldUpdateOperationsInput | string\n    category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_post_categoryCreateInput = {\n    id: string\n    name: string\n    description?: string | null\n    discussionboard_post?: discussionboard_postCreateNestedManyWithoutCategoryInput\n  }\n\n  export type discussionboard_post_categoryUncheckedCreateInput = {\n    id: string\n    name: string\n    description?: string | null\n    discussionboard_post?: discussionboard_postUncheckedCreateNestedManyWithoutCategoryInput\n  }\n\n  export type discussionboard_post_categoryUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    discussionboard_post?: discussionboard_postUpdateManyWithoutCategoryNestedInput\n  }\n\n  export type discussionboard_post_categoryUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    discussionboard_post?: discussionboard_postUncheckedUpdateManyWithoutCategoryNestedInput\n  }\n\n  export type discussionboard_post_categoryCreateManyInput = {\n    id: string\n    name: string\n    description?: string | null\n  }\n\n  export type discussionboard_post_categoryUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n  }\n\n  export type discussionboard_post_categoryUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n  }\n\n  export type discussionboard_post_tagCreateInput = {\n    id: string\n    name: string\n  }\n\n  export type discussionboard_post_tagUncheckedCreateInput = {\n    id: string\n    name: string\n  }\n\n  export type discussionboard_post_tagUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n  }\n\n  export type discussionboard_post_tagUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n  }\n\n  export type discussionboard_post_tagCreateManyInput = {\n    id: string\n    name: string\n  }\n\n  export type discussionboard_post_tagUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n  }\n\n  export type discussionboard_post_tagUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n  }\n\n  export type discussionboard_post_attachmentCreateInput = {\n    id: string\n    file_url: string\n    file_type: string\n    uploaded_at: Date | string\n    post: discussionboard_postCreateNestedOneWithoutDiscussionboard_post_attachmentInput\n  }\n\n  export type discussionboard_post_attachmentUncheckedCreateInput = {\n    id: string\n    post_id: string\n    file_url: string\n    file_type: string\n    uploaded_at: Date | string\n  }\n\n  export type discussionboard_post_attachmentUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    file_url?: StringFieldUpdateOperationsInput | string\n    file_type?: StringFieldUpdateOperationsInput | string\n    uploaded_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    post?: discussionboard_postUpdateOneRequiredWithoutDiscussionboard_post_attachmentNestedInput\n  }\n\n  export type discussionboard_post_attachmentUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    file_url?: StringFieldUpdateOperationsInput | string\n    file_type?: StringFieldUpdateOperationsInput | string\n    uploaded_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_post_attachmentCreateManyInput = {\n    id: string\n    post_id: string\n    file_url: string\n    file_type: string\n    uploaded_at: Date | string\n  }\n\n  export type discussionboard_post_attachmentUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    file_url?: StringFieldUpdateOperationsInput | string\n    file_type?: StringFieldUpdateOperationsInput | string\n    uploaded_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_post_attachmentUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    file_url?: StringFieldUpdateOperationsInput | string\n    file_type?: StringFieldUpdateOperationsInput | string\n    uploaded_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_commentsCreateInput = {\n    id: string\n    content: string\n    is_edited: boolean\n    is_deleted: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    post: discussionboard_postCreateNestedOneWithoutDiscussionboard_commentsInput\n    author: discussionboard_userCreateNestedOneWithoutDiscussionboard_commentsInput\n    parent_comment?: discussionboard_commentsCreateNestedOneWithoutRecursiveInput\n    recursive?: discussionboard_commentsCreateNestedManyWithoutParent_commentInput\n    discussionboard_likes?: discussionboard_likesCreateNestedManyWithoutCommentInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutCommentInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionCreateNestedManyWithoutModerated_commentInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReviewed_commentInput\n    discussionboard_warning?: discussionboard_warningCreateNestedManyWithoutWarning_commentInput\n    discussionboard_notification?: discussionboard_notificationCreateNestedManyWithoutRelated_commentInput\n  }\n\n  export type discussionboard_commentsUncheckedCreateInput = {\n    id: string\n    post_id: string\n    author_id: string\n    parent_comment_id?: string | null\n    content: string\n    is_edited: boolean\n    is_deleted: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    recursive?: discussionboard_commentsUncheckedCreateNestedManyWithoutParent_commentInput\n    discussionboard_likes?: discussionboard_likesUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutModerated_commentInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewed_commentInput\n    discussionboard_warning?: discussionboard_warningUncheckedCreateNestedManyWithoutWarning_commentInput\n    discussionboard_notification?: discussionboard_notificationUncheckedCreateNestedManyWithoutRelated_commentInput\n  }\n\n  export type discussionboard_commentsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    is_edited?: BoolFieldUpdateOperationsInput | boolean\n    is_deleted?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    post?: discussionboard_postUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput\n    author?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput\n    parent_comment?: discussionboard_commentsUpdateOneWithoutRecursiveNestedInput\n    recursive?: discussionboard_commentsUpdateManyWithoutParent_commentNestedInput\n    discussionboard_likes?: discussionboard_likesUpdateManyWithoutCommentNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutCommentNestedInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUpdateManyWithoutModerated_commentNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReviewed_commentNestedInput\n    discussionboard_warning?: discussionboard_warningUpdateManyWithoutWarning_commentNestedInput\n    discussionboard_notification?: discussionboard_notificationUpdateManyWithoutRelated_commentNestedInput\n  }\n\n  export type discussionboard_commentsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    author_id?: StringFieldUpdateOperationsInput | string\n    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    content?: StringFieldUpdateOperationsInput | string\n    is_edited?: BoolFieldUpdateOperationsInput | boolean\n    is_deleted?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    recursive?: discussionboard_commentsUncheckedUpdateManyWithoutParent_commentNestedInput\n    discussionboard_likes?: discussionboard_likesUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUncheckedUpdateManyWithoutModerated_commentNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReviewed_commentNestedInput\n    discussionboard_warning?: discussionboard_warningUncheckedUpdateManyWithoutWarning_commentNestedInput\n    discussionboard_notification?: discussionboard_notificationUncheckedUpdateManyWithoutRelated_commentNestedInput\n  }\n\n  export type discussionboard_commentsCreateManyInput = {\n    id: string\n    post_id: string\n    author_id: string\n    parent_comment_id?: string | null\n    content: string\n    is_edited: boolean\n    is_deleted: boolean\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_commentsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    is_edited?: BoolFieldUpdateOperationsInput | boolean\n    is_deleted?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_commentsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    author_id?: StringFieldUpdateOperationsInput | string\n    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    content?: StringFieldUpdateOperationsInput | string\n    is_edited?: BoolFieldUpdateOperationsInput | boolean\n    is_deleted?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_likesCreateInput = {\n    id: string\n    created_at: Date | string\n    deleted_at?: Date | string | null\n    user: discussionboard_userCreateNestedOneWithoutDiscussionboard_likesInput\n    post?: discussionboard_postCreateNestedOneWithoutDiscussionboard_likesInput\n    comment?: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_likesInput\n  }\n\n  export type discussionboard_likesUncheckedCreateInput = {\n    id: string\n    user_id: string\n    post_id?: string | null\n    comment_id?: string | null\n    created_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type discussionboard_likesUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    user?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_likesNestedInput\n    post?: discussionboard_postUpdateOneWithoutDiscussionboard_likesNestedInput\n    comment?: discussionboard_commentsUpdateOneWithoutDiscussionboard_likesNestedInput\n  }\n\n  export type discussionboard_likesUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_likesCreateManyInput = {\n    id: string\n    user_id: string\n    post_id?: string | null\n    comment_id?: string | null\n    created_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type discussionboard_likesUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_likesUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_reportsCreateInput = {\n    id: string\n    reason_code: string\n    reason_details?: string | null\n    created_at: Date | string\n    deleted_at?: Date | string | null\n    user: discussionboard_userCreateNestedOneWithoutDiscussionboard_reportsInput\n    post?: discussionboard_postCreateNestedOneWithoutDiscussionboard_reportsInput\n    comment?: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_reportsInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReportInput\n  }\n\n  export type discussionboard_reportsUncheckedCreateInput = {\n    id: string\n    user_id: string\n    post_id?: string | null\n    comment_id?: string | null\n    reason_code: string\n    reason_details?: string | null\n    created_at: Date | string\n    deleted_at?: Date | string | null\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReportInput\n  }\n\n  export type discussionboard_reportsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reason_code?: StringFieldUpdateOperationsInput | string\n    reason_details?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    user?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_reportsNestedInput\n    post?: discussionboard_postUpdateOneWithoutDiscussionboard_reportsNestedInput\n    comment?: discussionboard_commentsUpdateOneWithoutDiscussionboard_reportsNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReportNestedInput\n  }\n\n  export type discussionboard_reportsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason_code?: StringFieldUpdateOperationsInput | string\n    reason_details?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReportNestedInput\n  }\n\n  export type discussionboard_reportsCreateManyInput = {\n    id: string\n    user_id: string\n    post_id?: string | null\n    comment_id?: string | null\n    reason_code: string\n    reason_details?: string | null\n    created_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type discussionboard_reportsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reason_code?: StringFieldUpdateOperationsInput | string\n    reason_details?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_reportsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason_code?: StringFieldUpdateOperationsInput | string\n    reason_details?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_moderation_actionCreateInput = {\n    id: string\n    action_type: string\n    reason: string\n    created_at: Date | string\n    actor: discussionboard_userCreateNestedOneWithoutDiscussionboard_moderation_action_of_actor_idInput\n    target_user: discussionboard_userCreateNestedOneWithoutDiscussionboard_moderation_action_of_target_user_idInput\n    moderated_post?: discussionboard_postCreateNestedOneWithoutDiscussionboard_moderation_actionInput\n    moderated_comment?: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_moderation_actionInput\n  }\n\n  export type discussionboard_moderation_actionUncheckedCreateInput = {\n    id: string\n    actor_id: string\n    target_user_id: string\n    post_id?: string | null\n    comment_id?: string | null\n    action_type: string\n    reason: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_moderation_actionUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    action_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    actor?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_moderation_action_of_actor_idNestedInput\n    target_user?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_moderation_action_of_target_user_idNestedInput\n    moderated_post?: discussionboard_postUpdateOneWithoutDiscussionboard_moderation_actionNestedInput\n    moderated_comment?: discussionboard_commentsUpdateOneWithoutDiscussionboard_moderation_actionNestedInput\n  }\n\n  export type discussionboard_moderation_actionUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_id?: StringFieldUpdateOperationsInput | string\n    target_user_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_moderation_actionCreateManyInput = {\n    id: string\n    actor_id: string\n    target_user_id: string\n    post_id?: string | null\n    comment_id?: string | null\n    action_type: string\n    reason: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_moderation_actionUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    action_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_moderation_actionUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_id?: StringFieldUpdateOperationsInput | string\n    target_user_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_report_reviewCreateInput = {\n    id: string\n    review_status: string\n    moderator_comment?: string | null\n    reviewed_at: Date | string\n    report: discussionboard_reportsCreateNestedOneWithoutDiscussionboard_report_reviewInput\n    reviewer: discussionboard_userCreateNestedOneWithoutDiscussionboard_report_reviewInput\n    reviewed_post?: discussionboard_postCreateNestedOneWithoutDiscussionboard_report_reviewInput\n    reviewed_comment?: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_report_reviewInput\n  }\n\n  export type discussionboard_report_reviewUncheckedCreateInput = {\n    id: string\n    report_id: string\n    reviewer_id: string\n    post_id?: string | null\n    comment_id?: string | null\n    review_status: string\n    moderator_comment?: string | null\n    reviewed_at: Date | string\n  }\n\n  export type discussionboard_report_reviewUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    review_status?: StringFieldUpdateOperationsInput | string\n    moderator_comment?: NullableStringFieldUpdateOperationsInput | string | null\n    reviewed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    report?: discussionboard_reportsUpdateOneRequiredWithoutDiscussionboard_report_reviewNestedInput\n    reviewer?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_report_reviewNestedInput\n    reviewed_post?: discussionboard_postUpdateOneWithoutDiscussionboard_report_reviewNestedInput\n    reviewed_comment?: discussionboard_commentsUpdateOneWithoutDiscussionboard_report_reviewNestedInput\n  }\n\n  export type discussionboard_report_reviewUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    report_id?: StringFieldUpdateOperationsInput | string\n    reviewer_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    review_status?: StringFieldUpdateOperationsInput | string\n    moderator_comment?: NullableStringFieldUpdateOperationsInput | string | null\n    reviewed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_report_reviewCreateManyInput = {\n    id: string\n    report_id: string\n    reviewer_id: string\n    post_id?: string | null\n    comment_id?: string | null\n    review_status: string\n    moderator_comment?: string | null\n    reviewed_at: Date | string\n  }\n\n  export type discussionboard_report_reviewUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    review_status?: StringFieldUpdateOperationsInput | string\n    moderator_comment?: NullableStringFieldUpdateOperationsInput | string | null\n    reviewed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_report_reviewUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    report_id?: StringFieldUpdateOperationsInput | string\n    reviewer_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    review_status?: StringFieldUpdateOperationsInput | string\n    moderator_comment?: NullableStringFieldUpdateOperationsInput | string | null\n    reviewed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_warningCreateInput = {\n    id: string\n    warning_type: string\n    message: string\n    issued_at: Date | string\n    issuer: discussionboard_userCreateNestedOneWithoutDiscussionboard_warning_of_issued_by_idInput\n    recipient: discussionboard_userCreateNestedOneWithoutDiscussionboard_warning_of_issued_to_idInput\n    warning_post?: discussionboard_postCreateNestedOneWithoutDiscussionboard_warningInput\n    warning_comment?: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_warningInput\n    discussionboard_ban?: discussionboard_banCreateNestedManyWithoutRelated_warningInput\n  }\n\n  export type discussionboard_warningUncheckedCreateInput = {\n    id: string\n    issued_by_id: string\n    issued_to_id: string\n    post_id?: string | null\n    comment_id?: string | null\n    warning_type: string\n    message: string\n    issued_at: Date | string\n    discussionboard_ban?: discussionboard_banUncheckedCreateNestedManyWithoutRelated_warningInput\n  }\n\n  export type discussionboard_warningUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    warning_type?: StringFieldUpdateOperationsInput | string\n    message?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    issuer?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_warning_of_issued_by_idNestedInput\n    recipient?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_warning_of_issued_to_idNestedInput\n    warning_post?: discussionboard_postUpdateOneWithoutDiscussionboard_warningNestedInput\n    warning_comment?: discussionboard_commentsUpdateOneWithoutDiscussionboard_warningNestedInput\n    discussionboard_ban?: discussionboard_banUpdateManyWithoutRelated_warningNestedInput\n  }\n\n  export type discussionboard_warningUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    issued_by_id?: StringFieldUpdateOperationsInput | string\n    issued_to_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    warning_type?: StringFieldUpdateOperationsInput | string\n    message?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_ban?: discussionboard_banUncheckedUpdateManyWithoutRelated_warningNestedInput\n  }\n\n  export type discussionboard_warningCreateManyInput = {\n    id: string\n    issued_by_id: string\n    issued_to_id: string\n    post_id?: string | null\n    comment_id?: string | null\n    warning_type: string\n    message: string\n    issued_at: Date | string\n  }\n\n  export type discussionboard_warningUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    warning_type?: StringFieldUpdateOperationsInput | string\n    message?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_warningUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    issued_by_id?: StringFieldUpdateOperationsInput | string\n    issued_to_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    warning_type?: StringFieldUpdateOperationsInput | string\n    message?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_banCreateInput = {\n    id: string\n    ban_type: string\n    reason: string\n    issued_at: Date | string\n    expires_at?: Date | string | null\n    banned_user: discussionboard_userCreateNestedOneWithoutDiscussionboard_ban_of_banned_user_idInput\n    ban_actor: discussionboard_userCreateNestedOneWithoutDiscussionboard_ban_of_banned_by_idInput\n    related_warning?: discussionboard_warningCreateNestedOneWithoutDiscussionboard_banInput\n  }\n\n  export type discussionboard_banUncheckedCreateInput = {\n    id: string\n    banned_user_id: string\n    banned_by_id: string\n    warning_id?: string | null\n    ban_type: string\n    reason: string\n    issued_at: Date | string\n    expires_at?: Date | string | null\n  }\n\n  export type discussionboard_banUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    ban_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    banned_user?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_ban_of_banned_user_idNestedInput\n    ban_actor?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_ban_of_banned_by_idNestedInput\n    related_warning?: discussionboard_warningUpdateOneWithoutDiscussionboard_banNestedInput\n  }\n\n  export type discussionboard_banUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    banned_user_id?: StringFieldUpdateOperationsInput | string\n    banned_by_id?: StringFieldUpdateOperationsInput | string\n    warning_id?: NullableStringFieldUpdateOperationsInput | string | null\n    ban_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_banCreateManyInput = {\n    id: string\n    banned_user_id: string\n    banned_by_id: string\n    warning_id?: string | null\n    ban_type: string\n    reason: string\n    issued_at: Date | string\n    expires_at?: Date | string | null\n  }\n\n  export type discussionboard_banUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    ban_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_banUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    banned_user_id?: StringFieldUpdateOperationsInput | string\n    banned_by_id?: StringFieldUpdateOperationsInput | string\n    warning_id?: NullableStringFieldUpdateOperationsInput | string | null\n    ban_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_notificationCreateInput = {\n    id: string\n    type: string\n    message: string\n    is_read: boolean\n    created_at: Date | string\n    recipient_user: discussionboard_userCreateNestedOneWithoutDiscussionboard_notification_of_recipient_user_idInput\n    related_post?: discussionboard_postCreateNestedOneWithoutDiscussionboard_notificationInput\n    related_comment?: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_notificationInput\n    actor_user?: discussionboard_userCreateNestedOneWithoutDiscussionboard_notification_of_actor_user_idInput\n  }\n\n  export type discussionboard_notificationUncheckedCreateInput = {\n    id: string\n    recipient_user_id: string\n    related_post_id?: string | null\n    related_comment_id?: string | null\n    actor_user_id?: string | null\n    type: string\n    message: string\n    is_read: boolean\n    created_at: Date | string\n  }\n\n  export type discussionboard_notificationUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    type?: StringFieldUpdateOperationsInput | string\n    message?: StringFieldUpdateOperationsInput | string\n    is_read?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    recipient_user?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_notification_of_recipient_user_idNestedInput\n    related_post?: discussionboard_postUpdateOneWithoutDiscussionboard_notificationNestedInput\n    related_comment?: discussionboard_commentsUpdateOneWithoutDiscussionboard_notificationNestedInput\n    actor_user?: discussionboard_userUpdateOneWithoutDiscussionboard_notification_of_actor_user_idNestedInput\n  }\n\n  export type discussionboard_notificationUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    recipient_user_id?: StringFieldUpdateOperationsInput | string\n    related_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    type?: StringFieldUpdateOperationsInput | string\n    message?: StringFieldUpdateOperationsInput | string\n    is_read?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_notificationCreateManyInput = {\n    id: string\n    recipient_user_id: string\n    related_post_id?: string | null\n    related_comment_id?: string | null\n    actor_user_id?: string | null\n    type: string\n    message: string\n    is_read: boolean\n    created_at: Date | string\n  }\n\n  export type discussionboard_notificationUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    type?: StringFieldUpdateOperationsInput | string\n    message?: StringFieldUpdateOperationsInput | string\n    is_read?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_notificationUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    recipient_user_id?: StringFieldUpdateOperationsInput | string\n    related_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    type?: StringFieldUpdateOperationsInput | string\n    message?: StringFieldUpdateOperationsInput | string\n    is_read?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_notification_preferenceCreateInput = {\n    id: string\n    notify_reply: boolean\n    notify_like: boolean\n    notify_moderator_action: boolean\n    notify_system_message: boolean\n    user: discussionboard_userCreateNestedOneWithoutDiscussionboard_notification_preferenceInput\n  }\n\n  export type discussionboard_notification_preferenceUncheckedCreateInput = {\n    id: string\n    user_id: string\n    notify_reply: boolean\n    notify_like: boolean\n    notify_moderator_action: boolean\n    notify_system_message: boolean\n  }\n\n  export type discussionboard_notification_preferenceUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    notify_reply?: BoolFieldUpdateOperationsInput | boolean\n    notify_like?: BoolFieldUpdateOperationsInput | boolean\n    notify_moderator_action?: BoolFieldUpdateOperationsInput | boolean\n    notify_system_message?: BoolFieldUpdateOperationsInput | boolean\n    user?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_notification_preferenceNestedInput\n  }\n\n  export type discussionboard_notification_preferenceUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    notify_reply?: BoolFieldUpdateOperationsInput | boolean\n    notify_like?: BoolFieldUpdateOperationsInput | boolean\n    notify_moderator_action?: BoolFieldUpdateOperationsInput | boolean\n    notify_system_message?: BoolFieldUpdateOperationsInput | boolean\n  }\n\n  export type discussionboard_notification_preferenceCreateManyInput = {\n    id: string\n    user_id: string\n    notify_reply: boolean\n    notify_like: boolean\n    notify_moderator_action: boolean\n    notify_system_message: boolean\n  }\n\n  export type discussionboard_notification_preferenceUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    notify_reply?: BoolFieldUpdateOperationsInput | boolean\n    notify_like?: BoolFieldUpdateOperationsInput | boolean\n    notify_moderator_action?: BoolFieldUpdateOperationsInput | boolean\n    notify_system_message?: BoolFieldUpdateOperationsInput | boolean\n  }\n\n  export type discussionboard_notification_preferenceUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    notify_reply?: BoolFieldUpdateOperationsInput | boolean\n    notify_like?: BoolFieldUpdateOperationsInput | boolean\n    notify_moderator_action?: BoolFieldUpdateOperationsInput | boolean\n    notify_system_message?: BoolFieldUpdateOperationsInput | boolean\n  }\n\n  export type discussionboard_audit_logCreateInput = {\n    id: string\n    action_type: string\n    entity_type: string\n    entity_id?: string | null\n    action_detail?: string | null\n    created_at: Date | string\n    fk_audit_actor_user: discussionboard_userCreateNestedOneWithoutDiscussionboard_audit_log_of_actor_user_idInput\n    fk_audit_target_user?: discussionboard_userCreateNestedOneWithoutDiscussionboard_audit_log_of_target_user_idInput\n  }\n\n  export type discussionboard_audit_logUncheckedCreateInput = {\n    id: string\n    actor_user_id: string\n    target_user_id?: string | null\n    action_type: string\n    entity_type: string\n    entity_id?: string | null\n    action_detail?: string | null\n    created_at: Date | string\n  }\n\n  export type discussionboard_audit_logUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    action_type?: StringFieldUpdateOperationsInput | string\n    entity_type?: StringFieldUpdateOperationsInput | string\n    entity_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_detail?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    fk_audit_actor_user?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_audit_log_of_actor_user_idNestedInput\n    fk_audit_target_user?: discussionboard_userUpdateOneWithoutDiscussionboard_audit_log_of_target_user_idNestedInput\n  }\n\n  export type discussionboard_audit_logUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_user_id?: StringFieldUpdateOperationsInput | string\n    target_user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    entity_type?: StringFieldUpdateOperationsInput | string\n    entity_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_detail?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_audit_logCreateManyInput = {\n    id: string\n    actor_user_id: string\n    target_user_id?: string | null\n    action_type: string\n    entity_type: string\n    entity_id?: string | null\n    action_detail?: string | null\n    created_at: Date | string\n  }\n\n  export type discussionboard_audit_logUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    action_type?: StringFieldUpdateOperationsInput | string\n    entity_type?: StringFieldUpdateOperationsInput | string\n    entity_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_detail?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_audit_logUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_user_id?: StringFieldUpdateOperationsInput | string\n    target_user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    entity_type?: StringFieldUpdateOperationsInput | string\n    entity_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_detail?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_platform_settingCreateInput = {\n    id: string\n    name: string\n    value: string\n    type: string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_platform_settingUncheckedCreateInput = {\n    id: string\n    name: string\n    value: string\n    type: string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_platform_settingUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    value?: StringFieldUpdateOperationsInput | string\n    type?: StringFieldUpdateOperationsInput | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_platform_settingUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    value?: StringFieldUpdateOperationsInput | string\n    type?: StringFieldUpdateOperationsInput | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_platform_settingCreateManyInput = {\n    id: string\n    name: string\n    value: string\n    type: string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_platform_settingUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    value?: StringFieldUpdateOperationsInput | string\n    type?: StringFieldUpdateOperationsInput | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_platform_settingUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    value?: StringFieldUpdateOperationsInput | string\n    type?: StringFieldUpdateOperationsInput | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type UuidFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedUuidFilter<$PrismaModel> | string\n  }\n\n  export type StringFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedStringFilter<$PrismaModel> | string\n  }\n\n  export type BoolFilter<$PrismaModel = never> = {\n    equals?: boolean | BooleanFieldRefInput<$PrismaModel>\n    not?: NestedBoolFilter<$PrismaModel> | boolean\n  }\n\n  export type DateTimeFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeFilter<$PrismaModel> | Date | string\n  }\n\n  export type Discussionboard_user_profileNullableScalarRelationFilter = {\n    is?: discussionboard_user_profileWhereInput | null\n    isNot?: discussionboard_user_profileWhereInput | null\n  }\n\n  export type Discussionboard_memberNullableScalarRelationFilter = {\n    is?: discussionboard_memberWhereInput | null\n    isNot?: discussionboard_memberWhereInput | null\n  }\n\n  export type Discussionboard_moderatorNullableScalarRelationFilter = {\n    is?: discussionboard_moderatorWhereInput | null\n    isNot?: discussionboard_moderatorWhereInput | null\n  }\n\n  export type Discussionboard_adminNullableScalarRelationFilter = {\n    is?: discussionboard_adminWhereInput | null\n    isNot?: discussionboard_adminWhereInput | null\n  }\n\n  export type Discussionboard_commentsListRelationFilter = {\n    every?: discussionboard_commentsWhereInput\n    some?: discussionboard_commentsWhereInput\n    none?: discussionboard_commentsWhereInput\n  }\n\n  export type Discussionboard_likesListRelationFilter = {\n    every?: discussionboard_likesWhereInput\n    some?: discussionboard_likesWhereInput\n    none?: discussionboard_likesWhereInput\n  }\n\n  export type Discussionboard_reportsListRelationFilter = {\n    every?: discussionboard_reportsWhereInput\n    some?: discussionboard_reportsWhereInput\n    none?: discussionboard_reportsWhereInput\n  }\n\n  export type Discussionboard_moderation_actionListRelationFilter = {\n    every?: discussionboard_moderation_actionWhereInput\n    some?: discussionboard_moderation_actionWhereInput\n    none?: discussionboard_moderation_actionWhereInput\n  }\n\n  export type Discussionboard_report_reviewListRelationFilter = {\n    every?: discussionboard_report_reviewWhereInput\n    some?: discussionboard_report_reviewWhereInput\n    none?: discussionboard_report_reviewWhereInput\n  }\n\n  export type Discussionboard_warningListRelationFilter = {\n    every?: discussionboard_warningWhereInput\n    some?: discussionboard_warningWhereInput\n    none?: discussionboard_warningWhereInput\n  }\n\n  export type Discussionboard_banListRelationFilter = {\n    every?: discussionboard_banWhereInput\n    some?: discussionboard_banWhereInput\n    none?: discussionboard_banWhereInput\n  }\n\n  export type Discussionboard_notificationListRelationFilter = {\n    every?: discussionboard_notificationWhereInput\n    some?: discussionboard_notificationWhereInput\n    none?: discussionboard_notificationWhereInput\n  }\n\n  export type Discussionboard_notification_preferenceNullableScalarRelationFilter = {\n    is?: discussionboard_notification_preferenceWhereInput | null\n    isNot?: discussionboard_notification_preferenceWhereInput | null\n  }\n\n  export type Discussionboard_audit_logListRelationFilter = {\n    every?: discussionboard_audit_logWhereInput\n    some?: discussionboard_audit_logWhereInput\n    none?: discussionboard_audit_logWhereInput\n  }\n\n  export type discussionboard_commentsOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussionboard_likesOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussionboard_reportsOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussionboard_moderation_actionOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussionboard_report_reviewOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussionboard_warningOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussionboard_banOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussionboard_notificationOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussionboard_audit_logOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussionboard_userCountOrderByAggregateInput = {\n    id?: SortOrder\n    email?: SortOrder\n    password_hash?: SortOrder\n    is_active?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_userMaxOrderByAggregateInput = {\n    id?: SortOrder\n    email?: SortOrder\n    password_hash?: SortOrder\n    is_active?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_userMinOrderByAggregateInput = {\n    id?: SortOrder\n    email?: SortOrder\n    password_hash?: SortOrder\n    is_active?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type UuidWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedStringFilter<$PrismaModel>\n    _max?: NestedStringFilter<$PrismaModel>\n  }\n\n  export type StringWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedStringFilter<$PrismaModel>\n    _max?: NestedStringFilter<$PrismaModel>\n  }\n\n  export type BoolWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: boolean | BooleanFieldRefInput<$PrismaModel>\n    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedBoolFilter<$PrismaModel>\n    _max?: NestedBoolFilter<$PrismaModel>\n  }\n\n  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedDateTimeFilter<$PrismaModel>\n    _max?: NestedDateTimeFilter<$PrismaModel>\n  }\n\n  export type StringNullableFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedStringNullableFilter<$PrismaModel> | string | null\n  }\n\n  export type Discussionboard_userScalarRelationFilter = {\n    is?: discussionboard_userWhereInput\n    isNot?: discussionboard_userWhereInput\n  }\n\n  export type SortOrderInput = {\n    sort: SortOrder\n    nulls?: NullsOrder\n  }\n\n  export type discussionboard_user_profileCountOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    display_name?: SortOrder\n    avatar_url?: SortOrder\n    bio?: SortOrder\n  }\n\n  export type discussionboard_user_profileMaxOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    display_name?: SortOrder\n    avatar_url?: SortOrder\n    bio?: SortOrder\n  }\n\n  export type discussionboard_user_profileMinOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    display_name?: SortOrder\n    avatar_url?: SortOrder\n    bio?: SortOrder\n  }\n\n  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null\n    _count?: NestedIntNullableFilter<$PrismaModel>\n    _min?: NestedStringNullableFilter<$PrismaModel>\n    _max?: NestedStringNullableFilter<$PrismaModel>\n  }\n\n  export type Discussionboard_postListRelationFilter = {\n    every?: discussionboard_postWhereInput\n    some?: discussionboard_postWhereInput\n    none?: discussionboard_postWhereInput\n  }\n\n  export type discussionboard_postOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussionboard_memberCountOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    granted_at?: SortOrder\n  }\n\n  export type discussionboard_memberMaxOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    granted_at?: SortOrder\n  }\n\n  export type discussionboard_memberMinOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    granted_at?: SortOrder\n  }\n\n  export type discussionboard_moderatorCountOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    assigned_at?: SortOrder\n  }\n\n  export type discussionboard_moderatorMaxOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    assigned_at?: SortOrder\n  }\n\n  export type discussionboard_moderatorMinOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    assigned_at?: SortOrder\n  }\n\n  export type discussionboard_adminCountOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    assigned_at?: SortOrder\n  }\n\n  export type discussionboard_adminMaxOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    assigned_at?: SortOrder\n  }\n\n  export type discussionboard_adminMinOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    assigned_at?: SortOrder\n  }\n\n  export type DateTimeNullableFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null\n  }\n\n  export type Discussionboard_memberScalarRelationFilter = {\n    is?: discussionboard_memberWhereInput\n    isNot?: discussionboard_memberWhereInput\n  }\n\n  export type Discussionboard_post_categoryScalarRelationFilter = {\n    is?: discussionboard_post_categoryWhereInput\n    isNot?: discussionboard_post_categoryWhereInput\n  }\n\n  export type Discussionboard_post_attachmentListRelationFilter = {\n    every?: discussionboard_post_attachmentWhereInput\n    some?: discussionboard_post_attachmentWhereInput\n    none?: discussionboard_post_attachmentWhereInput\n  }\n\n  export type discussionboard_post_attachmentOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussionboard_postAuthor_member_idCreated_atCompoundUniqueInput = {\n    author_member_id: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_postCountOrderByAggregateInput = {\n    id?: SortOrder\n    author_member_id?: SortOrder\n    category_id?: SortOrder\n    title?: SortOrder\n    body?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type discussionboard_postMaxOrderByAggregateInput = {\n    id?: SortOrder\n    author_member_id?: SortOrder\n    category_id?: SortOrder\n    title?: SortOrder\n    body?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type discussionboard_postMinOrderByAggregateInput = {\n    id?: SortOrder\n    author_member_id?: SortOrder\n    category_id?: SortOrder\n    title?: SortOrder\n    body?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null\n    _count?: NestedIntNullableFilter<$PrismaModel>\n    _min?: NestedDateTimeNullableFilter<$PrismaModel>\n    _max?: NestedDateTimeNullableFilter<$PrismaModel>\n  }\n\n  export type discussionboard_post_categoryCountOrderByAggregateInput = {\n    id?: SortOrder\n    name?: SortOrder\n    description?: SortOrder\n  }\n\n  export type discussionboard_post_categoryMaxOrderByAggregateInput = {\n    id?: SortOrder\n    name?: SortOrder\n    description?: SortOrder\n  }\n\n  export type discussionboard_post_categoryMinOrderByAggregateInput = {\n    id?: SortOrder\n    name?: SortOrder\n    description?: SortOrder\n  }\n\n  export type discussionboard_post_tagCountOrderByAggregateInput = {\n    id?: SortOrder\n    name?: SortOrder\n  }\n\n  export type discussionboard_post_tagMaxOrderByAggregateInput = {\n    id?: SortOrder\n    name?: SortOrder\n  }\n\n  export type discussionboard_post_tagMinOrderByAggregateInput = {\n    id?: SortOrder\n    name?: SortOrder\n  }\n\n  export type Discussionboard_postScalarRelationFilter = {\n    is?: discussionboard_postWhereInput\n    isNot?: discussionboard_postWhereInput\n  }\n\n  export type discussionboard_post_attachmentPost_idFile_urlCompoundUniqueInput = {\n    post_id: string\n    file_url: string\n  }\n\n  export type discussionboard_post_attachmentCountOrderByAggregateInput = {\n    id?: SortOrder\n    post_id?: SortOrder\n    file_url?: SortOrder\n    file_type?: SortOrder\n    uploaded_at?: SortOrder\n  }\n\n  export type discussionboard_post_attachmentMaxOrderByAggregateInput = {\n    id?: SortOrder\n    post_id?: SortOrder\n    file_url?: SortOrder\n    file_type?: SortOrder\n    uploaded_at?: SortOrder\n  }\n\n  export type discussionboard_post_attachmentMinOrderByAggregateInput = {\n    id?: SortOrder\n    post_id?: SortOrder\n    file_url?: SortOrder\n    file_type?: SortOrder\n    uploaded_at?: SortOrder\n  }\n\n  export type UuidNullableFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedUuidNullableFilter<$PrismaModel> | string | null\n  }\n\n  export type Discussionboard_commentsNullableScalarRelationFilter = {\n    is?: discussionboard_commentsWhereInput | null\n    isNot?: discussionboard_commentsWhereInput | null\n  }\n\n  export type discussionboard_commentsCountOrderByAggregateInput = {\n    id?: SortOrder\n    post_id?: SortOrder\n    author_id?: SortOrder\n    parent_comment_id?: SortOrder\n    content?: SortOrder\n    is_edited?: SortOrder\n    is_deleted?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_commentsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    post_id?: SortOrder\n    author_id?: SortOrder\n    parent_comment_id?: SortOrder\n    content?: SortOrder\n    is_edited?: SortOrder\n    is_deleted?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_commentsMinOrderByAggregateInput = {\n    id?: SortOrder\n    post_id?: SortOrder\n    author_id?: SortOrder\n    parent_comment_id?: SortOrder\n    content?: SortOrder\n    is_edited?: SortOrder\n    is_deleted?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type UuidNullableWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null\n    _count?: NestedIntNullableFilter<$PrismaModel>\n    _min?: NestedStringNullableFilter<$PrismaModel>\n    _max?: NestedStringNullableFilter<$PrismaModel>\n  }\n\n  export type Discussionboard_postNullableScalarRelationFilter = {\n    is?: discussionboard_postWhereInput | null\n    isNot?: discussionboard_postWhereInput | null\n  }\n\n  export type discussionboard_likesUser_idPost_idCompoundUniqueInput = {\n    user_id: string\n    post_id: string\n  }\n\n  export type discussionboard_likesUser_idComment_idCompoundUniqueInput = {\n    user_id: string\n    comment_id: string\n  }\n\n  export type discussionboard_likesCountOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    created_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type discussionboard_likesMaxOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    created_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type discussionboard_likesMinOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    created_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type discussionboard_reportsUser_idPost_idCompoundUniqueInput = {\n    user_id: string\n    post_id: string\n  }\n\n  export type discussionboard_reportsUser_idComment_idCompoundUniqueInput = {\n    user_id: string\n    comment_id: string\n  }\n\n  export type discussionboard_reportsCountOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    reason_code?: SortOrder\n    reason_details?: SortOrder\n    created_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type discussionboard_reportsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    reason_code?: SortOrder\n    reason_details?: SortOrder\n    created_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type discussionboard_reportsMinOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    reason_code?: SortOrder\n    reason_details?: SortOrder\n    created_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type discussionboard_moderation_actionCountOrderByAggregateInput = {\n    id?: SortOrder\n    actor_id?: SortOrder\n    target_user_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    action_type?: SortOrder\n    reason?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussionboard_moderation_actionMaxOrderByAggregateInput = {\n    id?: SortOrder\n    actor_id?: SortOrder\n    target_user_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    action_type?: SortOrder\n    reason?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussionboard_moderation_actionMinOrderByAggregateInput = {\n    id?: SortOrder\n    actor_id?: SortOrder\n    target_user_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    action_type?: SortOrder\n    reason?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type Discussionboard_reportsScalarRelationFilter = {\n    is?: discussionboard_reportsWhereInput\n    isNot?: discussionboard_reportsWhereInput\n  }\n\n  export type discussionboard_report_reviewCountOrderByAggregateInput = {\n    id?: SortOrder\n    report_id?: SortOrder\n    reviewer_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    review_status?: SortOrder\n    moderator_comment?: SortOrder\n    reviewed_at?: SortOrder\n  }\n\n  export type discussionboard_report_reviewMaxOrderByAggregateInput = {\n    id?: SortOrder\n    report_id?: SortOrder\n    reviewer_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    review_status?: SortOrder\n    moderator_comment?: SortOrder\n    reviewed_at?: SortOrder\n  }\n\n  export type discussionboard_report_reviewMinOrderByAggregateInput = {\n    id?: SortOrder\n    report_id?: SortOrder\n    reviewer_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    review_status?: SortOrder\n    moderator_comment?: SortOrder\n    reviewed_at?: SortOrder\n  }\n\n  export type discussionboard_warningCountOrderByAggregateInput = {\n    id?: SortOrder\n    issued_by_id?: SortOrder\n    issued_to_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    warning_type?: SortOrder\n    message?: SortOrder\n    issued_at?: SortOrder\n  }\n\n  export type discussionboard_warningMaxOrderByAggregateInput = {\n    id?: SortOrder\n    issued_by_id?: SortOrder\n    issued_to_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    warning_type?: SortOrder\n    message?: SortOrder\n    issued_at?: SortOrder\n  }\n\n  export type discussionboard_warningMinOrderByAggregateInput = {\n    id?: SortOrder\n    issued_by_id?: SortOrder\n    issued_to_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    warning_type?: SortOrder\n    message?: SortOrder\n    issued_at?: SortOrder\n  }\n\n  export type Discussionboard_warningNullableScalarRelationFilter = {\n    is?: discussionboard_warningWhereInput | null\n    isNot?: discussionboard_warningWhereInput | null\n  }\n\n  export type discussionboard_banCountOrderByAggregateInput = {\n    id?: SortOrder\n    banned_user_id?: SortOrder\n    banned_by_id?: SortOrder\n    warning_id?: SortOrder\n    ban_type?: SortOrder\n    reason?: SortOrder\n    issued_at?: SortOrder\n    expires_at?: SortOrder\n  }\n\n  export type discussionboard_banMaxOrderByAggregateInput = {\n    id?: SortOrder\n    banned_user_id?: SortOrder\n    banned_by_id?: SortOrder\n    warning_id?: SortOrder\n    ban_type?: SortOrder\n    reason?: SortOrder\n    issued_at?: SortOrder\n    expires_at?: SortOrder\n  }\n\n  export type discussionboard_banMinOrderByAggregateInput = {\n    id?: SortOrder\n    banned_user_id?: SortOrder\n    banned_by_id?: SortOrder\n    warning_id?: SortOrder\n    ban_type?: SortOrder\n    reason?: SortOrder\n    issued_at?: SortOrder\n    expires_at?: SortOrder\n  }\n\n  export type Discussionboard_userNullableScalarRelationFilter = {\n    is?: discussionboard_userWhereInput | null\n    isNot?: discussionboard_userWhereInput | null\n  }\n\n  export type discussionboard_notificationRecipient_user_idTypeRelated_post_idRelated_comment_idActor_user_idCreated_atCompoundUniqueInput = {\n    recipient_user_id: string\n    type: string\n    related_post_id: string\n    related_comment_id: string\n    actor_user_id: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_notificationCountOrderByAggregateInput = {\n    id?: SortOrder\n    recipient_user_id?: SortOrder\n    related_post_id?: SortOrder\n    related_comment_id?: SortOrder\n    actor_user_id?: SortOrder\n    type?: SortOrder\n    message?: SortOrder\n    is_read?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussionboard_notificationMaxOrderByAggregateInput = {\n    id?: SortOrder\n    recipient_user_id?: SortOrder\n    related_post_id?: SortOrder\n    related_comment_id?: SortOrder\n    actor_user_id?: SortOrder\n    type?: SortOrder\n    message?: SortOrder\n    is_read?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussionboard_notificationMinOrderByAggregateInput = {\n    id?: SortOrder\n    recipient_user_id?: SortOrder\n    related_post_id?: SortOrder\n    related_comment_id?: SortOrder\n    actor_user_id?: SortOrder\n    type?: SortOrder\n    message?: SortOrder\n    is_read?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussionboard_notification_preferenceCountOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    notify_reply?: SortOrder\n    notify_like?: SortOrder\n    notify_moderator_action?: SortOrder\n    notify_system_message?: SortOrder\n  }\n\n  export type discussionboard_notification_preferenceMaxOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    notify_reply?: SortOrder\n    notify_like?: SortOrder\n    notify_moderator_action?: SortOrder\n    notify_system_message?: SortOrder\n  }\n\n  export type discussionboard_notification_preferenceMinOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    notify_reply?: SortOrder\n    notify_like?: SortOrder\n    notify_moderator_action?: SortOrder\n    notify_system_message?: SortOrder\n  }\n\n  export type discussionboard_audit_logCountOrderByAggregateInput = {\n    id?: SortOrder\n    actor_user_id?: SortOrder\n    target_user_id?: SortOrder\n    action_type?: SortOrder\n    entity_type?: SortOrder\n    entity_id?: SortOrder\n    action_detail?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussionboard_audit_logMaxOrderByAggregateInput = {\n    id?: SortOrder\n    actor_user_id?: SortOrder\n    target_user_id?: SortOrder\n    action_type?: SortOrder\n    entity_type?: SortOrder\n    entity_id?: SortOrder\n    action_detail?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussionboard_audit_logMinOrderByAggregateInput = {\n    id?: SortOrder\n    actor_user_id?: SortOrder\n    target_user_id?: SortOrder\n    action_type?: SortOrder\n    entity_type?: SortOrder\n    entity_id?: SortOrder\n    action_detail?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussionboard_platform_settingCountOrderByAggregateInput = {\n    id?: SortOrder\n    name?: SortOrder\n    value?: SortOrder\n    type?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_platform_settingMaxOrderByAggregateInput = {\n    id?: SortOrder\n    name?: SortOrder\n    value?: SortOrder\n    type?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_platform_settingMinOrderByAggregateInput = {\n    id?: SortOrder\n    name?: SortOrder\n    value?: SortOrder\n    type?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_user_profileCreateNestedOneWithoutUser_profile_user_idInput = {\n    create?: XOR<discussionboard_user_profileCreateWithoutUser_profile_user_idInput, discussionboard_user_profileUncheckedCreateWithoutUser_profile_user_idInput>\n    connectOrCreate?: discussionboard_user_profileCreateOrConnectWithoutUser_profile_user_idInput\n    connect?: discussionboard_user_profileWhereUniqueInput\n  }\n\n  export type discussionboard_memberCreateNestedOneWithoutMember_user_idInput = {\n    create?: XOR<discussionboard_memberCreateWithoutMember_user_idInput, discussionboard_memberUncheckedCreateWithoutMember_user_idInput>\n    connectOrCreate?: discussionboard_memberCreateOrConnectWithoutMember_user_idInput\n    connect?: discussionboard_memberWhereUniqueInput\n  }\n\n  export type discussionboard_moderatorCreateNestedOneWithoutModerator_user_idInput = {\n    create?: XOR<discussionboard_moderatorCreateWithoutModerator_user_idInput, discussionboard_moderatorUncheckedCreateWithoutModerator_user_idInput>\n    connectOrCreate?: discussionboard_moderatorCreateOrConnectWithoutModerator_user_idInput\n    connect?: discussionboard_moderatorWhereUniqueInput\n  }\n\n  export type discussionboard_adminCreateNestedOneWithoutAdmin_user_idInput = {\n    create?: XOR<discussionboard_adminCreateWithoutAdmin_user_idInput, discussionboard_adminUncheckedCreateWithoutAdmin_user_idInput>\n    connectOrCreate?: discussionboard_adminCreateOrConnectWithoutAdmin_user_idInput\n    connect?: discussionboard_adminWhereUniqueInput\n  }\n\n  export type discussionboard_commentsCreateNestedManyWithoutAuthorInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutAuthorInput, discussionboard_commentsUncheckedCreateWithoutAuthorInput> | discussionboard_commentsCreateWithoutAuthorInput[] | discussionboard_commentsUncheckedCreateWithoutAuthorInput[]\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutAuthorInput | discussionboard_commentsCreateOrConnectWithoutAuthorInput[]\n    createMany?: discussionboard_commentsCreateManyAuthorInputEnvelope\n    connect?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n  }\n\n  export type discussionboard_likesCreateNestedManyWithoutUserInput = {\n    create?: XOR<discussionboard_likesCreateWithoutUserInput, discussionboard_likesUncheckedCreateWithoutUserInput> | discussionboard_likesCreateWithoutUserInput[] | discussionboard_likesUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussionboard_likesCreateOrConnectWithoutUserInput | discussionboard_likesCreateOrConnectWithoutUserInput[]\n    createMany?: discussionboard_likesCreateManyUserInputEnvelope\n    connect?: discussionboard_likesWhereUniqueInput | discussionboard_likesWhereUniqueInput[]\n  }\n\n  export type discussionboard_reportsCreateNestedManyWithoutUserInput = {\n    create?: XOR<discussionboard_reportsCreateWithoutUserInput, discussionboard_reportsUncheckedCreateWithoutUserInput> | discussionboard_reportsCreateWithoutUserInput[] | discussionboard_reportsUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussionboard_reportsCreateOrConnectWithoutUserInput | discussionboard_reportsCreateOrConnectWithoutUserInput[]\n    createMany?: discussionboard_reportsCreateManyUserInputEnvelope\n    connect?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n  }\n\n  export type discussionboard_moderation_actionCreateNestedManyWithoutActorInput = {\n    create?: XOR<discussionboard_moderation_actionCreateWithoutActorInput, discussionboard_moderation_actionUncheckedCreateWithoutActorInput> | discussionboard_moderation_actionCreateWithoutActorInput[] | discussionboard_moderation_actionUncheckedCreateWithoutActorInput[]\n    connectOrCreate?: discussionboard_moderation_actionCreateOrConnectWithoutActorInput | discussionboard_moderation_actionCreateOrConnectWithoutActorInput[]\n    createMany?: discussionboard_moderation_actionCreateManyActorInputEnvelope\n    connect?: discussionboard_moderation_actionWhereUniqueInput | discussionboard_moderation_actionWhereUniqueInput[]\n  }\n\n  export type discussionboard_moderation_actionCreateNestedManyWithoutTarget_userInput = {\n    create?: XOR<discussionboard_moderation_actionCreateWithoutTarget_userInput, discussionboard_moderation_actionUncheckedCreateWithoutTarget_userInput> | discussionboard_moderation_actionCreateWithoutTarget_userInput[] | discussionboard_moderation_actionUncheckedCreateWithoutTarget_userInput[]\n    connectOrCreate?: discussionboard_moderation_actionCreateOrConnectWithoutTarget_userInput | discussionboard_moderation_actionCreateOrConnectWithoutTarget_userInput[]\n    createMany?: discussionboard_moderation_actionCreateManyTarget_userInputEnvelope\n    connect?: discussionboard_moderation_actionWhereUniqueInput | discussionboard_moderation_actionWhereUniqueInput[]\n  }\n\n  export type discussionboard_report_reviewCreateNestedManyWithoutReviewerInput = {\n    create?: XOR<discussionboard_report_reviewCreateWithoutReviewerInput, discussionboard_report_reviewUncheckedCreateWithoutReviewerInput> | discussionboard_report_reviewCreateWithoutReviewerInput[] | discussionboard_report_reviewUncheckedCreateWithoutReviewerInput[]\n    connectOrCreate?: discussionboard_report_reviewCreateOrConnectWithoutReviewerInput | discussionboard_report_reviewCreateOrConnectWithoutReviewerInput[]\n    createMany?: discussionboard_report_reviewCreateManyReviewerInputEnvelope\n    connect?: discussionboard_report_reviewWhereUniqueInput | discussionboard_report_reviewWhereUniqueInput[]\n  }\n\n  export type discussionboard_warningCreateNestedManyWithoutIssuerInput = {\n    create?: XOR<discussionboard_warningCreateWithoutIssuerInput, discussionboard_warningUncheckedCreateWithoutIssuerInput> | discussionboard_warningCreateWithoutIssuerInput[] | discussionboard_warningUncheckedCreateWithoutIssuerInput[]\n    connectOrCreate?: discussionboard_warningCreateOrConnectWithoutIssuerInput | discussionboard_warningCreateOrConnectWithoutIssuerInput[]\n    createMany?: discussionboard_warningCreateManyIssuerInputEnvelope\n    connect?: discussionboard_warningWhereUniqueInput | discussionboard_warningWhereUniqueInput[]\n  }\n\n  export type discussionboard_warningCreateNestedManyWithoutRecipientInput = {\n    create?: XOR<discussionboard_warningCreateWithoutRecipientInput, discussionboard_warningUncheckedCreateWithoutRecipientInput> | discussionboard_warningCreateWithoutRecipientInput[] | discussionboard_warningUncheckedCreateWithoutRecipientInput[]\n    connectOrCreate?: discussionboard_warningCreateOrConnectWithoutRecipientInput | discussionboard_warningCreateOrConnectWithoutRecipientInput[]\n    createMany?: discussionboard_warningCreateManyRecipientInputEnvelope\n    connect?: discussionboard_warningWhereUniqueInput | discussionboard_warningWhereUniqueInput[]\n  }\n\n  export type discussionboard_banCreateNestedManyWithoutBanned_userInput = {\n    create?: XOR<discussionboard_banCreateWithoutBanned_userInput, discussionboard_banUncheckedCreateWithoutBanned_userInput> | discussionboard_banCreateWithoutBanned_userInput[] | discussionboard_banUncheckedCreateWithoutBanned_userInput[]\n    connectOrCreate?: discussionboard_banCreateOrConnectWithoutBanned_userInput | discussionboard_banCreateOrConnectWithoutBanned_userInput[]\n    createMany?: discussionboard_banCreateManyBanned_userInputEnvelope\n    connect?: discussionboard_banWhereUniqueInput | discussionboard_banWhereUniqueInput[]\n  }\n\n  export type discussionboard_banCreateNestedManyWithoutBan_actorInput = {\n    create?: XOR<discussionboard_banCreateWithoutBan_actorInput, discussionboard_banUncheckedCreateWithoutBan_actorInput> | discussionboard_banCreateWithoutBan_actorInput[] | discussionboard_banUncheckedCreateWithoutBan_actorInput[]\n    connectOrCreate?: discussionboard_banCreateOrConnectWithoutBan_actorInput | discussionboard_banCreateOrConnectWithoutBan_actorInput[]\n    createMany?: discussionboard_banCreateManyBan_actorInputEnvelope\n    connect?: discussionboard_banWhereUniqueInput | discussionboard_banWhereUniqueInput[]\n  }\n\n  export type discussionboard_notificationCreateNestedManyWithoutRecipient_userInput = {\n    create?: XOR<discussionboard_notificationCreateWithoutRecipient_userInput, discussionboard_notificationUncheckedCreateWithoutRecipient_userInput> | discussionboard_notificationCreateWithoutRecipient_userInput[] | discussionboard_notificationUncheckedCreateWithoutRecipient_userInput[]\n    connectOrCreate?: discussionboard_notificationCreateOrConnectWithoutRecipient_userInput | discussionboard_notificationCreateOrConnectWithoutRecipient_userInput[]\n    createMany?: discussionboard_notificationCreateManyRecipient_userInputEnvelope\n    connect?: discussionboard_notificationWhereUniqueInput | discussionboard_notificationWhereUniqueInput[]\n  }\n\n  export type discussionboard_notificationCreateNestedManyWithoutActor_userInput = {\n    create?: XOR<discussionboard_notificationCreateWithoutActor_userInput, discussionboard_notificationUncheckedCreateWithoutActor_userInput> | discussionboard_notificationCreateWithoutActor_userInput[] | discussionboard_notificationUncheckedCreateWithoutActor_userInput[]\n    connectOrCreate?: discussionboard_notificationCreateOrConnectWithoutActor_userInput | discussionboard_notificationCreateOrConnectWithoutActor_userInput[]\n    createMany?: discussionboard_notificationCreateManyActor_userInputEnvelope\n    connect?: discussionboard_notificationWhereUniqueInput | discussionboard_notificationWhereUniqueInput[]\n  }\n\n  export type discussionboard_notification_preferenceCreateNestedOneWithoutUserInput = {\n    create?: XOR<discussionboard_notification_preferenceCreateWithoutUserInput, discussionboard_notification_preferenceUncheckedCreateWithoutUserInput>\n    connectOrCreate?: discussionboard_notification_preferenceCreateOrConnectWithoutUserInput\n    connect?: discussionboard_notification_preferenceWhereUniqueInput\n  }\n\n  export type discussionboard_audit_logCreateNestedManyWithoutFk_audit_actor_userInput = {\n    create?: XOR<discussionboard_audit_logCreateWithoutFk_audit_actor_userInput, discussionboard_audit_logUncheckedCreateWithoutFk_audit_actor_userInput> | discussionboard_audit_logCreateWithoutFk_audit_actor_userInput[] | discussionboard_audit_logUncheckedCreateWithoutFk_audit_actor_userInput[]\n    connectOrCreate?: discussionboard_audit_logCreateOrConnectWithoutFk_audit_actor_userInput | discussionboard_audit_logCreateOrConnectWithoutFk_audit_actor_userInput[]\n    createMany?: discussionboard_audit_logCreateManyFk_audit_actor_userInputEnvelope\n    connect?: discussionboard_audit_logWhereUniqueInput | discussionboard_audit_logWhereUniqueInput[]\n  }\n\n  export type discussionboard_audit_logCreateNestedManyWithoutFk_audit_target_userInput = {\n    create?: XOR<discussionboard_audit_logCreateWithoutFk_audit_target_userInput, discussionboard_audit_logUncheckedCreateWithoutFk_audit_target_userInput> | discussionboard_audit_logCreateWithoutFk_audit_target_userInput[] | discussionboard_audit_logUncheckedCreateWithoutFk_audit_target_userInput[]\n    connectOrCreate?: discussionboard_audit_logCreateOrConnectWithoutFk_audit_target_userInput | discussionboard_audit_logCreateOrConnectWithoutFk_audit_target_userInput[]\n    createMany?: discussionboard_audit_logCreateManyFk_audit_target_userInputEnvelope\n    connect?: discussionboard_audit_logWhereUniqueInput | discussionboard_audit_logWhereUniqueInput[]\n  }\n\n  export type discussionboard_user_profileUncheckedCreateNestedOneWithoutUser_profile_user_idInput = {\n    create?: XOR<discussionboard_user_profileCreateWithoutUser_profile_user_idInput, discussionboard_user_profileUncheckedCreateWithoutUser_profile_user_idInput>\n    connectOrCreate?: discussionboard_user_profileCreateOrConnectWithoutUser_profile_user_idInput\n    connect?: discussionboard_user_profileWhereUniqueInput\n  }\n\n  export type discussionboard_memberUncheckedCreateNestedOneWithoutMember_user_idInput = {\n    create?: XOR<discussionboard_memberCreateWithoutMember_user_idInput, discussionboard_memberUncheckedCreateWithoutMember_user_idInput>\n    connectOrCreate?: discussionboard_memberCreateOrConnectWithoutMember_user_idInput\n    connect?: discussionboard_memberWhereUniqueInput\n  }\n\n  export type discussionboard_moderatorUncheckedCreateNestedOneWithoutModerator_user_idInput = {\n    create?: XOR<discussionboard_moderatorCreateWithoutModerator_user_idInput, discussionboard_moderatorUncheckedCreateWithoutModerator_user_idInput>\n    connectOrCreate?: discussionboard_moderatorCreateOrConnectWithoutModerator_user_idInput\n    connect?: discussionboard_moderatorWhereUniqueInput\n  }\n\n  export type discussionboard_adminUncheckedCreateNestedOneWithoutAdmin_user_idInput = {\n    create?: XOR<discussionboard_adminCreateWithoutAdmin_user_idInput, discussionboard_adminUncheckedCreateWithoutAdmin_user_idInput>\n    connectOrCreate?: discussionboard_adminCreateOrConnectWithoutAdmin_user_idInput\n    connect?: discussionboard_adminWhereUniqueInput\n  }\n\n  export type discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutAuthorInput, discussionboard_commentsUncheckedCreateWithoutAuthorInput> | discussionboard_commentsCreateWithoutAuthorInput[] | discussionboard_commentsUncheckedCreateWithoutAuthorInput[]\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutAuthorInput | discussionboard_commentsCreateOrConnectWithoutAuthorInput[]\n    createMany?: discussionboard_commentsCreateManyAuthorInputEnvelope\n    connect?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n  }\n\n  export type discussionboard_likesUncheckedCreateNestedManyWithoutUserInput = {\n    create?: XOR<discussionboard_likesCreateWithoutUserInput, discussionboard_likesUncheckedCreateWithoutUserInput> | discussionboard_likesCreateWithoutUserInput[] | discussionboard_likesUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussionboard_likesCreateOrConnectWithoutUserInput | discussionboard_likesCreateOrConnectWithoutUserInput[]\n    createMany?: discussionboard_likesCreateManyUserInputEnvelope\n    connect?: discussionboard_likesWhereUniqueInput | discussionboard_likesWhereUniqueInput[]\n  }\n\n  export type discussionboard_reportsUncheckedCreateNestedManyWithoutUserInput = {\n    create?: XOR<discussionboard_reportsCreateWithoutUserInput, discussionboard_reportsUncheckedCreateWithoutUserInput> | discussionboard_reportsCreateWithoutUserInput[] | discussionboard_reportsUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussionboard_reportsCreateOrConnectWithoutUserInput | discussionboard_reportsCreateOrConnectWithoutUserInput[]\n    createMany?: discussionboard_reportsCreateManyUserInputEnvelope\n    connect?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n  }\n\n  export type discussionboard_moderation_actionUncheckedCreateNestedManyWithoutActorInput = {\n    create?: XOR<discussionboard_moderation_actionCreateWithoutActorInput, discussionboard_moderation_actionUncheckedCreateWithoutActorInput> | discussionboard_moderation_actionCreateWithoutActorInput[] | discussionboard_moderation_actionUncheckedCreateWithoutActorInput[]\n    connectOrCreate?: discussionboard_moderation_actionCreateOrConnectWithoutActorInput | discussionboard_moderation_actionCreateOrConnectWithoutActorInput[]\n    createMany?: discussionboard_moderation_actionCreateManyActorInputEnvelope\n    connect?: discussionboard_moderation_actionWhereUniqueInput | discussionboard_moderation_actionWhereUniqueInput[]\n  }\n\n  export type discussionboard_moderation_actionUncheckedCreateNestedManyWithoutTarget_userInput = {\n    create?: XOR<discussionboard_moderation_actionCreateWithoutTarget_userInput, discussionboard_moderation_actionUncheckedCreateWithoutTarget_userInput> | discussionboard_moderation_actionCreateWithoutTarget_userInput[] | discussionboard_moderation_actionUncheckedCreateWithoutTarget_userInput[]\n    connectOrCreate?: discussionboard_moderation_actionCreateOrConnectWithoutTarget_userInput | discussionboard_moderation_actionCreateOrConnectWithoutTarget_userInput[]\n    createMany?: discussionboard_moderation_actionCreateManyTarget_userInputEnvelope\n    connect?: discussionboard_moderation_actionWhereUniqueInput | discussionboard_moderation_actionWhereUniqueInput[]\n  }\n\n  export type discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewerInput = {\n    create?: XOR<discussionboard_report_reviewCreateWithoutReviewerInput, discussionboard_report_reviewUncheckedCreateWithoutReviewerInput> | discussionboard_report_reviewCreateWithoutReviewerInput[] | discussionboard_report_reviewUncheckedCreateWithoutReviewerInput[]\n    connectOrCreate?: discussionboard_report_reviewCreateOrConnectWithoutReviewerInput | discussionboard_report_reviewCreateOrConnectWithoutReviewerInput[]\n    createMany?: discussionboard_report_reviewCreateManyReviewerInputEnvelope\n    connect?: discussionboard_report_reviewWhereUniqueInput | discussionboard_report_reviewWhereUniqueInput[]\n  }\n\n  export type discussionboard_warningUncheckedCreateNestedManyWithoutIssuerInput = {\n    create?: XOR<discussionboard_warningCreateWithoutIssuerInput, discussionboard_warningUncheckedCreateWithoutIssuerInput> | discussionboard_warningCreateWithoutIssuerInput[] | discussionboard_warningUncheckedCreateWithoutIssuerInput[]\n    connectOrCreate?: discussionboard_warningCreateOrConnectWithoutIssuerInput | discussionboard_warningCreateOrConnectWithoutIssuerInput[]\n    createMany?: discussionboard_warningCreateManyIssuerInputEnvelope\n    connect?: discussionboard_warningWhereUniqueInput | discussionboard_warningWhereUniqueInput[]\n  }\n\n  export type discussionboard_warningUncheckedCreateNestedManyWithoutRecipientInput = {\n    create?: XOR<discussionboard_warningCreateWithoutRecipientInput, discussionboard_warningUncheckedCreateWithoutRecipientInput> | discussionboard_warningCreateWithoutRecipientInput[] | discussionboard_warningUncheckedCreateWithoutRecipientInput[]\n    connectOrCreate?: discussionboard_warningCreateOrConnectWithoutRecipientInput | discussionboard_warningCreateOrConnectWithoutRecipientInput[]\n    createMany?: discussionboard_warningCreateManyRecipientInputEnvelope\n    connect?: discussionboard_warningWhereUniqueInput | discussionboard_warningWhereUniqueInput[]\n  }\n\n  export type discussionboard_banUncheckedCreateNestedManyWithoutBanned_userInput = {\n    create?: XOR<discussionboard_banCreateWithoutBanned_userInput, discussionboard_banUncheckedCreateWithoutBanned_userInput> | discussionboard_banCreateWithoutBanned_userInput[] | discussionboard_banUncheckedCreateWithoutBanned_userInput[]\n    connectOrCreate?: discussionboard_banCreateOrConnectWithoutBanned_userInput | discussionboard_banCreateOrConnectWithoutBanned_userInput[]\n    createMany?: discussionboard_banCreateManyBanned_userInputEnvelope\n    connect?: discussionboard_banWhereUniqueInput | discussionboard_banWhereUniqueInput[]\n  }\n\n  export type discussionboard_banUncheckedCreateNestedManyWithoutBan_actorInput = {\n    create?: XOR<discussionboard_banCreateWithoutBan_actorInput, discussionboard_banUncheckedCreateWithoutBan_actorInput> | discussionboard_banCreateWithoutBan_actorInput[] | discussionboard_banUncheckedCreateWithoutBan_actorInput[]\n    connectOrCreate?: discussionboard_banCreateOrConnectWithoutBan_actorInput | discussionboard_banCreateOrConnectWithoutBan_actorInput[]\n    createMany?: discussionboard_banCreateManyBan_actorInputEnvelope\n    connect?: discussionboard_banWhereUniqueInput | discussionboard_banWhereUniqueInput[]\n  }\n\n  export type discussionboard_notificationUncheckedCreateNestedManyWithoutRecipient_userInput = {\n    create?: XOR<discussionboard_notificationCreateWithoutRecipient_userInput, discussionboard_notificationUncheckedCreateWithoutRecipient_userInput> | discussionboard_notificationCreateWithoutRecipient_userInput[] | discussionboard_notificationUncheckedCreateWithoutRecipient_userInput[]\n    connectOrCreate?: discussionboard_notificationCreateOrConnectWithoutRecipient_userInput | discussionboard_notificationCreateOrConnectWithoutRecipient_userInput[]\n    createMany?: discussionboard_notificationCreateManyRecipient_userInputEnvelope\n    connect?: discussionboard_notificationWhereUniqueInput | discussionboard_notificationWhereUniqueInput[]\n  }\n\n  export type discussionboard_notificationUncheckedCreateNestedManyWithoutActor_userInput = {\n    create?: XOR<discussionboard_notificationCreateWithoutActor_userInput, discussionboard_notificationUncheckedCreateWithoutActor_userInput> | discussionboard_notificationCreateWithoutActor_userInput[] | discussionboard_notificationUncheckedCreateWithoutActor_userInput[]\n    connectOrCreate?: discussionboard_notificationCreateOrConnectWithoutActor_userInput | discussionboard_notificationCreateOrConnectWithoutActor_userInput[]\n    createMany?: discussionboard_notificationCreateManyActor_userInputEnvelope\n    connect?: discussionboard_notificationWhereUniqueInput | discussionboard_notificationWhereUniqueInput[]\n  }\n\n  export type discussionboard_notification_preferenceUncheckedCreateNestedOneWithoutUserInput = {\n    create?: XOR<discussionboard_notification_preferenceCreateWithoutUserInput, discussionboard_notification_preferenceUncheckedCreateWithoutUserInput>\n    connectOrCreate?: discussionboard_notification_preferenceCreateOrConnectWithoutUserInput\n    connect?: discussionboard_notification_preferenceWhereUniqueInput\n  }\n\n  export type discussionboard_audit_logUncheckedCreateNestedManyWithoutFk_audit_actor_userInput = {\n    create?: XOR<discussionboard_audit_logCreateWithoutFk_audit_actor_userInput, discussionboard_audit_logUncheckedCreateWithoutFk_audit_actor_userInput> | discussionboard_audit_logCreateWithoutFk_audit_actor_userInput[] | discussionboard_audit_logUncheckedCreateWithoutFk_audit_actor_userInput[]\n    connectOrCreate?: discussionboard_audit_logCreateOrConnectWithoutFk_audit_actor_userInput | discussionboard_audit_logCreateOrConnectWithoutFk_audit_actor_userInput[]\n    createMany?: discussionboard_audit_logCreateManyFk_audit_actor_userInputEnvelope\n    connect?: discussionboard_audit_logWhereUniqueInput | discussionboard_audit_logWhereUniqueInput[]\n  }\n\n  export type discussionboard_audit_logUncheckedCreateNestedManyWithoutFk_audit_target_userInput = {\n    create?: XOR<discussionboard_audit_logCreateWithoutFk_audit_target_userInput, discussionboard_audit_logUncheckedCreateWithoutFk_audit_target_userInput> | discussionboard_audit_logCreateWithoutFk_audit_target_userInput[] | discussionboard_audit_logUncheckedCreateWithoutFk_audit_target_userInput[]\n    connectOrCreate?: discussionboard_audit_logCreateOrConnectWithoutFk_audit_target_userInput | discussionboard_audit_logCreateOrConnectWithoutFk_audit_target_userInput[]\n    createMany?: discussionboard_audit_logCreateManyFk_audit_target_userInputEnvelope\n    connect?: discussionboard_audit_logWhereUniqueInput | discussionboard_audit_logWhereUniqueInput[]\n  }\n\n  export type StringFieldUpdateOperationsInput = {\n    set?: string\n  }\n\n  export type BoolFieldUpdateOperationsInput = {\n    set?: boolean\n  }\n\n  export type DateTimeFieldUpdateOperationsInput = {\n    set?: Date | string\n  }\n\n  export type discussionboard_user_profileUpdateOneWithoutUser_profile_user_idNestedInput = {\n    create?: XOR<discussionboard_user_profileCreateWithoutUser_profile_user_idInput, discussionboard_user_profileUncheckedCreateWithoutUser_profile_user_idInput>\n    connectOrCreate?: discussionboard_user_profileCreateOrConnectWithoutUser_profile_user_idInput\n    upsert?: discussionboard_user_profileUpsertWithoutUser_profile_user_idInput\n    disconnect?: discussionboard_user_profileWhereInput | boolean\n    delete?: discussionboard_user_profileWhereInput | boolean\n    connect?: discussionboard_user_profileWhereUniqueInput\n    update?: XOR<XOR<discussionboard_user_profileUpdateToOneWithWhereWithoutUser_profile_user_idInput, discussionboard_user_profileUpdateWithoutUser_profile_user_idInput>, discussionboard_user_profileUncheckedUpdateWithoutUser_profile_user_idInput>\n  }\n\n  export type discussionboard_memberUpdateOneWithoutMember_user_idNestedInput = {\n    create?: XOR<discussionboard_memberCreateWithoutMember_user_idInput, discussionboard_memberUncheckedCreateWithoutMember_user_idInput>\n    connectOrCreate?: discussionboard_memberCreateOrConnectWithoutMember_user_idInput\n    upsert?: discussionboard_memberUpsertWithoutMember_user_idInput\n    disconnect?: discussionboard_memberWhereInput | boolean\n    delete?: discussionboard_memberWhereInput | boolean\n    connect?: discussionboard_memberWhereUniqueInput\n    update?: XOR<XOR<discussionboard_memberUpdateToOneWithWhereWithoutMember_user_idInput, discussionboard_memberUpdateWithoutMember_user_idInput>, discussionboard_memberUncheckedUpdateWithoutMember_user_idInput>\n  }\n\n  export type discussionboard_moderatorUpdateOneWithoutModerator_user_idNestedInput = {\n    create?: XOR<discussionboard_moderatorCreateWithoutModerator_user_idInput, discussionboard_moderatorUncheckedCreateWithoutModerator_user_idInput>\n    connectOrCreate?: discussionboard_moderatorCreateOrConnectWithoutModerator_user_idInput\n    upsert?: discussionboard_moderatorUpsertWithoutModerator_user_idInput\n    disconnect?: discussionboard_moderatorWhereInput | boolean\n    delete?: discussionboard_moderatorWhereInput | boolean\n    connect?: discussionboard_moderatorWhereUniqueInput\n    update?: XOR<XOR<discussionboard_moderatorUpdateToOneWithWhereWithoutModerator_user_idInput, discussionboard_moderatorUpdateWithoutModerator_user_idInput>, discussionboard_moderatorUncheckedUpdateWithoutModerator_user_idInput>\n  }\n\n  export type discussionboard_adminUpdateOneWithoutAdmin_user_idNestedInput = {\n    create?: XOR<discussionboard_adminCreateWithoutAdmin_user_idInput, discussionboard_adminUncheckedCreateWithoutAdmin_user_idInput>\n    connectOrCreate?: discussionboard_adminCreateOrConnectWithoutAdmin_user_idInput\n    upsert?: discussionboard_adminUpsertWithoutAdmin_user_idInput\n    disconnect?: discussionboard_adminWhereInput | boolean\n    delete?: discussionboard_adminWhereInput | boolean\n    connect?: discussionboard_adminWhereUniqueInput\n    update?: XOR<XOR<discussionboard_adminUpdateToOneWithWhereWithoutAdmin_user_idInput, discussionboard_adminUpdateWithoutAdmin_user_idInput>, discussionboard_adminUncheckedUpdateWithoutAdmin_user_idInput>\n  }\n\n  export type discussionboard_commentsUpdateManyWithoutAuthorNestedInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutAuthorInput, discussionboard_commentsUncheckedCreateWithoutAuthorInput> | discussionboard_commentsCreateWithoutAuthorInput[] | discussionboard_commentsUncheckedCreateWithoutAuthorInput[]\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutAuthorInput | discussionboard_commentsCreateOrConnectWithoutAuthorInput[]\n    upsert?: discussionboard_commentsUpsertWithWhereUniqueWithoutAuthorInput | discussionboard_commentsUpsertWithWhereUniqueWithoutAuthorInput[]\n    createMany?: discussionboard_commentsCreateManyAuthorInputEnvelope\n    set?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    disconnect?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    delete?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    connect?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    update?: discussionboard_commentsUpdateWithWhereUniqueWithoutAuthorInput | discussionboard_commentsUpdateWithWhereUniqueWithoutAuthorInput[]\n    updateMany?: discussionboard_commentsUpdateManyWithWhereWithoutAuthorInput | discussionboard_commentsUpdateManyWithWhereWithoutAuthorInput[]\n    deleteMany?: discussionboard_commentsScalarWhereInput | discussionboard_commentsScalarWhereInput[]\n  }\n\n  export type discussionboard_likesUpdateManyWithoutUserNestedInput = {\n    create?: XOR<discussionboard_likesCreateWithoutUserInput, discussionboard_likesUncheckedCreateWithoutUserInput> | discussionboard_likesCreateWithoutUserInput[] | discussionboard_likesUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussionboard_likesCreateOrConnectWithoutUserInput | discussionboard_likesCreateOrConnectWithoutUserInput[]\n    upsert?: discussionboard_likesUpsertWithWhereUniqueWithoutUserInput | discussionboard_likesUpsertWithWhereUniqueWithoutUserInput[]\n    createMany?: discussionboard_likesCreateManyUserInputEnvelope\n    set?: discussionboard_likesWhereUniqueInput | discussionboard_likesWhereUniqueInput[]\n    disconnect?: discussionboard_likesWhereUniqueInput | discussionboard_likesWhereUniqueInput[]\n    delete?: discussionboard_likesWhereUniqueInput | discussionboard_likesWhereUniqueInput[]\n    connect?: discussionboard_likesWhereUniqueInput | discussionboard_likesWhereUniqueInput[]\n    update?: discussionboard_likesUpdateWithWhereUniqueWithoutUserInput | discussionboard_likesUpdateWithWhereUniqueWithoutUserInput[]\n    updateMany?: discussionboard_likesUpdateManyWithWhereWithoutUserInput | discussionboard_likesUpdateManyWithWhereWithoutUserInput[]\n    deleteMany?: discussionboard_likesScalarWhereInput | discussionboard_likesScalarWhereInput[]\n  }\n\n  export type discussionboard_reportsUpdateManyWithoutUserNestedInput = {\n    create?: XOR<discussionboard_reportsCreateWithoutUserInput, discussionboard_reportsUncheckedCreateWithoutUserInput> | discussionboard_reportsCreateWithoutUserInput[] | discussionboard_reportsUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussionboard_reportsCreateOrConnectWithoutUserInput | discussionboard_reportsCreateOrConnectWithoutUserInput[]\n    upsert?: discussionboard_reportsUpsertWithWhereUniqueWithoutUserInput | discussionboard_reportsUpsertWithWhereUniqueWithoutUserInput[]\n    createMany?: discussionboard_reportsCreateManyUserInputEnvelope\n    set?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    disconnect?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    delete?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    connect?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    update?: discussionboard_reportsUpdateWithWhereUniqueWithoutUserInput | discussionboard_reportsUpdateWithWhereUniqueWithoutUserInput[]\n    updateMany?: discussionboard_reportsUpdateManyWithWhereWithoutUserInput | discussionboard_reportsUpdateManyWithWhereWithoutUserInput[]\n    deleteMany?: discussionboard_reportsScalarWhereInput | discussionboard_reportsScalarWhereInput[]\n  }\n\n  export type discussionboard_moderation_actionUpdateManyWithoutActorNestedInput = {\n    create?: XOR<discussionboard_moderation_actionCreateWithoutActorInput, discussionboard_moderation_actionUncheckedCreateWithoutActorInput> | discussionboard_moderation_actionCreateWithoutActorInput[] | discussionboard_moderation_actionUncheckedCreateWithoutActorInput[]\n    connectOrCreate?: discussionboard_moderation_actionCreateOrConnectWithoutActorInput | discussionboard_moderation_actionCreateOrConnectWithoutActorInput[]\n    upsert?: discussionboard_moderation_actionUpsertWithWhereUniqueWithoutActorInput | discussionboard_moderation_actionUpsertWithWhereUniqueWithoutActorInput[]\n    createMany?: discussionboard_moderation_actionCreateManyActorInputEnvelope\n    set?: discussionboard_moderation_actionWhereUniqueInput | discussionboard_moderation_actionWhereUniqueInput[]\n    disconnect?: discussionboard_moderation_actionWhereUniqueInput | discussionboard_moderation_actionWhereUniqueInput[]\n    delete?: discussionboard_moderation_actionWhereUniqueInput | discussionboard_moderation_actionWhereUniqueInput[]\n    connect?: discussionboard_moderation_actionWhereUniqueInput | discussionboard_moderation_actionWhereUniqueInput[]\n    update?: discussionboard_moderation_actionUpdateWithWhereUniqueWithoutActorInput | discussionboard_moderation_actionUpdateWithWhereUniqueWithoutActorInput[]\n    updateMany?: discussionboard_moderation_actionUpdateManyWithWhereWithoutActorInput | discussionboard_moderation_actionUpdateManyWithWhereWithoutActorInput[]\n    deleteMany?: discussionboard_moderation_actionScalarWhereInput | discussionboard_moderation_actionScalarWhereInput[]\n  }\n\n  export type discussionboard_moderation_actionUpdateManyWithoutTarget_userNestedInput = {\n    create?: XOR<discussionboard_moderation_actionCreateWithoutTarget_userInput, discussionboard_moderation_actionUncheckedCreateWithoutTarget_userInput> | discussionboard_moderation_actionCreateWithoutTarget_userInput[] | discussionboard_moderation_actionUncheckedCreateWithoutTarget_userInput[]\n    connectOrCreate?: discussionboard_moderation_actionCreateOrConnectWithoutTarget_userInput | discussionboard_moderation_actionCreateOrConnectWithoutTarget_userInput[]\n    upsert?: discussionboard_moderation_actionUpsertWithWhereUniqueWithoutTarget_userInput | discussionboard_moderation_actionUpsertWithWhereUniqueWithoutTarget_userInput[]\n    createMany?: discussionboard_moderation_actionCreateManyTarget_userInputEnvelope\n    set?: discussionboard_moderation_actionWhereUniqueInput | discussionboard_moderation_actionWhereUniqueInput[]\n    disconnect?: discussionboard_moderation_actionWhereUniqueInput | discussionboard_moderation_actionWhereUniqueInput[]\n    delete?: discussionboard_moderation_actionWhereUniqueInput | discussionboard_moderation_actionWhereUniqueInput[]\n    connect?: discussionboard_moderation_actionWhereUniqueInput | discussionboard_moderation_actionWhereUniqueInput[]\n    update?: discussionboard_moderation_actionUpdateWithWhereUniqueWithoutTarget_userInput | discussionboard_moderation_actionUpdateWithWhereUniqueWithoutTarget_userInput[]\n    updateMany?: discussionboard_moderation_actionUpdateManyWithWhereWithoutTarget_userInput | discussionboard_moderation_actionUpdateManyWithWhereWithoutTarget_userInput[]\n    deleteMany?: discussionboard_moderation_actionScalarWhereInput | discussionboard_moderation_actionScalarWhereInput[]\n  }\n\n  export type discussionboard_report_reviewUpdateManyWithoutReviewerNestedInput = {\n    create?: XOR<discussionboard_report_reviewCreateWithoutReviewerInput, discussionboard_report_reviewUncheckedCreateWithoutReviewerInput> | discussionboard_report_reviewCreateWithoutReviewerInput[] | discussionboard_report_reviewUncheckedCreateWithoutReviewerInput[]\n    connectOrCreate?: discussionboard_report_reviewCreateOrConnectWithoutReviewerInput | discussionboard_report_reviewCreateOrConnectWithoutReviewerInput[]\n    upsert?: discussionboard_report_reviewUpsertWithWhereUniqueWithoutReviewerInput | discussionboard_report_reviewUpsertWithWhereUniqueWithoutReviewerInput[]\n    createMany?: discussionboard_report_reviewCreateManyReviewerInputEnvelope\n    set?: discussionboard_report_reviewWhereUniqueInput | discussionboard_report_reviewWhereUniqueInput[]\n    disconnect?: discussionboard_report_reviewWhereUniqueInput | discussionboard_report_reviewWhereUniqueInput[]\n    delete?: discussionboard_report_reviewWhereUniqueInput | discussionboard_report_reviewWhereUniqueInput[]\n    connect?: discussionboard_report_reviewWhereUniqueInput | discussionboard_report_reviewWhereUniqueInput[]\n    update?: discussionboard_report_reviewUpdateWithWhereUniqueWithoutReviewerInput | discussionboard_report_reviewUpdateWithWhereUniqueWithoutReviewerInput[]\n    updateMany?: discussionboard_report_reviewUpdateManyWithWhereWithoutReviewerInput | discussionboard_report_reviewUpdateManyWithWhereWithoutReviewerInput[]\n    deleteMany?: discussionboard_report_reviewScalarWhereInput | discussionboard_report_reviewScalarWhereInput[]\n  }\n\n  export type discussionboard_warningUpdateManyWithoutIssuerNestedInput = {\n    create?: XOR<discussionboard_warningCreateWithoutIssuerInput, discussionboard_warningUncheckedCreateWithoutIssuerInput> | discussionboard_warningCreateWithoutIssuerInput[] | discussionboard_warningUncheckedCreateWithoutIssuerInput[]\n    connectOrCreate?: discussionboard_warningCreateOrConnectWithoutIssuerInput | discussionboard_warningCreateOrConnectWithoutIssuerInput[]\n    upsert?: discussionboard_warningUpsertWithWhereUniqueWithoutIssuerInput | discussionboard_warningUpsertWithWhereUniqueWithoutIssuerInput[]\n    createMany?: discussionboard_warningCreateManyIssuerInputEnvelope\n    set?: discussionboard_warningWhereUniqueInput | discussionboard_warningWhereUniqueInput[]\n    disconnect?: discussionboard_warningWhereUniqueInput | discussionboard_warningWhereUniqueInput[]\n    delete?: discussionboard_warningWhereUniqueInput | discussionboard_warningWhereUniqueInput[]\n    connect?: discussionboard_warningWhereUniqueInput | discussionboard_warningWhereUniqueInput[]\n    update?: discussionboard_warningUpdateWithWhereUniqueWithoutIssuerInput | discussionboard_warningUpdateWithWhereUniqueWithoutIssuerInput[]\n    updateMany?: discussionboard_warningUpdateManyWithWhereWithoutIssuerInput | discussionboard_warningUpdateManyWithWhereWithoutIssuerInput[]\n    deleteMany?: discussionboard_warningScalarWhereInput | discussionboard_warningScalarWhereInput[]\n  }\n\n  export type discussionboard_warningUpdateManyWithoutRecipientNestedInput = {\n    create?: XOR<discussionboard_warningCreateWithoutRecipientInput, discussionboard_warningUncheckedCreateWithoutRecipientInput> | discussionboard_warningCreateWithoutRecipientInput[] | discussionboard_warningUncheckedCreateWithoutRecipientInput[]\n    connectOrCreate?: discussionboard_warningCreateOrConnectWithoutRecipientInput | discussionboard_warningCreateOrConnectWithoutRecipientInput[]\n    upsert?: discussionboard_warningUpsertWithWhereUniqueWithoutRecipientInput | discussionboard_warningUpsertWithWhereUniqueWithoutRecipientInput[]\n    createMany?: discussionboard_warningCreateManyRecipientInputEnvelope\n    set?: discussionboard_warningWhereUniqueInput | discussionboard_warningWhereUniqueInput[]\n    disconnect?: discussionboard_warningWhereUniqueInput | discussionboard_warningWhereUniqueInput[]\n    delete?: discussionboard_warningWhereUniqueInput | discussionboard_warningWhereUniqueInput[]\n    connect?: discussionboard_warningWhereUniqueInput | discussionboard_warningWhereUniqueInput[]\n    update?: discussionboard_warningUpdateWithWhereUniqueWithoutRecipientInput | discussionboard_warningUpdateWithWhereUniqueWithoutRecipientInput[]\n    updateMany?: discussionboard_warningUpdateManyWithWhereWithoutRecipientInput | discussionboard_warningUpdateManyWithWhereWithoutRecipientInput[]\n    deleteMany?: discussionboard_warningScalarWhereInput | discussionboard_warningScalarWhereInput[]\n  }\n\n  export type discussionboard_banUpdateManyWithoutBanned_userNestedInput = {\n    create?: XOR<discussionboard_banCreateWithoutBanned_userInput, discussionboard_banUncheckedCreateWithoutBanned_userInput> | discussionboard_banCreateWithoutBanned_userInput[] | discussionboard_banUncheckedCreateWithoutBanned_userInput[]\n    connectOrCreate?: discussionboard_banCreateOrConnectWithoutBanned_userInput | discussionboard_banCreateOrConnectWithoutBanned_userInput[]\n    upsert?: discussionboard_banUpsertWithWhereUniqueWithoutBanned_userInput | discussionboard_banUpsertWithWhereUniqueWithoutBanned_userInput[]\n    createMany?: discussionboard_banCreateManyBanned_userInputEnvelope\n    set?: discussionboard_banWhereUniqueInput | discussionboard_banWhereUniqueInput[]\n    disconnect?: discussionboard_banWhereUniqueInput | discussionboard_banWhereUniqueInput[]\n    delete?: discussionboard_banWhereUniqueInput | discussionboard_banWhereUniqueInput[]\n    connect?: discussionboard_banWhereUniqueInput | discussionboard_banWhereUniqueInput[]\n    update?: discussionboard_banUpdateWithWhereUniqueWithoutBanned_userInput | discussionboard_banUpdateWithWhereUniqueWithoutBanned_userInput[]\n    updateMany?: discussionboard_banUpdateManyWithWhereWithoutBanned_userInput | discussionboard_banUpdateManyWithWhereWithoutBanned_userInput[]\n    deleteMany?: discussionboard_banScalarWhereInput | discussionboard_banScalarWhereInput[]\n  }\n\n  export type discussionboard_banUpdateManyWithoutBan_actorNestedInput = {\n    create?: XOR<discussionboard_banCreateWithoutBan_actorInput, discussionboard_banUncheckedCreateWithoutBan_actorInput> | discussionboard_banCreateWithoutBan_actorInput[] | discussionboard_banUncheckedCreateWithoutBan_actorInput[]\n    connectOrCreate?: discussionboard_banCreateOrConnectWithoutBan_actorInput | discussionboard_banCreateOrConnectWithoutBan_actorInput[]\n    upsert?: discussionboard_banUpsertWithWhereUniqueWithoutBan_actorInput | discussionboard_banUpsertWithWhereUniqueWithoutBan_actorInput[]\n    createMany?: discussionboard_banCreateManyBan_actorInputEnvelope\n    set?: discussionboard_banWhereUniqueInput | discussionboard_banWhereUniqueInput[]\n    disconnect?: discussionboard_banWhereUniqueInput | discussionboard_banWhereUniqueInput[]\n    delete?: discussionboard_banWhereUniqueInput | discussionboard_banWhereUniqueInput[]\n    connect?: discussionboard_banWhereUniqueInput | discussionboard_banWhereUniqueInput[]\n    update?: discussionboard_banUpdateWithWhereUniqueWithoutBan_actorInput | discussionboard_banUpdateWithWhereUniqueWithoutBan_actorInput[]\n    updateMany?: discussionboard_banUpdateManyWithWhereWithoutBan_actorInput | discussionboard_banUpdateManyWithWhereWithoutBan_actorInput[]\n    deleteMany?: discussionboard_banScalarWhereInput | discussionboard_banScalarWhereInput[]\n  }\n\n  export type discussionboard_notificationUpdateManyWithoutRecipient_userNestedInput = {\n    create?: XOR<discussionboard_notificationCreateWithoutRecipient_userInput, discussionboard_notificationUncheckedCreateWithoutRecipient_userInput> | discussionboard_notificationCreateWithoutRecipient_userInput[] | discussionboard_notificationUncheckedCreateWithoutRecipient_userInput[]\n    connectOrCreate?: discussionboard_notificationCreateOrConnectWithoutRecipient_userInput | discussionboard_notificationCreateOrConnectWithoutRecipient_userInput[]\n    upsert?: discussionboard_notificationUpsertWithWhereUniqueWithoutRecipient_userInput | discussionboard_notificationUpsertWithWhereUniqueWithoutRecipient_userInput[]\n    createMany?: discussionboard_notificationCreateManyRecipient_userInputEnvelope\n    set?: discussionboard_notificationWhereUniqueInput | discussionboard_notificationWhereUniqueInput[]\n    disconnect?: discussionboard_notificationWhereUniqueInput | discussionboard_notificationWhereUniqueInput[]\n    delete?: discussionboard_notificationWhereUniqueInput | discussionboard_notificationWhereUniqueInput[]\n    connect?: discussionboard_notificationWhereUniqueInput | discussionboard_notificationWhereUniqueInput[]\n    update?: discussionboard_notificationUpdateWithWhereUniqueWithoutRecipient_userInput | discussionboard_notificationUpdateWithWhereUniqueWithoutRecipient_userInput[]\n    updateMany?: discussionboard_notificationUpdateManyWithWhereWithoutRecipient_userInput | discussionboard_notificationUpdateManyWithWhereWithoutRecipient_userInput[]\n    deleteMany?: discussionboard_notificationScalarWhereInput | discussionboard_notificationScalarWhereInput[]\n  }\n\n  export type discussionboard_notificationUpdateManyWithoutActor_userNestedInput = {\n    create?: XOR<discussionboard_notificationCreateWithoutActor_userInput, discussionboard_notificationUncheckedCreateWithoutActor_userInput> | discussionboard_notificationCreateWithoutActor_userInput[] | discussionboard_notificationUncheckedCreateWithoutActor_userInput[]\n    connectOrCreate?: discussionboard_notificationCreateOrConnectWithoutActor_userInput | discussionboard_notificationCreateOrConnectWithoutActor_userInput[]\n    upsert?: discussionboard_notificationUpsertWithWhereUniqueWithoutActor_userInput | discussionboard_notificationUpsertWithWhereUniqueWithoutActor_userInput[]\n    createMany?: discussionboard_notificationCreateManyActor_userInputEnvelope\n    set?: discussionboard_notificationWhereUniqueInput | discussionboard_notificationWhereUniqueInput[]\n    disconnect?: discussionboard_notificationWhereUniqueInput | discussionboard_notificationWhereUniqueInput[]\n    delete?: discussionboard_notificationWhereUniqueInput | discussionboard_notificationWhereUniqueInput[]\n    connect?: discussionboard_notificationWhereUniqueInput | discussionboard_notificationWhereUniqueInput[]\n    update?: discussionboard_notificationUpdateWithWhereUniqueWithoutActor_userInput | discussionboard_notificationUpdateWithWhereUniqueWithoutActor_userInput[]\n    updateMany?: discussionboard_notificationUpdateManyWithWhereWithoutActor_userInput | discussionboard_notificationUpdateManyWithWhereWithoutActor_userInput[]\n    deleteMany?: discussionboard_notificationScalarWhereInput | discussionboard_notificationScalarWhereInput[]\n  }\n\n  export type discussionboard_notification_preferenceUpdateOneWithoutUserNestedInput = {\n    create?: XOR<discussionboard_notification_preferenceCreateWithoutUserInput, discussionboard_notification_preferenceUncheckedCreateWithoutUserInput>\n    connectOrCreate?: discussionboard_notification_preferenceCreateOrConnectWithoutUserInput\n    upsert?: discussionboard_notification_preferenceUpsertWithoutUserInput\n    disconnect?: discussionboard_notification_preferenceWhereInput | boolean\n    delete?: discussionboard_notification_preferenceWhereInput | boolean\n    connect?: discussionboard_notification_preferenceWhereUniqueInput\n    update?: XOR<XOR<discussionboard_notification_preferenceUpdateToOneWithWhereWithoutUserInput, discussionboard_notification_preferenceUpdateWithoutUserInput>, discussionboard_notification_preferenceUncheckedUpdateWithoutUserInput>\n  }\n\n  export type discussionboard_audit_logUpdateManyWithoutFk_audit_actor_userNestedInput = {\n    create?: XOR<discussionboard_audit_logCreateWithoutFk_audit_actor_userInput, discussionboard_audit_logUncheckedCreateWithoutFk_audit_actor_userInput> | discussionboard_audit_logCreateWithoutFk_audit_actor_userInput[] | discussionboard_audit_logUncheckedCreateWithoutFk_audit_actor_userInput[]\n    connectOrCreate?: discussionboard_audit_logCreateOrConnectWithoutFk_audit_actor_userInput | discussionboard_audit_logCreateOrConnectWithoutFk_audit_actor_userInput[]\n    upsert?: discussionboard_audit_logUpsertWithWhereUniqueWithoutFk_audit_actor_userInput | discussionboard_audit_logUpsertWithWhereUniqueWithoutFk_audit_actor_userInput[]\n    createMany?: discussionboard_audit_logCreateManyFk_audit_actor_userInputEnvelope\n    set?: discussionboard_audit_logWhereUniqueInput | discussionboard_audit_logWhereUniqueInput[]\n    disconnect?: discussionboard_audit_logWhereUniqueInput | discussionboard_audit_logWhereUniqueInput[]\n    delete?: discussionboard_audit_logWhereUniqueInput | discussionboard_audit_logWhereUniqueInput[]\n    connect?: discussionboard_audit_logWhereUniqueInput | discussionboard_audit_logWhereUniqueInput[]\n    update?: discussionboard_audit_logUpdateWithWhereUniqueWithoutFk_audit_actor_userInput | discussionboard_audit_logUpdateWithWhereUniqueWithoutFk_audit_actor_userInput[]\n    updateMany?: discussionboard_audit_logUpdateManyWithWhereWithoutFk_audit_actor_userInput | discussionboard_audit_logUpdateManyWithWhereWithoutFk_audit_actor_userInput[]\n    deleteMany?: discussionboard_audit_logScalarWhereInput | discussionboard_audit_logScalarWhereInput[]\n  }\n\n  export type discussionboard_audit_logUpdateManyWithoutFk_audit_target_userNestedInput = {\n    create?: XOR<discussionboard_audit_logCreateWithoutFk_audit_target_userInput, discussionboard_audit_logUncheckedCreateWithoutFk_audit_target_userInput> | discussionboard_audit_logCreateWithoutFk_audit_target_userInput[] | discussionboard_audit_logUncheckedCreateWithoutFk_audit_target_userInput[]\n    connectOrCreate?: discussionboard_audit_logCreateOrConnectWithoutFk_audit_target_userInput | discussionboard_audit_logCreateOrConnectWithoutFk_audit_target_userInput[]\n    upsert?: discussionboard_audit_logUpsertWithWhereUniqueWithoutFk_audit_target_userInput | discussionboard_audit_logUpsertWithWhereUniqueWithoutFk_audit_target_userInput[]\n    createMany?: discussionboard_audit_logCreateManyFk_audit_target_userInputEnvelope\n    set?: discussionboard_audit_logWhereUniqueInput | discussionboard_audit_logWhereUniqueInput[]\n    disconnect?: discussionboard_audit_logWhereUniqueInput | discussionboard_audit_logWhereUniqueInput[]\n    delete?: discussionboard_audit_logWhereUniqueInput | discussionboard_audit_logWhereUniqueInput[]\n    connect?: discussionboard_audit_logWhereUniqueInput | discussionboard_audit_logWhereUniqueInput[]\n    update?: discussionboard_audit_logUpdateWithWhereUniqueWithoutFk_audit_target_userInput | discussionboard_audit_logUpdateWithWhereUniqueWithoutFk_audit_target_userInput[]\n    updateMany?: discussionboard_audit_logUpdateManyWithWhereWithoutFk_audit_target_userInput | discussionboard_audit_logUpdateManyWithWhereWithoutFk_audit_target_userInput[]\n    deleteMany?: discussionboard_audit_logScalarWhereInput | discussionboard_audit_logScalarWhereInput[]\n  }\n\n  export type discussionboard_user_profileUncheckedUpdateOneWithoutUser_profile_user_idNestedInput = {\n    create?: XOR<discussionboard_user_profileCreateWithoutUser_profile_user_idInput, discussionboard_user_profileUncheckedCreateWithoutUser_profile_user_idInput>\n    connectOrCreate?: discussionboard_user_profileCreateOrConnectWithoutUser_profile_user_idInput\n    upsert?: discussionboard_user_profileUpsertWithoutUser_profile_user_idInput\n    disconnect?: discussionboard_user_profileWhereInput | boolean\n    delete?: discussionboard_user_profileWhereInput | boolean\n    connect?: discussionboard_user_profileWhereUniqueInput\n    update?: XOR<XOR<discussionboard_user_profileUpdateToOneWithWhereWithoutUser_profile_user_idInput, discussionboard_user_profileUpdateWithoutUser_profile_user_idInput>, discussionboard_user_profileUncheckedUpdateWithoutUser_profile_user_idInput>\n  }\n\n  export type discussionboard_memberUncheckedUpdateOneWithoutMember_user_idNestedInput = {\n    create?: XOR<discussionboard_memberCreateWithoutMember_user_idInput, discussionboard_memberUncheckedCreateWithoutMember_user_idInput>\n    connectOrCreate?: discussionboard_memberCreateOrConnectWithoutMember_user_idInput\n    upsert?: discussionboard_memberUpsertWithoutMember_user_idInput\n    disconnect?: discussionboard_memberWhereInput | boolean\n    delete?: discussionboard_memberWhereInput | boolean\n    connect?: discussionboard_memberWhereUniqueInput\n    update?: XOR<XOR<discussionboard_memberUpdateToOneWithWhereWithoutMember_user_idInput, discussionboard_memberUpdateWithoutMember_user_idInput>, discussionboard_memberUncheckedUpdateWithoutMember_user_idInput>\n  }\n\n  export type discussionboard_moderatorUncheckedUpdateOneWithoutModerator_user_idNestedInput = {\n    create?: XOR<discussionboard_moderatorCreateWithoutModerator_user_idInput, discussionboard_moderatorUncheckedCreateWithoutModerator_user_idInput>\n    connectOrCreate?: discussionboard_moderatorCreateOrConnectWithoutModerator_user_idInput\n    upsert?: discussionboard_moderatorUpsertWithoutModerator_user_idInput\n    disconnect?: discussionboard_moderatorWhereInput | boolean\n    delete?: discussionboard_moderatorWhereInput | boolean\n    connect?: discussionboard_moderatorWhereUniqueInput\n    update?: XOR<XOR<discussionboard_moderatorUpdateToOneWithWhereWithoutModerator_user_idInput, discussionboard_moderatorUpdateWithoutModerator_user_idInput>, discussionboard_moderatorUncheckedUpdateWithoutModerator_user_idInput>\n  }\n\n  export type discussionboard_adminUncheckedUpdateOneWithoutAdmin_user_idNestedInput = {\n    create?: XOR<discussionboard_adminCreateWithoutAdmin_user_idInput, discussionboard_adminUncheckedCreateWithoutAdmin_user_idInput>\n    connectOrCreate?: discussionboard_adminCreateOrConnectWithoutAdmin_user_idInput\n    upsert?: discussionboard_adminUpsertWithoutAdmin_user_idInput\n    disconnect?: discussionboard_adminWhereInput | boolean\n    delete?: discussionboard_adminWhereInput | boolean\n    connect?: discussionboard_adminWhereUniqueInput\n    update?: XOR<XOR<discussionboard_adminUpdateToOneWithWhereWithoutAdmin_user_idInput, discussionboard_adminUpdateWithoutAdmin_user_idInput>, discussionboard_adminUncheckedUpdateWithoutAdmin_user_idInput>\n  }\n\n  export type discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutAuthorInput, discussionboard_commentsUncheckedCreateWithoutAuthorInput> | discussionboard_commentsCreateWithoutAuthorInput[] | discussionboard_commentsUncheckedCreateWithoutAuthorInput[]\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutAuthorInput | discussionboard_commentsCreateOrConnectWithoutAuthorInput[]\n    upsert?: discussionboard_commentsUpsertWithWhereUniqueWithoutAuthorInput | discussionboard_commentsUpsertWithWhereUniqueWithoutAuthorInput[]\n    createMany?: discussionboard_commentsCreateManyAuthorInputEnvelope\n    set?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    disconnect?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    delete?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    connect?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    update?: discussionboard_commentsUpdateWithWhereUniqueWithoutAuthorInput | discussionboard_commentsUpdateWithWhereUniqueWithoutAuthorInput[]\n    updateMany?: discussionboard_commentsUpdateManyWithWhereWithoutAuthorInput | discussionboard_commentsUpdateManyWithWhereWithoutAuthorInput[]\n    deleteMany?: discussionboard_commentsScalarWhereInput | discussionboard_commentsScalarWhereInput[]\n  }\n\n  export type discussionboard_likesUncheckedUpdateManyWithoutUserNestedInput = {\n    create?: XOR<discussionboard_likesCreateWithoutUserInput, discussionboard_likesUncheckedCreateWithoutUserInput> | discussionboard_likesCreateWithoutUserInput[] | discussionboard_likesUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussionboard_likesCreateOrConnectWithoutUserInput | discussionboard_likesCreateOrConnectWithoutUserInput[]\n    upsert?: discussionboard_likesUpsertWithWhereUniqueWithoutUserInput | discussionboard_likesUpsertWithWhereUniqueWithoutUserInput[]\n    createMany?: discussionboard_likesCreateManyUserInputEnvelope\n    set?: discussionboard_likesWhereUniqueInput | discussionboard_likesWhereUniqueInput[]\n    disconnect?: discussionboard_likesWhereUniqueInput | discussionboard_likesWhereUniqueInput[]\n    delete?: discussionboard_likesWhereUniqueInput | discussionboard_likesWhereUniqueInput[]\n    connect?: discussionboard_likesWhereUniqueInput | discussionboard_likesWhereUniqueInput[]\n    update?: discussionboard_likesUpdateWithWhereUniqueWithoutUserInput | discussionboard_likesUpdateWithWhereUniqueWithoutUserInput[]\n    updateMany?: discussionboard_likesUpdateManyWithWhereWithoutUserInput | discussionboard_likesUpdateManyWithWhereWithoutUserInput[]\n    deleteMany?: discussionboard_likesScalarWhereInput | discussionboard_likesScalarWhereInput[]\n  }\n\n  export type discussionboard_reportsUncheckedUpdateManyWithoutUserNestedInput = {\n    create?: XOR<discussionboard_reportsCreateWithoutUserInput, discussionboard_reportsUncheckedCreateWithoutUserInput> | discussionboard_reportsCreateWithoutUserInput[] | discussionboard_reportsUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussionboard_reportsCreateOrConnectWithoutUserInput | discussionboard_reportsCreateOrConnectWithoutUserInput[]\n    upsert?: discussionboard_reportsUpsertWithWhereUniqueWithoutUserInput | discussionboard_reportsUpsertWithWhereUniqueWithoutUserInput[]\n    createMany?: discussionboard_reportsCreateManyUserInputEnvelope\n    set?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    disconnect?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    delete?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    connect?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    update?: discussionboard_reportsUpdateWithWhereUniqueWithoutUserInput | discussionboard_reportsUpdateWithWhereUniqueWithoutUserInput[]\n    updateMany?: discussionboard_reportsUpdateManyWithWhereWithoutUserInput | discussionboard_reportsUpdateManyWithWhereWithoutUserInput[]\n    deleteMany?: discussionboard_reportsScalarWhereInput | discussionboard_reportsScalarWhereInput[]\n  }\n\n  export type discussionboard_moderation_actionUncheckedUpdateManyWithoutActorNestedInput = {\n    create?: XOR<discussionboard_moderation_actionCreateWithoutActorInput, discussionboard_moderation_actionUncheckedCreateWithoutActorInput> | discussionboard_moderation_actionCreateWithoutActorInput[] | discussionboard_moderation_actionUncheckedCreateWithoutActorInput[]\n    connectOrCreate?: discussionboard_moderation_actionCreateOrConnectWithoutActorInput | discussionboard_moderation_actionCreateOrConnectWithoutActorInput[]\n    upsert?: discussionboard_moderation_actionUpsertWithWhereUniqueWithoutActorInput | discussionboard_moderation_actionUpsertWithWhereUniqueWithoutActorInput[]\n    createMany?: discussionboard_moderation_actionCreateManyActorInputEnvelope\n    set?: discussionboard_moderation_actionWhereUniqueInput | discussionboard_moderation_actionWhereUniqueInput[]\n    disconnect?: discussionboard_moderation_actionWhereUniqueInput | discussionboard_moderation_actionWhereUniqueInput[]\n    delete?: discussionboard_moderation_actionWhereUniqueInput | discussionboard_moderation_actionWhereUniqueInput[]\n    connect?: discussionboard_moderation_actionWhereUniqueInput | discussionboard_moderation_actionWhereUniqueInput[]\n    update?: discussionboard_moderation_actionUpdateWithWhereUniqueWithoutActorInput | discussionboard_moderation_actionUpdateWithWhereUniqueWithoutActorInput[]\n    updateMany?: discussionboard_moderation_actionUpdateManyWithWhereWithoutActorInput | discussionboard_moderation_actionUpdateManyWithWhereWithoutActorInput[]\n    deleteMany?: discussionboard_moderation_actionScalarWhereInput | discussionboard_moderation_actionScalarWhereInput[]\n  }\n\n  export type discussionboard_moderation_actionUncheckedUpdateManyWithoutTarget_userNestedInput = {\n    create?: XOR<discussionboard_moderation_actionCreateWithoutTarget_userInput, discussionboard_moderation_actionUncheckedCreateWithoutTarget_userInput> | discussionboard_moderation_actionCreateWithoutTarget_userInput[] | discussionboard_moderation_actionUncheckedCreateWithoutTarget_userInput[]\n    connectOrCreate?: discussionboard_moderation_actionCreateOrConnectWithoutTarget_userInput | discussionboard_moderation_actionCreateOrConnectWithoutTarget_userInput[]\n    upsert?: discussionboard_moderation_actionUpsertWithWhereUniqueWithoutTarget_userInput | discussionboard_moderation_actionUpsertWithWhereUniqueWithoutTarget_userInput[]\n    createMany?: discussionboard_moderation_actionCreateManyTarget_userInputEnvelope\n    set?: discussionboard_moderation_actionWhereUniqueInput | discussionboard_moderation_actionWhereUniqueInput[]\n    disconnect?: discussionboard_moderation_actionWhereUniqueInput | discussionboard_moderation_actionWhereUniqueInput[]\n    delete?: discussionboard_moderation_actionWhereUniqueInput | discussionboard_moderation_actionWhereUniqueInput[]\n    connect?: discussionboard_moderation_actionWhereUniqueInput | discussionboard_moderation_actionWhereUniqueInput[]\n    update?: discussionboard_moderation_actionUpdateWithWhereUniqueWithoutTarget_userInput | discussionboard_moderation_actionUpdateWithWhereUniqueWithoutTarget_userInput[]\n    updateMany?: discussionboard_moderation_actionUpdateManyWithWhereWithoutTarget_userInput | discussionboard_moderation_actionUpdateManyWithWhereWithoutTarget_userInput[]\n    deleteMany?: discussionboard_moderation_actionScalarWhereInput | discussionboard_moderation_actionScalarWhereInput[]\n  }\n\n  export type discussionboard_report_reviewUncheckedUpdateManyWithoutReviewerNestedInput = {\n    create?: XOR<discussionboard_report_reviewCreateWithoutReviewerInput, discussionboard_report_reviewUncheckedCreateWithoutReviewerInput> | discussionboard_report_reviewCreateWithoutReviewerInput[] | discussionboard_report_reviewUncheckedCreateWithoutReviewerInput[]\n    connectOrCreate?: discussionboard_report_reviewCreateOrConnectWithoutReviewerInput | discussionboard_report_reviewCreateOrConnectWithoutReviewerInput[]\n    upsert?: discussionboard_report_reviewUpsertWithWhereUniqueWithoutReviewerInput | discussionboard_report_reviewUpsertWithWhereUniqueWithoutReviewerInput[]\n    createMany?: discussionboard_report_reviewCreateManyReviewerInputEnvelope\n    set?: discussionboard_report_reviewWhereUniqueInput | discussionboard_report_reviewWhereUniqueInput[]\n    disconnect?: discussionboard_report_reviewWhereUniqueInput | discussionboard_report_reviewWhereUniqueInput[]\n    delete?: discussionboard_report_reviewWhereUniqueInput | discussionboard_report_reviewWhereUniqueInput[]\n    connect?: discussionboard_report_reviewWhereUniqueInput | discussionboard_report_reviewWhereUniqueInput[]\n    update?: discussionboard_report_reviewUpdateWithWhereUniqueWithoutReviewerInput | discussionboard_report_reviewUpdateWithWhereUniqueWithoutReviewerInput[]\n    updateMany?: discussionboard_report_reviewUpdateManyWithWhereWithoutReviewerInput | discussionboard_report_reviewUpdateManyWithWhereWithoutReviewerInput[]\n    deleteMany?: discussionboard_report_reviewScalarWhereInput | discussionboard_report_reviewScalarWhereInput[]\n  }\n\n  export type discussionboard_warningUncheckedUpdateManyWithoutIssuerNestedInput = {\n    create?: XOR<discussionboard_warningCreateWithoutIssuerInput, discussionboard_warningUncheckedCreateWithoutIssuerInput> | discussionboard_warningCreateWithoutIssuerInput[] | discussionboard_warningUncheckedCreateWithoutIssuerInput[]\n    connectOrCreate?: discussionboard_warningCreateOrConnectWithoutIssuerInput | discussionboard_warningCreateOrConnectWithoutIssuerInput[]\n    upsert?: discussionboard_warningUpsertWithWhereUniqueWithoutIssuerInput | discussionboard_warningUpsertWithWhereUniqueWithoutIssuerInput[]\n    createMany?: discussionboard_warningCreateManyIssuerInputEnvelope\n    set?: discussionboard_warningWhereUniqueInput | discussionboard_warningWhereUniqueInput[]\n    disconnect?: discussionboard_warningWhereUniqueInput | discussionboard_warningWhereUniqueInput[]\n    delete?: discussionboard_warningWhereUniqueInput | discussionboard_warningWhereUniqueInput[]\n    connect?: discussionboard_warningWhereUniqueInput | discussionboard_warningWhereUniqueInput[]\n    update?: discussionboard_warningUpdateWithWhereUniqueWithoutIssuerInput | discussionboard_warningUpdateWithWhereUniqueWithoutIssuerInput[]\n    updateMany?: discussionboard_warningUpdateManyWithWhereWithoutIssuerInput | discussionboard_warningUpdateManyWithWhereWithoutIssuerInput[]\n    deleteMany?: discussionboard_warningScalarWhereInput | discussionboard_warningScalarWhereInput[]\n  }\n\n  export type discussionboard_warningUncheckedUpdateManyWithoutRecipientNestedInput = {\n    create?: XOR<discussionboard_warningCreateWithoutRecipientInput, discussionboard_warningUncheckedCreateWithoutRecipientInput> | discussionboard_warningCreateWithoutRecipientInput[] | discussionboard_warningUncheckedCreateWithoutRecipientInput[]\n    connectOrCreate?: discussionboard_warningCreateOrConnectWithoutRecipientInput | discussionboard_warningCreateOrConnectWithoutRecipientInput[]\n    upsert?: discussionboard_warningUpsertWithWhereUniqueWithoutRecipientInput | discussionboard_warningUpsertWithWhereUniqueWithoutRecipientInput[]\n    createMany?: discussionboard_warningCreateManyRecipientInputEnvelope\n    set?: discussionboard_warningWhereUniqueInput | discussionboard_warningWhereUniqueInput[]\n    disconnect?: discussionboard_warningWhereUniqueInput | discussionboard_warningWhereUniqueInput[]\n    delete?: discussionboard_warningWhereUniqueInput | discussionboard_warningWhereUniqueInput[]\n    connect?: discussionboard_warningWhereUniqueInput | discussionboard_warningWhereUniqueInput[]\n    update?: discussionboard_warningUpdateWithWhereUniqueWithoutRecipientInput | discussionboard_warningUpdateWithWhereUniqueWithoutRecipientInput[]\n    updateMany?: discussionboard_warningUpdateManyWithWhereWithoutRecipientInput | discussionboard_warningUpdateManyWithWhereWithoutRecipientInput[]\n    deleteMany?: discussionboard_warningScalarWhereInput | discussionboard_warningScalarWhereInput[]\n  }\n\n  export type discussionboard_banUncheckedUpdateManyWithoutBanned_userNestedInput = {\n    create?: XOR<discussionboard_banCreateWithoutBanned_userInput, discussionboard_banUncheckedCreateWithoutBanned_userInput> | discussionboard_banCreateWithoutBanned_userInput[] | discussionboard_banUncheckedCreateWithoutBanned_userInput[]\n    connectOrCreate?: discussionboard_banCreateOrConnectWithoutBanned_userInput | discussionboard_banCreateOrConnectWithoutBanned_userInput[]\n    upsert?: discussionboard_banUpsertWithWhereUniqueWithoutBanned_userInput | discussionboard_banUpsertWithWhereUniqueWithoutBanned_userInput[]\n    createMany?: discussionboard_banCreateManyBanned_userInputEnvelope\n    set?: discussionboard_banWhereUniqueInput | discussionboard_banWhereUniqueInput[]\n    disconnect?: discussionboard_banWhereUniqueInput | discussionboard_banWhereUniqueInput[]\n    delete?: discussionboard_banWhereUniqueInput | discussionboard_banWhereUniqueInput[]\n    connect?: discussionboard_banWhereUniqueInput | discussionboard_banWhereUniqueInput[]\n    update?: discussionboard_banUpdateWithWhereUniqueWithoutBanned_userInput | discussionboard_banUpdateWithWhereUniqueWithoutBanned_userInput[]\n    updateMany?: discussionboard_banUpdateManyWithWhereWithoutBanned_userInput | discussionboard_banUpdateManyWithWhereWithoutBanned_userInput[]\n    deleteMany?: discussionboard_banScalarWhereInput | discussionboard_banScalarWhereInput[]\n  }\n\n  export type discussionboard_banUncheckedUpdateManyWithoutBan_actorNestedInput = {\n    create?: XOR<discussionboard_banCreateWithoutBan_actorInput, discussionboard_banUncheckedCreateWithoutBan_actorInput> | discussionboard_banCreateWithoutBan_actorInput[] | discussionboard_banUncheckedCreateWithoutBan_actorInput[]\n    connectOrCreate?: discussionboard_banCreateOrConnectWithoutBan_actorInput | discussionboard_banCreateOrConnectWithoutBan_actorInput[]\n    upsert?: discussionboard_banUpsertWithWhereUniqueWithoutBan_actorInput | discussionboard_banUpsertWithWhereUniqueWithoutBan_actorInput[]\n    createMany?: discussionboard_banCreateManyBan_actorInputEnvelope\n    set?: discussionboard_banWhereUniqueInput | discussionboard_banWhereUniqueInput[]\n    disconnect?: discussionboard_banWhereUniqueInput | discussionboard_banWhereUniqueInput[]\n    delete?: discussionboard_banWhereUniqueInput | discussionboard_banWhereUniqueInput[]\n    connect?: discussionboard_banWhereUniqueInput | discussionboard_banWhereUniqueInput[]\n    update?: discussionboard_banUpdateWithWhereUniqueWithoutBan_actorInput | discussionboard_banUpdateWithWhereUniqueWithoutBan_actorInput[]\n    updateMany?: discussionboard_banUpdateManyWithWhereWithoutBan_actorInput | discussionboard_banUpdateManyWithWhereWithoutBan_actorInput[]\n    deleteMany?: discussionboard_banScalarWhereInput | discussionboard_banScalarWhereInput[]\n  }\n\n  export type discussionboard_notificationUncheckedUpdateManyWithoutRecipient_userNestedInput = {\n    create?: XOR<discussionboard_notificationCreateWithoutRecipient_userInput, discussionboard_notificationUncheckedCreateWithoutRecipient_userInput> | discussionboard_notificationCreateWithoutRecipient_userInput[] | discussionboard_notificationUncheckedCreateWithoutRecipient_userInput[]\n    connectOrCreate?: discussionboard_notificationCreateOrConnectWithoutRecipient_userInput | discussionboard_notificationCreateOrConnectWithoutRecipient_userInput[]\n    upsert?: discussionboard_notificationUpsertWithWhereUniqueWithoutRecipient_userInput | discussionboard_notificationUpsertWithWhereUniqueWithoutRecipient_userInput[]\n    createMany?: discussionboard_notificationCreateManyRecipient_userInputEnvelope\n    set?: discussionboard_notificationWhereUniqueInput | discussionboard_notificationWhereUniqueInput[]\n    disconnect?: discussionboard_notificationWhereUniqueInput | discussionboard_notificationWhereUniqueInput[]\n    delete?: discussionboard_notificationWhereUniqueInput | discussionboard_notificationWhereUniqueInput[]\n    connect?: discussionboard_notificationWhereUniqueInput | discussionboard_notificationWhereUniqueInput[]\n    update?: discussionboard_notificationUpdateWithWhereUniqueWithoutRecipient_userInput | discussionboard_notificationUpdateWithWhereUniqueWithoutRecipient_userInput[]\n    updateMany?: discussionboard_notificationUpdateManyWithWhereWithoutRecipient_userInput | discussionboard_notificationUpdateManyWithWhereWithoutRecipient_userInput[]\n    deleteMany?: discussionboard_notificationScalarWhereInput | discussionboard_notificationScalarWhereInput[]\n  }\n\n  export type discussionboard_notificationUncheckedUpdateManyWithoutActor_userNestedInput = {\n    create?: XOR<discussionboard_notificationCreateWithoutActor_userInput, discussionboard_notificationUncheckedCreateWithoutActor_userInput> | discussionboard_notificationCreateWithoutActor_userInput[] | discussionboard_notificationUncheckedCreateWithoutActor_userInput[]\n    connectOrCreate?: discussionboard_notificationCreateOrConnectWithoutActor_userInput | discussionboard_notificationCreateOrConnectWithoutActor_userInput[]\n    upsert?: discussionboard_notificationUpsertWithWhereUniqueWithoutActor_userInput | discussionboard_notificationUpsertWithWhereUniqueWithoutActor_userInput[]\n    createMany?: discussionboard_notificationCreateManyActor_userInputEnvelope\n    set?: discussionboard_notificationWhereUniqueInput | discussionboard_notificationWhereUniqueInput[]\n    disconnect?: discussionboard_notificationWhereUniqueInput | discussionboard_notificationWhereUniqueInput[]\n    delete?: discussionboard_notificationWhereUniqueInput | discussionboard_notificationWhereUniqueInput[]\n    connect?: discussionboard_notificationWhereUniqueInput | discussionboard_notificationWhereUniqueInput[]\n    update?: discussionboard_notificationUpdateWithWhereUniqueWithoutActor_userInput | discussionboard_notificationUpdateWithWhereUniqueWithoutActor_userInput[]\n    updateMany?: discussionboard_notificationUpdateManyWithWhereWithoutActor_userInput | discussionboard_notificationUpdateManyWithWhereWithoutActor_userInput[]\n    deleteMany?: discussionboard_notificationScalarWhereInput | discussionboard_notificationScalarWhereInput[]\n  }\n\n  export type discussionboard_notification_preferenceUncheckedUpdateOneWithoutUserNestedInput = {\n    create?: XOR<discussionboard_notification_preferenceCreateWithoutUserInput, discussionboard_notification_preferenceUncheckedCreateWithoutUserInput>\n    connectOrCreate?: discussionboard_notification_preferenceCreateOrConnectWithoutUserInput\n    upsert?: discussionboard_notification_preferenceUpsertWithoutUserInput\n    disconnect?: discussionboard_notification_preferenceWhereInput | boolean\n    delete?: discussionboard_notification_preferenceWhereInput | boolean\n    connect?: discussionboard_notification_preferenceWhereUniqueInput\n    update?: XOR<XOR<discussionboard_notification_preferenceUpdateToOneWithWhereWithoutUserInput, discussionboard_notification_preferenceUpdateWithoutUserInput>, discussionboard_notification_preferenceUncheckedUpdateWithoutUserInput>\n  }\n\n  export type discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_actor_userNestedInput = {\n    create?: XOR<discussionboard_audit_logCreateWithoutFk_audit_actor_userInput, discussionboard_audit_logUncheckedCreateWithoutFk_audit_actor_userInput> | discussionboard_audit_logCreateWithoutFk_audit_actor_userInput[] | discussionboard_audit_logUncheckedCreateWithoutFk_audit_actor_userInput[]\n    connectOrCreate?: discussionboard_audit_logCreateOrConnectWithoutFk_audit_actor_userInput | discussionboard_audit_logCreateOrConnectWithoutFk_audit_actor_userInput[]\n    upsert?: discussionboard_audit_logUpsertWithWhereUniqueWithoutFk_audit_actor_userInput | discussionboard_audit_logUpsertWithWhereUniqueWithoutFk_audit_actor_userInput[]\n    createMany?: discussionboard_audit_logCreateManyFk_audit_actor_userInputEnvelope\n    set?: discussionboard_audit_logWhereUniqueInput | discussionboard_audit_logWhereUniqueInput[]\n    disconnect?: discussionboard_audit_logWhereUniqueInput | discussionboard_audit_logWhereUniqueInput[]\n    delete?: discussionboard_audit_logWhereUniqueInput | discussionboard_audit_logWhereUniqueInput[]\n    connect?: discussionboard_audit_logWhereUniqueInput | discussionboard_audit_logWhereUniqueInput[]\n    update?: discussionboard_audit_logUpdateWithWhereUniqueWithoutFk_audit_actor_userInput | discussionboard_audit_logUpdateWithWhereUniqueWithoutFk_audit_actor_userInput[]\n    updateMany?: discussionboard_audit_logUpdateManyWithWhereWithoutFk_audit_actor_userInput | discussionboard_audit_logUpdateManyWithWhereWithoutFk_audit_actor_userInput[]\n    deleteMany?: discussionboard_audit_logScalarWhereInput | discussionboard_audit_logScalarWhereInput[]\n  }\n\n  export type discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_target_userNestedInput = {\n    create?: XOR<discussionboard_audit_logCreateWithoutFk_audit_target_userInput, discussionboard_audit_logUncheckedCreateWithoutFk_audit_target_userInput> | discussionboard_audit_logCreateWithoutFk_audit_target_userInput[] | discussionboard_audit_logUncheckedCreateWithoutFk_audit_target_userInput[]\n    connectOrCreate?: discussionboard_audit_logCreateOrConnectWithoutFk_audit_target_userInput | discussionboard_audit_logCreateOrConnectWithoutFk_audit_target_userInput[]\n    upsert?: discussionboard_audit_logUpsertWithWhereUniqueWithoutFk_audit_target_userInput | discussionboard_audit_logUpsertWithWhereUniqueWithoutFk_audit_target_userInput[]\n    createMany?: discussionboard_audit_logCreateManyFk_audit_target_userInputEnvelope\n    set?: discussionboard_audit_logWhereUniqueInput | discussionboard_audit_logWhereUniqueInput[]\n    disconnect?: discussionboard_audit_logWhereUniqueInput | discussionboard_audit_logWhereUniqueInput[]\n    delete?: discussionboard_audit_logWhereUniqueInput | discussionboard_audit_logWhereUniqueInput[]\n    connect?: discussionboard_audit_logWhereUniqueInput | discussionboard_audit_logWhereUniqueInput[]\n    update?: discussionboard_audit_logUpdateWithWhereUniqueWithoutFk_audit_target_userInput | discussionboard_audit_logUpdateWithWhereUniqueWithoutFk_audit_target_userInput[]\n    updateMany?: discussionboard_audit_logUpdateManyWithWhereWithoutFk_audit_target_userInput | discussionboard_audit_logUpdateManyWithWhereWithoutFk_audit_target_userInput[]\n    deleteMany?: discussionboard_audit_logScalarWhereInput | discussionboard_audit_logScalarWhereInput[]\n  }\n\n  export type discussionboard_userCreateNestedOneWithoutDiscussionboard_user_profileInput = {\n    create?: XOR<discussionboard_userCreateWithoutDiscussionboard_user_profileInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_user_profileInput>\n    connectOrCreate?: discussionboard_userCreateOrConnectWithoutDiscussionboard_user_profileInput\n    connect?: discussionboard_userWhereUniqueInput\n  }\n\n  export type NullableStringFieldUpdateOperationsInput = {\n    set?: string | null\n  }\n\n  export type discussionboard_userUpdateOneRequiredWithoutDiscussionboard_user_profileNestedInput = {\n    create?: XOR<discussionboard_userCreateWithoutDiscussionboard_user_profileInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_user_profileInput>\n    connectOrCreate?: discussionboard_userCreateOrConnectWithoutDiscussionboard_user_profileInput\n    upsert?: discussionboard_userUpsertWithoutDiscussionboard_user_profileInput\n    connect?: discussionboard_userWhereUniqueInput\n    update?: XOR<XOR<discussionboard_userUpdateToOneWithWhereWithoutDiscussionboard_user_profileInput, discussionboard_userUpdateWithoutDiscussionboard_user_profileInput>, discussionboard_userUncheckedUpdateWithoutDiscussionboard_user_profileInput>\n  }\n\n  export type discussionboard_userCreateNestedOneWithoutDiscussionboard_memberInput = {\n    create?: XOR<discussionboard_userCreateWithoutDiscussionboard_memberInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_memberInput>\n    connectOrCreate?: discussionboard_userCreateOrConnectWithoutDiscussionboard_memberInput\n    connect?: discussionboard_userWhereUniqueInput\n  }\n\n  export type discussionboard_postCreateNestedManyWithoutMemberInput = {\n    create?: XOR<discussionboard_postCreateWithoutMemberInput, discussionboard_postUncheckedCreateWithoutMemberInput> | discussionboard_postCreateWithoutMemberInput[] | discussionboard_postUncheckedCreateWithoutMemberInput[]\n    connectOrCreate?: discussionboard_postCreateOrConnectWithoutMemberInput | discussionboard_postCreateOrConnectWithoutMemberInput[]\n    createMany?: discussionboard_postCreateManyMemberInputEnvelope\n    connect?: discussionboard_postWhereUniqueInput | discussionboard_postWhereUniqueInput[]\n  }\n\n  export type discussionboard_postUncheckedCreateNestedManyWithoutMemberInput = {\n    create?: XOR<discussionboard_postCreateWithoutMemberInput, discussionboard_postUncheckedCreateWithoutMemberInput> | discussionboard_postCreateWithoutMemberInput[] | discussionboard_postUncheckedCreateWithoutMemberInput[]\n    connectOrCreate?: discussionboard_postCreateOrConnectWithoutMemberInput | discussionboard_postCreateOrConnectWithoutMemberInput[]\n    createMany?: discussionboard_postCreateManyMemberInputEnvelope\n    connect?: discussionboard_postWhereUniqueInput | discussionboard_postWhereUniqueInput[]\n  }\n\n  export type discussionboard_userUpdateOneRequiredWithoutDiscussionboard_memberNestedInput = {\n    create?: XOR<discussionboard_userCreateWithoutDiscussionboard_memberInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_memberInput>\n    connectOrCreate?: discussionboard_userCreateOrConnectWithoutDiscussionboard_memberInput\n    upsert?: discussionboard_userUpsertWithoutDiscussionboard_memberInput\n    connect?: discussionboard_userWhereUniqueInput\n    update?: XOR<XOR<discussionboard_userUpdateToOneWithWhereWithoutDiscussionboard_memberInput, discussionboard_userUpdateWithoutDiscussionboard_memberInput>, discussionboard_userUncheckedUpdateWithoutDiscussionboard_memberInput>\n  }\n\n  export type discussionboard_postUpdateManyWithoutMemberNestedInput = {\n    create?: XOR<discussionboard_postCreateWithoutMemberInput, discussionboard_postUncheckedCreateWithoutMemberInput> | discussionboard_postCreateWithoutMemberInput[] | discussionboard_postUncheckedCreateWithoutMemberInput[]\n    connectOrCreate?: discussionboard_postCreateOrConnectWithoutMemberInput | discussionboard_postCreateOrConnectWithoutMemberInput[]\n    upsert?: discussionboard_postUpsertWithWhereUniqueWithoutMemberInput | discussionboard_postUpsertWithWhereUniqueWithoutMemberInput[]\n    createMany?: discussionboard_postCreateManyMemberInputEnvelope\n    set?: discussionboard_postWhereUniqueInput | discussionboard_postWhereUniqueInput[]\n    disconnect?: discussionboard_postWhereUniqueInput | discussionboard_postWhereUniqueInput[]\n    delete?: discussionboard_postWhereUniqueInput | discussionboard_postWhereUniqueInput[]\n    connect?: discussionboard_postWhereUniqueInput | discussionboard_postWhereUniqueInput[]\n    update?: discussionboard_postUpdateWithWhereUniqueWithoutMemberInput | discussionboard_postUpdateWithWhereUniqueWithoutMemberInput[]\n    updateMany?: discussionboard_postUpdateManyWithWhereWithoutMemberInput | discussionboard_postUpdateManyWithWhereWithoutMemberInput[]\n    deleteMany?: discussionboard_postScalarWhereInput | discussionboard_postScalarWhereInput[]\n  }\n\n  export type discussionboard_postUncheckedUpdateManyWithoutMemberNestedInput = {\n    create?: XOR<discussionboard_postCreateWithoutMemberInput, discussionboard_postUncheckedCreateWithoutMemberInput> | discussionboard_postCreateWithoutMemberInput[] | discussionboard_postUncheckedCreateWithoutMemberInput[]\n    connectOrCreate?: discussionboard_postCreateOrConnectWithoutMemberInput | discussionboard_postCreateOrConnectWithoutMemberInput[]\n    upsert?: discussionboard_postUpsertWithWhereUniqueWithoutMemberInput | discussionboard_postUpsertWithWhereUniqueWithoutMemberInput[]\n    createMany?: discussionboard_postCreateManyMemberInputEnvelope\n    set?: discussionboard_postWhereUniqueInput | discussionboard_postWhereUniqueInput[]\n    disconnect?: discussionboard_postWhereUniqueInput | discussionboard_postWhereUniqueInput[]\n    delete?: discussionboard_postWhereUniqueInput | discussionboard_postWhereUniqueInput[]\n    connect?: discussionboard_postWhereUniqueInput | discussionboard_postWhereUniqueInput[]\n    update?: discussionboard_postUpdateWithWhereUniqueWithoutMemberInput | discussionboard_postUpdateWithWhereUniqueWithoutMemberInput[]\n    updateMany?: discussionboard_postUpdateManyWithWhereWithoutMemberInput | discussionboard_postUpdateManyWithWhereWithoutMemberInput[]\n    deleteMany?: discussionboard_postScalarWhereInput | discussionboard_postScalarWhereInput[]\n  }\n\n  export type discussionboard_userCreateNestedOneWithoutDiscussionboard_moderatorInput = {\n    create?: XOR<discussionboard_userCreateWithoutDiscussionboard_moderatorInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_moderatorInput>\n    connectOrCreate?: discussionboard_userCreateOrConnectWithoutDiscussionboard_moderatorInput\n    connect?: discussionboard_userWhereUniqueInput\n  }\n\n  export type discussionboard_userUpdateOneRequiredWithoutDiscussionboard_moderatorNestedInput = {\n    create?: XOR<discussionboard_userCreateWithoutDiscussionboard_moderatorInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_moderatorInput>\n    connectOrCreate?: discussionboard_userCreateOrConnectWithoutDiscussionboard_moderatorInput\n    upsert?: discussionboard_userUpsertWithoutDiscussionboard_moderatorInput\n    connect?: discussionboard_userWhereUniqueInput\n    update?: XOR<XOR<discussionboard_userUpdateToOneWithWhereWithoutDiscussionboard_moderatorInput, discussionboard_userUpdateWithoutDiscussionboard_moderatorInput>, discussionboard_userUncheckedUpdateWithoutDiscussionboard_moderatorInput>\n  }\n\n  export type discussionboard_userCreateNestedOneWithoutDiscussionboard_adminInput = {\n    create?: XOR<discussionboard_userCreateWithoutDiscussionboard_adminInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_adminInput>\n    connectOrCreate?: discussionboard_userCreateOrConnectWithoutDiscussionboard_adminInput\n    connect?: discussionboard_userWhereUniqueInput\n  }\n\n  export type discussionboard_userUpdateOneRequiredWithoutDiscussionboard_adminNestedInput = {\n    create?: XOR<discussionboard_userCreateWithoutDiscussionboard_adminInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_adminInput>\n    connectOrCreate?: discussionboard_userCreateOrConnectWithoutDiscussionboard_adminInput\n    upsert?: discussionboard_userUpsertWithoutDiscussionboard_adminInput\n    connect?: discussionboard_userWhereUniqueInput\n    update?: XOR<XOR<discussionboard_userUpdateToOneWithWhereWithoutDiscussionboard_adminInput, discussionboard_userUpdateWithoutDiscussionboard_adminInput>, discussionboard_userUncheckedUpdateWithoutDiscussionboard_adminInput>\n  }\n\n  export type discussionboard_memberCreateNestedOneWithoutDiscussionboard_postInput = {\n    create?: XOR<discussionboard_memberCreateWithoutDiscussionboard_postInput, discussionboard_memberUncheckedCreateWithoutDiscussionboard_postInput>\n    connectOrCreate?: discussionboard_memberCreateOrConnectWithoutDiscussionboard_postInput\n    connect?: discussionboard_memberWhereUniqueInput\n  }\n\n  export type discussionboard_post_categoryCreateNestedOneWithoutDiscussionboard_postInput = {\n    create?: XOR<discussionboard_post_categoryCreateWithoutDiscussionboard_postInput, discussionboard_post_categoryUncheckedCreateWithoutDiscussionboard_postInput>\n    connectOrCreate?: discussionboard_post_categoryCreateOrConnectWithoutDiscussionboard_postInput\n    connect?: discussionboard_post_categoryWhereUniqueInput\n  }\n\n  export type discussionboard_post_attachmentCreateNestedManyWithoutPostInput = {\n    create?: XOR<discussionboard_post_attachmentCreateWithoutPostInput, discussionboard_post_attachmentUncheckedCreateWithoutPostInput> | discussionboard_post_attachmentCreateWithoutPostInput[] | discussionboard_post_attachmentUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussionboard_post_attachmentCreateOrConnectWithoutPostInput | discussionboard_post_attachmentCreateOrConnectWithoutPostInput[]\n    createMany?: discussionboard_post_attachmentCreateManyPostInputEnvelope\n    connect?: discussionboard_post_attachmentWhereUniqueInput | discussionboard_post_attachmentWhereUniqueInput[]\n  }\n\n  export type discussionboard_commentsCreateNestedManyWithoutPostInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutPostInput, discussionboard_commentsUncheckedCreateWithoutPostInput> | discussionboard_commentsCreateWithoutPostInput[] | discussionboard_commentsUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutPostInput | discussionboard_commentsCreateOrConnectWithoutPostInput[]\n    createMany?: discussionboard_commentsCreateManyPostInputEnvelope\n    connect?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n  }\n\n  export type discussionboard_likesCreateNestedManyWithoutPostInput = {\n    create?: XOR<discussionboard_likesCreateWithoutPostInput, discussionboard_likesUncheckedCreateWithoutPostInput> | discussionboard_likesCreateWithoutPostInput[] | discussionboard_likesUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussionboard_likesCreateOrConnectWithoutPostInput | discussionboard_likesCreateOrConnectWithoutPostInput[]\n    createMany?: discussionboard_likesCreateManyPostInputEnvelope\n    connect?: discussionboard_likesWhereUniqueInput | discussionboard_likesWhereUniqueInput[]\n  }\n\n  export type discussionboard_reportsCreateNestedManyWithoutPostInput = {\n    create?: XOR<discussionboard_reportsCreateWithoutPostInput, discussionboard_reportsUncheckedCreateWithoutPostInput> | discussionboard_reportsCreateWithoutPostInput[] | discussionboard_reportsUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussionboard_reportsCreateOrConnectWithoutPostInput | discussionboard_reportsCreateOrConnectWithoutPostInput[]\n    createMany?: discussionboard_reportsCreateManyPostInputEnvelope\n    connect?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n  }\n\n  export type discussionboard_moderation_actionCreateNestedManyWithoutModerated_postInput = {\n    create?: XOR<discussionboard_moderation_actionCreateWithoutModerated_postInput, discussionboard_moderation_actionUncheckedCreateWithoutModerated_postInput> | discussionboard_moderation_actionCreateWithoutModerated_postInput[] | discussionboard_moderation_actionUncheckedCreateWithoutModerated_postInput[]\n    connectOrCreate?: discussionboard_moderation_actionCreateOrConnectWithoutModerated_postInput | discussionboard_moderation_actionCreateOrConnectWithoutModerated_postInput[]\n    createMany?: discussionboard_moderation_actionCreateManyModerated_postInputEnvelope\n    connect?: discussionboard_moderation_actionWhereUniqueInput | discussionboard_moderation_actionWhereUniqueInput[]\n  }\n\n  export type discussionboard_report_reviewCreateNestedManyWithoutReviewed_postInput = {\n    create?: XOR<discussionboard_report_reviewCreateWithoutReviewed_postInput, discussionboard_report_reviewUncheckedCreateWithoutReviewed_postInput> | discussionboard_report_reviewCreateWithoutReviewed_postInput[] | discussionboard_report_reviewUncheckedCreateWithoutReviewed_postInput[]\n    connectOrCreate?: discussionboard_report_reviewCreateOrConnectWithoutReviewed_postInput | discussionboard_report_reviewCreateOrConnectWithoutReviewed_postInput[]\n    createMany?: discussionboard_report_reviewCreateManyReviewed_postInputEnvelope\n    connect?: discussionboard_report_reviewWhereUniqueInput | discussionboard_report_reviewWhereUniqueInput[]\n  }\n\n  export type discussionboard_warningCreateNestedManyWithoutWarning_postInput = {\n    create?: XOR<discussionboard_warningCreateWithoutWarning_postInput, discussionboard_warningUncheckedCreateWithoutWarning_postInput> | discussionboard_warningCreateWithoutWarning_postInput[] | discussionboard_warningUncheckedCreateWithoutWarning_postInput[]\n    connectOrCreate?: discussionboard_warningCreateOrConnectWithoutWarning_postInput | discussionboard_warningCreateOrConnectWithoutWarning_postInput[]\n    createMany?: discussionboard_warningCreateManyWarning_postInputEnvelope\n    connect?: discussionboard_warningWhereUniqueInput | discussionboard_warningWhereUniqueInput[]\n  }\n\n  export type discussionboard_notificationCreateNestedManyWithoutRelated_postInput = {\n    create?: XOR<discussionboard_notificationCreateWithoutRelated_postInput, discussionboard_notificationUncheckedCreateWithoutRelated_postInput> | discussionboard_notificationCreateWithoutRelated_postInput[] | discussionboard_notificationUncheckedCreateWithoutRelated_postInput[]\n    connectOrCreate?: discussionboard_notificationCreateOrConnectWithoutRelated_postInput | discussionboard_notificationCreateOrConnectWithoutRelated_postInput[]\n    createMany?: discussionboard_notificationCreateManyRelated_postInputEnvelope\n    connect?: discussionboard_notificationWhereUniqueInput | discussionboard_notificationWhereUniqueInput[]\n  }\n\n  export type discussionboard_post_attachmentUncheckedCreateNestedManyWithoutPostInput = {\n    create?: XOR<discussionboard_post_attachmentCreateWithoutPostInput, discussionboard_post_attachmentUncheckedCreateWithoutPostInput> | discussionboard_post_attachmentCreateWithoutPostInput[] | discussionboard_post_attachmentUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussionboard_post_attachmentCreateOrConnectWithoutPostInput | discussionboard_post_attachmentCreateOrConnectWithoutPostInput[]\n    createMany?: discussionboard_post_attachmentCreateManyPostInputEnvelope\n    connect?: discussionboard_post_attachmentWhereUniqueInput | discussionboard_post_attachmentWhereUniqueInput[]\n  }\n\n  export type discussionboard_commentsUncheckedCreateNestedManyWithoutPostInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutPostInput, discussionboard_commentsUncheckedCreateWithoutPostInput> | discussionboard_commentsCreateWithoutPostInput[] | discussionboard_commentsUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutPostInput | discussionboard_commentsCreateOrConnectWithoutPostInput[]\n    createMany?: discussionboard_commentsCreateManyPostInputEnvelope\n    connect?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n  }\n\n  export type discussionboard_likesUncheckedCreateNestedManyWithoutPostInput = {\n    create?: XOR<discussionboard_likesCreateWithoutPostInput, discussionboard_likesUncheckedCreateWithoutPostInput> | discussionboard_likesCreateWithoutPostInput[] | discussionboard_likesUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussionboard_likesCreateOrConnectWithoutPostInput | discussionboard_likesCreateOrConnectWithoutPostInput[]\n    createMany?: discussionboard_likesCreateManyPostInputEnvelope\n    connect?: discussionboard_likesWhereUniqueInput | discussionboard_likesWhereUniqueInput[]\n  }\n\n  export type discussionboard_reportsUncheckedCreateNestedManyWithoutPostInput = {\n    create?: XOR<discussionboard_reportsCreateWithoutPostInput, discussionboard_reportsUncheckedCreateWithoutPostInput> | discussionboard_reportsCreateWithoutPostInput[] | discussionboard_reportsUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussionboard_reportsCreateOrConnectWithoutPostInput | discussionboard_reportsCreateOrConnectWithoutPostInput[]\n    createMany?: discussionboard_reportsCreateManyPostInputEnvelope\n    connect?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n  }\n\n  export type discussionboard_moderation_actionUncheckedCreateNestedManyWithoutModerated_postInput = {\n    create?: XOR<discussionboard_moderation_actionCreateWithoutModerated_postInput, discussionboard_moderation_actionUncheckedCreateWithoutModerated_postInput> | discussionboard_moderation_actionCreateWithoutModerated_postInput[] | discussionboard_moderation_actionUncheckedCreateWithoutModerated_postInput[]\n    connectOrCreate?: discussionboard_moderation_actionCreateOrConnectWithoutModerated_postInput | discussionboard_moderation_actionCreateOrConnectWithoutModerated_postInput[]\n    createMany?: discussionboard_moderation_actionCreateManyModerated_postInputEnvelope\n    connect?: discussionboard_moderation_actionWhereUniqueInput | discussionboard_moderation_actionWhereUniqueInput[]\n  }\n\n  export type discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewed_postInput = {\n    create?: XOR<discussionboard_report_reviewCreateWithoutReviewed_postInput, discussionboard_report_reviewUncheckedCreateWithoutReviewed_postInput> | discussionboard_report_reviewCreateWithoutReviewed_postInput[] | discussionboard_report_reviewUncheckedCreateWithoutReviewed_postInput[]\n    connectOrCreate?: discussionboard_report_reviewCreateOrConnectWithoutReviewed_postInput | discussionboard_report_reviewCreateOrConnectWithoutReviewed_postInput[]\n    createMany?: discussionboard_report_reviewCreateManyReviewed_postInputEnvelope\n    connect?: discussionboard_report_reviewWhereUniqueInput | discussionboard_report_reviewWhereUniqueInput[]\n  }\n\n  export type discussionboard_warningUncheckedCreateNestedManyWithoutWarning_postInput = {\n    create?: XOR<discussionboard_warningCreateWithoutWarning_postInput, discussionboard_warningUncheckedCreateWithoutWarning_postInput> | discussionboard_warningCreateWithoutWarning_postInput[] | discussionboard_warningUncheckedCreateWithoutWarning_postInput[]\n    connectOrCreate?: discussionboard_warningCreateOrConnectWithoutWarning_postInput | discussionboard_warningCreateOrConnectWithoutWarning_postInput[]\n    createMany?: discussionboard_warningCreateManyWarning_postInputEnvelope\n    connect?: discussionboard_warningWhereUniqueInput | discussionboard_warningWhereUniqueInput[]\n  }\n\n  export type discussionboard_notificationUncheckedCreateNestedManyWithoutRelated_postInput = {\n    create?: XOR<discussionboard_notificationCreateWithoutRelated_postInput, discussionboard_notificationUncheckedCreateWithoutRelated_postInput> | discussionboard_notificationCreateWithoutRelated_postInput[] | discussionboard_notificationUncheckedCreateWithoutRelated_postInput[]\n    connectOrCreate?: discussionboard_notificationCreateOrConnectWithoutRelated_postInput | discussionboard_notificationCreateOrConnectWithoutRelated_postInput[]\n    createMany?: discussionboard_notificationCreateManyRelated_postInputEnvelope\n    connect?: discussionboard_notificationWhereUniqueInput | discussionboard_notificationWhereUniqueInput[]\n  }\n\n  export type NullableDateTimeFieldUpdateOperationsInput = {\n    set?: Date | string | null\n  }\n\n  export type discussionboard_memberUpdateOneRequiredWithoutDiscussionboard_postNestedInput = {\n    create?: XOR<discussionboard_memberCreateWithoutDiscussionboard_postInput, discussionboard_memberUncheckedCreateWithoutDiscussionboard_postInput>\n    connectOrCreate?: discussionboard_memberCreateOrConnectWithoutDiscussionboard_postInput\n    upsert?: discussionboard_memberUpsertWithoutDiscussionboard_postInput\n    connect?: discussionboard_memberWhereUniqueInput\n    update?: XOR<XOR<discussionboard_memberUpdateToOneWithWhereWithoutDiscussionboard_postInput, discussionboard_memberUpdateWithoutDiscussionboard_postInput>, discussionboard_memberUncheckedUpdateWithoutDiscussionboard_postInput>\n  }\n\n  export type discussionboard_post_categoryUpdateOneRequiredWithoutDiscussionboard_postNestedInput = {\n    create?: XOR<discussionboard_post_categoryCreateWithoutDiscussionboard_postInput, discussionboard_post_categoryUncheckedCreateWithoutDiscussionboard_postInput>\n    connectOrCreate?: discussionboard_post_categoryCreateOrConnectWithoutDiscussionboard_postInput\n    upsert?: discussionboard_post_categoryUpsertWithoutDiscussionboard_postInput\n    connect?: discussionboard_post_categoryWhereUniqueInput\n    update?: XOR<XOR<discussionboard_post_categoryUpdateToOneWithWhereWithoutDiscussionboard_postInput, discussionboard_post_categoryUpdateWithoutDiscussionboard_postInput>, discussionboard_post_categoryUncheckedUpdateWithoutDiscussionboard_postInput>\n  }\n\n  export type discussionboard_post_attachmentUpdateManyWithoutPostNestedInput = {\n    create?: XOR<discussionboard_post_attachmentCreateWithoutPostInput, discussionboard_post_attachmentUncheckedCreateWithoutPostInput> | discussionboard_post_attachmentCreateWithoutPostInput[] | discussionboard_post_attachmentUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussionboard_post_attachmentCreateOrConnectWithoutPostInput | discussionboard_post_attachmentCreateOrConnectWithoutPostInput[]\n    upsert?: discussionboard_post_attachmentUpsertWithWhereUniqueWithoutPostInput | discussionboard_post_attachmentUpsertWithWhereUniqueWithoutPostInput[]\n    createMany?: discussionboard_post_attachmentCreateManyPostInputEnvelope\n    set?: discussionboard_post_attachmentWhereUniqueInput | discussionboard_post_attachmentWhereUniqueInput[]\n    disconnect?: discussionboard_post_attachmentWhereUniqueInput | discussionboard_post_attachmentWhereUniqueInput[]\n    delete?: discussionboard_post_attachmentWhereUniqueInput | discussionboard_post_attachmentWhereUniqueInput[]\n    connect?: discussionboard_post_attachmentWhereUniqueInput | discussionboard_post_attachmentWhereUniqueInput[]\n    update?: discussionboard_post_attachmentUpdateWithWhereUniqueWithoutPostInput | discussionboard_post_attachmentUpdateWithWhereUniqueWithoutPostInput[]\n    updateMany?: discussionboard_post_attachmentUpdateManyWithWhereWithoutPostInput | discussionboard_post_attachmentUpdateManyWithWhereWithoutPostInput[]\n    deleteMany?: discussionboard_post_attachmentScalarWhereInput | discussionboard_post_attachmentScalarWhereInput[]\n  }\n\n  export type discussionboard_commentsUpdateManyWithoutPostNestedInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutPostInput, discussionboard_commentsUncheckedCreateWithoutPostInput> | discussionboard_commentsCreateWithoutPostInput[] | discussionboard_commentsUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutPostInput | discussionboard_commentsCreateOrConnectWithoutPostInput[]\n    upsert?: discussionboard_commentsUpsertWithWhereUniqueWithoutPostInput | discussionboard_commentsUpsertWithWhereUniqueWithoutPostInput[]\n    createMany?: discussionboard_commentsCreateManyPostInputEnvelope\n    set?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    disconnect?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    delete?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    connect?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    update?: discussionboard_commentsUpdateWithWhereUniqueWithoutPostInput | discussionboard_commentsUpdateWithWhereUniqueWithoutPostInput[]\n    updateMany?: discussionboard_commentsUpdateManyWithWhereWithoutPostInput | discussionboard_commentsUpdateManyWithWhereWithoutPostInput[]\n    deleteMany?: discussionboard_commentsScalarWhereInput | discussionboard_commentsScalarWhereInput[]\n  }\n\n  export type discussionboard_likesUpdateManyWithoutPostNestedInput = {\n    create?: XOR<discussionboard_likesCreateWithoutPostInput, discussionboard_likesUncheckedCreateWithoutPostInput> | discussionboard_likesCreateWithoutPostInput[] | discussionboard_likesUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussionboard_likesCreateOrConnectWithoutPostInput | discussionboard_likesCreateOrConnectWithoutPostInput[]\n    upsert?: discussionboard_likesUpsertWithWhereUniqueWithoutPostInput | discussionboard_likesUpsertWithWhereUniqueWithoutPostInput[]\n    createMany?: discussionboard_likesCreateManyPostInputEnvelope\n    set?: discussionboard_likesWhereUniqueInput | discussionboard_likesWhereUniqueInput[]\n    disconnect?: discussionboard_likesWhereUniqueInput | discussionboard_likesWhereUniqueInput[]\n    delete?: discussionboard_likesWhereUniqueInput | discussionboard_likesWhereUniqueInput[]\n    connect?: discussionboard_likesWhereUniqueInput | discussionboard_likesWhereUniqueInput[]\n    update?: discussionboard_likesUpdateWithWhereUniqueWithoutPostInput | discussionboard_likesUpdateWithWhereUniqueWithoutPostInput[]\n    updateMany?: discussionboard_likesUpdateManyWithWhereWithoutPostInput | discussionboard_likesUpdateManyWithWhereWithoutPostInput[]\n    deleteMany?: discussionboard_likesScalarWhereInput | discussionboard_likesScalarWhereInput[]\n  }\n\n  export type discussionboard_reportsUpdateManyWithoutPostNestedInput = {\n    create?: XOR<discussionboard_reportsCreateWithoutPostInput, discussionboard_reportsUncheckedCreateWithoutPostInput> | discussionboard_reportsCreateWithoutPostInput[] | discussionboard_reportsUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussionboard_reportsCreateOrConnectWithoutPostInput | discussionboard_reportsCreateOrConnectWithoutPostInput[]\n    upsert?: discussionboard_reportsUpsertWithWhereUniqueWithoutPostInput | discussionboard_reportsUpsertWithWhereUniqueWithoutPostInput[]\n    createMany?: discussionboard_reportsCreateManyPostInputEnvelope\n    set?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    disconnect?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    delete?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    connect?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    update?: discussionboard_reportsUpdateWithWhereUniqueWithoutPostInput | discussionboard_reportsUpdateWithWhereUniqueWithoutPostInput[]\n    updateMany?: discussionboard_reportsUpdateManyWithWhereWithoutPostInput | discussionboard_reportsUpdateManyWithWhereWithoutPostInput[]\n    deleteMany?: discussionboard_reportsScalarWhereInput | discussionboard_reportsScalarWhereInput[]\n  }\n\n  export type discussionboard_moderation_actionUpdateManyWithoutModerated_postNestedInput = {\n    create?: XOR<discussionboard_moderation_actionCreateWithoutModerated_postInput, discussionboard_moderation_actionUncheckedCreateWithoutModerated_postInput> | discussionboard_moderation_actionCreateWithoutModerated_postInput[] | discussionboard_moderation_actionUncheckedCreateWithoutModerated_postInput[]\n    connectOrCreate?: discussionboard_moderation_actionCreateOrConnectWithoutModerated_postInput | discussionboard_moderation_actionCreateOrConnectWithoutModerated_postInput[]\n    upsert?: discussionboard_moderation_actionUpsertWithWhereUniqueWithoutModerated_postInput | discussionboard_moderation_actionUpsertWithWhereUniqueWithoutModerated_postInput[]\n    createMany?: discussionboard_moderation_actionCreateManyModerated_postInputEnvelope\n    set?: discussionboard_moderation_actionWhereUniqueInput | discussionboard_moderation_actionWhereUniqueInput[]\n    disconnect?: discussionboard_moderation_actionWhereUniqueInput | discussionboard_moderation_actionWhereUniqueInput[]\n    delete?: discussionboard_moderation_actionWhereUniqueInput | discussionboard_moderation_actionWhereUniqueInput[]\n    connect?: discussionboard_moderation_actionWhereUniqueInput | discussionboard_moderation_actionWhereUniqueInput[]\n    update?: discussionboard_moderation_actionUpdateWithWhereUniqueWithoutModerated_postInput | discussionboard_moderation_actionUpdateWithWhereUniqueWithoutModerated_postInput[]\n    updateMany?: discussionboard_moderation_actionUpdateManyWithWhereWithoutModerated_postInput | discussionboard_moderation_actionUpdateManyWithWhereWithoutModerated_postInput[]\n    deleteMany?: discussionboard_moderation_actionScalarWhereInput | discussionboard_moderation_actionScalarWhereInput[]\n  }\n\n  export type discussionboard_report_reviewUpdateManyWithoutReviewed_postNestedInput = {\n    create?: XOR<discussionboard_report_reviewCreateWithoutReviewed_postInput, discussionboard_report_reviewUncheckedCreateWithoutReviewed_postInput> | discussionboard_report_reviewCreateWithoutReviewed_postInput[] | discussionboard_report_reviewUncheckedCreateWithoutReviewed_postInput[]\n    connectOrCreate?: discussionboard_report_reviewCreateOrConnectWithoutReviewed_postInput | discussionboard_report_reviewCreateOrConnectWithoutReviewed_postInput[]\n    upsert?: discussionboard_report_reviewUpsertWithWhereUniqueWithoutReviewed_postInput | discussionboard_report_reviewUpsertWithWhereUniqueWithoutReviewed_postInput[]\n    createMany?: discussionboard_report_reviewCreateManyReviewed_postInputEnvelope\n    set?: discussionboard_report_reviewWhereUniqueInput | discussionboard_report_reviewWhereUniqueInput[]\n    disconnect?: discussionboard_report_reviewWhereUniqueInput | discussionboard_report_reviewWhereUniqueInput[]\n    delete?: discussionboard_report_reviewWhereUniqueInput | discussionboard_report_reviewWhereUniqueInput[]\n    connect?: discussionboard_report_reviewWhereUniqueInput | discussionboard_report_reviewWhereUniqueInput[]\n    update?: discussionboard_report_reviewUpdateWithWhereUniqueWithoutReviewed_postInput | discussionboard_report_reviewUpdateWithWhereUniqueWithoutReviewed_postInput[]\n    updateMany?: discussionboard_report_reviewUpdateManyWithWhereWithoutReviewed_postInput | discussionboard_report_reviewUpdateManyWithWhereWithoutReviewed_postInput[]\n    deleteMany?: discussionboard_report_reviewScalarWhereInput | discussionboard_report_reviewScalarWhereInput[]\n  }\n\n  export type discussionboard_warningUpdateManyWithoutWarning_postNestedInput = {\n    create?: XOR<discussionboard_warningCreateWithoutWarning_postInput, discussionboard_warningUncheckedCreateWithoutWarning_postInput> | discussionboard_warningCreateWithoutWarning_postInput[] | discussionboard_warningUncheckedCreateWithoutWarning_postInput[]\n    connectOrCreate?: discussionboard_warningCreateOrConnectWithoutWarning_postInput | discussionboard_warningCreateOrConnectWithoutWarning_postInput[]\n    upsert?: discussionboard_warningUpsertWithWhereUniqueWithoutWarning_postInput | discussionboard_warningUpsertWithWhereUniqueWithoutWarning_postInput[]\n    createMany?: discussionboard_warningCreateManyWarning_postInputEnvelope\n    set?: discussionboard_warningWhereUniqueInput | discussionboard_warningWhereUniqueInput[]\n    disconnect?: discussionboard_warningWhereUniqueInput | discussionboard_warningWhereUniqueInput[]\n    delete?: discussionboard_warningWhereUniqueInput | discussionboard_warningWhereUniqueInput[]\n    connect?: discussionboard_warningWhereUniqueInput | discussionboard_warningWhereUniqueInput[]\n    update?: discussionboard_warningUpdateWithWhereUniqueWithoutWarning_postInput | discussionboard_warningUpdateWithWhereUniqueWithoutWarning_postInput[]\n    updateMany?: discussionboard_warningUpdateManyWithWhereWithoutWarning_postInput | discussionboard_warningUpdateManyWithWhereWithoutWarning_postInput[]\n    deleteMany?: discussionboard_warningScalarWhereInput | discussionboard_warningScalarWhereInput[]\n  }\n\n  export type discussionboard_notificationUpdateManyWithoutRelated_postNestedInput = {\n    create?: XOR<discussionboard_notificationCreateWithoutRelated_postInput, discussionboard_notificationUncheckedCreateWithoutRelated_postInput> | discussionboard_notificationCreateWithoutRelated_postInput[] | discussionboard_notificationUncheckedCreateWithoutRelated_postInput[]\n    connectOrCreate?: discussionboard_notificationCreateOrConnectWithoutRelated_postInput | discussionboard_notificationCreateOrConnectWithoutRelated_postInput[]\n    upsert?: discussionboard_notificationUpsertWithWhereUniqueWithoutRelated_postInput | discussionboard_notificationUpsertWithWhereUniqueWithoutRelated_postInput[]\n    createMany?: discussionboard_notificationCreateManyRelated_postInputEnvelope\n    set?: discussionboard_notificationWhereUniqueInput | discussionboard_notificationWhereUniqueInput[]\n    disconnect?: discussionboard_notificationWhereUniqueInput | discussionboard_notificationWhereUniqueInput[]\n    delete?: discussionboard_notificationWhereUniqueInput | discussionboard_notificationWhereUniqueInput[]\n    connect?: discussionboard_notificationWhereUniqueInput | discussionboard_notificationWhereUniqueInput[]\n    update?: discussionboard_notificationUpdateWithWhereUniqueWithoutRelated_postInput | discussionboard_notificationUpdateWithWhereUniqueWithoutRelated_postInput[]\n    updateMany?: discussionboard_notificationUpdateManyWithWhereWithoutRelated_postInput | discussionboard_notificationUpdateManyWithWhereWithoutRelated_postInput[]\n    deleteMany?: discussionboard_notificationScalarWhereInput | discussionboard_notificationScalarWhereInput[]\n  }\n\n  export type discussionboard_post_attachmentUncheckedUpdateManyWithoutPostNestedInput = {\n    create?: XOR<discussionboard_post_attachmentCreateWithoutPostInput, discussionboard_post_attachmentUncheckedCreateWithoutPostInput> | discussionboard_post_attachmentCreateWithoutPostInput[] | discussionboard_post_attachmentUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussionboard_post_attachmentCreateOrConnectWithoutPostInput | discussionboard_post_attachmentCreateOrConnectWithoutPostInput[]\n    upsert?: discussionboard_post_attachmentUpsertWithWhereUniqueWithoutPostInput | discussionboard_post_attachmentUpsertWithWhereUniqueWithoutPostInput[]\n    createMany?: discussionboard_post_attachmentCreateManyPostInputEnvelope\n    set?: discussionboard_post_attachmentWhereUniqueInput | discussionboard_post_attachmentWhereUniqueInput[]\n    disconnect?: discussionboard_post_attachmentWhereUniqueInput | discussionboard_post_attachmentWhereUniqueInput[]\n    delete?: discussionboard_post_attachmentWhereUniqueInput | discussionboard_post_attachmentWhereUniqueInput[]\n    connect?: discussionboard_post_attachmentWhereUniqueInput | discussionboard_post_attachmentWhereUniqueInput[]\n    update?: discussionboard_post_attachmentUpdateWithWhereUniqueWithoutPostInput | discussionboard_post_attachmentUpdateWithWhereUniqueWithoutPostInput[]\n    updateMany?: discussionboard_post_attachmentUpdateManyWithWhereWithoutPostInput | discussionboard_post_attachmentUpdateManyWithWhereWithoutPostInput[]\n    deleteMany?: discussionboard_post_attachmentScalarWhereInput | discussionboard_post_attachmentScalarWhereInput[]\n  }\n\n  export type discussionboard_commentsUncheckedUpdateManyWithoutPostNestedInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutPostInput, discussionboard_commentsUncheckedCreateWithoutPostInput> | discussionboard_commentsCreateWithoutPostInput[] | discussionboard_commentsUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutPostInput | discussionboard_commentsCreateOrConnectWithoutPostInput[]\n    upsert?: discussionboard_commentsUpsertWithWhereUniqueWithoutPostInput | discussionboard_commentsUpsertWithWhereUniqueWithoutPostInput[]\n    createMany?: discussionboard_commentsCreateManyPostInputEnvelope\n    set?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    disconnect?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    delete?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    connect?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    update?: discussionboard_commentsUpdateWithWhereUniqueWithoutPostInput | discussionboard_commentsUpdateWithWhereUniqueWithoutPostInput[]\n    updateMany?: discussionboard_commentsUpdateManyWithWhereWithoutPostInput | discussionboard_commentsUpdateManyWithWhereWithoutPostInput[]\n    deleteMany?: discussionboard_commentsScalarWhereInput | discussionboard_commentsScalarWhereInput[]\n  }\n\n  export type discussionboard_likesUncheckedUpdateManyWithoutPostNestedInput = {\n    create?: XOR<discussionboard_likesCreateWithoutPostInput, discussionboard_likesUncheckedCreateWithoutPostInput> | discussionboard_likesCreateWithoutPostInput[] | discussionboard_likesUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussionboard_likesCreateOrConnectWithoutPostInput | discussionboard_likesCreateOrConnectWithoutPostInput[]\n    upsert?: discussionboard_likesUpsertWithWhereUniqueWithoutPostInput | discussionboard_likesUpsertWithWhereUniqueWithoutPostInput[]\n    createMany?: discussionboard_likesCreateManyPostInputEnvelope\n    set?: discussionboard_likesWhereUniqueInput | discussionboard_likesWhereUniqueInput[]\n    disconnect?: discussionboard_likesWhereUniqueInput | discussionboard_likesWhereUniqueInput[]\n    delete?: discussionboard_likesWhereUniqueInput | discussionboard_likesWhereUniqueInput[]\n    connect?: discussionboard_likesWhereUniqueInput | discussionboard_likesWhereUniqueInput[]\n    update?: discussionboard_likesUpdateWithWhereUniqueWithoutPostInput | discussionboard_likesUpdateWithWhereUniqueWithoutPostInput[]\n    updateMany?: discussionboard_likesUpdateManyWithWhereWithoutPostInput | discussionboard_likesUpdateManyWithWhereWithoutPostInput[]\n    deleteMany?: discussionboard_likesScalarWhereInput | discussionboard_likesScalarWhereInput[]\n  }\n\n  export type discussionboard_reportsUncheckedUpdateManyWithoutPostNestedInput = {\n    create?: XOR<discussionboard_reportsCreateWithoutPostInput, discussionboard_reportsUncheckedCreateWithoutPostInput> | discussionboard_reportsCreateWithoutPostInput[] | discussionboard_reportsUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussionboard_reportsCreateOrConnectWithoutPostInput | discussionboard_reportsCreateOrConnectWithoutPostInput[]\n    upsert?: discussionboard_reportsUpsertWithWhereUniqueWithoutPostInput | discussionboard_reportsUpsertWithWhereUniqueWithoutPostInput[]\n    createMany?: discussionboard_reportsCreateManyPostInputEnvelope\n    set?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    disconnect?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    delete?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    connect?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    update?: discussionboard_reportsUpdateWithWhereUniqueWithoutPostInput | discussionboard_reportsUpdateWithWhereUniqueWithoutPostInput[]\n    updateMany?: discussionboard_reportsUpdateManyWithWhereWithoutPostInput | discussionboard_reportsUpdateManyWithWhereWithoutPostInput[]\n    deleteMany?: discussionboard_reportsScalarWhereInput | discussionboard_reportsScalarWhereInput[]\n  }\n\n  export type discussionboard_moderation_actionUncheckedUpdateManyWithoutModerated_postNestedInput = {\n    create?: XOR<discussionboard_moderation_actionCreateWithoutModerated_postInput, discussionboard_moderation_actionUncheckedCreateWithoutModerated_postInput> | discussionboard_moderation_actionCreateWithoutModerated_postInput[] | discussionboard_moderation_actionUncheckedCreateWithoutModerated_postInput[]\n    connectOrCreate?: discussionboard_moderation_actionCreateOrConnectWithoutModerated_postInput | discussionboard_moderation_actionCreateOrConnectWithoutModerated_postInput[]\n    upsert?: discussionboard_moderation_actionUpsertWithWhereUniqueWithoutModerated_postInput | discussionboard_moderation_actionUpsertWithWhereUniqueWithoutModerated_postInput[]\n    createMany?: discussionboard_moderation_actionCreateManyModerated_postInputEnvelope\n    set?: discussionboard_moderation_actionWhereUniqueInput | discussionboard_moderation_actionWhereUniqueInput[]\n    disconnect?: discussionboard_moderation_actionWhereUniqueInput | discussionboard_moderation_actionWhereUniqueInput[]\n    delete?: discussionboard_moderation_actionWhereUniqueInput | discussionboard_moderation_actionWhereUniqueInput[]\n    connect?: discussionboard_moderation_actionWhereUniqueInput | discussionboard_moderation_actionWhereUniqueInput[]\n    update?: discussionboard_moderation_actionUpdateWithWhereUniqueWithoutModerated_postInput | discussionboard_moderation_actionUpdateWithWhereUniqueWithoutModerated_postInput[]\n    updateMany?: discussionboard_moderation_actionUpdateManyWithWhereWithoutModerated_postInput | discussionboard_moderation_actionUpdateManyWithWhereWithoutModerated_postInput[]\n    deleteMany?: discussionboard_moderation_actionScalarWhereInput | discussionboard_moderation_actionScalarWhereInput[]\n  }\n\n  export type discussionboard_report_reviewUncheckedUpdateManyWithoutReviewed_postNestedInput = {\n    create?: XOR<discussionboard_report_reviewCreateWithoutReviewed_postInput, discussionboard_report_reviewUncheckedCreateWithoutReviewed_postInput> | discussionboard_report_reviewCreateWithoutReviewed_postInput[] | discussionboard_report_reviewUncheckedCreateWithoutReviewed_postInput[]\n    connectOrCreate?: discussionboard_report_reviewCreateOrConnectWithoutReviewed_postInput | discussionboard_report_reviewCreateOrConnectWithoutReviewed_postInput[]\n    upsert?: discussionboard_report_reviewUpsertWithWhereUniqueWithoutReviewed_postInput | discussionboard_report_reviewUpsertWithWhereUniqueWithoutReviewed_postInput[]\n    createMany?: discussionboard_report_reviewCreateManyReviewed_postInputEnvelope\n    set?: discussionboard_report_reviewWhereUniqueInput | discussionboard_report_reviewWhereUniqueInput[]\n    disconnect?: discussionboard_report_reviewWhereUniqueInput | discussionboard_report_reviewWhereUniqueInput[]\n    delete?: discussionboard_report_reviewWhereUniqueInput | discussionboard_report_reviewWhereUniqueInput[]\n    connect?: discussionboard_report_reviewWhereUniqueInput | discussionboard_report_reviewWhereUniqueInput[]\n    update?: discussionboard_report_reviewUpdateWithWhereUniqueWithoutReviewed_postInput | discussionboard_report_reviewUpdateWithWhereUniqueWithoutReviewed_postInput[]\n    updateMany?: discussionboard_report_reviewUpdateManyWithWhereWithoutReviewed_postInput | discussionboard_report_reviewUpdateManyWithWhereWithoutReviewed_postInput[]\n    deleteMany?: discussionboard_report_reviewScalarWhereInput | discussionboard_report_reviewScalarWhereInput[]\n  }\n\n  export type discussionboard_warningUncheckedUpdateManyWithoutWarning_postNestedInput = {\n    create?: XOR<discussionboard_warningCreateWithoutWarning_postInput, discussionboard_warningUncheckedCreateWithoutWarning_postInput> | discussionboard_warningCreateWithoutWarning_postInput[] | discussionboard_warningUncheckedCreateWithoutWarning_postInput[]\n    connectOrCreate?: discussionboard_warningCreateOrConnectWithoutWarning_postInput | discussionboard_warningCreateOrConnectWithoutWarning_postInput[]\n    upsert?: discussionboard_warningUpsertWithWhereUniqueWithoutWarning_postInput | discussionboard_warningUpsertWithWhereUniqueWithoutWarning_postInput[]\n    createMany?: discussionboard_warningCreateManyWarning_postInputEnvelope\n    set?: discussionboard_warningWhereUniqueInput | discussionboard_warningWhereUniqueInput[]\n    disconnect?: discussionboard_warningWhereUniqueInput | discussionboard_warningWhereUniqueInput[]\n    delete?: discussionboard_warningWhereUniqueInput | discussionboard_warningWhereUniqueInput[]\n    connect?: discussionboard_warningWhereUniqueInput | discussionboard_warningWhereUniqueInput[]\n    update?: discussionboard_warningUpdateWithWhereUniqueWithoutWarning_postInput | discussionboard_warningUpdateWithWhereUniqueWithoutWarning_postInput[]\n    updateMany?: discussionboard_warningUpdateManyWithWhereWithoutWarning_postInput | discussionboard_warningUpdateManyWithWhereWithoutWarning_postInput[]\n    deleteMany?: discussionboard_warningScalarWhereInput | discussionboard_warningScalarWhereInput[]\n  }\n\n  export type discussionboard_notificationUncheckedUpdateManyWithoutRelated_postNestedInput = {\n    create?: XOR<discussionboard_notificationCreateWithoutRelated_postInput, discussionboard_notificationUncheckedCreateWithoutRelated_postInput> | discussionboard_notificationCreateWithoutRelated_postInput[] | discussionboard_notificationUncheckedCreateWithoutRelated_postInput[]\n    connectOrCreate?: discussionboard_notificationCreateOrConnectWithoutRelated_postInput | discussionboard_notificationCreateOrConnectWithoutRelated_postInput[]\n    upsert?: discussionboard_notificationUpsertWithWhereUniqueWithoutRelated_postInput | discussionboard_notificationUpsertWithWhereUniqueWithoutRelated_postInput[]\n    createMany?: discussionboard_notificationCreateManyRelated_postInputEnvelope\n    set?: discussionboard_notificationWhereUniqueInput | discussionboard_notificationWhereUniqueInput[]\n    disconnect?: discussionboard_notificationWhereUniqueInput | discussionboard_notificationWhereUniqueInput[]\n    delete?: discussionboard_notificationWhereUniqueInput | discussionboard_notificationWhereUniqueInput[]\n    connect?: discussionboard_notificationWhereUniqueInput | discussionboard_notificationWhereUniqueInput[]\n    update?: discussionboard_notificationUpdateWithWhereUniqueWithoutRelated_postInput | discussionboard_notificationUpdateWithWhereUniqueWithoutRelated_postInput[]\n    updateMany?: discussionboard_notificationUpdateManyWithWhereWithoutRelated_postInput | discussionboard_notificationUpdateManyWithWhereWithoutRelated_postInput[]\n    deleteMany?: discussionboard_notificationScalarWhereInput | discussionboard_notificationScalarWhereInput[]\n  }\n\n  export type discussionboard_postCreateNestedManyWithoutCategoryInput = {\n    create?: XOR<discussionboard_postCreateWithoutCategoryInput, discussionboard_postUncheckedCreateWithoutCategoryInput> | discussionboard_postCreateWithoutCategoryInput[] | discussionboard_postUncheckedCreateWithoutCategoryInput[]\n    connectOrCreate?: discussionboard_postCreateOrConnectWithoutCategoryInput | discussionboard_postCreateOrConnectWithoutCategoryInput[]\n    createMany?: discussionboard_postCreateManyCategoryInputEnvelope\n    connect?: discussionboard_postWhereUniqueInput | discussionboard_postWhereUniqueInput[]\n  }\n\n  export type discussionboard_postUncheckedCreateNestedManyWithoutCategoryInput = {\n    create?: XOR<discussionboard_postCreateWithoutCategoryInput, discussionboard_postUncheckedCreateWithoutCategoryInput> | discussionboard_postCreateWithoutCategoryInput[] | discussionboard_postUncheckedCreateWithoutCategoryInput[]\n    connectOrCreate?: discussionboard_postCreateOrConnectWithoutCategoryInput | discussionboard_postCreateOrConnectWithoutCategoryInput[]\n    createMany?: discussionboard_postCreateManyCategoryInputEnvelope\n    connect?: discussionboard_postWhereUniqueInput | discussionboard_postWhereUniqueInput[]\n  }\n\n  export type discussionboard_postUpdateManyWithoutCategoryNestedInput = {\n    create?: XOR<discussionboard_postCreateWithoutCategoryInput, discussionboard_postUncheckedCreateWithoutCategoryInput> | discussionboard_postCreateWithoutCategoryInput[] | discussionboard_postUncheckedCreateWithoutCategoryInput[]\n    connectOrCreate?: discussionboard_postCreateOrConnectWithoutCategoryInput | discussionboard_postCreateOrConnectWithoutCategoryInput[]\n    upsert?: discussionboard_postUpsertWithWhereUniqueWithoutCategoryInput | discussionboard_postUpsertWithWhereUniqueWithoutCategoryInput[]\n    createMany?: discussionboard_postCreateManyCategoryInputEnvelope\n    set?: discussionboard_postWhereUniqueInput | discussionboard_postWhereUniqueInput[]\n    disconnect?: discussionboard_postWhereUniqueInput | discussionboard_postWhereUniqueInput[]\n    delete?: discussionboard_postWhereUniqueInput | discussionboard_postWhereUniqueInput[]\n    connect?: discussionboard_postWhereUniqueInput | discussionboard_postWhereUniqueInput[]\n    update?: discussionboard_postUpdateWithWhereUniqueWithoutCategoryInput | discussionboard_postUpdateWithWhereUniqueWithoutCategoryInput[]\n    updateMany?: discussionboard_postUpdateManyWithWhereWithoutCategoryInput | discussionboard_postUpdateManyWithWhereWithoutCategoryInput[]\n    deleteMany?: discussionboard_postScalarWhereInput | discussionboard_postScalarWhereInput[]\n  }\n\n  export type discussionboard_postUncheckedUpdateManyWithoutCategoryNestedInput = {\n    create?: XOR<discussionboard_postCreateWithoutCategoryInput, discussionboard_postUncheckedCreateWithoutCategoryInput> | discussionboard_postCreateWithoutCategoryInput[] | discussionboard_postUncheckedCreateWithoutCategoryInput[]\n    connectOrCreate?: discussionboard_postCreateOrConnectWithoutCategoryInput | discussionboard_postCreateOrConnectWithoutCategoryInput[]\n    upsert?: discussionboard_postUpsertWithWhereUniqueWithoutCategoryInput | discussionboard_postUpsertWithWhereUniqueWithoutCategoryInput[]\n    createMany?: discussionboard_postCreateManyCategoryInputEnvelope\n    set?: discussionboard_postWhereUniqueInput | discussionboard_postWhereUniqueInput[]\n    disconnect?: discussionboard_postWhereUniqueInput | discussionboard_postWhereUniqueInput[]\n    delete?: discussionboard_postWhereUniqueInput | discussionboard_postWhereUniqueInput[]\n    connect?: discussionboard_postWhereUniqueInput | discussionboard_postWhereUniqueInput[]\n    update?: discussionboard_postUpdateWithWhereUniqueWithoutCategoryInput | discussionboard_postUpdateWithWhereUniqueWithoutCategoryInput[]\n    updateMany?: discussionboard_postUpdateManyWithWhereWithoutCategoryInput | discussionboard_postUpdateManyWithWhereWithoutCategoryInput[]\n    deleteMany?: discussionboard_postScalarWhereInput | discussionboard_postScalarWhereInput[]\n  }\n\n  export type discussionboard_postCreateNestedOneWithoutDiscussionboard_post_attachmentInput = {\n    create?: XOR<discussionboard_postCreateWithoutDiscussionboard_post_attachmentInput, discussionboard_postUncheckedCreateWithoutDiscussionboard_post_attachmentInput>\n    connectOrCreate?: discussionboard_postCreateOrConnectWithoutDiscussionboard_post_attachmentInput\n    connect?: discussionboard_postWhereUniqueInput\n  }\n\n  export type discussionboard_postUpdateOneRequiredWithoutDiscussionboard_post_attachmentNestedInput = {\n    create?: XOR<discussionboard_postCreateWithoutDiscussionboard_post_attachmentInput, discussionboard_postUncheckedCreateWithoutDiscussionboard_post_attachmentInput>\n    connectOrCreate?: discussionboard_postCreateOrConnectWithoutDiscussionboard_post_attachmentInput\n    upsert?: discussionboard_postUpsertWithoutDiscussionboard_post_attachmentInput\n    connect?: discussionboard_postWhereUniqueInput\n    update?: XOR<XOR<discussionboard_postUpdateToOneWithWhereWithoutDiscussionboard_post_attachmentInput, discussionboard_postUpdateWithoutDiscussionboard_post_attachmentInput>, discussionboard_postUncheckedUpdateWithoutDiscussionboard_post_attachmentInput>\n  }\n\n  export type discussionboard_postCreateNestedOneWithoutDiscussionboard_commentsInput = {\n    create?: XOR<discussionboard_postCreateWithoutDiscussionboard_commentsInput, discussionboard_postUncheckedCreateWithoutDiscussionboard_commentsInput>\n    connectOrCreate?: discussionboard_postCreateOrConnectWithoutDiscussionboard_commentsInput\n    connect?: discussionboard_postWhereUniqueInput\n  }\n\n  export type discussionboard_userCreateNestedOneWithoutDiscussionboard_commentsInput = {\n    create?: XOR<discussionboard_userCreateWithoutDiscussionboard_commentsInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_commentsInput>\n    connectOrCreate?: discussionboard_userCreateOrConnectWithoutDiscussionboard_commentsInput\n    connect?: discussionboard_userWhereUniqueInput\n  }\n\n  export type discussionboard_commentsCreateNestedOneWithoutRecursiveInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutRecursiveInput, discussionboard_commentsUncheckedCreateWithoutRecursiveInput>\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutRecursiveInput\n    connect?: discussionboard_commentsWhereUniqueInput\n  }\n\n  export type discussionboard_commentsCreateNestedManyWithoutParent_commentInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutParent_commentInput, discussionboard_commentsUncheckedCreateWithoutParent_commentInput> | discussionboard_commentsCreateWithoutParent_commentInput[] | discussionboard_commentsUncheckedCreateWithoutParent_commentInput[]\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutParent_commentInput | discussionboard_commentsCreateOrConnectWithoutParent_commentInput[]\n    createMany?: discussionboard_commentsCreateManyParent_commentInputEnvelope\n    connect?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n  }\n\n  export type discussionboard_likesCreateNestedManyWithoutCommentInput = {\n    create?: XOR<discussionboard_likesCreateWithoutCommentInput, discussionboard_likesUncheckedCreateWithoutCommentInput> | discussionboard_likesCreateWithoutCommentInput[] | discussionboard_likesUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussionboard_likesCreateOrConnectWithoutCommentInput | discussionboard_likesCreateOrConnectWithoutCommentInput[]\n    createMany?: discussionboard_likesCreateManyCommentInputEnvelope\n    connect?: discussionboard_likesWhereUniqueInput | discussionboard_likesWhereUniqueInput[]\n  }\n\n  export type discussionboard_reportsCreateNestedManyWithoutCommentInput = {\n    create?: XOR<discussionboard_reportsCreateWithoutCommentInput, discussionboard_reportsUncheckedCreateWithoutCommentInput> | discussionboard_reportsCreateWithoutCommentInput[] | discussionboard_reportsUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussionboard_reportsCreateOrConnectWithoutCommentInput | discussionboard_reportsCreateOrConnectWithoutCommentInput[]\n    createMany?: discussionboard_reportsCreateManyCommentInputEnvelope\n    connect?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n  }\n\n  export type discussionboard_moderation_actionCreateNestedManyWithoutModerated_commentInput = {\n    create?: XOR<discussionboard_moderation_actionCreateWithoutModerated_commentInput, discussionboard_moderation_actionUncheckedCreateWithoutModerated_commentInput> | discussionboard_moderation_actionCreateWithoutModerated_commentInput[] | discussionboard_moderation_actionUncheckedCreateWithoutModerated_commentInput[]\n    connectOrCreate?: discussionboard_moderation_actionCreateOrConnectWithoutModerated_commentInput | discussionboard_moderation_actionCreateOrConnectWithoutModerated_commentInput[]\n    createMany?: discussionboard_moderation_actionCreateManyModerated_commentInputEnvelope\n    connect?: discussionboard_moderation_actionWhereUniqueInput | discussionboard_moderation_actionWhereUniqueInput[]\n  }\n\n  export type discussionboard_report_reviewCreateNestedManyWithoutReviewed_commentInput = {\n    create?: XOR<discussionboard_report_reviewCreateWithoutReviewed_commentInput, discussionboard_report_reviewUncheckedCreateWithoutReviewed_commentInput> | discussionboard_report_reviewCreateWithoutReviewed_commentInput[] | discussionboard_report_reviewUncheckedCreateWithoutReviewed_commentInput[]\n    connectOrCreate?: discussionboard_report_reviewCreateOrConnectWithoutReviewed_commentInput | discussionboard_report_reviewCreateOrConnectWithoutReviewed_commentInput[]\n    createMany?: discussionboard_report_reviewCreateManyReviewed_commentInputEnvelope\n    connect?: discussionboard_report_reviewWhereUniqueInput | discussionboard_report_reviewWhereUniqueInput[]\n  }\n\n  export type discussionboard_warningCreateNestedManyWithoutWarning_commentInput = {\n    create?: XOR<discussionboard_warningCreateWithoutWarning_commentInput, discussionboard_warningUncheckedCreateWithoutWarning_commentInput> | discussionboard_warningCreateWithoutWarning_commentInput[] | discussionboard_warningUncheckedCreateWithoutWarning_commentInput[]\n    connectOrCreate?: discussionboard_warningCreateOrConnectWithoutWarning_commentInput | discussionboard_warningCreateOrConnectWithoutWarning_commentInput[]\n    createMany?: discussionboard_warningCreateManyWarning_commentInputEnvelope\n    connect?: discussionboard_warningWhereUniqueInput | discussionboard_warningWhereUniqueInput[]\n  }\n\n  export type discussionboard_notificationCreateNestedManyWithoutRelated_commentInput = {\n    create?: XOR<discussionboard_notificationCreateWithoutRelated_commentInput, discussionboard_notificationUncheckedCreateWithoutRelated_commentInput> | discussionboard_notificationCreateWithoutRelated_commentInput[] | discussionboard_notificationUncheckedCreateWithoutRelated_commentInput[]\n    connectOrCreate?: discussionboard_notificationCreateOrConnectWithoutRelated_commentInput | discussionboard_notificationCreateOrConnectWithoutRelated_commentInput[]\n    createMany?: discussionboard_notificationCreateManyRelated_commentInputEnvelope\n    connect?: discussionboard_notificationWhereUniqueInput | discussionboard_notificationWhereUniqueInput[]\n  }\n\n  export type discussionboard_commentsUncheckedCreateNestedManyWithoutParent_commentInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutParent_commentInput, discussionboard_commentsUncheckedCreateWithoutParent_commentInput> | discussionboard_commentsCreateWithoutParent_commentInput[] | discussionboard_commentsUncheckedCreateWithoutParent_commentInput[]\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutParent_commentInput | discussionboard_commentsCreateOrConnectWithoutParent_commentInput[]\n    createMany?: discussionboard_commentsCreateManyParent_commentInputEnvelope\n    connect?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n  }\n\n  export type discussionboard_likesUncheckedCreateNestedManyWithoutCommentInput = {\n    create?: XOR<discussionboard_likesCreateWithoutCommentInput, discussionboard_likesUncheckedCreateWithoutCommentInput> | discussionboard_likesCreateWithoutCommentInput[] | discussionboard_likesUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussionboard_likesCreateOrConnectWithoutCommentInput | discussionboard_likesCreateOrConnectWithoutCommentInput[]\n    createMany?: discussionboard_likesCreateManyCommentInputEnvelope\n    connect?: discussionboard_likesWhereUniqueInput | discussionboard_likesWhereUniqueInput[]\n  }\n\n  export type discussionboard_reportsUncheckedCreateNestedManyWithoutCommentInput = {\n    create?: XOR<discussionboard_reportsCreateWithoutCommentInput, discussionboard_reportsUncheckedCreateWithoutCommentInput> | discussionboard_reportsCreateWithoutCommentInput[] | discussionboard_reportsUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussionboard_reportsCreateOrConnectWithoutCommentInput | discussionboard_reportsCreateOrConnectWithoutCommentInput[]\n    createMany?: discussionboard_reportsCreateManyCommentInputEnvelope\n    connect?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n  }\n\n  export type discussionboard_moderation_actionUncheckedCreateNestedManyWithoutModerated_commentInput = {\n    create?: XOR<discussionboard_moderation_actionCreateWithoutModerated_commentInput, discussionboard_moderation_actionUncheckedCreateWithoutModerated_commentInput> | discussionboard_moderation_actionCreateWithoutModerated_commentInput[] | discussionboard_moderation_actionUncheckedCreateWithoutModerated_commentInput[]\n    connectOrCreate?: discussionboard_moderation_actionCreateOrConnectWithoutModerated_commentInput | discussionboard_moderation_actionCreateOrConnectWithoutModerated_commentInput[]\n    createMany?: discussionboard_moderation_actionCreateManyModerated_commentInputEnvelope\n    connect?: discussionboard_moderation_actionWhereUniqueInput | discussionboard_moderation_actionWhereUniqueInput[]\n  }\n\n  export type discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewed_commentInput = {\n    create?: XOR<discussionboard_report_reviewCreateWithoutReviewed_commentInput, discussionboard_report_reviewUncheckedCreateWithoutReviewed_commentInput> | discussionboard_report_reviewCreateWithoutReviewed_commentInput[] | discussionboard_report_reviewUncheckedCreateWithoutReviewed_commentInput[]\n    connectOrCreate?: discussionboard_report_reviewCreateOrConnectWithoutReviewed_commentInput | discussionboard_report_reviewCreateOrConnectWithoutReviewed_commentInput[]\n    createMany?: discussionboard_report_reviewCreateManyReviewed_commentInputEnvelope\n    connect?: discussionboard_report_reviewWhereUniqueInput | discussionboard_report_reviewWhereUniqueInput[]\n  }\n\n  export type discussionboard_warningUncheckedCreateNestedManyWithoutWarning_commentInput = {\n    create?: XOR<discussionboard_warningCreateWithoutWarning_commentInput, discussionboard_warningUncheckedCreateWithoutWarning_commentInput> | discussionboard_warningCreateWithoutWarning_commentInput[] | discussionboard_warningUncheckedCreateWithoutWarning_commentInput[]\n    connectOrCreate?: discussionboard_warningCreateOrConnectWithoutWarning_commentInput | discussionboard_warningCreateOrConnectWithoutWarning_commentInput[]\n    createMany?: discussionboard_warningCreateManyWarning_commentInputEnvelope\n    connect?: discussionboard_warningWhereUniqueInput | discussionboard_warningWhereUniqueInput[]\n  }\n\n  export type discussionboard_notificationUncheckedCreateNestedManyWithoutRelated_commentInput = {\n    create?: XOR<discussionboard_notificationCreateWithoutRelated_commentInput, discussionboard_notificationUncheckedCreateWithoutRelated_commentInput> | discussionboard_notificationCreateWithoutRelated_commentInput[] | discussionboard_notificationUncheckedCreateWithoutRelated_commentInput[]\n    connectOrCreate?: discussionboard_notificationCreateOrConnectWithoutRelated_commentInput | discussionboard_notificationCreateOrConnectWithoutRelated_commentInput[]\n    createMany?: discussionboard_notificationCreateManyRelated_commentInputEnvelope\n    connect?: discussionboard_notificationWhereUniqueInput | discussionboard_notificationWhereUniqueInput[]\n  }\n\n  export type discussionboard_postUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput = {\n    create?: XOR<discussionboard_postCreateWithoutDiscussionboard_commentsInput, discussionboard_postUncheckedCreateWithoutDiscussionboard_commentsInput>\n    connectOrCreate?: discussionboard_postCreateOrConnectWithoutDiscussionboard_commentsInput\n    upsert?: discussionboard_postUpsertWithoutDiscussionboard_commentsInput\n    connect?: discussionboard_postWhereUniqueInput\n    update?: XOR<XOR<discussionboard_postUpdateToOneWithWhereWithoutDiscussionboard_commentsInput, discussionboard_postUpdateWithoutDiscussionboard_commentsInput>, discussionboard_postUncheckedUpdateWithoutDiscussionboard_commentsInput>\n  }\n\n  export type discussionboard_userUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput = {\n    create?: XOR<discussionboard_userCreateWithoutDiscussionboard_commentsInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_commentsInput>\n    connectOrCreate?: discussionboard_userCreateOrConnectWithoutDiscussionboard_commentsInput\n    upsert?: discussionboard_userUpsertWithoutDiscussionboard_commentsInput\n    connect?: discussionboard_userWhereUniqueInput\n    update?: XOR<XOR<discussionboard_userUpdateToOneWithWhereWithoutDiscussionboard_commentsInput, discussionboard_userUpdateWithoutDiscussionboard_commentsInput>, discussionboard_userUncheckedUpdateWithoutDiscussionboard_commentsInput>\n  }\n\n  export type discussionboard_commentsUpdateOneWithoutRecursiveNestedInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutRecursiveInput, discussionboard_commentsUncheckedCreateWithoutRecursiveInput>\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutRecursiveInput\n    upsert?: discussionboard_commentsUpsertWithoutRecursiveInput\n    disconnect?: discussionboard_commentsWhereInput | boolean\n    delete?: discussionboard_commentsWhereInput | boolean\n    connect?: discussionboard_commentsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_commentsUpdateToOneWithWhereWithoutRecursiveInput, discussionboard_commentsUpdateWithoutRecursiveInput>, discussionboard_commentsUncheckedUpdateWithoutRecursiveInput>\n  }\n\n  export type discussionboard_commentsUpdateManyWithoutParent_commentNestedInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutParent_commentInput, discussionboard_commentsUncheckedCreateWithoutParent_commentInput> | discussionboard_commentsCreateWithoutParent_commentInput[] | discussionboard_commentsUncheckedCreateWithoutParent_commentInput[]\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutParent_commentInput | discussionboard_commentsCreateOrConnectWithoutParent_commentInput[]\n    upsert?: discussionboard_commentsUpsertWithWhereUniqueWithoutParent_commentInput | discussionboard_commentsUpsertWithWhereUniqueWithoutParent_commentInput[]\n    createMany?: discussionboard_commentsCreateManyParent_commentInputEnvelope\n    set?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    disconnect?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    delete?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    connect?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    update?: discussionboard_commentsUpdateWithWhereUniqueWithoutParent_commentInput | discussionboard_commentsUpdateWithWhereUniqueWithoutParent_commentInput[]\n    updateMany?: discussionboard_commentsUpdateManyWithWhereWithoutParent_commentInput | discussionboard_commentsUpdateManyWithWhereWithoutParent_commentInput[]\n    deleteMany?: discussionboard_commentsScalarWhereInput | discussionboard_commentsScalarWhereInput[]\n  }\n\n  export type discussionboard_likesUpdateManyWithoutCommentNestedInput = {\n    create?: XOR<discussionboard_likesCreateWithoutCommentInput, discussionboard_likesUncheckedCreateWithoutCommentInput> | discussionboard_likesCreateWithoutCommentInput[] | discussionboard_likesUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussionboard_likesCreateOrConnectWithoutCommentInput | discussionboard_likesCreateOrConnectWithoutCommentInput[]\n    upsert?: discussionboard_likesUpsertWithWhereUniqueWithoutCommentInput | discussionboard_likesUpsertWithWhereUniqueWithoutCommentInput[]\n    createMany?: discussionboard_likesCreateManyCommentInputEnvelope\n    set?: discussionboard_likesWhereUniqueInput | discussionboard_likesWhereUniqueInput[]\n    disconnect?: discussionboard_likesWhereUniqueInput | discussionboard_likesWhereUniqueInput[]\n    delete?: discussionboard_likesWhereUniqueInput | discussionboard_likesWhereUniqueInput[]\n    connect?: discussionboard_likesWhereUniqueInput | discussionboard_likesWhereUniqueInput[]\n    update?: discussionboard_likesUpdateWithWhereUniqueWithoutCommentInput | discussionboard_likesUpdateWithWhereUniqueWithoutCommentInput[]\n    updateMany?: discussionboard_likesUpdateManyWithWhereWithoutCommentInput | discussionboard_likesUpdateManyWithWhereWithoutCommentInput[]\n    deleteMany?: discussionboard_likesScalarWhereInput | discussionboard_likesScalarWhereInput[]\n  }\n\n  export type discussionboard_reportsUpdateManyWithoutCommentNestedInput = {\n    create?: XOR<discussionboard_reportsCreateWithoutCommentInput, discussionboard_reportsUncheckedCreateWithoutCommentInput> | discussionboard_reportsCreateWithoutCommentInput[] | discussionboard_reportsUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussionboard_reportsCreateOrConnectWithoutCommentInput | discussionboard_reportsCreateOrConnectWithoutCommentInput[]\n    upsert?: discussionboard_reportsUpsertWithWhereUniqueWithoutCommentInput | discussionboard_reportsUpsertWithWhereUniqueWithoutCommentInput[]\n    createMany?: discussionboard_reportsCreateManyCommentInputEnvelope\n    set?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    disconnect?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    delete?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    connect?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    update?: discussionboard_reportsUpdateWithWhereUniqueWithoutCommentInput | discussionboard_reportsUpdateWithWhereUniqueWithoutCommentInput[]\n    updateMany?: discussionboard_reportsUpdateManyWithWhereWithoutCommentInput | discussionboard_reportsUpdateManyWithWhereWithoutCommentInput[]\n    deleteMany?: discussionboard_reportsScalarWhereInput | discussionboard_reportsScalarWhereInput[]\n  }\n\n  export type discussionboard_moderation_actionUpdateManyWithoutModerated_commentNestedInput = {\n    create?: XOR<discussionboard_moderation_actionCreateWithoutModerated_commentInput, discussionboard_moderation_actionUncheckedCreateWithoutModerated_commentInput> | discussionboard_moderation_actionCreateWithoutModerated_commentInput[] | discussionboard_moderation_actionUncheckedCreateWithoutModerated_commentInput[]\n    connectOrCreate?: discussionboard_moderation_actionCreateOrConnectWithoutModerated_commentInput | discussionboard_moderation_actionCreateOrConnectWithoutModerated_commentInput[]\n    upsert?: discussionboard_moderation_actionUpsertWithWhereUniqueWithoutModerated_commentInput | discussionboard_moderation_actionUpsertWithWhereUniqueWithoutModerated_commentInput[]\n    createMany?: discussionboard_moderation_actionCreateManyModerated_commentInputEnvelope\n    set?: discussionboard_moderation_actionWhereUniqueInput | discussionboard_moderation_actionWhereUniqueInput[]\n    disconnect?: discussionboard_moderation_actionWhereUniqueInput | discussionboard_moderation_actionWhereUniqueInput[]\n    delete?: discussionboard_moderation_actionWhereUniqueInput | discussionboard_moderation_actionWhereUniqueInput[]\n    connect?: discussionboard_moderation_actionWhereUniqueInput | discussionboard_moderation_actionWhereUniqueInput[]\n    update?: discussionboard_moderation_actionUpdateWithWhereUniqueWithoutModerated_commentInput | discussionboard_moderation_actionUpdateWithWhereUniqueWithoutModerated_commentInput[]\n    updateMany?: discussionboard_moderation_actionUpdateManyWithWhereWithoutModerated_commentInput | discussionboard_moderation_actionUpdateManyWithWhereWithoutModerated_commentInput[]\n    deleteMany?: discussionboard_moderation_actionScalarWhereInput | discussionboard_moderation_actionScalarWhereInput[]\n  }\n\n  export type discussionboard_report_reviewUpdateManyWithoutReviewed_commentNestedInput = {\n    create?: XOR<discussionboard_report_reviewCreateWithoutReviewed_commentInput, discussionboard_report_reviewUncheckedCreateWithoutReviewed_commentInput> | discussionboard_report_reviewCreateWithoutReviewed_commentInput[] | discussionboard_report_reviewUncheckedCreateWithoutReviewed_commentInput[]\n    connectOrCreate?: discussionboard_report_reviewCreateOrConnectWithoutReviewed_commentInput | discussionboard_report_reviewCreateOrConnectWithoutReviewed_commentInput[]\n    upsert?: discussionboard_report_reviewUpsertWithWhereUniqueWithoutReviewed_commentInput | discussionboard_report_reviewUpsertWithWhereUniqueWithoutReviewed_commentInput[]\n    createMany?: discussionboard_report_reviewCreateManyReviewed_commentInputEnvelope\n    set?: discussionboard_report_reviewWhereUniqueInput | discussionboard_report_reviewWhereUniqueInput[]\n    disconnect?: discussionboard_report_reviewWhereUniqueInput | discussionboard_report_reviewWhereUniqueInput[]\n    delete?: discussionboard_report_reviewWhereUniqueInput | discussionboard_report_reviewWhereUniqueInput[]\n    connect?: discussionboard_report_reviewWhereUniqueInput | discussionboard_report_reviewWhereUniqueInput[]\n    update?: discussionboard_report_reviewUpdateWithWhereUniqueWithoutReviewed_commentInput | discussionboard_report_reviewUpdateWithWhereUniqueWithoutReviewed_commentInput[]\n    updateMany?: discussionboard_report_reviewUpdateManyWithWhereWithoutReviewed_commentInput | discussionboard_report_reviewUpdateManyWithWhereWithoutReviewed_commentInput[]\n    deleteMany?: discussionboard_report_reviewScalarWhereInput | discussionboard_report_reviewScalarWhereInput[]\n  }\n\n  export type discussionboard_warningUpdateManyWithoutWarning_commentNestedInput = {\n    create?: XOR<discussionboard_warningCreateWithoutWarning_commentInput, discussionboard_warningUncheckedCreateWithoutWarning_commentInput> | discussionboard_warningCreateWithoutWarning_commentInput[] | discussionboard_warningUncheckedCreateWithoutWarning_commentInput[]\n    connectOrCreate?: discussionboard_warningCreateOrConnectWithoutWarning_commentInput | discussionboard_warningCreateOrConnectWithoutWarning_commentInput[]\n    upsert?: discussionboard_warningUpsertWithWhereUniqueWithoutWarning_commentInput | discussionboard_warningUpsertWithWhereUniqueWithoutWarning_commentInput[]\n    createMany?: discussionboard_warningCreateManyWarning_commentInputEnvelope\n    set?: discussionboard_warningWhereUniqueInput | discussionboard_warningWhereUniqueInput[]\n    disconnect?: discussionboard_warningWhereUniqueInput | discussionboard_warningWhereUniqueInput[]\n    delete?: discussionboard_warningWhereUniqueInput | discussionboard_warningWhereUniqueInput[]\n    connect?: discussionboard_warningWhereUniqueInput | discussionboard_warningWhereUniqueInput[]\n    update?: discussionboard_warningUpdateWithWhereUniqueWithoutWarning_commentInput | discussionboard_warningUpdateWithWhereUniqueWithoutWarning_commentInput[]\n    updateMany?: discussionboard_warningUpdateManyWithWhereWithoutWarning_commentInput | discussionboard_warningUpdateManyWithWhereWithoutWarning_commentInput[]\n    deleteMany?: discussionboard_warningScalarWhereInput | discussionboard_warningScalarWhereInput[]\n  }\n\n  export type discussionboard_notificationUpdateManyWithoutRelated_commentNestedInput = {\n    create?: XOR<discussionboard_notificationCreateWithoutRelated_commentInput, discussionboard_notificationUncheckedCreateWithoutRelated_commentInput> | discussionboard_notificationCreateWithoutRelated_commentInput[] | discussionboard_notificationUncheckedCreateWithoutRelated_commentInput[]\n    connectOrCreate?: discussionboard_notificationCreateOrConnectWithoutRelated_commentInput | discussionboard_notificationCreateOrConnectWithoutRelated_commentInput[]\n    upsert?: discussionboard_notificationUpsertWithWhereUniqueWithoutRelated_commentInput | discussionboard_notificationUpsertWithWhereUniqueWithoutRelated_commentInput[]\n    createMany?: discussionboard_notificationCreateManyRelated_commentInputEnvelope\n    set?: discussionboard_notificationWhereUniqueInput | discussionboard_notificationWhereUniqueInput[]\n    disconnect?: discussionboard_notificationWhereUniqueInput | discussionboard_notificationWhereUniqueInput[]\n    delete?: discussionboard_notificationWhereUniqueInput | discussionboard_notificationWhereUniqueInput[]\n    connect?: discussionboard_notificationWhereUniqueInput | discussionboard_notificationWhereUniqueInput[]\n    update?: discussionboard_notificationUpdateWithWhereUniqueWithoutRelated_commentInput | discussionboard_notificationUpdateWithWhereUniqueWithoutRelated_commentInput[]\n    updateMany?: discussionboard_notificationUpdateManyWithWhereWithoutRelated_commentInput | discussionboard_notificationUpdateManyWithWhereWithoutRelated_commentInput[]\n    deleteMany?: discussionboard_notificationScalarWhereInput | discussionboard_notificationScalarWhereInput[]\n  }\n\n  export type discussionboard_commentsUncheckedUpdateManyWithoutParent_commentNestedInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutParent_commentInput, discussionboard_commentsUncheckedCreateWithoutParent_commentInput> | discussionboard_commentsCreateWithoutParent_commentInput[] | discussionboard_commentsUncheckedCreateWithoutParent_commentInput[]\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutParent_commentInput | discussionboard_commentsCreateOrConnectWithoutParent_commentInput[]\n    upsert?: discussionboard_commentsUpsertWithWhereUniqueWithoutParent_commentInput | discussionboard_commentsUpsertWithWhereUniqueWithoutParent_commentInput[]\n    createMany?: discussionboard_commentsCreateManyParent_commentInputEnvelope\n    set?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    disconnect?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    delete?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    connect?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    update?: discussionboard_commentsUpdateWithWhereUniqueWithoutParent_commentInput | discussionboard_commentsUpdateWithWhereUniqueWithoutParent_commentInput[]\n    updateMany?: discussionboard_commentsUpdateManyWithWhereWithoutParent_commentInput | discussionboard_commentsUpdateManyWithWhereWithoutParent_commentInput[]\n    deleteMany?: discussionboard_commentsScalarWhereInput | discussionboard_commentsScalarWhereInput[]\n  }\n\n  export type discussionboard_likesUncheckedUpdateManyWithoutCommentNestedInput = {\n    create?: XOR<discussionboard_likesCreateWithoutCommentInput, discussionboard_likesUncheckedCreateWithoutCommentInput> | discussionboard_likesCreateWithoutCommentInput[] | discussionboard_likesUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussionboard_likesCreateOrConnectWithoutCommentInput | discussionboard_likesCreateOrConnectWithoutCommentInput[]\n    upsert?: discussionboard_likesUpsertWithWhereUniqueWithoutCommentInput | discussionboard_likesUpsertWithWhereUniqueWithoutCommentInput[]\n    createMany?: discussionboard_likesCreateManyCommentInputEnvelope\n    set?: discussionboard_likesWhereUniqueInput | discussionboard_likesWhereUniqueInput[]\n    disconnect?: discussionboard_likesWhereUniqueInput | discussionboard_likesWhereUniqueInput[]\n    delete?: discussionboard_likesWhereUniqueInput | discussionboard_likesWhereUniqueInput[]\n    connect?: discussionboard_likesWhereUniqueInput | discussionboard_likesWhereUniqueInput[]\n    update?: discussionboard_likesUpdateWithWhereUniqueWithoutCommentInput | discussionboard_likesUpdateWithWhereUniqueWithoutCommentInput[]\n    updateMany?: discussionboard_likesUpdateManyWithWhereWithoutCommentInput | discussionboard_likesUpdateManyWithWhereWithoutCommentInput[]\n    deleteMany?: discussionboard_likesScalarWhereInput | discussionboard_likesScalarWhereInput[]\n  }\n\n  export type discussionboard_reportsUncheckedUpdateManyWithoutCommentNestedInput = {\n    create?: XOR<discussionboard_reportsCreateWithoutCommentInput, discussionboard_reportsUncheckedCreateWithoutCommentInput> | discussionboard_reportsCreateWithoutCommentInput[] | discussionboard_reportsUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussionboard_reportsCreateOrConnectWithoutCommentInput | discussionboard_reportsCreateOrConnectWithoutCommentInput[]\n    upsert?: discussionboard_reportsUpsertWithWhereUniqueWithoutCommentInput | discussionboard_reportsUpsertWithWhereUniqueWithoutCommentInput[]\n    createMany?: discussionboard_reportsCreateManyCommentInputEnvelope\n    set?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    disconnect?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    delete?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    connect?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    update?: discussionboard_reportsUpdateWithWhereUniqueWithoutCommentInput | discussionboard_reportsUpdateWithWhereUniqueWithoutCommentInput[]\n    updateMany?: discussionboard_reportsUpdateManyWithWhereWithoutCommentInput | discussionboard_reportsUpdateManyWithWhereWithoutCommentInput[]\n    deleteMany?: discussionboard_reportsScalarWhereInput | discussionboard_reportsScalarWhereInput[]\n  }\n\n  export type discussionboard_moderation_actionUncheckedUpdateManyWithoutModerated_commentNestedInput = {\n    create?: XOR<discussionboard_moderation_actionCreateWithoutModerated_commentInput, discussionboard_moderation_actionUncheckedCreateWithoutModerated_commentInput> | discussionboard_moderation_actionCreateWithoutModerated_commentInput[] | discussionboard_moderation_actionUncheckedCreateWithoutModerated_commentInput[]\n    connectOrCreate?: discussionboard_moderation_actionCreateOrConnectWithoutModerated_commentInput | discussionboard_moderation_actionCreateOrConnectWithoutModerated_commentInput[]\n    upsert?: discussionboard_moderation_actionUpsertWithWhereUniqueWithoutModerated_commentInput | discussionboard_moderation_actionUpsertWithWhereUniqueWithoutModerated_commentInput[]\n    createMany?: discussionboard_moderation_actionCreateManyModerated_commentInputEnvelope\n    set?: discussionboard_moderation_actionWhereUniqueInput | discussionboard_moderation_actionWhereUniqueInput[]\n    disconnect?: discussionboard_moderation_actionWhereUniqueInput | discussionboard_moderation_actionWhereUniqueInput[]\n    delete?: discussionboard_moderation_actionWhereUniqueInput | discussionboard_moderation_actionWhereUniqueInput[]\n    connect?: discussionboard_moderation_actionWhereUniqueInput | discussionboard_moderation_actionWhereUniqueInput[]\n    update?: discussionboard_moderation_actionUpdateWithWhereUniqueWithoutModerated_commentInput | discussionboard_moderation_actionUpdateWithWhereUniqueWithoutModerated_commentInput[]\n    updateMany?: discussionboard_moderation_actionUpdateManyWithWhereWithoutModerated_commentInput | discussionboard_moderation_actionUpdateManyWithWhereWithoutModerated_commentInput[]\n    deleteMany?: discussionboard_moderation_actionScalarWhereInput | discussionboard_moderation_actionScalarWhereInput[]\n  }\n\n  export type discussionboard_report_reviewUncheckedUpdateManyWithoutReviewed_commentNestedInput = {\n    create?: XOR<discussionboard_report_reviewCreateWithoutReviewed_commentInput, discussionboard_report_reviewUncheckedCreateWithoutReviewed_commentInput> | discussionboard_report_reviewCreateWithoutReviewed_commentInput[] | discussionboard_report_reviewUncheckedCreateWithoutReviewed_commentInput[]\n    connectOrCreate?: discussionboard_report_reviewCreateOrConnectWithoutReviewed_commentInput | discussionboard_report_reviewCreateOrConnectWithoutReviewed_commentInput[]\n    upsert?: discussionboard_report_reviewUpsertWithWhereUniqueWithoutReviewed_commentInput | discussionboard_report_reviewUpsertWithWhereUniqueWithoutReviewed_commentInput[]\n    createMany?: discussionboard_report_reviewCreateManyReviewed_commentInputEnvelope\n    set?: discussionboard_report_reviewWhereUniqueInput | discussionboard_report_reviewWhereUniqueInput[]\n    disconnect?: discussionboard_report_reviewWhereUniqueInput | discussionboard_report_reviewWhereUniqueInput[]\n    delete?: discussionboard_report_reviewWhereUniqueInput | discussionboard_report_reviewWhereUniqueInput[]\n    connect?: discussionboard_report_reviewWhereUniqueInput | discussionboard_report_reviewWhereUniqueInput[]\n    update?: discussionboard_report_reviewUpdateWithWhereUniqueWithoutReviewed_commentInput | discussionboard_report_reviewUpdateWithWhereUniqueWithoutReviewed_commentInput[]\n    updateMany?: discussionboard_report_reviewUpdateManyWithWhereWithoutReviewed_commentInput | discussionboard_report_reviewUpdateManyWithWhereWithoutReviewed_commentInput[]\n    deleteMany?: discussionboard_report_reviewScalarWhereInput | discussionboard_report_reviewScalarWhereInput[]\n  }\n\n  export type discussionboard_warningUncheckedUpdateManyWithoutWarning_commentNestedInput = {\n    create?: XOR<discussionboard_warningCreateWithoutWarning_commentInput, discussionboard_warningUncheckedCreateWithoutWarning_commentInput> | discussionboard_warningCreateWithoutWarning_commentInput[] | discussionboard_warningUncheckedCreateWithoutWarning_commentInput[]\n    connectOrCreate?: discussionboard_warningCreateOrConnectWithoutWarning_commentInput | discussionboard_warningCreateOrConnectWithoutWarning_commentInput[]\n    upsert?: discussionboard_warningUpsertWithWhereUniqueWithoutWarning_commentInput | discussionboard_warningUpsertWithWhereUniqueWithoutWarning_commentInput[]\n    createMany?: discussionboard_warningCreateManyWarning_commentInputEnvelope\n    set?: discussionboard_warningWhereUniqueInput | discussionboard_warningWhereUniqueInput[]\n    disconnect?: discussionboard_warningWhereUniqueInput | discussionboard_warningWhereUniqueInput[]\n    delete?: discussionboard_warningWhereUniqueInput | discussionboard_warningWhereUniqueInput[]\n    connect?: discussionboard_warningWhereUniqueInput | discussionboard_warningWhereUniqueInput[]\n    update?: discussionboard_warningUpdateWithWhereUniqueWithoutWarning_commentInput | discussionboard_warningUpdateWithWhereUniqueWithoutWarning_commentInput[]\n    updateMany?: discussionboard_warningUpdateManyWithWhereWithoutWarning_commentInput | discussionboard_warningUpdateManyWithWhereWithoutWarning_commentInput[]\n    deleteMany?: discussionboard_warningScalarWhereInput | discussionboard_warningScalarWhereInput[]\n  }\n\n  export type discussionboard_notificationUncheckedUpdateManyWithoutRelated_commentNestedInput = {\n    create?: XOR<discussionboard_notificationCreateWithoutRelated_commentInput, discussionboard_notificationUncheckedCreateWithoutRelated_commentInput> | discussionboard_notificationCreateWithoutRelated_commentInput[] | discussionboard_notificationUncheckedCreateWithoutRelated_commentInput[]\n    connectOrCreate?: discussionboard_notificationCreateOrConnectWithoutRelated_commentInput | discussionboard_notificationCreateOrConnectWithoutRelated_commentInput[]\n    upsert?: discussionboard_notificationUpsertWithWhereUniqueWithoutRelated_commentInput | discussionboard_notificationUpsertWithWhereUniqueWithoutRelated_commentInput[]\n    createMany?: discussionboard_notificationCreateManyRelated_commentInputEnvelope\n    set?: discussionboard_notificationWhereUniqueInput | discussionboard_notificationWhereUniqueInput[]\n    disconnect?: discussionboard_notificationWhereUniqueInput | discussionboard_notificationWhereUniqueInput[]\n    delete?: discussionboard_notificationWhereUniqueInput | discussionboard_notificationWhereUniqueInput[]\n    connect?: discussionboard_notificationWhereUniqueInput | discussionboard_notificationWhereUniqueInput[]\n    update?: discussionboard_notificationUpdateWithWhereUniqueWithoutRelated_commentInput | discussionboard_notificationUpdateWithWhereUniqueWithoutRelated_commentInput[]\n    updateMany?: discussionboard_notificationUpdateManyWithWhereWithoutRelated_commentInput | discussionboard_notificationUpdateManyWithWhereWithoutRelated_commentInput[]\n    deleteMany?: discussionboard_notificationScalarWhereInput | discussionboard_notificationScalarWhereInput[]\n  }\n\n  export type discussionboard_userCreateNestedOneWithoutDiscussionboard_likesInput = {\n    create?: XOR<discussionboard_userCreateWithoutDiscussionboard_likesInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_likesInput>\n    connectOrCreate?: discussionboard_userCreateOrConnectWithoutDiscussionboard_likesInput\n    connect?: discussionboard_userWhereUniqueInput\n  }\n\n  export type discussionboard_postCreateNestedOneWithoutDiscussionboard_likesInput = {\n    create?: XOR<discussionboard_postCreateWithoutDiscussionboard_likesInput, discussionboard_postUncheckedCreateWithoutDiscussionboard_likesInput>\n    connectOrCreate?: discussionboard_postCreateOrConnectWithoutDiscussionboard_likesInput\n    connect?: discussionboard_postWhereUniqueInput\n  }\n\n  export type discussionboard_commentsCreateNestedOneWithoutDiscussionboard_likesInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutDiscussionboard_likesInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_likesInput>\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutDiscussionboard_likesInput\n    connect?: discussionboard_commentsWhereUniqueInput\n  }\n\n  export type discussionboard_userUpdateOneRequiredWithoutDiscussionboard_likesNestedInput = {\n    create?: XOR<discussionboard_userCreateWithoutDiscussionboard_likesInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_likesInput>\n    connectOrCreate?: discussionboard_userCreateOrConnectWithoutDiscussionboard_likesInput\n    upsert?: discussionboard_userUpsertWithoutDiscussionboard_likesInput\n    connect?: discussionboard_userWhereUniqueInput\n    update?: XOR<XOR<discussionboard_userUpdateToOneWithWhereWithoutDiscussionboard_likesInput, discussionboard_userUpdateWithoutDiscussionboard_likesInput>, discussionboard_userUncheckedUpdateWithoutDiscussionboard_likesInput>\n  }\n\n  export type discussionboard_postUpdateOneWithoutDiscussionboard_likesNestedInput = {\n    create?: XOR<discussionboard_postCreateWithoutDiscussionboard_likesInput, discussionboard_postUncheckedCreateWithoutDiscussionboard_likesInput>\n    connectOrCreate?: discussionboard_postCreateOrConnectWithoutDiscussionboard_likesInput\n    upsert?: discussionboard_postUpsertWithoutDiscussionboard_likesInput\n    disconnect?: discussionboard_postWhereInput | boolean\n    delete?: discussionboard_postWhereInput | boolean\n    connect?: discussionboard_postWhereUniqueInput\n    update?: XOR<XOR<discussionboard_postUpdateToOneWithWhereWithoutDiscussionboard_likesInput, discussionboard_postUpdateWithoutDiscussionboard_likesInput>, discussionboard_postUncheckedUpdateWithoutDiscussionboard_likesInput>\n  }\n\n  export type discussionboard_commentsUpdateOneWithoutDiscussionboard_likesNestedInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutDiscussionboard_likesInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_likesInput>\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutDiscussionboard_likesInput\n    upsert?: discussionboard_commentsUpsertWithoutDiscussionboard_likesInput\n    disconnect?: discussionboard_commentsWhereInput | boolean\n    delete?: discussionboard_commentsWhereInput | boolean\n    connect?: discussionboard_commentsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_commentsUpdateToOneWithWhereWithoutDiscussionboard_likesInput, discussionboard_commentsUpdateWithoutDiscussionboard_likesInput>, discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_likesInput>\n  }\n\n  export type discussionboard_userCreateNestedOneWithoutDiscussionboard_reportsInput = {\n    create?: XOR<discussionboard_userCreateWithoutDiscussionboard_reportsInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_reportsInput>\n    connectOrCreate?: discussionboard_userCreateOrConnectWithoutDiscussionboard_reportsInput\n    connect?: discussionboard_userWhereUniqueInput\n  }\n\n  export type discussionboard_postCreateNestedOneWithoutDiscussionboard_reportsInput = {\n    create?: XOR<discussionboard_postCreateWithoutDiscussionboard_reportsInput, discussionboard_postUncheckedCreateWithoutDiscussionboard_reportsInput>\n    connectOrCreate?: discussionboard_postCreateOrConnectWithoutDiscussionboard_reportsInput\n    connect?: discussionboard_postWhereUniqueInput\n  }\n\n  export type discussionboard_commentsCreateNestedOneWithoutDiscussionboard_reportsInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutDiscussionboard_reportsInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_reportsInput>\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutDiscussionboard_reportsInput\n    connect?: discussionboard_commentsWhereUniqueInput\n  }\n\n  export type discussionboard_report_reviewCreateNestedManyWithoutReportInput = {\n    create?: XOR<discussionboard_report_reviewCreateWithoutReportInput, discussionboard_report_reviewUncheckedCreateWithoutReportInput> | discussionboard_report_reviewCreateWithoutReportInput[] | discussionboard_report_reviewUncheckedCreateWithoutReportInput[]\n    connectOrCreate?: discussionboard_report_reviewCreateOrConnectWithoutReportInput | discussionboard_report_reviewCreateOrConnectWithoutReportInput[]\n    createMany?: discussionboard_report_reviewCreateManyReportInputEnvelope\n    connect?: discussionboard_report_reviewWhereUniqueInput | discussionboard_report_reviewWhereUniqueInput[]\n  }\n\n  export type discussionboard_report_reviewUncheckedCreateNestedManyWithoutReportInput = {\n    create?: XOR<discussionboard_report_reviewCreateWithoutReportInput, discussionboard_report_reviewUncheckedCreateWithoutReportInput> | discussionboard_report_reviewCreateWithoutReportInput[] | discussionboard_report_reviewUncheckedCreateWithoutReportInput[]\n    connectOrCreate?: discussionboard_report_reviewCreateOrConnectWithoutReportInput | discussionboard_report_reviewCreateOrConnectWithoutReportInput[]\n    createMany?: discussionboard_report_reviewCreateManyReportInputEnvelope\n    connect?: discussionboard_report_reviewWhereUniqueInput | discussionboard_report_reviewWhereUniqueInput[]\n  }\n\n  export type discussionboard_userUpdateOneRequiredWithoutDiscussionboard_reportsNestedInput = {\n    create?: XOR<discussionboard_userCreateWithoutDiscussionboard_reportsInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_reportsInput>\n    connectOrCreate?: discussionboard_userCreateOrConnectWithoutDiscussionboard_reportsInput\n    upsert?: discussionboard_userUpsertWithoutDiscussionboard_reportsInput\n    connect?: discussionboard_userWhereUniqueInput\n    update?: XOR<XOR<discussionboard_userUpdateToOneWithWhereWithoutDiscussionboard_reportsInput, discussionboard_userUpdateWithoutDiscussionboard_reportsInput>, discussionboard_userUncheckedUpdateWithoutDiscussionboard_reportsInput>\n  }\n\n  export type discussionboard_postUpdateOneWithoutDiscussionboard_reportsNestedInput = {\n    create?: XOR<discussionboard_postCreateWithoutDiscussionboard_reportsInput, discussionboard_postUncheckedCreateWithoutDiscussionboard_reportsInput>\n    connectOrCreate?: discussionboard_postCreateOrConnectWithoutDiscussionboard_reportsInput\n    upsert?: discussionboard_postUpsertWithoutDiscussionboard_reportsInput\n    disconnect?: discussionboard_postWhereInput | boolean\n    delete?: discussionboard_postWhereInput | boolean\n    connect?: discussionboard_postWhereUniqueInput\n    update?: XOR<XOR<discussionboard_postUpdateToOneWithWhereWithoutDiscussionboard_reportsInput, discussionboard_postUpdateWithoutDiscussionboard_reportsInput>, discussionboard_postUncheckedUpdateWithoutDiscussionboard_reportsInput>\n  }\n\n  export type discussionboard_commentsUpdateOneWithoutDiscussionboard_reportsNestedInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutDiscussionboard_reportsInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_reportsInput>\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutDiscussionboard_reportsInput\n    upsert?: discussionboard_commentsUpsertWithoutDiscussionboard_reportsInput\n    disconnect?: discussionboard_commentsWhereInput | boolean\n    delete?: discussionboard_commentsWhereInput | boolean\n    connect?: discussionboard_commentsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_commentsUpdateToOneWithWhereWithoutDiscussionboard_reportsInput, discussionboard_commentsUpdateWithoutDiscussionboard_reportsInput>, discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_reportsInput>\n  }\n\n  export type discussionboard_report_reviewUpdateManyWithoutReportNestedInput = {\n    create?: XOR<discussionboard_report_reviewCreateWithoutReportInput, discussionboard_report_reviewUncheckedCreateWithoutReportInput> | discussionboard_report_reviewCreateWithoutReportInput[] | discussionboard_report_reviewUncheckedCreateWithoutReportInput[]\n    connectOrCreate?: discussionboard_report_reviewCreateOrConnectWithoutReportInput | discussionboard_report_reviewCreateOrConnectWithoutReportInput[]\n    upsert?: discussionboard_report_reviewUpsertWithWhereUniqueWithoutReportInput | discussionboard_report_reviewUpsertWithWhereUniqueWithoutReportInput[]\n    createMany?: discussionboard_report_reviewCreateManyReportInputEnvelope\n    set?: discussionboard_report_reviewWhereUniqueInput | discussionboard_report_reviewWhereUniqueInput[]\n    disconnect?: discussionboard_report_reviewWhereUniqueInput | discussionboard_report_reviewWhereUniqueInput[]\n    delete?: discussionboard_report_reviewWhereUniqueInput | discussionboard_report_reviewWhereUniqueInput[]\n    connect?: discussionboard_report_reviewWhereUniqueInput | discussionboard_report_reviewWhereUniqueInput[]\n    update?: discussionboard_report_reviewUpdateWithWhereUniqueWithoutReportInput | discussionboard_report_reviewUpdateWithWhereUniqueWithoutReportInput[]\n    updateMany?: discussionboard_report_reviewUpdateManyWithWhereWithoutReportInput | discussionboard_report_reviewUpdateManyWithWhereWithoutReportInput[]\n    deleteMany?: discussionboard_report_reviewScalarWhereInput | discussionboard_report_reviewScalarWhereInput[]\n  }\n\n  export type discussionboard_report_reviewUncheckedUpdateManyWithoutReportNestedInput = {\n    create?: XOR<discussionboard_report_reviewCreateWithoutReportInput, discussionboard_report_reviewUncheckedCreateWithoutReportInput> | discussionboard_report_reviewCreateWithoutReportInput[] | discussionboard_report_reviewUncheckedCreateWithoutReportInput[]\n    connectOrCreate?: discussionboard_report_reviewCreateOrConnectWithoutReportInput | discussionboard_report_reviewCreateOrConnectWithoutReportInput[]\n    upsert?: discussionboard_report_reviewUpsertWithWhereUniqueWithoutReportInput | discussionboard_report_reviewUpsertWithWhereUniqueWithoutReportInput[]\n    createMany?: discussionboard_report_reviewCreateManyReportInputEnvelope\n    set?: discussionboard_report_reviewWhereUniqueInput | discussionboard_report_reviewWhereUniqueInput[]\n    disconnect?: discussionboard_report_reviewWhereUniqueInput | discussionboard_report_reviewWhereUniqueInput[]\n    delete?: discussionboard_report_reviewWhereUniqueInput | discussionboard_report_reviewWhereUniqueInput[]\n    connect?: discussionboard_report_reviewWhereUniqueInput | discussionboard_report_reviewWhereUniqueInput[]\n    update?: discussionboard_report_reviewUpdateWithWhereUniqueWithoutReportInput | discussionboard_report_reviewUpdateWithWhereUniqueWithoutReportInput[]\n    updateMany?: discussionboard_report_reviewUpdateManyWithWhereWithoutReportInput | discussionboard_report_reviewUpdateManyWithWhereWithoutReportInput[]\n    deleteMany?: discussionboard_report_reviewScalarWhereInput | discussionboard_report_reviewScalarWhereInput[]\n  }\n\n  export type discussionboard_userCreateNestedOneWithoutDiscussionboard_moderation_action_of_actor_idInput = {\n    create?: XOR<discussionboard_userCreateWithoutDiscussionboard_moderation_action_of_actor_idInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_moderation_action_of_actor_idInput>\n    connectOrCreate?: discussionboard_userCreateOrConnectWithoutDiscussionboard_moderation_action_of_actor_idInput\n    connect?: discussionboard_userWhereUniqueInput\n  }\n\n  export type discussionboard_userCreateNestedOneWithoutDiscussionboard_moderation_action_of_target_user_idInput = {\n    create?: XOR<discussionboard_userCreateWithoutDiscussionboard_moderation_action_of_target_user_idInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_moderation_action_of_target_user_idInput>\n    connectOrCreate?: discussionboard_userCreateOrConnectWithoutDiscussionboard_moderation_action_of_target_user_idInput\n    connect?: discussionboard_userWhereUniqueInput\n  }\n\n  export type discussionboard_postCreateNestedOneWithoutDiscussionboard_moderation_actionInput = {\n    create?: XOR<discussionboard_postCreateWithoutDiscussionboard_moderation_actionInput, discussionboard_postUncheckedCreateWithoutDiscussionboard_moderation_actionInput>\n    connectOrCreate?: discussionboard_postCreateOrConnectWithoutDiscussionboard_moderation_actionInput\n    connect?: discussionboard_postWhereUniqueInput\n  }\n\n  export type discussionboard_commentsCreateNestedOneWithoutDiscussionboard_moderation_actionInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutDiscussionboard_moderation_actionInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_moderation_actionInput>\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutDiscussionboard_moderation_actionInput\n    connect?: discussionboard_commentsWhereUniqueInput\n  }\n\n  export type discussionboard_userUpdateOneRequiredWithoutDiscussionboard_moderation_action_of_actor_idNestedInput = {\n    create?: XOR<discussionboard_userCreateWithoutDiscussionboard_moderation_action_of_actor_idInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_moderation_action_of_actor_idInput>\n    connectOrCreate?: discussionboard_userCreateOrConnectWithoutDiscussionboard_moderation_action_of_actor_idInput\n    upsert?: discussionboard_userUpsertWithoutDiscussionboard_moderation_action_of_actor_idInput\n    connect?: discussionboard_userWhereUniqueInput\n    update?: XOR<XOR<discussionboard_userUpdateToOneWithWhereWithoutDiscussionboard_moderation_action_of_actor_idInput, discussionboard_userUpdateWithoutDiscussionboard_moderation_action_of_actor_idInput>, discussionboard_userUncheckedUpdateWithoutDiscussionboard_moderation_action_of_actor_idInput>\n  }\n\n  export type discussionboard_userUpdateOneRequiredWithoutDiscussionboard_moderation_action_of_target_user_idNestedInput = {\n    create?: XOR<discussionboard_userCreateWithoutDiscussionboard_moderation_action_of_target_user_idInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_moderation_action_of_target_user_idInput>\n    connectOrCreate?: discussionboard_userCreateOrConnectWithoutDiscussionboard_moderation_action_of_target_user_idInput\n    upsert?: discussionboard_userUpsertWithoutDiscussionboard_moderation_action_of_target_user_idInput\n    connect?: discussionboard_userWhereUniqueInput\n    update?: XOR<XOR<discussionboard_userUpdateToOneWithWhereWithoutDiscussionboard_moderation_action_of_target_user_idInput, discussionboard_userUpdateWithoutDiscussionboard_moderation_action_of_target_user_idInput>, discussionboard_userUncheckedUpdateWithoutDiscussionboard_moderation_action_of_target_user_idInput>\n  }\n\n  export type discussionboard_postUpdateOneWithoutDiscussionboard_moderation_actionNestedInput = {\n    create?: XOR<discussionboard_postCreateWithoutDiscussionboard_moderation_actionInput, discussionboard_postUncheckedCreateWithoutDiscussionboard_moderation_actionInput>\n    connectOrCreate?: discussionboard_postCreateOrConnectWithoutDiscussionboard_moderation_actionInput\n    upsert?: discussionboard_postUpsertWithoutDiscussionboard_moderation_actionInput\n    disconnect?: discussionboard_postWhereInput | boolean\n    delete?: discussionboard_postWhereInput | boolean\n    connect?: discussionboard_postWhereUniqueInput\n    update?: XOR<XOR<discussionboard_postUpdateToOneWithWhereWithoutDiscussionboard_moderation_actionInput, discussionboard_postUpdateWithoutDiscussionboard_moderation_actionInput>, discussionboard_postUncheckedUpdateWithoutDiscussionboard_moderation_actionInput>\n  }\n\n  export type discussionboard_commentsUpdateOneWithoutDiscussionboard_moderation_actionNestedInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutDiscussionboard_moderation_actionInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_moderation_actionInput>\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutDiscussionboard_moderation_actionInput\n    upsert?: discussionboard_commentsUpsertWithoutDiscussionboard_moderation_actionInput\n    disconnect?: discussionboard_commentsWhereInput | boolean\n    delete?: discussionboard_commentsWhereInput | boolean\n    connect?: discussionboard_commentsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_commentsUpdateToOneWithWhereWithoutDiscussionboard_moderation_actionInput, discussionboard_commentsUpdateWithoutDiscussionboard_moderation_actionInput>, discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_moderation_actionInput>\n  }\n\n  export type discussionboard_reportsCreateNestedOneWithoutDiscussionboard_report_reviewInput = {\n    create?: XOR<discussionboard_reportsCreateWithoutDiscussionboard_report_reviewInput, discussionboard_reportsUncheckedCreateWithoutDiscussionboard_report_reviewInput>\n    connectOrCreate?: discussionboard_reportsCreateOrConnectWithoutDiscussionboard_report_reviewInput\n    connect?: discussionboard_reportsWhereUniqueInput\n  }\n\n  export type discussionboard_userCreateNestedOneWithoutDiscussionboard_report_reviewInput = {\n    create?: XOR<discussionboard_userCreateWithoutDiscussionboard_report_reviewInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_report_reviewInput>\n    connectOrCreate?: discussionboard_userCreateOrConnectWithoutDiscussionboard_report_reviewInput\n    connect?: discussionboard_userWhereUniqueInput\n  }\n\n  export type discussionboard_postCreateNestedOneWithoutDiscussionboard_report_reviewInput = {\n    create?: XOR<discussionboard_postCreateWithoutDiscussionboard_report_reviewInput, discussionboard_postUncheckedCreateWithoutDiscussionboard_report_reviewInput>\n    connectOrCreate?: discussionboard_postCreateOrConnectWithoutDiscussionboard_report_reviewInput\n    connect?: discussionboard_postWhereUniqueInput\n  }\n\n  export type discussionboard_commentsCreateNestedOneWithoutDiscussionboard_report_reviewInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutDiscussionboard_report_reviewInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_report_reviewInput>\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutDiscussionboard_report_reviewInput\n    connect?: discussionboard_commentsWhereUniqueInput\n  }\n\n  export type discussionboard_reportsUpdateOneRequiredWithoutDiscussionboard_report_reviewNestedInput = {\n    create?: XOR<discussionboard_reportsCreateWithoutDiscussionboard_report_reviewInput, discussionboard_reportsUncheckedCreateWithoutDiscussionboard_report_reviewInput>\n    connectOrCreate?: discussionboard_reportsCreateOrConnectWithoutDiscussionboard_report_reviewInput\n    upsert?: discussionboard_reportsUpsertWithoutDiscussionboard_report_reviewInput\n    connect?: discussionboard_reportsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_reportsUpdateToOneWithWhereWithoutDiscussionboard_report_reviewInput, discussionboard_reportsUpdateWithoutDiscussionboard_report_reviewInput>, discussionboard_reportsUncheckedUpdateWithoutDiscussionboard_report_reviewInput>\n  }\n\n  export type discussionboard_userUpdateOneRequiredWithoutDiscussionboard_report_reviewNestedInput = {\n    create?: XOR<discussionboard_userCreateWithoutDiscussionboard_report_reviewInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_report_reviewInput>\n    connectOrCreate?: discussionboard_userCreateOrConnectWithoutDiscussionboard_report_reviewInput\n    upsert?: discussionboard_userUpsertWithoutDiscussionboard_report_reviewInput\n    connect?: discussionboard_userWhereUniqueInput\n    update?: XOR<XOR<discussionboard_userUpdateToOneWithWhereWithoutDiscussionboard_report_reviewInput, discussionboard_userUpdateWithoutDiscussionboard_report_reviewInput>, discussionboard_userUncheckedUpdateWithoutDiscussionboard_report_reviewInput>\n  }\n\n  export type discussionboard_postUpdateOneWithoutDiscussionboard_report_reviewNestedInput = {\n    create?: XOR<discussionboard_postCreateWithoutDiscussionboard_report_reviewInput, discussionboard_postUncheckedCreateWithoutDiscussionboard_report_reviewInput>\n    connectOrCreate?: discussionboard_postCreateOrConnectWithoutDiscussionboard_report_reviewInput\n    upsert?: discussionboard_postUpsertWithoutDiscussionboard_report_reviewInput\n    disconnect?: discussionboard_postWhereInput | boolean\n    delete?: discussionboard_postWhereInput | boolean\n    connect?: discussionboard_postWhereUniqueInput\n    update?: XOR<XOR<discussionboard_postUpdateToOneWithWhereWithoutDiscussionboard_report_reviewInput, discussionboard_postUpdateWithoutDiscussionboard_report_reviewInput>, discussionboard_postUncheckedUpdateWithoutDiscussionboard_report_reviewInput>\n  }\n\n  export type discussionboard_commentsUpdateOneWithoutDiscussionboard_report_reviewNestedInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutDiscussionboard_report_reviewInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_report_reviewInput>\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutDiscussionboard_report_reviewInput\n    upsert?: discussionboard_commentsUpsertWithoutDiscussionboard_report_reviewInput\n    disconnect?: discussionboard_commentsWhereInput | boolean\n    delete?: discussionboard_commentsWhereInput | boolean\n    connect?: discussionboard_commentsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_commentsUpdateToOneWithWhereWithoutDiscussionboard_report_reviewInput, discussionboard_commentsUpdateWithoutDiscussionboard_report_reviewInput>, discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_report_reviewInput>\n  }\n\n  export type discussionboard_userCreateNestedOneWithoutDiscussionboard_warning_of_issued_by_idInput = {\n    create?: XOR<discussionboard_userCreateWithoutDiscussionboard_warning_of_issued_by_idInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_warning_of_issued_by_idInput>\n    connectOrCreate?: discussionboard_userCreateOrConnectWithoutDiscussionboard_warning_of_issued_by_idInput\n    connect?: discussionboard_userWhereUniqueInput\n  }\n\n  export type discussionboard_userCreateNestedOneWithoutDiscussionboard_warning_of_issued_to_idInput = {\n    create?: XOR<discussionboard_userCreateWithoutDiscussionboard_warning_of_issued_to_idInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_warning_of_issued_to_idInput>\n    connectOrCreate?: discussionboard_userCreateOrConnectWithoutDiscussionboard_warning_of_issued_to_idInput\n    connect?: discussionboard_userWhereUniqueInput\n  }\n\n  export type discussionboard_postCreateNestedOneWithoutDiscussionboard_warningInput = {\n    create?: XOR<discussionboard_postCreateWithoutDiscussionboard_warningInput, discussionboard_postUncheckedCreateWithoutDiscussionboard_warningInput>\n    connectOrCreate?: discussionboard_postCreateOrConnectWithoutDiscussionboard_warningInput\n    connect?: discussionboard_postWhereUniqueInput\n  }\n\n  export type discussionboard_commentsCreateNestedOneWithoutDiscussionboard_warningInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutDiscussionboard_warningInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_warningInput>\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutDiscussionboard_warningInput\n    connect?: discussionboard_commentsWhereUniqueInput\n  }\n\n  export type discussionboard_banCreateNestedManyWithoutRelated_warningInput = {\n    create?: XOR<discussionboard_banCreateWithoutRelated_warningInput, discussionboard_banUncheckedCreateWithoutRelated_warningInput> | discussionboard_banCreateWithoutRelated_warningInput[] | discussionboard_banUncheckedCreateWithoutRelated_warningInput[]\n    connectOrCreate?: discussionboard_banCreateOrConnectWithoutRelated_warningInput | discussionboard_banCreateOrConnectWithoutRelated_warningInput[]\n    createMany?: discussionboard_banCreateManyRelated_warningInputEnvelope\n    connect?: discussionboard_banWhereUniqueInput | discussionboard_banWhereUniqueInput[]\n  }\n\n  export type discussionboard_banUncheckedCreateNestedManyWithoutRelated_warningInput = {\n    create?: XOR<discussionboard_banCreateWithoutRelated_warningInput, discussionboard_banUncheckedCreateWithoutRelated_warningInput> | discussionboard_banCreateWithoutRelated_warningInput[] | discussionboard_banUncheckedCreateWithoutRelated_warningInput[]\n    connectOrCreate?: discussionboard_banCreateOrConnectWithoutRelated_warningInput | discussionboard_banCreateOrConnectWithoutRelated_warningInput[]\n    createMany?: discussionboard_banCreateManyRelated_warningInputEnvelope\n    connect?: discussionboard_banWhereUniqueInput | discussionboard_banWhereUniqueInput[]\n  }\n\n  export type discussionboard_userUpdateOneRequiredWithoutDiscussionboard_warning_of_issued_by_idNestedInput = {\n    create?: XOR<discussionboard_userCreateWithoutDiscussionboard_warning_of_issued_by_idInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_warning_of_issued_by_idInput>\n    connectOrCreate?: discussionboard_userCreateOrConnectWithoutDiscussionboard_warning_of_issued_by_idInput\n    upsert?: discussionboard_userUpsertWithoutDiscussionboard_warning_of_issued_by_idInput\n    connect?: discussionboard_userWhereUniqueInput\n    update?: XOR<XOR<discussionboard_userUpdateToOneWithWhereWithoutDiscussionboard_warning_of_issued_by_idInput, discussionboard_userUpdateWithoutDiscussionboard_warning_of_issued_by_idInput>, discussionboard_userUncheckedUpdateWithoutDiscussionboard_warning_of_issued_by_idInput>\n  }\n\n  export type discussionboard_userUpdateOneRequiredWithoutDiscussionboard_warning_of_issued_to_idNestedInput = {\n    create?: XOR<discussionboard_userCreateWithoutDiscussionboard_warning_of_issued_to_idInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_warning_of_issued_to_idInput>\n    connectOrCreate?: discussionboard_userCreateOrConnectWithoutDiscussionboard_warning_of_issued_to_idInput\n    upsert?: discussionboard_userUpsertWithoutDiscussionboard_warning_of_issued_to_idInput\n    connect?: discussionboard_userWhereUniqueInput\n    update?: XOR<XOR<discussionboard_userUpdateToOneWithWhereWithoutDiscussionboard_warning_of_issued_to_idInput, discussionboard_userUpdateWithoutDiscussionboard_warning_of_issued_to_idInput>, discussionboard_userUncheckedUpdateWithoutDiscussionboard_warning_of_issued_to_idInput>\n  }\n\n  export type discussionboard_postUpdateOneWithoutDiscussionboard_warningNestedInput = {\n    create?: XOR<discussionboard_postCreateWithoutDiscussionboard_warningInput, discussionboard_postUncheckedCreateWithoutDiscussionboard_warningInput>\n    connectOrCreate?: discussionboard_postCreateOrConnectWithoutDiscussionboard_warningInput\n    upsert?: discussionboard_postUpsertWithoutDiscussionboard_warningInput\n    disconnect?: discussionboard_postWhereInput | boolean\n    delete?: discussionboard_postWhereInput | boolean\n    connect?: discussionboard_postWhereUniqueInput\n    update?: XOR<XOR<discussionboard_postUpdateToOneWithWhereWithoutDiscussionboard_warningInput, discussionboard_postUpdateWithoutDiscussionboard_warningInput>, discussionboard_postUncheckedUpdateWithoutDiscussionboard_warningInput>\n  }\n\n  export type discussionboard_commentsUpdateOneWithoutDiscussionboard_warningNestedInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutDiscussionboard_warningInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_warningInput>\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutDiscussionboard_warningInput\n    upsert?: discussionboard_commentsUpsertWithoutDiscussionboard_warningInput\n    disconnect?: discussionboard_commentsWhereInput | boolean\n    delete?: discussionboard_commentsWhereInput | boolean\n    connect?: discussionboard_commentsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_commentsUpdateToOneWithWhereWithoutDiscussionboard_warningInput, discussionboard_commentsUpdateWithoutDiscussionboard_warningInput>, discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_warningInput>\n  }\n\n  export type discussionboard_banUpdateManyWithoutRelated_warningNestedInput = {\n    create?: XOR<discussionboard_banCreateWithoutRelated_warningInput, discussionboard_banUncheckedCreateWithoutRelated_warningInput> | discussionboard_banCreateWithoutRelated_warningInput[] | discussionboard_banUncheckedCreateWithoutRelated_warningInput[]\n    connectOrCreate?: discussionboard_banCreateOrConnectWithoutRelated_warningInput | discussionboard_banCreateOrConnectWithoutRelated_warningInput[]\n    upsert?: discussionboard_banUpsertWithWhereUniqueWithoutRelated_warningInput | discussionboard_banUpsertWithWhereUniqueWithoutRelated_warningInput[]\n    createMany?: discussionboard_banCreateManyRelated_warningInputEnvelope\n    set?: discussionboard_banWhereUniqueInput | discussionboard_banWhereUniqueInput[]\n    disconnect?: discussionboard_banWhereUniqueInput | discussionboard_banWhereUniqueInput[]\n    delete?: discussionboard_banWhereUniqueInput | discussionboard_banWhereUniqueInput[]\n    connect?: discussionboard_banWhereUniqueInput | discussionboard_banWhereUniqueInput[]\n    update?: discussionboard_banUpdateWithWhereUniqueWithoutRelated_warningInput | discussionboard_banUpdateWithWhereUniqueWithoutRelated_warningInput[]\n    updateMany?: discussionboard_banUpdateManyWithWhereWithoutRelated_warningInput | discussionboard_banUpdateManyWithWhereWithoutRelated_warningInput[]\n    deleteMany?: discussionboard_banScalarWhereInput | discussionboard_banScalarWhereInput[]\n  }\n\n  export type discussionboard_banUncheckedUpdateManyWithoutRelated_warningNestedInput = {\n    create?: XOR<discussionboard_banCreateWithoutRelated_warningInput, discussionboard_banUncheckedCreateWithoutRelated_warningInput> | discussionboard_banCreateWithoutRelated_warningInput[] | discussionboard_banUncheckedCreateWithoutRelated_warningInput[]\n    connectOrCreate?: discussionboard_banCreateOrConnectWithoutRelated_warningInput | discussionboard_banCreateOrConnectWithoutRelated_warningInput[]\n    upsert?: discussionboard_banUpsertWithWhereUniqueWithoutRelated_warningInput | discussionboard_banUpsertWithWhereUniqueWithoutRelated_warningInput[]\n    createMany?: discussionboard_banCreateManyRelated_warningInputEnvelope\n    set?: discussionboard_banWhereUniqueInput | discussionboard_banWhereUniqueInput[]\n    disconnect?: discussionboard_banWhereUniqueInput | discussionboard_banWhereUniqueInput[]\n    delete?: discussionboard_banWhereUniqueInput | discussionboard_banWhereUniqueInput[]\n    connect?: discussionboard_banWhereUniqueInput | discussionboard_banWhereUniqueInput[]\n    update?: discussionboard_banUpdateWithWhereUniqueWithoutRelated_warningInput | discussionboard_banUpdateWithWhereUniqueWithoutRelated_warningInput[]\n    updateMany?: discussionboard_banUpdateManyWithWhereWithoutRelated_warningInput | discussionboard_banUpdateManyWithWhereWithoutRelated_warningInput[]\n    deleteMany?: discussionboard_banScalarWhereInput | discussionboard_banScalarWhereInput[]\n  }\n\n  export type discussionboard_userCreateNestedOneWithoutDiscussionboard_ban_of_banned_user_idInput = {\n    create?: XOR<discussionboard_userCreateWithoutDiscussionboard_ban_of_banned_user_idInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_ban_of_banned_user_idInput>\n    connectOrCreate?: discussionboard_userCreateOrConnectWithoutDiscussionboard_ban_of_banned_user_idInput\n    connect?: discussionboard_userWhereUniqueInput\n  }\n\n  export type discussionboard_userCreateNestedOneWithoutDiscussionboard_ban_of_banned_by_idInput = {\n    create?: XOR<discussionboard_userCreateWithoutDiscussionboard_ban_of_banned_by_idInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_ban_of_banned_by_idInput>\n    connectOrCreate?: discussionboard_userCreateOrConnectWithoutDiscussionboard_ban_of_banned_by_idInput\n    connect?: discussionboard_userWhereUniqueInput\n  }\n\n  export type discussionboard_warningCreateNestedOneWithoutDiscussionboard_banInput = {\n    create?: XOR<discussionboard_warningCreateWithoutDiscussionboard_banInput, discussionboard_warningUncheckedCreateWithoutDiscussionboard_banInput>\n    connectOrCreate?: discussionboard_warningCreateOrConnectWithoutDiscussionboard_banInput\n    connect?: discussionboard_warningWhereUniqueInput\n  }\n\n  export type discussionboard_userUpdateOneRequiredWithoutDiscussionboard_ban_of_banned_user_idNestedInput = {\n    create?: XOR<discussionboard_userCreateWithoutDiscussionboard_ban_of_banned_user_idInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_ban_of_banned_user_idInput>\n    connectOrCreate?: discussionboard_userCreateOrConnectWithoutDiscussionboard_ban_of_banned_user_idInput\n    upsert?: discussionboard_userUpsertWithoutDiscussionboard_ban_of_banned_user_idInput\n    connect?: discussionboard_userWhereUniqueInput\n    update?: XOR<XOR<discussionboard_userUpdateToOneWithWhereWithoutDiscussionboard_ban_of_banned_user_idInput, discussionboard_userUpdateWithoutDiscussionboard_ban_of_banned_user_idInput>, discussionboard_userUncheckedUpdateWithoutDiscussionboard_ban_of_banned_user_idInput>\n  }\n\n  export type discussionboard_userUpdateOneRequiredWithoutDiscussionboard_ban_of_banned_by_idNestedInput = {\n    create?: XOR<discussionboard_userCreateWithoutDiscussionboard_ban_of_banned_by_idInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_ban_of_banned_by_idInput>\n    connectOrCreate?: discussionboard_userCreateOrConnectWithoutDiscussionboard_ban_of_banned_by_idInput\n    upsert?: discussionboard_userUpsertWithoutDiscussionboard_ban_of_banned_by_idInput\n    connect?: discussionboard_userWhereUniqueInput\n    update?: XOR<XOR<discussionboard_userUpdateToOneWithWhereWithoutDiscussionboard_ban_of_banned_by_idInput, discussionboard_userUpdateWithoutDiscussionboard_ban_of_banned_by_idInput>, discussionboard_userUncheckedUpdateWithoutDiscussionboard_ban_of_banned_by_idInput>\n  }\n\n  export type discussionboard_warningUpdateOneWithoutDiscussionboard_banNestedInput = {\n    create?: XOR<discussionboard_warningCreateWithoutDiscussionboard_banInput, discussionboard_warningUncheckedCreateWithoutDiscussionboard_banInput>\n    connectOrCreate?: discussionboard_warningCreateOrConnectWithoutDiscussionboard_banInput\n    upsert?: discussionboard_warningUpsertWithoutDiscussionboard_banInput\n    disconnect?: discussionboard_warningWhereInput | boolean\n    delete?: discussionboard_warningWhereInput | boolean\n    connect?: discussionboard_warningWhereUniqueInput\n    update?: XOR<XOR<discussionboard_warningUpdateToOneWithWhereWithoutDiscussionboard_banInput, discussionboard_warningUpdateWithoutDiscussionboard_banInput>, discussionboard_warningUncheckedUpdateWithoutDiscussionboard_banInput>\n  }\n\n  export type discussionboard_userCreateNestedOneWithoutDiscussionboard_notification_of_recipient_user_idInput = {\n    create?: XOR<discussionboard_userCreateWithoutDiscussionboard_notification_of_recipient_user_idInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_notification_of_recipient_user_idInput>\n    connectOrCreate?: discussionboard_userCreateOrConnectWithoutDiscussionboard_notification_of_recipient_user_idInput\n    connect?: discussionboard_userWhereUniqueInput\n  }\n\n  export type discussionboard_postCreateNestedOneWithoutDiscussionboard_notificationInput = {\n    create?: XOR<discussionboard_postCreateWithoutDiscussionboard_notificationInput, discussionboard_postUncheckedCreateWithoutDiscussionboard_notificationInput>\n    connectOrCreate?: discussionboard_postCreateOrConnectWithoutDiscussionboard_notificationInput\n    connect?: discussionboard_postWhereUniqueInput\n  }\n\n  export type discussionboard_commentsCreateNestedOneWithoutDiscussionboard_notificationInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutDiscussionboard_notificationInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_notificationInput>\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutDiscussionboard_notificationInput\n    connect?: discussionboard_commentsWhereUniqueInput\n  }\n\n  export type discussionboard_userCreateNestedOneWithoutDiscussionboard_notification_of_actor_user_idInput = {\n    create?: XOR<discussionboard_userCreateWithoutDiscussionboard_notification_of_actor_user_idInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_notification_of_actor_user_idInput>\n    connectOrCreate?: discussionboard_userCreateOrConnectWithoutDiscussionboard_notification_of_actor_user_idInput\n    connect?: discussionboard_userWhereUniqueInput\n  }\n\n  export type discussionboard_userUpdateOneRequiredWithoutDiscussionboard_notification_of_recipient_user_idNestedInput = {\n    create?: XOR<discussionboard_userCreateWithoutDiscussionboard_notification_of_recipient_user_idInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_notification_of_recipient_user_idInput>\n    connectOrCreate?: discussionboard_userCreateOrConnectWithoutDiscussionboard_notification_of_recipient_user_idInput\n    upsert?: discussionboard_userUpsertWithoutDiscussionboard_notification_of_recipient_user_idInput\n    connect?: discussionboard_userWhereUniqueInput\n    update?: XOR<XOR<discussionboard_userUpdateToOneWithWhereWithoutDiscussionboard_notification_of_recipient_user_idInput, discussionboard_userUpdateWithoutDiscussionboard_notification_of_recipient_user_idInput>, discussionboard_userUncheckedUpdateWithoutDiscussionboard_notification_of_recipient_user_idInput>\n  }\n\n  export type discussionboard_postUpdateOneWithoutDiscussionboard_notificationNestedInput = {\n    create?: XOR<discussionboard_postCreateWithoutDiscussionboard_notificationInput, discussionboard_postUncheckedCreateWithoutDiscussionboard_notificationInput>\n    connectOrCreate?: discussionboard_postCreateOrConnectWithoutDiscussionboard_notificationInput\n    upsert?: discussionboard_postUpsertWithoutDiscussionboard_notificationInput\n    disconnect?: discussionboard_postWhereInput | boolean\n    delete?: discussionboard_postWhereInput | boolean\n    connect?: discussionboard_postWhereUniqueInput\n    update?: XOR<XOR<discussionboard_postUpdateToOneWithWhereWithoutDiscussionboard_notificationInput, discussionboard_postUpdateWithoutDiscussionboard_notificationInput>, discussionboard_postUncheckedUpdateWithoutDiscussionboard_notificationInput>\n  }\n\n  export type discussionboard_commentsUpdateOneWithoutDiscussionboard_notificationNestedInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutDiscussionboard_notificationInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_notificationInput>\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutDiscussionboard_notificationInput\n    upsert?: discussionboard_commentsUpsertWithoutDiscussionboard_notificationInput\n    disconnect?: discussionboard_commentsWhereInput | boolean\n    delete?: discussionboard_commentsWhereInput | boolean\n    connect?: discussionboard_commentsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_commentsUpdateToOneWithWhereWithoutDiscussionboard_notificationInput, discussionboard_commentsUpdateWithoutDiscussionboard_notificationInput>, discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_notificationInput>\n  }\n\n  export type discussionboard_userUpdateOneWithoutDiscussionboard_notification_of_actor_user_idNestedInput = {\n    create?: XOR<discussionboard_userCreateWithoutDiscussionboard_notification_of_actor_user_idInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_notification_of_actor_user_idInput>\n    connectOrCreate?: discussionboard_userCreateOrConnectWithoutDiscussionboard_notification_of_actor_user_idInput\n    upsert?: discussionboard_userUpsertWithoutDiscussionboard_notification_of_actor_user_idInput\n    disconnect?: discussionboard_userWhereInput | boolean\n    delete?: discussionboard_userWhereInput | boolean\n    connect?: discussionboard_userWhereUniqueInput\n    update?: XOR<XOR<discussionboard_userUpdateToOneWithWhereWithoutDiscussionboard_notification_of_actor_user_idInput, discussionboard_userUpdateWithoutDiscussionboard_notification_of_actor_user_idInput>, discussionboard_userUncheckedUpdateWithoutDiscussionboard_notification_of_actor_user_idInput>\n  }\n\n  export type discussionboard_userCreateNestedOneWithoutDiscussionboard_notification_preferenceInput = {\n    create?: XOR<discussionboard_userCreateWithoutDiscussionboard_notification_preferenceInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_notification_preferenceInput>\n    connectOrCreate?: discussionboard_userCreateOrConnectWithoutDiscussionboard_notification_preferenceInput\n    connect?: discussionboard_userWhereUniqueInput\n  }\n\n  export type discussionboard_userUpdateOneRequiredWithoutDiscussionboard_notification_preferenceNestedInput = {\n    create?: XOR<discussionboard_userCreateWithoutDiscussionboard_notification_preferenceInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_notification_preferenceInput>\n    connectOrCreate?: discussionboard_userCreateOrConnectWithoutDiscussionboard_notification_preferenceInput\n    upsert?: discussionboard_userUpsertWithoutDiscussionboard_notification_preferenceInput\n    connect?: discussionboard_userWhereUniqueInput\n    update?: XOR<XOR<discussionboard_userUpdateToOneWithWhereWithoutDiscussionboard_notification_preferenceInput, discussionboard_userUpdateWithoutDiscussionboard_notification_preferenceInput>, discussionboard_userUncheckedUpdateWithoutDiscussionboard_notification_preferenceInput>\n  }\n\n  export type discussionboard_userCreateNestedOneWithoutDiscussionboard_audit_log_of_actor_user_idInput = {\n    create?: XOR<discussionboard_userCreateWithoutDiscussionboard_audit_log_of_actor_user_idInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_audit_log_of_actor_user_idInput>\n    connectOrCreate?: discussionboard_userCreateOrConnectWithoutDiscussionboard_audit_log_of_actor_user_idInput\n    connect?: discussionboard_userWhereUniqueInput\n  }\n\n  export type discussionboard_userCreateNestedOneWithoutDiscussionboard_audit_log_of_target_user_idInput = {\n    create?: XOR<discussionboard_userCreateWithoutDiscussionboard_audit_log_of_target_user_idInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_audit_log_of_target_user_idInput>\n    connectOrCreate?: discussionboard_userCreateOrConnectWithoutDiscussionboard_audit_log_of_target_user_idInput\n    connect?: discussionboard_userWhereUniqueInput\n  }\n\n  export type discussionboard_userUpdateOneRequiredWithoutDiscussionboard_audit_log_of_actor_user_idNestedInput = {\n    create?: XOR<discussionboard_userCreateWithoutDiscussionboard_audit_log_of_actor_user_idInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_audit_log_of_actor_user_idInput>\n    connectOrCreate?: discussionboard_userCreateOrConnectWithoutDiscussionboard_audit_log_of_actor_user_idInput\n    upsert?: discussionboard_userUpsertWithoutDiscussionboard_audit_log_of_actor_user_idInput\n    connect?: discussionboard_userWhereUniqueInput\n    update?: XOR<XOR<discussionboard_userUpdateToOneWithWhereWithoutDiscussionboard_audit_log_of_actor_user_idInput, discussionboard_userUpdateWithoutDiscussionboard_audit_log_of_actor_user_idInput>, discussionboard_userUncheckedUpdateWithoutDiscussionboard_audit_log_of_actor_user_idInput>\n  }\n\n  export type discussionboard_userUpdateOneWithoutDiscussionboard_audit_log_of_target_user_idNestedInput = {\n    create?: XOR<discussionboard_userCreateWithoutDiscussionboard_audit_log_of_target_user_idInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_audit_log_of_target_user_idInput>\n    connectOrCreate?: discussionboard_userCreateOrConnectWithoutDiscussionboard_audit_log_of_target_user_idInput\n    upsert?: discussionboard_userUpsertWithoutDiscussionboard_audit_log_of_target_user_idInput\n    disconnect?: discussionboard_userWhereInput | boolean\n    delete?: discussionboard_userWhereInput | boolean\n    connect?: discussionboard_userWhereUniqueInput\n    update?: XOR<XOR<discussionboard_userUpdateToOneWithWhereWithoutDiscussionboard_audit_log_of_target_user_idInput, discussionboard_userUpdateWithoutDiscussionboard_audit_log_of_target_user_idInput>, discussionboard_userUncheckedUpdateWithoutDiscussionboard_audit_log_of_target_user_idInput>\n  }\n\n  export type NestedUuidFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedUuidFilter<$PrismaModel> | string\n  }\n\n  export type NestedStringFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedStringFilter<$PrismaModel> | string\n  }\n\n  export type NestedBoolFilter<$PrismaModel = never> = {\n    equals?: boolean | BooleanFieldRefInput<$PrismaModel>\n    not?: NestedBoolFilter<$PrismaModel> | boolean\n  }\n\n  export type NestedDateTimeFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeFilter<$PrismaModel> | Date | string\n  }\n\n  export type NestedUuidWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedStringFilter<$PrismaModel>\n    _max?: NestedStringFilter<$PrismaModel>\n  }\n\n  export type NestedIntFilter<$PrismaModel = never> = {\n    equals?: number | IntFieldRefInput<$PrismaModel>\n    in?: number[] | ListIntFieldRefInput<$PrismaModel>\n    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>\n    lt?: number | IntFieldRefInput<$PrismaModel>\n    lte?: number | IntFieldRefInput<$PrismaModel>\n    gt?: number | IntFieldRefInput<$PrismaModel>\n    gte?: number | IntFieldRefInput<$PrismaModel>\n    not?: NestedIntFilter<$PrismaModel> | number\n  }\n\n  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedStringFilter<$PrismaModel>\n    _max?: NestedStringFilter<$PrismaModel>\n  }\n\n  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: boolean | BooleanFieldRefInput<$PrismaModel>\n    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedBoolFilter<$PrismaModel>\n    _max?: NestedBoolFilter<$PrismaModel>\n  }\n\n  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedDateTimeFilter<$PrismaModel>\n    _max?: NestedDateTimeFilter<$PrismaModel>\n  }\n\n  export type NestedStringNullableFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedStringNullableFilter<$PrismaModel> | string | null\n  }\n\n  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null\n    _count?: NestedIntNullableFilter<$PrismaModel>\n    _min?: NestedStringNullableFilter<$PrismaModel>\n    _max?: NestedStringNullableFilter<$PrismaModel>\n  }\n\n  export type NestedIntNullableFilter<$PrismaModel = never> = {\n    equals?: number | IntFieldRefInput<$PrismaModel> | null\n    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null\n    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null\n    lt?: number | IntFieldRefInput<$PrismaModel>\n    lte?: number | IntFieldRefInput<$PrismaModel>\n    gt?: number | IntFieldRefInput<$PrismaModel>\n    gte?: number | IntFieldRefInput<$PrismaModel>\n    not?: NestedIntNullableFilter<$PrismaModel> | number | null\n  }\n\n  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null\n  }\n\n  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null\n    _count?: NestedIntNullableFilter<$PrismaModel>\n    _min?: NestedDateTimeNullableFilter<$PrismaModel>\n    _max?: NestedDateTimeNullableFilter<$PrismaModel>\n  }\n\n  export type NestedUuidNullableFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedUuidNullableFilter<$PrismaModel> | string | null\n  }\n\n  export type NestedUuidNullableWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null\n    _count?: NestedIntNullableFilter<$PrismaModel>\n    _min?: NestedStringNullableFilter<$PrismaModel>\n    _max?: NestedStringNullableFilter<$PrismaModel>\n  }\n\n  export type discussionboard_user_profileCreateWithoutUser_profile_user_idInput = {\n    id: string\n    display_name: string\n    avatar_url?: string | null\n    bio?: string | null\n  }\n\n  export type discussionboard_user_profileUncheckedCreateWithoutUser_profile_user_idInput = {\n    id: string\n    display_name: string\n    avatar_url?: string | null\n    bio?: string | null\n  }\n\n  export type discussionboard_user_profileCreateOrConnectWithoutUser_profile_user_idInput = {\n    where: discussionboard_user_profileWhereUniqueInput\n    create: XOR<discussionboard_user_profileCreateWithoutUser_profile_user_idInput, discussionboard_user_profileUncheckedCreateWithoutUser_profile_user_idInput>\n  }\n\n  export type discussionboard_memberCreateWithoutMember_user_idInput = {\n    id: string\n    granted_at: Date | string\n    discussionboard_post?: discussionboard_postCreateNestedManyWithoutMemberInput\n  }\n\n  export type discussionboard_memberUncheckedCreateWithoutMember_user_idInput = {\n    id: string\n    granted_at: Date | string\n    discussionboard_post?: discussionboard_postUncheckedCreateNestedManyWithoutMemberInput\n  }\n\n  export type discussionboard_memberCreateOrConnectWithoutMember_user_idInput = {\n    where: discussionboard_memberWhereUniqueInput\n    create: XOR<discussionboard_memberCreateWithoutMember_user_idInput, discussionboard_memberUncheckedCreateWithoutMember_user_idInput>\n  }\n\n  export type discussionboard_moderatorCreateWithoutModerator_user_idInput = {\n    id: string\n    assigned_at: Date | string\n  }\n\n  export type discussionboard_moderatorUncheckedCreateWithoutModerator_user_idInput = {\n    id: string\n    assigned_at: Date | string\n  }\n\n  export type discussionboard_moderatorCreateOrConnectWithoutModerator_user_idInput = {\n    where: discussionboard_moderatorWhereUniqueInput\n    create: XOR<discussionboard_moderatorCreateWithoutModerator_user_idInput, discussionboard_moderatorUncheckedCreateWithoutModerator_user_idInput>\n  }\n\n  export type discussionboard_adminCreateWithoutAdmin_user_idInput = {\n    id: string\n    assigned_at: Date | string\n  }\n\n  export type discussionboard_adminUncheckedCreateWithoutAdmin_user_idInput = {\n    id: string\n    assigned_at: Date | string\n  }\n\n  export type discussionboard_adminCreateOrConnectWithoutAdmin_user_idInput = {\n    where: discussionboard_adminWhereUniqueInput\n    create: XOR<discussionboard_adminCreateWithoutAdmin_user_idInput, discussionboard_adminUncheckedCreateWithoutAdmin_user_idInput>\n  }\n\n  export type discussionboard_commentsCreateWithoutAuthorInput = {\n    id: string\n    content: string\n    is_edited: boolean\n    is_deleted: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    post: discussionboard_postCreateNestedOneWithoutDiscussionboard_commentsInput\n    parent_comment?: discussionboard_commentsCreateNestedOneWithoutRecursiveInput\n    recursive?: discussionboard_commentsCreateNestedManyWithoutParent_commentInput\n    discussionboard_likes?: discussionboard_likesCreateNestedManyWithoutCommentInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutCommentInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionCreateNestedManyWithoutModerated_commentInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReviewed_commentInput\n    discussionboard_warning?: discussionboard_warningCreateNestedManyWithoutWarning_commentInput\n    discussionboard_notification?: discussionboard_notificationCreateNestedManyWithoutRelated_commentInput\n  }\n\n  export type discussionboard_commentsUncheckedCreateWithoutAuthorInput = {\n    id: string\n    post_id: string\n    parent_comment_id?: string | null\n    content: string\n    is_edited: boolean\n    is_deleted: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    recursive?: discussionboard_commentsUncheckedCreateNestedManyWithoutParent_commentInput\n    discussionboard_likes?: discussionboard_likesUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutModerated_commentInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewed_commentInput\n    discussionboard_warning?: discussionboard_warningUncheckedCreateNestedManyWithoutWarning_commentInput\n    discussionboard_notification?: discussionboard_notificationUncheckedCreateNestedManyWithoutRelated_commentInput\n  }\n\n  export type discussionboard_commentsCreateOrConnectWithoutAuthorInput = {\n    where: discussionboard_commentsWhereUniqueInput\n    create: XOR<discussionboard_commentsCreateWithoutAuthorInput, discussionboard_commentsUncheckedCreateWithoutAuthorInput>\n  }\n\n  export type discussionboard_commentsCreateManyAuthorInputEnvelope = {\n    data: discussionboard_commentsCreateManyAuthorInput | discussionboard_commentsCreateManyAuthorInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_likesCreateWithoutUserInput = {\n    id: string\n    created_at: Date | string\n    deleted_at?: Date | string | null\n    post?: discussionboard_postCreateNestedOneWithoutDiscussionboard_likesInput\n    comment?: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_likesInput\n  }\n\n  export type discussionboard_likesUncheckedCreateWithoutUserInput = {\n    id: string\n    post_id?: string | null\n    comment_id?: string | null\n    created_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type discussionboard_likesCreateOrConnectWithoutUserInput = {\n    where: discussionboard_likesWhereUniqueInput\n    create: XOR<discussionboard_likesCreateWithoutUserInput, discussionboard_likesUncheckedCreateWithoutUserInput>\n  }\n\n  export type discussionboard_likesCreateManyUserInputEnvelope = {\n    data: discussionboard_likesCreateManyUserInput | discussionboard_likesCreateManyUserInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_reportsCreateWithoutUserInput = {\n    id: string\n    reason_code: string\n    reason_details?: string | null\n    created_at: Date | string\n    deleted_at?: Date | string | null\n    post?: discussionboard_postCreateNestedOneWithoutDiscussionboard_reportsInput\n    comment?: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_reportsInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReportInput\n  }\n\n  export type discussionboard_reportsUncheckedCreateWithoutUserInput = {\n    id: string\n    post_id?: string | null\n    comment_id?: string | null\n    reason_code: string\n    reason_details?: string | null\n    created_at: Date | string\n    deleted_at?: Date | string | null\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReportInput\n  }\n\n  export type discussionboard_reportsCreateOrConnectWithoutUserInput = {\n    where: discussionboard_reportsWhereUniqueInput\n    create: XOR<discussionboard_reportsCreateWithoutUserInput, discussionboard_reportsUncheckedCreateWithoutUserInput>\n  }\n\n  export type discussionboard_reportsCreateManyUserInputEnvelope = {\n    data: discussionboard_reportsCreateManyUserInput | discussionboard_reportsCreateManyUserInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_moderation_actionCreateWithoutActorInput = {\n    id: string\n    action_type: string\n    reason: string\n    created_at: Date | string\n    target_user: discussionboard_userCreateNestedOneWithoutDiscussionboard_moderation_action_of_target_user_idInput\n    moderated_post?: discussionboard_postCreateNestedOneWithoutDiscussionboard_moderation_actionInput\n    moderated_comment?: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_moderation_actionInput\n  }\n\n  export type discussionboard_moderation_actionUncheckedCreateWithoutActorInput = {\n    id: string\n    target_user_id: string\n    post_id?: string | null\n    comment_id?: string | null\n    action_type: string\n    reason: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_moderation_actionCreateOrConnectWithoutActorInput = {\n    where: discussionboard_moderation_actionWhereUniqueInput\n    create: XOR<discussionboard_moderation_actionCreateWithoutActorInput, discussionboard_moderation_actionUncheckedCreateWithoutActorInput>\n  }\n\n  export type discussionboard_moderation_actionCreateManyActorInputEnvelope = {\n    data: discussionboard_moderation_actionCreateManyActorInput | discussionboard_moderation_actionCreateManyActorInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_moderation_actionCreateWithoutTarget_userInput = {\n    id: string\n    action_type: string\n    reason: string\n    created_at: Date | string\n    actor: discussionboard_userCreateNestedOneWithoutDiscussionboard_moderation_action_of_actor_idInput\n    moderated_post?: discussionboard_postCreateNestedOneWithoutDiscussionboard_moderation_actionInput\n    moderated_comment?: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_moderation_actionInput\n  }\n\n  export type discussionboard_moderation_actionUncheckedCreateWithoutTarget_userInput = {\n    id: string\n    actor_id: string\n    post_id?: string | null\n    comment_id?: string | null\n    action_type: string\n    reason: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_moderation_actionCreateOrConnectWithoutTarget_userInput = {\n    where: discussionboard_moderation_actionWhereUniqueInput\n    create: XOR<discussionboard_moderation_actionCreateWithoutTarget_userInput, discussionboard_moderation_actionUncheckedCreateWithoutTarget_userInput>\n  }\n\n  export type discussionboard_moderation_actionCreateManyTarget_userInputEnvelope = {\n    data: discussionboard_moderation_actionCreateManyTarget_userInput | discussionboard_moderation_actionCreateManyTarget_userInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_report_reviewCreateWithoutReviewerInput = {\n    id: string\n    review_status: string\n    moderator_comment?: string | null\n    reviewed_at: Date | string\n    report: discussionboard_reportsCreateNestedOneWithoutDiscussionboard_report_reviewInput\n    reviewed_post?: discussionboard_postCreateNestedOneWithoutDiscussionboard_report_reviewInput\n    reviewed_comment?: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_report_reviewInput\n  }\n\n  export type discussionboard_report_reviewUncheckedCreateWithoutReviewerInput = {\n    id: string\n    report_id: string\n    post_id?: string | null\n    comment_id?: string | null\n    review_status: string\n    moderator_comment?: string | null\n    reviewed_at: Date | string\n  }\n\n  export type discussionboard_report_reviewCreateOrConnectWithoutReviewerInput = {\n    where: discussionboard_report_reviewWhereUniqueInput\n    create: XOR<discussionboard_report_reviewCreateWithoutReviewerInput, discussionboard_report_reviewUncheckedCreateWithoutReviewerInput>\n  }\n\n  export type discussionboard_report_reviewCreateManyReviewerInputEnvelope = {\n    data: discussionboard_report_reviewCreateManyReviewerInput | discussionboard_report_reviewCreateManyReviewerInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_warningCreateWithoutIssuerInput = {\n    id: string\n    warning_type: string\n    message: string\n    issued_at: Date | string\n    recipient: discussionboard_userCreateNestedOneWithoutDiscussionboard_warning_of_issued_to_idInput\n    warning_post?: discussionboard_postCreateNestedOneWithoutDiscussionboard_warningInput\n    warning_comment?: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_warningInput\n    discussionboard_ban?: discussionboard_banCreateNestedManyWithoutRelated_warningInput\n  }\n\n  export type discussionboard_warningUncheckedCreateWithoutIssuerInput = {\n    id: string\n    issued_to_id: string\n    post_id?: string | null\n    comment_id?: string | null\n    warning_type: string\n    message: string\n    issued_at: Date | string\n    discussionboard_ban?: discussionboard_banUncheckedCreateNestedManyWithoutRelated_warningInput\n  }\n\n  export type discussionboard_warningCreateOrConnectWithoutIssuerInput = {\n    where: discussionboard_warningWhereUniqueInput\n    create: XOR<discussionboard_warningCreateWithoutIssuerInput, discussionboard_warningUncheckedCreateWithoutIssuerInput>\n  }\n\n  export type discussionboard_warningCreateManyIssuerInputEnvelope = {\n    data: discussionboard_warningCreateManyIssuerInput | discussionboard_warningCreateManyIssuerInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_warningCreateWithoutRecipientInput = {\n    id: string\n    warning_type: string\n    message: string\n    issued_at: Date | string\n    issuer: discussionboard_userCreateNestedOneWithoutDiscussionboard_warning_of_issued_by_idInput\n    warning_post?: discussionboard_postCreateNestedOneWithoutDiscussionboard_warningInput\n    warning_comment?: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_warningInput\n    discussionboard_ban?: discussionboard_banCreateNestedManyWithoutRelated_warningInput\n  }\n\n  export type discussionboard_warningUncheckedCreateWithoutRecipientInput = {\n    id: string\n    issued_by_id: string\n    post_id?: string | null\n    comment_id?: string | null\n    warning_type: string\n    message: string\n    issued_at: Date | string\n    discussionboard_ban?: discussionboard_banUncheckedCreateNestedManyWithoutRelated_warningInput\n  }\n\n  export type discussionboard_warningCreateOrConnectWithoutRecipientInput = {\n    where: discussionboard_warningWhereUniqueInput\n    create: XOR<discussionboard_warningCreateWithoutRecipientInput, discussionboard_warningUncheckedCreateWithoutRecipientInput>\n  }\n\n  export type discussionboard_warningCreateManyRecipientInputEnvelope = {\n    data: discussionboard_warningCreateManyRecipientInput | discussionboard_warningCreateManyRecipientInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_banCreateWithoutBanned_userInput = {\n    id: string\n    ban_type: string\n    reason: string\n    issued_at: Date | string\n    expires_at?: Date | string | null\n    ban_actor: discussionboard_userCreateNestedOneWithoutDiscussionboard_ban_of_banned_by_idInput\n    related_warning?: discussionboard_warningCreateNestedOneWithoutDiscussionboard_banInput\n  }\n\n  export type discussionboard_banUncheckedCreateWithoutBanned_userInput = {\n    id: string\n    banned_by_id: string\n    warning_id?: string | null\n    ban_type: string\n    reason: string\n    issued_at: Date | string\n    expires_at?: Date | string | null\n  }\n\n  export type discussionboard_banCreateOrConnectWithoutBanned_userInput = {\n    where: discussionboard_banWhereUniqueInput\n    create: XOR<discussionboard_banCreateWithoutBanned_userInput, discussionboard_banUncheckedCreateWithoutBanned_userInput>\n  }\n\n  export type discussionboard_banCreateManyBanned_userInputEnvelope = {\n    data: discussionboard_banCreateManyBanned_userInput | discussionboard_banCreateManyBanned_userInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_banCreateWithoutBan_actorInput = {\n    id: string\n    ban_type: string\n    reason: string\n    issued_at: Date | string\n    expires_at?: Date | string | null\n    banned_user: discussionboard_userCreateNestedOneWithoutDiscussionboard_ban_of_banned_user_idInput\n    related_warning?: discussionboard_warningCreateNestedOneWithoutDiscussionboard_banInput\n  }\n\n  export type discussionboard_banUncheckedCreateWithoutBan_actorInput = {\n    id: string\n    banned_user_id: string\n    warning_id?: string | null\n    ban_type: string\n    reason: string\n    issued_at: Date | string\n    expires_at?: Date | string | null\n  }\n\n  export type discussionboard_banCreateOrConnectWithoutBan_actorInput = {\n    where: discussionboard_banWhereUniqueInput\n    create: XOR<discussionboard_banCreateWithoutBan_actorInput, discussionboard_banUncheckedCreateWithoutBan_actorInput>\n  }\n\n  export type discussionboard_banCreateManyBan_actorInputEnvelope = {\n    data: discussionboard_banCreateManyBan_actorInput | discussionboard_banCreateManyBan_actorInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_notificationCreateWithoutRecipient_userInput = {\n    id: string\n    type: string\n    message: string\n    is_read: boolean\n    created_at: Date | string\n    related_post?: discussionboard_postCreateNestedOneWithoutDiscussionboard_notificationInput\n    related_comment?: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_notificationInput\n    actor_user?: discussionboard_userCreateNestedOneWithoutDiscussionboard_notification_of_actor_user_idInput\n  }\n\n  export type discussionboard_notificationUncheckedCreateWithoutRecipient_userInput = {\n    id: string\n    related_post_id?: string | null\n    related_comment_id?: string | null\n    actor_user_id?: string | null\n    type: string\n    message: string\n    is_read: boolean\n    created_at: Date | string\n  }\n\n  export type discussionboard_notificationCreateOrConnectWithoutRecipient_userInput = {\n    where: discussionboard_notificationWhereUniqueInput\n    create: XOR<discussionboard_notificationCreateWithoutRecipient_userInput, discussionboard_notificationUncheckedCreateWithoutRecipient_userInput>\n  }\n\n  export type discussionboard_notificationCreateManyRecipient_userInputEnvelope = {\n    data: discussionboard_notificationCreateManyRecipient_userInput | discussionboard_notificationCreateManyRecipient_userInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_notificationCreateWithoutActor_userInput = {\n    id: string\n    type: string\n    message: string\n    is_read: boolean\n    created_at: Date | string\n    recipient_user: discussionboard_userCreateNestedOneWithoutDiscussionboard_notification_of_recipient_user_idInput\n    related_post?: discussionboard_postCreateNestedOneWithoutDiscussionboard_notificationInput\n    related_comment?: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_notificationInput\n  }\n\n  export type discussionboard_notificationUncheckedCreateWithoutActor_userInput = {\n    id: string\n    recipient_user_id: string\n    related_post_id?: string | null\n    related_comment_id?: string | null\n    type: string\n    message: string\n    is_read: boolean\n    created_at: Date | string\n  }\n\n  export type discussionboard_notificationCreateOrConnectWithoutActor_userInput = {\n    where: discussionboard_notificationWhereUniqueInput\n    create: XOR<discussionboard_notificationCreateWithoutActor_userInput, discussionboard_notificationUncheckedCreateWithoutActor_userInput>\n  }\n\n  export type discussionboard_notificationCreateManyActor_userInputEnvelope = {\n    data: discussionboard_notificationCreateManyActor_userInput | discussionboard_notificationCreateManyActor_userInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_notification_preferenceCreateWithoutUserInput = {\n    id: string\n    notify_reply: boolean\n    notify_like: boolean\n    notify_moderator_action: boolean\n    notify_system_message: boolean\n  }\n\n  export type discussionboard_notification_preferenceUncheckedCreateWithoutUserInput = {\n    id: string\n    notify_reply: boolean\n    notify_like: boolean\n    notify_moderator_action: boolean\n    notify_system_message: boolean\n  }\n\n  export type discussionboard_notification_preferenceCreateOrConnectWithoutUserInput = {\n    where: discussionboard_notification_preferenceWhereUniqueInput\n    create: XOR<discussionboard_notification_preferenceCreateWithoutUserInput, discussionboard_notification_preferenceUncheckedCreateWithoutUserInput>\n  }\n\n  export type discussionboard_audit_logCreateWithoutFk_audit_actor_userInput = {\n    id: string\n    action_type: string\n    entity_type: string\n    entity_id?: string | null\n    action_detail?: string | null\n    created_at: Date | string\n    fk_audit_target_user?: discussionboard_userCreateNestedOneWithoutDiscussionboard_audit_log_of_target_user_idInput\n  }\n\n  export type discussionboard_audit_logUncheckedCreateWithoutFk_audit_actor_userInput = {\n    id: string\n    target_user_id?: string | null\n    action_type: string\n    entity_type: string\n    entity_id?: string | null\n    action_detail?: string | null\n    created_at: Date | string\n  }\n\n  export type discussionboard_audit_logCreateOrConnectWithoutFk_audit_actor_userInput = {\n    where: discussionboard_audit_logWhereUniqueInput\n    create: XOR<discussionboard_audit_logCreateWithoutFk_audit_actor_userInput, discussionboard_audit_logUncheckedCreateWithoutFk_audit_actor_userInput>\n  }\n\n  export type discussionboard_audit_logCreateManyFk_audit_actor_userInputEnvelope = {\n    data: discussionboard_audit_logCreateManyFk_audit_actor_userInput | discussionboard_audit_logCreateManyFk_audit_actor_userInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_audit_logCreateWithoutFk_audit_target_userInput = {\n    id: string\n    action_type: string\n    entity_type: string\n    entity_id?: string | null\n    action_detail?: string | null\n    created_at: Date | string\n    fk_audit_actor_user: discussionboard_userCreateNestedOneWithoutDiscussionboard_audit_log_of_actor_user_idInput\n  }\n\n  export type discussionboard_audit_logUncheckedCreateWithoutFk_audit_target_userInput = {\n    id: string\n    actor_user_id: string\n    action_type: string\n    entity_type: string\n    entity_id?: string | null\n    action_detail?: string | null\n    created_at: Date | string\n  }\n\n  export type discussionboard_audit_logCreateOrConnectWithoutFk_audit_target_userInput = {\n    where: discussionboard_audit_logWhereUniqueInput\n    create: XOR<discussionboard_audit_logCreateWithoutFk_audit_target_userInput, discussionboard_audit_logUncheckedCreateWithoutFk_audit_target_userInput>\n  }\n\n  export type discussionboard_audit_logCreateManyFk_audit_target_userInputEnvelope = {\n    data: discussionboard_audit_logCreateManyFk_audit_target_userInput | discussionboard_audit_logCreateManyFk_audit_target_userInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_user_profileUpsertWithoutUser_profile_user_idInput = {\n    update: XOR<discussionboard_user_profileUpdateWithoutUser_profile_user_idInput, discussionboard_user_profileUncheckedUpdateWithoutUser_profile_user_idInput>\n    create: XOR<discussionboard_user_profileCreateWithoutUser_profile_user_idInput, discussionboard_user_profileUncheckedCreateWithoutUser_profile_user_idInput>\n    where?: discussionboard_user_profileWhereInput\n  }\n\n  export type discussionboard_user_profileUpdateToOneWithWhereWithoutUser_profile_user_idInput = {\n    where?: discussionboard_user_profileWhereInput\n    data: XOR<discussionboard_user_profileUpdateWithoutUser_profile_user_idInput, discussionboard_user_profileUncheckedUpdateWithoutUser_profile_user_idInput>\n  }\n\n  export type discussionboard_user_profileUpdateWithoutUser_profile_user_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    display_name?: StringFieldUpdateOperationsInput | string\n    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null\n    bio?: NullableStringFieldUpdateOperationsInput | string | null\n  }\n\n  export type discussionboard_user_profileUncheckedUpdateWithoutUser_profile_user_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    display_name?: StringFieldUpdateOperationsInput | string\n    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null\n    bio?: NullableStringFieldUpdateOperationsInput | string | null\n  }\n\n  export type discussionboard_memberUpsertWithoutMember_user_idInput = {\n    update: XOR<discussionboard_memberUpdateWithoutMember_user_idInput, discussionboard_memberUncheckedUpdateWithoutMember_user_idInput>\n    create: XOR<discussionboard_memberCreateWithoutMember_user_idInput, discussionboard_memberUncheckedCreateWithoutMember_user_idInput>\n    where?: discussionboard_memberWhereInput\n  }\n\n  export type discussionboard_memberUpdateToOneWithWhereWithoutMember_user_idInput = {\n    where?: discussionboard_memberWhereInput\n    data: XOR<discussionboard_memberUpdateWithoutMember_user_idInput, discussionboard_memberUncheckedUpdateWithoutMember_user_idInput>\n  }\n\n  export type discussionboard_memberUpdateWithoutMember_user_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_post?: discussionboard_postUpdateManyWithoutMemberNestedInput\n  }\n\n  export type discussionboard_memberUncheckedUpdateWithoutMember_user_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_post?: discussionboard_postUncheckedUpdateManyWithoutMemberNestedInput\n  }\n\n  export type discussionboard_moderatorUpsertWithoutModerator_user_idInput = {\n    update: XOR<discussionboard_moderatorUpdateWithoutModerator_user_idInput, discussionboard_moderatorUncheckedUpdateWithoutModerator_user_idInput>\n    create: XOR<discussionboard_moderatorCreateWithoutModerator_user_idInput, discussionboard_moderatorUncheckedCreateWithoutModerator_user_idInput>\n    where?: discussionboard_moderatorWhereInput\n  }\n\n  export type discussionboard_moderatorUpdateToOneWithWhereWithoutModerator_user_idInput = {\n    where?: discussionboard_moderatorWhereInput\n    data: XOR<discussionboard_moderatorUpdateWithoutModerator_user_idInput, discussionboard_moderatorUncheckedUpdateWithoutModerator_user_idInput>\n  }\n\n  export type discussionboard_moderatorUpdateWithoutModerator_user_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_moderatorUncheckedUpdateWithoutModerator_user_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_adminUpsertWithoutAdmin_user_idInput = {\n    update: XOR<discussionboard_adminUpdateWithoutAdmin_user_idInput, discussionboard_adminUncheckedUpdateWithoutAdmin_user_idInput>\n    create: XOR<discussionboard_adminCreateWithoutAdmin_user_idInput, discussionboard_adminUncheckedCreateWithoutAdmin_user_idInput>\n    where?: discussionboard_adminWhereInput\n  }\n\n  export type discussionboard_adminUpdateToOneWithWhereWithoutAdmin_user_idInput = {\n    where?: discussionboard_adminWhereInput\n    data: XOR<discussionboard_adminUpdateWithoutAdmin_user_idInput, discussionboard_adminUncheckedUpdateWithoutAdmin_user_idInput>\n  }\n\n  export type discussionboard_adminUpdateWithoutAdmin_user_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_adminUncheckedUpdateWithoutAdmin_user_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_commentsUpsertWithWhereUniqueWithoutAuthorInput = {\n    where: discussionboard_commentsWhereUniqueInput\n    update: XOR<discussionboard_commentsUpdateWithoutAuthorInput, discussionboard_commentsUncheckedUpdateWithoutAuthorInput>\n    create: XOR<discussionboard_commentsCreateWithoutAuthorInput, discussionboard_commentsUncheckedCreateWithoutAuthorInput>\n  }\n\n  export type discussionboard_commentsUpdateWithWhereUniqueWithoutAuthorInput = {\n    where: discussionboard_commentsWhereUniqueInput\n    data: XOR<discussionboard_commentsUpdateWithoutAuthorInput, discussionboard_commentsUncheckedUpdateWithoutAuthorInput>\n  }\n\n  export type discussionboard_commentsUpdateManyWithWhereWithoutAuthorInput = {\n    where: discussionboard_commentsScalarWhereInput\n    data: XOR<discussionboard_commentsUpdateManyMutationInput, discussionboard_commentsUncheckedUpdateManyWithoutAuthorInput>\n  }\n\n  export type discussionboard_commentsScalarWhereInput = {\n    AND?: discussionboard_commentsScalarWhereInput | discussionboard_commentsScalarWhereInput[]\n    OR?: discussionboard_commentsScalarWhereInput[]\n    NOT?: discussionboard_commentsScalarWhereInput | discussionboard_commentsScalarWhereInput[]\n    id?: UuidFilter<\"discussionboard_comments\"> | string\n    post_id?: UuidFilter<\"discussionboard_comments\"> | string\n    author_id?: UuidFilter<\"discussionboard_comments\"> | string\n    parent_comment_id?: UuidNullableFilter<\"discussionboard_comments\"> | string | null\n    content?: StringFilter<\"discussionboard_comments\"> | string\n    is_edited?: BoolFilter<\"discussionboard_comments\"> | boolean\n    is_deleted?: BoolFilter<\"discussionboard_comments\"> | boolean\n    created_at?: DateTimeFilter<\"discussionboard_comments\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussionboard_comments\"> | Date | string\n  }\n\n  export type discussionboard_likesUpsertWithWhereUniqueWithoutUserInput = {\n    where: discussionboard_likesWhereUniqueInput\n    update: XOR<discussionboard_likesUpdateWithoutUserInput, discussionboard_likesUncheckedUpdateWithoutUserInput>\n    create: XOR<discussionboard_likesCreateWithoutUserInput, discussionboard_likesUncheckedCreateWithoutUserInput>\n  }\n\n  export type discussionboard_likesUpdateWithWhereUniqueWithoutUserInput = {\n    where: discussionboard_likesWhereUniqueInput\n    data: XOR<discussionboard_likesUpdateWithoutUserInput, discussionboard_likesUncheckedUpdateWithoutUserInput>\n  }\n\n  export type discussionboard_likesUpdateManyWithWhereWithoutUserInput = {\n    where: discussionboard_likesScalarWhereInput\n    data: XOR<discussionboard_likesUpdateManyMutationInput, discussionboard_likesUncheckedUpdateManyWithoutUserInput>\n  }\n\n  export type discussionboard_likesScalarWhereInput = {\n    AND?: discussionboard_likesScalarWhereInput | discussionboard_likesScalarWhereInput[]\n    OR?: discussionboard_likesScalarWhereInput[]\n    NOT?: discussionboard_likesScalarWhereInput | discussionboard_likesScalarWhereInput[]\n    id?: UuidFilter<\"discussionboard_likes\"> | string\n    user_id?: UuidFilter<\"discussionboard_likes\"> | string\n    post_id?: UuidNullableFilter<\"discussionboard_likes\"> | string | null\n    comment_id?: UuidNullableFilter<\"discussionboard_likes\"> | string | null\n    created_at?: DateTimeFilter<\"discussionboard_likes\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"discussionboard_likes\"> | Date | string | null\n  }\n\n  export type discussionboard_reportsUpsertWithWhereUniqueWithoutUserInput = {\n    where: discussionboard_reportsWhereUniqueInput\n    update: XOR<discussionboard_reportsUpdateWithoutUserInput, discussionboard_reportsUncheckedUpdateWithoutUserInput>\n    create: XOR<discussionboard_reportsCreateWithoutUserInput, discussionboard_reportsUncheckedCreateWithoutUserInput>\n  }\n\n  export type discussionboard_reportsUpdateWithWhereUniqueWithoutUserInput = {\n    where: discussionboard_reportsWhereUniqueInput\n    data: XOR<discussionboard_reportsUpdateWithoutUserInput, discussionboard_reportsUncheckedUpdateWithoutUserInput>\n  }\n\n  export type discussionboard_reportsUpdateManyWithWhereWithoutUserInput = {\n    where: discussionboard_reportsScalarWhereInput\n    data: XOR<discussionboard_reportsUpdateManyMutationInput, discussionboard_reportsUncheckedUpdateManyWithoutUserInput>\n  }\n\n  export type discussionboard_reportsScalarWhereInput = {\n    AND?: discussionboard_reportsScalarWhereInput | discussionboard_reportsScalarWhereInput[]\n    OR?: discussionboard_reportsScalarWhereInput[]\n    NOT?: discussionboard_reportsScalarWhereInput | discussionboard_reportsScalarWhereInput[]\n    id?: UuidFilter<\"discussionboard_reports\"> | string\n    user_id?: UuidFilter<\"discussionboard_reports\"> | string\n    post_id?: UuidNullableFilter<\"discussionboard_reports\"> | string | null\n    comment_id?: UuidNullableFilter<\"discussionboard_reports\"> | string | null\n    reason_code?: StringFilter<\"discussionboard_reports\"> | string\n    reason_details?: StringNullableFilter<\"discussionboard_reports\"> | string | null\n    created_at?: DateTimeFilter<\"discussionboard_reports\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"discussionboard_reports\"> | Date | string | null\n  }\n\n  export type discussionboard_moderation_actionUpsertWithWhereUniqueWithoutActorInput = {\n    where: discussionboard_moderation_actionWhereUniqueInput\n    update: XOR<discussionboard_moderation_actionUpdateWithoutActorInput, discussionboard_moderation_actionUncheckedUpdateWithoutActorInput>\n    create: XOR<discussionboard_moderation_actionCreateWithoutActorInput, discussionboard_moderation_actionUncheckedCreateWithoutActorInput>\n  }\n\n  export type discussionboard_moderation_actionUpdateWithWhereUniqueWithoutActorInput = {\n    where: discussionboard_moderation_actionWhereUniqueInput\n    data: XOR<discussionboard_moderation_actionUpdateWithoutActorInput, discussionboard_moderation_actionUncheckedUpdateWithoutActorInput>\n  }\n\n  export type discussionboard_moderation_actionUpdateManyWithWhereWithoutActorInput = {\n    where: discussionboard_moderation_actionScalarWhereInput\n    data: XOR<discussionboard_moderation_actionUpdateManyMutationInput, discussionboard_moderation_actionUncheckedUpdateManyWithoutActorInput>\n  }\n\n  export type discussionboard_moderation_actionScalarWhereInput = {\n    AND?: discussionboard_moderation_actionScalarWhereInput | discussionboard_moderation_actionScalarWhereInput[]\n    OR?: discussionboard_moderation_actionScalarWhereInput[]\n    NOT?: discussionboard_moderation_actionScalarWhereInput | discussionboard_moderation_actionScalarWhereInput[]\n    id?: UuidFilter<\"discussionboard_moderation_action\"> | string\n    actor_id?: UuidFilter<\"discussionboard_moderation_action\"> | string\n    target_user_id?: UuidFilter<\"discussionboard_moderation_action\"> | string\n    post_id?: UuidNullableFilter<\"discussionboard_moderation_action\"> | string | null\n    comment_id?: UuidNullableFilter<\"discussionboard_moderation_action\"> | string | null\n    action_type?: StringFilter<\"discussionboard_moderation_action\"> | string\n    reason?: StringFilter<\"discussionboard_moderation_action\"> | string\n    created_at?: DateTimeFilter<\"discussionboard_moderation_action\"> | Date | string\n  }\n\n  export type discussionboard_moderation_actionUpsertWithWhereUniqueWithoutTarget_userInput = {\n    where: discussionboard_moderation_actionWhereUniqueInput\n    update: XOR<discussionboard_moderation_actionUpdateWithoutTarget_userInput, discussionboard_moderation_actionUncheckedUpdateWithoutTarget_userInput>\n    create: XOR<discussionboard_moderation_actionCreateWithoutTarget_userInput, discussionboard_moderation_actionUncheckedCreateWithoutTarget_userInput>\n  }\n\n  export type discussionboard_moderation_actionUpdateWithWhereUniqueWithoutTarget_userInput = {\n    where: discussionboard_moderation_actionWhereUniqueInput\n    data: XOR<discussionboard_moderation_actionUpdateWithoutTarget_userInput, discussionboard_moderation_actionUncheckedUpdateWithoutTarget_userInput>\n  }\n\n  export type discussionboard_moderation_actionUpdateManyWithWhereWithoutTarget_userInput = {\n    where: discussionboard_moderation_actionScalarWhereInput\n    data: XOR<discussionboard_moderation_actionUpdateManyMutationInput, discussionboard_moderation_actionUncheckedUpdateManyWithoutTarget_userInput>\n  }\n\n  export type discussionboard_report_reviewUpsertWithWhereUniqueWithoutReviewerInput = {\n    where: discussionboard_report_reviewWhereUniqueInput\n    update: XOR<discussionboard_report_reviewUpdateWithoutReviewerInput, discussionboard_report_reviewUncheckedUpdateWithoutReviewerInput>\n    create: XOR<discussionboard_report_reviewCreateWithoutReviewerInput, discussionboard_report_reviewUncheckedCreateWithoutReviewerInput>\n  }\n\n  export type discussionboard_report_reviewUpdateWithWhereUniqueWithoutReviewerInput = {\n    where: discussionboard_report_reviewWhereUniqueInput\n    data: XOR<discussionboard_report_reviewUpdateWithoutReviewerInput, discussionboard_report_reviewUncheckedUpdateWithoutReviewerInput>\n  }\n\n  export type discussionboard_report_reviewUpdateManyWithWhereWithoutReviewerInput = {\n    where: discussionboard_report_reviewScalarWhereInput\n    data: XOR<discussionboard_report_reviewUpdateManyMutationInput, discussionboard_report_reviewUncheckedUpdateManyWithoutReviewerInput>\n  }\n\n  export type discussionboard_report_reviewScalarWhereInput = {\n    AND?: discussionboard_report_reviewScalarWhereInput | discussionboard_report_reviewScalarWhereInput[]\n    OR?: discussionboard_report_reviewScalarWhereInput[]\n    NOT?: discussionboard_report_reviewScalarWhereInput | discussionboard_report_reviewScalarWhereInput[]\n    id?: UuidFilter<\"discussionboard_report_review\"> | string\n    report_id?: UuidFilter<\"discussionboard_report_review\"> | string\n    reviewer_id?: UuidFilter<\"discussionboard_report_review\"> | string\n    post_id?: UuidNullableFilter<\"discussionboard_report_review\"> | string | null\n    comment_id?: UuidNullableFilter<\"discussionboard_report_review\"> | string | null\n    review_status?: StringFilter<\"discussionboard_report_review\"> | string\n    moderator_comment?: StringNullableFilter<\"discussionboard_report_review\"> | string | null\n    reviewed_at?: DateTimeFilter<\"discussionboard_report_review\"> | Date | string\n  }\n\n  export type discussionboard_warningUpsertWithWhereUniqueWithoutIssuerInput = {\n    where: discussionboard_warningWhereUniqueInput\n    update: XOR<discussionboard_warningUpdateWithoutIssuerInput, discussionboard_warningUncheckedUpdateWithoutIssuerInput>\n    create: XOR<discussionboard_warningCreateWithoutIssuerInput, discussionboard_warningUncheckedCreateWithoutIssuerInput>\n  }\n\n  export type discussionboard_warningUpdateWithWhereUniqueWithoutIssuerInput = {\n    where: discussionboard_warningWhereUniqueInput\n    data: XOR<discussionboard_warningUpdateWithoutIssuerInput, discussionboard_warningUncheckedUpdateWithoutIssuerInput>\n  }\n\n  export type discussionboard_warningUpdateManyWithWhereWithoutIssuerInput = {\n    where: discussionboard_warningScalarWhereInput\n    data: XOR<discussionboard_warningUpdateManyMutationInput, discussionboard_warningUncheckedUpdateManyWithoutIssuerInput>\n  }\n\n  export type discussionboard_warningScalarWhereInput = {\n    AND?: discussionboard_warningScalarWhereInput | discussionboard_warningScalarWhereInput[]\n    OR?: discussionboard_warningScalarWhereInput[]\n    NOT?: discussionboard_warningScalarWhereInput | discussionboard_warningScalarWhereInput[]\n    id?: UuidFilter<\"discussionboard_warning\"> | string\n    issued_by_id?: UuidFilter<\"discussionboard_warning\"> | string\n    issued_to_id?: UuidFilter<\"discussionboard_warning\"> | string\n    post_id?: UuidNullableFilter<\"discussionboard_warning\"> | string | null\n    comment_id?: UuidNullableFilter<\"discussionboard_warning\"> | string | null\n    warning_type?: StringFilter<\"discussionboard_warning\"> | string\n    message?: StringFilter<\"discussionboard_warning\"> | string\n    issued_at?: DateTimeFilter<\"discussionboard_warning\"> | Date | string\n  }\n\n  export type discussionboard_warningUpsertWithWhereUniqueWithoutRecipientInput = {\n    where: discussionboard_warningWhereUniqueInput\n    update: XOR<discussionboard_warningUpdateWithoutRecipientInput, discussionboard_warningUncheckedUpdateWithoutRecipientInput>\n    create: XOR<discussionboard_warningCreateWithoutRecipientInput, discussionboard_warningUncheckedCreateWithoutRecipientInput>\n  }\n\n  export type discussionboard_warningUpdateWithWhereUniqueWithoutRecipientInput = {\n    where: discussionboard_warningWhereUniqueInput\n    data: XOR<discussionboard_warningUpdateWithoutRecipientInput, discussionboard_warningUncheckedUpdateWithoutRecipientInput>\n  }\n\n  export type discussionboard_warningUpdateManyWithWhereWithoutRecipientInput = {\n    where: discussionboard_warningScalarWhereInput\n    data: XOR<discussionboard_warningUpdateManyMutationInput, discussionboard_warningUncheckedUpdateManyWithoutRecipientInput>\n  }\n\n  export type discussionboard_banUpsertWithWhereUniqueWithoutBanned_userInput = {\n    where: discussionboard_banWhereUniqueInput\n    update: XOR<discussionboard_banUpdateWithoutBanned_userInput, discussionboard_banUncheckedUpdateWithoutBanned_userInput>\n    create: XOR<discussionboard_banCreateWithoutBanned_userInput, discussionboard_banUncheckedCreateWithoutBanned_userInput>\n  }\n\n  export type discussionboard_banUpdateWithWhereUniqueWithoutBanned_userInput = {\n    where: discussionboard_banWhereUniqueInput\n    data: XOR<discussionboard_banUpdateWithoutBanned_userInput, discussionboard_banUncheckedUpdateWithoutBanned_userInput>\n  }\n\n  export type discussionboard_banUpdateManyWithWhereWithoutBanned_userInput = {\n    where: discussionboard_banScalarWhereInput\n    data: XOR<discussionboard_banUpdateManyMutationInput, discussionboard_banUncheckedUpdateManyWithoutBanned_userInput>\n  }\n\n  export type discussionboard_banScalarWhereInput = {\n    AND?: discussionboard_banScalarWhereInput | discussionboard_banScalarWhereInput[]\n    OR?: discussionboard_banScalarWhereInput[]\n    NOT?: discussionboard_banScalarWhereInput | discussionboard_banScalarWhereInput[]\n    id?: UuidFilter<\"discussionboard_ban\"> | string\n    banned_user_id?: UuidFilter<\"discussionboard_ban\"> | string\n    banned_by_id?: UuidFilter<\"discussionboard_ban\"> | string\n    warning_id?: UuidNullableFilter<\"discussionboard_ban\"> | string | null\n    ban_type?: StringFilter<\"discussionboard_ban\"> | string\n    reason?: StringFilter<\"discussionboard_ban\"> | string\n    issued_at?: DateTimeFilter<\"discussionboard_ban\"> | Date | string\n    expires_at?: DateTimeNullableFilter<\"discussionboard_ban\"> | Date | string | null\n  }\n\n  export type discussionboard_banUpsertWithWhereUniqueWithoutBan_actorInput = {\n    where: discussionboard_banWhereUniqueInput\n    update: XOR<discussionboard_banUpdateWithoutBan_actorInput, discussionboard_banUncheckedUpdateWithoutBan_actorInput>\n    create: XOR<discussionboard_banCreateWithoutBan_actorInput, discussionboard_banUncheckedCreateWithoutBan_actorInput>\n  }\n\n  export type discussionboard_banUpdateWithWhereUniqueWithoutBan_actorInput = {\n    where: discussionboard_banWhereUniqueInput\n    data: XOR<discussionboard_banUpdateWithoutBan_actorInput, discussionboard_banUncheckedUpdateWithoutBan_actorInput>\n  }\n\n  export type discussionboard_banUpdateManyWithWhereWithoutBan_actorInput = {\n    where: discussionboard_banScalarWhereInput\n    data: XOR<discussionboard_banUpdateManyMutationInput, discussionboard_banUncheckedUpdateManyWithoutBan_actorInput>\n  }\n\n  export type discussionboard_notificationUpsertWithWhereUniqueWithoutRecipient_userInput = {\n    where: discussionboard_notificationWhereUniqueInput\n    update: XOR<discussionboard_notificationUpdateWithoutRecipient_userInput, discussionboard_notificationUncheckedUpdateWithoutRecipient_userInput>\n    create: XOR<discussionboard_notificationCreateWithoutRecipient_userInput, discussionboard_notificationUncheckedCreateWithoutRecipient_userInput>\n  }\n\n  export type discussionboard_notificationUpdateWithWhereUniqueWithoutRecipient_userInput = {\n    where: discussionboard_notificationWhereUniqueInput\n    data: XOR<discussionboard_notificationUpdateWithoutRecipient_userInput, discussionboard_notificationUncheckedUpdateWithoutRecipient_userInput>\n  }\n\n  export type discussionboard_notificationUpdateManyWithWhereWithoutRecipient_userInput = {\n    where: discussionboard_notificationScalarWhereInput\n    data: XOR<discussionboard_notificationUpdateManyMutationInput, discussionboard_notificationUncheckedUpdateManyWithoutRecipient_userInput>\n  }\n\n  export type discussionboard_notificationScalarWhereInput = {\n    AND?: discussionboard_notificationScalarWhereInput | discussionboard_notificationScalarWhereInput[]\n    OR?: discussionboard_notificationScalarWhereInput[]\n    NOT?: discussionboard_notificationScalarWhereInput | discussionboard_notificationScalarWhereInput[]\n    id?: UuidFilter<\"discussionboard_notification\"> | string\n    recipient_user_id?: UuidFilter<\"discussionboard_notification\"> | string\n    related_post_id?: UuidNullableFilter<\"discussionboard_notification\"> | string | null\n    related_comment_id?: UuidNullableFilter<\"discussionboard_notification\"> | string | null\n    actor_user_id?: UuidNullableFilter<\"discussionboard_notification\"> | string | null\n    type?: StringFilter<\"discussionboard_notification\"> | string\n    message?: StringFilter<\"discussionboard_notification\"> | string\n    is_read?: BoolFilter<\"discussionboard_notification\"> | boolean\n    created_at?: DateTimeFilter<\"discussionboard_notification\"> | Date | string\n  }\n\n  export type discussionboard_notificationUpsertWithWhereUniqueWithoutActor_userInput = {\n    where: discussionboard_notificationWhereUniqueInput\n    update: XOR<discussionboard_notificationUpdateWithoutActor_userInput, discussionboard_notificationUncheckedUpdateWithoutActor_userInput>\n    create: XOR<discussionboard_notificationCreateWithoutActor_userInput, discussionboard_notificationUncheckedCreateWithoutActor_userInput>\n  }\n\n  export type discussionboard_notificationUpdateWithWhereUniqueWithoutActor_userInput = {\n    where: discussionboard_notificationWhereUniqueInput\n    data: XOR<discussionboard_notificationUpdateWithoutActor_userInput, discussionboard_notificationUncheckedUpdateWithoutActor_userInput>\n  }\n\n  export type discussionboard_notificationUpdateManyWithWhereWithoutActor_userInput = {\n    where: discussionboard_notificationScalarWhereInput\n    data: XOR<discussionboard_notificationUpdateManyMutationInput, discussionboard_notificationUncheckedUpdateManyWithoutActor_userInput>\n  }\n\n  export type discussionboard_notification_preferenceUpsertWithoutUserInput = {\n    update: XOR<discussionboard_notification_preferenceUpdateWithoutUserInput, discussionboard_notification_preferenceUncheckedUpdateWithoutUserInput>\n    create: XOR<discussionboard_notification_preferenceCreateWithoutUserInput, discussionboard_notification_preferenceUncheckedCreateWithoutUserInput>\n    where?: discussionboard_notification_preferenceWhereInput\n  }\n\n  export type discussionboard_notification_preferenceUpdateToOneWithWhereWithoutUserInput = {\n    where?: discussionboard_notification_preferenceWhereInput\n    data: XOR<discussionboard_notification_preferenceUpdateWithoutUserInput, discussionboard_notification_preferenceUncheckedUpdateWithoutUserInput>\n  }\n\n  export type discussionboard_notification_preferenceUpdateWithoutUserInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    notify_reply?: BoolFieldUpdateOperationsInput | boolean\n    notify_like?: BoolFieldUpdateOperationsInput | boolean\n    notify_moderator_action?: BoolFieldUpdateOperationsInput | boolean\n    notify_system_message?: BoolFieldUpdateOperationsInput | boolean\n  }\n\n  export type discussionboard_notification_preferenceUncheckedUpdateWithoutUserInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    notify_reply?: BoolFieldUpdateOperationsInput | boolean\n    notify_like?: BoolFieldUpdateOperationsInput | boolean\n    notify_moderator_action?: BoolFieldUpdateOperationsInput | boolean\n    notify_system_message?: BoolFieldUpdateOperationsInput | boolean\n  }\n\n  export type discussionboard_audit_logUpsertWithWhereUniqueWithoutFk_audit_actor_userInput = {\n    where: discussionboard_audit_logWhereUniqueInput\n    update: XOR<discussionboard_audit_logUpdateWithoutFk_audit_actor_userInput, discussionboard_audit_logUncheckedUpdateWithoutFk_audit_actor_userInput>\n    create: XOR<discussionboard_audit_logCreateWithoutFk_audit_actor_userInput, discussionboard_audit_logUncheckedCreateWithoutFk_audit_actor_userInput>\n  }\n\n  export type discussionboard_audit_logUpdateWithWhereUniqueWithoutFk_audit_actor_userInput = {\n    where: discussionboard_audit_logWhereUniqueInput\n    data: XOR<discussionboard_audit_logUpdateWithoutFk_audit_actor_userInput, discussionboard_audit_logUncheckedUpdateWithoutFk_audit_actor_userInput>\n  }\n\n  export type discussionboard_audit_logUpdateManyWithWhereWithoutFk_audit_actor_userInput = {\n    where: discussionboard_audit_logScalarWhereInput\n    data: XOR<discussionboard_audit_logUpdateManyMutationInput, discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_actor_userInput>\n  }\n\n  export type discussionboard_audit_logScalarWhereInput = {\n    AND?: discussionboard_audit_logScalarWhereInput | discussionboard_audit_logScalarWhereInput[]\n    OR?: discussionboard_audit_logScalarWhereInput[]\n    NOT?: discussionboard_audit_logScalarWhereInput | discussionboard_audit_logScalarWhereInput[]\n    id?: UuidFilter<\"discussionboard_audit_log\"> | string\n    actor_user_id?: UuidFilter<\"discussionboard_audit_log\"> | string\n    target_user_id?: UuidNullableFilter<\"discussionboard_audit_log\"> | string | null\n    action_type?: StringFilter<\"discussionboard_audit_log\"> | string\n    entity_type?: StringFilter<\"discussionboard_audit_log\"> | string\n    entity_id?: UuidNullableFilter<\"discussionboard_audit_log\"> | string | null\n    action_detail?: StringNullableFilter<\"discussionboard_audit_log\"> | string | null\n    created_at?: DateTimeFilter<\"discussionboard_audit_log\"> | Date | string\n  }\n\n  export type discussionboard_audit_logUpsertWithWhereUniqueWithoutFk_audit_target_userInput = {\n    where: discussionboard_audit_logWhereUniqueInput\n    update: XOR<discussionboard_audit_logUpdateWithoutFk_audit_target_userInput, discussionboard_audit_logUncheckedUpdateWithoutFk_audit_target_userInput>\n    create: XOR<discussionboard_audit_logCreateWithoutFk_audit_target_userInput, discussionboard_audit_logUncheckedCreateWithoutFk_audit_target_userInput>\n  }\n\n  export type discussionboard_audit_logUpdateWithWhereUniqueWithoutFk_audit_target_userInput = {\n    where: discussionboard_audit_logWhereUniqueInput\n    data: XOR<discussionboard_audit_logUpdateWithoutFk_audit_target_userInput, discussionboard_audit_logUncheckedUpdateWithoutFk_audit_target_userInput>\n  }\n\n  export type discussionboard_audit_logUpdateManyWithWhereWithoutFk_audit_target_userInput = {\n    where: discussionboard_audit_logScalarWhereInput\n    data: XOR<discussionboard_audit_logUpdateManyMutationInput, discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_target_userInput>\n  }\n\n  export type discussionboard_userCreateWithoutDiscussionboard_user_profileInput = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_member?: discussionboard_memberCreateNestedOneWithoutMember_user_idInput\n    discussionboard_moderator?: discussionboard_moderatorCreateNestedOneWithoutModerator_user_idInput\n    discussionboard_admin?: discussionboard_adminCreateNestedOneWithoutAdmin_user_idInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_likes?: discussionboard_likesCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutUserInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionCreateNestedManyWithoutActorInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionCreateNestedManyWithoutTarget_userInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReviewerInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningCreateNestedManyWithoutIssuerInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningCreateNestedManyWithoutRecipientInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banCreateNestedManyWithoutBanned_userInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banCreateNestedManyWithoutBan_actorInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationCreateNestedManyWithoutRecipient_userInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationCreateNestedManyWithoutActor_userInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceCreateNestedOneWithoutUserInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logCreateNestedManyWithoutFk_audit_actor_userInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logCreateNestedManyWithoutFk_audit_target_userInput\n  }\n\n  export type discussionboard_userUncheckedCreateWithoutDiscussionboard_user_profileInput = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_member?: discussionboard_memberUncheckedCreateNestedOneWithoutMember_user_idInput\n    discussionboard_moderator?: discussionboard_moderatorUncheckedCreateNestedOneWithoutModerator_user_idInput\n    discussionboard_admin?: discussionboard_adminUncheckedCreateNestedOneWithoutAdmin_user_idInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_likes?: discussionboard_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutActorInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutTarget_userInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewerInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUncheckedCreateNestedManyWithoutIssuerInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUncheckedCreateNestedManyWithoutRecipientInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUncheckedCreateNestedManyWithoutBanned_userInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUncheckedCreateNestedManyWithoutBan_actorInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUncheckedCreateNestedManyWithoutRecipient_userInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUncheckedCreateNestedManyWithoutActor_userInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUncheckedCreateNestedOneWithoutUserInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUncheckedCreateNestedManyWithoutFk_audit_actor_userInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUncheckedCreateNestedManyWithoutFk_audit_target_userInput\n  }\n\n  export type discussionboard_userCreateOrConnectWithoutDiscussionboard_user_profileInput = {\n    where: discussionboard_userWhereUniqueInput\n    create: XOR<discussionboard_userCreateWithoutDiscussionboard_user_profileInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_user_profileInput>\n  }\n\n  export type discussionboard_userUpsertWithoutDiscussionboard_user_profileInput = {\n    update: XOR<discussionboard_userUpdateWithoutDiscussionboard_user_profileInput, discussionboard_userUncheckedUpdateWithoutDiscussionboard_user_profileInput>\n    create: XOR<discussionboard_userCreateWithoutDiscussionboard_user_profileInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_user_profileInput>\n    where?: discussionboard_userWhereInput\n  }\n\n  export type discussionboard_userUpdateToOneWithWhereWithoutDiscussionboard_user_profileInput = {\n    where?: discussionboard_userWhereInput\n    data: XOR<discussionboard_userUpdateWithoutDiscussionboard_user_profileInput, discussionboard_userUncheckedUpdateWithoutDiscussionboard_user_profileInput>\n  }\n\n  export type discussionboard_userUpdateWithoutDiscussionboard_user_profileInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_member?: discussionboard_memberUpdateOneWithoutMember_user_idNestedInput\n    discussionboard_moderator?: discussionboard_moderatorUpdateOneWithoutModerator_user_idNestedInput\n    discussionboard_admin?: discussionboard_adminUpdateOneWithoutAdmin_user_idNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_likes?: discussionboard_likesUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUpdateManyWithoutActorNestedInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUpdateManyWithoutTarget_userNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReviewerNestedInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUpdateManyWithoutIssuerNestedInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUpdateManyWithoutRecipientNestedInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUpdateManyWithoutBanned_userNestedInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUpdateManyWithoutBan_actorNestedInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUpdateManyWithoutRecipient_userNestedInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUpdateManyWithoutActor_userNestedInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUpdateOneWithoutUserNestedInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUpdateManyWithoutFk_audit_actor_userNestedInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUpdateManyWithoutFk_audit_target_userNestedInput\n  }\n\n  export type discussionboard_userUncheckedUpdateWithoutDiscussionboard_user_profileInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_member?: discussionboard_memberUncheckedUpdateOneWithoutMember_user_idNestedInput\n    discussionboard_moderator?: discussionboard_moderatorUncheckedUpdateOneWithoutModerator_user_idNestedInput\n    discussionboard_admin?: discussionboard_adminUncheckedUpdateOneWithoutAdmin_user_idNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_likes?: discussionboard_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUncheckedUpdateManyWithoutActorNestedInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUncheckedUpdateManyWithoutTarget_userNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReviewerNestedInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUncheckedUpdateManyWithoutIssuerNestedInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUncheckedUpdateManyWithoutRecipientNestedInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUncheckedUpdateManyWithoutBanned_userNestedInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUncheckedUpdateManyWithoutBan_actorNestedInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUncheckedUpdateManyWithoutRecipient_userNestedInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUncheckedUpdateManyWithoutActor_userNestedInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUncheckedUpdateOneWithoutUserNestedInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_actor_userNestedInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_target_userNestedInput\n  }\n\n  export type discussionboard_userCreateWithoutDiscussionboard_memberInput = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_user_profile?: discussionboard_user_profileCreateNestedOneWithoutUser_profile_user_idInput\n    discussionboard_moderator?: discussionboard_moderatorCreateNestedOneWithoutModerator_user_idInput\n    discussionboard_admin?: discussionboard_adminCreateNestedOneWithoutAdmin_user_idInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_likes?: discussionboard_likesCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutUserInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionCreateNestedManyWithoutActorInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionCreateNestedManyWithoutTarget_userInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReviewerInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningCreateNestedManyWithoutIssuerInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningCreateNestedManyWithoutRecipientInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banCreateNestedManyWithoutBanned_userInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banCreateNestedManyWithoutBan_actorInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationCreateNestedManyWithoutRecipient_userInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationCreateNestedManyWithoutActor_userInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceCreateNestedOneWithoutUserInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logCreateNestedManyWithoutFk_audit_actor_userInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logCreateNestedManyWithoutFk_audit_target_userInput\n  }\n\n  export type discussionboard_userUncheckedCreateWithoutDiscussionboard_memberInput = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUncheckedCreateNestedOneWithoutUser_profile_user_idInput\n    discussionboard_moderator?: discussionboard_moderatorUncheckedCreateNestedOneWithoutModerator_user_idInput\n    discussionboard_admin?: discussionboard_adminUncheckedCreateNestedOneWithoutAdmin_user_idInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_likes?: discussionboard_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutActorInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutTarget_userInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewerInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUncheckedCreateNestedManyWithoutIssuerInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUncheckedCreateNestedManyWithoutRecipientInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUncheckedCreateNestedManyWithoutBanned_userInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUncheckedCreateNestedManyWithoutBan_actorInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUncheckedCreateNestedManyWithoutRecipient_userInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUncheckedCreateNestedManyWithoutActor_userInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUncheckedCreateNestedOneWithoutUserInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUncheckedCreateNestedManyWithoutFk_audit_actor_userInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUncheckedCreateNestedManyWithoutFk_audit_target_userInput\n  }\n\n  export type discussionboard_userCreateOrConnectWithoutDiscussionboard_memberInput = {\n    where: discussionboard_userWhereUniqueInput\n    create: XOR<discussionboard_userCreateWithoutDiscussionboard_memberInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_memberInput>\n  }\n\n  export type discussionboard_postCreateWithoutMemberInput = {\n    id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    category: discussionboard_post_categoryCreateNestedOneWithoutDiscussionboard_postInput\n    discussionboard_post_attachment?: discussionboard_post_attachmentCreateNestedManyWithoutPostInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutPostInput\n    discussionboard_likes?: discussionboard_likesCreateNestedManyWithoutPostInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutPostInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionCreateNestedManyWithoutModerated_postInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReviewed_postInput\n    discussionboard_warning?: discussionboard_warningCreateNestedManyWithoutWarning_postInput\n    discussionboard_notification?: discussionboard_notificationCreateNestedManyWithoutRelated_postInput\n  }\n\n  export type discussionboard_postUncheckedCreateWithoutMemberInput = {\n    id: string\n    category_id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussionboard_post_attachment?: discussionboard_post_attachmentUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_likes?: discussionboard_likesUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutModerated_postInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewed_postInput\n    discussionboard_warning?: discussionboard_warningUncheckedCreateNestedManyWithoutWarning_postInput\n    discussionboard_notification?: discussionboard_notificationUncheckedCreateNestedManyWithoutRelated_postInput\n  }\n\n  export type discussionboard_postCreateOrConnectWithoutMemberInput = {\n    where: discussionboard_postWhereUniqueInput\n    create: XOR<discussionboard_postCreateWithoutMemberInput, discussionboard_postUncheckedCreateWithoutMemberInput>\n  }\n\n  export type discussionboard_postCreateManyMemberInputEnvelope = {\n    data: discussionboard_postCreateManyMemberInput | discussionboard_postCreateManyMemberInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_userUpsertWithoutDiscussionboard_memberInput = {\n    update: XOR<discussionboard_userUpdateWithoutDiscussionboard_memberInput, discussionboard_userUncheckedUpdateWithoutDiscussionboard_memberInput>\n    create: XOR<discussionboard_userCreateWithoutDiscussionboard_memberInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_memberInput>\n    where?: discussionboard_userWhereInput\n  }\n\n  export type discussionboard_userUpdateToOneWithWhereWithoutDiscussionboard_memberInput = {\n    where?: discussionboard_userWhereInput\n    data: XOR<discussionboard_userUpdateWithoutDiscussionboard_memberInput, discussionboard_userUncheckedUpdateWithoutDiscussionboard_memberInput>\n  }\n\n  export type discussionboard_userUpdateWithoutDiscussionboard_memberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUpdateOneWithoutUser_profile_user_idNestedInput\n    discussionboard_moderator?: discussionboard_moderatorUpdateOneWithoutModerator_user_idNestedInput\n    discussionboard_admin?: discussionboard_adminUpdateOneWithoutAdmin_user_idNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_likes?: discussionboard_likesUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUpdateManyWithoutActorNestedInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUpdateManyWithoutTarget_userNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReviewerNestedInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUpdateManyWithoutIssuerNestedInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUpdateManyWithoutRecipientNestedInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUpdateManyWithoutBanned_userNestedInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUpdateManyWithoutBan_actorNestedInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUpdateManyWithoutRecipient_userNestedInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUpdateManyWithoutActor_userNestedInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUpdateOneWithoutUserNestedInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUpdateManyWithoutFk_audit_actor_userNestedInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUpdateManyWithoutFk_audit_target_userNestedInput\n  }\n\n  export type discussionboard_userUncheckedUpdateWithoutDiscussionboard_memberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUncheckedUpdateOneWithoutUser_profile_user_idNestedInput\n    discussionboard_moderator?: discussionboard_moderatorUncheckedUpdateOneWithoutModerator_user_idNestedInput\n    discussionboard_admin?: discussionboard_adminUncheckedUpdateOneWithoutAdmin_user_idNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_likes?: discussionboard_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUncheckedUpdateManyWithoutActorNestedInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUncheckedUpdateManyWithoutTarget_userNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReviewerNestedInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUncheckedUpdateManyWithoutIssuerNestedInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUncheckedUpdateManyWithoutRecipientNestedInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUncheckedUpdateManyWithoutBanned_userNestedInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUncheckedUpdateManyWithoutBan_actorNestedInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUncheckedUpdateManyWithoutRecipient_userNestedInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUncheckedUpdateManyWithoutActor_userNestedInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUncheckedUpdateOneWithoutUserNestedInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_actor_userNestedInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_target_userNestedInput\n  }\n\n  export type discussionboard_postUpsertWithWhereUniqueWithoutMemberInput = {\n    where: discussionboard_postWhereUniqueInput\n    update: XOR<discussionboard_postUpdateWithoutMemberInput, discussionboard_postUncheckedUpdateWithoutMemberInput>\n    create: XOR<discussionboard_postCreateWithoutMemberInput, discussionboard_postUncheckedCreateWithoutMemberInput>\n  }\n\n  export type discussionboard_postUpdateWithWhereUniqueWithoutMemberInput = {\n    where: discussionboard_postWhereUniqueInput\n    data: XOR<discussionboard_postUpdateWithoutMemberInput, discussionboard_postUncheckedUpdateWithoutMemberInput>\n  }\n\n  export type discussionboard_postUpdateManyWithWhereWithoutMemberInput = {\n    where: discussionboard_postScalarWhereInput\n    data: XOR<discussionboard_postUpdateManyMutationInput, discussionboard_postUncheckedUpdateManyWithoutMemberInput>\n  }\n\n  export type discussionboard_postScalarWhereInput = {\n    AND?: discussionboard_postScalarWhereInput | discussionboard_postScalarWhereInput[]\n    OR?: discussionboard_postScalarWhereInput[]\n    NOT?: discussionboard_postScalarWhereInput | discussionboard_postScalarWhereInput[]\n    id?: UuidFilter<\"discussionboard_post\"> | string\n    author_member_id?: UuidFilter<\"discussionboard_post\"> | string\n    category_id?: UuidFilter<\"discussionboard_post\"> | string\n    title?: StringFilter<\"discussionboard_post\"> | string\n    body?: StringFilter<\"discussionboard_post\"> | string\n    created_at?: DateTimeFilter<\"discussionboard_post\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussionboard_post\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"discussionboard_post\"> | Date | string | null\n  }\n\n  export type discussionboard_userCreateWithoutDiscussionboard_moderatorInput = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_user_profile?: discussionboard_user_profileCreateNestedOneWithoutUser_profile_user_idInput\n    discussionboard_member?: discussionboard_memberCreateNestedOneWithoutMember_user_idInput\n    discussionboard_admin?: discussionboard_adminCreateNestedOneWithoutAdmin_user_idInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_likes?: discussionboard_likesCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutUserInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionCreateNestedManyWithoutActorInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionCreateNestedManyWithoutTarget_userInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReviewerInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningCreateNestedManyWithoutIssuerInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningCreateNestedManyWithoutRecipientInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banCreateNestedManyWithoutBanned_userInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banCreateNestedManyWithoutBan_actorInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationCreateNestedManyWithoutRecipient_userInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationCreateNestedManyWithoutActor_userInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceCreateNestedOneWithoutUserInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logCreateNestedManyWithoutFk_audit_actor_userInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logCreateNestedManyWithoutFk_audit_target_userInput\n  }\n\n  export type discussionboard_userUncheckedCreateWithoutDiscussionboard_moderatorInput = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUncheckedCreateNestedOneWithoutUser_profile_user_idInput\n    discussionboard_member?: discussionboard_memberUncheckedCreateNestedOneWithoutMember_user_idInput\n    discussionboard_admin?: discussionboard_adminUncheckedCreateNestedOneWithoutAdmin_user_idInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_likes?: discussionboard_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutActorInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutTarget_userInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewerInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUncheckedCreateNestedManyWithoutIssuerInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUncheckedCreateNestedManyWithoutRecipientInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUncheckedCreateNestedManyWithoutBanned_userInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUncheckedCreateNestedManyWithoutBan_actorInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUncheckedCreateNestedManyWithoutRecipient_userInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUncheckedCreateNestedManyWithoutActor_userInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUncheckedCreateNestedOneWithoutUserInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUncheckedCreateNestedManyWithoutFk_audit_actor_userInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUncheckedCreateNestedManyWithoutFk_audit_target_userInput\n  }\n\n  export type discussionboard_userCreateOrConnectWithoutDiscussionboard_moderatorInput = {\n    where: discussionboard_userWhereUniqueInput\n    create: XOR<discussionboard_userCreateWithoutDiscussionboard_moderatorInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_moderatorInput>\n  }\n\n  export type discussionboard_userUpsertWithoutDiscussionboard_moderatorInput = {\n    update: XOR<discussionboard_userUpdateWithoutDiscussionboard_moderatorInput, discussionboard_userUncheckedUpdateWithoutDiscussionboard_moderatorInput>\n    create: XOR<discussionboard_userCreateWithoutDiscussionboard_moderatorInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_moderatorInput>\n    where?: discussionboard_userWhereInput\n  }\n\n  export type discussionboard_userUpdateToOneWithWhereWithoutDiscussionboard_moderatorInput = {\n    where?: discussionboard_userWhereInput\n    data: XOR<discussionboard_userUpdateWithoutDiscussionboard_moderatorInput, discussionboard_userUncheckedUpdateWithoutDiscussionboard_moderatorInput>\n  }\n\n  export type discussionboard_userUpdateWithoutDiscussionboard_moderatorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUpdateOneWithoutUser_profile_user_idNestedInput\n    discussionboard_member?: discussionboard_memberUpdateOneWithoutMember_user_idNestedInput\n    discussionboard_admin?: discussionboard_adminUpdateOneWithoutAdmin_user_idNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_likes?: discussionboard_likesUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUpdateManyWithoutActorNestedInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUpdateManyWithoutTarget_userNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReviewerNestedInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUpdateManyWithoutIssuerNestedInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUpdateManyWithoutRecipientNestedInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUpdateManyWithoutBanned_userNestedInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUpdateManyWithoutBan_actorNestedInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUpdateManyWithoutRecipient_userNestedInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUpdateManyWithoutActor_userNestedInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUpdateOneWithoutUserNestedInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUpdateManyWithoutFk_audit_actor_userNestedInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUpdateManyWithoutFk_audit_target_userNestedInput\n  }\n\n  export type discussionboard_userUncheckedUpdateWithoutDiscussionboard_moderatorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUncheckedUpdateOneWithoutUser_profile_user_idNestedInput\n    discussionboard_member?: discussionboard_memberUncheckedUpdateOneWithoutMember_user_idNestedInput\n    discussionboard_admin?: discussionboard_adminUncheckedUpdateOneWithoutAdmin_user_idNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_likes?: discussionboard_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUncheckedUpdateManyWithoutActorNestedInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUncheckedUpdateManyWithoutTarget_userNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReviewerNestedInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUncheckedUpdateManyWithoutIssuerNestedInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUncheckedUpdateManyWithoutRecipientNestedInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUncheckedUpdateManyWithoutBanned_userNestedInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUncheckedUpdateManyWithoutBan_actorNestedInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUncheckedUpdateManyWithoutRecipient_userNestedInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUncheckedUpdateManyWithoutActor_userNestedInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUncheckedUpdateOneWithoutUserNestedInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_actor_userNestedInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_target_userNestedInput\n  }\n\n  export type discussionboard_userCreateWithoutDiscussionboard_adminInput = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_user_profile?: discussionboard_user_profileCreateNestedOneWithoutUser_profile_user_idInput\n    discussionboard_member?: discussionboard_memberCreateNestedOneWithoutMember_user_idInput\n    discussionboard_moderator?: discussionboard_moderatorCreateNestedOneWithoutModerator_user_idInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_likes?: discussionboard_likesCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutUserInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionCreateNestedManyWithoutActorInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionCreateNestedManyWithoutTarget_userInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReviewerInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningCreateNestedManyWithoutIssuerInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningCreateNestedManyWithoutRecipientInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banCreateNestedManyWithoutBanned_userInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banCreateNestedManyWithoutBan_actorInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationCreateNestedManyWithoutRecipient_userInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationCreateNestedManyWithoutActor_userInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceCreateNestedOneWithoutUserInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logCreateNestedManyWithoutFk_audit_actor_userInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logCreateNestedManyWithoutFk_audit_target_userInput\n  }\n\n  export type discussionboard_userUncheckedCreateWithoutDiscussionboard_adminInput = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUncheckedCreateNestedOneWithoutUser_profile_user_idInput\n    discussionboard_member?: discussionboard_memberUncheckedCreateNestedOneWithoutMember_user_idInput\n    discussionboard_moderator?: discussionboard_moderatorUncheckedCreateNestedOneWithoutModerator_user_idInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_likes?: discussionboard_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutActorInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutTarget_userInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewerInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUncheckedCreateNestedManyWithoutIssuerInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUncheckedCreateNestedManyWithoutRecipientInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUncheckedCreateNestedManyWithoutBanned_userInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUncheckedCreateNestedManyWithoutBan_actorInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUncheckedCreateNestedManyWithoutRecipient_userInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUncheckedCreateNestedManyWithoutActor_userInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUncheckedCreateNestedOneWithoutUserInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUncheckedCreateNestedManyWithoutFk_audit_actor_userInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUncheckedCreateNestedManyWithoutFk_audit_target_userInput\n  }\n\n  export type discussionboard_userCreateOrConnectWithoutDiscussionboard_adminInput = {\n    where: discussionboard_userWhereUniqueInput\n    create: XOR<discussionboard_userCreateWithoutDiscussionboard_adminInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_adminInput>\n  }\n\n  export type discussionboard_userUpsertWithoutDiscussionboard_adminInput = {\n    update: XOR<discussionboard_userUpdateWithoutDiscussionboard_adminInput, discussionboard_userUncheckedUpdateWithoutDiscussionboard_adminInput>\n    create: XOR<discussionboard_userCreateWithoutDiscussionboard_adminInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_adminInput>\n    where?: discussionboard_userWhereInput\n  }\n\n  export type discussionboard_userUpdateToOneWithWhereWithoutDiscussionboard_adminInput = {\n    where?: discussionboard_userWhereInput\n    data: XOR<discussionboard_userUpdateWithoutDiscussionboard_adminInput, discussionboard_userUncheckedUpdateWithoutDiscussionboard_adminInput>\n  }\n\n  export type discussionboard_userUpdateWithoutDiscussionboard_adminInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUpdateOneWithoutUser_profile_user_idNestedInput\n    discussionboard_member?: discussionboard_memberUpdateOneWithoutMember_user_idNestedInput\n    discussionboard_moderator?: discussionboard_moderatorUpdateOneWithoutModerator_user_idNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_likes?: discussionboard_likesUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUpdateManyWithoutActorNestedInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUpdateManyWithoutTarget_userNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReviewerNestedInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUpdateManyWithoutIssuerNestedInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUpdateManyWithoutRecipientNestedInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUpdateManyWithoutBanned_userNestedInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUpdateManyWithoutBan_actorNestedInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUpdateManyWithoutRecipient_userNestedInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUpdateManyWithoutActor_userNestedInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUpdateOneWithoutUserNestedInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUpdateManyWithoutFk_audit_actor_userNestedInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUpdateManyWithoutFk_audit_target_userNestedInput\n  }\n\n  export type discussionboard_userUncheckedUpdateWithoutDiscussionboard_adminInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUncheckedUpdateOneWithoutUser_profile_user_idNestedInput\n    discussionboard_member?: discussionboard_memberUncheckedUpdateOneWithoutMember_user_idNestedInput\n    discussionboard_moderator?: discussionboard_moderatorUncheckedUpdateOneWithoutModerator_user_idNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_likes?: discussionboard_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUncheckedUpdateManyWithoutActorNestedInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUncheckedUpdateManyWithoutTarget_userNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReviewerNestedInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUncheckedUpdateManyWithoutIssuerNestedInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUncheckedUpdateManyWithoutRecipientNestedInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUncheckedUpdateManyWithoutBanned_userNestedInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUncheckedUpdateManyWithoutBan_actorNestedInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUncheckedUpdateManyWithoutRecipient_userNestedInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUncheckedUpdateManyWithoutActor_userNestedInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUncheckedUpdateOneWithoutUserNestedInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_actor_userNestedInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_target_userNestedInput\n  }\n\n  export type discussionboard_memberCreateWithoutDiscussionboard_postInput = {\n    id: string\n    granted_at: Date | string\n    member_user_id: discussionboard_userCreateNestedOneWithoutDiscussionboard_memberInput\n  }\n\n  export type discussionboard_memberUncheckedCreateWithoutDiscussionboard_postInput = {\n    id: string\n    user_id: string\n    granted_at: Date | string\n  }\n\n  export type discussionboard_memberCreateOrConnectWithoutDiscussionboard_postInput = {\n    where: discussionboard_memberWhereUniqueInput\n    create: XOR<discussionboard_memberCreateWithoutDiscussionboard_postInput, discussionboard_memberUncheckedCreateWithoutDiscussionboard_postInput>\n  }\n\n  export type discussionboard_post_categoryCreateWithoutDiscussionboard_postInput = {\n    id: string\n    name: string\n    description?: string | null\n  }\n\n  export type discussionboard_post_categoryUncheckedCreateWithoutDiscussionboard_postInput = {\n    id: string\n    name: string\n    description?: string | null\n  }\n\n  export type discussionboard_post_categoryCreateOrConnectWithoutDiscussionboard_postInput = {\n    where: discussionboard_post_categoryWhereUniqueInput\n    create: XOR<discussionboard_post_categoryCreateWithoutDiscussionboard_postInput, discussionboard_post_categoryUncheckedCreateWithoutDiscussionboard_postInput>\n  }\n\n  export type discussionboard_post_attachmentCreateWithoutPostInput = {\n    id: string\n    file_url: string\n    file_type: string\n    uploaded_at: Date | string\n  }\n\n  export type discussionboard_post_attachmentUncheckedCreateWithoutPostInput = {\n    id: string\n    file_url: string\n    file_type: string\n    uploaded_at: Date | string\n  }\n\n  export type discussionboard_post_attachmentCreateOrConnectWithoutPostInput = {\n    where: discussionboard_post_attachmentWhereUniqueInput\n    create: XOR<discussionboard_post_attachmentCreateWithoutPostInput, discussionboard_post_attachmentUncheckedCreateWithoutPostInput>\n  }\n\n  export type discussionboard_post_attachmentCreateManyPostInputEnvelope = {\n    data: discussionboard_post_attachmentCreateManyPostInput | discussionboard_post_attachmentCreateManyPostInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_commentsCreateWithoutPostInput = {\n    id: string\n    content: string\n    is_edited: boolean\n    is_deleted: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    author: discussionboard_userCreateNestedOneWithoutDiscussionboard_commentsInput\n    parent_comment?: discussionboard_commentsCreateNestedOneWithoutRecursiveInput\n    recursive?: discussionboard_commentsCreateNestedManyWithoutParent_commentInput\n    discussionboard_likes?: discussionboard_likesCreateNestedManyWithoutCommentInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutCommentInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionCreateNestedManyWithoutModerated_commentInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReviewed_commentInput\n    discussionboard_warning?: discussionboard_warningCreateNestedManyWithoutWarning_commentInput\n    discussionboard_notification?: discussionboard_notificationCreateNestedManyWithoutRelated_commentInput\n  }\n\n  export type discussionboard_commentsUncheckedCreateWithoutPostInput = {\n    id: string\n    author_id: string\n    parent_comment_id?: string | null\n    content: string\n    is_edited: boolean\n    is_deleted: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    recursive?: discussionboard_commentsUncheckedCreateNestedManyWithoutParent_commentInput\n    discussionboard_likes?: discussionboard_likesUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutModerated_commentInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewed_commentInput\n    discussionboard_warning?: discussionboard_warningUncheckedCreateNestedManyWithoutWarning_commentInput\n    discussionboard_notification?: discussionboard_notificationUncheckedCreateNestedManyWithoutRelated_commentInput\n  }\n\n  export type discussionboard_commentsCreateOrConnectWithoutPostInput = {\n    where: discussionboard_commentsWhereUniqueInput\n    create: XOR<discussionboard_commentsCreateWithoutPostInput, discussionboard_commentsUncheckedCreateWithoutPostInput>\n  }\n\n  export type discussionboard_commentsCreateManyPostInputEnvelope = {\n    data: discussionboard_commentsCreateManyPostInput | discussionboard_commentsCreateManyPostInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_likesCreateWithoutPostInput = {\n    id: string\n    created_at: Date | string\n    deleted_at?: Date | string | null\n    user: discussionboard_userCreateNestedOneWithoutDiscussionboard_likesInput\n    comment?: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_likesInput\n  }\n\n  export type discussionboard_likesUncheckedCreateWithoutPostInput = {\n    id: string\n    user_id: string\n    comment_id?: string | null\n    created_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type discussionboard_likesCreateOrConnectWithoutPostInput = {\n    where: discussionboard_likesWhereUniqueInput\n    create: XOR<discussionboard_likesCreateWithoutPostInput, discussionboard_likesUncheckedCreateWithoutPostInput>\n  }\n\n  export type discussionboard_likesCreateManyPostInputEnvelope = {\n    data: discussionboard_likesCreateManyPostInput | discussionboard_likesCreateManyPostInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_reportsCreateWithoutPostInput = {\n    id: string\n    reason_code: string\n    reason_details?: string | null\n    created_at: Date | string\n    deleted_at?: Date | string | null\n    user: discussionboard_userCreateNestedOneWithoutDiscussionboard_reportsInput\n    comment?: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_reportsInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReportInput\n  }\n\n  export type discussionboard_reportsUncheckedCreateWithoutPostInput = {\n    id: string\n    user_id: string\n    comment_id?: string | null\n    reason_code: string\n    reason_details?: string | null\n    created_at: Date | string\n    deleted_at?: Date | string | null\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReportInput\n  }\n\n  export type discussionboard_reportsCreateOrConnectWithoutPostInput = {\n    where: discussionboard_reportsWhereUniqueInput\n    create: XOR<discussionboard_reportsCreateWithoutPostInput, discussionboard_reportsUncheckedCreateWithoutPostInput>\n  }\n\n  export type discussionboard_reportsCreateManyPostInputEnvelope = {\n    data: discussionboard_reportsCreateManyPostInput | discussionboard_reportsCreateManyPostInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_moderation_actionCreateWithoutModerated_postInput = {\n    id: string\n    action_type: string\n    reason: string\n    created_at: Date | string\n    actor: discussionboard_userCreateNestedOneWithoutDiscussionboard_moderation_action_of_actor_idInput\n    target_user: discussionboard_userCreateNestedOneWithoutDiscussionboard_moderation_action_of_target_user_idInput\n    moderated_comment?: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_moderation_actionInput\n  }\n\n  export type discussionboard_moderation_actionUncheckedCreateWithoutModerated_postInput = {\n    id: string\n    actor_id: string\n    target_user_id: string\n    comment_id?: string | null\n    action_type: string\n    reason: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_moderation_actionCreateOrConnectWithoutModerated_postInput = {\n    where: discussionboard_moderation_actionWhereUniqueInput\n    create: XOR<discussionboard_moderation_actionCreateWithoutModerated_postInput, discussionboard_moderation_actionUncheckedCreateWithoutModerated_postInput>\n  }\n\n  export type discussionboard_moderation_actionCreateManyModerated_postInputEnvelope = {\n    data: discussionboard_moderation_actionCreateManyModerated_postInput | discussionboard_moderation_actionCreateManyModerated_postInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_report_reviewCreateWithoutReviewed_postInput = {\n    id: string\n    review_status: string\n    moderator_comment?: string | null\n    reviewed_at: Date | string\n    report: discussionboard_reportsCreateNestedOneWithoutDiscussionboard_report_reviewInput\n    reviewer: discussionboard_userCreateNestedOneWithoutDiscussionboard_report_reviewInput\n    reviewed_comment?: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_report_reviewInput\n  }\n\n  export type discussionboard_report_reviewUncheckedCreateWithoutReviewed_postInput = {\n    id: string\n    report_id: string\n    reviewer_id: string\n    comment_id?: string | null\n    review_status: string\n    moderator_comment?: string | null\n    reviewed_at: Date | string\n  }\n\n  export type discussionboard_report_reviewCreateOrConnectWithoutReviewed_postInput = {\n    where: discussionboard_report_reviewWhereUniqueInput\n    create: XOR<discussionboard_report_reviewCreateWithoutReviewed_postInput, discussionboard_report_reviewUncheckedCreateWithoutReviewed_postInput>\n  }\n\n  export type discussionboard_report_reviewCreateManyReviewed_postInputEnvelope = {\n    data: discussionboard_report_reviewCreateManyReviewed_postInput | discussionboard_report_reviewCreateManyReviewed_postInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_warningCreateWithoutWarning_postInput = {\n    id: string\n    warning_type: string\n    message: string\n    issued_at: Date | string\n    issuer: discussionboard_userCreateNestedOneWithoutDiscussionboard_warning_of_issued_by_idInput\n    recipient: discussionboard_userCreateNestedOneWithoutDiscussionboard_warning_of_issued_to_idInput\n    warning_comment?: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_warningInput\n    discussionboard_ban?: discussionboard_banCreateNestedManyWithoutRelated_warningInput\n  }\n\n  export type discussionboard_warningUncheckedCreateWithoutWarning_postInput = {\n    id: string\n    issued_by_id: string\n    issued_to_id: string\n    comment_id?: string | null\n    warning_type: string\n    message: string\n    issued_at: Date | string\n    discussionboard_ban?: discussionboard_banUncheckedCreateNestedManyWithoutRelated_warningInput\n  }\n\n  export type discussionboard_warningCreateOrConnectWithoutWarning_postInput = {\n    where: discussionboard_warningWhereUniqueInput\n    create: XOR<discussionboard_warningCreateWithoutWarning_postInput, discussionboard_warningUncheckedCreateWithoutWarning_postInput>\n  }\n\n  export type discussionboard_warningCreateManyWarning_postInputEnvelope = {\n    data: discussionboard_warningCreateManyWarning_postInput | discussionboard_warningCreateManyWarning_postInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_notificationCreateWithoutRelated_postInput = {\n    id: string\n    type: string\n    message: string\n    is_read: boolean\n    created_at: Date | string\n    recipient_user: discussionboard_userCreateNestedOneWithoutDiscussionboard_notification_of_recipient_user_idInput\n    related_comment?: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_notificationInput\n    actor_user?: discussionboard_userCreateNestedOneWithoutDiscussionboard_notification_of_actor_user_idInput\n  }\n\n  export type discussionboard_notificationUncheckedCreateWithoutRelated_postInput = {\n    id: string\n    recipient_user_id: string\n    related_comment_id?: string | null\n    actor_user_id?: string | null\n    type: string\n    message: string\n    is_read: boolean\n    created_at: Date | string\n  }\n\n  export type discussionboard_notificationCreateOrConnectWithoutRelated_postInput = {\n    where: discussionboard_notificationWhereUniqueInput\n    create: XOR<discussionboard_notificationCreateWithoutRelated_postInput, discussionboard_notificationUncheckedCreateWithoutRelated_postInput>\n  }\n\n  export type discussionboard_notificationCreateManyRelated_postInputEnvelope = {\n    data: discussionboard_notificationCreateManyRelated_postInput | discussionboard_notificationCreateManyRelated_postInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_memberUpsertWithoutDiscussionboard_postInput = {\n    update: XOR<discussionboard_memberUpdateWithoutDiscussionboard_postInput, discussionboard_memberUncheckedUpdateWithoutDiscussionboard_postInput>\n    create: XOR<discussionboard_memberCreateWithoutDiscussionboard_postInput, discussionboard_memberUncheckedCreateWithoutDiscussionboard_postInput>\n    where?: discussionboard_memberWhereInput\n  }\n\n  export type discussionboard_memberUpdateToOneWithWhereWithoutDiscussionboard_postInput = {\n    where?: discussionboard_memberWhereInput\n    data: XOR<discussionboard_memberUpdateWithoutDiscussionboard_postInput, discussionboard_memberUncheckedUpdateWithoutDiscussionboard_postInput>\n  }\n\n  export type discussionboard_memberUpdateWithoutDiscussionboard_postInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    member_user_id?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_memberNestedInput\n  }\n\n  export type discussionboard_memberUncheckedUpdateWithoutDiscussionboard_postInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_post_categoryUpsertWithoutDiscussionboard_postInput = {\n    update: XOR<discussionboard_post_categoryUpdateWithoutDiscussionboard_postInput, discussionboard_post_categoryUncheckedUpdateWithoutDiscussionboard_postInput>\n    create: XOR<discussionboard_post_categoryCreateWithoutDiscussionboard_postInput, discussionboard_post_categoryUncheckedCreateWithoutDiscussionboard_postInput>\n    where?: discussionboard_post_categoryWhereInput\n  }\n\n  export type discussionboard_post_categoryUpdateToOneWithWhereWithoutDiscussionboard_postInput = {\n    where?: discussionboard_post_categoryWhereInput\n    data: XOR<discussionboard_post_categoryUpdateWithoutDiscussionboard_postInput, discussionboard_post_categoryUncheckedUpdateWithoutDiscussionboard_postInput>\n  }\n\n  export type discussionboard_post_categoryUpdateWithoutDiscussionboard_postInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n  }\n\n  export type discussionboard_post_categoryUncheckedUpdateWithoutDiscussionboard_postInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n  }\n\n  export type discussionboard_post_attachmentUpsertWithWhereUniqueWithoutPostInput = {\n    where: discussionboard_post_attachmentWhereUniqueInput\n    update: XOR<discussionboard_post_attachmentUpdateWithoutPostInput, discussionboard_post_attachmentUncheckedUpdateWithoutPostInput>\n    create: XOR<discussionboard_post_attachmentCreateWithoutPostInput, discussionboard_post_attachmentUncheckedCreateWithoutPostInput>\n  }\n\n  export type discussionboard_post_attachmentUpdateWithWhereUniqueWithoutPostInput = {\n    where: discussionboard_post_attachmentWhereUniqueInput\n    data: XOR<discussionboard_post_attachmentUpdateWithoutPostInput, discussionboard_post_attachmentUncheckedUpdateWithoutPostInput>\n  }\n\n  export type discussionboard_post_attachmentUpdateManyWithWhereWithoutPostInput = {\n    where: discussionboard_post_attachmentScalarWhereInput\n    data: XOR<discussionboard_post_attachmentUpdateManyMutationInput, discussionboard_post_attachmentUncheckedUpdateManyWithoutPostInput>\n  }\n\n  export type discussionboard_post_attachmentScalarWhereInput = {\n    AND?: discussionboard_post_attachmentScalarWhereInput | discussionboard_post_attachmentScalarWhereInput[]\n    OR?: discussionboard_post_attachmentScalarWhereInput[]\n    NOT?: discussionboard_post_attachmentScalarWhereInput | discussionboard_post_attachmentScalarWhereInput[]\n    id?: UuidFilter<\"discussionboard_post_attachment\"> | string\n    post_id?: UuidFilter<\"discussionboard_post_attachment\"> | string\n    file_url?: StringFilter<\"discussionboard_post_attachment\"> | string\n    file_type?: StringFilter<\"discussionboard_post_attachment\"> | string\n    uploaded_at?: DateTimeFilter<\"discussionboard_post_attachment\"> | Date | string\n  }\n\n  export type discussionboard_commentsUpsertWithWhereUniqueWithoutPostInput = {\n    where: discussionboard_commentsWhereUniqueInput\n    update: XOR<discussionboard_commentsUpdateWithoutPostInput, discussionboard_commentsUncheckedUpdateWithoutPostInput>\n    create: XOR<discussionboard_commentsCreateWithoutPostInput, discussionboard_commentsUncheckedCreateWithoutPostInput>\n  }\n\n  export type discussionboard_commentsUpdateWithWhereUniqueWithoutPostInput = {\n    where: discussionboard_commentsWhereUniqueInput\n    data: XOR<discussionboard_commentsUpdateWithoutPostInput, discussionboard_commentsUncheckedUpdateWithoutPostInput>\n  }\n\n  export type discussionboard_commentsUpdateManyWithWhereWithoutPostInput = {\n    where: discussionboard_commentsScalarWhereInput\n    data: XOR<discussionboard_commentsUpdateManyMutationInput, discussionboard_commentsUncheckedUpdateManyWithoutPostInput>\n  }\n\n  export type discussionboard_likesUpsertWithWhereUniqueWithoutPostInput = {\n    where: discussionboard_likesWhereUniqueInput\n    update: XOR<discussionboard_likesUpdateWithoutPostInput, discussionboard_likesUncheckedUpdateWithoutPostInput>\n    create: XOR<discussionboard_likesCreateWithoutPostInput, discussionboard_likesUncheckedCreateWithoutPostInput>\n  }\n\n  export type discussionboard_likesUpdateWithWhereUniqueWithoutPostInput = {\n    where: discussionboard_likesWhereUniqueInput\n    data: XOR<discussionboard_likesUpdateWithoutPostInput, discussionboard_likesUncheckedUpdateWithoutPostInput>\n  }\n\n  export type discussionboard_likesUpdateManyWithWhereWithoutPostInput = {\n    where: discussionboard_likesScalarWhereInput\n    data: XOR<discussionboard_likesUpdateManyMutationInput, discussionboard_likesUncheckedUpdateManyWithoutPostInput>\n  }\n\n  export type discussionboard_reportsUpsertWithWhereUniqueWithoutPostInput = {\n    where: discussionboard_reportsWhereUniqueInput\n    update: XOR<discussionboard_reportsUpdateWithoutPostInput, discussionboard_reportsUncheckedUpdateWithoutPostInput>\n    create: XOR<discussionboard_reportsCreateWithoutPostInput, discussionboard_reportsUncheckedCreateWithoutPostInput>\n  }\n\n  export type discussionboard_reportsUpdateWithWhereUniqueWithoutPostInput = {\n    where: discussionboard_reportsWhereUniqueInput\n    data: XOR<discussionboard_reportsUpdateWithoutPostInput, discussionboard_reportsUncheckedUpdateWithoutPostInput>\n  }\n\n  export type discussionboard_reportsUpdateManyWithWhereWithoutPostInput = {\n    where: discussionboard_reportsScalarWhereInput\n    data: XOR<discussionboard_reportsUpdateManyMutationInput, discussionboard_reportsUncheckedUpdateManyWithoutPostInput>\n  }\n\n  export type discussionboard_moderation_actionUpsertWithWhereUniqueWithoutModerated_postInput = {\n    where: discussionboard_moderation_actionWhereUniqueInput\n    update: XOR<discussionboard_moderation_actionUpdateWithoutModerated_postInput, discussionboard_moderation_actionUncheckedUpdateWithoutModerated_postInput>\n    create: XOR<discussionboard_moderation_actionCreateWithoutModerated_postInput, discussionboard_moderation_actionUncheckedCreateWithoutModerated_postInput>\n  }\n\n  export type discussionboard_moderation_actionUpdateWithWhereUniqueWithoutModerated_postInput = {\n    where: discussionboard_moderation_actionWhereUniqueInput\n    data: XOR<discussionboard_moderation_actionUpdateWithoutModerated_postInput, discussionboard_moderation_actionUncheckedUpdateWithoutModerated_postInput>\n  }\n\n  export type discussionboard_moderation_actionUpdateManyWithWhereWithoutModerated_postInput = {\n    where: discussionboard_moderation_actionScalarWhereInput\n    data: XOR<discussionboard_moderation_actionUpdateManyMutationInput, discussionboard_moderation_actionUncheckedUpdateManyWithoutModerated_postInput>\n  }\n\n  export type discussionboard_report_reviewUpsertWithWhereUniqueWithoutReviewed_postInput = {\n    where: discussionboard_report_reviewWhereUniqueInput\n    update: XOR<discussionboard_report_reviewUpdateWithoutReviewed_postInput, discussionboard_report_reviewUncheckedUpdateWithoutReviewed_postInput>\n    create: XOR<discussionboard_report_reviewCreateWithoutReviewed_postInput, discussionboard_report_reviewUncheckedCreateWithoutReviewed_postInput>\n  }\n\n  export type discussionboard_report_reviewUpdateWithWhereUniqueWithoutReviewed_postInput = {\n    where: discussionboard_report_reviewWhereUniqueInput\n    data: XOR<discussionboard_report_reviewUpdateWithoutReviewed_postInput, discussionboard_report_reviewUncheckedUpdateWithoutReviewed_postInput>\n  }\n\n  export type discussionboard_report_reviewUpdateManyWithWhereWithoutReviewed_postInput = {\n    where: discussionboard_report_reviewScalarWhereInput\n    data: XOR<discussionboard_report_reviewUpdateManyMutationInput, discussionboard_report_reviewUncheckedUpdateManyWithoutReviewed_postInput>\n  }\n\n  export type discussionboard_warningUpsertWithWhereUniqueWithoutWarning_postInput = {\n    where: discussionboard_warningWhereUniqueInput\n    update: XOR<discussionboard_warningUpdateWithoutWarning_postInput, discussionboard_warningUncheckedUpdateWithoutWarning_postInput>\n    create: XOR<discussionboard_warningCreateWithoutWarning_postInput, discussionboard_warningUncheckedCreateWithoutWarning_postInput>\n  }\n\n  export type discussionboard_warningUpdateWithWhereUniqueWithoutWarning_postInput = {\n    where: discussionboard_warningWhereUniqueInput\n    data: XOR<discussionboard_warningUpdateWithoutWarning_postInput, discussionboard_warningUncheckedUpdateWithoutWarning_postInput>\n  }\n\n  export type discussionboard_warningUpdateManyWithWhereWithoutWarning_postInput = {\n    where: discussionboard_warningScalarWhereInput\n    data: XOR<discussionboard_warningUpdateManyMutationInput, discussionboard_warningUncheckedUpdateManyWithoutWarning_postInput>\n  }\n\n  export type discussionboard_notificationUpsertWithWhereUniqueWithoutRelated_postInput = {\n    where: discussionboard_notificationWhereUniqueInput\n    update: XOR<discussionboard_notificationUpdateWithoutRelated_postInput, discussionboard_notificationUncheckedUpdateWithoutRelated_postInput>\n    create: XOR<discussionboard_notificationCreateWithoutRelated_postInput, discussionboard_notificationUncheckedCreateWithoutRelated_postInput>\n  }\n\n  export type discussionboard_notificationUpdateWithWhereUniqueWithoutRelated_postInput = {\n    where: discussionboard_notificationWhereUniqueInput\n    data: XOR<discussionboard_notificationUpdateWithoutRelated_postInput, discussionboard_notificationUncheckedUpdateWithoutRelated_postInput>\n  }\n\n  export type discussionboard_notificationUpdateManyWithWhereWithoutRelated_postInput = {\n    where: discussionboard_notificationScalarWhereInput\n    data: XOR<discussionboard_notificationUpdateManyMutationInput, discussionboard_notificationUncheckedUpdateManyWithoutRelated_postInput>\n  }\n\n  export type discussionboard_postCreateWithoutCategoryInput = {\n    id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    member: discussionboard_memberCreateNestedOneWithoutDiscussionboard_postInput\n    discussionboard_post_attachment?: discussionboard_post_attachmentCreateNestedManyWithoutPostInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutPostInput\n    discussionboard_likes?: discussionboard_likesCreateNestedManyWithoutPostInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutPostInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionCreateNestedManyWithoutModerated_postInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReviewed_postInput\n    discussionboard_warning?: discussionboard_warningCreateNestedManyWithoutWarning_postInput\n    discussionboard_notification?: discussionboard_notificationCreateNestedManyWithoutRelated_postInput\n  }\n\n  export type discussionboard_postUncheckedCreateWithoutCategoryInput = {\n    id: string\n    author_member_id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussionboard_post_attachment?: discussionboard_post_attachmentUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_likes?: discussionboard_likesUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutModerated_postInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewed_postInput\n    discussionboard_warning?: discussionboard_warningUncheckedCreateNestedManyWithoutWarning_postInput\n    discussionboard_notification?: discussionboard_notificationUncheckedCreateNestedManyWithoutRelated_postInput\n  }\n\n  export type discussionboard_postCreateOrConnectWithoutCategoryInput = {\n    where: discussionboard_postWhereUniqueInput\n    create: XOR<discussionboard_postCreateWithoutCategoryInput, discussionboard_postUncheckedCreateWithoutCategoryInput>\n  }\n\n  export type discussionboard_postCreateManyCategoryInputEnvelope = {\n    data: discussionboard_postCreateManyCategoryInput | discussionboard_postCreateManyCategoryInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_postUpsertWithWhereUniqueWithoutCategoryInput = {\n    where: discussionboard_postWhereUniqueInput\n    update: XOR<discussionboard_postUpdateWithoutCategoryInput, discussionboard_postUncheckedUpdateWithoutCategoryInput>\n    create: XOR<discussionboard_postCreateWithoutCategoryInput, discussionboard_postUncheckedCreateWithoutCategoryInput>\n  }\n\n  export type discussionboard_postUpdateWithWhereUniqueWithoutCategoryInput = {\n    where: discussionboard_postWhereUniqueInput\n    data: XOR<discussionboard_postUpdateWithoutCategoryInput, discussionboard_postUncheckedUpdateWithoutCategoryInput>\n  }\n\n  export type discussionboard_postUpdateManyWithWhereWithoutCategoryInput = {\n    where: discussionboard_postScalarWhereInput\n    data: XOR<discussionboard_postUpdateManyMutationInput, discussionboard_postUncheckedUpdateManyWithoutCategoryInput>\n  }\n\n  export type discussionboard_postCreateWithoutDiscussionboard_post_attachmentInput = {\n    id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    member: discussionboard_memberCreateNestedOneWithoutDiscussionboard_postInput\n    category: discussionboard_post_categoryCreateNestedOneWithoutDiscussionboard_postInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutPostInput\n    discussionboard_likes?: discussionboard_likesCreateNestedManyWithoutPostInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutPostInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionCreateNestedManyWithoutModerated_postInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReviewed_postInput\n    discussionboard_warning?: discussionboard_warningCreateNestedManyWithoutWarning_postInput\n    discussionboard_notification?: discussionboard_notificationCreateNestedManyWithoutRelated_postInput\n  }\n\n  export type discussionboard_postUncheckedCreateWithoutDiscussionboard_post_attachmentInput = {\n    id: string\n    author_member_id: string\n    category_id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_likes?: discussionboard_likesUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutModerated_postInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewed_postInput\n    discussionboard_warning?: discussionboard_warningUncheckedCreateNestedManyWithoutWarning_postInput\n    discussionboard_notification?: discussionboard_notificationUncheckedCreateNestedManyWithoutRelated_postInput\n  }\n\n  export type discussionboard_postCreateOrConnectWithoutDiscussionboard_post_attachmentInput = {\n    where: discussionboard_postWhereUniqueInput\n    create: XOR<discussionboard_postCreateWithoutDiscussionboard_post_attachmentInput, discussionboard_postUncheckedCreateWithoutDiscussionboard_post_attachmentInput>\n  }\n\n  export type discussionboard_postUpsertWithoutDiscussionboard_post_attachmentInput = {\n    update: XOR<discussionboard_postUpdateWithoutDiscussionboard_post_attachmentInput, discussionboard_postUncheckedUpdateWithoutDiscussionboard_post_attachmentInput>\n    create: XOR<discussionboard_postCreateWithoutDiscussionboard_post_attachmentInput, discussionboard_postUncheckedCreateWithoutDiscussionboard_post_attachmentInput>\n    where?: discussionboard_postWhereInput\n  }\n\n  export type discussionboard_postUpdateToOneWithWhereWithoutDiscussionboard_post_attachmentInput = {\n    where?: discussionboard_postWhereInput\n    data: XOR<discussionboard_postUpdateWithoutDiscussionboard_post_attachmentInput, discussionboard_postUncheckedUpdateWithoutDiscussionboard_post_attachmentInput>\n  }\n\n  export type discussionboard_postUpdateWithoutDiscussionboard_post_attachmentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    member?: discussionboard_memberUpdateOneRequiredWithoutDiscussionboard_postNestedInput\n    category?: discussionboard_post_categoryUpdateOneRequiredWithoutDiscussionboard_postNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutPostNestedInput\n    discussionboard_likes?: discussionboard_likesUpdateManyWithoutPostNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutPostNestedInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUpdateManyWithoutModerated_postNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReviewed_postNestedInput\n    discussionboard_warning?: discussionboard_warningUpdateManyWithoutWarning_postNestedInput\n    discussionboard_notification?: discussionboard_notificationUpdateManyWithoutRelated_postNestedInput\n  }\n\n  export type discussionboard_postUncheckedUpdateWithoutDiscussionboard_post_attachmentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    author_member_id?: StringFieldUpdateOperationsInput | string\n    category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_likes?: discussionboard_likesUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUncheckedUpdateManyWithoutModerated_postNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReviewed_postNestedInput\n    discussionboard_warning?: discussionboard_warningUncheckedUpdateManyWithoutWarning_postNestedInput\n    discussionboard_notification?: discussionboard_notificationUncheckedUpdateManyWithoutRelated_postNestedInput\n  }\n\n  export type discussionboard_postCreateWithoutDiscussionboard_commentsInput = {\n    id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    member: discussionboard_memberCreateNestedOneWithoutDiscussionboard_postInput\n    category: discussionboard_post_categoryCreateNestedOneWithoutDiscussionboard_postInput\n    discussionboard_post_attachment?: discussionboard_post_attachmentCreateNestedManyWithoutPostInput\n    discussionboard_likes?: discussionboard_likesCreateNestedManyWithoutPostInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutPostInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionCreateNestedManyWithoutModerated_postInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReviewed_postInput\n    discussionboard_warning?: discussionboard_warningCreateNestedManyWithoutWarning_postInput\n    discussionboard_notification?: discussionboard_notificationCreateNestedManyWithoutRelated_postInput\n  }\n\n  export type discussionboard_postUncheckedCreateWithoutDiscussionboard_commentsInput = {\n    id: string\n    author_member_id: string\n    category_id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussionboard_post_attachment?: discussionboard_post_attachmentUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_likes?: discussionboard_likesUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutModerated_postInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewed_postInput\n    discussionboard_warning?: discussionboard_warningUncheckedCreateNestedManyWithoutWarning_postInput\n    discussionboard_notification?: discussionboard_notificationUncheckedCreateNestedManyWithoutRelated_postInput\n  }\n\n  export type discussionboard_postCreateOrConnectWithoutDiscussionboard_commentsInput = {\n    where: discussionboard_postWhereUniqueInput\n    create: XOR<discussionboard_postCreateWithoutDiscussionboard_commentsInput, discussionboard_postUncheckedCreateWithoutDiscussionboard_commentsInput>\n  }\n\n  export type discussionboard_userCreateWithoutDiscussionboard_commentsInput = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_user_profile?: discussionboard_user_profileCreateNestedOneWithoutUser_profile_user_idInput\n    discussionboard_member?: discussionboard_memberCreateNestedOneWithoutMember_user_idInput\n    discussionboard_moderator?: discussionboard_moderatorCreateNestedOneWithoutModerator_user_idInput\n    discussionboard_admin?: discussionboard_adminCreateNestedOneWithoutAdmin_user_idInput\n    discussionboard_likes?: discussionboard_likesCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutUserInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionCreateNestedManyWithoutActorInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionCreateNestedManyWithoutTarget_userInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReviewerInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningCreateNestedManyWithoutIssuerInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningCreateNestedManyWithoutRecipientInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banCreateNestedManyWithoutBanned_userInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banCreateNestedManyWithoutBan_actorInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationCreateNestedManyWithoutRecipient_userInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationCreateNestedManyWithoutActor_userInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceCreateNestedOneWithoutUserInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logCreateNestedManyWithoutFk_audit_actor_userInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logCreateNestedManyWithoutFk_audit_target_userInput\n  }\n\n  export type discussionboard_userUncheckedCreateWithoutDiscussionboard_commentsInput = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUncheckedCreateNestedOneWithoutUser_profile_user_idInput\n    discussionboard_member?: discussionboard_memberUncheckedCreateNestedOneWithoutMember_user_idInput\n    discussionboard_moderator?: discussionboard_moderatorUncheckedCreateNestedOneWithoutModerator_user_idInput\n    discussionboard_admin?: discussionboard_adminUncheckedCreateNestedOneWithoutAdmin_user_idInput\n    discussionboard_likes?: discussionboard_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutActorInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutTarget_userInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewerInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUncheckedCreateNestedManyWithoutIssuerInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUncheckedCreateNestedManyWithoutRecipientInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUncheckedCreateNestedManyWithoutBanned_userInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUncheckedCreateNestedManyWithoutBan_actorInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUncheckedCreateNestedManyWithoutRecipient_userInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUncheckedCreateNestedManyWithoutActor_userInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUncheckedCreateNestedOneWithoutUserInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUncheckedCreateNestedManyWithoutFk_audit_actor_userInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUncheckedCreateNestedManyWithoutFk_audit_target_userInput\n  }\n\n  export type discussionboard_userCreateOrConnectWithoutDiscussionboard_commentsInput = {\n    where: discussionboard_userWhereUniqueInput\n    create: XOR<discussionboard_userCreateWithoutDiscussionboard_commentsInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_commentsInput>\n  }\n\n  export type discussionboard_commentsCreateWithoutRecursiveInput = {\n    id: string\n    content: string\n    is_edited: boolean\n    is_deleted: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    post: discussionboard_postCreateNestedOneWithoutDiscussionboard_commentsInput\n    author: discussionboard_userCreateNestedOneWithoutDiscussionboard_commentsInput\n    parent_comment?: discussionboard_commentsCreateNestedOneWithoutRecursiveInput\n    discussionboard_likes?: discussionboard_likesCreateNestedManyWithoutCommentInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutCommentInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionCreateNestedManyWithoutModerated_commentInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReviewed_commentInput\n    discussionboard_warning?: discussionboard_warningCreateNestedManyWithoutWarning_commentInput\n    discussionboard_notification?: discussionboard_notificationCreateNestedManyWithoutRelated_commentInput\n  }\n\n  export type discussionboard_commentsUncheckedCreateWithoutRecursiveInput = {\n    id: string\n    post_id: string\n    author_id: string\n    parent_comment_id?: string | null\n    content: string\n    is_edited: boolean\n    is_deleted: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_likes?: discussionboard_likesUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutModerated_commentInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewed_commentInput\n    discussionboard_warning?: discussionboard_warningUncheckedCreateNestedManyWithoutWarning_commentInput\n    discussionboard_notification?: discussionboard_notificationUncheckedCreateNestedManyWithoutRelated_commentInput\n  }\n\n  export type discussionboard_commentsCreateOrConnectWithoutRecursiveInput = {\n    where: discussionboard_commentsWhereUniqueInput\n    create: XOR<discussionboard_commentsCreateWithoutRecursiveInput, discussionboard_commentsUncheckedCreateWithoutRecursiveInput>\n  }\n\n  export type discussionboard_commentsCreateWithoutParent_commentInput = {\n    id: string\n    content: string\n    is_edited: boolean\n    is_deleted: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    post: discussionboard_postCreateNestedOneWithoutDiscussionboard_commentsInput\n    author: discussionboard_userCreateNestedOneWithoutDiscussionboard_commentsInput\n    recursive?: discussionboard_commentsCreateNestedManyWithoutParent_commentInput\n    discussionboard_likes?: discussionboard_likesCreateNestedManyWithoutCommentInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutCommentInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionCreateNestedManyWithoutModerated_commentInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReviewed_commentInput\n    discussionboard_warning?: discussionboard_warningCreateNestedManyWithoutWarning_commentInput\n    discussionboard_notification?: discussionboard_notificationCreateNestedManyWithoutRelated_commentInput\n  }\n\n  export type discussionboard_commentsUncheckedCreateWithoutParent_commentInput = {\n    id: string\n    post_id: string\n    author_id: string\n    content: string\n    is_edited: boolean\n    is_deleted: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    recursive?: discussionboard_commentsUncheckedCreateNestedManyWithoutParent_commentInput\n    discussionboard_likes?: discussionboard_likesUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutModerated_commentInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewed_commentInput\n    discussionboard_warning?: discussionboard_warningUncheckedCreateNestedManyWithoutWarning_commentInput\n    discussionboard_notification?: discussionboard_notificationUncheckedCreateNestedManyWithoutRelated_commentInput\n  }\n\n  export type discussionboard_commentsCreateOrConnectWithoutParent_commentInput = {\n    where: discussionboard_commentsWhereUniqueInput\n    create: XOR<discussionboard_commentsCreateWithoutParent_commentInput, discussionboard_commentsUncheckedCreateWithoutParent_commentInput>\n  }\n\n  export type discussionboard_commentsCreateManyParent_commentInputEnvelope = {\n    data: discussionboard_commentsCreateManyParent_commentInput | discussionboard_commentsCreateManyParent_commentInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_likesCreateWithoutCommentInput = {\n    id: string\n    created_at: Date | string\n    deleted_at?: Date | string | null\n    user: discussionboard_userCreateNestedOneWithoutDiscussionboard_likesInput\n    post?: discussionboard_postCreateNestedOneWithoutDiscussionboard_likesInput\n  }\n\n  export type discussionboard_likesUncheckedCreateWithoutCommentInput = {\n    id: string\n    user_id: string\n    post_id?: string | null\n    created_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type discussionboard_likesCreateOrConnectWithoutCommentInput = {\n    where: discussionboard_likesWhereUniqueInput\n    create: XOR<discussionboard_likesCreateWithoutCommentInput, discussionboard_likesUncheckedCreateWithoutCommentInput>\n  }\n\n  export type discussionboard_likesCreateManyCommentInputEnvelope = {\n    data: discussionboard_likesCreateManyCommentInput | discussionboard_likesCreateManyCommentInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_reportsCreateWithoutCommentInput = {\n    id: string\n    reason_code: string\n    reason_details?: string | null\n    created_at: Date | string\n    deleted_at?: Date | string | null\n    user: discussionboard_userCreateNestedOneWithoutDiscussionboard_reportsInput\n    post?: discussionboard_postCreateNestedOneWithoutDiscussionboard_reportsInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReportInput\n  }\n\n  export type discussionboard_reportsUncheckedCreateWithoutCommentInput = {\n    id: string\n    user_id: string\n    post_id?: string | null\n    reason_code: string\n    reason_details?: string | null\n    created_at: Date | string\n    deleted_at?: Date | string | null\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReportInput\n  }\n\n  export type discussionboard_reportsCreateOrConnectWithoutCommentInput = {\n    where: discussionboard_reportsWhereUniqueInput\n    create: XOR<discussionboard_reportsCreateWithoutCommentInput, discussionboard_reportsUncheckedCreateWithoutCommentInput>\n  }\n\n  export type discussionboard_reportsCreateManyCommentInputEnvelope = {\n    data: discussionboard_reportsCreateManyCommentInput | discussionboard_reportsCreateManyCommentInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_moderation_actionCreateWithoutModerated_commentInput = {\n    id: string\n    action_type: string\n    reason: string\n    created_at: Date | string\n    actor: discussionboard_userCreateNestedOneWithoutDiscussionboard_moderation_action_of_actor_idInput\n    target_user: discussionboard_userCreateNestedOneWithoutDiscussionboard_moderation_action_of_target_user_idInput\n    moderated_post?: discussionboard_postCreateNestedOneWithoutDiscussionboard_moderation_actionInput\n  }\n\n  export type discussionboard_moderation_actionUncheckedCreateWithoutModerated_commentInput = {\n    id: string\n    actor_id: string\n    target_user_id: string\n    post_id?: string | null\n    action_type: string\n    reason: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_moderation_actionCreateOrConnectWithoutModerated_commentInput = {\n    where: discussionboard_moderation_actionWhereUniqueInput\n    create: XOR<discussionboard_moderation_actionCreateWithoutModerated_commentInput, discussionboard_moderation_actionUncheckedCreateWithoutModerated_commentInput>\n  }\n\n  export type discussionboard_moderation_actionCreateManyModerated_commentInputEnvelope = {\n    data: discussionboard_moderation_actionCreateManyModerated_commentInput | discussionboard_moderation_actionCreateManyModerated_commentInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_report_reviewCreateWithoutReviewed_commentInput = {\n    id: string\n    review_status: string\n    moderator_comment?: string | null\n    reviewed_at: Date | string\n    report: discussionboard_reportsCreateNestedOneWithoutDiscussionboard_report_reviewInput\n    reviewer: discussionboard_userCreateNestedOneWithoutDiscussionboard_report_reviewInput\n    reviewed_post?: discussionboard_postCreateNestedOneWithoutDiscussionboard_report_reviewInput\n  }\n\n  export type discussionboard_report_reviewUncheckedCreateWithoutReviewed_commentInput = {\n    id: string\n    report_id: string\n    reviewer_id: string\n    post_id?: string | null\n    review_status: string\n    moderator_comment?: string | null\n    reviewed_at: Date | string\n  }\n\n  export type discussionboard_report_reviewCreateOrConnectWithoutReviewed_commentInput = {\n    where: discussionboard_report_reviewWhereUniqueInput\n    create: XOR<discussionboard_report_reviewCreateWithoutReviewed_commentInput, discussionboard_report_reviewUncheckedCreateWithoutReviewed_commentInput>\n  }\n\n  export type discussionboard_report_reviewCreateManyReviewed_commentInputEnvelope = {\n    data: discussionboard_report_reviewCreateManyReviewed_commentInput | discussionboard_report_reviewCreateManyReviewed_commentInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_warningCreateWithoutWarning_commentInput = {\n    id: string\n    warning_type: string\n    message: string\n    issued_at: Date | string\n    issuer: discussionboard_userCreateNestedOneWithoutDiscussionboard_warning_of_issued_by_idInput\n    recipient: discussionboard_userCreateNestedOneWithoutDiscussionboard_warning_of_issued_to_idInput\n    warning_post?: discussionboard_postCreateNestedOneWithoutDiscussionboard_warningInput\n    discussionboard_ban?: discussionboard_banCreateNestedManyWithoutRelated_warningInput\n  }\n\n  export type discussionboard_warningUncheckedCreateWithoutWarning_commentInput = {\n    id: string\n    issued_by_id: string\n    issued_to_id: string\n    post_id?: string | null\n    warning_type: string\n    message: string\n    issued_at: Date | string\n    discussionboard_ban?: discussionboard_banUncheckedCreateNestedManyWithoutRelated_warningInput\n  }\n\n  export type discussionboard_warningCreateOrConnectWithoutWarning_commentInput = {\n    where: discussionboard_warningWhereUniqueInput\n    create: XOR<discussionboard_warningCreateWithoutWarning_commentInput, discussionboard_warningUncheckedCreateWithoutWarning_commentInput>\n  }\n\n  export type discussionboard_warningCreateManyWarning_commentInputEnvelope = {\n    data: discussionboard_warningCreateManyWarning_commentInput | discussionboard_warningCreateManyWarning_commentInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_notificationCreateWithoutRelated_commentInput = {\n    id: string\n    type: string\n    message: string\n    is_read: boolean\n    created_at: Date | string\n    recipient_user: discussionboard_userCreateNestedOneWithoutDiscussionboard_notification_of_recipient_user_idInput\n    related_post?: discussionboard_postCreateNestedOneWithoutDiscussionboard_notificationInput\n    actor_user?: discussionboard_userCreateNestedOneWithoutDiscussionboard_notification_of_actor_user_idInput\n  }\n\n  export type discussionboard_notificationUncheckedCreateWithoutRelated_commentInput = {\n    id: string\n    recipient_user_id: string\n    related_post_id?: string | null\n    actor_user_id?: string | null\n    type: string\n    message: string\n    is_read: boolean\n    created_at: Date | string\n  }\n\n  export type discussionboard_notificationCreateOrConnectWithoutRelated_commentInput = {\n    where: discussionboard_notificationWhereUniqueInput\n    create: XOR<discussionboard_notificationCreateWithoutRelated_commentInput, discussionboard_notificationUncheckedCreateWithoutRelated_commentInput>\n  }\n\n  export type discussionboard_notificationCreateManyRelated_commentInputEnvelope = {\n    data: discussionboard_notificationCreateManyRelated_commentInput | discussionboard_notificationCreateManyRelated_commentInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_postUpsertWithoutDiscussionboard_commentsInput = {\n    update: XOR<discussionboard_postUpdateWithoutDiscussionboard_commentsInput, discussionboard_postUncheckedUpdateWithoutDiscussionboard_commentsInput>\n    create: XOR<discussionboard_postCreateWithoutDiscussionboard_commentsInput, discussionboard_postUncheckedCreateWithoutDiscussionboard_commentsInput>\n    where?: discussionboard_postWhereInput\n  }\n\n  export type discussionboard_postUpdateToOneWithWhereWithoutDiscussionboard_commentsInput = {\n    where?: discussionboard_postWhereInput\n    data: XOR<discussionboard_postUpdateWithoutDiscussionboard_commentsInput, discussionboard_postUncheckedUpdateWithoutDiscussionboard_commentsInput>\n  }\n\n  export type discussionboard_postUpdateWithoutDiscussionboard_commentsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    member?: discussionboard_memberUpdateOneRequiredWithoutDiscussionboard_postNestedInput\n    category?: discussionboard_post_categoryUpdateOneRequiredWithoutDiscussionboard_postNestedInput\n    discussionboard_post_attachment?: discussionboard_post_attachmentUpdateManyWithoutPostNestedInput\n    discussionboard_likes?: discussionboard_likesUpdateManyWithoutPostNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutPostNestedInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUpdateManyWithoutModerated_postNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReviewed_postNestedInput\n    discussionboard_warning?: discussionboard_warningUpdateManyWithoutWarning_postNestedInput\n    discussionboard_notification?: discussionboard_notificationUpdateManyWithoutRelated_postNestedInput\n  }\n\n  export type discussionboard_postUncheckedUpdateWithoutDiscussionboard_commentsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    author_member_id?: StringFieldUpdateOperationsInput | string\n    category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_post_attachment?: discussionboard_post_attachmentUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_likes?: discussionboard_likesUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUncheckedUpdateManyWithoutModerated_postNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReviewed_postNestedInput\n    discussionboard_warning?: discussionboard_warningUncheckedUpdateManyWithoutWarning_postNestedInput\n    discussionboard_notification?: discussionboard_notificationUncheckedUpdateManyWithoutRelated_postNestedInput\n  }\n\n  export type discussionboard_userUpsertWithoutDiscussionboard_commentsInput = {\n    update: XOR<discussionboard_userUpdateWithoutDiscussionboard_commentsInput, discussionboard_userUncheckedUpdateWithoutDiscussionboard_commentsInput>\n    create: XOR<discussionboard_userCreateWithoutDiscussionboard_commentsInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_commentsInput>\n    where?: discussionboard_userWhereInput\n  }\n\n  export type discussionboard_userUpdateToOneWithWhereWithoutDiscussionboard_commentsInput = {\n    where?: discussionboard_userWhereInput\n    data: XOR<discussionboard_userUpdateWithoutDiscussionboard_commentsInput, discussionboard_userUncheckedUpdateWithoutDiscussionboard_commentsInput>\n  }\n\n  export type discussionboard_userUpdateWithoutDiscussionboard_commentsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUpdateOneWithoutUser_profile_user_idNestedInput\n    discussionboard_member?: discussionboard_memberUpdateOneWithoutMember_user_idNestedInput\n    discussionboard_moderator?: discussionboard_moderatorUpdateOneWithoutModerator_user_idNestedInput\n    discussionboard_admin?: discussionboard_adminUpdateOneWithoutAdmin_user_idNestedInput\n    discussionboard_likes?: discussionboard_likesUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUpdateManyWithoutActorNestedInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUpdateManyWithoutTarget_userNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReviewerNestedInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUpdateManyWithoutIssuerNestedInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUpdateManyWithoutRecipientNestedInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUpdateManyWithoutBanned_userNestedInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUpdateManyWithoutBan_actorNestedInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUpdateManyWithoutRecipient_userNestedInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUpdateManyWithoutActor_userNestedInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUpdateOneWithoutUserNestedInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUpdateManyWithoutFk_audit_actor_userNestedInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUpdateManyWithoutFk_audit_target_userNestedInput\n  }\n\n  export type discussionboard_userUncheckedUpdateWithoutDiscussionboard_commentsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUncheckedUpdateOneWithoutUser_profile_user_idNestedInput\n    discussionboard_member?: discussionboard_memberUncheckedUpdateOneWithoutMember_user_idNestedInput\n    discussionboard_moderator?: discussionboard_moderatorUncheckedUpdateOneWithoutModerator_user_idNestedInput\n    discussionboard_admin?: discussionboard_adminUncheckedUpdateOneWithoutAdmin_user_idNestedInput\n    discussionboard_likes?: discussionboard_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUncheckedUpdateManyWithoutActorNestedInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUncheckedUpdateManyWithoutTarget_userNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReviewerNestedInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUncheckedUpdateManyWithoutIssuerNestedInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUncheckedUpdateManyWithoutRecipientNestedInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUncheckedUpdateManyWithoutBanned_userNestedInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUncheckedUpdateManyWithoutBan_actorNestedInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUncheckedUpdateManyWithoutRecipient_userNestedInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUncheckedUpdateManyWithoutActor_userNestedInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUncheckedUpdateOneWithoutUserNestedInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_actor_userNestedInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_target_userNestedInput\n  }\n\n  export type discussionboard_commentsUpsertWithoutRecursiveInput = {\n    update: XOR<discussionboard_commentsUpdateWithoutRecursiveInput, discussionboard_commentsUncheckedUpdateWithoutRecursiveInput>\n    create: XOR<discussionboard_commentsCreateWithoutRecursiveInput, discussionboard_commentsUncheckedCreateWithoutRecursiveInput>\n    where?: discussionboard_commentsWhereInput\n  }\n\n  export type discussionboard_commentsUpdateToOneWithWhereWithoutRecursiveInput = {\n    where?: discussionboard_commentsWhereInput\n    data: XOR<discussionboard_commentsUpdateWithoutRecursiveInput, discussionboard_commentsUncheckedUpdateWithoutRecursiveInput>\n  }\n\n  export type discussionboard_commentsUpdateWithoutRecursiveInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    is_edited?: BoolFieldUpdateOperationsInput | boolean\n    is_deleted?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    post?: discussionboard_postUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput\n    author?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput\n    parent_comment?: discussionboard_commentsUpdateOneWithoutRecursiveNestedInput\n    discussionboard_likes?: discussionboard_likesUpdateManyWithoutCommentNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutCommentNestedInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUpdateManyWithoutModerated_commentNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReviewed_commentNestedInput\n    discussionboard_warning?: discussionboard_warningUpdateManyWithoutWarning_commentNestedInput\n    discussionboard_notification?: discussionboard_notificationUpdateManyWithoutRelated_commentNestedInput\n  }\n\n  export type discussionboard_commentsUncheckedUpdateWithoutRecursiveInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    author_id?: StringFieldUpdateOperationsInput | string\n    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    content?: StringFieldUpdateOperationsInput | string\n    is_edited?: BoolFieldUpdateOperationsInput | boolean\n    is_deleted?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_likes?: discussionboard_likesUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUncheckedUpdateManyWithoutModerated_commentNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReviewed_commentNestedInput\n    discussionboard_warning?: discussionboard_warningUncheckedUpdateManyWithoutWarning_commentNestedInput\n    discussionboard_notification?: discussionboard_notificationUncheckedUpdateManyWithoutRelated_commentNestedInput\n  }\n\n  export type discussionboard_commentsUpsertWithWhereUniqueWithoutParent_commentInput = {\n    where: discussionboard_commentsWhereUniqueInput\n    update: XOR<discussionboard_commentsUpdateWithoutParent_commentInput, discussionboard_commentsUncheckedUpdateWithoutParent_commentInput>\n    create: XOR<discussionboard_commentsCreateWithoutParent_commentInput, discussionboard_commentsUncheckedCreateWithoutParent_commentInput>\n  }\n\n  export type discussionboard_commentsUpdateWithWhereUniqueWithoutParent_commentInput = {\n    where: discussionboard_commentsWhereUniqueInput\n    data: XOR<discussionboard_commentsUpdateWithoutParent_commentInput, discussionboard_commentsUncheckedUpdateWithoutParent_commentInput>\n  }\n\n  export type discussionboard_commentsUpdateManyWithWhereWithoutParent_commentInput = {\n    where: discussionboard_commentsScalarWhereInput\n    data: XOR<discussionboard_commentsUpdateManyMutationInput, discussionboard_commentsUncheckedUpdateManyWithoutParent_commentInput>\n  }\n\n  export type discussionboard_likesUpsertWithWhereUniqueWithoutCommentInput = {\n    where: discussionboard_likesWhereUniqueInput\n    update: XOR<discussionboard_likesUpdateWithoutCommentInput, discussionboard_likesUncheckedUpdateWithoutCommentInput>\n    create: XOR<discussionboard_likesCreateWithoutCommentInput, discussionboard_likesUncheckedCreateWithoutCommentInput>\n  }\n\n  export type discussionboard_likesUpdateWithWhereUniqueWithoutCommentInput = {\n    where: discussionboard_likesWhereUniqueInput\n    data: XOR<discussionboard_likesUpdateWithoutCommentInput, discussionboard_likesUncheckedUpdateWithoutCommentInput>\n  }\n\n  export type discussionboard_likesUpdateManyWithWhereWithoutCommentInput = {\n    where: discussionboard_likesScalarWhereInput\n    data: XOR<discussionboard_likesUpdateManyMutationInput, discussionboard_likesUncheckedUpdateManyWithoutCommentInput>\n  }\n\n  export type discussionboard_reportsUpsertWithWhereUniqueWithoutCommentInput = {\n    where: discussionboard_reportsWhereUniqueInput\n    update: XOR<discussionboard_reportsUpdateWithoutCommentInput, discussionboard_reportsUncheckedUpdateWithoutCommentInput>\n    create: XOR<discussionboard_reportsCreateWithoutCommentInput, discussionboard_reportsUncheckedCreateWithoutCommentInput>\n  }\n\n  export type discussionboard_reportsUpdateWithWhereUniqueWithoutCommentInput = {\n    where: discussionboard_reportsWhereUniqueInput\n    data: XOR<discussionboard_reportsUpdateWithoutCommentInput, discussionboard_reportsUncheckedUpdateWithoutCommentInput>\n  }\n\n  export type discussionboard_reportsUpdateManyWithWhereWithoutCommentInput = {\n    where: discussionboard_reportsScalarWhereInput\n    data: XOR<discussionboard_reportsUpdateManyMutationInput, discussionboard_reportsUncheckedUpdateManyWithoutCommentInput>\n  }\n\n  export type discussionboard_moderation_actionUpsertWithWhereUniqueWithoutModerated_commentInput = {\n    where: discussionboard_moderation_actionWhereUniqueInput\n    update: XOR<discussionboard_moderation_actionUpdateWithoutModerated_commentInput, discussionboard_moderation_actionUncheckedUpdateWithoutModerated_commentInput>\n    create: XOR<discussionboard_moderation_actionCreateWithoutModerated_commentInput, discussionboard_moderation_actionUncheckedCreateWithoutModerated_commentInput>\n  }\n\n  export type discussionboard_moderation_actionUpdateWithWhereUniqueWithoutModerated_commentInput = {\n    where: discussionboard_moderation_actionWhereUniqueInput\n    data: XOR<discussionboard_moderation_actionUpdateWithoutModerated_commentInput, discussionboard_moderation_actionUncheckedUpdateWithoutModerated_commentInput>\n  }\n\n  export type discussionboard_moderation_actionUpdateManyWithWhereWithoutModerated_commentInput = {\n    where: discussionboard_moderation_actionScalarWhereInput\n    data: XOR<discussionboard_moderation_actionUpdateManyMutationInput, discussionboard_moderation_actionUncheckedUpdateManyWithoutModerated_commentInput>\n  }\n\n  export type discussionboard_report_reviewUpsertWithWhereUniqueWithoutReviewed_commentInput = {\n    where: discussionboard_report_reviewWhereUniqueInput\n    update: XOR<discussionboard_report_reviewUpdateWithoutReviewed_commentInput, discussionboard_report_reviewUncheckedUpdateWithoutReviewed_commentInput>\n    create: XOR<discussionboard_report_reviewCreateWithoutReviewed_commentInput, discussionboard_report_reviewUncheckedCreateWithoutReviewed_commentInput>\n  }\n\n  export type discussionboard_report_reviewUpdateWithWhereUniqueWithoutReviewed_commentInput = {\n    where: discussionboard_report_reviewWhereUniqueInput\n    data: XOR<discussionboard_report_reviewUpdateWithoutReviewed_commentInput, discussionboard_report_reviewUncheckedUpdateWithoutReviewed_commentInput>\n  }\n\n  export type discussionboard_report_reviewUpdateManyWithWhereWithoutReviewed_commentInput = {\n    where: discussionboard_report_reviewScalarWhereInput\n    data: XOR<discussionboard_report_reviewUpdateManyMutationInput, discussionboard_report_reviewUncheckedUpdateManyWithoutReviewed_commentInput>\n  }\n\n  export type discussionboard_warningUpsertWithWhereUniqueWithoutWarning_commentInput = {\n    where: discussionboard_warningWhereUniqueInput\n    update: XOR<discussionboard_warningUpdateWithoutWarning_commentInput, discussionboard_warningUncheckedUpdateWithoutWarning_commentInput>\n    create: XOR<discussionboard_warningCreateWithoutWarning_commentInput, discussionboard_warningUncheckedCreateWithoutWarning_commentInput>\n  }\n\n  export type discussionboard_warningUpdateWithWhereUniqueWithoutWarning_commentInput = {\n    where: discussionboard_warningWhereUniqueInput\n    data: XOR<discussionboard_warningUpdateWithoutWarning_commentInput, discussionboard_warningUncheckedUpdateWithoutWarning_commentInput>\n  }\n\n  export type discussionboard_warningUpdateManyWithWhereWithoutWarning_commentInput = {\n    where: discussionboard_warningScalarWhereInput\n    data: XOR<discussionboard_warningUpdateManyMutationInput, discussionboard_warningUncheckedUpdateManyWithoutWarning_commentInput>\n  }\n\n  export type discussionboard_notificationUpsertWithWhereUniqueWithoutRelated_commentInput = {\n    where: discussionboard_notificationWhereUniqueInput\n    update: XOR<discussionboard_notificationUpdateWithoutRelated_commentInput, discussionboard_notificationUncheckedUpdateWithoutRelated_commentInput>\n    create: XOR<discussionboard_notificationCreateWithoutRelated_commentInput, discussionboard_notificationUncheckedCreateWithoutRelated_commentInput>\n  }\n\n  export type discussionboard_notificationUpdateWithWhereUniqueWithoutRelated_commentInput = {\n    where: discussionboard_notificationWhereUniqueInput\n    data: XOR<discussionboard_notificationUpdateWithoutRelated_commentInput, discussionboard_notificationUncheckedUpdateWithoutRelated_commentInput>\n  }\n\n  export type discussionboard_notificationUpdateManyWithWhereWithoutRelated_commentInput = {\n    where: discussionboard_notificationScalarWhereInput\n    data: XOR<discussionboard_notificationUpdateManyMutationInput, discussionboard_notificationUncheckedUpdateManyWithoutRelated_commentInput>\n  }\n\n  export type discussionboard_userCreateWithoutDiscussionboard_likesInput = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_user_profile?: discussionboard_user_profileCreateNestedOneWithoutUser_profile_user_idInput\n    discussionboard_member?: discussionboard_memberCreateNestedOneWithoutMember_user_idInput\n    discussionboard_moderator?: discussionboard_moderatorCreateNestedOneWithoutModerator_user_idInput\n    discussionboard_admin?: discussionboard_adminCreateNestedOneWithoutAdmin_user_idInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutUserInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionCreateNestedManyWithoutActorInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionCreateNestedManyWithoutTarget_userInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReviewerInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningCreateNestedManyWithoutIssuerInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningCreateNestedManyWithoutRecipientInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banCreateNestedManyWithoutBanned_userInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banCreateNestedManyWithoutBan_actorInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationCreateNestedManyWithoutRecipient_userInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationCreateNestedManyWithoutActor_userInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceCreateNestedOneWithoutUserInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logCreateNestedManyWithoutFk_audit_actor_userInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logCreateNestedManyWithoutFk_audit_target_userInput\n  }\n\n  export type discussionboard_userUncheckedCreateWithoutDiscussionboard_likesInput = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUncheckedCreateNestedOneWithoutUser_profile_user_idInput\n    discussionboard_member?: discussionboard_memberUncheckedCreateNestedOneWithoutMember_user_idInput\n    discussionboard_moderator?: discussionboard_moderatorUncheckedCreateNestedOneWithoutModerator_user_idInput\n    discussionboard_admin?: discussionboard_adminUncheckedCreateNestedOneWithoutAdmin_user_idInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutActorInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutTarget_userInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewerInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUncheckedCreateNestedManyWithoutIssuerInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUncheckedCreateNestedManyWithoutRecipientInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUncheckedCreateNestedManyWithoutBanned_userInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUncheckedCreateNestedManyWithoutBan_actorInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUncheckedCreateNestedManyWithoutRecipient_userInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUncheckedCreateNestedManyWithoutActor_userInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUncheckedCreateNestedOneWithoutUserInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUncheckedCreateNestedManyWithoutFk_audit_actor_userInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUncheckedCreateNestedManyWithoutFk_audit_target_userInput\n  }\n\n  export type discussionboard_userCreateOrConnectWithoutDiscussionboard_likesInput = {\n    where: discussionboard_userWhereUniqueInput\n    create: XOR<discussionboard_userCreateWithoutDiscussionboard_likesInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_likesInput>\n  }\n\n  export type discussionboard_postCreateWithoutDiscussionboard_likesInput = {\n    id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    member: discussionboard_memberCreateNestedOneWithoutDiscussionboard_postInput\n    category: discussionboard_post_categoryCreateNestedOneWithoutDiscussionboard_postInput\n    discussionboard_post_attachment?: discussionboard_post_attachmentCreateNestedManyWithoutPostInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutPostInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutPostInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionCreateNestedManyWithoutModerated_postInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReviewed_postInput\n    discussionboard_warning?: discussionboard_warningCreateNestedManyWithoutWarning_postInput\n    discussionboard_notification?: discussionboard_notificationCreateNestedManyWithoutRelated_postInput\n  }\n\n  export type discussionboard_postUncheckedCreateWithoutDiscussionboard_likesInput = {\n    id: string\n    author_member_id: string\n    category_id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussionboard_post_attachment?: discussionboard_post_attachmentUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutModerated_postInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewed_postInput\n    discussionboard_warning?: discussionboard_warningUncheckedCreateNestedManyWithoutWarning_postInput\n    discussionboard_notification?: discussionboard_notificationUncheckedCreateNestedManyWithoutRelated_postInput\n  }\n\n  export type discussionboard_postCreateOrConnectWithoutDiscussionboard_likesInput = {\n    where: discussionboard_postWhereUniqueInput\n    create: XOR<discussionboard_postCreateWithoutDiscussionboard_likesInput, discussionboard_postUncheckedCreateWithoutDiscussionboard_likesInput>\n  }\n\n  export type discussionboard_commentsCreateWithoutDiscussionboard_likesInput = {\n    id: string\n    content: string\n    is_edited: boolean\n    is_deleted: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    post: discussionboard_postCreateNestedOneWithoutDiscussionboard_commentsInput\n    author: discussionboard_userCreateNestedOneWithoutDiscussionboard_commentsInput\n    parent_comment?: discussionboard_commentsCreateNestedOneWithoutRecursiveInput\n    recursive?: discussionboard_commentsCreateNestedManyWithoutParent_commentInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutCommentInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionCreateNestedManyWithoutModerated_commentInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReviewed_commentInput\n    discussionboard_warning?: discussionboard_warningCreateNestedManyWithoutWarning_commentInput\n    discussionboard_notification?: discussionboard_notificationCreateNestedManyWithoutRelated_commentInput\n  }\n\n  export type discussionboard_commentsUncheckedCreateWithoutDiscussionboard_likesInput = {\n    id: string\n    post_id: string\n    author_id: string\n    parent_comment_id?: string | null\n    content: string\n    is_edited: boolean\n    is_deleted: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    recursive?: discussionboard_commentsUncheckedCreateNestedManyWithoutParent_commentInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutModerated_commentInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewed_commentInput\n    discussionboard_warning?: discussionboard_warningUncheckedCreateNestedManyWithoutWarning_commentInput\n    discussionboard_notification?: discussionboard_notificationUncheckedCreateNestedManyWithoutRelated_commentInput\n  }\n\n  export type discussionboard_commentsCreateOrConnectWithoutDiscussionboard_likesInput = {\n    where: discussionboard_commentsWhereUniqueInput\n    create: XOR<discussionboard_commentsCreateWithoutDiscussionboard_likesInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_likesInput>\n  }\n\n  export type discussionboard_userUpsertWithoutDiscussionboard_likesInput = {\n    update: XOR<discussionboard_userUpdateWithoutDiscussionboard_likesInput, discussionboard_userUncheckedUpdateWithoutDiscussionboard_likesInput>\n    create: XOR<discussionboard_userCreateWithoutDiscussionboard_likesInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_likesInput>\n    where?: discussionboard_userWhereInput\n  }\n\n  export type discussionboard_userUpdateToOneWithWhereWithoutDiscussionboard_likesInput = {\n    where?: discussionboard_userWhereInput\n    data: XOR<discussionboard_userUpdateWithoutDiscussionboard_likesInput, discussionboard_userUncheckedUpdateWithoutDiscussionboard_likesInput>\n  }\n\n  export type discussionboard_userUpdateWithoutDiscussionboard_likesInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUpdateOneWithoutUser_profile_user_idNestedInput\n    discussionboard_member?: discussionboard_memberUpdateOneWithoutMember_user_idNestedInput\n    discussionboard_moderator?: discussionboard_moderatorUpdateOneWithoutModerator_user_idNestedInput\n    discussionboard_admin?: discussionboard_adminUpdateOneWithoutAdmin_user_idNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUpdateManyWithoutActorNestedInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUpdateManyWithoutTarget_userNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReviewerNestedInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUpdateManyWithoutIssuerNestedInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUpdateManyWithoutRecipientNestedInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUpdateManyWithoutBanned_userNestedInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUpdateManyWithoutBan_actorNestedInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUpdateManyWithoutRecipient_userNestedInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUpdateManyWithoutActor_userNestedInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUpdateOneWithoutUserNestedInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUpdateManyWithoutFk_audit_actor_userNestedInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUpdateManyWithoutFk_audit_target_userNestedInput\n  }\n\n  export type discussionboard_userUncheckedUpdateWithoutDiscussionboard_likesInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUncheckedUpdateOneWithoutUser_profile_user_idNestedInput\n    discussionboard_member?: discussionboard_memberUncheckedUpdateOneWithoutMember_user_idNestedInput\n    discussionboard_moderator?: discussionboard_moderatorUncheckedUpdateOneWithoutModerator_user_idNestedInput\n    discussionboard_admin?: discussionboard_adminUncheckedUpdateOneWithoutAdmin_user_idNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUncheckedUpdateManyWithoutActorNestedInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUncheckedUpdateManyWithoutTarget_userNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReviewerNestedInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUncheckedUpdateManyWithoutIssuerNestedInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUncheckedUpdateManyWithoutRecipientNestedInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUncheckedUpdateManyWithoutBanned_userNestedInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUncheckedUpdateManyWithoutBan_actorNestedInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUncheckedUpdateManyWithoutRecipient_userNestedInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUncheckedUpdateManyWithoutActor_userNestedInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUncheckedUpdateOneWithoutUserNestedInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_actor_userNestedInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_target_userNestedInput\n  }\n\n  export type discussionboard_postUpsertWithoutDiscussionboard_likesInput = {\n    update: XOR<discussionboard_postUpdateWithoutDiscussionboard_likesInput, discussionboard_postUncheckedUpdateWithoutDiscussionboard_likesInput>\n    create: XOR<discussionboard_postCreateWithoutDiscussionboard_likesInput, discussionboard_postUncheckedCreateWithoutDiscussionboard_likesInput>\n    where?: discussionboard_postWhereInput\n  }\n\n  export type discussionboard_postUpdateToOneWithWhereWithoutDiscussionboard_likesInput = {\n    where?: discussionboard_postWhereInput\n    data: XOR<discussionboard_postUpdateWithoutDiscussionboard_likesInput, discussionboard_postUncheckedUpdateWithoutDiscussionboard_likesInput>\n  }\n\n  export type discussionboard_postUpdateWithoutDiscussionboard_likesInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    member?: discussionboard_memberUpdateOneRequiredWithoutDiscussionboard_postNestedInput\n    category?: discussionboard_post_categoryUpdateOneRequiredWithoutDiscussionboard_postNestedInput\n    discussionboard_post_attachment?: discussionboard_post_attachmentUpdateManyWithoutPostNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutPostNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutPostNestedInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUpdateManyWithoutModerated_postNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReviewed_postNestedInput\n    discussionboard_warning?: discussionboard_warningUpdateManyWithoutWarning_postNestedInput\n    discussionboard_notification?: discussionboard_notificationUpdateManyWithoutRelated_postNestedInput\n  }\n\n  export type discussionboard_postUncheckedUpdateWithoutDiscussionboard_likesInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    author_member_id?: StringFieldUpdateOperationsInput | string\n    category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_post_attachment?: discussionboard_post_attachmentUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUncheckedUpdateManyWithoutModerated_postNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReviewed_postNestedInput\n    discussionboard_warning?: discussionboard_warningUncheckedUpdateManyWithoutWarning_postNestedInput\n    discussionboard_notification?: discussionboard_notificationUncheckedUpdateManyWithoutRelated_postNestedInput\n  }\n\n  export type discussionboard_commentsUpsertWithoutDiscussionboard_likesInput = {\n    update: XOR<discussionboard_commentsUpdateWithoutDiscussionboard_likesInput, discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_likesInput>\n    create: XOR<discussionboard_commentsCreateWithoutDiscussionboard_likesInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_likesInput>\n    where?: discussionboard_commentsWhereInput\n  }\n\n  export type discussionboard_commentsUpdateToOneWithWhereWithoutDiscussionboard_likesInput = {\n    where?: discussionboard_commentsWhereInput\n    data: XOR<discussionboard_commentsUpdateWithoutDiscussionboard_likesInput, discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_likesInput>\n  }\n\n  export type discussionboard_commentsUpdateWithoutDiscussionboard_likesInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    is_edited?: BoolFieldUpdateOperationsInput | boolean\n    is_deleted?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    post?: discussionboard_postUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput\n    author?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput\n    parent_comment?: discussionboard_commentsUpdateOneWithoutRecursiveNestedInput\n    recursive?: discussionboard_commentsUpdateManyWithoutParent_commentNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutCommentNestedInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUpdateManyWithoutModerated_commentNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReviewed_commentNestedInput\n    discussionboard_warning?: discussionboard_warningUpdateManyWithoutWarning_commentNestedInput\n    discussionboard_notification?: discussionboard_notificationUpdateManyWithoutRelated_commentNestedInput\n  }\n\n  export type discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_likesInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    author_id?: StringFieldUpdateOperationsInput | string\n    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    content?: StringFieldUpdateOperationsInput | string\n    is_edited?: BoolFieldUpdateOperationsInput | boolean\n    is_deleted?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    recursive?: discussionboard_commentsUncheckedUpdateManyWithoutParent_commentNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUncheckedUpdateManyWithoutModerated_commentNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReviewed_commentNestedInput\n    discussionboard_warning?: discussionboard_warningUncheckedUpdateManyWithoutWarning_commentNestedInput\n    discussionboard_notification?: discussionboard_notificationUncheckedUpdateManyWithoutRelated_commentNestedInput\n  }\n\n  export type discussionboard_userCreateWithoutDiscussionboard_reportsInput = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_user_profile?: discussionboard_user_profileCreateNestedOneWithoutUser_profile_user_idInput\n    discussionboard_member?: discussionboard_memberCreateNestedOneWithoutMember_user_idInput\n    discussionboard_moderator?: discussionboard_moderatorCreateNestedOneWithoutModerator_user_idInput\n    discussionboard_admin?: discussionboard_adminCreateNestedOneWithoutAdmin_user_idInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_likes?: discussionboard_likesCreateNestedManyWithoutUserInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionCreateNestedManyWithoutActorInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionCreateNestedManyWithoutTarget_userInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReviewerInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningCreateNestedManyWithoutIssuerInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningCreateNestedManyWithoutRecipientInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banCreateNestedManyWithoutBanned_userInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banCreateNestedManyWithoutBan_actorInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationCreateNestedManyWithoutRecipient_userInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationCreateNestedManyWithoutActor_userInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceCreateNestedOneWithoutUserInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logCreateNestedManyWithoutFk_audit_actor_userInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logCreateNestedManyWithoutFk_audit_target_userInput\n  }\n\n  export type discussionboard_userUncheckedCreateWithoutDiscussionboard_reportsInput = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUncheckedCreateNestedOneWithoutUser_profile_user_idInput\n    discussionboard_member?: discussionboard_memberUncheckedCreateNestedOneWithoutMember_user_idInput\n    discussionboard_moderator?: discussionboard_moderatorUncheckedCreateNestedOneWithoutModerator_user_idInput\n    discussionboard_admin?: discussionboard_adminUncheckedCreateNestedOneWithoutAdmin_user_idInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_likes?: discussionboard_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutActorInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutTarget_userInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewerInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUncheckedCreateNestedManyWithoutIssuerInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUncheckedCreateNestedManyWithoutRecipientInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUncheckedCreateNestedManyWithoutBanned_userInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUncheckedCreateNestedManyWithoutBan_actorInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUncheckedCreateNestedManyWithoutRecipient_userInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUncheckedCreateNestedManyWithoutActor_userInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUncheckedCreateNestedOneWithoutUserInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUncheckedCreateNestedManyWithoutFk_audit_actor_userInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUncheckedCreateNestedManyWithoutFk_audit_target_userInput\n  }\n\n  export type discussionboard_userCreateOrConnectWithoutDiscussionboard_reportsInput = {\n    where: discussionboard_userWhereUniqueInput\n    create: XOR<discussionboard_userCreateWithoutDiscussionboard_reportsInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_reportsInput>\n  }\n\n  export type discussionboard_postCreateWithoutDiscussionboard_reportsInput = {\n    id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    member: discussionboard_memberCreateNestedOneWithoutDiscussionboard_postInput\n    category: discussionboard_post_categoryCreateNestedOneWithoutDiscussionboard_postInput\n    discussionboard_post_attachment?: discussionboard_post_attachmentCreateNestedManyWithoutPostInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutPostInput\n    discussionboard_likes?: discussionboard_likesCreateNestedManyWithoutPostInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionCreateNestedManyWithoutModerated_postInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReviewed_postInput\n    discussionboard_warning?: discussionboard_warningCreateNestedManyWithoutWarning_postInput\n    discussionboard_notification?: discussionboard_notificationCreateNestedManyWithoutRelated_postInput\n  }\n\n  export type discussionboard_postUncheckedCreateWithoutDiscussionboard_reportsInput = {\n    id: string\n    author_member_id: string\n    category_id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussionboard_post_attachment?: discussionboard_post_attachmentUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_likes?: discussionboard_likesUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutModerated_postInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewed_postInput\n    discussionboard_warning?: discussionboard_warningUncheckedCreateNestedManyWithoutWarning_postInput\n    discussionboard_notification?: discussionboard_notificationUncheckedCreateNestedManyWithoutRelated_postInput\n  }\n\n  export type discussionboard_postCreateOrConnectWithoutDiscussionboard_reportsInput = {\n    where: discussionboard_postWhereUniqueInput\n    create: XOR<discussionboard_postCreateWithoutDiscussionboard_reportsInput, discussionboard_postUncheckedCreateWithoutDiscussionboard_reportsInput>\n  }\n\n  export type discussionboard_commentsCreateWithoutDiscussionboard_reportsInput = {\n    id: string\n    content: string\n    is_edited: boolean\n    is_deleted: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    post: discussionboard_postCreateNestedOneWithoutDiscussionboard_commentsInput\n    author: discussionboard_userCreateNestedOneWithoutDiscussionboard_commentsInput\n    parent_comment?: discussionboard_commentsCreateNestedOneWithoutRecursiveInput\n    recursive?: discussionboard_commentsCreateNestedManyWithoutParent_commentInput\n    discussionboard_likes?: discussionboard_likesCreateNestedManyWithoutCommentInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionCreateNestedManyWithoutModerated_commentInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReviewed_commentInput\n    discussionboard_warning?: discussionboard_warningCreateNestedManyWithoutWarning_commentInput\n    discussionboard_notification?: discussionboard_notificationCreateNestedManyWithoutRelated_commentInput\n  }\n\n  export type discussionboard_commentsUncheckedCreateWithoutDiscussionboard_reportsInput = {\n    id: string\n    post_id: string\n    author_id: string\n    parent_comment_id?: string | null\n    content: string\n    is_edited: boolean\n    is_deleted: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    recursive?: discussionboard_commentsUncheckedCreateNestedManyWithoutParent_commentInput\n    discussionboard_likes?: discussionboard_likesUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutModerated_commentInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewed_commentInput\n    discussionboard_warning?: discussionboard_warningUncheckedCreateNestedManyWithoutWarning_commentInput\n    discussionboard_notification?: discussionboard_notificationUncheckedCreateNestedManyWithoutRelated_commentInput\n  }\n\n  export type discussionboard_commentsCreateOrConnectWithoutDiscussionboard_reportsInput = {\n    where: discussionboard_commentsWhereUniqueInput\n    create: XOR<discussionboard_commentsCreateWithoutDiscussionboard_reportsInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_reportsInput>\n  }\n\n  export type discussionboard_report_reviewCreateWithoutReportInput = {\n    id: string\n    review_status: string\n    moderator_comment?: string | null\n    reviewed_at: Date | string\n    reviewer: discussionboard_userCreateNestedOneWithoutDiscussionboard_report_reviewInput\n    reviewed_post?: discussionboard_postCreateNestedOneWithoutDiscussionboard_report_reviewInput\n    reviewed_comment?: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_report_reviewInput\n  }\n\n  export type discussionboard_report_reviewUncheckedCreateWithoutReportInput = {\n    id: string\n    reviewer_id: string\n    post_id?: string | null\n    comment_id?: string | null\n    review_status: string\n    moderator_comment?: string | null\n    reviewed_at: Date | string\n  }\n\n  export type discussionboard_report_reviewCreateOrConnectWithoutReportInput = {\n    where: discussionboard_report_reviewWhereUniqueInput\n    create: XOR<discussionboard_report_reviewCreateWithoutReportInput, discussionboard_report_reviewUncheckedCreateWithoutReportInput>\n  }\n\n  export type discussionboard_report_reviewCreateManyReportInputEnvelope = {\n    data: discussionboard_report_reviewCreateManyReportInput | discussionboard_report_reviewCreateManyReportInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_userUpsertWithoutDiscussionboard_reportsInput = {\n    update: XOR<discussionboard_userUpdateWithoutDiscussionboard_reportsInput, discussionboard_userUncheckedUpdateWithoutDiscussionboard_reportsInput>\n    create: XOR<discussionboard_userCreateWithoutDiscussionboard_reportsInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_reportsInput>\n    where?: discussionboard_userWhereInput\n  }\n\n  export type discussionboard_userUpdateToOneWithWhereWithoutDiscussionboard_reportsInput = {\n    where?: discussionboard_userWhereInput\n    data: XOR<discussionboard_userUpdateWithoutDiscussionboard_reportsInput, discussionboard_userUncheckedUpdateWithoutDiscussionboard_reportsInput>\n  }\n\n  export type discussionboard_userUpdateWithoutDiscussionboard_reportsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUpdateOneWithoutUser_profile_user_idNestedInput\n    discussionboard_member?: discussionboard_memberUpdateOneWithoutMember_user_idNestedInput\n    discussionboard_moderator?: discussionboard_moderatorUpdateOneWithoutModerator_user_idNestedInput\n    discussionboard_admin?: discussionboard_adminUpdateOneWithoutAdmin_user_idNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_likes?: discussionboard_likesUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUpdateManyWithoutActorNestedInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUpdateManyWithoutTarget_userNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReviewerNestedInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUpdateManyWithoutIssuerNestedInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUpdateManyWithoutRecipientNestedInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUpdateManyWithoutBanned_userNestedInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUpdateManyWithoutBan_actorNestedInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUpdateManyWithoutRecipient_userNestedInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUpdateManyWithoutActor_userNestedInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUpdateOneWithoutUserNestedInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUpdateManyWithoutFk_audit_actor_userNestedInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUpdateManyWithoutFk_audit_target_userNestedInput\n  }\n\n  export type discussionboard_userUncheckedUpdateWithoutDiscussionboard_reportsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUncheckedUpdateOneWithoutUser_profile_user_idNestedInput\n    discussionboard_member?: discussionboard_memberUncheckedUpdateOneWithoutMember_user_idNestedInput\n    discussionboard_moderator?: discussionboard_moderatorUncheckedUpdateOneWithoutModerator_user_idNestedInput\n    discussionboard_admin?: discussionboard_adminUncheckedUpdateOneWithoutAdmin_user_idNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_likes?: discussionboard_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUncheckedUpdateManyWithoutActorNestedInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUncheckedUpdateManyWithoutTarget_userNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReviewerNestedInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUncheckedUpdateManyWithoutIssuerNestedInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUncheckedUpdateManyWithoutRecipientNestedInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUncheckedUpdateManyWithoutBanned_userNestedInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUncheckedUpdateManyWithoutBan_actorNestedInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUncheckedUpdateManyWithoutRecipient_userNestedInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUncheckedUpdateManyWithoutActor_userNestedInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUncheckedUpdateOneWithoutUserNestedInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_actor_userNestedInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_target_userNestedInput\n  }\n\n  export type discussionboard_postUpsertWithoutDiscussionboard_reportsInput = {\n    update: XOR<discussionboard_postUpdateWithoutDiscussionboard_reportsInput, discussionboard_postUncheckedUpdateWithoutDiscussionboard_reportsInput>\n    create: XOR<discussionboard_postCreateWithoutDiscussionboard_reportsInput, discussionboard_postUncheckedCreateWithoutDiscussionboard_reportsInput>\n    where?: discussionboard_postWhereInput\n  }\n\n  export type discussionboard_postUpdateToOneWithWhereWithoutDiscussionboard_reportsInput = {\n    where?: discussionboard_postWhereInput\n    data: XOR<discussionboard_postUpdateWithoutDiscussionboard_reportsInput, discussionboard_postUncheckedUpdateWithoutDiscussionboard_reportsInput>\n  }\n\n  export type discussionboard_postUpdateWithoutDiscussionboard_reportsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    member?: discussionboard_memberUpdateOneRequiredWithoutDiscussionboard_postNestedInput\n    category?: discussionboard_post_categoryUpdateOneRequiredWithoutDiscussionboard_postNestedInput\n    discussionboard_post_attachment?: discussionboard_post_attachmentUpdateManyWithoutPostNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutPostNestedInput\n    discussionboard_likes?: discussionboard_likesUpdateManyWithoutPostNestedInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUpdateManyWithoutModerated_postNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReviewed_postNestedInput\n    discussionboard_warning?: discussionboard_warningUpdateManyWithoutWarning_postNestedInput\n    discussionboard_notification?: discussionboard_notificationUpdateManyWithoutRelated_postNestedInput\n  }\n\n  export type discussionboard_postUncheckedUpdateWithoutDiscussionboard_reportsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    author_member_id?: StringFieldUpdateOperationsInput | string\n    category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_post_attachment?: discussionboard_post_attachmentUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_likes?: discussionboard_likesUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUncheckedUpdateManyWithoutModerated_postNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReviewed_postNestedInput\n    discussionboard_warning?: discussionboard_warningUncheckedUpdateManyWithoutWarning_postNestedInput\n    discussionboard_notification?: discussionboard_notificationUncheckedUpdateManyWithoutRelated_postNestedInput\n  }\n\n  export type discussionboard_commentsUpsertWithoutDiscussionboard_reportsInput = {\n    update: XOR<discussionboard_commentsUpdateWithoutDiscussionboard_reportsInput, discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_reportsInput>\n    create: XOR<discussionboard_commentsCreateWithoutDiscussionboard_reportsInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_reportsInput>\n    where?: discussionboard_commentsWhereInput\n  }\n\n  export type discussionboard_commentsUpdateToOneWithWhereWithoutDiscussionboard_reportsInput = {\n    where?: discussionboard_commentsWhereInput\n    data: XOR<discussionboard_commentsUpdateWithoutDiscussionboard_reportsInput, discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_reportsInput>\n  }\n\n  export type discussionboard_commentsUpdateWithoutDiscussionboard_reportsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    is_edited?: BoolFieldUpdateOperationsInput | boolean\n    is_deleted?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    post?: discussionboard_postUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput\n    author?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput\n    parent_comment?: discussionboard_commentsUpdateOneWithoutRecursiveNestedInput\n    recursive?: discussionboard_commentsUpdateManyWithoutParent_commentNestedInput\n    discussionboard_likes?: discussionboard_likesUpdateManyWithoutCommentNestedInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUpdateManyWithoutModerated_commentNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReviewed_commentNestedInput\n    discussionboard_warning?: discussionboard_warningUpdateManyWithoutWarning_commentNestedInput\n    discussionboard_notification?: discussionboard_notificationUpdateManyWithoutRelated_commentNestedInput\n  }\n\n  export type discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_reportsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    author_id?: StringFieldUpdateOperationsInput | string\n    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    content?: StringFieldUpdateOperationsInput | string\n    is_edited?: BoolFieldUpdateOperationsInput | boolean\n    is_deleted?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    recursive?: discussionboard_commentsUncheckedUpdateManyWithoutParent_commentNestedInput\n    discussionboard_likes?: discussionboard_likesUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUncheckedUpdateManyWithoutModerated_commentNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReviewed_commentNestedInput\n    discussionboard_warning?: discussionboard_warningUncheckedUpdateManyWithoutWarning_commentNestedInput\n    discussionboard_notification?: discussionboard_notificationUncheckedUpdateManyWithoutRelated_commentNestedInput\n  }\n\n  export type discussionboard_report_reviewUpsertWithWhereUniqueWithoutReportInput = {\n    where: discussionboard_report_reviewWhereUniqueInput\n    update: XOR<discussionboard_report_reviewUpdateWithoutReportInput, discussionboard_report_reviewUncheckedUpdateWithoutReportInput>\n    create: XOR<discussionboard_report_reviewCreateWithoutReportInput, discussionboard_report_reviewUncheckedCreateWithoutReportInput>\n  }\n\n  export type discussionboard_report_reviewUpdateWithWhereUniqueWithoutReportInput = {\n    where: discussionboard_report_reviewWhereUniqueInput\n    data: XOR<discussionboard_report_reviewUpdateWithoutReportInput, discussionboard_report_reviewUncheckedUpdateWithoutReportInput>\n  }\n\n  export type discussionboard_report_reviewUpdateManyWithWhereWithoutReportInput = {\n    where: discussionboard_report_reviewScalarWhereInput\n    data: XOR<discussionboard_report_reviewUpdateManyMutationInput, discussionboard_report_reviewUncheckedUpdateManyWithoutReportInput>\n  }\n\n  export type discussionboard_userCreateWithoutDiscussionboard_moderation_action_of_actor_idInput = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_user_profile?: discussionboard_user_profileCreateNestedOneWithoutUser_profile_user_idInput\n    discussionboard_member?: discussionboard_memberCreateNestedOneWithoutMember_user_idInput\n    discussionboard_moderator?: discussionboard_moderatorCreateNestedOneWithoutModerator_user_idInput\n    discussionboard_admin?: discussionboard_adminCreateNestedOneWithoutAdmin_user_idInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_likes?: discussionboard_likesCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutUserInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionCreateNestedManyWithoutTarget_userInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReviewerInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningCreateNestedManyWithoutIssuerInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningCreateNestedManyWithoutRecipientInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banCreateNestedManyWithoutBanned_userInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banCreateNestedManyWithoutBan_actorInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationCreateNestedManyWithoutRecipient_userInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationCreateNestedManyWithoutActor_userInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceCreateNestedOneWithoutUserInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logCreateNestedManyWithoutFk_audit_actor_userInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logCreateNestedManyWithoutFk_audit_target_userInput\n  }\n\n  export type discussionboard_userUncheckedCreateWithoutDiscussionboard_moderation_action_of_actor_idInput = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUncheckedCreateNestedOneWithoutUser_profile_user_idInput\n    discussionboard_member?: discussionboard_memberUncheckedCreateNestedOneWithoutMember_user_idInput\n    discussionboard_moderator?: discussionboard_moderatorUncheckedCreateNestedOneWithoutModerator_user_idInput\n    discussionboard_admin?: discussionboard_adminUncheckedCreateNestedOneWithoutAdmin_user_idInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_likes?: discussionboard_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutTarget_userInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewerInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUncheckedCreateNestedManyWithoutIssuerInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUncheckedCreateNestedManyWithoutRecipientInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUncheckedCreateNestedManyWithoutBanned_userInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUncheckedCreateNestedManyWithoutBan_actorInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUncheckedCreateNestedManyWithoutRecipient_userInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUncheckedCreateNestedManyWithoutActor_userInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUncheckedCreateNestedOneWithoutUserInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUncheckedCreateNestedManyWithoutFk_audit_actor_userInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUncheckedCreateNestedManyWithoutFk_audit_target_userInput\n  }\n\n  export type discussionboard_userCreateOrConnectWithoutDiscussionboard_moderation_action_of_actor_idInput = {\n    where: discussionboard_userWhereUniqueInput\n    create: XOR<discussionboard_userCreateWithoutDiscussionboard_moderation_action_of_actor_idInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_moderation_action_of_actor_idInput>\n  }\n\n  export type discussionboard_userCreateWithoutDiscussionboard_moderation_action_of_target_user_idInput = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_user_profile?: discussionboard_user_profileCreateNestedOneWithoutUser_profile_user_idInput\n    discussionboard_member?: discussionboard_memberCreateNestedOneWithoutMember_user_idInput\n    discussionboard_moderator?: discussionboard_moderatorCreateNestedOneWithoutModerator_user_idInput\n    discussionboard_admin?: discussionboard_adminCreateNestedOneWithoutAdmin_user_idInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_likes?: discussionboard_likesCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutUserInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionCreateNestedManyWithoutActorInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReviewerInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningCreateNestedManyWithoutIssuerInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningCreateNestedManyWithoutRecipientInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banCreateNestedManyWithoutBanned_userInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banCreateNestedManyWithoutBan_actorInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationCreateNestedManyWithoutRecipient_userInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationCreateNestedManyWithoutActor_userInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceCreateNestedOneWithoutUserInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logCreateNestedManyWithoutFk_audit_actor_userInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logCreateNestedManyWithoutFk_audit_target_userInput\n  }\n\n  export type discussionboard_userUncheckedCreateWithoutDiscussionboard_moderation_action_of_target_user_idInput = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUncheckedCreateNestedOneWithoutUser_profile_user_idInput\n    discussionboard_member?: discussionboard_memberUncheckedCreateNestedOneWithoutMember_user_idInput\n    discussionboard_moderator?: discussionboard_moderatorUncheckedCreateNestedOneWithoutModerator_user_idInput\n    discussionboard_admin?: discussionboard_adminUncheckedCreateNestedOneWithoutAdmin_user_idInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_likes?: discussionboard_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutActorInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewerInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUncheckedCreateNestedManyWithoutIssuerInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUncheckedCreateNestedManyWithoutRecipientInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUncheckedCreateNestedManyWithoutBanned_userInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUncheckedCreateNestedManyWithoutBan_actorInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUncheckedCreateNestedManyWithoutRecipient_userInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUncheckedCreateNestedManyWithoutActor_userInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUncheckedCreateNestedOneWithoutUserInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUncheckedCreateNestedManyWithoutFk_audit_actor_userInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUncheckedCreateNestedManyWithoutFk_audit_target_userInput\n  }\n\n  export type discussionboard_userCreateOrConnectWithoutDiscussionboard_moderation_action_of_target_user_idInput = {\n    where: discussionboard_userWhereUniqueInput\n    create: XOR<discussionboard_userCreateWithoutDiscussionboard_moderation_action_of_target_user_idInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_moderation_action_of_target_user_idInput>\n  }\n\n  export type discussionboard_postCreateWithoutDiscussionboard_moderation_actionInput = {\n    id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    member: discussionboard_memberCreateNestedOneWithoutDiscussionboard_postInput\n    category: discussionboard_post_categoryCreateNestedOneWithoutDiscussionboard_postInput\n    discussionboard_post_attachment?: discussionboard_post_attachmentCreateNestedManyWithoutPostInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutPostInput\n    discussionboard_likes?: discussionboard_likesCreateNestedManyWithoutPostInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutPostInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReviewed_postInput\n    discussionboard_warning?: discussionboard_warningCreateNestedManyWithoutWarning_postInput\n    discussionboard_notification?: discussionboard_notificationCreateNestedManyWithoutRelated_postInput\n  }\n\n  export type discussionboard_postUncheckedCreateWithoutDiscussionboard_moderation_actionInput = {\n    id: string\n    author_member_id: string\n    category_id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussionboard_post_attachment?: discussionboard_post_attachmentUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_likes?: discussionboard_likesUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewed_postInput\n    discussionboard_warning?: discussionboard_warningUncheckedCreateNestedManyWithoutWarning_postInput\n    discussionboard_notification?: discussionboard_notificationUncheckedCreateNestedManyWithoutRelated_postInput\n  }\n\n  export type discussionboard_postCreateOrConnectWithoutDiscussionboard_moderation_actionInput = {\n    where: discussionboard_postWhereUniqueInput\n    create: XOR<discussionboard_postCreateWithoutDiscussionboard_moderation_actionInput, discussionboard_postUncheckedCreateWithoutDiscussionboard_moderation_actionInput>\n  }\n\n  export type discussionboard_commentsCreateWithoutDiscussionboard_moderation_actionInput = {\n    id: string\n    content: string\n    is_edited: boolean\n    is_deleted: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    post: discussionboard_postCreateNestedOneWithoutDiscussionboard_commentsInput\n    author: discussionboard_userCreateNestedOneWithoutDiscussionboard_commentsInput\n    parent_comment?: discussionboard_commentsCreateNestedOneWithoutRecursiveInput\n    recursive?: discussionboard_commentsCreateNestedManyWithoutParent_commentInput\n    discussionboard_likes?: discussionboard_likesCreateNestedManyWithoutCommentInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutCommentInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReviewed_commentInput\n    discussionboard_warning?: discussionboard_warningCreateNestedManyWithoutWarning_commentInput\n    discussionboard_notification?: discussionboard_notificationCreateNestedManyWithoutRelated_commentInput\n  }\n\n  export type discussionboard_commentsUncheckedCreateWithoutDiscussionboard_moderation_actionInput = {\n    id: string\n    post_id: string\n    author_id: string\n    parent_comment_id?: string | null\n    content: string\n    is_edited: boolean\n    is_deleted: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    recursive?: discussionboard_commentsUncheckedCreateNestedManyWithoutParent_commentInput\n    discussionboard_likes?: discussionboard_likesUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewed_commentInput\n    discussionboard_warning?: discussionboard_warningUncheckedCreateNestedManyWithoutWarning_commentInput\n    discussionboard_notification?: discussionboard_notificationUncheckedCreateNestedManyWithoutRelated_commentInput\n  }\n\n  export type discussionboard_commentsCreateOrConnectWithoutDiscussionboard_moderation_actionInput = {\n    where: discussionboard_commentsWhereUniqueInput\n    create: XOR<discussionboard_commentsCreateWithoutDiscussionboard_moderation_actionInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_moderation_actionInput>\n  }\n\n  export type discussionboard_userUpsertWithoutDiscussionboard_moderation_action_of_actor_idInput = {\n    update: XOR<discussionboard_userUpdateWithoutDiscussionboard_moderation_action_of_actor_idInput, discussionboard_userUncheckedUpdateWithoutDiscussionboard_moderation_action_of_actor_idInput>\n    create: XOR<discussionboard_userCreateWithoutDiscussionboard_moderation_action_of_actor_idInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_moderation_action_of_actor_idInput>\n    where?: discussionboard_userWhereInput\n  }\n\n  export type discussionboard_userUpdateToOneWithWhereWithoutDiscussionboard_moderation_action_of_actor_idInput = {\n    where?: discussionboard_userWhereInput\n    data: XOR<discussionboard_userUpdateWithoutDiscussionboard_moderation_action_of_actor_idInput, discussionboard_userUncheckedUpdateWithoutDiscussionboard_moderation_action_of_actor_idInput>\n  }\n\n  export type discussionboard_userUpdateWithoutDiscussionboard_moderation_action_of_actor_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUpdateOneWithoutUser_profile_user_idNestedInput\n    discussionboard_member?: discussionboard_memberUpdateOneWithoutMember_user_idNestedInput\n    discussionboard_moderator?: discussionboard_moderatorUpdateOneWithoutModerator_user_idNestedInput\n    discussionboard_admin?: discussionboard_adminUpdateOneWithoutAdmin_user_idNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_likes?: discussionboard_likesUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUpdateManyWithoutTarget_userNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReviewerNestedInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUpdateManyWithoutIssuerNestedInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUpdateManyWithoutRecipientNestedInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUpdateManyWithoutBanned_userNestedInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUpdateManyWithoutBan_actorNestedInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUpdateManyWithoutRecipient_userNestedInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUpdateManyWithoutActor_userNestedInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUpdateOneWithoutUserNestedInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUpdateManyWithoutFk_audit_actor_userNestedInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUpdateManyWithoutFk_audit_target_userNestedInput\n  }\n\n  export type discussionboard_userUncheckedUpdateWithoutDiscussionboard_moderation_action_of_actor_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUncheckedUpdateOneWithoutUser_profile_user_idNestedInput\n    discussionboard_member?: discussionboard_memberUncheckedUpdateOneWithoutMember_user_idNestedInput\n    discussionboard_moderator?: discussionboard_moderatorUncheckedUpdateOneWithoutModerator_user_idNestedInput\n    discussionboard_admin?: discussionboard_adminUncheckedUpdateOneWithoutAdmin_user_idNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_likes?: discussionboard_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUncheckedUpdateManyWithoutTarget_userNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReviewerNestedInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUncheckedUpdateManyWithoutIssuerNestedInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUncheckedUpdateManyWithoutRecipientNestedInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUncheckedUpdateManyWithoutBanned_userNestedInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUncheckedUpdateManyWithoutBan_actorNestedInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUncheckedUpdateManyWithoutRecipient_userNestedInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUncheckedUpdateManyWithoutActor_userNestedInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUncheckedUpdateOneWithoutUserNestedInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_actor_userNestedInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_target_userNestedInput\n  }\n\n  export type discussionboard_userUpsertWithoutDiscussionboard_moderation_action_of_target_user_idInput = {\n    update: XOR<discussionboard_userUpdateWithoutDiscussionboard_moderation_action_of_target_user_idInput, discussionboard_userUncheckedUpdateWithoutDiscussionboard_moderation_action_of_target_user_idInput>\n    create: XOR<discussionboard_userCreateWithoutDiscussionboard_moderation_action_of_target_user_idInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_moderation_action_of_target_user_idInput>\n    where?: discussionboard_userWhereInput\n  }\n\n  export type discussionboard_userUpdateToOneWithWhereWithoutDiscussionboard_moderation_action_of_target_user_idInput = {\n    where?: discussionboard_userWhereInput\n    data: XOR<discussionboard_userUpdateWithoutDiscussionboard_moderation_action_of_target_user_idInput, discussionboard_userUncheckedUpdateWithoutDiscussionboard_moderation_action_of_target_user_idInput>\n  }\n\n  export type discussionboard_userUpdateWithoutDiscussionboard_moderation_action_of_target_user_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUpdateOneWithoutUser_profile_user_idNestedInput\n    discussionboard_member?: discussionboard_memberUpdateOneWithoutMember_user_idNestedInput\n    discussionboard_moderator?: discussionboard_moderatorUpdateOneWithoutModerator_user_idNestedInput\n    discussionboard_admin?: discussionboard_adminUpdateOneWithoutAdmin_user_idNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_likes?: discussionboard_likesUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUpdateManyWithoutActorNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReviewerNestedInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUpdateManyWithoutIssuerNestedInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUpdateManyWithoutRecipientNestedInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUpdateManyWithoutBanned_userNestedInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUpdateManyWithoutBan_actorNestedInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUpdateManyWithoutRecipient_userNestedInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUpdateManyWithoutActor_userNestedInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUpdateOneWithoutUserNestedInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUpdateManyWithoutFk_audit_actor_userNestedInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUpdateManyWithoutFk_audit_target_userNestedInput\n  }\n\n  export type discussionboard_userUncheckedUpdateWithoutDiscussionboard_moderation_action_of_target_user_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUncheckedUpdateOneWithoutUser_profile_user_idNestedInput\n    discussionboard_member?: discussionboard_memberUncheckedUpdateOneWithoutMember_user_idNestedInput\n    discussionboard_moderator?: discussionboard_moderatorUncheckedUpdateOneWithoutModerator_user_idNestedInput\n    discussionboard_admin?: discussionboard_adminUncheckedUpdateOneWithoutAdmin_user_idNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_likes?: discussionboard_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUncheckedUpdateManyWithoutActorNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReviewerNestedInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUncheckedUpdateManyWithoutIssuerNestedInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUncheckedUpdateManyWithoutRecipientNestedInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUncheckedUpdateManyWithoutBanned_userNestedInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUncheckedUpdateManyWithoutBan_actorNestedInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUncheckedUpdateManyWithoutRecipient_userNestedInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUncheckedUpdateManyWithoutActor_userNestedInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUncheckedUpdateOneWithoutUserNestedInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_actor_userNestedInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_target_userNestedInput\n  }\n\n  export type discussionboard_postUpsertWithoutDiscussionboard_moderation_actionInput = {\n    update: XOR<discussionboard_postUpdateWithoutDiscussionboard_moderation_actionInput, discussionboard_postUncheckedUpdateWithoutDiscussionboard_moderation_actionInput>\n    create: XOR<discussionboard_postCreateWithoutDiscussionboard_moderation_actionInput, discussionboard_postUncheckedCreateWithoutDiscussionboard_moderation_actionInput>\n    where?: discussionboard_postWhereInput\n  }\n\n  export type discussionboard_postUpdateToOneWithWhereWithoutDiscussionboard_moderation_actionInput = {\n    where?: discussionboard_postWhereInput\n    data: XOR<discussionboard_postUpdateWithoutDiscussionboard_moderation_actionInput, discussionboard_postUncheckedUpdateWithoutDiscussionboard_moderation_actionInput>\n  }\n\n  export type discussionboard_postUpdateWithoutDiscussionboard_moderation_actionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    member?: discussionboard_memberUpdateOneRequiredWithoutDiscussionboard_postNestedInput\n    category?: discussionboard_post_categoryUpdateOneRequiredWithoutDiscussionboard_postNestedInput\n    discussionboard_post_attachment?: discussionboard_post_attachmentUpdateManyWithoutPostNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutPostNestedInput\n    discussionboard_likes?: discussionboard_likesUpdateManyWithoutPostNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutPostNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReviewed_postNestedInput\n    discussionboard_warning?: discussionboard_warningUpdateManyWithoutWarning_postNestedInput\n    discussionboard_notification?: discussionboard_notificationUpdateManyWithoutRelated_postNestedInput\n  }\n\n  export type discussionboard_postUncheckedUpdateWithoutDiscussionboard_moderation_actionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    author_member_id?: StringFieldUpdateOperationsInput | string\n    category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_post_attachment?: discussionboard_post_attachmentUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_likes?: discussionboard_likesUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReviewed_postNestedInput\n    discussionboard_warning?: discussionboard_warningUncheckedUpdateManyWithoutWarning_postNestedInput\n    discussionboard_notification?: discussionboard_notificationUncheckedUpdateManyWithoutRelated_postNestedInput\n  }\n\n  export type discussionboard_commentsUpsertWithoutDiscussionboard_moderation_actionInput = {\n    update: XOR<discussionboard_commentsUpdateWithoutDiscussionboard_moderation_actionInput, discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_moderation_actionInput>\n    create: XOR<discussionboard_commentsCreateWithoutDiscussionboard_moderation_actionInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_moderation_actionInput>\n    where?: discussionboard_commentsWhereInput\n  }\n\n  export type discussionboard_commentsUpdateToOneWithWhereWithoutDiscussionboard_moderation_actionInput = {\n    where?: discussionboard_commentsWhereInput\n    data: XOR<discussionboard_commentsUpdateWithoutDiscussionboard_moderation_actionInput, discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_moderation_actionInput>\n  }\n\n  export type discussionboard_commentsUpdateWithoutDiscussionboard_moderation_actionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    is_edited?: BoolFieldUpdateOperationsInput | boolean\n    is_deleted?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    post?: discussionboard_postUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput\n    author?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput\n    parent_comment?: discussionboard_commentsUpdateOneWithoutRecursiveNestedInput\n    recursive?: discussionboard_commentsUpdateManyWithoutParent_commentNestedInput\n    discussionboard_likes?: discussionboard_likesUpdateManyWithoutCommentNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutCommentNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReviewed_commentNestedInput\n    discussionboard_warning?: discussionboard_warningUpdateManyWithoutWarning_commentNestedInput\n    discussionboard_notification?: discussionboard_notificationUpdateManyWithoutRelated_commentNestedInput\n  }\n\n  export type discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_moderation_actionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    author_id?: StringFieldUpdateOperationsInput | string\n    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    content?: StringFieldUpdateOperationsInput | string\n    is_edited?: BoolFieldUpdateOperationsInput | boolean\n    is_deleted?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    recursive?: discussionboard_commentsUncheckedUpdateManyWithoutParent_commentNestedInput\n    discussionboard_likes?: discussionboard_likesUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReviewed_commentNestedInput\n    discussionboard_warning?: discussionboard_warningUncheckedUpdateManyWithoutWarning_commentNestedInput\n    discussionboard_notification?: discussionboard_notificationUncheckedUpdateManyWithoutRelated_commentNestedInput\n  }\n\n  export type discussionboard_reportsCreateWithoutDiscussionboard_report_reviewInput = {\n    id: string\n    reason_code: string\n    reason_details?: string | null\n    created_at: Date | string\n    deleted_at?: Date | string | null\n    user: discussionboard_userCreateNestedOneWithoutDiscussionboard_reportsInput\n    post?: discussionboard_postCreateNestedOneWithoutDiscussionboard_reportsInput\n    comment?: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_reportsInput\n  }\n\n  export type discussionboard_reportsUncheckedCreateWithoutDiscussionboard_report_reviewInput = {\n    id: string\n    user_id: string\n    post_id?: string | null\n    comment_id?: string | null\n    reason_code: string\n    reason_details?: string | null\n    created_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type discussionboard_reportsCreateOrConnectWithoutDiscussionboard_report_reviewInput = {\n    where: discussionboard_reportsWhereUniqueInput\n    create: XOR<discussionboard_reportsCreateWithoutDiscussionboard_report_reviewInput, discussionboard_reportsUncheckedCreateWithoutDiscussionboard_report_reviewInput>\n  }\n\n  export type discussionboard_userCreateWithoutDiscussionboard_report_reviewInput = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_user_profile?: discussionboard_user_profileCreateNestedOneWithoutUser_profile_user_idInput\n    discussionboard_member?: discussionboard_memberCreateNestedOneWithoutMember_user_idInput\n    discussionboard_moderator?: discussionboard_moderatorCreateNestedOneWithoutModerator_user_idInput\n    discussionboard_admin?: discussionboard_adminCreateNestedOneWithoutAdmin_user_idInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_likes?: discussionboard_likesCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutUserInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionCreateNestedManyWithoutActorInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionCreateNestedManyWithoutTarget_userInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningCreateNestedManyWithoutIssuerInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningCreateNestedManyWithoutRecipientInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banCreateNestedManyWithoutBanned_userInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banCreateNestedManyWithoutBan_actorInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationCreateNestedManyWithoutRecipient_userInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationCreateNestedManyWithoutActor_userInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceCreateNestedOneWithoutUserInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logCreateNestedManyWithoutFk_audit_actor_userInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logCreateNestedManyWithoutFk_audit_target_userInput\n  }\n\n  export type discussionboard_userUncheckedCreateWithoutDiscussionboard_report_reviewInput = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUncheckedCreateNestedOneWithoutUser_profile_user_idInput\n    discussionboard_member?: discussionboard_memberUncheckedCreateNestedOneWithoutMember_user_idInput\n    discussionboard_moderator?: discussionboard_moderatorUncheckedCreateNestedOneWithoutModerator_user_idInput\n    discussionboard_admin?: discussionboard_adminUncheckedCreateNestedOneWithoutAdmin_user_idInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_likes?: discussionboard_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutActorInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutTarget_userInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUncheckedCreateNestedManyWithoutIssuerInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUncheckedCreateNestedManyWithoutRecipientInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUncheckedCreateNestedManyWithoutBanned_userInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUncheckedCreateNestedManyWithoutBan_actorInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUncheckedCreateNestedManyWithoutRecipient_userInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUncheckedCreateNestedManyWithoutActor_userInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUncheckedCreateNestedOneWithoutUserInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUncheckedCreateNestedManyWithoutFk_audit_actor_userInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUncheckedCreateNestedManyWithoutFk_audit_target_userInput\n  }\n\n  export type discussionboard_userCreateOrConnectWithoutDiscussionboard_report_reviewInput = {\n    where: discussionboard_userWhereUniqueInput\n    create: XOR<discussionboard_userCreateWithoutDiscussionboard_report_reviewInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_report_reviewInput>\n  }\n\n  export type discussionboard_postCreateWithoutDiscussionboard_report_reviewInput = {\n    id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    member: discussionboard_memberCreateNestedOneWithoutDiscussionboard_postInput\n    category: discussionboard_post_categoryCreateNestedOneWithoutDiscussionboard_postInput\n    discussionboard_post_attachment?: discussionboard_post_attachmentCreateNestedManyWithoutPostInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutPostInput\n    discussionboard_likes?: discussionboard_likesCreateNestedManyWithoutPostInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutPostInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionCreateNestedManyWithoutModerated_postInput\n    discussionboard_warning?: discussionboard_warningCreateNestedManyWithoutWarning_postInput\n    discussionboard_notification?: discussionboard_notificationCreateNestedManyWithoutRelated_postInput\n  }\n\n  export type discussionboard_postUncheckedCreateWithoutDiscussionboard_report_reviewInput = {\n    id: string\n    author_member_id: string\n    category_id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussionboard_post_attachment?: discussionboard_post_attachmentUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_likes?: discussionboard_likesUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutModerated_postInput\n    discussionboard_warning?: discussionboard_warningUncheckedCreateNestedManyWithoutWarning_postInput\n    discussionboard_notification?: discussionboard_notificationUncheckedCreateNestedManyWithoutRelated_postInput\n  }\n\n  export type discussionboard_postCreateOrConnectWithoutDiscussionboard_report_reviewInput = {\n    where: discussionboard_postWhereUniqueInput\n    create: XOR<discussionboard_postCreateWithoutDiscussionboard_report_reviewInput, discussionboard_postUncheckedCreateWithoutDiscussionboard_report_reviewInput>\n  }\n\n  export type discussionboard_commentsCreateWithoutDiscussionboard_report_reviewInput = {\n    id: string\n    content: string\n    is_edited: boolean\n    is_deleted: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    post: discussionboard_postCreateNestedOneWithoutDiscussionboard_commentsInput\n    author: discussionboard_userCreateNestedOneWithoutDiscussionboard_commentsInput\n    parent_comment?: discussionboard_commentsCreateNestedOneWithoutRecursiveInput\n    recursive?: discussionboard_commentsCreateNestedManyWithoutParent_commentInput\n    discussionboard_likes?: discussionboard_likesCreateNestedManyWithoutCommentInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutCommentInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionCreateNestedManyWithoutModerated_commentInput\n    discussionboard_warning?: discussionboard_warningCreateNestedManyWithoutWarning_commentInput\n    discussionboard_notification?: discussionboard_notificationCreateNestedManyWithoutRelated_commentInput\n  }\n\n  export type discussionboard_commentsUncheckedCreateWithoutDiscussionboard_report_reviewInput = {\n    id: string\n    post_id: string\n    author_id: string\n    parent_comment_id?: string | null\n    content: string\n    is_edited: boolean\n    is_deleted: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    recursive?: discussionboard_commentsUncheckedCreateNestedManyWithoutParent_commentInput\n    discussionboard_likes?: discussionboard_likesUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutModerated_commentInput\n    discussionboard_warning?: discussionboard_warningUncheckedCreateNestedManyWithoutWarning_commentInput\n    discussionboard_notification?: discussionboard_notificationUncheckedCreateNestedManyWithoutRelated_commentInput\n  }\n\n  export type discussionboard_commentsCreateOrConnectWithoutDiscussionboard_report_reviewInput = {\n    where: discussionboard_commentsWhereUniqueInput\n    create: XOR<discussionboard_commentsCreateWithoutDiscussionboard_report_reviewInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_report_reviewInput>\n  }\n\n  export type discussionboard_reportsUpsertWithoutDiscussionboard_report_reviewInput = {\n    update: XOR<discussionboard_reportsUpdateWithoutDiscussionboard_report_reviewInput, discussionboard_reportsUncheckedUpdateWithoutDiscussionboard_report_reviewInput>\n    create: XOR<discussionboard_reportsCreateWithoutDiscussionboard_report_reviewInput, discussionboard_reportsUncheckedCreateWithoutDiscussionboard_report_reviewInput>\n    where?: discussionboard_reportsWhereInput\n  }\n\n  export type discussionboard_reportsUpdateToOneWithWhereWithoutDiscussionboard_report_reviewInput = {\n    where?: discussionboard_reportsWhereInput\n    data: XOR<discussionboard_reportsUpdateWithoutDiscussionboard_report_reviewInput, discussionboard_reportsUncheckedUpdateWithoutDiscussionboard_report_reviewInput>\n  }\n\n  export type discussionboard_reportsUpdateWithoutDiscussionboard_report_reviewInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reason_code?: StringFieldUpdateOperationsInput | string\n    reason_details?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    user?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_reportsNestedInput\n    post?: discussionboard_postUpdateOneWithoutDiscussionboard_reportsNestedInput\n    comment?: discussionboard_commentsUpdateOneWithoutDiscussionboard_reportsNestedInput\n  }\n\n  export type discussionboard_reportsUncheckedUpdateWithoutDiscussionboard_report_reviewInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason_code?: StringFieldUpdateOperationsInput | string\n    reason_details?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_userUpsertWithoutDiscussionboard_report_reviewInput = {\n    update: XOR<discussionboard_userUpdateWithoutDiscussionboard_report_reviewInput, discussionboard_userUncheckedUpdateWithoutDiscussionboard_report_reviewInput>\n    create: XOR<discussionboard_userCreateWithoutDiscussionboard_report_reviewInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_report_reviewInput>\n    where?: discussionboard_userWhereInput\n  }\n\n  export type discussionboard_userUpdateToOneWithWhereWithoutDiscussionboard_report_reviewInput = {\n    where?: discussionboard_userWhereInput\n    data: XOR<discussionboard_userUpdateWithoutDiscussionboard_report_reviewInput, discussionboard_userUncheckedUpdateWithoutDiscussionboard_report_reviewInput>\n  }\n\n  export type discussionboard_userUpdateWithoutDiscussionboard_report_reviewInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUpdateOneWithoutUser_profile_user_idNestedInput\n    discussionboard_member?: discussionboard_memberUpdateOneWithoutMember_user_idNestedInput\n    discussionboard_moderator?: discussionboard_moderatorUpdateOneWithoutModerator_user_idNestedInput\n    discussionboard_admin?: discussionboard_adminUpdateOneWithoutAdmin_user_idNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_likes?: discussionboard_likesUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUpdateManyWithoutActorNestedInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUpdateManyWithoutTarget_userNestedInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUpdateManyWithoutIssuerNestedInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUpdateManyWithoutRecipientNestedInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUpdateManyWithoutBanned_userNestedInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUpdateManyWithoutBan_actorNestedInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUpdateManyWithoutRecipient_userNestedInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUpdateManyWithoutActor_userNestedInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUpdateOneWithoutUserNestedInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUpdateManyWithoutFk_audit_actor_userNestedInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUpdateManyWithoutFk_audit_target_userNestedInput\n  }\n\n  export type discussionboard_userUncheckedUpdateWithoutDiscussionboard_report_reviewInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUncheckedUpdateOneWithoutUser_profile_user_idNestedInput\n    discussionboard_member?: discussionboard_memberUncheckedUpdateOneWithoutMember_user_idNestedInput\n    discussionboard_moderator?: discussionboard_moderatorUncheckedUpdateOneWithoutModerator_user_idNestedInput\n    discussionboard_admin?: discussionboard_adminUncheckedUpdateOneWithoutAdmin_user_idNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_likes?: discussionboard_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUncheckedUpdateManyWithoutActorNestedInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUncheckedUpdateManyWithoutTarget_userNestedInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUncheckedUpdateManyWithoutIssuerNestedInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUncheckedUpdateManyWithoutRecipientNestedInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUncheckedUpdateManyWithoutBanned_userNestedInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUncheckedUpdateManyWithoutBan_actorNestedInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUncheckedUpdateManyWithoutRecipient_userNestedInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUncheckedUpdateManyWithoutActor_userNestedInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUncheckedUpdateOneWithoutUserNestedInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_actor_userNestedInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_target_userNestedInput\n  }\n\n  export type discussionboard_postUpsertWithoutDiscussionboard_report_reviewInput = {\n    update: XOR<discussionboard_postUpdateWithoutDiscussionboard_report_reviewInput, discussionboard_postUncheckedUpdateWithoutDiscussionboard_report_reviewInput>\n    create: XOR<discussionboard_postCreateWithoutDiscussionboard_report_reviewInput, discussionboard_postUncheckedCreateWithoutDiscussionboard_report_reviewInput>\n    where?: discussionboard_postWhereInput\n  }\n\n  export type discussionboard_postUpdateToOneWithWhereWithoutDiscussionboard_report_reviewInput = {\n    where?: discussionboard_postWhereInput\n    data: XOR<discussionboard_postUpdateWithoutDiscussionboard_report_reviewInput, discussionboard_postUncheckedUpdateWithoutDiscussionboard_report_reviewInput>\n  }\n\n  export type discussionboard_postUpdateWithoutDiscussionboard_report_reviewInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    member?: discussionboard_memberUpdateOneRequiredWithoutDiscussionboard_postNestedInput\n    category?: discussionboard_post_categoryUpdateOneRequiredWithoutDiscussionboard_postNestedInput\n    discussionboard_post_attachment?: discussionboard_post_attachmentUpdateManyWithoutPostNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutPostNestedInput\n    discussionboard_likes?: discussionboard_likesUpdateManyWithoutPostNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutPostNestedInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUpdateManyWithoutModerated_postNestedInput\n    discussionboard_warning?: discussionboard_warningUpdateManyWithoutWarning_postNestedInput\n    discussionboard_notification?: discussionboard_notificationUpdateManyWithoutRelated_postNestedInput\n  }\n\n  export type discussionboard_postUncheckedUpdateWithoutDiscussionboard_report_reviewInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    author_member_id?: StringFieldUpdateOperationsInput | string\n    category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_post_attachment?: discussionboard_post_attachmentUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_likes?: discussionboard_likesUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUncheckedUpdateManyWithoutModerated_postNestedInput\n    discussionboard_warning?: discussionboard_warningUncheckedUpdateManyWithoutWarning_postNestedInput\n    discussionboard_notification?: discussionboard_notificationUncheckedUpdateManyWithoutRelated_postNestedInput\n  }\n\n  export type discussionboard_commentsUpsertWithoutDiscussionboard_report_reviewInput = {\n    update: XOR<discussionboard_commentsUpdateWithoutDiscussionboard_report_reviewInput, discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_report_reviewInput>\n    create: XOR<discussionboard_commentsCreateWithoutDiscussionboard_report_reviewInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_report_reviewInput>\n    where?: discussionboard_commentsWhereInput\n  }\n\n  export type discussionboard_commentsUpdateToOneWithWhereWithoutDiscussionboard_report_reviewInput = {\n    where?: discussionboard_commentsWhereInput\n    data: XOR<discussionboard_commentsUpdateWithoutDiscussionboard_report_reviewInput, discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_report_reviewInput>\n  }\n\n  export type discussionboard_commentsUpdateWithoutDiscussionboard_report_reviewInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    is_edited?: BoolFieldUpdateOperationsInput | boolean\n    is_deleted?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    post?: discussionboard_postUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput\n    author?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput\n    parent_comment?: discussionboard_commentsUpdateOneWithoutRecursiveNestedInput\n    recursive?: discussionboard_commentsUpdateManyWithoutParent_commentNestedInput\n    discussionboard_likes?: discussionboard_likesUpdateManyWithoutCommentNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutCommentNestedInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUpdateManyWithoutModerated_commentNestedInput\n    discussionboard_warning?: discussionboard_warningUpdateManyWithoutWarning_commentNestedInput\n    discussionboard_notification?: discussionboard_notificationUpdateManyWithoutRelated_commentNestedInput\n  }\n\n  export type discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_report_reviewInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    author_id?: StringFieldUpdateOperationsInput | string\n    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    content?: StringFieldUpdateOperationsInput | string\n    is_edited?: BoolFieldUpdateOperationsInput | boolean\n    is_deleted?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    recursive?: discussionboard_commentsUncheckedUpdateManyWithoutParent_commentNestedInput\n    discussionboard_likes?: discussionboard_likesUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUncheckedUpdateManyWithoutModerated_commentNestedInput\n    discussionboard_warning?: discussionboard_warningUncheckedUpdateManyWithoutWarning_commentNestedInput\n    discussionboard_notification?: discussionboard_notificationUncheckedUpdateManyWithoutRelated_commentNestedInput\n  }\n\n  export type discussionboard_userCreateWithoutDiscussionboard_warning_of_issued_by_idInput = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_user_profile?: discussionboard_user_profileCreateNestedOneWithoutUser_profile_user_idInput\n    discussionboard_member?: discussionboard_memberCreateNestedOneWithoutMember_user_idInput\n    discussionboard_moderator?: discussionboard_moderatorCreateNestedOneWithoutModerator_user_idInput\n    discussionboard_admin?: discussionboard_adminCreateNestedOneWithoutAdmin_user_idInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_likes?: discussionboard_likesCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutUserInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionCreateNestedManyWithoutActorInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionCreateNestedManyWithoutTarget_userInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReviewerInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningCreateNestedManyWithoutRecipientInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banCreateNestedManyWithoutBanned_userInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banCreateNestedManyWithoutBan_actorInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationCreateNestedManyWithoutRecipient_userInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationCreateNestedManyWithoutActor_userInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceCreateNestedOneWithoutUserInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logCreateNestedManyWithoutFk_audit_actor_userInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logCreateNestedManyWithoutFk_audit_target_userInput\n  }\n\n  export type discussionboard_userUncheckedCreateWithoutDiscussionboard_warning_of_issued_by_idInput = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUncheckedCreateNestedOneWithoutUser_profile_user_idInput\n    discussionboard_member?: discussionboard_memberUncheckedCreateNestedOneWithoutMember_user_idInput\n    discussionboard_moderator?: discussionboard_moderatorUncheckedCreateNestedOneWithoutModerator_user_idInput\n    discussionboard_admin?: discussionboard_adminUncheckedCreateNestedOneWithoutAdmin_user_idInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_likes?: discussionboard_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutActorInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutTarget_userInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewerInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUncheckedCreateNestedManyWithoutRecipientInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUncheckedCreateNestedManyWithoutBanned_userInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUncheckedCreateNestedManyWithoutBan_actorInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUncheckedCreateNestedManyWithoutRecipient_userInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUncheckedCreateNestedManyWithoutActor_userInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUncheckedCreateNestedOneWithoutUserInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUncheckedCreateNestedManyWithoutFk_audit_actor_userInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUncheckedCreateNestedManyWithoutFk_audit_target_userInput\n  }\n\n  export type discussionboard_userCreateOrConnectWithoutDiscussionboard_warning_of_issued_by_idInput = {\n    where: discussionboard_userWhereUniqueInput\n    create: XOR<discussionboard_userCreateWithoutDiscussionboard_warning_of_issued_by_idInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_warning_of_issued_by_idInput>\n  }\n\n  export type discussionboard_userCreateWithoutDiscussionboard_warning_of_issued_to_idInput = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_user_profile?: discussionboard_user_profileCreateNestedOneWithoutUser_profile_user_idInput\n    discussionboard_member?: discussionboard_memberCreateNestedOneWithoutMember_user_idInput\n    discussionboard_moderator?: discussionboard_moderatorCreateNestedOneWithoutModerator_user_idInput\n    discussionboard_admin?: discussionboard_adminCreateNestedOneWithoutAdmin_user_idInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_likes?: discussionboard_likesCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutUserInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionCreateNestedManyWithoutActorInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionCreateNestedManyWithoutTarget_userInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReviewerInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningCreateNestedManyWithoutIssuerInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banCreateNestedManyWithoutBanned_userInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banCreateNestedManyWithoutBan_actorInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationCreateNestedManyWithoutRecipient_userInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationCreateNestedManyWithoutActor_userInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceCreateNestedOneWithoutUserInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logCreateNestedManyWithoutFk_audit_actor_userInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logCreateNestedManyWithoutFk_audit_target_userInput\n  }\n\n  export type discussionboard_userUncheckedCreateWithoutDiscussionboard_warning_of_issued_to_idInput = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUncheckedCreateNestedOneWithoutUser_profile_user_idInput\n    discussionboard_member?: discussionboard_memberUncheckedCreateNestedOneWithoutMember_user_idInput\n    discussionboard_moderator?: discussionboard_moderatorUncheckedCreateNestedOneWithoutModerator_user_idInput\n    discussionboard_admin?: discussionboard_adminUncheckedCreateNestedOneWithoutAdmin_user_idInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_likes?: discussionboard_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutActorInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutTarget_userInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewerInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUncheckedCreateNestedManyWithoutIssuerInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUncheckedCreateNestedManyWithoutBanned_userInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUncheckedCreateNestedManyWithoutBan_actorInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUncheckedCreateNestedManyWithoutRecipient_userInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUncheckedCreateNestedManyWithoutActor_userInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUncheckedCreateNestedOneWithoutUserInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUncheckedCreateNestedManyWithoutFk_audit_actor_userInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUncheckedCreateNestedManyWithoutFk_audit_target_userInput\n  }\n\n  export type discussionboard_userCreateOrConnectWithoutDiscussionboard_warning_of_issued_to_idInput = {\n    where: discussionboard_userWhereUniqueInput\n    create: XOR<discussionboard_userCreateWithoutDiscussionboard_warning_of_issued_to_idInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_warning_of_issued_to_idInput>\n  }\n\n  export type discussionboard_postCreateWithoutDiscussionboard_warningInput = {\n    id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    member: discussionboard_memberCreateNestedOneWithoutDiscussionboard_postInput\n    category: discussionboard_post_categoryCreateNestedOneWithoutDiscussionboard_postInput\n    discussionboard_post_attachment?: discussionboard_post_attachmentCreateNestedManyWithoutPostInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutPostInput\n    discussionboard_likes?: discussionboard_likesCreateNestedManyWithoutPostInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutPostInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionCreateNestedManyWithoutModerated_postInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReviewed_postInput\n    discussionboard_notification?: discussionboard_notificationCreateNestedManyWithoutRelated_postInput\n  }\n\n  export type discussionboard_postUncheckedCreateWithoutDiscussionboard_warningInput = {\n    id: string\n    author_member_id: string\n    category_id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussionboard_post_attachment?: discussionboard_post_attachmentUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_likes?: discussionboard_likesUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutModerated_postInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewed_postInput\n    discussionboard_notification?: discussionboard_notificationUncheckedCreateNestedManyWithoutRelated_postInput\n  }\n\n  export type discussionboard_postCreateOrConnectWithoutDiscussionboard_warningInput = {\n    where: discussionboard_postWhereUniqueInput\n    create: XOR<discussionboard_postCreateWithoutDiscussionboard_warningInput, discussionboard_postUncheckedCreateWithoutDiscussionboard_warningInput>\n  }\n\n  export type discussionboard_commentsCreateWithoutDiscussionboard_warningInput = {\n    id: string\n    content: string\n    is_edited: boolean\n    is_deleted: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    post: discussionboard_postCreateNestedOneWithoutDiscussionboard_commentsInput\n    author: discussionboard_userCreateNestedOneWithoutDiscussionboard_commentsInput\n    parent_comment?: discussionboard_commentsCreateNestedOneWithoutRecursiveInput\n    recursive?: discussionboard_commentsCreateNestedManyWithoutParent_commentInput\n    discussionboard_likes?: discussionboard_likesCreateNestedManyWithoutCommentInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutCommentInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionCreateNestedManyWithoutModerated_commentInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReviewed_commentInput\n    discussionboard_notification?: discussionboard_notificationCreateNestedManyWithoutRelated_commentInput\n  }\n\n  export type discussionboard_commentsUncheckedCreateWithoutDiscussionboard_warningInput = {\n    id: string\n    post_id: string\n    author_id: string\n    parent_comment_id?: string | null\n    content: string\n    is_edited: boolean\n    is_deleted: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    recursive?: discussionboard_commentsUncheckedCreateNestedManyWithoutParent_commentInput\n    discussionboard_likes?: discussionboard_likesUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutModerated_commentInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewed_commentInput\n    discussionboard_notification?: discussionboard_notificationUncheckedCreateNestedManyWithoutRelated_commentInput\n  }\n\n  export type discussionboard_commentsCreateOrConnectWithoutDiscussionboard_warningInput = {\n    where: discussionboard_commentsWhereUniqueInput\n    create: XOR<discussionboard_commentsCreateWithoutDiscussionboard_warningInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_warningInput>\n  }\n\n  export type discussionboard_banCreateWithoutRelated_warningInput = {\n    id: string\n    ban_type: string\n    reason: string\n    issued_at: Date | string\n    expires_at?: Date | string | null\n    banned_user: discussionboard_userCreateNestedOneWithoutDiscussionboard_ban_of_banned_user_idInput\n    ban_actor: discussionboard_userCreateNestedOneWithoutDiscussionboard_ban_of_banned_by_idInput\n  }\n\n  export type discussionboard_banUncheckedCreateWithoutRelated_warningInput = {\n    id: string\n    banned_user_id: string\n    banned_by_id: string\n    ban_type: string\n    reason: string\n    issued_at: Date | string\n    expires_at?: Date | string | null\n  }\n\n  export type discussionboard_banCreateOrConnectWithoutRelated_warningInput = {\n    where: discussionboard_banWhereUniqueInput\n    create: XOR<discussionboard_banCreateWithoutRelated_warningInput, discussionboard_banUncheckedCreateWithoutRelated_warningInput>\n  }\n\n  export type discussionboard_banCreateManyRelated_warningInputEnvelope = {\n    data: discussionboard_banCreateManyRelated_warningInput | discussionboard_banCreateManyRelated_warningInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_userUpsertWithoutDiscussionboard_warning_of_issued_by_idInput = {\n    update: XOR<discussionboard_userUpdateWithoutDiscussionboard_warning_of_issued_by_idInput, discussionboard_userUncheckedUpdateWithoutDiscussionboard_warning_of_issued_by_idInput>\n    create: XOR<discussionboard_userCreateWithoutDiscussionboard_warning_of_issued_by_idInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_warning_of_issued_by_idInput>\n    where?: discussionboard_userWhereInput\n  }\n\n  export type discussionboard_userUpdateToOneWithWhereWithoutDiscussionboard_warning_of_issued_by_idInput = {\n    where?: discussionboard_userWhereInput\n    data: XOR<discussionboard_userUpdateWithoutDiscussionboard_warning_of_issued_by_idInput, discussionboard_userUncheckedUpdateWithoutDiscussionboard_warning_of_issued_by_idInput>\n  }\n\n  export type discussionboard_userUpdateWithoutDiscussionboard_warning_of_issued_by_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUpdateOneWithoutUser_profile_user_idNestedInput\n    discussionboard_member?: discussionboard_memberUpdateOneWithoutMember_user_idNestedInput\n    discussionboard_moderator?: discussionboard_moderatorUpdateOneWithoutModerator_user_idNestedInput\n    discussionboard_admin?: discussionboard_adminUpdateOneWithoutAdmin_user_idNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_likes?: discussionboard_likesUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUpdateManyWithoutActorNestedInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUpdateManyWithoutTarget_userNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReviewerNestedInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUpdateManyWithoutRecipientNestedInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUpdateManyWithoutBanned_userNestedInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUpdateManyWithoutBan_actorNestedInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUpdateManyWithoutRecipient_userNestedInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUpdateManyWithoutActor_userNestedInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUpdateOneWithoutUserNestedInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUpdateManyWithoutFk_audit_actor_userNestedInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUpdateManyWithoutFk_audit_target_userNestedInput\n  }\n\n  export type discussionboard_userUncheckedUpdateWithoutDiscussionboard_warning_of_issued_by_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUncheckedUpdateOneWithoutUser_profile_user_idNestedInput\n    discussionboard_member?: discussionboard_memberUncheckedUpdateOneWithoutMember_user_idNestedInput\n    discussionboard_moderator?: discussionboard_moderatorUncheckedUpdateOneWithoutModerator_user_idNestedInput\n    discussionboard_admin?: discussionboard_adminUncheckedUpdateOneWithoutAdmin_user_idNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_likes?: discussionboard_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUncheckedUpdateManyWithoutActorNestedInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUncheckedUpdateManyWithoutTarget_userNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReviewerNestedInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUncheckedUpdateManyWithoutRecipientNestedInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUncheckedUpdateManyWithoutBanned_userNestedInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUncheckedUpdateManyWithoutBan_actorNestedInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUncheckedUpdateManyWithoutRecipient_userNestedInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUncheckedUpdateManyWithoutActor_userNestedInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUncheckedUpdateOneWithoutUserNestedInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_actor_userNestedInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_target_userNestedInput\n  }\n\n  export type discussionboard_userUpsertWithoutDiscussionboard_warning_of_issued_to_idInput = {\n    update: XOR<discussionboard_userUpdateWithoutDiscussionboard_warning_of_issued_to_idInput, discussionboard_userUncheckedUpdateWithoutDiscussionboard_warning_of_issued_to_idInput>\n    create: XOR<discussionboard_userCreateWithoutDiscussionboard_warning_of_issued_to_idInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_warning_of_issued_to_idInput>\n    where?: discussionboard_userWhereInput\n  }\n\n  export type discussionboard_userUpdateToOneWithWhereWithoutDiscussionboard_warning_of_issued_to_idInput = {\n    where?: discussionboard_userWhereInput\n    data: XOR<discussionboard_userUpdateWithoutDiscussionboard_warning_of_issued_to_idInput, discussionboard_userUncheckedUpdateWithoutDiscussionboard_warning_of_issued_to_idInput>\n  }\n\n  export type discussionboard_userUpdateWithoutDiscussionboard_warning_of_issued_to_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUpdateOneWithoutUser_profile_user_idNestedInput\n    discussionboard_member?: discussionboard_memberUpdateOneWithoutMember_user_idNestedInput\n    discussionboard_moderator?: discussionboard_moderatorUpdateOneWithoutModerator_user_idNestedInput\n    discussionboard_admin?: discussionboard_adminUpdateOneWithoutAdmin_user_idNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_likes?: discussionboard_likesUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUpdateManyWithoutActorNestedInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUpdateManyWithoutTarget_userNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReviewerNestedInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUpdateManyWithoutIssuerNestedInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUpdateManyWithoutBanned_userNestedInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUpdateManyWithoutBan_actorNestedInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUpdateManyWithoutRecipient_userNestedInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUpdateManyWithoutActor_userNestedInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUpdateOneWithoutUserNestedInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUpdateManyWithoutFk_audit_actor_userNestedInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUpdateManyWithoutFk_audit_target_userNestedInput\n  }\n\n  export type discussionboard_userUncheckedUpdateWithoutDiscussionboard_warning_of_issued_to_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUncheckedUpdateOneWithoutUser_profile_user_idNestedInput\n    discussionboard_member?: discussionboard_memberUncheckedUpdateOneWithoutMember_user_idNestedInput\n    discussionboard_moderator?: discussionboard_moderatorUncheckedUpdateOneWithoutModerator_user_idNestedInput\n    discussionboard_admin?: discussionboard_adminUncheckedUpdateOneWithoutAdmin_user_idNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_likes?: discussionboard_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUncheckedUpdateManyWithoutActorNestedInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUncheckedUpdateManyWithoutTarget_userNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReviewerNestedInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUncheckedUpdateManyWithoutIssuerNestedInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUncheckedUpdateManyWithoutBanned_userNestedInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUncheckedUpdateManyWithoutBan_actorNestedInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUncheckedUpdateManyWithoutRecipient_userNestedInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUncheckedUpdateManyWithoutActor_userNestedInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUncheckedUpdateOneWithoutUserNestedInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_actor_userNestedInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_target_userNestedInput\n  }\n\n  export type discussionboard_postUpsertWithoutDiscussionboard_warningInput = {\n    update: XOR<discussionboard_postUpdateWithoutDiscussionboard_warningInput, discussionboard_postUncheckedUpdateWithoutDiscussionboard_warningInput>\n    create: XOR<discussionboard_postCreateWithoutDiscussionboard_warningInput, discussionboard_postUncheckedCreateWithoutDiscussionboard_warningInput>\n    where?: discussionboard_postWhereInput\n  }\n\n  export type discussionboard_postUpdateToOneWithWhereWithoutDiscussionboard_warningInput = {\n    where?: discussionboard_postWhereInput\n    data: XOR<discussionboard_postUpdateWithoutDiscussionboard_warningInput, discussionboard_postUncheckedUpdateWithoutDiscussionboard_warningInput>\n  }\n\n  export type discussionboard_postUpdateWithoutDiscussionboard_warningInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    member?: discussionboard_memberUpdateOneRequiredWithoutDiscussionboard_postNestedInput\n    category?: discussionboard_post_categoryUpdateOneRequiredWithoutDiscussionboard_postNestedInput\n    discussionboard_post_attachment?: discussionboard_post_attachmentUpdateManyWithoutPostNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutPostNestedInput\n    discussionboard_likes?: discussionboard_likesUpdateManyWithoutPostNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutPostNestedInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUpdateManyWithoutModerated_postNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReviewed_postNestedInput\n    discussionboard_notification?: discussionboard_notificationUpdateManyWithoutRelated_postNestedInput\n  }\n\n  export type discussionboard_postUncheckedUpdateWithoutDiscussionboard_warningInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    author_member_id?: StringFieldUpdateOperationsInput | string\n    category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_post_attachment?: discussionboard_post_attachmentUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_likes?: discussionboard_likesUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUncheckedUpdateManyWithoutModerated_postNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReviewed_postNestedInput\n    discussionboard_notification?: discussionboard_notificationUncheckedUpdateManyWithoutRelated_postNestedInput\n  }\n\n  export type discussionboard_commentsUpsertWithoutDiscussionboard_warningInput = {\n    update: XOR<discussionboard_commentsUpdateWithoutDiscussionboard_warningInput, discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_warningInput>\n    create: XOR<discussionboard_commentsCreateWithoutDiscussionboard_warningInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_warningInput>\n    where?: discussionboard_commentsWhereInput\n  }\n\n  export type discussionboard_commentsUpdateToOneWithWhereWithoutDiscussionboard_warningInput = {\n    where?: discussionboard_commentsWhereInput\n    data: XOR<discussionboard_commentsUpdateWithoutDiscussionboard_warningInput, discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_warningInput>\n  }\n\n  export type discussionboard_commentsUpdateWithoutDiscussionboard_warningInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    is_edited?: BoolFieldUpdateOperationsInput | boolean\n    is_deleted?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    post?: discussionboard_postUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput\n    author?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput\n    parent_comment?: discussionboard_commentsUpdateOneWithoutRecursiveNestedInput\n    recursive?: discussionboard_commentsUpdateManyWithoutParent_commentNestedInput\n    discussionboard_likes?: discussionboard_likesUpdateManyWithoutCommentNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutCommentNestedInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUpdateManyWithoutModerated_commentNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReviewed_commentNestedInput\n    discussionboard_notification?: discussionboard_notificationUpdateManyWithoutRelated_commentNestedInput\n  }\n\n  export type discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_warningInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    author_id?: StringFieldUpdateOperationsInput | string\n    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    content?: StringFieldUpdateOperationsInput | string\n    is_edited?: BoolFieldUpdateOperationsInput | boolean\n    is_deleted?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    recursive?: discussionboard_commentsUncheckedUpdateManyWithoutParent_commentNestedInput\n    discussionboard_likes?: discussionboard_likesUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUncheckedUpdateManyWithoutModerated_commentNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReviewed_commentNestedInput\n    discussionboard_notification?: discussionboard_notificationUncheckedUpdateManyWithoutRelated_commentNestedInput\n  }\n\n  export type discussionboard_banUpsertWithWhereUniqueWithoutRelated_warningInput = {\n    where: discussionboard_banWhereUniqueInput\n    update: XOR<discussionboard_banUpdateWithoutRelated_warningInput, discussionboard_banUncheckedUpdateWithoutRelated_warningInput>\n    create: XOR<discussionboard_banCreateWithoutRelated_warningInput, discussionboard_banUncheckedCreateWithoutRelated_warningInput>\n  }\n\n  export type discussionboard_banUpdateWithWhereUniqueWithoutRelated_warningInput = {\n    where: discussionboard_banWhereUniqueInput\n    data: XOR<discussionboard_banUpdateWithoutRelated_warningInput, discussionboard_banUncheckedUpdateWithoutRelated_warningInput>\n  }\n\n  export type discussionboard_banUpdateManyWithWhereWithoutRelated_warningInput = {\n    where: discussionboard_banScalarWhereInput\n    data: XOR<discussionboard_banUpdateManyMutationInput, discussionboard_banUncheckedUpdateManyWithoutRelated_warningInput>\n  }\n\n  export type discussionboard_userCreateWithoutDiscussionboard_ban_of_banned_user_idInput = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_user_profile?: discussionboard_user_profileCreateNestedOneWithoutUser_profile_user_idInput\n    discussionboard_member?: discussionboard_memberCreateNestedOneWithoutMember_user_idInput\n    discussionboard_moderator?: discussionboard_moderatorCreateNestedOneWithoutModerator_user_idInput\n    discussionboard_admin?: discussionboard_adminCreateNestedOneWithoutAdmin_user_idInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_likes?: discussionboard_likesCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutUserInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionCreateNestedManyWithoutActorInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionCreateNestedManyWithoutTarget_userInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReviewerInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningCreateNestedManyWithoutIssuerInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningCreateNestedManyWithoutRecipientInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banCreateNestedManyWithoutBan_actorInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationCreateNestedManyWithoutRecipient_userInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationCreateNestedManyWithoutActor_userInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceCreateNestedOneWithoutUserInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logCreateNestedManyWithoutFk_audit_actor_userInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logCreateNestedManyWithoutFk_audit_target_userInput\n  }\n\n  export type discussionboard_userUncheckedCreateWithoutDiscussionboard_ban_of_banned_user_idInput = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUncheckedCreateNestedOneWithoutUser_profile_user_idInput\n    discussionboard_member?: discussionboard_memberUncheckedCreateNestedOneWithoutMember_user_idInput\n    discussionboard_moderator?: discussionboard_moderatorUncheckedCreateNestedOneWithoutModerator_user_idInput\n    discussionboard_admin?: discussionboard_adminUncheckedCreateNestedOneWithoutAdmin_user_idInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_likes?: discussionboard_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutActorInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutTarget_userInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewerInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUncheckedCreateNestedManyWithoutIssuerInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUncheckedCreateNestedManyWithoutRecipientInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUncheckedCreateNestedManyWithoutBan_actorInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUncheckedCreateNestedManyWithoutRecipient_userInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUncheckedCreateNestedManyWithoutActor_userInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUncheckedCreateNestedOneWithoutUserInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUncheckedCreateNestedManyWithoutFk_audit_actor_userInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUncheckedCreateNestedManyWithoutFk_audit_target_userInput\n  }\n\n  export type discussionboard_userCreateOrConnectWithoutDiscussionboard_ban_of_banned_user_idInput = {\n    where: discussionboard_userWhereUniqueInput\n    create: XOR<discussionboard_userCreateWithoutDiscussionboard_ban_of_banned_user_idInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_ban_of_banned_user_idInput>\n  }\n\n  export type discussionboard_userCreateWithoutDiscussionboard_ban_of_banned_by_idInput = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_user_profile?: discussionboard_user_profileCreateNestedOneWithoutUser_profile_user_idInput\n    discussionboard_member?: discussionboard_memberCreateNestedOneWithoutMember_user_idInput\n    discussionboard_moderator?: discussionboard_moderatorCreateNestedOneWithoutModerator_user_idInput\n    discussionboard_admin?: discussionboard_adminCreateNestedOneWithoutAdmin_user_idInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_likes?: discussionboard_likesCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutUserInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionCreateNestedManyWithoutActorInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionCreateNestedManyWithoutTarget_userInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReviewerInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningCreateNestedManyWithoutIssuerInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningCreateNestedManyWithoutRecipientInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banCreateNestedManyWithoutBanned_userInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationCreateNestedManyWithoutRecipient_userInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationCreateNestedManyWithoutActor_userInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceCreateNestedOneWithoutUserInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logCreateNestedManyWithoutFk_audit_actor_userInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logCreateNestedManyWithoutFk_audit_target_userInput\n  }\n\n  export type discussionboard_userUncheckedCreateWithoutDiscussionboard_ban_of_banned_by_idInput = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUncheckedCreateNestedOneWithoutUser_profile_user_idInput\n    discussionboard_member?: discussionboard_memberUncheckedCreateNestedOneWithoutMember_user_idInput\n    discussionboard_moderator?: discussionboard_moderatorUncheckedCreateNestedOneWithoutModerator_user_idInput\n    discussionboard_admin?: discussionboard_adminUncheckedCreateNestedOneWithoutAdmin_user_idInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_likes?: discussionboard_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutActorInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutTarget_userInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewerInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUncheckedCreateNestedManyWithoutIssuerInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUncheckedCreateNestedManyWithoutRecipientInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUncheckedCreateNestedManyWithoutBanned_userInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUncheckedCreateNestedManyWithoutRecipient_userInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUncheckedCreateNestedManyWithoutActor_userInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUncheckedCreateNestedOneWithoutUserInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUncheckedCreateNestedManyWithoutFk_audit_actor_userInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUncheckedCreateNestedManyWithoutFk_audit_target_userInput\n  }\n\n  export type discussionboard_userCreateOrConnectWithoutDiscussionboard_ban_of_banned_by_idInput = {\n    where: discussionboard_userWhereUniqueInput\n    create: XOR<discussionboard_userCreateWithoutDiscussionboard_ban_of_banned_by_idInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_ban_of_banned_by_idInput>\n  }\n\n  export type discussionboard_warningCreateWithoutDiscussionboard_banInput = {\n    id: string\n    warning_type: string\n    message: string\n    issued_at: Date | string\n    issuer: discussionboard_userCreateNestedOneWithoutDiscussionboard_warning_of_issued_by_idInput\n    recipient: discussionboard_userCreateNestedOneWithoutDiscussionboard_warning_of_issued_to_idInput\n    warning_post?: discussionboard_postCreateNestedOneWithoutDiscussionboard_warningInput\n    warning_comment?: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_warningInput\n  }\n\n  export type discussionboard_warningUncheckedCreateWithoutDiscussionboard_banInput = {\n    id: string\n    issued_by_id: string\n    issued_to_id: string\n    post_id?: string | null\n    comment_id?: string | null\n    warning_type: string\n    message: string\n    issued_at: Date | string\n  }\n\n  export type discussionboard_warningCreateOrConnectWithoutDiscussionboard_banInput = {\n    where: discussionboard_warningWhereUniqueInput\n    create: XOR<discussionboard_warningCreateWithoutDiscussionboard_banInput, discussionboard_warningUncheckedCreateWithoutDiscussionboard_banInput>\n  }\n\n  export type discussionboard_userUpsertWithoutDiscussionboard_ban_of_banned_user_idInput = {\n    update: XOR<discussionboard_userUpdateWithoutDiscussionboard_ban_of_banned_user_idInput, discussionboard_userUncheckedUpdateWithoutDiscussionboard_ban_of_banned_user_idInput>\n    create: XOR<discussionboard_userCreateWithoutDiscussionboard_ban_of_banned_user_idInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_ban_of_banned_user_idInput>\n    where?: discussionboard_userWhereInput\n  }\n\n  export type discussionboard_userUpdateToOneWithWhereWithoutDiscussionboard_ban_of_banned_user_idInput = {\n    where?: discussionboard_userWhereInput\n    data: XOR<discussionboard_userUpdateWithoutDiscussionboard_ban_of_banned_user_idInput, discussionboard_userUncheckedUpdateWithoutDiscussionboard_ban_of_banned_user_idInput>\n  }\n\n  export type discussionboard_userUpdateWithoutDiscussionboard_ban_of_banned_user_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUpdateOneWithoutUser_profile_user_idNestedInput\n    discussionboard_member?: discussionboard_memberUpdateOneWithoutMember_user_idNestedInput\n    discussionboard_moderator?: discussionboard_moderatorUpdateOneWithoutModerator_user_idNestedInput\n    discussionboard_admin?: discussionboard_adminUpdateOneWithoutAdmin_user_idNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_likes?: discussionboard_likesUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUpdateManyWithoutActorNestedInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUpdateManyWithoutTarget_userNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReviewerNestedInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUpdateManyWithoutIssuerNestedInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUpdateManyWithoutRecipientNestedInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUpdateManyWithoutBan_actorNestedInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUpdateManyWithoutRecipient_userNestedInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUpdateManyWithoutActor_userNestedInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUpdateOneWithoutUserNestedInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUpdateManyWithoutFk_audit_actor_userNestedInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUpdateManyWithoutFk_audit_target_userNestedInput\n  }\n\n  export type discussionboard_userUncheckedUpdateWithoutDiscussionboard_ban_of_banned_user_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUncheckedUpdateOneWithoutUser_profile_user_idNestedInput\n    discussionboard_member?: discussionboard_memberUncheckedUpdateOneWithoutMember_user_idNestedInput\n    discussionboard_moderator?: discussionboard_moderatorUncheckedUpdateOneWithoutModerator_user_idNestedInput\n    discussionboard_admin?: discussionboard_adminUncheckedUpdateOneWithoutAdmin_user_idNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_likes?: discussionboard_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUncheckedUpdateManyWithoutActorNestedInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUncheckedUpdateManyWithoutTarget_userNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReviewerNestedInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUncheckedUpdateManyWithoutIssuerNestedInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUncheckedUpdateManyWithoutRecipientNestedInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUncheckedUpdateManyWithoutBan_actorNestedInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUncheckedUpdateManyWithoutRecipient_userNestedInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUncheckedUpdateManyWithoutActor_userNestedInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUncheckedUpdateOneWithoutUserNestedInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_actor_userNestedInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_target_userNestedInput\n  }\n\n  export type discussionboard_userUpsertWithoutDiscussionboard_ban_of_banned_by_idInput = {\n    update: XOR<discussionboard_userUpdateWithoutDiscussionboard_ban_of_banned_by_idInput, discussionboard_userUncheckedUpdateWithoutDiscussionboard_ban_of_banned_by_idInput>\n    create: XOR<discussionboard_userCreateWithoutDiscussionboard_ban_of_banned_by_idInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_ban_of_banned_by_idInput>\n    where?: discussionboard_userWhereInput\n  }\n\n  export type discussionboard_userUpdateToOneWithWhereWithoutDiscussionboard_ban_of_banned_by_idInput = {\n    where?: discussionboard_userWhereInput\n    data: XOR<discussionboard_userUpdateWithoutDiscussionboard_ban_of_banned_by_idInput, discussionboard_userUncheckedUpdateWithoutDiscussionboard_ban_of_banned_by_idInput>\n  }\n\n  export type discussionboard_userUpdateWithoutDiscussionboard_ban_of_banned_by_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUpdateOneWithoutUser_profile_user_idNestedInput\n    discussionboard_member?: discussionboard_memberUpdateOneWithoutMember_user_idNestedInput\n    discussionboard_moderator?: discussionboard_moderatorUpdateOneWithoutModerator_user_idNestedInput\n    discussionboard_admin?: discussionboard_adminUpdateOneWithoutAdmin_user_idNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_likes?: discussionboard_likesUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUpdateManyWithoutActorNestedInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUpdateManyWithoutTarget_userNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReviewerNestedInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUpdateManyWithoutIssuerNestedInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUpdateManyWithoutRecipientNestedInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUpdateManyWithoutBanned_userNestedInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUpdateManyWithoutRecipient_userNestedInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUpdateManyWithoutActor_userNestedInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUpdateOneWithoutUserNestedInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUpdateManyWithoutFk_audit_actor_userNestedInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUpdateManyWithoutFk_audit_target_userNestedInput\n  }\n\n  export type discussionboard_userUncheckedUpdateWithoutDiscussionboard_ban_of_banned_by_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUncheckedUpdateOneWithoutUser_profile_user_idNestedInput\n    discussionboard_member?: discussionboard_memberUncheckedUpdateOneWithoutMember_user_idNestedInput\n    discussionboard_moderator?: discussionboard_moderatorUncheckedUpdateOneWithoutModerator_user_idNestedInput\n    discussionboard_admin?: discussionboard_adminUncheckedUpdateOneWithoutAdmin_user_idNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_likes?: discussionboard_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUncheckedUpdateManyWithoutActorNestedInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUncheckedUpdateManyWithoutTarget_userNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReviewerNestedInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUncheckedUpdateManyWithoutIssuerNestedInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUncheckedUpdateManyWithoutRecipientNestedInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUncheckedUpdateManyWithoutBanned_userNestedInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUncheckedUpdateManyWithoutRecipient_userNestedInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUncheckedUpdateManyWithoutActor_userNestedInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUncheckedUpdateOneWithoutUserNestedInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_actor_userNestedInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_target_userNestedInput\n  }\n\n  export type discussionboard_warningUpsertWithoutDiscussionboard_banInput = {\n    update: XOR<discussionboard_warningUpdateWithoutDiscussionboard_banInput, discussionboard_warningUncheckedUpdateWithoutDiscussionboard_banInput>\n    create: XOR<discussionboard_warningCreateWithoutDiscussionboard_banInput, discussionboard_warningUncheckedCreateWithoutDiscussionboard_banInput>\n    where?: discussionboard_warningWhereInput\n  }\n\n  export type discussionboard_warningUpdateToOneWithWhereWithoutDiscussionboard_banInput = {\n    where?: discussionboard_warningWhereInput\n    data: XOR<discussionboard_warningUpdateWithoutDiscussionboard_banInput, discussionboard_warningUncheckedUpdateWithoutDiscussionboard_banInput>\n  }\n\n  export type discussionboard_warningUpdateWithoutDiscussionboard_banInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    warning_type?: StringFieldUpdateOperationsInput | string\n    message?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    issuer?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_warning_of_issued_by_idNestedInput\n    recipient?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_warning_of_issued_to_idNestedInput\n    warning_post?: discussionboard_postUpdateOneWithoutDiscussionboard_warningNestedInput\n    warning_comment?: discussionboard_commentsUpdateOneWithoutDiscussionboard_warningNestedInput\n  }\n\n  export type discussionboard_warningUncheckedUpdateWithoutDiscussionboard_banInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    issued_by_id?: StringFieldUpdateOperationsInput | string\n    issued_to_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    warning_type?: StringFieldUpdateOperationsInput | string\n    message?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_userCreateWithoutDiscussionboard_notification_of_recipient_user_idInput = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_user_profile?: discussionboard_user_profileCreateNestedOneWithoutUser_profile_user_idInput\n    discussionboard_member?: discussionboard_memberCreateNestedOneWithoutMember_user_idInput\n    discussionboard_moderator?: discussionboard_moderatorCreateNestedOneWithoutModerator_user_idInput\n    discussionboard_admin?: discussionboard_adminCreateNestedOneWithoutAdmin_user_idInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_likes?: discussionboard_likesCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutUserInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionCreateNestedManyWithoutActorInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionCreateNestedManyWithoutTarget_userInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReviewerInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningCreateNestedManyWithoutIssuerInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningCreateNestedManyWithoutRecipientInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banCreateNestedManyWithoutBanned_userInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banCreateNestedManyWithoutBan_actorInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationCreateNestedManyWithoutActor_userInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceCreateNestedOneWithoutUserInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logCreateNestedManyWithoutFk_audit_actor_userInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logCreateNestedManyWithoutFk_audit_target_userInput\n  }\n\n  export type discussionboard_userUncheckedCreateWithoutDiscussionboard_notification_of_recipient_user_idInput = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUncheckedCreateNestedOneWithoutUser_profile_user_idInput\n    discussionboard_member?: discussionboard_memberUncheckedCreateNestedOneWithoutMember_user_idInput\n    discussionboard_moderator?: discussionboard_moderatorUncheckedCreateNestedOneWithoutModerator_user_idInput\n    discussionboard_admin?: discussionboard_adminUncheckedCreateNestedOneWithoutAdmin_user_idInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_likes?: discussionboard_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutActorInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutTarget_userInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewerInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUncheckedCreateNestedManyWithoutIssuerInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUncheckedCreateNestedManyWithoutRecipientInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUncheckedCreateNestedManyWithoutBanned_userInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUncheckedCreateNestedManyWithoutBan_actorInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUncheckedCreateNestedManyWithoutActor_userInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUncheckedCreateNestedOneWithoutUserInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUncheckedCreateNestedManyWithoutFk_audit_actor_userInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUncheckedCreateNestedManyWithoutFk_audit_target_userInput\n  }\n\n  export type discussionboard_userCreateOrConnectWithoutDiscussionboard_notification_of_recipient_user_idInput = {\n    where: discussionboard_userWhereUniqueInput\n    create: XOR<discussionboard_userCreateWithoutDiscussionboard_notification_of_recipient_user_idInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_notification_of_recipient_user_idInput>\n  }\n\n  export type discussionboard_postCreateWithoutDiscussionboard_notificationInput = {\n    id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    member: discussionboard_memberCreateNestedOneWithoutDiscussionboard_postInput\n    category: discussionboard_post_categoryCreateNestedOneWithoutDiscussionboard_postInput\n    discussionboard_post_attachment?: discussionboard_post_attachmentCreateNestedManyWithoutPostInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutPostInput\n    discussionboard_likes?: discussionboard_likesCreateNestedManyWithoutPostInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutPostInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionCreateNestedManyWithoutModerated_postInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReviewed_postInput\n    discussionboard_warning?: discussionboard_warningCreateNestedManyWithoutWarning_postInput\n  }\n\n  export type discussionboard_postUncheckedCreateWithoutDiscussionboard_notificationInput = {\n    id: string\n    author_member_id: string\n    category_id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussionboard_post_attachment?: discussionboard_post_attachmentUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_likes?: discussionboard_likesUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutModerated_postInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewed_postInput\n    discussionboard_warning?: discussionboard_warningUncheckedCreateNestedManyWithoutWarning_postInput\n  }\n\n  export type discussionboard_postCreateOrConnectWithoutDiscussionboard_notificationInput = {\n    where: discussionboard_postWhereUniqueInput\n    create: XOR<discussionboard_postCreateWithoutDiscussionboard_notificationInput, discussionboard_postUncheckedCreateWithoutDiscussionboard_notificationInput>\n  }\n\n  export type discussionboard_commentsCreateWithoutDiscussionboard_notificationInput = {\n    id: string\n    content: string\n    is_edited: boolean\n    is_deleted: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    post: discussionboard_postCreateNestedOneWithoutDiscussionboard_commentsInput\n    author: discussionboard_userCreateNestedOneWithoutDiscussionboard_commentsInput\n    parent_comment?: discussionboard_commentsCreateNestedOneWithoutRecursiveInput\n    recursive?: discussionboard_commentsCreateNestedManyWithoutParent_commentInput\n    discussionboard_likes?: discussionboard_likesCreateNestedManyWithoutCommentInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutCommentInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionCreateNestedManyWithoutModerated_commentInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReviewed_commentInput\n    discussionboard_warning?: discussionboard_warningCreateNestedManyWithoutWarning_commentInput\n  }\n\n  export type discussionboard_commentsUncheckedCreateWithoutDiscussionboard_notificationInput = {\n    id: string\n    post_id: string\n    author_id: string\n    parent_comment_id?: string | null\n    content: string\n    is_edited: boolean\n    is_deleted: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    recursive?: discussionboard_commentsUncheckedCreateNestedManyWithoutParent_commentInput\n    discussionboard_likes?: discussionboard_likesUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutModerated_commentInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewed_commentInput\n    discussionboard_warning?: discussionboard_warningUncheckedCreateNestedManyWithoutWarning_commentInput\n  }\n\n  export type discussionboard_commentsCreateOrConnectWithoutDiscussionboard_notificationInput = {\n    where: discussionboard_commentsWhereUniqueInput\n    create: XOR<discussionboard_commentsCreateWithoutDiscussionboard_notificationInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_notificationInput>\n  }\n\n  export type discussionboard_userCreateWithoutDiscussionboard_notification_of_actor_user_idInput = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_user_profile?: discussionboard_user_profileCreateNestedOneWithoutUser_profile_user_idInput\n    discussionboard_member?: discussionboard_memberCreateNestedOneWithoutMember_user_idInput\n    discussionboard_moderator?: discussionboard_moderatorCreateNestedOneWithoutModerator_user_idInput\n    discussionboard_admin?: discussionboard_adminCreateNestedOneWithoutAdmin_user_idInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_likes?: discussionboard_likesCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutUserInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionCreateNestedManyWithoutActorInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionCreateNestedManyWithoutTarget_userInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReviewerInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningCreateNestedManyWithoutIssuerInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningCreateNestedManyWithoutRecipientInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banCreateNestedManyWithoutBanned_userInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banCreateNestedManyWithoutBan_actorInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationCreateNestedManyWithoutRecipient_userInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceCreateNestedOneWithoutUserInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logCreateNestedManyWithoutFk_audit_actor_userInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logCreateNestedManyWithoutFk_audit_target_userInput\n  }\n\n  export type discussionboard_userUncheckedCreateWithoutDiscussionboard_notification_of_actor_user_idInput = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUncheckedCreateNestedOneWithoutUser_profile_user_idInput\n    discussionboard_member?: discussionboard_memberUncheckedCreateNestedOneWithoutMember_user_idInput\n    discussionboard_moderator?: discussionboard_moderatorUncheckedCreateNestedOneWithoutModerator_user_idInput\n    discussionboard_admin?: discussionboard_adminUncheckedCreateNestedOneWithoutAdmin_user_idInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_likes?: discussionboard_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutActorInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutTarget_userInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewerInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUncheckedCreateNestedManyWithoutIssuerInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUncheckedCreateNestedManyWithoutRecipientInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUncheckedCreateNestedManyWithoutBanned_userInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUncheckedCreateNestedManyWithoutBan_actorInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUncheckedCreateNestedManyWithoutRecipient_userInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUncheckedCreateNestedOneWithoutUserInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUncheckedCreateNestedManyWithoutFk_audit_actor_userInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUncheckedCreateNestedManyWithoutFk_audit_target_userInput\n  }\n\n  export type discussionboard_userCreateOrConnectWithoutDiscussionboard_notification_of_actor_user_idInput = {\n    where: discussionboard_userWhereUniqueInput\n    create: XOR<discussionboard_userCreateWithoutDiscussionboard_notification_of_actor_user_idInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_notification_of_actor_user_idInput>\n  }\n\n  export type discussionboard_userUpsertWithoutDiscussionboard_notification_of_recipient_user_idInput = {\n    update: XOR<discussionboard_userUpdateWithoutDiscussionboard_notification_of_recipient_user_idInput, discussionboard_userUncheckedUpdateWithoutDiscussionboard_notification_of_recipient_user_idInput>\n    create: XOR<discussionboard_userCreateWithoutDiscussionboard_notification_of_recipient_user_idInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_notification_of_recipient_user_idInput>\n    where?: discussionboard_userWhereInput\n  }\n\n  export type discussionboard_userUpdateToOneWithWhereWithoutDiscussionboard_notification_of_recipient_user_idInput = {\n    where?: discussionboard_userWhereInput\n    data: XOR<discussionboard_userUpdateWithoutDiscussionboard_notification_of_recipient_user_idInput, discussionboard_userUncheckedUpdateWithoutDiscussionboard_notification_of_recipient_user_idInput>\n  }\n\n  export type discussionboard_userUpdateWithoutDiscussionboard_notification_of_recipient_user_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUpdateOneWithoutUser_profile_user_idNestedInput\n    discussionboard_member?: discussionboard_memberUpdateOneWithoutMember_user_idNestedInput\n    discussionboard_moderator?: discussionboard_moderatorUpdateOneWithoutModerator_user_idNestedInput\n    discussionboard_admin?: discussionboard_adminUpdateOneWithoutAdmin_user_idNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_likes?: discussionboard_likesUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUpdateManyWithoutActorNestedInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUpdateManyWithoutTarget_userNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReviewerNestedInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUpdateManyWithoutIssuerNestedInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUpdateManyWithoutRecipientNestedInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUpdateManyWithoutBanned_userNestedInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUpdateManyWithoutBan_actorNestedInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUpdateManyWithoutActor_userNestedInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUpdateOneWithoutUserNestedInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUpdateManyWithoutFk_audit_actor_userNestedInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUpdateManyWithoutFk_audit_target_userNestedInput\n  }\n\n  export type discussionboard_userUncheckedUpdateWithoutDiscussionboard_notification_of_recipient_user_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUncheckedUpdateOneWithoutUser_profile_user_idNestedInput\n    discussionboard_member?: discussionboard_memberUncheckedUpdateOneWithoutMember_user_idNestedInput\n    discussionboard_moderator?: discussionboard_moderatorUncheckedUpdateOneWithoutModerator_user_idNestedInput\n    discussionboard_admin?: discussionboard_adminUncheckedUpdateOneWithoutAdmin_user_idNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_likes?: discussionboard_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUncheckedUpdateManyWithoutActorNestedInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUncheckedUpdateManyWithoutTarget_userNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReviewerNestedInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUncheckedUpdateManyWithoutIssuerNestedInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUncheckedUpdateManyWithoutRecipientNestedInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUncheckedUpdateManyWithoutBanned_userNestedInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUncheckedUpdateManyWithoutBan_actorNestedInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUncheckedUpdateManyWithoutActor_userNestedInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUncheckedUpdateOneWithoutUserNestedInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_actor_userNestedInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_target_userNestedInput\n  }\n\n  export type discussionboard_postUpsertWithoutDiscussionboard_notificationInput = {\n    update: XOR<discussionboard_postUpdateWithoutDiscussionboard_notificationInput, discussionboard_postUncheckedUpdateWithoutDiscussionboard_notificationInput>\n    create: XOR<discussionboard_postCreateWithoutDiscussionboard_notificationInput, discussionboard_postUncheckedCreateWithoutDiscussionboard_notificationInput>\n    where?: discussionboard_postWhereInput\n  }\n\n  export type discussionboard_postUpdateToOneWithWhereWithoutDiscussionboard_notificationInput = {\n    where?: discussionboard_postWhereInput\n    data: XOR<discussionboard_postUpdateWithoutDiscussionboard_notificationInput, discussionboard_postUncheckedUpdateWithoutDiscussionboard_notificationInput>\n  }\n\n  export type discussionboard_postUpdateWithoutDiscussionboard_notificationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    member?: discussionboard_memberUpdateOneRequiredWithoutDiscussionboard_postNestedInput\n    category?: discussionboard_post_categoryUpdateOneRequiredWithoutDiscussionboard_postNestedInput\n    discussionboard_post_attachment?: discussionboard_post_attachmentUpdateManyWithoutPostNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutPostNestedInput\n    discussionboard_likes?: discussionboard_likesUpdateManyWithoutPostNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutPostNestedInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUpdateManyWithoutModerated_postNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReviewed_postNestedInput\n    discussionboard_warning?: discussionboard_warningUpdateManyWithoutWarning_postNestedInput\n  }\n\n  export type discussionboard_postUncheckedUpdateWithoutDiscussionboard_notificationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    author_member_id?: StringFieldUpdateOperationsInput | string\n    category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_post_attachment?: discussionboard_post_attachmentUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_likes?: discussionboard_likesUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUncheckedUpdateManyWithoutModerated_postNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReviewed_postNestedInput\n    discussionboard_warning?: discussionboard_warningUncheckedUpdateManyWithoutWarning_postNestedInput\n  }\n\n  export type discussionboard_commentsUpsertWithoutDiscussionboard_notificationInput = {\n    update: XOR<discussionboard_commentsUpdateWithoutDiscussionboard_notificationInput, discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_notificationInput>\n    create: XOR<discussionboard_commentsCreateWithoutDiscussionboard_notificationInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_notificationInput>\n    where?: discussionboard_commentsWhereInput\n  }\n\n  export type discussionboard_commentsUpdateToOneWithWhereWithoutDiscussionboard_notificationInput = {\n    where?: discussionboard_commentsWhereInput\n    data: XOR<discussionboard_commentsUpdateWithoutDiscussionboard_notificationInput, discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_notificationInput>\n  }\n\n  export type discussionboard_commentsUpdateWithoutDiscussionboard_notificationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    is_edited?: BoolFieldUpdateOperationsInput | boolean\n    is_deleted?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    post?: discussionboard_postUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput\n    author?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput\n    parent_comment?: discussionboard_commentsUpdateOneWithoutRecursiveNestedInput\n    recursive?: discussionboard_commentsUpdateManyWithoutParent_commentNestedInput\n    discussionboard_likes?: discussionboard_likesUpdateManyWithoutCommentNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutCommentNestedInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUpdateManyWithoutModerated_commentNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReviewed_commentNestedInput\n    discussionboard_warning?: discussionboard_warningUpdateManyWithoutWarning_commentNestedInput\n  }\n\n  export type discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_notificationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    author_id?: StringFieldUpdateOperationsInput | string\n    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    content?: StringFieldUpdateOperationsInput | string\n    is_edited?: BoolFieldUpdateOperationsInput | boolean\n    is_deleted?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    recursive?: discussionboard_commentsUncheckedUpdateManyWithoutParent_commentNestedInput\n    discussionboard_likes?: discussionboard_likesUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUncheckedUpdateManyWithoutModerated_commentNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReviewed_commentNestedInput\n    discussionboard_warning?: discussionboard_warningUncheckedUpdateManyWithoutWarning_commentNestedInput\n  }\n\n  export type discussionboard_userUpsertWithoutDiscussionboard_notification_of_actor_user_idInput = {\n    update: XOR<discussionboard_userUpdateWithoutDiscussionboard_notification_of_actor_user_idInput, discussionboard_userUncheckedUpdateWithoutDiscussionboard_notification_of_actor_user_idInput>\n    create: XOR<discussionboard_userCreateWithoutDiscussionboard_notification_of_actor_user_idInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_notification_of_actor_user_idInput>\n    where?: discussionboard_userWhereInput\n  }\n\n  export type discussionboard_userUpdateToOneWithWhereWithoutDiscussionboard_notification_of_actor_user_idInput = {\n    where?: discussionboard_userWhereInput\n    data: XOR<discussionboard_userUpdateWithoutDiscussionboard_notification_of_actor_user_idInput, discussionboard_userUncheckedUpdateWithoutDiscussionboard_notification_of_actor_user_idInput>\n  }\n\n  export type discussionboard_userUpdateWithoutDiscussionboard_notification_of_actor_user_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUpdateOneWithoutUser_profile_user_idNestedInput\n    discussionboard_member?: discussionboard_memberUpdateOneWithoutMember_user_idNestedInput\n    discussionboard_moderator?: discussionboard_moderatorUpdateOneWithoutModerator_user_idNestedInput\n    discussionboard_admin?: discussionboard_adminUpdateOneWithoutAdmin_user_idNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_likes?: discussionboard_likesUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUpdateManyWithoutActorNestedInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUpdateManyWithoutTarget_userNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReviewerNestedInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUpdateManyWithoutIssuerNestedInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUpdateManyWithoutRecipientNestedInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUpdateManyWithoutBanned_userNestedInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUpdateManyWithoutBan_actorNestedInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUpdateManyWithoutRecipient_userNestedInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUpdateOneWithoutUserNestedInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUpdateManyWithoutFk_audit_actor_userNestedInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUpdateManyWithoutFk_audit_target_userNestedInput\n  }\n\n  export type discussionboard_userUncheckedUpdateWithoutDiscussionboard_notification_of_actor_user_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUncheckedUpdateOneWithoutUser_profile_user_idNestedInput\n    discussionboard_member?: discussionboard_memberUncheckedUpdateOneWithoutMember_user_idNestedInput\n    discussionboard_moderator?: discussionboard_moderatorUncheckedUpdateOneWithoutModerator_user_idNestedInput\n    discussionboard_admin?: discussionboard_adminUncheckedUpdateOneWithoutAdmin_user_idNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_likes?: discussionboard_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUncheckedUpdateManyWithoutActorNestedInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUncheckedUpdateManyWithoutTarget_userNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReviewerNestedInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUncheckedUpdateManyWithoutIssuerNestedInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUncheckedUpdateManyWithoutRecipientNestedInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUncheckedUpdateManyWithoutBanned_userNestedInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUncheckedUpdateManyWithoutBan_actorNestedInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUncheckedUpdateManyWithoutRecipient_userNestedInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUncheckedUpdateOneWithoutUserNestedInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_actor_userNestedInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_target_userNestedInput\n  }\n\n  export type discussionboard_userCreateWithoutDiscussionboard_notification_preferenceInput = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_user_profile?: discussionboard_user_profileCreateNestedOneWithoutUser_profile_user_idInput\n    discussionboard_member?: discussionboard_memberCreateNestedOneWithoutMember_user_idInput\n    discussionboard_moderator?: discussionboard_moderatorCreateNestedOneWithoutModerator_user_idInput\n    discussionboard_admin?: discussionboard_adminCreateNestedOneWithoutAdmin_user_idInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_likes?: discussionboard_likesCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutUserInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionCreateNestedManyWithoutActorInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionCreateNestedManyWithoutTarget_userInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReviewerInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningCreateNestedManyWithoutIssuerInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningCreateNestedManyWithoutRecipientInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banCreateNestedManyWithoutBanned_userInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banCreateNestedManyWithoutBan_actorInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationCreateNestedManyWithoutRecipient_userInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationCreateNestedManyWithoutActor_userInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logCreateNestedManyWithoutFk_audit_actor_userInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logCreateNestedManyWithoutFk_audit_target_userInput\n  }\n\n  export type discussionboard_userUncheckedCreateWithoutDiscussionboard_notification_preferenceInput = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUncheckedCreateNestedOneWithoutUser_profile_user_idInput\n    discussionboard_member?: discussionboard_memberUncheckedCreateNestedOneWithoutMember_user_idInput\n    discussionboard_moderator?: discussionboard_moderatorUncheckedCreateNestedOneWithoutModerator_user_idInput\n    discussionboard_admin?: discussionboard_adminUncheckedCreateNestedOneWithoutAdmin_user_idInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_likes?: discussionboard_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutActorInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutTarget_userInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewerInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUncheckedCreateNestedManyWithoutIssuerInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUncheckedCreateNestedManyWithoutRecipientInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUncheckedCreateNestedManyWithoutBanned_userInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUncheckedCreateNestedManyWithoutBan_actorInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUncheckedCreateNestedManyWithoutRecipient_userInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUncheckedCreateNestedManyWithoutActor_userInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUncheckedCreateNestedManyWithoutFk_audit_actor_userInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUncheckedCreateNestedManyWithoutFk_audit_target_userInput\n  }\n\n  export type discussionboard_userCreateOrConnectWithoutDiscussionboard_notification_preferenceInput = {\n    where: discussionboard_userWhereUniqueInput\n    create: XOR<discussionboard_userCreateWithoutDiscussionboard_notification_preferenceInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_notification_preferenceInput>\n  }\n\n  export type discussionboard_userUpsertWithoutDiscussionboard_notification_preferenceInput = {\n    update: XOR<discussionboard_userUpdateWithoutDiscussionboard_notification_preferenceInput, discussionboard_userUncheckedUpdateWithoutDiscussionboard_notification_preferenceInput>\n    create: XOR<discussionboard_userCreateWithoutDiscussionboard_notification_preferenceInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_notification_preferenceInput>\n    where?: discussionboard_userWhereInput\n  }\n\n  export type discussionboard_userUpdateToOneWithWhereWithoutDiscussionboard_notification_preferenceInput = {\n    where?: discussionboard_userWhereInput\n    data: XOR<discussionboard_userUpdateWithoutDiscussionboard_notification_preferenceInput, discussionboard_userUncheckedUpdateWithoutDiscussionboard_notification_preferenceInput>\n  }\n\n  export type discussionboard_userUpdateWithoutDiscussionboard_notification_preferenceInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUpdateOneWithoutUser_profile_user_idNestedInput\n    discussionboard_member?: discussionboard_memberUpdateOneWithoutMember_user_idNestedInput\n    discussionboard_moderator?: discussionboard_moderatorUpdateOneWithoutModerator_user_idNestedInput\n    discussionboard_admin?: discussionboard_adminUpdateOneWithoutAdmin_user_idNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_likes?: discussionboard_likesUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUpdateManyWithoutActorNestedInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUpdateManyWithoutTarget_userNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReviewerNestedInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUpdateManyWithoutIssuerNestedInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUpdateManyWithoutRecipientNestedInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUpdateManyWithoutBanned_userNestedInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUpdateManyWithoutBan_actorNestedInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUpdateManyWithoutRecipient_userNestedInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUpdateManyWithoutActor_userNestedInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUpdateManyWithoutFk_audit_actor_userNestedInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUpdateManyWithoutFk_audit_target_userNestedInput\n  }\n\n  export type discussionboard_userUncheckedUpdateWithoutDiscussionboard_notification_preferenceInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUncheckedUpdateOneWithoutUser_profile_user_idNestedInput\n    discussionboard_member?: discussionboard_memberUncheckedUpdateOneWithoutMember_user_idNestedInput\n    discussionboard_moderator?: discussionboard_moderatorUncheckedUpdateOneWithoutModerator_user_idNestedInput\n    discussionboard_admin?: discussionboard_adminUncheckedUpdateOneWithoutAdmin_user_idNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_likes?: discussionboard_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUncheckedUpdateManyWithoutActorNestedInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUncheckedUpdateManyWithoutTarget_userNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReviewerNestedInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUncheckedUpdateManyWithoutIssuerNestedInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUncheckedUpdateManyWithoutRecipientNestedInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUncheckedUpdateManyWithoutBanned_userNestedInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUncheckedUpdateManyWithoutBan_actorNestedInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUncheckedUpdateManyWithoutRecipient_userNestedInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUncheckedUpdateManyWithoutActor_userNestedInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_actor_userNestedInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_target_userNestedInput\n  }\n\n  export type discussionboard_userCreateWithoutDiscussionboard_audit_log_of_actor_user_idInput = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_user_profile?: discussionboard_user_profileCreateNestedOneWithoutUser_profile_user_idInput\n    discussionboard_member?: discussionboard_memberCreateNestedOneWithoutMember_user_idInput\n    discussionboard_moderator?: discussionboard_moderatorCreateNestedOneWithoutModerator_user_idInput\n    discussionboard_admin?: discussionboard_adminCreateNestedOneWithoutAdmin_user_idInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_likes?: discussionboard_likesCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutUserInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionCreateNestedManyWithoutActorInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionCreateNestedManyWithoutTarget_userInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReviewerInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningCreateNestedManyWithoutIssuerInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningCreateNestedManyWithoutRecipientInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banCreateNestedManyWithoutBanned_userInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banCreateNestedManyWithoutBan_actorInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationCreateNestedManyWithoutRecipient_userInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationCreateNestedManyWithoutActor_userInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceCreateNestedOneWithoutUserInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logCreateNestedManyWithoutFk_audit_target_userInput\n  }\n\n  export type discussionboard_userUncheckedCreateWithoutDiscussionboard_audit_log_of_actor_user_idInput = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUncheckedCreateNestedOneWithoutUser_profile_user_idInput\n    discussionboard_member?: discussionboard_memberUncheckedCreateNestedOneWithoutMember_user_idInput\n    discussionboard_moderator?: discussionboard_moderatorUncheckedCreateNestedOneWithoutModerator_user_idInput\n    discussionboard_admin?: discussionboard_adminUncheckedCreateNestedOneWithoutAdmin_user_idInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_likes?: discussionboard_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutActorInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutTarget_userInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewerInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUncheckedCreateNestedManyWithoutIssuerInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUncheckedCreateNestedManyWithoutRecipientInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUncheckedCreateNestedManyWithoutBanned_userInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUncheckedCreateNestedManyWithoutBan_actorInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUncheckedCreateNestedManyWithoutRecipient_userInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUncheckedCreateNestedManyWithoutActor_userInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUncheckedCreateNestedOneWithoutUserInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUncheckedCreateNestedManyWithoutFk_audit_target_userInput\n  }\n\n  export type discussionboard_userCreateOrConnectWithoutDiscussionboard_audit_log_of_actor_user_idInput = {\n    where: discussionboard_userWhereUniqueInput\n    create: XOR<discussionboard_userCreateWithoutDiscussionboard_audit_log_of_actor_user_idInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_audit_log_of_actor_user_idInput>\n  }\n\n  export type discussionboard_userCreateWithoutDiscussionboard_audit_log_of_target_user_idInput = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_user_profile?: discussionboard_user_profileCreateNestedOneWithoutUser_profile_user_idInput\n    discussionboard_member?: discussionboard_memberCreateNestedOneWithoutMember_user_idInput\n    discussionboard_moderator?: discussionboard_moderatorCreateNestedOneWithoutModerator_user_idInput\n    discussionboard_admin?: discussionboard_adminCreateNestedOneWithoutAdmin_user_idInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_likes?: discussionboard_likesCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutUserInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionCreateNestedManyWithoutActorInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionCreateNestedManyWithoutTarget_userInput\n    discussionboard_report_review?: discussionboard_report_reviewCreateNestedManyWithoutReviewerInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningCreateNestedManyWithoutIssuerInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningCreateNestedManyWithoutRecipientInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banCreateNestedManyWithoutBanned_userInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banCreateNestedManyWithoutBan_actorInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationCreateNestedManyWithoutRecipient_userInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationCreateNestedManyWithoutActor_userInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceCreateNestedOneWithoutUserInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logCreateNestedManyWithoutFk_audit_actor_userInput\n  }\n\n  export type discussionboard_userUncheckedCreateWithoutDiscussionboard_audit_log_of_target_user_idInput = {\n    id: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUncheckedCreateNestedOneWithoutUser_profile_user_idInput\n    discussionboard_member?: discussionboard_memberUncheckedCreateNestedOneWithoutMember_user_idInput\n    discussionboard_moderator?: discussionboard_moderatorUncheckedCreateNestedOneWithoutModerator_user_idInput\n    discussionboard_admin?: discussionboard_adminUncheckedCreateNestedOneWithoutAdmin_user_idInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_likes?: discussionboard_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutActorInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUncheckedCreateNestedManyWithoutTarget_userInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedCreateNestedManyWithoutReviewerInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUncheckedCreateNestedManyWithoutIssuerInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUncheckedCreateNestedManyWithoutRecipientInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUncheckedCreateNestedManyWithoutBanned_userInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUncheckedCreateNestedManyWithoutBan_actorInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUncheckedCreateNestedManyWithoutRecipient_userInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUncheckedCreateNestedManyWithoutActor_userInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUncheckedCreateNestedOneWithoutUserInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUncheckedCreateNestedManyWithoutFk_audit_actor_userInput\n  }\n\n  export type discussionboard_userCreateOrConnectWithoutDiscussionboard_audit_log_of_target_user_idInput = {\n    where: discussionboard_userWhereUniqueInput\n    create: XOR<discussionboard_userCreateWithoutDiscussionboard_audit_log_of_target_user_idInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_audit_log_of_target_user_idInput>\n  }\n\n  export type discussionboard_userUpsertWithoutDiscussionboard_audit_log_of_actor_user_idInput = {\n    update: XOR<discussionboard_userUpdateWithoutDiscussionboard_audit_log_of_actor_user_idInput, discussionboard_userUncheckedUpdateWithoutDiscussionboard_audit_log_of_actor_user_idInput>\n    create: XOR<discussionboard_userCreateWithoutDiscussionboard_audit_log_of_actor_user_idInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_audit_log_of_actor_user_idInput>\n    where?: discussionboard_userWhereInput\n  }\n\n  export type discussionboard_userUpdateToOneWithWhereWithoutDiscussionboard_audit_log_of_actor_user_idInput = {\n    where?: discussionboard_userWhereInput\n    data: XOR<discussionboard_userUpdateWithoutDiscussionboard_audit_log_of_actor_user_idInput, discussionboard_userUncheckedUpdateWithoutDiscussionboard_audit_log_of_actor_user_idInput>\n  }\n\n  export type discussionboard_userUpdateWithoutDiscussionboard_audit_log_of_actor_user_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUpdateOneWithoutUser_profile_user_idNestedInput\n    discussionboard_member?: discussionboard_memberUpdateOneWithoutMember_user_idNestedInput\n    discussionboard_moderator?: discussionboard_moderatorUpdateOneWithoutModerator_user_idNestedInput\n    discussionboard_admin?: discussionboard_adminUpdateOneWithoutAdmin_user_idNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_likes?: discussionboard_likesUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUpdateManyWithoutActorNestedInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUpdateManyWithoutTarget_userNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReviewerNestedInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUpdateManyWithoutIssuerNestedInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUpdateManyWithoutRecipientNestedInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUpdateManyWithoutBanned_userNestedInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUpdateManyWithoutBan_actorNestedInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUpdateManyWithoutRecipient_userNestedInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUpdateManyWithoutActor_userNestedInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUpdateOneWithoutUserNestedInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUpdateManyWithoutFk_audit_target_userNestedInput\n  }\n\n  export type discussionboard_userUncheckedUpdateWithoutDiscussionboard_audit_log_of_actor_user_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUncheckedUpdateOneWithoutUser_profile_user_idNestedInput\n    discussionboard_member?: discussionboard_memberUncheckedUpdateOneWithoutMember_user_idNestedInput\n    discussionboard_moderator?: discussionboard_moderatorUncheckedUpdateOneWithoutModerator_user_idNestedInput\n    discussionboard_admin?: discussionboard_adminUncheckedUpdateOneWithoutAdmin_user_idNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_likes?: discussionboard_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUncheckedUpdateManyWithoutActorNestedInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUncheckedUpdateManyWithoutTarget_userNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReviewerNestedInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUncheckedUpdateManyWithoutIssuerNestedInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUncheckedUpdateManyWithoutRecipientNestedInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUncheckedUpdateManyWithoutBanned_userNestedInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUncheckedUpdateManyWithoutBan_actorNestedInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUncheckedUpdateManyWithoutRecipient_userNestedInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUncheckedUpdateManyWithoutActor_userNestedInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUncheckedUpdateOneWithoutUserNestedInput\n    discussionboard_audit_log_of_target_user_id?: discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_target_userNestedInput\n  }\n\n  export type discussionboard_userUpsertWithoutDiscussionboard_audit_log_of_target_user_idInput = {\n    update: XOR<discussionboard_userUpdateWithoutDiscussionboard_audit_log_of_target_user_idInput, discussionboard_userUncheckedUpdateWithoutDiscussionboard_audit_log_of_target_user_idInput>\n    create: XOR<discussionboard_userCreateWithoutDiscussionboard_audit_log_of_target_user_idInput, discussionboard_userUncheckedCreateWithoutDiscussionboard_audit_log_of_target_user_idInput>\n    where?: discussionboard_userWhereInput\n  }\n\n  export type discussionboard_userUpdateToOneWithWhereWithoutDiscussionboard_audit_log_of_target_user_idInput = {\n    where?: discussionboard_userWhereInput\n    data: XOR<discussionboard_userUpdateWithoutDiscussionboard_audit_log_of_target_user_idInput, discussionboard_userUncheckedUpdateWithoutDiscussionboard_audit_log_of_target_user_idInput>\n  }\n\n  export type discussionboard_userUpdateWithoutDiscussionboard_audit_log_of_target_user_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUpdateOneWithoutUser_profile_user_idNestedInput\n    discussionboard_member?: discussionboard_memberUpdateOneWithoutMember_user_idNestedInput\n    discussionboard_moderator?: discussionboard_moderatorUpdateOneWithoutModerator_user_idNestedInput\n    discussionboard_admin?: discussionboard_adminUpdateOneWithoutAdmin_user_idNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_likes?: discussionboard_likesUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUpdateManyWithoutActorNestedInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUpdateManyWithoutTarget_userNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReviewerNestedInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUpdateManyWithoutIssuerNestedInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUpdateManyWithoutRecipientNestedInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUpdateManyWithoutBanned_userNestedInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUpdateManyWithoutBan_actorNestedInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUpdateManyWithoutRecipient_userNestedInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUpdateManyWithoutActor_userNestedInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUpdateOneWithoutUserNestedInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUpdateManyWithoutFk_audit_actor_userNestedInput\n  }\n\n  export type discussionboard_userUncheckedUpdateWithoutDiscussionboard_audit_log_of_target_user_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_user_profile?: discussionboard_user_profileUncheckedUpdateOneWithoutUser_profile_user_idNestedInput\n    discussionboard_member?: discussionboard_memberUncheckedUpdateOneWithoutMember_user_idNestedInput\n    discussionboard_moderator?: discussionboard_moderatorUncheckedUpdateOneWithoutModerator_user_idNestedInput\n    discussionboard_admin?: discussionboard_adminUncheckedUpdateOneWithoutAdmin_user_idNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_likes?: discussionboard_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_action_of_actor_id?: discussionboard_moderation_actionUncheckedUpdateManyWithoutActorNestedInput\n    discussionboard_moderation_action_of_target_user_id?: discussionboard_moderation_actionUncheckedUpdateManyWithoutTarget_userNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReviewerNestedInput\n    discussionboard_warning_of_issued_by_id?: discussionboard_warningUncheckedUpdateManyWithoutIssuerNestedInput\n    discussionboard_warning_of_issued_to_id?: discussionboard_warningUncheckedUpdateManyWithoutRecipientNestedInput\n    discussionboard_ban_of_banned_user_id?: discussionboard_banUncheckedUpdateManyWithoutBanned_userNestedInput\n    discussionboard_ban_of_banned_by_id?: discussionboard_banUncheckedUpdateManyWithoutBan_actorNestedInput\n    discussionboard_notification_of_recipient_user_id?: discussionboard_notificationUncheckedUpdateManyWithoutRecipient_userNestedInput\n    discussionboard_notification_of_actor_user_id?: discussionboard_notificationUncheckedUpdateManyWithoutActor_userNestedInput\n    discussionboard_notification_preference?: discussionboard_notification_preferenceUncheckedUpdateOneWithoutUserNestedInput\n    discussionboard_audit_log_of_actor_user_id?: discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_actor_userNestedInput\n  }\n\n  export type discussionboard_commentsCreateManyAuthorInput = {\n    id: string\n    post_id: string\n    parent_comment_id?: string | null\n    content: string\n    is_edited: boolean\n    is_deleted: boolean\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_likesCreateManyUserInput = {\n    id: string\n    post_id?: string | null\n    comment_id?: string | null\n    created_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type discussionboard_reportsCreateManyUserInput = {\n    id: string\n    post_id?: string | null\n    comment_id?: string | null\n    reason_code: string\n    reason_details?: string | null\n    created_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type discussionboard_moderation_actionCreateManyActorInput = {\n    id: string\n    target_user_id: string\n    post_id?: string | null\n    comment_id?: string | null\n    action_type: string\n    reason: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_moderation_actionCreateManyTarget_userInput = {\n    id: string\n    actor_id: string\n    post_id?: string | null\n    comment_id?: string | null\n    action_type: string\n    reason: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_report_reviewCreateManyReviewerInput = {\n    id: string\n    report_id: string\n    post_id?: string | null\n    comment_id?: string | null\n    review_status: string\n    moderator_comment?: string | null\n    reviewed_at: Date | string\n  }\n\n  export type discussionboard_warningCreateManyIssuerInput = {\n    id: string\n    issued_to_id: string\n    post_id?: string | null\n    comment_id?: string | null\n    warning_type: string\n    message: string\n    issued_at: Date | string\n  }\n\n  export type discussionboard_warningCreateManyRecipientInput = {\n    id: string\n    issued_by_id: string\n    post_id?: string | null\n    comment_id?: string | null\n    warning_type: string\n    message: string\n    issued_at: Date | string\n  }\n\n  export type discussionboard_banCreateManyBanned_userInput = {\n    id: string\n    banned_by_id: string\n    warning_id?: string | null\n    ban_type: string\n    reason: string\n    issued_at: Date | string\n    expires_at?: Date | string | null\n  }\n\n  export type discussionboard_banCreateManyBan_actorInput = {\n    id: string\n    banned_user_id: string\n    warning_id?: string | null\n    ban_type: string\n    reason: string\n    issued_at: Date | string\n    expires_at?: Date | string | null\n  }\n\n  export type discussionboard_notificationCreateManyRecipient_userInput = {\n    id: string\n    related_post_id?: string | null\n    related_comment_id?: string | null\n    actor_user_id?: string | null\n    type: string\n    message: string\n    is_read: boolean\n    created_at: Date | string\n  }\n\n  export type discussionboard_notificationCreateManyActor_userInput = {\n    id: string\n    recipient_user_id: string\n    related_post_id?: string | null\n    related_comment_id?: string | null\n    type: string\n    message: string\n    is_read: boolean\n    created_at: Date | string\n  }\n\n  export type discussionboard_audit_logCreateManyFk_audit_actor_userInput = {\n    id: string\n    target_user_id?: string | null\n    action_type: string\n    entity_type: string\n    entity_id?: string | null\n    action_detail?: string | null\n    created_at: Date | string\n  }\n\n  export type discussionboard_audit_logCreateManyFk_audit_target_userInput = {\n    id: string\n    actor_user_id: string\n    action_type: string\n    entity_type: string\n    entity_id?: string | null\n    action_detail?: string | null\n    created_at: Date | string\n  }\n\n  export type discussionboard_commentsUpdateWithoutAuthorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    is_edited?: BoolFieldUpdateOperationsInput | boolean\n    is_deleted?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    post?: discussionboard_postUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput\n    parent_comment?: discussionboard_commentsUpdateOneWithoutRecursiveNestedInput\n    recursive?: discussionboard_commentsUpdateManyWithoutParent_commentNestedInput\n    discussionboard_likes?: discussionboard_likesUpdateManyWithoutCommentNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutCommentNestedInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUpdateManyWithoutModerated_commentNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReviewed_commentNestedInput\n    discussionboard_warning?: discussionboard_warningUpdateManyWithoutWarning_commentNestedInput\n    discussionboard_notification?: discussionboard_notificationUpdateManyWithoutRelated_commentNestedInput\n  }\n\n  export type discussionboard_commentsUncheckedUpdateWithoutAuthorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    content?: StringFieldUpdateOperationsInput | string\n    is_edited?: BoolFieldUpdateOperationsInput | boolean\n    is_deleted?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    recursive?: discussionboard_commentsUncheckedUpdateManyWithoutParent_commentNestedInput\n    discussionboard_likes?: discussionboard_likesUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUncheckedUpdateManyWithoutModerated_commentNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReviewed_commentNestedInput\n    discussionboard_warning?: discussionboard_warningUncheckedUpdateManyWithoutWarning_commentNestedInput\n    discussionboard_notification?: discussionboard_notificationUncheckedUpdateManyWithoutRelated_commentNestedInput\n  }\n\n  export type discussionboard_commentsUncheckedUpdateManyWithoutAuthorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    content?: StringFieldUpdateOperationsInput | string\n    is_edited?: BoolFieldUpdateOperationsInput | boolean\n    is_deleted?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_likesUpdateWithoutUserInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    post?: discussionboard_postUpdateOneWithoutDiscussionboard_likesNestedInput\n    comment?: discussionboard_commentsUpdateOneWithoutDiscussionboard_likesNestedInput\n  }\n\n  export type discussionboard_likesUncheckedUpdateWithoutUserInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_likesUncheckedUpdateManyWithoutUserInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_reportsUpdateWithoutUserInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reason_code?: StringFieldUpdateOperationsInput | string\n    reason_details?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    post?: discussionboard_postUpdateOneWithoutDiscussionboard_reportsNestedInput\n    comment?: discussionboard_commentsUpdateOneWithoutDiscussionboard_reportsNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReportNestedInput\n  }\n\n  export type discussionboard_reportsUncheckedUpdateWithoutUserInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason_code?: StringFieldUpdateOperationsInput | string\n    reason_details?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReportNestedInput\n  }\n\n  export type discussionboard_reportsUncheckedUpdateManyWithoutUserInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason_code?: StringFieldUpdateOperationsInput | string\n    reason_details?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_moderation_actionUpdateWithoutActorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    action_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    target_user?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_moderation_action_of_target_user_idNestedInput\n    moderated_post?: discussionboard_postUpdateOneWithoutDiscussionboard_moderation_actionNestedInput\n    moderated_comment?: discussionboard_commentsUpdateOneWithoutDiscussionboard_moderation_actionNestedInput\n  }\n\n  export type discussionboard_moderation_actionUncheckedUpdateWithoutActorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    target_user_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_moderation_actionUncheckedUpdateManyWithoutActorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    target_user_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_moderation_actionUpdateWithoutTarget_userInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    action_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    actor?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_moderation_action_of_actor_idNestedInput\n    moderated_post?: discussionboard_postUpdateOneWithoutDiscussionboard_moderation_actionNestedInput\n    moderated_comment?: discussionboard_commentsUpdateOneWithoutDiscussionboard_moderation_actionNestedInput\n  }\n\n  export type discussionboard_moderation_actionUncheckedUpdateWithoutTarget_userInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_moderation_actionUncheckedUpdateManyWithoutTarget_userInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_report_reviewUpdateWithoutReviewerInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    review_status?: StringFieldUpdateOperationsInput | string\n    moderator_comment?: NullableStringFieldUpdateOperationsInput | string | null\n    reviewed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    report?: discussionboard_reportsUpdateOneRequiredWithoutDiscussionboard_report_reviewNestedInput\n    reviewed_post?: discussionboard_postUpdateOneWithoutDiscussionboard_report_reviewNestedInput\n    reviewed_comment?: discussionboard_commentsUpdateOneWithoutDiscussionboard_report_reviewNestedInput\n  }\n\n  export type discussionboard_report_reviewUncheckedUpdateWithoutReviewerInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    report_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    review_status?: StringFieldUpdateOperationsInput | string\n    moderator_comment?: NullableStringFieldUpdateOperationsInput | string | null\n    reviewed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_report_reviewUncheckedUpdateManyWithoutReviewerInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    report_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    review_status?: StringFieldUpdateOperationsInput | string\n    moderator_comment?: NullableStringFieldUpdateOperationsInput | string | null\n    reviewed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_warningUpdateWithoutIssuerInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    warning_type?: StringFieldUpdateOperationsInput | string\n    message?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    recipient?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_warning_of_issued_to_idNestedInput\n    warning_post?: discussionboard_postUpdateOneWithoutDiscussionboard_warningNestedInput\n    warning_comment?: discussionboard_commentsUpdateOneWithoutDiscussionboard_warningNestedInput\n    discussionboard_ban?: discussionboard_banUpdateManyWithoutRelated_warningNestedInput\n  }\n\n  export type discussionboard_warningUncheckedUpdateWithoutIssuerInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    issued_to_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    warning_type?: StringFieldUpdateOperationsInput | string\n    message?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_ban?: discussionboard_banUncheckedUpdateManyWithoutRelated_warningNestedInput\n  }\n\n  export type discussionboard_warningUncheckedUpdateManyWithoutIssuerInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    issued_to_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    warning_type?: StringFieldUpdateOperationsInput | string\n    message?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_warningUpdateWithoutRecipientInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    warning_type?: StringFieldUpdateOperationsInput | string\n    message?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    issuer?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_warning_of_issued_by_idNestedInput\n    warning_post?: discussionboard_postUpdateOneWithoutDiscussionboard_warningNestedInput\n    warning_comment?: discussionboard_commentsUpdateOneWithoutDiscussionboard_warningNestedInput\n    discussionboard_ban?: discussionboard_banUpdateManyWithoutRelated_warningNestedInput\n  }\n\n  export type discussionboard_warningUncheckedUpdateWithoutRecipientInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    issued_by_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    warning_type?: StringFieldUpdateOperationsInput | string\n    message?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_ban?: discussionboard_banUncheckedUpdateManyWithoutRelated_warningNestedInput\n  }\n\n  export type discussionboard_warningUncheckedUpdateManyWithoutRecipientInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    issued_by_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    warning_type?: StringFieldUpdateOperationsInput | string\n    message?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_banUpdateWithoutBanned_userInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    ban_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    ban_actor?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_ban_of_banned_by_idNestedInput\n    related_warning?: discussionboard_warningUpdateOneWithoutDiscussionboard_banNestedInput\n  }\n\n  export type discussionboard_banUncheckedUpdateWithoutBanned_userInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    banned_by_id?: StringFieldUpdateOperationsInput | string\n    warning_id?: NullableStringFieldUpdateOperationsInput | string | null\n    ban_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_banUncheckedUpdateManyWithoutBanned_userInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    banned_by_id?: StringFieldUpdateOperationsInput | string\n    warning_id?: NullableStringFieldUpdateOperationsInput | string | null\n    ban_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_banUpdateWithoutBan_actorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    ban_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    banned_user?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_ban_of_banned_user_idNestedInput\n    related_warning?: discussionboard_warningUpdateOneWithoutDiscussionboard_banNestedInput\n  }\n\n  export type discussionboard_banUncheckedUpdateWithoutBan_actorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    banned_user_id?: StringFieldUpdateOperationsInput | string\n    warning_id?: NullableStringFieldUpdateOperationsInput | string | null\n    ban_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_banUncheckedUpdateManyWithoutBan_actorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    banned_user_id?: StringFieldUpdateOperationsInput | string\n    warning_id?: NullableStringFieldUpdateOperationsInput | string | null\n    ban_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_notificationUpdateWithoutRecipient_userInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    type?: StringFieldUpdateOperationsInput | string\n    message?: StringFieldUpdateOperationsInput | string\n    is_read?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    related_post?: discussionboard_postUpdateOneWithoutDiscussionboard_notificationNestedInput\n    related_comment?: discussionboard_commentsUpdateOneWithoutDiscussionboard_notificationNestedInput\n    actor_user?: discussionboard_userUpdateOneWithoutDiscussionboard_notification_of_actor_user_idNestedInput\n  }\n\n  export type discussionboard_notificationUncheckedUpdateWithoutRecipient_userInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    related_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    type?: StringFieldUpdateOperationsInput | string\n    message?: StringFieldUpdateOperationsInput | string\n    is_read?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_notificationUncheckedUpdateManyWithoutRecipient_userInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    related_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    type?: StringFieldUpdateOperationsInput | string\n    message?: StringFieldUpdateOperationsInput | string\n    is_read?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_notificationUpdateWithoutActor_userInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    type?: StringFieldUpdateOperationsInput | string\n    message?: StringFieldUpdateOperationsInput | string\n    is_read?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    recipient_user?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_notification_of_recipient_user_idNestedInput\n    related_post?: discussionboard_postUpdateOneWithoutDiscussionboard_notificationNestedInput\n    related_comment?: discussionboard_commentsUpdateOneWithoutDiscussionboard_notificationNestedInput\n  }\n\n  export type discussionboard_notificationUncheckedUpdateWithoutActor_userInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    recipient_user_id?: StringFieldUpdateOperationsInput | string\n    related_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    type?: StringFieldUpdateOperationsInput | string\n    message?: StringFieldUpdateOperationsInput | string\n    is_read?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_notificationUncheckedUpdateManyWithoutActor_userInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    recipient_user_id?: StringFieldUpdateOperationsInput | string\n    related_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    type?: StringFieldUpdateOperationsInput | string\n    message?: StringFieldUpdateOperationsInput | string\n    is_read?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_audit_logUpdateWithoutFk_audit_actor_userInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    action_type?: StringFieldUpdateOperationsInput | string\n    entity_type?: StringFieldUpdateOperationsInput | string\n    entity_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_detail?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    fk_audit_target_user?: discussionboard_userUpdateOneWithoutDiscussionboard_audit_log_of_target_user_idNestedInput\n  }\n\n  export type discussionboard_audit_logUncheckedUpdateWithoutFk_audit_actor_userInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    target_user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    entity_type?: StringFieldUpdateOperationsInput | string\n    entity_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_detail?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_actor_userInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    target_user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    entity_type?: StringFieldUpdateOperationsInput | string\n    entity_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_detail?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_audit_logUpdateWithoutFk_audit_target_userInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    action_type?: StringFieldUpdateOperationsInput | string\n    entity_type?: StringFieldUpdateOperationsInput | string\n    entity_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_detail?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    fk_audit_actor_user?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_audit_log_of_actor_user_idNestedInput\n  }\n\n  export type discussionboard_audit_logUncheckedUpdateWithoutFk_audit_target_userInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_user_id?: StringFieldUpdateOperationsInput | string\n    action_type?: StringFieldUpdateOperationsInput | string\n    entity_type?: StringFieldUpdateOperationsInput | string\n    entity_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_detail?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_audit_logUncheckedUpdateManyWithoutFk_audit_target_userInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_user_id?: StringFieldUpdateOperationsInput | string\n    action_type?: StringFieldUpdateOperationsInput | string\n    entity_type?: StringFieldUpdateOperationsInput | string\n    entity_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_detail?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_postCreateManyMemberInput = {\n    id: string\n    category_id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type discussionboard_postUpdateWithoutMemberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    category?: discussionboard_post_categoryUpdateOneRequiredWithoutDiscussionboard_postNestedInput\n    discussionboard_post_attachment?: discussionboard_post_attachmentUpdateManyWithoutPostNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutPostNestedInput\n    discussionboard_likes?: discussionboard_likesUpdateManyWithoutPostNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutPostNestedInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUpdateManyWithoutModerated_postNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReviewed_postNestedInput\n    discussionboard_warning?: discussionboard_warningUpdateManyWithoutWarning_postNestedInput\n    discussionboard_notification?: discussionboard_notificationUpdateManyWithoutRelated_postNestedInput\n  }\n\n  export type discussionboard_postUncheckedUpdateWithoutMemberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_post_attachment?: discussionboard_post_attachmentUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_likes?: discussionboard_likesUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUncheckedUpdateManyWithoutModerated_postNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReviewed_postNestedInput\n    discussionboard_warning?: discussionboard_warningUncheckedUpdateManyWithoutWarning_postNestedInput\n    discussionboard_notification?: discussionboard_notificationUncheckedUpdateManyWithoutRelated_postNestedInput\n  }\n\n  export type discussionboard_postUncheckedUpdateManyWithoutMemberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_post_attachmentCreateManyPostInput = {\n    id: string\n    file_url: string\n    file_type: string\n    uploaded_at: Date | string\n  }\n\n  export type discussionboard_commentsCreateManyPostInput = {\n    id: string\n    author_id: string\n    parent_comment_id?: string | null\n    content: string\n    is_edited: boolean\n    is_deleted: boolean\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_likesCreateManyPostInput = {\n    id: string\n    user_id: string\n    comment_id?: string | null\n    created_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type discussionboard_reportsCreateManyPostInput = {\n    id: string\n    user_id: string\n    comment_id?: string | null\n    reason_code: string\n    reason_details?: string | null\n    created_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type discussionboard_moderation_actionCreateManyModerated_postInput = {\n    id: string\n    actor_id: string\n    target_user_id: string\n    comment_id?: string | null\n    action_type: string\n    reason: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_report_reviewCreateManyReviewed_postInput = {\n    id: string\n    report_id: string\n    reviewer_id: string\n    comment_id?: string | null\n    review_status: string\n    moderator_comment?: string | null\n    reviewed_at: Date | string\n  }\n\n  export type discussionboard_warningCreateManyWarning_postInput = {\n    id: string\n    issued_by_id: string\n    issued_to_id: string\n    comment_id?: string | null\n    warning_type: string\n    message: string\n    issued_at: Date | string\n  }\n\n  export type discussionboard_notificationCreateManyRelated_postInput = {\n    id: string\n    recipient_user_id: string\n    related_comment_id?: string | null\n    actor_user_id?: string | null\n    type: string\n    message: string\n    is_read: boolean\n    created_at: Date | string\n  }\n\n  export type discussionboard_post_attachmentUpdateWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    file_url?: StringFieldUpdateOperationsInput | string\n    file_type?: StringFieldUpdateOperationsInput | string\n    uploaded_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_post_attachmentUncheckedUpdateWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    file_url?: StringFieldUpdateOperationsInput | string\n    file_type?: StringFieldUpdateOperationsInput | string\n    uploaded_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_post_attachmentUncheckedUpdateManyWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    file_url?: StringFieldUpdateOperationsInput | string\n    file_type?: StringFieldUpdateOperationsInput | string\n    uploaded_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_commentsUpdateWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    is_edited?: BoolFieldUpdateOperationsInput | boolean\n    is_deleted?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    author?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput\n    parent_comment?: discussionboard_commentsUpdateOneWithoutRecursiveNestedInput\n    recursive?: discussionboard_commentsUpdateManyWithoutParent_commentNestedInput\n    discussionboard_likes?: discussionboard_likesUpdateManyWithoutCommentNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutCommentNestedInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUpdateManyWithoutModerated_commentNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReviewed_commentNestedInput\n    discussionboard_warning?: discussionboard_warningUpdateManyWithoutWarning_commentNestedInput\n    discussionboard_notification?: discussionboard_notificationUpdateManyWithoutRelated_commentNestedInput\n  }\n\n  export type discussionboard_commentsUncheckedUpdateWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    author_id?: StringFieldUpdateOperationsInput | string\n    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    content?: StringFieldUpdateOperationsInput | string\n    is_edited?: BoolFieldUpdateOperationsInput | boolean\n    is_deleted?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    recursive?: discussionboard_commentsUncheckedUpdateManyWithoutParent_commentNestedInput\n    discussionboard_likes?: discussionboard_likesUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUncheckedUpdateManyWithoutModerated_commentNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReviewed_commentNestedInput\n    discussionboard_warning?: discussionboard_warningUncheckedUpdateManyWithoutWarning_commentNestedInput\n    discussionboard_notification?: discussionboard_notificationUncheckedUpdateManyWithoutRelated_commentNestedInput\n  }\n\n  export type discussionboard_commentsUncheckedUpdateManyWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    author_id?: StringFieldUpdateOperationsInput | string\n    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    content?: StringFieldUpdateOperationsInput | string\n    is_edited?: BoolFieldUpdateOperationsInput | boolean\n    is_deleted?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_likesUpdateWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    user?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_likesNestedInput\n    comment?: discussionboard_commentsUpdateOneWithoutDiscussionboard_likesNestedInput\n  }\n\n  export type discussionboard_likesUncheckedUpdateWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_likesUncheckedUpdateManyWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_reportsUpdateWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reason_code?: StringFieldUpdateOperationsInput | string\n    reason_details?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    user?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_reportsNestedInput\n    comment?: discussionboard_commentsUpdateOneWithoutDiscussionboard_reportsNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReportNestedInput\n  }\n\n  export type discussionboard_reportsUncheckedUpdateWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason_code?: StringFieldUpdateOperationsInput | string\n    reason_details?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReportNestedInput\n  }\n\n  export type discussionboard_reportsUncheckedUpdateManyWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason_code?: StringFieldUpdateOperationsInput | string\n    reason_details?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_moderation_actionUpdateWithoutModerated_postInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    action_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    actor?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_moderation_action_of_actor_idNestedInput\n    target_user?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_moderation_action_of_target_user_idNestedInput\n    moderated_comment?: discussionboard_commentsUpdateOneWithoutDiscussionboard_moderation_actionNestedInput\n  }\n\n  export type discussionboard_moderation_actionUncheckedUpdateWithoutModerated_postInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_id?: StringFieldUpdateOperationsInput | string\n    target_user_id?: StringFieldUpdateOperationsInput | string\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_moderation_actionUncheckedUpdateManyWithoutModerated_postInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_id?: StringFieldUpdateOperationsInput | string\n    target_user_id?: StringFieldUpdateOperationsInput | string\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_report_reviewUpdateWithoutReviewed_postInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    review_status?: StringFieldUpdateOperationsInput | string\n    moderator_comment?: NullableStringFieldUpdateOperationsInput | string | null\n    reviewed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    report?: discussionboard_reportsUpdateOneRequiredWithoutDiscussionboard_report_reviewNestedInput\n    reviewer?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_report_reviewNestedInput\n    reviewed_comment?: discussionboard_commentsUpdateOneWithoutDiscussionboard_report_reviewNestedInput\n  }\n\n  export type discussionboard_report_reviewUncheckedUpdateWithoutReviewed_postInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    report_id?: StringFieldUpdateOperationsInput | string\n    reviewer_id?: StringFieldUpdateOperationsInput | string\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    review_status?: StringFieldUpdateOperationsInput | string\n    moderator_comment?: NullableStringFieldUpdateOperationsInput | string | null\n    reviewed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_report_reviewUncheckedUpdateManyWithoutReviewed_postInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    report_id?: StringFieldUpdateOperationsInput | string\n    reviewer_id?: StringFieldUpdateOperationsInput | string\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    review_status?: StringFieldUpdateOperationsInput | string\n    moderator_comment?: NullableStringFieldUpdateOperationsInput | string | null\n    reviewed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_warningUpdateWithoutWarning_postInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    warning_type?: StringFieldUpdateOperationsInput | string\n    message?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    issuer?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_warning_of_issued_by_idNestedInput\n    recipient?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_warning_of_issued_to_idNestedInput\n    warning_comment?: discussionboard_commentsUpdateOneWithoutDiscussionboard_warningNestedInput\n    discussionboard_ban?: discussionboard_banUpdateManyWithoutRelated_warningNestedInput\n  }\n\n  export type discussionboard_warningUncheckedUpdateWithoutWarning_postInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    issued_by_id?: StringFieldUpdateOperationsInput | string\n    issued_to_id?: StringFieldUpdateOperationsInput | string\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    warning_type?: StringFieldUpdateOperationsInput | string\n    message?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_ban?: discussionboard_banUncheckedUpdateManyWithoutRelated_warningNestedInput\n  }\n\n  export type discussionboard_warningUncheckedUpdateManyWithoutWarning_postInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    issued_by_id?: StringFieldUpdateOperationsInput | string\n    issued_to_id?: StringFieldUpdateOperationsInput | string\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    warning_type?: StringFieldUpdateOperationsInput | string\n    message?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_notificationUpdateWithoutRelated_postInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    type?: StringFieldUpdateOperationsInput | string\n    message?: StringFieldUpdateOperationsInput | string\n    is_read?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    recipient_user?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_notification_of_recipient_user_idNestedInput\n    related_comment?: discussionboard_commentsUpdateOneWithoutDiscussionboard_notificationNestedInput\n    actor_user?: discussionboard_userUpdateOneWithoutDiscussionboard_notification_of_actor_user_idNestedInput\n  }\n\n  export type discussionboard_notificationUncheckedUpdateWithoutRelated_postInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    recipient_user_id?: StringFieldUpdateOperationsInput | string\n    related_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    type?: StringFieldUpdateOperationsInput | string\n    message?: StringFieldUpdateOperationsInput | string\n    is_read?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_notificationUncheckedUpdateManyWithoutRelated_postInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    recipient_user_id?: StringFieldUpdateOperationsInput | string\n    related_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    type?: StringFieldUpdateOperationsInput | string\n    message?: StringFieldUpdateOperationsInput | string\n    is_read?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_postCreateManyCategoryInput = {\n    id: string\n    author_member_id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type discussionboard_postUpdateWithoutCategoryInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    member?: discussionboard_memberUpdateOneRequiredWithoutDiscussionboard_postNestedInput\n    discussionboard_post_attachment?: discussionboard_post_attachmentUpdateManyWithoutPostNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutPostNestedInput\n    discussionboard_likes?: discussionboard_likesUpdateManyWithoutPostNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutPostNestedInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUpdateManyWithoutModerated_postNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReviewed_postNestedInput\n    discussionboard_warning?: discussionboard_warningUpdateManyWithoutWarning_postNestedInput\n    discussionboard_notification?: discussionboard_notificationUpdateManyWithoutRelated_postNestedInput\n  }\n\n  export type discussionboard_postUncheckedUpdateWithoutCategoryInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    author_member_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_post_attachment?: discussionboard_post_attachmentUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_likes?: discussionboard_likesUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUncheckedUpdateManyWithoutModerated_postNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReviewed_postNestedInput\n    discussionboard_warning?: discussionboard_warningUncheckedUpdateManyWithoutWarning_postNestedInput\n    discussionboard_notification?: discussionboard_notificationUncheckedUpdateManyWithoutRelated_postNestedInput\n  }\n\n  export type discussionboard_postUncheckedUpdateManyWithoutCategoryInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    author_member_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_commentsCreateManyParent_commentInput = {\n    id: string\n    post_id: string\n    author_id: string\n    content: string\n    is_edited: boolean\n    is_deleted: boolean\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_likesCreateManyCommentInput = {\n    id: string\n    user_id: string\n    post_id?: string | null\n    created_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type discussionboard_reportsCreateManyCommentInput = {\n    id: string\n    user_id: string\n    post_id?: string | null\n    reason_code: string\n    reason_details?: string | null\n    created_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type discussionboard_moderation_actionCreateManyModerated_commentInput = {\n    id: string\n    actor_id: string\n    target_user_id: string\n    post_id?: string | null\n    action_type: string\n    reason: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_report_reviewCreateManyReviewed_commentInput = {\n    id: string\n    report_id: string\n    reviewer_id: string\n    post_id?: string | null\n    review_status: string\n    moderator_comment?: string | null\n    reviewed_at: Date | string\n  }\n\n  export type discussionboard_warningCreateManyWarning_commentInput = {\n    id: string\n    issued_by_id: string\n    issued_to_id: string\n    post_id?: string | null\n    warning_type: string\n    message: string\n    issued_at: Date | string\n  }\n\n  export type discussionboard_notificationCreateManyRelated_commentInput = {\n    id: string\n    recipient_user_id: string\n    related_post_id?: string | null\n    actor_user_id?: string | null\n    type: string\n    message: string\n    is_read: boolean\n    created_at: Date | string\n  }\n\n  export type discussionboard_commentsUpdateWithoutParent_commentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    is_edited?: BoolFieldUpdateOperationsInput | boolean\n    is_deleted?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    post?: discussionboard_postUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput\n    author?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput\n    recursive?: discussionboard_commentsUpdateManyWithoutParent_commentNestedInput\n    discussionboard_likes?: discussionboard_likesUpdateManyWithoutCommentNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutCommentNestedInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUpdateManyWithoutModerated_commentNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReviewed_commentNestedInput\n    discussionboard_warning?: discussionboard_warningUpdateManyWithoutWarning_commentNestedInput\n    discussionboard_notification?: discussionboard_notificationUpdateManyWithoutRelated_commentNestedInput\n  }\n\n  export type discussionboard_commentsUncheckedUpdateWithoutParent_commentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    author_id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    is_edited?: BoolFieldUpdateOperationsInput | boolean\n    is_deleted?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    recursive?: discussionboard_commentsUncheckedUpdateManyWithoutParent_commentNestedInput\n    discussionboard_likes?: discussionboard_likesUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_moderation_action?: discussionboard_moderation_actionUncheckedUpdateManyWithoutModerated_commentNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReviewed_commentNestedInput\n    discussionboard_warning?: discussionboard_warningUncheckedUpdateManyWithoutWarning_commentNestedInput\n    discussionboard_notification?: discussionboard_notificationUncheckedUpdateManyWithoutRelated_commentNestedInput\n  }\n\n  export type discussionboard_commentsUncheckedUpdateManyWithoutParent_commentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    author_id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    is_edited?: BoolFieldUpdateOperationsInput | boolean\n    is_deleted?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_likesUpdateWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    user?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_likesNestedInput\n    post?: discussionboard_postUpdateOneWithoutDiscussionboard_likesNestedInput\n  }\n\n  export type discussionboard_likesUncheckedUpdateWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_likesUncheckedUpdateManyWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_reportsUpdateWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reason_code?: StringFieldUpdateOperationsInput | string\n    reason_details?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    user?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_reportsNestedInput\n    post?: discussionboard_postUpdateOneWithoutDiscussionboard_reportsNestedInput\n    discussionboard_report_review?: discussionboard_report_reviewUpdateManyWithoutReportNestedInput\n  }\n\n  export type discussionboard_reportsUncheckedUpdateWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason_code?: StringFieldUpdateOperationsInput | string\n    reason_details?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_report_review?: discussionboard_report_reviewUncheckedUpdateManyWithoutReportNestedInput\n  }\n\n  export type discussionboard_reportsUncheckedUpdateManyWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason_code?: StringFieldUpdateOperationsInput | string\n    reason_details?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_moderation_actionUpdateWithoutModerated_commentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    action_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    actor?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_moderation_action_of_actor_idNestedInput\n    target_user?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_moderation_action_of_target_user_idNestedInput\n    moderated_post?: discussionboard_postUpdateOneWithoutDiscussionboard_moderation_actionNestedInput\n  }\n\n  export type discussionboard_moderation_actionUncheckedUpdateWithoutModerated_commentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_id?: StringFieldUpdateOperationsInput | string\n    target_user_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_moderation_actionUncheckedUpdateManyWithoutModerated_commentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_id?: StringFieldUpdateOperationsInput | string\n    target_user_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_report_reviewUpdateWithoutReviewed_commentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    review_status?: StringFieldUpdateOperationsInput | string\n    moderator_comment?: NullableStringFieldUpdateOperationsInput | string | null\n    reviewed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    report?: discussionboard_reportsUpdateOneRequiredWithoutDiscussionboard_report_reviewNestedInput\n    reviewer?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_report_reviewNestedInput\n    reviewed_post?: discussionboard_postUpdateOneWithoutDiscussionboard_report_reviewNestedInput\n  }\n\n  export type discussionboard_report_reviewUncheckedUpdateWithoutReviewed_commentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    report_id?: StringFieldUpdateOperationsInput | string\n    reviewer_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    review_status?: StringFieldUpdateOperationsInput | string\n    moderator_comment?: NullableStringFieldUpdateOperationsInput | string | null\n    reviewed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_report_reviewUncheckedUpdateManyWithoutReviewed_commentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    report_id?: StringFieldUpdateOperationsInput | string\n    reviewer_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    review_status?: StringFieldUpdateOperationsInput | string\n    moderator_comment?: NullableStringFieldUpdateOperationsInput | string | null\n    reviewed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_warningUpdateWithoutWarning_commentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    warning_type?: StringFieldUpdateOperationsInput | string\n    message?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    issuer?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_warning_of_issued_by_idNestedInput\n    recipient?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_warning_of_issued_to_idNestedInput\n    warning_post?: discussionboard_postUpdateOneWithoutDiscussionboard_warningNestedInput\n    discussionboard_ban?: discussionboard_banUpdateManyWithoutRelated_warningNestedInput\n  }\n\n  export type discussionboard_warningUncheckedUpdateWithoutWarning_commentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    issued_by_id?: StringFieldUpdateOperationsInput | string\n    issued_to_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    warning_type?: StringFieldUpdateOperationsInput | string\n    message?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_ban?: discussionboard_banUncheckedUpdateManyWithoutRelated_warningNestedInput\n  }\n\n  export type discussionboard_warningUncheckedUpdateManyWithoutWarning_commentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    issued_by_id?: StringFieldUpdateOperationsInput | string\n    issued_to_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    warning_type?: StringFieldUpdateOperationsInput | string\n    message?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_notificationUpdateWithoutRelated_commentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    type?: StringFieldUpdateOperationsInput | string\n    message?: StringFieldUpdateOperationsInput | string\n    is_read?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    recipient_user?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_notification_of_recipient_user_idNestedInput\n    related_post?: discussionboard_postUpdateOneWithoutDiscussionboard_notificationNestedInput\n    actor_user?: discussionboard_userUpdateOneWithoutDiscussionboard_notification_of_actor_user_idNestedInput\n  }\n\n  export type discussionboard_notificationUncheckedUpdateWithoutRelated_commentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    recipient_user_id?: StringFieldUpdateOperationsInput | string\n    related_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    type?: StringFieldUpdateOperationsInput | string\n    message?: StringFieldUpdateOperationsInput | string\n    is_read?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_notificationUncheckedUpdateManyWithoutRelated_commentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    recipient_user_id?: StringFieldUpdateOperationsInput | string\n    related_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    type?: StringFieldUpdateOperationsInput | string\n    message?: StringFieldUpdateOperationsInput | string\n    is_read?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_report_reviewCreateManyReportInput = {\n    id: string\n    reviewer_id: string\n    post_id?: string | null\n    comment_id?: string | null\n    review_status: string\n    moderator_comment?: string | null\n    reviewed_at: Date | string\n  }\n\n  export type discussionboard_report_reviewUpdateWithoutReportInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    review_status?: StringFieldUpdateOperationsInput | string\n    moderator_comment?: NullableStringFieldUpdateOperationsInput | string | null\n    reviewed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    reviewer?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_report_reviewNestedInput\n    reviewed_post?: discussionboard_postUpdateOneWithoutDiscussionboard_report_reviewNestedInput\n    reviewed_comment?: discussionboard_commentsUpdateOneWithoutDiscussionboard_report_reviewNestedInput\n  }\n\n  export type discussionboard_report_reviewUncheckedUpdateWithoutReportInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reviewer_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    review_status?: StringFieldUpdateOperationsInput | string\n    moderator_comment?: NullableStringFieldUpdateOperationsInput | string | null\n    reviewed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_report_reviewUncheckedUpdateManyWithoutReportInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reviewer_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    review_status?: StringFieldUpdateOperationsInput | string\n    moderator_comment?: NullableStringFieldUpdateOperationsInput | string | null\n    reviewed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_banCreateManyRelated_warningInput = {\n    id: string\n    banned_user_id: string\n    banned_by_id: string\n    ban_type: string\n    reason: string\n    issued_at: Date | string\n    expires_at?: Date | string | null\n  }\n\n  export type discussionboard_banUpdateWithoutRelated_warningInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    ban_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    banned_user?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_ban_of_banned_user_idNestedInput\n    ban_actor?: discussionboard_userUpdateOneRequiredWithoutDiscussionboard_ban_of_banned_by_idNestedInput\n  }\n\n  export type discussionboard_banUncheckedUpdateWithoutRelated_warningInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    banned_user_id?: StringFieldUpdateOperationsInput | string\n    banned_by_id?: StringFieldUpdateOperationsInput | string\n    ban_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_banUncheckedUpdateManyWithoutRelated_warningInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    banned_user_id?: StringFieldUpdateOperationsInput | string\n    banned_by_id?: StringFieldUpdateOperationsInput | string\n    ban_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n\n\n  /**\n   * Batch Payload for updateMany & deleteMany & createMany\n   */\n\n  export type BatchPayload = {\n    count: number\n  }\n\n  /**\n   * DMMF\n   */\n  export const dmmf: runtime.BaseDMMF\n}",
        "node_modules/.prisma/client/runtime/index-browser.d.ts": "declare class AnyNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\ndeclare type Args<T, F extends Operation> = T extends {\r\n    [K: symbol]: {\r\n        types: {\r\n            operations: {\r\n                [K in F]: {\r\n                    args: any;\r\n                };\r\n            };\r\n        };\r\n    };\r\n} ? T[symbol]['types']['operations'][F]['args'] : any;\r\n\r\ndeclare class DbNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\nexport declare function Decimal(n: Decimal.Value): Decimal;\r\n\r\nexport declare namespace Decimal {\r\n    export type Constructor = typeof Decimal;\r\n    export type Instance = Decimal;\r\n    export type Rounding = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8;\r\n    export type Modulo = Rounding | 9;\r\n    export type Value = string | number | Decimal;\r\n\r\n    // http://mikemcl.github.io/decimal.js/#constructor-properties\r\n    export interface Config {\r\n        precision?: number;\r\n        rounding?: Rounding;\r\n        toExpNeg?: number;\r\n        toExpPos?: number;\r\n        minE?: number;\r\n        maxE?: number;\r\n        crypto?: boolean;\r\n        modulo?: Modulo;\r\n        defaults?: boolean;\r\n    }\r\n}\r\n\r\nexport declare class Decimal {\r\n    readonly d: number[];\r\n    readonly e: number;\r\n    readonly s: number;\r\n\r\n    constructor(n: Decimal.Value);\r\n\r\n    absoluteValue(): Decimal;\r\n    abs(): Decimal;\r\n\r\n    ceil(): Decimal;\r\n\r\n    clampedTo(min: Decimal.Value, max: Decimal.Value): Decimal;\r\n    clamp(min: Decimal.Value, max: Decimal.Value): Decimal;\r\n\r\n    comparedTo(n: Decimal.Value): number;\r\n    cmp(n: Decimal.Value): number;\r\n\r\n    cosine(): Decimal;\r\n    cos(): Decimal;\r\n\r\n    cubeRoot(): Decimal;\r\n    cbrt(): Decimal;\r\n\r\n    decimalPlaces(): number;\r\n    dp(): number;\r\n\r\n    dividedBy(n: Decimal.Value): Decimal;\r\n    div(n: Decimal.Value): Decimal;\r\n\r\n    dividedToIntegerBy(n: Decimal.Value): Decimal;\r\n    divToInt(n: Decimal.Value): Decimal;\r\n\r\n    equals(n: Decimal.Value): boolean;\r\n    eq(n: Decimal.Value): boolean;\r\n\r\n    floor(): Decimal;\r\n\r\n    greaterThan(n: Decimal.Value): boolean;\r\n    gt(n: Decimal.Value): boolean;\r\n\r\n    greaterThanOrEqualTo(n: Decimal.Value): boolean;\r\n    gte(n: Decimal.Value): boolean;\r\n\r\n    hyperbolicCosine(): Decimal;\r\n    cosh(): Decimal;\r\n\r\n    hyperbolicSine(): Decimal;\r\n    sinh(): Decimal;\r\n\r\n    hyperbolicTangent(): Decimal;\r\n    tanh(): Decimal;\r\n\r\n    inverseCosine(): Decimal;\r\n    acos(): Decimal;\r\n\r\n    inverseHyperbolicCosine(): Decimal;\r\n    acosh(): Decimal;\r\n\r\n    inverseHyperbolicSine(): Decimal;\r\n    asinh(): Decimal;\r\n\r\n    inverseHyperbolicTangent(): Decimal;\r\n    atanh(): Decimal;\r\n\r\n    inverseSine(): Decimal;\r\n    asin(): Decimal;\r\n\r\n    inverseTangent(): Decimal;\r\n    atan(): Decimal;\r\n\r\n    isFinite(): boolean;\r\n\r\n    isInteger(): boolean;\r\n    isInt(): boolean;\r\n\r\n    isNaN(): boolean;\r\n\r\n    isNegative(): boolean;\r\n    isNeg(): boolean;\r\n\r\n    isPositive(): boolean;\r\n    isPos(): boolean;\r\n\r\n    isZero(): boolean;\r\n\r\n    lessThan(n: Decimal.Value): boolean;\r\n    lt(n: Decimal.Value): boolean;\r\n\r\n    lessThanOrEqualTo(n: Decimal.Value): boolean;\r\n    lte(n: Decimal.Value): boolean;\r\n\r\n    logarithm(n?: Decimal.Value): Decimal;\r\n    log(n?: Decimal.Value): Decimal;\r\n\r\n    minus(n: Decimal.Value): Decimal;\r\n    sub(n: Decimal.Value): Decimal;\r\n\r\n    modulo(n: Decimal.Value): Decimal;\r\n    mod(n: Decimal.Value): Decimal;\r\n\r\n    naturalExponential(): Decimal;\r\n    exp(): Decimal;\r\n\r\n    naturalLogarithm(): Decimal;\r\n    ln(): Decimal;\r\n\r\n    negated(): Decimal;\r\n    neg(): Decimal;\r\n\r\n    plus(n: Decimal.Value): Decimal;\r\n    add(n: Decimal.Value): Decimal;\r\n\r\n    precision(includeZeros?: boolean): number;\r\n    sd(includeZeros?: boolean): number;\r\n\r\n    round(): Decimal;\r\n\r\n    sine() : Decimal;\r\n    sin() : Decimal;\r\n\r\n    squareRoot(): Decimal;\r\n    sqrt(): Decimal;\r\n\r\n    tangent() : Decimal;\r\n    tan() : Decimal;\r\n\r\n    times(n: Decimal.Value): Decimal;\r\n    mul(n: Decimal.Value) : Decimal;\r\n\r\n    toBinary(significantDigits?: number): string;\r\n    toBinary(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toDecimalPlaces(decimalPlaces?: number): Decimal;\r\n    toDecimalPlaces(decimalPlaces: number, rounding: Decimal.Rounding): Decimal;\r\n    toDP(decimalPlaces?: number): Decimal;\r\n    toDP(decimalPlaces: number, rounding: Decimal.Rounding): Decimal;\r\n\r\n    toExponential(decimalPlaces?: number): string;\r\n    toExponential(decimalPlaces: number, rounding: Decimal.Rounding): string;\r\n\r\n    toFixed(decimalPlaces?: number): string;\r\n    toFixed(decimalPlaces: number, rounding: Decimal.Rounding): string;\r\n\r\n    toFraction(max_denominator?: Decimal.Value): Decimal[];\r\n\r\n    toHexadecimal(significantDigits?: number): string;\r\n    toHexadecimal(significantDigits: number, rounding: Decimal.Rounding): string;\r\n    toHex(significantDigits?: number): string;\r\n    toHex(significantDigits: number, rounding?: Decimal.Rounding): string;\r\n\r\n    toJSON(): string;\r\n\r\n    toNearest(n: Decimal.Value, rounding?: Decimal.Rounding): Decimal;\r\n\r\n    toNumber(): number;\r\n\r\n    toOctal(significantDigits?: number): string;\r\n    toOctal(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toPower(n: Decimal.Value): Decimal;\r\n    pow(n: Decimal.Value): Decimal;\r\n\r\n    toPrecision(significantDigits?: number): string;\r\n    toPrecision(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toSignificantDigits(significantDigits?: number): Decimal;\r\n    toSignificantDigits(significantDigits: number, rounding: Decimal.Rounding): Decimal;\r\n    toSD(significantDigits?: number): Decimal;\r\n    toSD(significantDigits: number, rounding: Decimal.Rounding): Decimal;\r\n\r\n    toString(): string;\r\n\r\n    truncated(): Decimal;\r\n    trunc(): Decimal;\r\n\r\n    valueOf(): string;\r\n\r\n    static abs(n: Decimal.Value): Decimal;\r\n    static acos(n: Decimal.Value): Decimal;\r\n    static acosh(n: Decimal.Value): Decimal;\r\n    static add(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static asin(n: Decimal.Value): Decimal;\r\n    static asinh(n: Decimal.Value): Decimal;\r\n    static atan(n: Decimal.Value): Decimal;\r\n    static atanh(n: Decimal.Value): Decimal;\r\n    static atan2(y: Decimal.Value, x: Decimal.Value): Decimal;\r\n    static cbrt(n: Decimal.Value): Decimal;\r\n    static ceil(n: Decimal.Value): Decimal;\r\n    static clamp(n: Decimal.Value, min: Decimal.Value, max: Decimal.Value): Decimal;\r\n    static clone(object?: Decimal.Config): Decimal.Constructor;\r\n    static config(object: Decimal.Config): Decimal.Constructor;\r\n    static cos(n: Decimal.Value): Decimal;\r\n    static cosh(n: Decimal.Value): Decimal;\r\n    static div(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static exp(n: Decimal.Value): Decimal;\r\n    static floor(n: Decimal.Value): Decimal;\r\n    static hypot(...n: Decimal.Value[]): Decimal;\r\n    static isDecimal(object: any): object is Decimal;\r\n    static ln(n: Decimal.Value): Decimal;\r\n    static log(n: Decimal.Value, base?: Decimal.Value): Decimal;\r\n    static log2(n: Decimal.Value): Decimal;\r\n    static log10(n: Decimal.Value): Decimal;\r\n    static max(...n: Decimal.Value[]): Decimal;\r\n    static min(...n: Decimal.Value[]): Decimal;\r\n    static mod(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static mul(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static noConflict(): Decimal.Constructor;   // Browser only\r\n    static pow(base: Decimal.Value, exponent: Decimal.Value): Decimal;\r\n    static random(significantDigits?: number): Decimal;\r\n    static round(n: Decimal.Value): Decimal;\r\n    static set(object: Decimal.Config): Decimal.Constructor;\r\n    static sign(n: Decimal.Value): number;\r\n    static sin(n: Decimal.Value): Decimal;\r\n    static sinh(n: Decimal.Value): Decimal;\r\n    static sqrt(n: Decimal.Value): Decimal;\r\n    static sub(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static sum(...n: Decimal.Value[]): Decimal;\r\n    static tan(n: Decimal.Value): Decimal;\r\n    static tanh(n: Decimal.Value): Decimal;\r\n    static trunc(n: Decimal.Value): Decimal;\r\n\r\n    static readonly default?: Decimal.Constructor;\r\n    static readonly Decimal?: Decimal.Constructor;\r\n\r\n    static readonly precision: number;\r\n    static readonly rounding: Decimal.Rounding;\r\n    static readonly toExpNeg: number;\r\n    static readonly toExpPos: number;\r\n    static readonly minE: number;\r\n    static readonly maxE: number;\r\n    static readonly crypto: boolean;\r\n    static readonly modulo: Decimal.Modulo;\r\n\r\n    static readonly ROUND_UP: 0;\r\n    static readonly ROUND_DOWN: 1;\r\n    static readonly ROUND_CEIL: 2;\r\n    static readonly ROUND_FLOOR: 3;\r\n    static readonly ROUND_HALF_UP: 4;\r\n    static readonly ROUND_HALF_DOWN: 5;\r\n    static readonly ROUND_HALF_EVEN: 6;\r\n    static readonly ROUND_HALF_CEIL: 7;\r\n    static readonly ROUND_HALF_FLOOR: 8;\r\n    static readonly EUCLID: 9;\r\n}\r\n\r\ndeclare type Exact<A, W> = (A extends unknown ? (W extends A ? {\r\n    [K in keyof A]: Exact<A[K], W[K]>;\r\n} : W) : never) | (A extends Narrowable ? A : never);\r\n\r\nexport declare function getRuntime(): GetRuntimeOutput;\r\n\r\ndeclare type GetRuntimeOutput = {\r\n    id: RuntimeName;\r\n    prettyName: string;\r\n    isEdge: boolean;\r\n};\r\n\r\ndeclare class JsonNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\n/**\r\n * Generates more strict variant of an enum which, unlike regular enum,\r\n * throws on non-existing property access. This can be useful in following situations:\r\n * - we have an API, that accepts both `undefined` and `SomeEnumType` as an input\r\n * - enum values are generated dynamically from DMMF.\r\n *\r\n * In that case, if using normal enums and no compile-time typechecking, using non-existing property\r\n * will result in `undefined` value being used, which will be accepted. Using strict enum\r\n * in this case will help to have a runtime exception, telling you that you are probably doing something wrong.\r\n *\r\n * Note: if you need to check for existence of a value in the enum you can still use either\r\n * `in` operator or `hasOwnProperty` function.\r\n *\r\n * @param definition\r\n * @returns\r\n */\r\nexport declare function makeStrictEnum<T extends Record<PropertyKey, string | number>>(definition: T): T;\r\n\r\ndeclare type Narrowable = string | number | bigint | boolean | [];\r\n\r\ndeclare class NullTypesEnumValue extends ObjectEnumValue {\r\n    _getNamespace(): string;\r\n}\r\n\r\n/**\r\n * Base class for unique values of object-valued enums.\r\n */\r\ndeclare abstract class ObjectEnumValue {\r\n    constructor(arg?: symbol);\r\n    abstract _getNamespace(): string;\r\n    _getName(): string;\r\n    toString(): string;\r\n}\r\n\r\nexport declare const objectEnumValues: {\r\n    classes: {\r\n        DbNull: typeof DbNull;\r\n        JsonNull: typeof JsonNull;\r\n        AnyNull: typeof AnyNull;\r\n    };\r\n    instances: {\r\n        DbNull: DbNull;\r\n        JsonNull: JsonNull;\r\n        AnyNull: AnyNull;\r\n    };\r\n};\r\n\r\ndeclare type Operation = 'findFirst' | 'findFirstOrThrow' | 'findUnique' | 'findUniqueOrThrow' | 'findMany' | 'create' | 'createMany' | 'createManyAndReturn' | 'update' | 'updateMany' | 'updateManyAndReturn' | 'upsert' | 'delete' | 'deleteMany' | 'aggregate' | 'count' | 'groupBy' | '$queryRaw' | '$executeRaw' | '$queryRawUnsafe' | '$executeRawUnsafe' | 'findRaw' | 'aggregateRaw' | '$runCommandRaw';\r\n\r\ndeclare namespace Public {\r\n    export {\r\n        validator\r\n    }\r\n}\r\nexport { Public }\r\n\r\ndeclare type RuntimeName = 'workerd' | 'deno' | 'netlify' | 'node' | 'bun' | 'edge-light' | '';\r\n\r\ndeclare function validator<V>(): <S>(select: Exact<S, V>) => S;\r\n\r\ndeclare function validator<C, M extends Exclude<keyof C, `$${string}`>, O extends keyof C[M] & Operation>(client: C, model: M, operation: O): <S>(select: Exact<S, Args<C[M], O>>) => S;\r\n\r\ndeclare function validator<C, M extends Exclude<keyof C, `$${string}`>, O extends keyof C[M] & Operation, P extends keyof Args<C[M], O>>(client: C, model: M, operation: O, prop: P): <S>(select: Exact<S, Args<C[M], O>[P]>) => S;\r\n\r\nexport { }\r\n",
        "node_modules/.prisma/client/runtime/library.d.ts": "/**\r\n * @param this\r\n */\r\ndeclare function $extends(this: Client, extension: ExtensionArgs | ((client: Client) => Client)): Client;\r\n\r\ndeclare type AccelerateEngineConfig = {\r\n    inlineSchema: EngineConfig['inlineSchema'];\r\n    inlineSchemaHash: EngineConfig['inlineSchemaHash'];\r\n    env: EngineConfig['env'];\r\n    generator?: {\r\n        previewFeatures: string[];\r\n    };\r\n    inlineDatasources: EngineConfig['inlineDatasources'];\r\n    overrideDatasources: EngineConfig['overrideDatasources'];\r\n    clientVersion: EngineConfig['clientVersion'];\r\n    engineVersion: EngineConfig['engineVersion'];\r\n    logEmitter: EngineConfig['logEmitter'];\r\n    logQueries?: EngineConfig['logQueries'];\r\n    logLevel?: EngineConfig['logLevel'];\r\n    tracingHelper: EngineConfig['tracingHelper'];\r\n    accelerateUtils?: AccelerateUtils;\r\n};\r\n\r\ndeclare type AccelerateUtils = EngineConfig['accelerateUtils'];\r\n\r\nexport declare type Action = keyof typeof DMMF_2.ModelAction | 'executeRaw' | 'queryRaw' | 'runCommandRaw';\r\n\r\ndeclare type ActiveConnectorType = Exclude<ConnectorType, 'postgres' | 'prisma+postgres'>;\r\n\r\n/**\r\n * An interface that exposes some basic information about the\r\n * adapter like its name and provider type.\r\n */\r\ndeclare interface AdapterInfo {\r\n    readonly provider: Provider;\r\n    readonly adapterName: (typeof officialPrismaAdapters)[number] | (string & {});\r\n}\r\n\r\nexport declare type Aggregate = '_count' | '_max' | '_min' | '_avg' | '_sum';\r\n\r\nexport declare type AllModelsToStringIndex<TypeMap extends TypeMapDef, Args extends Record<string, any>, K extends PropertyKey> = Args extends {\r\n    [P in K]: {\r\n        $allModels: infer AllModels;\r\n    };\r\n} ? {\r\n    [P in K]: Record<TypeMap['meta']['modelProps'], AllModels>;\r\n} : {};\r\n\r\ndeclare class AnyNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\nexport declare type ApplyOmit<T, OmitConfig> = Compute<{\r\n    [K in keyof T as OmitValue<OmitConfig, K> extends true ? never : K]: T[K];\r\n}>;\r\n\r\nexport declare type Args<T, F extends Operation> = T extends {\r\n    [K: symbol]: {\r\n        types: {\r\n            operations: {\r\n                [K in F]: {\r\n                    args: any;\r\n                };\r\n            };\r\n        };\r\n    };\r\n} ? T[symbol]['types']['operations'][F]['args'] : any;\r\n\r\nexport declare type Args_3<T, F extends Operation> = Args<T, F>;\r\n\r\n/**\r\n * Original `quaint::ValueType` enum tag from Prisma's `quaint`.\r\n * Query arguments marked with this type are sanitized before being sent to the database.\r\n * Notice while a query argument may be `null`, `ArgType` is guaranteed to be defined.\r\n */\r\ndeclare type ArgType = 'Int32' | 'Int64' | 'Float' | 'Double' | 'Text' | 'Enum' | 'EnumArray' | 'Bytes' | 'Boolean' | 'Char' | 'Array' | 'Numeric' | 'Json' | 'Xml' | 'Uuid' | 'DateTime' | 'Date' | 'Time' | 'Unknown';\r\n\r\n/**\r\n * Attributes is a map from string to attribute values.\r\n *\r\n * Note: only the own enumerable keys are counted as valid attribute keys.\r\n */\r\ndeclare interface Attributes {\r\n    [attributeKey: string]: AttributeValue | undefined;\r\n}\r\n\r\n/**\r\n * Attribute values may be any non-nullish primitive value except an object.\r\n *\r\n * null or undefined attribute values are invalid and will result in undefined behavior.\r\n */\r\ndeclare type AttributeValue = string | number | boolean | Array<null | undefined | string> | Array<null | undefined | number> | Array<null | undefined | boolean>;\r\n\r\nexport declare type BaseDMMF = {\r\n    readonly datamodel: Omit<DMMF_2.Datamodel, 'indexes'>;\r\n};\r\n\r\ndeclare type BatchArgs = {\r\n    queries: BatchQuery[];\r\n    transaction?: {\r\n        isolationLevel?: IsolationLevel;\r\n    };\r\n};\r\n\r\ndeclare type BatchInternalParams = {\r\n    requests: RequestParams[];\r\n    customDataProxyFetch?: CustomDataProxyFetch;\r\n};\r\n\r\ndeclare type BatchQuery = {\r\n    model: string | undefined;\r\n    operation: string;\r\n    args: JsArgs | RawQueryArgs;\r\n};\r\n\r\ndeclare type BatchQueryEngineResult<T> = QueryEngineResultData<T> | Error;\r\n\r\ndeclare type BatchQueryOptionsCb = (args: BatchQueryOptionsCbArgs) => Promise<any>;\r\n\r\ndeclare type BatchQueryOptionsCbArgs = {\r\n    args: BatchArgs;\r\n    query: (args: BatchArgs, __internalParams?: BatchInternalParams) => Promise<unknown[]>;\r\n    __internalParams: BatchInternalParams;\r\n};\r\n\r\ndeclare type BatchResponse = MultiBatchResponse | CompactedBatchResponse;\r\n\r\ndeclare type BatchTransactionOptions = {\r\n    isolationLevel?: IsolationLevel;\r\n};\r\n\r\ndeclare interface BinaryTargetsEnvValue {\r\n    fromEnvVar: string | null;\r\n    value: string;\r\n    native?: boolean;\r\n}\r\n\r\nexport declare type Call<F extends Fn, P> = (F & {\r\n    params: P;\r\n})['returns'];\r\n\r\ndeclare interface CallSite {\r\n    getLocation(): LocationInFile | null;\r\n}\r\n\r\nexport declare type Cast<A, W> = A extends W ? A : W;\r\n\r\ndeclare type Client = ReturnType<typeof getPrismaClient> extends new () => infer T ? T : never;\r\n\r\nexport declare type ClientArg = {\r\n    [MethodName in string]: unknown;\r\n};\r\n\r\nexport declare type ClientArgs = {\r\n    client: ClientArg;\r\n};\r\n\r\nexport declare type ClientBuiltInProp = keyof DynamicClientExtensionThisBuiltin<never, never, never>;\r\n\r\nexport declare type ClientOptionDef = undefined | {\r\n    [K in string]: any;\r\n};\r\n\r\nexport declare type ClientOtherOps = {\r\n    $queryRaw<T = unknown>(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise<T>;\r\n    $queryRawTyped<T>(query: TypedSql<unknown[], T>): PrismaPromise<T[]>;\r\n    $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): PrismaPromise<T>;\r\n    $executeRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise<number>;\r\n    $executeRawUnsafe(query: string, ...values: any[]): PrismaPromise<number>;\r\n    $runCommandRaw(command: InputJsonObject): PrismaPromise<JsonObject>;\r\n};\r\n\r\ndeclare type ColumnType = (typeof ColumnTypeEnum)[keyof typeof ColumnTypeEnum];\r\n\r\ndeclare const ColumnTypeEnum: {\r\n    readonly Int32: 0;\r\n    readonly Int64: 1;\r\n    readonly Float: 2;\r\n    readonly Double: 3;\r\n    readonly Numeric: 4;\r\n    readonly Boolean: 5;\r\n    readonly Character: 6;\r\n    readonly Text: 7;\r\n    readonly Date: 8;\r\n    readonly Time: 9;\r\n    readonly DateTime: 10;\r\n    readonly Json: 11;\r\n    readonly Enum: 12;\r\n    readonly Bytes: 13;\r\n    readonly Set: 14;\r\n    readonly Uuid: 15;\r\n    readonly Int32Array: 64;\r\n    readonly Int64Array: 65;\r\n    readonly FloatArray: 66;\r\n    readonly DoubleArray: 67;\r\n    readonly NumericArray: 68;\r\n    readonly BooleanArray: 69;\r\n    readonly CharacterArray: 70;\r\n    readonly TextArray: 71;\r\n    readonly DateArray: 72;\r\n    readonly TimeArray: 73;\r\n    readonly DateTimeArray: 74;\r\n    readonly JsonArray: 75;\r\n    readonly EnumArray: 76;\r\n    readonly BytesArray: 77;\r\n    readonly UuidArray: 78;\r\n    readonly UnknownNumber: 128;\r\n};\r\n\r\ndeclare type CompactedBatchResponse = {\r\n    type: 'compacted';\r\n    plan: object;\r\n    arguments: Record<string, {}>[];\r\n    nestedSelection: string[];\r\n    keys: string[];\r\n    expectNonEmpty: boolean;\r\n};\r\n\r\ndeclare type CompilerWasmLoadingConfig = {\r\n    /**\r\n     * WASM-bindgen runtime for corresponding module\r\n     */\r\n    getRuntime: () => Promise<{\r\n        __wbg_set_wasm(exports: unknown): void;\r\n        QueryCompiler: QueryCompilerConstructor;\r\n    }>;\r\n    /**\r\n     * Loads the raw wasm module for the wasm compiler engine. This configuration is\r\n     * generated specifically for each type of client, eg. Node.js client and Edge\r\n     * clients will have different implementations.\r\n     * @remarks this is a callback on purpose, we only load the wasm if needed.\r\n     * @remarks only used by ClientEngine\r\n     */\r\n    getQueryCompilerWasmModule: () => Promise<unknown>;\r\n};\r\n\r\nexport declare type Compute<T> = T extends Function ? T : {\r\n    [K in keyof T]: T[K];\r\n} & unknown;\r\n\r\nexport declare type ComputeDeep<T> = T extends Function ? T : {\r\n    [K in keyof T]: ComputeDeep<T[K]>;\r\n} & unknown;\r\n\r\ndeclare type ComputedField = {\r\n    name: string;\r\n    needs: string[];\r\n    compute: ResultArgsFieldCompute;\r\n};\r\n\r\ndeclare type ComputedFieldsMap = {\r\n    [fieldName: string]: ComputedField;\r\n};\r\n\r\ndeclare type ConnectionInfo = {\r\n    schemaName?: string;\r\n    maxBindValues?: number;\r\n};\r\n\r\ndeclare type ConnectorType = 'mysql' | 'mongodb' | 'sqlite' | 'postgresql' | 'postgres' | 'prisma+postgres' | 'sqlserver' | 'cockroachdb';\r\n\r\ndeclare interface Context {\r\n    /**\r\n     * Get a value from the context.\r\n     *\r\n     * @param key key which identifies a context value\r\n     */\r\n    getValue(key: symbol): unknown;\r\n    /**\r\n     * Create a new context which inherits from this context and has\r\n     * the given key set to the given value.\r\n     *\r\n     * @param key context key for which to set the value\r\n     * @param value value to set for the given key\r\n     */\r\n    setValue(key: symbol, value: unknown): Context;\r\n    /**\r\n     * Return a new context which inherits from this context but does\r\n     * not contain a value for the given key.\r\n     *\r\n     * @param key context key for which to clear a value\r\n     */\r\n    deleteValue(key: symbol): Context;\r\n}\r\n\r\ndeclare type Context_2<T> = T extends {\r\n    [K: symbol]: {\r\n        ctx: infer C;\r\n    };\r\n} ? C & T & {\r\n    /**\r\n     * @deprecated Use `$name` instead.\r\n     */\r\n    name?: string;\r\n    $name?: string;\r\n    $parent?: unknown;\r\n} : T & {\r\n    /**\r\n     * @deprecated Use `$name` instead.\r\n     */\r\n    name?: string;\r\n    $name?: string;\r\n    $parent?: unknown;\r\n};\r\n\r\nexport declare type Count<O> = {\r\n    [K in keyof O]: Count<number>;\r\n} & {};\r\n\r\nexport declare function createParam(name: string): Param<unknown, string>;\r\n\r\n/**\r\n * Custom fetch function for `DataProxyEngine`.\r\n *\r\n * We can't use the actual type of `globalThis.fetch` because this will result\r\n * in API Extractor referencing Node.js type definitions in the `.d.ts` bundle\r\n * for the client runtime. We can only use such types in internal types that\r\n * don't end up exported anywhere.\r\n\r\n * It's also not possible to write a definition of `fetch` that would accept the\r\n * actual `fetch` function from different environments such as Node.js and\r\n * Cloudflare Workers (with their extensions to `RequestInit` and `Response`).\r\n * `fetch` is used in both covariant and contravariant positions in\r\n * `CustomDataProxyFetch`, making it invariant, so we need the exact same type.\r\n * Even if we removed the argument and left `fetch` in covariant position only,\r\n * then for an extension-supplied function to be assignable to `customDataProxyFetch`,\r\n * the platform-specific (or custom) `fetch` function needs to be assignable\r\n * to our `fetch` definition. This, in turn, requires the third-party `Response`\r\n * to be a subtype of our `Response` (which is not a problem, we could declare\r\n * a minimal `Response` type that only includes what we use) *and* requires the\r\n * third-party `RequestInit` to be a supertype of our `RequestInit` (i.e. we\r\n * have to declare all properties any `RequestInit` implementation in existence\r\n * could possibly have), which is not possible.\r\n *\r\n * Since `@prisma/extension-accelerate` redefines the type of\r\n * `__internalParams.customDataProxyFetch` to its own type anyway (probably for\r\n * exactly this reason), our definition is never actually used and is completely\r\n * ignored, so it doesn't matter, and we can just use `unknown` as the type of\r\n * `fetch` here.\r\n */\r\ndeclare type CustomDataProxyFetch = (fetch: unknown) => unknown;\r\n\r\ndeclare class DataLoader<T = unknown> {\r\n    private options;\r\n    batches: {\r\n        [key: string]: Job[];\r\n    };\r\n    private tickActive;\r\n    constructor(options: DataLoaderOptions<T>);\r\n    request(request: T): Promise<any>;\r\n    private dispatchBatches;\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\ndeclare type DataLoaderOptions<T> = {\r\n    singleLoader: (request: T) => Promise<any>;\r\n    batchLoader: (request: T[]) => Promise<any[]>;\r\n    batchBy: (request: T) => string | undefined;\r\n    batchOrder: (requestA: T, requestB: T) => number;\r\n};\r\n\r\ndeclare type Datamodel = ReadonlyDeep_2<{\r\n    models: Model[];\r\n    enums: DatamodelEnum[];\r\n    types: Model[];\r\n    indexes: Index[];\r\n}>;\r\n\r\ndeclare type DatamodelEnum = ReadonlyDeep_2<{\r\n    name: string;\r\n    values: EnumValue[];\r\n    dbName?: string | null;\r\n    documentation?: string;\r\n}>;\r\n\r\ndeclare function datamodelEnumToSchemaEnum(datamodelEnum: DatamodelEnum): SchemaEnum;\r\n\r\ndeclare type Datasource = {\r\n    url?: string;\r\n};\r\n\r\ndeclare type Datasources = {\r\n    [name in string]: Datasource;\r\n};\r\n\r\ndeclare class DbNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\nexport declare const Debug: typeof debugCreate & {\r\n    enable(namespace: any): void;\r\n    disable(): any;\r\n    enabled(namespace: string): boolean;\r\n    log: (...args: string[]) => void;\r\n    formatters: {};\r\n};\r\n\r\n/**\r\n * Create a new debug instance with the given namespace.\r\n *\r\n * @example\r\n * ```ts\r\n * import Debug from '@prisma/debug'\r\n * const debug = Debug('prisma:client')\r\n * debug('Hello World')\r\n * ```\r\n */\r\ndeclare function debugCreate(namespace: string): ((...args: any[]) => void) & {\r\n    color: string;\r\n    enabled: boolean;\r\n    namespace: string;\r\n    log: (...args: string[]) => void;\r\n    extend: () => void;\r\n};\r\n\r\nexport declare function Decimal(n: Decimal.Value): Decimal;\r\n\r\nexport declare namespace Decimal {\r\n    export type Constructor = typeof Decimal;\r\n    export type Instance = Decimal;\r\n    export type Rounding = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8;\r\n    export type Modulo = Rounding | 9;\r\n    export type Value = string | number | Decimal;\r\n\r\n    // http://mikemcl.github.io/decimal.js/#constructor-properties\r\n    export interface Config {\r\n        precision?: number;\r\n        rounding?: Rounding;\r\n        toExpNeg?: number;\r\n        toExpPos?: number;\r\n        minE?: number;\r\n        maxE?: number;\r\n        crypto?: boolean;\r\n        modulo?: Modulo;\r\n        defaults?: boolean;\r\n    }\r\n}\r\n\r\nexport declare class Decimal {\r\n    readonly d: number[];\r\n    readonly e: number;\r\n    readonly s: number;\r\n\r\n    constructor(n: Decimal.Value);\r\n\r\n    absoluteValue(): Decimal;\r\n    abs(): Decimal;\r\n\r\n    ceil(): Decimal;\r\n\r\n    clampedTo(min: Decimal.Value, max: Decimal.Value): Decimal;\r\n    clamp(min: Decimal.Value, max: Decimal.Value): Decimal;\r\n\r\n    comparedTo(n: Decimal.Value): number;\r\n    cmp(n: Decimal.Value): number;\r\n\r\n    cosine(): Decimal;\r\n    cos(): Decimal;\r\n\r\n    cubeRoot(): Decimal;\r\n    cbrt(): Decimal;\r\n\r\n    decimalPlaces(): number;\r\n    dp(): number;\r\n\r\n    dividedBy(n: Decimal.Value): Decimal;\r\n    div(n: Decimal.Value): Decimal;\r\n\r\n    dividedToIntegerBy(n: Decimal.Value): Decimal;\r\n    divToInt(n: Decimal.Value): Decimal;\r\n\r\n    equals(n: Decimal.Value): boolean;\r\n    eq(n: Decimal.Value): boolean;\r\n\r\n    floor(): Decimal;\r\n\r\n    greaterThan(n: Decimal.Value): boolean;\r\n    gt(n: Decimal.Value): boolean;\r\n\r\n    greaterThanOrEqualTo(n: Decimal.Value): boolean;\r\n    gte(n: Decimal.Value): boolean;\r\n\r\n    hyperbolicCosine(): Decimal;\r\n    cosh(): Decimal;\r\n\r\n    hyperbolicSine(): Decimal;\r\n    sinh(): Decimal;\r\n\r\n    hyperbolicTangent(): Decimal;\r\n    tanh(): Decimal;\r\n\r\n    inverseCosine(): Decimal;\r\n    acos(): Decimal;\r\n\r\n    inverseHyperbolicCosine(): Decimal;\r\n    acosh(): Decimal;\r\n\r\n    inverseHyperbolicSine(): Decimal;\r\n    asinh(): Decimal;\r\n\r\n    inverseHyperbolicTangent(): Decimal;\r\n    atanh(): Decimal;\r\n\r\n    inverseSine(): Decimal;\r\n    asin(): Decimal;\r\n\r\n    inverseTangent(): Decimal;\r\n    atan(): Decimal;\r\n\r\n    isFinite(): boolean;\r\n\r\n    isInteger(): boolean;\r\n    isInt(): boolean;\r\n\r\n    isNaN(): boolean;\r\n\r\n    isNegative(): boolean;\r\n    isNeg(): boolean;\r\n\r\n    isPositive(): boolean;\r\n    isPos(): boolean;\r\n\r\n    isZero(): boolean;\r\n\r\n    lessThan(n: Decimal.Value): boolean;\r\n    lt(n: Decimal.Value): boolean;\r\n\r\n    lessThanOrEqualTo(n: Decimal.Value): boolean;\r\n    lte(n: Decimal.Value): boolean;\r\n\r\n    logarithm(n?: Decimal.Value): Decimal;\r\n    log(n?: Decimal.Value): Decimal;\r\n\r\n    minus(n: Decimal.Value): Decimal;\r\n    sub(n: Decimal.Value): Decimal;\r\n\r\n    modulo(n: Decimal.Value): Decimal;\r\n    mod(n: Decimal.Value): Decimal;\r\n\r\n    naturalExponential(): Decimal;\r\n    exp(): Decimal;\r\n\r\n    naturalLogarithm(): Decimal;\r\n    ln(): Decimal;\r\n\r\n    negated(): Decimal;\r\n    neg(): Decimal;\r\n\r\n    plus(n: Decimal.Value): Decimal;\r\n    add(n: Decimal.Value): Decimal;\r\n\r\n    precision(includeZeros?: boolean): number;\r\n    sd(includeZeros?: boolean): number;\r\n\r\n    round(): Decimal;\r\n\r\n    sine() : Decimal;\r\n    sin() : Decimal;\r\n\r\n    squareRoot(): Decimal;\r\n    sqrt(): Decimal;\r\n\r\n    tangent() : Decimal;\r\n    tan() : Decimal;\r\n\r\n    times(n: Decimal.Value): Decimal;\r\n    mul(n: Decimal.Value) : Decimal;\r\n\r\n    toBinary(significantDigits?: number): string;\r\n    toBinary(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toDecimalPlaces(decimalPlaces?: number): Decimal;\r\n    toDecimalPlaces(decimalPlaces: number, rounding: Decimal.Rounding): Decimal;\r\n    toDP(decimalPlaces?: number): Decimal;\r\n    toDP(decimalPlaces: number, rounding: Decimal.Rounding): Decimal;\r\n\r\n    toExponential(decimalPlaces?: number): string;\r\n    toExponential(decimalPlaces: number, rounding: Decimal.Rounding): string;\r\n\r\n    toFixed(decimalPlaces?: number): string;\r\n    toFixed(decimalPlaces: number, rounding: Decimal.Rounding): string;\r\n\r\n    toFraction(max_denominator?: Decimal.Value): Decimal[];\r\n\r\n    toHexadecimal(significantDigits?: number): string;\r\n    toHexadecimal(significantDigits: number, rounding: Decimal.Rounding): string;\r\n    toHex(significantDigits?: number): string;\r\n    toHex(significantDigits: number, rounding?: Decimal.Rounding): string;\r\n\r\n    toJSON(): string;\r\n\r\n    toNearest(n: Decimal.Value, rounding?: Decimal.Rounding): Decimal;\r\n\r\n    toNumber(): number;\r\n\r\n    toOctal(significantDigits?: number): string;\r\n    toOctal(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toPower(n: Decimal.Value): Decimal;\r\n    pow(n: Decimal.Value): Decimal;\r\n\r\n    toPrecision(significantDigits?: number): string;\r\n    toPrecision(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toSignificantDigits(significantDigits?: number): Decimal;\r\n    toSignificantDigits(significantDigits: number, rounding: Decimal.Rounding): Decimal;\r\n    toSD(significantDigits?: number): Decimal;\r\n    toSD(significantDigits: number, rounding: Decimal.Rounding): Decimal;\r\n\r\n    toString(): string;\r\n\r\n    truncated(): Decimal;\r\n    trunc(): Decimal;\r\n\r\n    valueOf(): string;\r\n\r\n    static abs(n: Decimal.Value): Decimal;\r\n    static acos(n: Decimal.Value): Decimal;\r\n    static acosh(n: Decimal.Value): Decimal;\r\n    static add(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static asin(n: Decimal.Value): Decimal;\r\n    static asinh(n: Decimal.Value): Decimal;\r\n    static atan(n: Decimal.Value): Decimal;\r\n    static atanh(n: Decimal.Value): Decimal;\r\n    static atan2(y: Decimal.Value, x: Decimal.Value): Decimal;\r\n    static cbrt(n: Decimal.Value): Decimal;\r\n    static ceil(n: Decimal.Value): Decimal;\r\n    static clamp(n: Decimal.Value, min: Decimal.Value, max: Decimal.Value): Decimal;\r\n    static clone(object?: Decimal.Config): Decimal.Constructor;\r\n    static config(object: Decimal.Config): Decimal.Constructor;\r\n    static cos(n: Decimal.Value): Decimal;\r\n    static cosh(n: Decimal.Value): Decimal;\r\n    static div(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static exp(n: Decimal.Value): Decimal;\r\n    static floor(n: Decimal.Value): Decimal;\r\n    static hypot(...n: Decimal.Value[]): Decimal;\r\n    static isDecimal(object: any): object is Decimal;\r\n    static ln(n: Decimal.Value): Decimal;\r\n    static log(n: Decimal.Value, base?: Decimal.Value): Decimal;\r\n    static log2(n: Decimal.Value): Decimal;\r\n    static log10(n: Decimal.Value): Decimal;\r\n    static max(...n: Decimal.Value[]): Decimal;\r\n    static min(...n: Decimal.Value[]): Decimal;\r\n    static mod(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static mul(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static noConflict(): Decimal.Constructor;   // Browser only\r\n    static pow(base: Decimal.Value, exponent: Decimal.Value): Decimal;\r\n    static random(significantDigits?: number): Decimal;\r\n    static round(n: Decimal.Value): Decimal;\r\n    static set(object: Decimal.Config): Decimal.Constructor;\r\n    static sign(n: Decimal.Value): number;\r\n    static sin(n: Decimal.Value): Decimal;\r\n    static sinh(n: Decimal.Value): Decimal;\r\n    static sqrt(n: Decimal.Value): Decimal;\r\n    static sub(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static sum(...n: Decimal.Value[]): Decimal;\r\n    static tan(n: Decimal.Value): Decimal;\r\n    static tanh(n: Decimal.Value): Decimal;\r\n    static trunc(n: Decimal.Value): Decimal;\r\n\r\n    static readonly default?: Decimal.Constructor;\r\n    static readonly Decimal?: Decimal.Constructor;\r\n\r\n    static readonly precision: number;\r\n    static readonly rounding: Decimal.Rounding;\r\n    static readonly toExpNeg: number;\r\n    static readonly toExpPos: number;\r\n    static readonly minE: number;\r\n    static readonly maxE: number;\r\n    static readonly crypto: boolean;\r\n    static readonly modulo: Decimal.Modulo;\r\n\r\n    static readonly ROUND_UP: 0;\r\n    static readonly ROUND_DOWN: 1;\r\n    static readonly ROUND_CEIL: 2;\r\n    static readonly ROUND_FLOOR: 3;\r\n    static readonly ROUND_HALF_UP: 4;\r\n    static readonly ROUND_HALF_DOWN: 5;\r\n    static readonly ROUND_HALF_EVEN: 6;\r\n    static readonly ROUND_HALF_CEIL: 7;\r\n    static readonly ROUND_HALF_FLOOR: 8;\r\n    static readonly EUCLID: 9;\r\n}\r\n\r\n/**\r\n * Interface for any Decimal.js-like library\r\n * Allows us to accept Decimal.js from different\r\n * versions and some compatible alternatives\r\n */\r\nexport declare interface DecimalJsLike {\r\n    d: number[];\r\n    e: number;\r\n    s: number;\r\n    toFixed(): string;\r\n}\r\n\r\nexport declare type DefaultArgs = InternalArgs<{}, {}, {}, {}>;\r\n\r\nexport declare type DefaultSelection<Payload extends OperationPayload, Args = {}, GlobalOmitOptions = {}> = Args extends {\r\n    omit: infer LocalOmit;\r\n} ? ApplyOmit<UnwrapPayload<{\r\n    default: Payload;\r\n}>['default'], PatchFlat<LocalOmit, ExtractGlobalOmit<GlobalOmitOptions, Uncapitalize<Payload['name']>>>> : ApplyOmit<UnwrapPayload<{\r\n    default: Payload;\r\n}>['default'], ExtractGlobalOmit<GlobalOmitOptions, Uncapitalize<Payload['name']>>>;\r\n\r\nexport declare function defineDmmfProperty(target: object, runtimeDataModel: RuntimeDataModel): void;\r\n\r\ndeclare function defineExtension(ext: ExtensionArgs | ((client: Client) => Client)): (client: Client) => Client;\r\n\r\ndeclare const denylist: readonly [\"$connect\", \"$disconnect\", \"$on\", \"$transaction\", \"$use\", \"$extends\"];\r\n\r\ndeclare type Deprecation = ReadonlyDeep_2<{\r\n    sinceVersion: string;\r\n    reason: string;\r\n    plannedRemovalVersion?: string;\r\n}>;\r\n\r\ndeclare type DeserializedResponse = Array<Record<string, unknown>>;\r\n\r\nexport declare function deserializeJsonResponse(result: unknown): unknown;\r\n\r\nexport declare function deserializeRawResult(response: RawResponse): DeserializedResponse;\r\n\r\nexport declare type DevTypeMapDef = {\r\n    meta: {\r\n        modelProps: string;\r\n    };\r\n    model: {\r\n        [Model in PropertyKey]: {\r\n            [Operation in PropertyKey]: DevTypeMapFnDef;\r\n        };\r\n    };\r\n    other: {\r\n        [Operation in PropertyKey]: DevTypeMapFnDef;\r\n    };\r\n};\r\n\r\nexport declare type DevTypeMapFnDef = {\r\n    args: any;\r\n    result: any;\r\n    payload: OperationPayload;\r\n};\r\n\r\nexport declare namespace DMMF {\r\n    export {\r\n        datamodelEnumToSchemaEnum,\r\n        Document_2 as Document,\r\n        Mappings,\r\n        OtherOperationMappings,\r\n        DatamodelEnum,\r\n        SchemaEnum,\r\n        EnumValue,\r\n        Datamodel,\r\n        uniqueIndex,\r\n        PrimaryKey,\r\n        Model,\r\n        FieldKind,\r\n        FieldNamespace,\r\n        FieldLocation,\r\n        Field,\r\n        FieldDefault,\r\n        FieldDefaultScalar,\r\n        Index,\r\n        IndexType,\r\n        IndexField,\r\n        SortOrder,\r\n        Schema,\r\n        Query,\r\n        QueryOutput,\r\n        TypeRef,\r\n        InputTypeRef,\r\n        SchemaArg,\r\n        OutputType,\r\n        SchemaField,\r\n        OutputTypeRef,\r\n        Deprecation,\r\n        InputType,\r\n        FieldRefType,\r\n        FieldRefAllowType,\r\n        ModelMapping,\r\n        ModelAction\r\n    }\r\n}\r\n\r\ndeclare namespace DMMF_2 {\r\n    export {\r\n        datamodelEnumToSchemaEnum,\r\n        Document_2 as Document,\r\n        Mappings,\r\n        OtherOperationMappings,\r\n        DatamodelEnum,\r\n        SchemaEnum,\r\n        EnumValue,\r\n        Datamodel,\r\n        uniqueIndex,\r\n        PrimaryKey,\r\n        Model,\r\n        FieldKind,\r\n        FieldNamespace,\r\n        FieldLocation,\r\n        Field,\r\n        FieldDefault,\r\n        FieldDefaultScalar,\r\n        Index,\r\n        IndexType,\r\n        IndexField,\r\n        SortOrder,\r\n        Schema,\r\n        Query,\r\n        QueryOutput,\r\n        TypeRef,\r\n        InputTypeRef,\r\n        SchemaArg,\r\n        OutputType,\r\n        SchemaField,\r\n        OutputTypeRef,\r\n        Deprecation,\r\n        InputType,\r\n        FieldRefType,\r\n        FieldRefAllowType,\r\n        ModelMapping,\r\n        ModelAction\r\n    }\r\n}\r\n\r\nexport declare function dmmfToRuntimeDataModel(dmmfDataModel: DMMF_2.Datamodel): RuntimeDataModel;\r\n\r\ndeclare type Document_2 = ReadonlyDeep_2<{\r\n    datamodel: Datamodel;\r\n    schema: Schema;\r\n    mappings: Mappings;\r\n}>;\r\n\r\n/**\r\n * A generic driver adapter factory that allows the user to instantiate a\r\n * driver adapter. The query and result types are specific to the adapter.\r\n */\r\ndeclare interface DriverAdapterFactory<Query, Result> extends AdapterInfo {\r\n    /**\r\n     * Instantiate a driver adapter.\r\n     */\r\n    connect(): Promise<Queryable<Query, Result>>;\r\n}\r\n\r\n/** Client */\r\nexport declare type DynamicClientExtensionArgs<C_, TypeMap extends TypeMapDef, TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>> = {\r\n    [P in keyof C_]: unknown;\r\n} & {\r\n    [K: symbol]: {\r\n        ctx: Optional<DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>, ITXClientDenyList> & {\r\n            $parent: Optional<DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>, ITXClientDenyList>;\r\n        };\r\n    };\r\n};\r\n\r\nexport declare type DynamicClientExtensionThis<TypeMap extends TypeMapDef, TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>> = {\r\n    [P in keyof ExtArgs['client']]: Return<ExtArgs['client'][P]>;\r\n} & {\r\n    [P in Exclude<TypeMap['meta']['modelProps'], keyof ExtArgs['client']>]: DynamicModelExtensionThis<TypeMap, ModelKey<TypeMap, P>, ExtArgs>;\r\n} & {\r\n    [P in Exclude<keyof TypeMap['other']['operations'], keyof ExtArgs['client']>]: P extends keyof ClientOtherOps ? ClientOtherOps[P] : never;\r\n} & {\r\n    [P in Exclude<ClientBuiltInProp, keyof ExtArgs['client']>]: DynamicClientExtensionThisBuiltin<TypeMap, TypeMapCb, ExtArgs>[P];\r\n} & {\r\n    [K: symbol]: {\r\n        types: TypeMap['other'];\r\n    };\r\n};\r\n\r\nexport declare type DynamicClientExtensionThisBuiltin<TypeMap extends TypeMapDef, TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>> = {\r\n    $extends: ExtendsHook<'extends', TypeMapCb, ExtArgs, Call<TypeMapCb, {\r\n        extArgs: ExtArgs;\r\n    }>>;\r\n    $transaction<P extends PrismaPromise<any>[]>(arg: [...P], options?: {\r\n        isolationLevel?: TypeMap['meta']['txIsolationLevel'];\r\n    }): Promise<UnwrapTuple<P>>;\r\n    $transaction<R>(fn: (client: Omit<DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>, ITXClientDenyList>) => Promise<R>, options?: {\r\n        maxWait?: number;\r\n        timeout?: number;\r\n        isolationLevel?: TypeMap['meta']['txIsolationLevel'];\r\n    }): Promise<R>;\r\n    $disconnect(): Promise<void>;\r\n    $connect(): Promise<void>;\r\n};\r\n\r\n/** Model */\r\nexport declare type DynamicModelExtensionArgs<M_, TypeMap extends TypeMapDef, TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>> = {\r\n    [K in keyof M_]: K extends '$allModels' ? {\r\n        [P in keyof M_[K]]?: unknown;\r\n    } & {\r\n        [K: symbol]: {};\r\n    } : K extends TypeMap['meta']['modelProps'] ? {\r\n        [P in keyof M_[K]]?: unknown;\r\n    } & {\r\n        [K: symbol]: {\r\n            ctx: DynamicModelExtensionThis<TypeMap, ModelKey<TypeMap, K>, ExtArgs> & {\r\n                $parent: DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>;\r\n            } & {\r\n                $name: ModelKey<TypeMap, K>;\r\n            } & {\r\n                /**\r\n                 * @deprecated Use `$name` instead.\r\n                 */\r\n                name: ModelKey<TypeMap, K>;\r\n            };\r\n        };\r\n    } : never;\r\n};\r\n\r\nexport declare type DynamicModelExtensionFluentApi<TypeMap extends TypeMapDef, M extends PropertyKey, P extends PropertyKey, Null> = {\r\n    [K in keyof TypeMap['model'][M]['payload']['objects']]: <A>(args?: Exact<A, Path<TypeMap['model'][M]['operations'][P]['args']['select'], [K]>>) => PrismaPromise<Path<DynamicModelExtensionFnResultBase<TypeMap, M, {\r\n        select: {\r\n            [P in K]: A;\r\n        };\r\n    }, P>, [K]> | Null> & DynamicModelExtensionFluentApi<TypeMap, (TypeMap['model'][M]['payload']['objects'][K] & {})['name'], P, Null | Select<TypeMap['model'][M]['payload']['objects'][K], null>>;\r\n};\r\n\r\nexport declare type DynamicModelExtensionFnResult<TypeMap extends TypeMapDef, M extends PropertyKey, A, P extends PropertyKey, Null> = P extends FluentOperation ? DynamicModelExtensionFluentApi<TypeMap, M, P, Null> & PrismaPromise<DynamicModelExtensionFnResultBase<TypeMap, M, A, P> | Null> : PrismaPromise<DynamicModelExtensionFnResultBase<TypeMap, M, A, P>>;\r\n\r\nexport declare type DynamicModelExtensionFnResultBase<TypeMap extends TypeMapDef, M extends PropertyKey, A, P extends PropertyKey> = GetResult<TypeMap['model'][M]['payload'], A, P & Operation, TypeMap['globalOmitOptions']>;\r\n\r\nexport declare type DynamicModelExtensionFnResultNull<P extends PropertyKey> = P extends 'findUnique' | 'findFirst' ? null : never;\r\n\r\nexport declare type DynamicModelExtensionOperationFn<TypeMap extends TypeMapDef, M extends PropertyKey, P extends PropertyKey> = {} extends TypeMap['model'][M]['operations'][P]['args'] ? <A extends TypeMap['model'][M]['operations'][P]['args']>(args?: Exact<A, TypeMap['model'][M]['operations'][P]['args']>) => DynamicModelExtensionFnResult<TypeMap, M, A, P, DynamicModelExtensionFnResultNull<P>> : <A extends TypeMap['model'][M]['operations'][P]['args']>(args: Exact<A, TypeMap['model'][M]['operations'][P]['args']>) => DynamicModelExtensionFnResult<TypeMap, M, A, P, DynamicModelExtensionFnResultNull<P>>;\r\n\r\nexport declare type DynamicModelExtensionThis<TypeMap extends TypeMapDef, M extends PropertyKey, ExtArgs extends Record<string, any>> = {\r\n    [P in keyof ExtArgs['model'][Uncapitalize<M & string>]]: Return<ExtArgs['model'][Uncapitalize<M & string>][P]>;\r\n} & {\r\n    [P in Exclude<keyof TypeMap['model'][M]['operations'], keyof ExtArgs['model'][Uncapitalize<M & string>]>]: DynamicModelExtensionOperationFn<TypeMap, M, P>;\r\n} & {\r\n    [P in Exclude<'fields', keyof ExtArgs['model'][Uncapitalize<M & string>]>]: TypeMap['model'][M]['fields'];\r\n} & {\r\n    [K: symbol]: {\r\n        types: TypeMap['model'][M];\r\n    };\r\n};\r\n\r\n/** Query */\r\nexport declare type DynamicQueryExtensionArgs<Q_, TypeMap extends TypeMapDef> = {\r\n    [K in keyof Q_]: K extends '$allOperations' ? (args: {\r\n        model?: string;\r\n        operation: string;\r\n        args: any;\r\n        query: (args: any) => PrismaPromise<any>;\r\n    }) => Promise<any> : K extends '$allModels' ? {\r\n        [P in keyof Q_[K] | keyof TypeMap['model'][keyof TypeMap['model']]['operations'] | '$allOperations']?: P extends '$allOperations' ? DynamicQueryExtensionCb<TypeMap, 'model', keyof TypeMap['model'], keyof TypeMap['model'][keyof TypeMap['model']]['operations']> : P extends keyof TypeMap['model'][keyof TypeMap['model']]['operations'] ? DynamicQueryExtensionCb<TypeMap, 'model', keyof TypeMap['model'], P> : never;\r\n    } : K extends TypeMap['meta']['modelProps'] ? {\r\n        [P in keyof Q_[K] | keyof TypeMap['model'][ModelKey<TypeMap, K>]['operations'] | '$allOperations']?: P extends '$allOperations' ? DynamicQueryExtensionCb<TypeMap, 'model', ModelKey<TypeMap, K>, keyof TypeMap['model'][ModelKey<TypeMap, K>]['operations']> : P extends keyof TypeMap['model'][ModelKey<TypeMap, K>]['operations'] ? DynamicQueryExtensionCb<TypeMap, 'model', ModelKey<TypeMap, K>, P> : never;\r\n    } : K extends keyof TypeMap['other']['operations'] ? DynamicQueryExtensionCb<[TypeMap], 0, 'other', K> : never;\r\n};\r\n\r\nexport declare type DynamicQueryExtensionCb<TypeMap extends TypeMapDef, _0 extends PropertyKey, _1 extends PropertyKey, _2 extends PropertyKey> = <A extends DynamicQueryExtensionCbArgs<TypeMap, _0, _1, _2>>(args: A) => Promise<TypeMap[_0][_1][_2]['result']>;\r\n\r\nexport declare type DynamicQueryExtensionCbArgs<TypeMap extends TypeMapDef, _0 extends PropertyKey, _1 extends PropertyKey, _2 extends PropertyKey> = (_1 extends unknown ? _2 extends unknown ? {\r\n    args: DynamicQueryExtensionCbArgsArgs<TypeMap, _0, _1, _2>;\r\n    model: _0 extends 0 ? undefined : _1;\r\n    operation: _2;\r\n    query: <A extends DynamicQueryExtensionCbArgsArgs<TypeMap, _0, _1, _2>>(args: A) => PrismaPromise<TypeMap[_0][_1]['operations'][_2]['result']>;\r\n} : never : never) & {\r\n    query: (args: DynamicQueryExtensionCbArgsArgs<TypeMap, _0, _1, _2>) => PrismaPromise<TypeMap[_0][_1]['operations'][_2]['result']>;\r\n};\r\n\r\nexport declare type DynamicQueryExtensionCbArgsArgs<TypeMap extends TypeMapDef, _0 extends PropertyKey, _1 extends PropertyKey, _2 extends PropertyKey> = _2 extends '$queryRaw' | '$executeRaw' ? Sql : TypeMap[_0][_1]['operations'][_2]['args'];\r\n\r\n/** Result */\r\nexport declare type DynamicResultExtensionArgs<R_, TypeMap extends TypeMapDef> = {\r\n    [K in keyof R_]: {\r\n        [P in keyof R_[K]]?: {\r\n            needs?: DynamicResultExtensionNeeds<TypeMap, ModelKey<TypeMap, K>, R_[K][P]>;\r\n            compute(data: DynamicResultExtensionData<TypeMap, ModelKey<TypeMap, K>, R_[K][P]>): any;\r\n        };\r\n    };\r\n};\r\n\r\nexport declare type DynamicResultExtensionData<TypeMap extends TypeMapDef, M extends PropertyKey, S> = GetFindResult<TypeMap['model'][M]['payload'], {\r\n    select: S;\r\n}, {}>;\r\n\r\nexport declare type DynamicResultExtensionNeeds<TypeMap extends TypeMapDef, M extends PropertyKey, S> = {\r\n    [K in keyof S]: K extends keyof TypeMap['model'][M]['payload']['scalars'] ? S[K] : never;\r\n} & {\r\n    [N in keyof TypeMap['model'][M]['payload']['scalars']]?: boolean;\r\n};\r\n\r\n/**\r\n * Placeholder value for \"no text\".\r\n */\r\nexport declare const empty: Sql;\r\n\r\nexport declare type EmptyToUnknown<T> = T;\r\n\r\ndeclare interface Engine<InteractiveTransactionPayload = unknown> {\r\n    /** The name of the engine. This is meant to be consumed externally */\r\n    readonly name: string;\r\n    onBeforeExit(callback: () => Promise<void>): void;\r\n    start(): Promise<void>;\r\n    stop(): Promise<void>;\r\n    version(forceRun?: boolean): Promise<string> | string;\r\n    request<T>(query: JsonQuery, options: RequestOptions<InteractiveTransactionPayload>): Promise<QueryEngineResultData<T>>;\r\n    requestBatch<T>(queries: JsonQuery[], options: RequestBatchOptions<InteractiveTransactionPayload>): Promise<BatchQueryEngineResult<T>[]>;\r\n    transaction(action: 'start', headers: Transaction_2.TransactionHeaders, options: Transaction_2.Options): Promise<Transaction_2.InteractiveTransactionInfo<unknown>>;\r\n    transaction(action: 'commit', headers: Transaction_2.TransactionHeaders, info: Transaction_2.InteractiveTransactionInfo<unknown>): Promise<void>;\r\n    transaction(action: 'rollback', headers: Transaction_2.TransactionHeaders, info: Transaction_2.InteractiveTransactionInfo<unknown>): Promise<void>;\r\n    metrics(options: MetricsOptionsJson): Promise<Metrics>;\r\n    metrics(options: MetricsOptionsPrometheus): Promise<string>;\r\n    applyPendingMigrations(): Promise<void>;\r\n}\r\n\r\ndeclare interface EngineConfig {\r\n    cwd: string;\r\n    dirname: string;\r\n    enableDebugLogs?: boolean;\r\n    allowTriggerPanic?: boolean;\r\n    prismaPath?: string;\r\n    generator?: GeneratorConfig;\r\n    /**\r\n     * @remarks this field is used internally by Policy, do not rename or remove\r\n     */\r\n    overrideDatasources: Datasources;\r\n    showColors?: boolean;\r\n    logQueries?: boolean;\r\n    logLevel?: 'info' | 'warn';\r\n    env: Record<string, string>;\r\n    flags?: string[];\r\n    clientVersion: string;\r\n    engineVersion: string;\r\n    previewFeatures?: string[];\r\n    engineEndpoint?: string;\r\n    activeProvider?: string;\r\n    logEmitter: LogEmitter;\r\n    transactionOptions: Transaction_2.Options;\r\n    /**\r\n     * Instance of a Driver Adapter, e.g., like one provided by `@prisma/adapter-planetscale`.\r\n     * If set, this is only used in the library engine, and all queries would be performed through it,\r\n     * rather than Prisma's Rust drivers.\r\n     * @remarks only used by LibraryEngine.ts\r\n     */\r\n    adapter?: SqlDriverAdapterFactory;\r\n    /**\r\n     * The contents of the schema encoded into a string\r\n     */\r\n    inlineSchema: string;\r\n    /**\r\n     * The contents of the datasource url saved in a string\r\n     * @remarks only used by DataProxyEngine.ts\r\n     * @remarks this field is used internally by Policy, do not rename or remove\r\n     */\r\n    inlineDatasources: GetPrismaClientConfig['inlineDatasources'];\r\n    /**\r\n     * The string hash that was produced for a given schema\r\n     * @remarks only used by DataProxyEngine.ts\r\n     */\r\n    inlineSchemaHash: string;\r\n    /**\r\n     * The helper for interaction with OTEL tracing\r\n     * @remarks enabling is determined by the client and @prisma/instrumentation package\r\n     */\r\n    tracingHelper: TracingHelper;\r\n    /**\r\n     * Information about whether we have not found a schema.prisma file in the\r\n     * default location, and that we fell back to finding the schema.prisma file\r\n     * in the current working directory. This usually means it has been bundled.\r\n     */\r\n    isBundled?: boolean;\r\n    /**\r\n     * Web Assembly module loading configuration\r\n     */\r\n    engineWasm?: EngineWasmLoadingConfig;\r\n    compilerWasm?: CompilerWasmLoadingConfig;\r\n    /**\r\n     * Allows Accelerate to use runtime utilities from the client. These are\r\n     * necessary for the AccelerateEngine to function correctly.\r\n     */\r\n    accelerateUtils?: {\r\n        resolveDatasourceUrl: typeof resolveDatasourceUrl;\r\n        getBatchRequestPayload: typeof getBatchRequestPayload;\r\n        prismaGraphQLToJSError: typeof prismaGraphQLToJSError;\r\n        PrismaClientUnknownRequestError: typeof PrismaClientUnknownRequestError;\r\n        PrismaClientInitializationError: typeof PrismaClientInitializationError;\r\n        PrismaClientKnownRequestError: typeof PrismaClientKnownRequestError;\r\n        debug: (...args: any[]) => void;\r\n        engineVersion: string;\r\n        clientVersion: string;\r\n    };\r\n}\r\n\r\ndeclare type EngineEvent<E extends EngineEventType> = E extends QueryEventType ? QueryEvent : LogEvent;\r\n\r\ndeclare type EngineEventType = QueryEventType | LogEventType;\r\n\r\ndeclare type EngineSpan = {\r\n    id: EngineSpanId;\r\n    parentId: string | null;\r\n    name: string;\r\n    startTime: HrTime;\r\n    endTime: HrTime;\r\n    kind: EngineSpanKind;\r\n    attributes?: Record<string, unknown>;\r\n    links?: EngineSpanId[];\r\n};\r\n\r\ndeclare type EngineSpanId = string;\r\n\r\ndeclare type EngineSpanKind = 'client' | 'internal';\r\n\r\ndeclare type EngineWasmLoadingConfig = {\r\n    /**\r\n     * WASM-bindgen runtime for corresponding module\r\n     */\r\n    getRuntime: () => Promise<{\r\n        __wbg_set_wasm(exports: unknown): void;\r\n        QueryEngine: QueryEngineConstructor;\r\n    }>;\r\n    /**\r\n     * Loads the raw wasm module for the wasm query engine. This configuration is\r\n     * generated specifically for each type of client, eg. Node.js client and Edge\r\n     * clients will have different implementations.\r\n     * @remarks this is a callback on purpose, we only load the wasm if needed.\r\n     * @remarks only used by LibraryEngine\r\n     */\r\n    getQueryEngineWasmModule: () => Promise<unknown>;\r\n};\r\n\r\ndeclare type EnumValue = ReadonlyDeep_2<{\r\n    name: string;\r\n    dbName: string | null;\r\n}>;\r\n\r\ndeclare type EnvPaths = {\r\n    rootEnvPath: string | null;\r\n    schemaEnvPath: string | undefined;\r\n};\r\n\r\ndeclare interface EnvValue {\r\n    fromEnvVar: null | string;\r\n    value: null | string;\r\n}\r\n\r\nexport declare type Equals<A, B> = (<T>() => T extends A ? 1 : 2) extends (<T>() => T extends B ? 1 : 2) ? 1 : 0;\r\n\r\ndeclare type Error_2 = {\r\n    kind: 'GenericJs';\r\n    id: number;\r\n} | {\r\n    kind: 'UnsupportedNativeDataType';\r\n    type: string;\r\n} | {\r\n    kind: 'InvalidIsolationLevel';\r\n    level: string;\r\n} | {\r\n    kind: 'LengthMismatch';\r\n    column?: string;\r\n} | {\r\n    kind: 'UniqueConstraintViolation';\r\n    fields: string[];\r\n} | {\r\n    kind: 'NullConstraintViolation';\r\n    fields: string[];\r\n} | {\r\n    kind: 'ForeignKeyConstraintViolation';\r\n    constraint?: {\r\n        fields: string[];\r\n    } | {\r\n        index: string;\r\n    } | {\r\n        foreignKey: {};\r\n    };\r\n} | {\r\n    kind: 'DatabaseDoesNotExist';\r\n    db?: string;\r\n} | {\r\n    kind: 'DatabaseAlreadyExists';\r\n    db?: string;\r\n} | {\r\n    kind: 'DatabaseAccessDenied';\r\n    db?: string;\r\n} | {\r\n    kind: 'AuthenticationFailed';\r\n    user?: string;\r\n} | {\r\n    kind: 'TransactionWriteConflict';\r\n} | {\r\n    kind: 'TableDoesNotExist';\r\n    table?: string;\r\n} | {\r\n    kind: 'ColumnNotFound';\r\n    column?: string;\r\n} | {\r\n    kind: 'TooManyConnections';\r\n    cause: string;\r\n} | {\r\n    kind: 'SocketTimeout';\r\n} | {\r\n    kind: 'postgres';\r\n    code: string;\r\n    severity: string;\r\n    message: string;\r\n    detail: string | undefined;\r\n    column: string | undefined;\r\n    hint: string | undefined;\r\n} | {\r\n    kind: 'mysql';\r\n    code: number;\r\n    message: string;\r\n    state: string;\r\n} | {\r\n    kind: 'sqlite';\r\n    /**\r\n     * Sqlite extended error code: https://www.sqlite.org/rescode.html\r\n     */\r\n    extendedCode: number;\r\n    message: string;\r\n};\r\n\r\ndeclare type ErrorCapturingFunction<T> = T extends (...args: infer A) => Promise<infer R> ? (...args: A) => Promise<Result_4<ErrorCapturingInterface<R>>> : T extends (...args: infer A) => infer R ? (...args: A) => Result_4<ErrorCapturingInterface<R>> : T;\r\n\r\ndeclare type ErrorCapturingInterface<T> = {\r\n    [K in keyof T]: ErrorCapturingFunction<T[K]>;\r\n};\r\n\r\ndeclare interface ErrorCapturingSqlDriverAdapter extends ErrorCapturingInterface<SqlDriverAdapter> {\r\n    readonly errorRegistry: ErrorRegistry;\r\n}\r\n\r\ndeclare type ErrorFormat = 'pretty' | 'colorless' | 'minimal';\r\n\r\ndeclare type ErrorRecord = {\r\n    error: unknown;\r\n};\r\n\r\ndeclare interface ErrorRegistry {\r\n    consumeError(id: number): ErrorRecord | undefined;\r\n}\r\n\r\ndeclare interface ErrorWithBatchIndex {\r\n    batchRequestIdx?: number;\r\n}\r\n\r\ndeclare type EventCallback<E extends ExtendedEventType> = [E] extends ['beforeExit'] ? () => Promise<void> : [E] extends [LogLevel] ? (event: EngineEvent<E>) => void : never;\r\n\r\nexport declare type Exact<A, W> = (A extends unknown ? (W extends A ? {\r\n    [K in keyof A]: Exact<A[K], W[K]>;\r\n} : W) : never) | (A extends Narrowable ? A : never);\r\n\r\n/**\r\n * Defines Exception.\r\n *\r\n * string or an object with one of (message or name or code) and optional stack\r\n */\r\ndeclare type Exception = ExceptionWithCode | ExceptionWithMessage | ExceptionWithName | string;\r\n\r\ndeclare interface ExceptionWithCode {\r\n    code: string | number;\r\n    name?: string;\r\n    message?: string;\r\n    stack?: string;\r\n}\r\n\r\ndeclare interface ExceptionWithMessage {\r\n    code?: string | number;\r\n    message: string;\r\n    name?: string;\r\n    stack?: string;\r\n}\r\n\r\ndeclare interface ExceptionWithName {\r\n    code?: string | number;\r\n    message?: string;\r\n    name: string;\r\n    stack?: string;\r\n}\r\n\r\ndeclare type ExtendedEventType = LogLevel | 'beforeExit';\r\n\r\ndeclare type ExtendedSpanOptions = SpanOptions & {\r\n    /** The name of the span */\r\n    name: string;\r\n    internal?: boolean;\r\n    middleware?: boolean;\r\n    /** Whether it propagates context (?=true) */\r\n    active?: boolean;\r\n    /** The context to append the span to */\r\n    context?: Context;\r\n};\r\n\r\n/** $extends, defineExtension */\r\nexport declare interface ExtendsHook<Variant extends 'extends' | 'define', TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>, TypeMap extends TypeMapDef = Call<TypeMapCb, {\r\n    extArgs: ExtArgs;\r\n}>> {\r\n    extArgs: ExtArgs;\r\n    <R_ extends {\r\n        [K in TypeMap['meta']['modelProps'] | '$allModels']?: unknown;\r\n    }, R, M_ extends {\r\n        [K in TypeMap['meta']['modelProps'] | '$allModels']?: unknown;\r\n    }, M, Q_ extends {\r\n        [K in TypeMap['meta']['modelProps'] | '$allModels' | keyof TypeMap['other']['operations'] | '$allOperations']?: unknown;\r\n    }, C_ extends {\r\n        [K in string]?: unknown;\r\n    }, C, Args extends InternalArgs = InternalArgs<R, M, {}, C>, MergedArgs extends InternalArgs = MergeExtArgs<TypeMap, ExtArgs, Args>>(extension: ((client: DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>) => {\r\n        $extends: {\r\n            extArgs: Args;\r\n        };\r\n    }) | {\r\n        name?: string;\r\n        query?: DynamicQueryExtensionArgs<Q_, TypeMap>;\r\n        result?: DynamicResultExtensionArgs<R_, TypeMap> & R;\r\n        model?: DynamicModelExtensionArgs<M_, TypeMap, TypeMapCb, ExtArgs> & M;\r\n        client?: DynamicClientExtensionArgs<C_, TypeMap, TypeMapCb, ExtArgs> & C;\r\n    }): {\r\n        extends: DynamicClientExtensionThis<Call<TypeMapCb, {\r\n            extArgs: MergedArgs;\r\n        }>, TypeMapCb, MergedArgs>;\r\n        define: (client: any) => {\r\n            $extends: {\r\n                extArgs: Args;\r\n            };\r\n        };\r\n    }[Variant];\r\n}\r\n\r\nexport declare type ExtensionArgs = Optional<RequiredExtensionArgs>;\r\n\r\ndeclare namespace Extensions {\r\n    export {\r\n        defineExtension,\r\n        getExtensionContext\r\n    }\r\n}\r\nexport { Extensions }\r\n\r\ndeclare namespace Extensions_2 {\r\n    export {\r\n        InternalArgs,\r\n        DefaultArgs,\r\n        GetPayloadResultExtensionKeys,\r\n        GetPayloadResultExtensionObject,\r\n        GetPayloadResult,\r\n        GetSelect,\r\n        GetOmit,\r\n        DynamicQueryExtensionArgs,\r\n        DynamicQueryExtensionCb,\r\n        DynamicQueryExtensionCbArgs,\r\n        DynamicQueryExtensionCbArgsArgs,\r\n        DynamicResultExtensionArgs,\r\n        DynamicResultExtensionNeeds,\r\n        DynamicResultExtensionData,\r\n        DynamicModelExtensionArgs,\r\n        DynamicModelExtensionThis,\r\n        DynamicModelExtensionOperationFn,\r\n        DynamicModelExtensionFnResult,\r\n        DynamicModelExtensionFnResultBase,\r\n        DynamicModelExtensionFluentApi,\r\n        DynamicModelExtensionFnResultNull,\r\n        DynamicClientExtensionArgs,\r\n        DynamicClientExtensionThis,\r\n        ClientBuiltInProp,\r\n        DynamicClientExtensionThisBuiltin,\r\n        ExtendsHook,\r\n        MergeExtArgs,\r\n        AllModelsToStringIndex,\r\n        TypeMapDef,\r\n        DevTypeMapDef,\r\n        DevTypeMapFnDef,\r\n        ClientOptionDef,\r\n        ClientOtherOps,\r\n        TypeMapCbDef,\r\n        ModelKey,\r\n        RequiredExtensionArgs as UserArgs\r\n    }\r\n}\r\n\r\nexport declare type ExtractGlobalOmit<Options, ModelName extends string> = Options extends {\r\n    omit: {\r\n        [K in ModelName]: infer GlobalOmit;\r\n    };\r\n} ? GlobalOmit : {};\r\n\r\ndeclare type Field = ReadonlyDeep_2<{\r\n    kind: FieldKind;\r\n    name: string;\r\n    isRequired: boolean;\r\n    isList: boolean;\r\n    isUnique: boolean;\r\n    isId: boolean;\r\n    isReadOnly: boolean;\r\n    isGenerated?: boolean;\r\n    isUpdatedAt?: boolean;\r\n    /**\r\n     * Describes the data type in the same the way it is defined in the Prisma schema:\r\n     * BigInt, Boolean, Bytes, DateTime, Decimal, Float, Int, JSON, String, $ModelName\r\n     */\r\n    type: string;\r\n    /**\r\n     * Native database type, if specified.\r\n     * For example, `@db.VarChar(191)` is encoded as `['VarChar', ['191']]`,\r\n     * `@db.Text` is encoded as `['Text', []]`.\r\n     */\r\n    nativeType?: [string, string[]] | null;\r\n    dbName?: string | null;\r\n    hasDefaultValue: boolean;\r\n    default?: FieldDefault | FieldDefaultScalar | FieldDefaultScalar[];\r\n    relationFromFields?: string[];\r\n    relationToFields?: string[];\r\n    relationOnDelete?: string;\r\n    relationOnUpdate?: string;\r\n    relationName?: string;\r\n    documentation?: string;\r\n}>;\r\n\r\ndeclare type FieldDefault = ReadonlyDeep_2<{\r\n    name: string;\r\n    args: Array<string | number>;\r\n}>;\r\n\r\ndeclare type FieldDefaultScalar = string | boolean | number;\r\n\r\ndeclare type FieldKind = 'scalar' | 'object' | 'enum' | 'unsupported';\r\n\r\ndeclare type FieldLocation = 'scalar' | 'inputObjectTypes' | 'outputObjectTypes' | 'enumTypes' | 'fieldRefTypes';\r\n\r\ndeclare type FieldNamespace = 'model' | 'prisma';\r\n\r\n/**\r\n * A reference to a specific field of a specific model\r\n */\r\nexport declare interface FieldRef<Model, FieldType> {\r\n    readonly modelName: Model;\r\n    readonly name: string;\r\n    readonly typeName: FieldType;\r\n    readonly isList: boolean;\r\n}\r\n\r\ndeclare type FieldRefAllowType = TypeRef<'scalar' | 'enumTypes'>;\r\n\r\ndeclare type FieldRefType = ReadonlyDeep_2<{\r\n    name: string;\r\n    allowTypes: FieldRefAllowType[];\r\n    fields: SchemaArg[];\r\n}>;\r\n\r\ndeclare type FluentOperation = 'findUnique' | 'findUniqueOrThrow' | 'findFirst' | 'findFirstOrThrow' | 'create' | 'update' | 'upsert' | 'delete';\r\n\r\nexport declare interface Fn<Params = unknown, Returns = unknown> {\r\n    params: Params;\r\n    returns: Returns;\r\n}\r\n\r\ndeclare interface GeneratorConfig {\r\n    name: string;\r\n    output: EnvValue | null;\r\n    isCustomOutput?: boolean;\r\n    provider: EnvValue;\r\n    config: {\r\n        /** `output` is a reserved name and will only be available directly at `generator.output` */\r\n        output?: never;\r\n        /** `provider` is a reserved name and will only be available directly at `generator.provider` */\r\n        provider?: never;\r\n        /** `binaryTargets` is a reserved name and will only be available directly at `generator.binaryTargets` */\r\n        binaryTargets?: never;\r\n        /** `previewFeatures` is a reserved name and will only be available directly at `generator.previewFeatures` */\r\n        previewFeatures?: never;\r\n    } & {\r\n        [key: string]: string | string[] | undefined;\r\n    };\r\n    binaryTargets: BinaryTargetsEnvValue[];\r\n    previewFeatures: string[];\r\n    envPaths?: EnvPaths;\r\n    sourceFilePath: string;\r\n}\r\n\r\nexport declare type GetAggregateResult<P extends OperationPayload, A> = {\r\n    [K in keyof A as K extends Aggregate ? K : never]: K extends '_count' ? A[K] extends true ? number : Count<A[K]> : {\r\n        [J in keyof A[K] & string]: P['scalars'][J] | null;\r\n    };\r\n};\r\n\r\ndeclare function getBatchRequestPayload(batch: JsonQuery[], transaction?: TransactionOptions_3<unknown>): QueryEngineBatchRequest;\r\n\r\nexport declare type GetBatchResult = {\r\n    count: number;\r\n};\r\n\r\nexport declare type GetCountResult<A> = A extends {\r\n    select: infer S;\r\n} ? (S extends true ? number : Count<S>) : number;\r\n\r\ndeclare function getExtensionContext<T>(that: T): Context_2<T>;\r\n\r\nexport declare type GetFindResult<P extends OperationPayload, A, GlobalOmitOptions> = Equals<A, any> extends 1 ? DefaultSelection<P, A, GlobalOmitOptions> : A extends {\r\n    select: infer S extends object;\r\n} & Record<string, unknown> | {\r\n    include: infer I extends object;\r\n} & Record<string, unknown> ? {\r\n    [K in keyof S | keyof I as (S & I)[K] extends false | undefined | Skip | null ? never : K]: (S & I)[K] extends object ? P extends SelectablePayloadFields<K, (infer O)[]> ? O extends OperationPayload ? GetFindResult<O, (S & I)[K], GlobalOmitOptions>[] : never : P extends SelectablePayloadFields<K, infer O | null> ? O extends OperationPayload ? GetFindResult<O, (S & I)[K], GlobalOmitOptions> | SelectField<P, K> & null : never : K extends '_count' ? Count<GetFindResult<P, (S & I)[K], GlobalOmitOptions>> : never : P extends SelectablePayloadFields<K, (infer O)[]> ? O extends OperationPayload ? DefaultSelection<O, {}, GlobalOmitOptions>[] : never : P extends SelectablePayloadFields<K, infer O | null> ? O extends OperationPayload ? DefaultSelection<O, {}, GlobalOmitOptions> | SelectField<P, K> & null : never : P extends {\r\n        scalars: {\r\n            [k in K]: infer O;\r\n        };\r\n    } ? O : K extends '_count' ? Count<P['objects']> : never;\r\n} & (A extends {\r\n    include: any;\r\n} & Record<string, unknown> ? DefaultSelection<P, A & {\r\n    omit: A['omit'];\r\n}, GlobalOmitOptions> : unknown) : DefaultSelection<P, A, GlobalOmitOptions>;\r\n\r\nexport declare type GetGroupByResult<P extends OperationPayload, A> = A extends {\r\n    by: string[];\r\n} ? Array<GetAggregateResult<P, A> & {\r\n    [K in A['by'][number]]: P['scalars'][K];\r\n}> : A extends {\r\n    by: string;\r\n} ? Array<GetAggregateResult<P, A> & {\r\n    [K in A['by']]: P['scalars'][K];\r\n}> : {}[];\r\n\r\nexport declare type GetOmit<BaseKeys extends string, R extends InternalArgs['result'][string], ExtraType = never> = {\r\n    [K in (string extends keyof R ? never : keyof R) | BaseKeys]?: boolean | ExtraType;\r\n};\r\n\r\nexport declare type GetPayloadResult<Base extends Record<any, any>, R extends InternalArgs['result'][string]> = Omit<Base, GetPayloadResultExtensionKeys<R>> & GetPayloadResultExtensionObject<R>;\r\n\r\nexport declare type GetPayloadResultExtensionKeys<R extends InternalArgs['result'][string], KR extends keyof R = string extends keyof R ? never : keyof R> = KR;\r\n\r\nexport declare type GetPayloadResultExtensionObject<R extends InternalArgs['result'][string]> = {\r\n    [K in GetPayloadResultExtensionKeys<R>]: R[K] extends () => {\r\n        compute: (...args: any) => infer C;\r\n    } ? C : never;\r\n};\r\n\r\nexport declare function getPrismaClient(config: GetPrismaClientConfig): {\r\n    new (optionsArg?: PrismaClientOptions): {\r\n        _originalClient: any;\r\n        _runtimeDataModel: RuntimeDataModel;\r\n        _requestHandler: RequestHandler;\r\n        _connectionPromise?: Promise<any> | undefined;\r\n        _disconnectionPromise?: Promise<any> | undefined;\r\n        _engineConfig: EngineConfig;\r\n        _accelerateEngineConfig: AccelerateEngineConfig;\r\n        _clientVersion: string;\r\n        _errorFormat: ErrorFormat;\r\n        _tracingHelper: TracingHelper;\r\n        _middlewares: MiddlewareHandler<QueryMiddleware>;\r\n        _previewFeatures: string[];\r\n        _activeProvider: string;\r\n        _globalOmit?: GlobalOmitOptions | undefined;\r\n        _extensions: MergedExtensionsList;\r\n        /**\r\n         * @remarks This is used internally by Policy, do not rename or remove\r\n         */\r\n        _engine: Engine;\r\n        /**\r\n         * A fully constructed/applied Client that references the parent\r\n         * PrismaClient. This is used for Client extensions only.\r\n         */\r\n        _appliedParent: any;\r\n        _createPrismaPromise: PrismaPromiseFactory;\r\n        /**\r\n         * Hook a middleware into the client\r\n         * @param middleware to hook\r\n         */\r\n        $use(middleware: QueryMiddleware): void;\r\n        $on<E extends ExtendedEventType>(eventType: E, callback: EventCallback<E>): any;\r\n        $connect(): Promise<void>;\r\n        /**\r\n         * Disconnect from the database\r\n         */\r\n        $disconnect(): Promise<void>;\r\n        /**\r\n         * Executes a raw query and always returns a number\r\n         */\r\n        $executeRawInternal(transaction: PrismaPromiseTransaction | undefined, clientMethod: string, args: RawQueryArgs, middlewareArgsMapper?: MiddlewareArgsMapper<unknown, unknown>): Promise<number>;\r\n        /**\r\n         * Executes a raw query provided through a safe tag function\r\n         * @see https://github.com/prisma/prisma/issues/7142\r\n         *\r\n         * @param query\r\n         * @param values\r\n         * @returns\r\n         */\r\n        $executeRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Unsafe counterpart of `$executeRaw` that is susceptible to SQL injections\r\n         * @see https://github.com/prisma/prisma/issues/7142\r\n         *\r\n         * @param query\r\n         * @param values\r\n         * @returns\r\n         */\r\n        $executeRawUnsafe(query: string, ...values: RawValue[]): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Executes a raw command only for MongoDB\r\n         *\r\n         * @param command\r\n         * @returns\r\n         */\r\n        $runCommandRaw(command: Record<string, JsInputValue>): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Executes a raw query and returns selected data\r\n         */\r\n        $queryRawInternal(transaction: PrismaPromiseTransaction | undefined, clientMethod: string, args: RawQueryArgs, middlewareArgsMapper?: MiddlewareArgsMapper<unknown, unknown>): Promise<any>;\r\n        /**\r\n         * Executes a raw query provided through a safe tag function\r\n         * @see https://github.com/prisma/prisma/issues/7142\r\n         *\r\n         * @param query\r\n         * @param values\r\n         * @returns\r\n         */\r\n        $queryRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Counterpart to $queryRaw, that returns strongly typed results\r\n         * @param typedSql\r\n         */\r\n        $queryRawTyped(typedSql: UnknownTypedSql): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Unsafe counterpart of `$queryRaw` that is susceptible to SQL injections\r\n         * @see https://github.com/prisma/prisma/issues/7142\r\n         *\r\n         * @param query\r\n         * @param values\r\n         * @returns\r\n         */\r\n        $queryRawUnsafe(query: string, ...values: RawValue[]): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Execute a batch of requests in a transaction\r\n         * @param requests\r\n         * @param options\r\n         */\r\n        _transactionWithArray({ promises, options, }: {\r\n            promises: Array<PrismaPromise_2<any>>;\r\n            options?: BatchTransactionOptions;\r\n        }): Promise<any>;\r\n        /**\r\n         * Perform a long-running transaction\r\n         * @param callback\r\n         * @param options\r\n         * @returns\r\n         */\r\n        _transactionWithCallback({ callback, options, }: {\r\n            callback: (client: Client) => Promise<unknown>;\r\n            options?: TransactionOptions_2;\r\n        }): Promise<unknown>;\r\n        _createItxClient(transaction: PrismaPromiseInteractiveTransaction): Client;\r\n        /**\r\n         * Execute queries within a transaction\r\n         * @param input a callback or a query list\r\n         * @param options to set timeouts (callback)\r\n         * @returns\r\n         */\r\n        $transaction(input: any, options?: any): Promise<any>;\r\n        /**\r\n         * Runs the middlewares over params before executing a request\r\n         * @param internalParams\r\n         * @returns\r\n         */\r\n        _request(internalParams: InternalRequestParams): Promise<any>;\r\n        _executeRequest({ args, clientMethod, dataPath, callsite, action, model, argsMapper, transaction, unpacker, otelParentCtx, customDataProxyFetch, }: InternalRequestParams): Promise<any>;\r\n        $metrics: MetricsClient;\r\n        /**\r\n         * Shortcut for checking a preview flag\r\n         * @param feature preview flag\r\n         * @returns\r\n         */\r\n        _hasPreviewFlag(feature: string): boolean;\r\n        $applyPendingMigrations(): Promise<void>;\r\n        $extends: typeof $extends;\r\n        readonly [Symbol.toStringTag]: string;\r\n    };\r\n};\r\n\r\n/**\r\n * Config that is stored into the generated client. When the generated client is\r\n * loaded, this same config is passed to {@link getPrismaClient} which creates a\r\n * closure with that config around a non-instantiated [[PrismaClient]].\r\n */\r\nexport declare type GetPrismaClientConfig = {\r\n    runtimeDataModel: RuntimeDataModel;\r\n    generator?: GeneratorConfig;\r\n    relativeEnvPaths?: {\r\n        rootEnvPath?: string | null;\r\n        schemaEnvPath?: string | null;\r\n    };\r\n    relativePath: string;\r\n    dirname: string;\r\n    clientVersion: string;\r\n    engineVersion: string;\r\n    datasourceNames: string[];\r\n    activeProvider: ActiveConnectorType;\r\n    /**\r\n     * The contents of the schema encoded into a string\r\n     * @remarks only used for the purpose of data proxy\r\n     */\r\n    inlineSchema: string;\r\n    /**\r\n     * A special env object just for the data proxy edge runtime.\r\n     * Allows bundlers to inject their own env variables (Vercel).\r\n     * Allows platforms to declare global variables as env (Workers).\r\n     * @remarks only used for the purpose of data proxy\r\n     */\r\n    injectableEdgeEnv?: () => LoadedEnv;\r\n    /**\r\n     * The contents of the datasource url saved in a string.\r\n     * This can either be an env var name or connection string.\r\n     * It is needed by the client to connect to the Data Proxy.\r\n     * @remarks only used for the purpose of data proxy\r\n     */\r\n    inlineDatasources: {\r\n        [name in string]: {\r\n            url: EnvValue;\r\n        };\r\n    };\r\n    /**\r\n     * The string hash that was produced for a given schema\r\n     * @remarks only used for the purpose of data proxy\r\n     */\r\n    inlineSchemaHash: string;\r\n    /**\r\n     * A marker to indicate that the client was not generated via `prisma\r\n     * generate` but was generated via `generate --postinstall` script instead.\r\n     * @remarks used to error for Vercel/Netlify for schema caching issues\r\n     */\r\n    postinstall?: boolean;\r\n    /**\r\n     * Information about the CI where the Prisma Client has been generated. The\r\n     * name of the CI environment is stored at generation time because CI\r\n     * information is not always available at runtime. Moreover, the edge client\r\n     * has no notion of environment variables, so this works around that.\r\n     * @remarks used to error for Vercel/Netlify for schema caching issues\r\n     */\r\n    ciName?: string;\r\n    /**\r\n     * Information about whether we have not found a schema.prisma file in the\r\n     * default location, and that we fell back to finding the schema.prisma file\r\n     * in the current working directory. This usually means it has been bundled.\r\n     */\r\n    isBundled?: boolean;\r\n    /**\r\n     * A boolean that is `false` when the client was generated with --no-engine. At\r\n     * runtime, this means the client will be bound to be using the Data Proxy.\r\n     */\r\n    copyEngine?: boolean;\r\n    /**\r\n     * Optional wasm loading configuration\r\n     */\r\n    engineWasm?: EngineWasmLoadingConfig;\r\n    compilerWasm?: CompilerWasmLoadingConfig;\r\n};\r\n\r\nexport declare type GetResult<Payload extends OperationPayload, Args, OperationName extends Operation = 'findUniqueOrThrow', GlobalOmitOptions = {}> = {\r\n    findUnique: GetFindResult<Payload, Args, GlobalOmitOptions> | null;\r\n    findUniqueOrThrow: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    findFirst: GetFindResult<Payload, Args, GlobalOmitOptions> | null;\r\n    findFirstOrThrow: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    findMany: GetFindResult<Payload, Args, GlobalOmitOptions>[];\r\n    create: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    createMany: GetBatchResult;\r\n    createManyAndReturn: GetFindResult<Payload, Args, GlobalOmitOptions>[];\r\n    update: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    updateMany: GetBatchResult;\r\n    updateManyAndReturn: GetFindResult<Payload, Args, GlobalOmitOptions>[];\r\n    upsert: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    delete: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    deleteMany: GetBatchResult;\r\n    aggregate: GetAggregateResult<Payload, Args>;\r\n    count: GetCountResult<Args>;\r\n    groupBy: GetGroupByResult<Payload, Args>;\r\n    $queryRaw: unknown;\r\n    $queryRawTyped: unknown;\r\n    $executeRaw: number;\r\n    $queryRawUnsafe: unknown;\r\n    $executeRawUnsafe: number;\r\n    $runCommandRaw: JsonObject;\r\n    findRaw: JsonObject;\r\n    aggregateRaw: JsonObject;\r\n}[OperationName];\r\n\r\nexport declare function getRuntime(): GetRuntimeOutput;\r\n\r\ndeclare type GetRuntimeOutput = {\r\n    id: RuntimeName;\r\n    prettyName: string;\r\n    isEdge: boolean;\r\n};\r\n\r\nexport declare type GetSelect<Base extends Record<any, any>, R extends InternalArgs['result'][string], KR extends keyof R = string extends keyof R ? never : keyof R> = {\r\n    [K in KR | keyof Base]?: K extends KR ? boolean : Base[K];\r\n};\r\n\r\ndeclare type GlobalOmitOptions = {\r\n    [modelName: string]: {\r\n        [fieldName: string]: boolean;\r\n    };\r\n};\r\n\r\ndeclare type HandleErrorParams = {\r\n    args: JsArgs;\r\n    error: any;\r\n    clientMethod: string;\r\n    callsite?: CallSite;\r\n    transaction?: PrismaPromiseTransaction;\r\n    modelName?: string;\r\n    globalOmit?: GlobalOmitOptions;\r\n};\r\n\r\ndeclare type HrTime = [number, number];\r\n\r\n/**\r\n * Defines High-Resolution Time.\r\n *\r\n * The first number, HrTime[0], is UNIX Epoch time in seconds since 00:00:00 UTC on 1 January 1970.\r\n * The second number, HrTime[1], represents the partial second elapsed since Unix Epoch time represented by first number in nanoseconds.\r\n * For example, 2021-01-01T12:30:10.150Z in UNIX Epoch time in milliseconds is represented as 1609504210150.\r\n * The first number is calculated by converting and truncating the Epoch time in milliseconds to seconds:\r\n * HrTime[0] = Math.trunc(1609504210150 / 1000) = 1609504210.\r\n * The second number is calculated by converting the digits after the decimal point of the subtraction, (1609504210150 / 1000) - HrTime[0], to nanoseconds:\r\n * HrTime[1] = Number((1609504210.150 - HrTime[0]).toFixed(9)) * 1e9 = 150000000.\r\n * This is represented in HrTime format as [1609504210, 150000000].\r\n */\r\ndeclare type HrTime_2 = [number, number];\r\n\r\ndeclare type Index = ReadonlyDeep_2<{\r\n    model: string;\r\n    type: IndexType;\r\n    isDefinedOnField: boolean;\r\n    name?: string;\r\n    dbName?: string;\r\n    algorithm?: string;\r\n    clustered?: boolean;\r\n    fields: IndexField[];\r\n}>;\r\n\r\ndeclare type IndexField = ReadonlyDeep_2<{\r\n    name: string;\r\n    sortOrder?: SortOrder;\r\n    length?: number;\r\n    operatorClass?: string;\r\n}>;\r\n\r\ndeclare type IndexType = 'id' | 'normal' | 'unique' | 'fulltext';\r\n\r\n/**\r\n * Matches a JSON array.\r\n * Unlike \\`JsonArray\\`, readonly arrays are assignable to this type.\r\n */\r\nexport declare interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {\r\n}\r\n\r\n/**\r\n * Matches a JSON object.\r\n * Unlike \\`JsonObject\\`, this type allows undefined and read-only properties.\r\n */\r\nexport declare type InputJsonObject = {\r\n    readonly [Key in string]?: InputJsonValue | null;\r\n};\r\n\r\n/**\r\n * Matches any valid value that can be used as an input for operations like\r\n * create and update as the value of a JSON field. Unlike \\`JsonValue\\`, this\r\n * type allows read-only arrays and read-only object properties and disallows\r\n * \\`null\\` at the top level.\r\n *\r\n * \\`null\\` cannot be used as the value of a JSON field because its meaning\r\n * would be ambiguous. Use \\`Prisma.JsonNull\\` to store the JSON null value or\r\n * \\`Prisma.DbNull\\` to clear the JSON value and set the field to the database\r\n * NULL value instead.\r\n *\r\n * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values\r\n */\r\nexport declare type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | {\r\n    toJSON(): unknown;\r\n};\r\n\r\ndeclare type InputType = ReadonlyDeep_2<{\r\n    name: string;\r\n    constraints: {\r\n        maxNumFields: number | null;\r\n        minNumFields: number | null;\r\n        fields?: string[];\r\n    };\r\n    meta?: {\r\n        source?: string;\r\n        grouping?: string;\r\n    };\r\n    fields: SchemaArg[];\r\n}>;\r\n\r\ndeclare type InputTypeRef = TypeRef<'scalar' | 'inputObjectTypes' | 'enumTypes' | 'fieldRefTypes'>;\r\n\r\ndeclare type InteractiveTransactionInfo<Payload = unknown> = {\r\n    /**\r\n     * Transaction ID returned by the query engine.\r\n     */\r\n    id: string;\r\n    /**\r\n     * Arbitrary payload the meaning of which depends on the `Engine` implementation.\r\n     * For example, `DataProxyEngine` needs to associate different API endpoints with transactions.\r\n     * In `LibraryEngine` and `BinaryEngine` it is currently not used.\r\n     */\r\n    payload: Payload;\r\n};\r\n\r\ndeclare type InteractiveTransactionOptions<Payload> = Transaction_2.InteractiveTransactionInfo<Payload>;\r\n\r\nexport declare type InternalArgs<R = {\r\n    [K in string]: {\r\n        [K in string]: unknown;\r\n    };\r\n}, M = {\r\n    [K in string]: {\r\n        [K in string]: unknown;\r\n    };\r\n}, Q = {\r\n    [K in string]: {\r\n        [K in string]: unknown;\r\n    };\r\n}, C = {\r\n    [K in string]: unknown;\r\n}> = {\r\n    result: {\r\n        [K in keyof R]: {\r\n            [P in keyof R[K]]: () => R[K][P];\r\n        };\r\n    };\r\n    model: {\r\n        [K in keyof M]: {\r\n            [P in keyof M[K]]: () => M[K][P];\r\n        };\r\n    };\r\n    query: {\r\n        [K in keyof Q]: {\r\n            [P in keyof Q[K]]: () => Q[K][P];\r\n        };\r\n    };\r\n    client: {\r\n        [K in keyof C]: () => C[K];\r\n    };\r\n};\r\n\r\ndeclare type InternalRequestParams = {\r\n    /**\r\n     * The original client method being called.\r\n     * Even though the rootField / operation can be changed,\r\n     * this method stays as it is, as it's what the user's\r\n     * code looks like\r\n     */\r\n    clientMethod: string;\r\n    /**\r\n     * Name of js model that triggered the request. Might be used\r\n     * for warnings or error messages\r\n     */\r\n    jsModelName?: string;\r\n    callsite?: CallSite;\r\n    transaction?: PrismaPromiseTransaction;\r\n    unpacker?: Unpacker;\r\n    otelParentCtx?: Context;\r\n    /** Used to \"desugar\" a user input into an \"expanded\" one */\r\n    argsMapper?: (args?: UserArgs_2) => UserArgs_2;\r\n    /** Used to convert args for middleware and back */\r\n    middlewareArgsMapper?: MiddlewareArgsMapper<unknown, unknown>;\r\n    /** Used for Accelerate client extension via Data Proxy */\r\n    customDataProxyFetch?: CustomDataProxyFetch;\r\n} & Omit<QueryMiddlewareParams, 'runInTransaction'>;\r\n\r\ndeclare type IsolationLevel = 'READ UNCOMMITTED' | 'READ COMMITTED' | 'REPEATABLE READ' | 'SNAPSHOT' | 'SERIALIZABLE';\r\n\r\ndeclare function isSkip(value: unknown): value is Skip;\r\n\r\nexport declare function isTypedSql(value: unknown): value is UnknownTypedSql;\r\n\r\nexport declare type ITXClientDenyList = (typeof denylist)[number];\r\n\r\nexport declare const itxClientDenyList: readonly (string | symbol)[];\r\n\r\ndeclare interface Job {\r\n    resolve: (data: any) => void;\r\n    reject: (data: any) => void;\r\n    request: any;\r\n}\r\n\r\n/**\r\n * Create a SQL query for a list of values.\r\n */\r\nexport declare function join(values: readonly RawValue[], separator?: string, prefix?: string, suffix?: string): Sql;\r\n\r\nexport declare type JsArgs = {\r\n    select?: Selection_2;\r\n    include?: Selection_2;\r\n    omit?: Omission;\r\n    [argName: string]: JsInputValue;\r\n};\r\n\r\nexport declare type JsInputValue = null | undefined | string | number | boolean | bigint | Uint8Array | Date | DecimalJsLike | ObjectEnumValue | RawParameters | JsonConvertible | FieldRef<string, unknown> | JsInputValue[] | Skip | {\r\n    [key: string]: JsInputValue;\r\n};\r\n\r\ndeclare type JsonArgumentValue = number | string | boolean | null | RawTaggedValue | JsonArgumentValue[] | {\r\n    [key: string]: JsonArgumentValue;\r\n};\r\n\r\n/**\r\n * From https://github.com/sindresorhus/type-fest/\r\n * Matches a JSON array.\r\n */\r\nexport declare interface JsonArray extends Array<JsonValue> {\r\n}\r\n\r\nexport declare type JsonBatchQuery = {\r\n    batch: JsonQuery[];\r\n    transaction?: {\r\n        isolationLevel?: IsolationLevel;\r\n    };\r\n};\r\n\r\nexport declare interface JsonConvertible {\r\n    toJSON(): unknown;\r\n}\r\n\r\ndeclare type JsonFieldSelection = {\r\n    arguments?: Record<string, JsonArgumentValue> | RawTaggedValue;\r\n    selection: JsonSelectionSet;\r\n};\r\n\r\ndeclare class JsonNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\n/**\r\n * From https://github.com/sindresorhus/type-fest/\r\n * Matches a JSON object.\r\n * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from.\r\n */\r\nexport declare type JsonObject = {\r\n    [Key in string]?: JsonValue;\r\n};\r\n\r\nexport declare type JsonQuery = {\r\n    modelName?: string;\r\n    action: JsonQueryAction;\r\n    query: JsonFieldSelection;\r\n};\r\n\r\ndeclare type JsonQueryAction = 'findUnique' | 'findUniqueOrThrow' | 'findFirst' | 'findFirstOrThrow' | 'findMany' | 'createOne' | 'createMany' | 'createManyAndReturn' | 'updateOne' | 'updateMany' | 'updateManyAndReturn' | 'deleteOne' | 'deleteMany' | 'upsertOne' | 'aggregate' | 'groupBy' | 'executeRaw' | 'queryRaw' | 'runCommandRaw' | 'findRaw' | 'aggregateRaw';\r\n\r\ndeclare type JsonSelectionSet = {\r\n    $scalars?: boolean;\r\n    $composites?: boolean;\r\n} & {\r\n    [fieldName: string]: boolean | JsonFieldSelection;\r\n};\r\n\r\n/**\r\n * From https://github.com/sindresorhus/type-fest/\r\n * Matches any valid JSON value.\r\n */\r\nexport declare type JsonValue = string | number | boolean | JsonObject | JsonArray | null;\r\n\r\nexport declare type JsOutputValue = null | string | number | boolean | bigint | Uint8Array | Date | Decimal | JsOutputValue[] | {\r\n    [key: string]: JsOutputValue;\r\n};\r\n\r\nexport declare type JsPromise<T> = Promise<T> & {};\r\n\r\ndeclare type KnownErrorParams = {\r\n    code: string;\r\n    clientVersion: string;\r\n    meta?: Record<string, unknown>;\r\n    batchRequestIdx?: number;\r\n};\r\n\r\n/**\r\n * A pointer from the current {@link Span} to another span in the same trace or\r\n * in a different trace.\r\n * Few examples of Link usage.\r\n * 1. Batch Processing: A batch of elements may contain elements associated\r\n *    with one or more traces/spans. Since there can only be one parent\r\n *    SpanContext, Link is used to keep reference to SpanContext of all\r\n *    elements in the batch.\r\n * 2. Public Endpoint: A SpanContext in incoming client request on a public\r\n *    endpoint is untrusted from service provider perspective. In such case it\r\n *    is advisable to start a new trace with appropriate sampling decision.\r\n *    However, it is desirable to associate incoming SpanContext to new trace\r\n *    initiated on service provider side so two traces (from Client and from\r\n *    Service Provider) can be correlated.\r\n */\r\ndeclare interface Link {\r\n    /** The {@link SpanContext} of a linked span. */\r\n    context: SpanContext;\r\n    /** A set of {@link SpanAttributes} on the link. */\r\n    attributes?: SpanAttributes;\r\n    /** Count of attributes of the link that were dropped due to collection limits */\r\n    droppedAttributesCount?: number;\r\n}\r\n\r\ndeclare type LoadedEnv = {\r\n    message?: string;\r\n    parsed: {\r\n        [x: string]: string;\r\n    };\r\n} | undefined;\r\n\r\ndeclare type LocationInFile = {\r\n    fileName: string;\r\n    lineNumber: number | null;\r\n    columnNumber: number | null;\r\n};\r\n\r\ndeclare type LogDefinition = {\r\n    level: LogLevel;\r\n    emit: 'stdout' | 'event';\r\n};\r\n\r\n/**\r\n * Typings for the events we emit.\r\n *\r\n * @remarks\r\n * If this is updated, our edge runtime shim needs to be updated as well.\r\n */\r\ndeclare type LogEmitter = {\r\n    on<E extends EngineEventType>(event: E, listener: (event: EngineEvent<E>) => void): LogEmitter;\r\n    emit(event: QueryEventType, payload: QueryEvent): boolean;\r\n    emit(event: LogEventType, payload: LogEvent): boolean;\r\n};\r\n\r\ndeclare type LogEvent = {\r\n    timestamp: Date;\r\n    message: string;\r\n    target: string;\r\n};\r\n\r\ndeclare type LogEventType = 'info' | 'warn' | 'error';\r\n\r\ndeclare type LogLevel = 'info' | 'query' | 'warn' | 'error';\r\n\r\n/**\r\n * Generates more strict variant of an enum which, unlike regular enum,\r\n * throws on non-existing property access. This can be useful in following situations:\r\n * - we have an API, that accepts both `undefined` and `SomeEnumType` as an input\r\n * - enum values are generated dynamically from DMMF.\r\n *\r\n * In that case, if using normal enums and no compile-time typechecking, using non-existing property\r\n * will result in `undefined` value being used, which will be accepted. Using strict enum\r\n * in this case will help to have a runtime exception, telling you that you are probably doing something wrong.\r\n *\r\n * Note: if you need to check for existence of a value in the enum you can still use either\r\n * `in` operator or `hasOwnProperty` function.\r\n *\r\n * @param definition\r\n * @returns\r\n */\r\nexport declare function makeStrictEnum<T extends Record<PropertyKey, string | number>>(definition: T): T;\r\n\r\nexport declare function makeTypedQueryFactory(sql: string): (...values: any[]) => TypedSql<any[], unknown>;\r\n\r\ndeclare type Mappings = ReadonlyDeep_2<{\r\n    modelOperations: ModelMapping[];\r\n    otherOperations: {\r\n        read: string[];\r\n        write: string[];\r\n    };\r\n}>;\r\n\r\n/**\r\n * Class that holds the list of all extensions, applied to particular instance,\r\n * as well as resolved versions of the components that need to apply on\r\n * different levels. Main idea of this class: avoid re-resolving as much of the\r\n * stuff as possible when new extensions are added while also delaying the\r\n * resolve until the point it is actually needed. For example, computed fields\r\n * of the model won't be resolved unless the model is actually queried. Neither\r\n * adding extensions with `client` component only cause other components to\r\n * recompute.\r\n */\r\ndeclare class MergedExtensionsList {\r\n    private head?;\r\n    private constructor();\r\n    static empty(): MergedExtensionsList;\r\n    static single(extension: ExtensionArgs): MergedExtensionsList;\r\n    isEmpty(): boolean;\r\n    append(extension: ExtensionArgs): MergedExtensionsList;\r\n    getAllComputedFields(dmmfModelName: string): ComputedFieldsMap | undefined;\r\n    getAllClientExtensions(): ClientArg | undefined;\r\n    getAllModelExtensions(dmmfModelName: string): ModelArg | undefined;\r\n    getAllQueryCallbacks(jsModelName: string, operation: string): any;\r\n    getAllBatchQueryCallbacks(): BatchQueryOptionsCb[];\r\n}\r\n\r\nexport declare type MergeExtArgs<TypeMap extends TypeMapDef, ExtArgs extends Record<any, any>, Args extends Record<any, any>> = ComputeDeep<ExtArgs & Args & AllModelsToStringIndex<TypeMap, Args, 'result'> & AllModelsToStringIndex<TypeMap, Args, 'model'>>;\r\n\r\nexport declare type Metric<T> = {\r\n    key: string;\r\n    value: T;\r\n    labels: Record<string, string>;\r\n    description: string;\r\n};\r\n\r\nexport declare type MetricHistogram = {\r\n    buckets: MetricHistogramBucket[];\r\n    sum: number;\r\n    count: number;\r\n};\r\n\r\nexport declare type MetricHistogramBucket = [maxValue: number, count: number];\r\n\r\nexport declare type Metrics = {\r\n    counters: Metric<number>[];\r\n    gauges: Metric<number>[];\r\n    histograms: Metric<MetricHistogram>[];\r\n};\r\n\r\nexport declare class MetricsClient {\r\n    private _client;\r\n    constructor(client: Client);\r\n    /**\r\n     * Returns all metrics gathered up to this point in prometheus format.\r\n     * Result of this call can be exposed directly to prometheus scraping endpoint\r\n     *\r\n     * @param options\r\n     * @returns\r\n     */\r\n    prometheus(options?: MetricsOptions): Promise<string>;\r\n    /**\r\n     * Returns all metrics gathered up to this point in prometheus format.\r\n     *\r\n     * @param options\r\n     * @returns\r\n     */\r\n    json(options?: MetricsOptions): Promise<Metrics>;\r\n}\r\n\r\ndeclare type MetricsOptions = {\r\n    /**\r\n     * Labels to add to every metrics in key-value format\r\n     */\r\n    globalLabels?: Record<string, string>;\r\n};\r\n\r\ndeclare type MetricsOptionsCommon = {\r\n    globalLabels?: Record<string, string>;\r\n};\r\n\r\ndeclare type MetricsOptionsJson = {\r\n    format: 'json';\r\n} & MetricsOptionsCommon;\r\n\r\ndeclare type MetricsOptionsPrometheus = {\r\n    format: 'prometheus';\r\n} & MetricsOptionsCommon;\r\n\r\ndeclare type MiddlewareArgsMapper<RequestArgs, MiddlewareArgs> = {\r\n    requestArgsToMiddlewareArgs(requestArgs: RequestArgs): MiddlewareArgs;\r\n    middlewareArgsToRequestArgs(middlewareArgs: MiddlewareArgs): RequestArgs;\r\n};\r\n\r\ndeclare class MiddlewareHandler<M extends Function> {\r\n    private _middlewares;\r\n    use(middleware: M): void;\r\n    get(id: number): M | undefined;\r\n    has(id: number): boolean;\r\n    length(): number;\r\n}\r\n\r\ndeclare type Model = ReadonlyDeep_2<{\r\n    name: string;\r\n    dbName: string | null;\r\n    schema: string | null;\r\n    fields: Field[];\r\n    uniqueFields: string[][];\r\n    uniqueIndexes: uniqueIndex[];\r\n    documentation?: string;\r\n    primaryKey: PrimaryKey | null;\r\n    isGenerated?: boolean;\r\n}>;\r\n\r\ndeclare enum ModelAction {\r\n    findUnique = \"findUnique\",\r\n    findUniqueOrThrow = \"findUniqueOrThrow\",\r\n    findFirst = \"findFirst\",\r\n    findFirstOrThrow = \"findFirstOrThrow\",\r\n    findMany = \"findMany\",\r\n    create = \"create\",\r\n    createMany = \"createMany\",\r\n    createManyAndReturn = \"createManyAndReturn\",\r\n    update = \"update\",\r\n    updateMany = \"updateMany\",\r\n    updateManyAndReturn = \"updateManyAndReturn\",\r\n    upsert = \"upsert\",\r\n    delete = \"delete\",\r\n    deleteMany = \"deleteMany\",\r\n    groupBy = \"groupBy\",\r\n    count = \"count\",// TODO: count does not actually exist in DMMF\r\n    aggregate = \"aggregate\",\r\n    findRaw = \"findRaw\",\r\n    aggregateRaw = \"aggregateRaw\"\r\n}\r\n\r\nexport declare type ModelArg = {\r\n    [MethodName in string]: unknown;\r\n};\r\n\r\nexport declare type ModelArgs = {\r\n    model: {\r\n        [ModelName in string]: ModelArg;\r\n    };\r\n};\r\n\r\nexport declare type ModelKey<TypeMap extends TypeMapDef, M extends PropertyKey> = M extends keyof TypeMap['model'] ? M : Capitalize<M & string>;\r\n\r\ndeclare type ModelMapping = ReadonlyDeep_2<{\r\n    model: string;\r\n    plural: string;\r\n    findUnique?: string | null;\r\n    findUniqueOrThrow?: string | null;\r\n    findFirst?: string | null;\r\n    findFirstOrThrow?: string | null;\r\n    findMany?: string | null;\r\n    create?: string | null;\r\n    createMany?: string | null;\r\n    createManyAndReturn?: string | null;\r\n    update?: string | null;\r\n    updateMany?: string | null;\r\n    updateManyAndReturn?: string | null;\r\n    upsert?: string | null;\r\n    delete?: string | null;\r\n    deleteMany?: string | null;\r\n    aggregate?: string | null;\r\n    groupBy?: string | null;\r\n    count?: string | null;\r\n    findRaw?: string | null;\r\n    aggregateRaw?: string | null;\r\n}>;\r\n\r\nexport declare type ModelQueryOptionsCb = (args: ModelQueryOptionsCbArgs) => Promise<any>;\r\n\r\nexport declare type ModelQueryOptionsCbArgs = {\r\n    model: string;\r\n    operation: string;\r\n    args: JsArgs;\r\n    query: (args: JsArgs) => Promise<unknown>;\r\n};\r\n\r\ndeclare type MultiBatchResponse = {\r\n    type: 'multi';\r\n    plans: object[];\r\n};\r\n\r\nexport declare type NameArgs = {\r\n    name?: string;\r\n};\r\n\r\nexport declare type Narrow<A> = {\r\n    [K in keyof A]: A[K] extends Function ? A[K] : Narrow<A[K]>;\r\n} | (A extends Narrowable ? A : never);\r\n\r\nexport declare type Narrowable = string | number | bigint | boolean | [];\r\n\r\nexport declare type NeverToUnknown<T> = [T] extends [never] ? unknown : T;\r\n\r\ndeclare class NullTypesEnumValue extends ObjectEnumValue {\r\n    _getNamespace(): string;\r\n}\r\n\r\n/**\r\n * Base class for unique values of object-valued enums.\r\n */\r\nexport declare abstract class ObjectEnumValue {\r\n    constructor(arg?: symbol);\r\n    abstract _getNamespace(): string;\r\n    _getName(): string;\r\n    toString(): string;\r\n}\r\n\r\nexport declare const objectEnumValues: {\r\n    classes: {\r\n        DbNull: typeof DbNull;\r\n        JsonNull: typeof JsonNull;\r\n        AnyNull: typeof AnyNull;\r\n    };\r\n    instances: {\r\n        DbNull: DbNull;\r\n        JsonNull: JsonNull;\r\n        AnyNull: AnyNull;\r\n    };\r\n};\r\n\r\ndeclare const officialPrismaAdapters: readonly [\"@prisma/adapter-planetscale\", \"@prisma/adapter-neon\", \"@prisma/adapter-libsql\", \"@prisma/adapter-d1\", \"@prisma/adapter-pg\", \"@prisma/adapter-pg-worker\"];\r\n\r\nexport declare type Omission = Record<string, boolean | Skip>;\r\n\r\ndeclare type Omit_2<T, K extends string | number | symbol> = {\r\n    [P in keyof T as P extends K ? never : P]: T[P];\r\n};\r\nexport { Omit_2 as Omit }\r\n\r\nexport declare type OmitValue<Omit, Key> = Key extends keyof Omit ? Omit[Key] : false;\r\n\r\nexport declare type Operation = 'findFirst' | 'findFirstOrThrow' | 'findUnique' | 'findUniqueOrThrow' | 'findMany' | 'create' | 'createMany' | 'createManyAndReturn' | 'update' | 'updateMany' | 'updateManyAndReturn' | 'upsert' | 'delete' | 'deleteMany' | 'aggregate' | 'count' | 'groupBy' | '$queryRaw' | '$executeRaw' | '$queryRawUnsafe' | '$executeRawUnsafe' | 'findRaw' | 'aggregateRaw' | '$runCommandRaw';\r\n\r\nexport declare type OperationPayload = {\r\n    name: string;\r\n    scalars: {\r\n        [ScalarName in string]: unknown;\r\n    };\r\n    objects: {\r\n        [ObjectName in string]: unknown;\r\n    };\r\n    composites: {\r\n        [CompositeName in string]: unknown;\r\n    };\r\n};\r\n\r\nexport declare type Optional<O, K extends keyof any = keyof O> = {\r\n    [P in K & keyof O]?: O[P];\r\n} & {\r\n    [P in Exclude<keyof O, K>]: O[P];\r\n};\r\n\r\nexport declare type OptionalFlat<T> = {\r\n    [K in keyof T]?: T[K];\r\n};\r\n\r\nexport declare type OptionalKeys<O> = {\r\n    [K in keyof O]-?: {} extends Pick_2<O, K> ? K : never;\r\n}[keyof O];\r\n\r\ndeclare type Options = {\r\n    clientVersion: string;\r\n};\r\n\r\nexport declare type Or<A extends 1 | 0, B extends 1 | 0> = {\r\n    0: {\r\n        0: 0;\r\n        1: 1;\r\n    };\r\n    1: {\r\n        0: 1;\r\n        1: 1;\r\n    };\r\n}[A][B];\r\n\r\ndeclare type OtherOperationMappings = ReadonlyDeep_2<{\r\n    read: string[];\r\n    write: string[];\r\n}>;\r\n\r\ndeclare type OutputType = ReadonlyDeep_2<{\r\n    name: string;\r\n    fields: SchemaField[];\r\n}>;\r\n\r\ndeclare type OutputTypeRef = TypeRef<'scalar' | 'outputObjectTypes' | 'enumTypes'>;\r\n\r\nexport declare function Param<$Type, $Value extends string>(name: $Value): Param<$Type, $Value>;\r\n\r\nexport declare type Param<out $Type, $Value extends string> = {\r\n    readonly name: $Value;\r\n};\r\n\r\nexport declare type PatchFlat<O1, O2> = O1 & Omit_2<O2, keyof O1>;\r\n\r\nexport declare type Path<O, P, Default = never> = O extends unknown ? P extends [infer K, ...infer R] ? K extends keyof O ? Path<O[K], R> : Default : O : never;\r\n\r\nexport declare type Payload<T, F extends Operation = never> = T extends {\r\n    [K: symbol]: {\r\n        types: {\r\n            payload: any;\r\n        };\r\n    };\r\n} ? T[symbol]['types']['payload'] : any;\r\n\r\nexport declare type PayloadToResult<P, O extends Record_2<any, any> = RenameAndNestPayloadKeys<P>> = {\r\n    [K in keyof O]?: O[K][K] extends any[] ? PayloadToResult<O[K][K][number]>[] : O[K][K] extends object ? PayloadToResult<O[K][K]> : O[K][K];\r\n};\r\n\r\ndeclare type Pick_2<T, K extends string | number | symbol> = {\r\n    [P in keyof T as P extends K ? P : never]: T[P];\r\n};\r\nexport { Pick_2 as Pick }\r\n\r\ndeclare type PrimaryKey = ReadonlyDeep_2<{\r\n    name: string | null;\r\n    fields: string[];\r\n}>;\r\n\r\nexport declare class PrismaClientInitializationError extends Error {\r\n    clientVersion: string;\r\n    errorCode?: string;\r\n    retryable?: boolean;\r\n    constructor(message: string, clientVersion: string, errorCode?: string);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\nexport declare class PrismaClientKnownRequestError extends Error implements ErrorWithBatchIndex {\r\n    code: string;\r\n    meta?: Record<string, unknown>;\r\n    clientVersion: string;\r\n    batchRequestIdx?: number;\r\n    constructor(message: string, { code, clientVersion, meta, batchRequestIdx }: KnownErrorParams);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\nexport declare type PrismaClientOptions = {\r\n    /**\r\n     * Overwrites the primary datasource url from your schema.prisma file\r\n     */\r\n    datasourceUrl?: string;\r\n    /**\r\n     * Instance of a Driver Adapter, e.g., like one provided by `@prisma/adapter-planetscale.\r\n     */\r\n    adapter?: SqlDriverAdapterFactory | null;\r\n    /**\r\n     * Overwrites the datasource url from your schema.prisma file\r\n     */\r\n    datasources?: Datasources;\r\n    /**\r\n     * @default \"colorless\"\r\n     */\r\n    errorFormat?: ErrorFormat;\r\n    /**\r\n     * The default values for Transaction options\r\n     * maxWait ?= 2000\r\n     * timeout ?= 5000\r\n     */\r\n    transactionOptions?: Transaction_2.Options;\r\n    /**\r\n     * @example\r\n     * \\`\\`\\`\r\n     * // Defaults to stdout\r\n     * log: ['query', 'info', 'warn']\r\n     *\r\n     * // Emit as events\r\n     * log: [\r\n     *  { emit: 'stdout', level: 'query' },\r\n     *  { emit: 'stdout', level: 'info' },\r\n     *  { emit: 'stdout', level: 'warn' }\r\n     * ]\r\n     * \\`\\`\\`\r\n     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).\r\n     */\r\n    log?: Array<LogLevel | LogDefinition>;\r\n    omit?: GlobalOmitOptions;\r\n    /**\r\n     * @internal\r\n     * You probably don't want to use this. \\`__internal\\` is used by internal tooling.\r\n     */\r\n    __internal?: {\r\n        debug?: boolean;\r\n        engine?: {\r\n            cwd?: string;\r\n            binaryPath?: string;\r\n            endpoint?: string;\r\n            allowTriggerPanic?: boolean;\r\n        };\r\n        /** This can be used for testing purposes */\r\n        configOverride?: (config: GetPrismaClientConfig) => GetPrismaClientConfig;\r\n    };\r\n};\r\n\r\nexport declare class PrismaClientRustPanicError extends Error {\r\n    clientVersion: string;\r\n    constructor(message: string, clientVersion: string);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\nexport declare class PrismaClientUnknownRequestError extends Error implements ErrorWithBatchIndex {\r\n    clientVersion: string;\r\n    batchRequestIdx?: number;\r\n    constructor(message: string, { clientVersion, batchRequestIdx }: UnknownErrorParams);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\nexport declare class PrismaClientValidationError extends Error {\r\n    name: string;\r\n    clientVersion: string;\r\n    constructor(message: string, { clientVersion }: Options);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\ndeclare function prismaGraphQLToJSError({ error, user_facing_error }: RequestError, clientVersion: string, activeProvider: string): PrismaClientKnownRequestError | PrismaClientUnknownRequestError;\r\n\r\ndeclare type PrismaOperationSpec<TArgs, TAction = string> = {\r\n    args: TArgs;\r\n    action: TAction;\r\n    model: string;\r\n};\r\n\r\nexport declare interface PrismaPromise<T> extends Promise<T> {\r\n    [Symbol.toStringTag]: 'PrismaPromise';\r\n}\r\n\r\n/**\r\n * Prisma's `Promise` that is backwards-compatible. All additions on top of the\r\n * original `Promise` are optional so that it can be backwards-compatible.\r\n * @see [[createPrismaPromise]]\r\n */\r\ndeclare interface PrismaPromise_2<TResult, TSpec extends PrismaOperationSpec<unknown> = any> extends Promise<TResult> {\r\n    get spec(): TSpec;\r\n    /**\r\n     * Extension of the original `.then` function\r\n     * @param onfulfilled same as regular promises\r\n     * @param onrejected same as regular promises\r\n     * @param transaction transaction options\r\n     */\r\n    then<R1 = TResult, R2 = never>(onfulfilled?: (value: TResult) => R1 | PromiseLike<R1>, onrejected?: (error: unknown) => R2 | PromiseLike<R2>, transaction?: PrismaPromiseTransaction): Promise<R1 | R2>;\r\n    /**\r\n     * Extension of the original `.catch` function\r\n     * @param onrejected same as regular promises\r\n     * @param transaction transaction options\r\n     */\r\n    catch<R = never>(onrejected?: ((reason: any) => R | PromiseLike<R>) | undefined | null, transaction?: PrismaPromiseTransaction): Promise<TResult | R>;\r\n    /**\r\n     * Extension of the original `.finally` function\r\n     * @param onfinally same as regular promises\r\n     * @param transaction transaction options\r\n     */\r\n    finally(onfinally?: (() => void) | undefined | null, transaction?: PrismaPromiseTransaction): Promise<TResult>;\r\n    /**\r\n     * Called when executing a batch of regular tx\r\n     * @param transaction transaction options for batch tx\r\n     */\r\n    requestTransaction?(transaction: PrismaPromiseBatchTransaction): PromiseLike<unknown>;\r\n}\r\n\r\ndeclare type PrismaPromiseBatchTransaction = {\r\n    kind: 'batch';\r\n    id: number;\r\n    isolationLevel?: IsolationLevel;\r\n    index: number;\r\n    lock: PromiseLike<void>;\r\n};\r\n\r\ndeclare type PrismaPromiseCallback = (transaction?: PrismaPromiseTransaction) => Promise<unknown>;\r\n\r\n/**\r\n * Creates a [[PrismaPromise]]. It is Prisma's implementation of `Promise` which\r\n * is essentially a proxy for `Promise`. All the transaction-compatible client\r\n * methods return one, this allows for pre-preparing queries without executing\r\n * them until `.then` is called. It's the foundation of Prisma's query batching.\r\n * @param callback that will be wrapped within our promise implementation\r\n * @see [[PrismaPromise]]\r\n * @returns\r\n */\r\ndeclare type PrismaPromiseFactory = <T extends PrismaOperationSpec<unknown>>(callback: PrismaPromiseCallback, op?: T) => PrismaPromise_2<unknown>;\r\n\r\ndeclare type PrismaPromiseInteractiveTransaction<PayloadType = unknown> = {\r\n    kind: 'itx';\r\n    id: string;\r\n    payload: PayloadType;\r\n};\r\n\r\ndeclare type PrismaPromiseTransaction<PayloadType = unknown> = PrismaPromiseBatchTransaction | PrismaPromiseInteractiveTransaction<PayloadType>;\r\n\r\nexport declare const PrivateResultType: unique symbol;\r\n\r\ndeclare type Provider = 'mysql' | 'postgres' | 'sqlite';\r\n\r\ndeclare namespace Public {\r\n    export {\r\n        validator\r\n    }\r\n}\r\nexport { Public }\r\n\r\ndeclare namespace Public_2 {\r\n    export {\r\n        Args,\r\n        Result,\r\n        Payload,\r\n        PrismaPromise,\r\n        Operation,\r\n        Exact\r\n    }\r\n}\r\n\r\ndeclare type Query = ReadonlyDeep_2<{\r\n    name: string;\r\n    args: SchemaArg[];\r\n    output: QueryOutput;\r\n}>;\r\n\r\ndeclare interface Queryable<Query, Result> extends AdapterInfo {\r\n    /**\r\n     * Execute a query and return its result.\r\n     */\r\n    queryRaw(params: Query): Promise<Result>;\r\n    /**\r\n     * Execute a query and return the number of affected rows.\r\n     */\r\n    executeRaw(params: Query): Promise<number>;\r\n}\r\n\r\ndeclare type QueryCompiler = {\r\n    compile(request: string): string;\r\n    compileBatch(batchRequest: string): BatchResponse;\r\n};\r\n\r\ndeclare interface QueryCompilerConstructor {\r\n    new (options: QueryCompilerOptions): QueryCompiler;\r\n}\r\n\r\ndeclare type QueryCompilerOptions = {\r\n    datamodel: string;\r\n    provider: Provider;\r\n    connectionInfo: ConnectionInfo;\r\n};\r\n\r\ndeclare type QueryEngineBatchGraphQLRequest = {\r\n    batch: QueryEngineRequest[];\r\n    transaction?: boolean;\r\n    isolationLevel?: IsolationLevel;\r\n};\r\n\r\ndeclare type QueryEngineBatchRequest = QueryEngineBatchGraphQLRequest | JsonBatchQuery;\r\n\r\ndeclare type QueryEngineConfig = {\r\n    datamodel: string;\r\n    configDir: string;\r\n    logQueries: boolean;\r\n    ignoreEnvVarErrors: boolean;\r\n    datasourceOverrides: Record<string, string>;\r\n    env: Record<string, string | undefined>;\r\n    logLevel: QueryEngineLogLevel;\r\n    engineProtocol: QueryEngineProtocol;\r\n    enableTracing: boolean;\r\n};\r\n\r\ndeclare interface QueryEngineConstructor {\r\n    new (config: QueryEngineConfig, logger: (log: string) => void, adapter?: ErrorCapturingSqlDriverAdapter): QueryEngineInstance;\r\n}\r\n\r\ndeclare type QueryEngineInstance = {\r\n    connect(headers: string, requestId: string): Promise<void>;\r\n    disconnect(headers: string, requestId: string): Promise<void>;\r\n    /**\r\n     * @param requestStr JSON.stringified `QueryEngineRequest | QueryEngineBatchRequest`\r\n     * @param headersStr JSON.stringified `QueryEngineRequestHeaders`\r\n     */\r\n    query(requestStr: string, headersStr: string, transactionId: string | undefined, requestId: string): Promise<string>;\r\n    sdlSchema?(): Promise<string>;\r\n    startTransaction(options: string, traceHeaders: string, requestId: string): Promise<string>;\r\n    commitTransaction(id: string, traceHeaders: string, requestId: string): Promise<string>;\r\n    rollbackTransaction(id: string, traceHeaders: string, requestId: string): Promise<string>;\r\n    metrics?(options: string): Promise<string>;\r\n    applyPendingMigrations?(): Promise<void>;\r\n    trace(requestId: string): Promise<string | null>;\r\n};\r\n\r\ndeclare type QueryEngineLogLevel = 'trace' | 'debug' | 'info' | 'warn' | 'error' | 'off';\r\n\r\ndeclare type QueryEngineProtocol = 'graphql' | 'json';\r\n\r\ndeclare type QueryEngineRequest = {\r\n    query: string;\r\n    variables: Object;\r\n};\r\n\r\ndeclare type QueryEngineResultData<T> = {\r\n    data: T;\r\n};\r\n\r\ndeclare type QueryEvent = {\r\n    timestamp: Date;\r\n    query: string;\r\n    params: string;\r\n    duration: number;\r\n    target: string;\r\n};\r\n\r\ndeclare type QueryEventType = 'query';\r\n\r\ndeclare type QueryIntrospectionBuiltinType = 'int' | 'bigint' | 'float' | 'double' | 'string' | 'enum' | 'bytes' | 'bool' | 'char' | 'decimal' | 'json' | 'xml' | 'uuid' | 'datetime' | 'date' | 'time' | 'int-array' | 'bigint-array' | 'float-array' | 'double-array' | 'string-array' | 'char-array' | 'bytes-array' | 'bool-array' | 'decimal-array' | 'json-array' | 'xml-array' | 'uuid-array' | 'datetime-array' | 'date-array' | 'time-array' | 'null' | 'unknown';\r\n\r\ndeclare type QueryMiddleware = (params: QueryMiddlewareParams, next: (params: QueryMiddlewareParams) => Promise<unknown>) => Promise<unknown>;\r\n\r\ndeclare type QueryMiddlewareParams = {\r\n    /** The model this is executed on */\r\n    model?: string;\r\n    /** The action that is being handled */\r\n    action: Action;\r\n    /** TODO what is this */\r\n    dataPath: string[];\r\n    /** TODO what is this */\r\n    runInTransaction: boolean;\r\n    args?: UserArgs_2;\r\n};\r\n\r\nexport declare type QueryOptions = {\r\n    query: {\r\n        [ModelName in string]: {\r\n            [ModelAction in string]: ModelQueryOptionsCb;\r\n        } | QueryOptionsCb;\r\n    };\r\n};\r\n\r\nexport declare type QueryOptionsCb = (args: QueryOptionsCbArgs) => Promise<any>;\r\n\r\nexport declare type QueryOptionsCbArgs = {\r\n    model?: string;\r\n    operation: string;\r\n    args: JsArgs | RawQueryArgs;\r\n    query: (args: JsArgs | RawQueryArgs) => Promise<unknown>;\r\n};\r\n\r\ndeclare type QueryOutput = ReadonlyDeep_2<{\r\n    name: string;\r\n    isRequired: boolean;\r\n    isList: boolean;\r\n}>;\r\n\r\n/**\r\n * Create raw SQL statement.\r\n */\r\nexport declare function raw(value: string): Sql;\r\n\r\nexport declare type RawParameters = {\r\n    __prismaRawParameters__: true;\r\n    values: string;\r\n};\r\n\r\nexport declare type RawQueryArgs = Sql | UnknownTypedSql | [query: string, ...values: RawValue[]];\r\n\r\ndeclare type RawResponse = {\r\n    columns: string[];\r\n    types: QueryIntrospectionBuiltinType[];\r\n    rows: unknown[][];\r\n};\r\n\r\ndeclare type RawTaggedValue = {\r\n    $type: 'Raw';\r\n    value: unknown;\r\n};\r\n\r\n/**\r\n * Supported value or SQL instance.\r\n */\r\nexport declare type RawValue = Value | Sql;\r\n\r\nexport declare type ReadonlyDeep<T> = {\r\n    readonly [K in keyof T]: ReadonlyDeep<T[K]>;\r\n};\r\n\r\ndeclare type ReadonlyDeep_2<O> = {\r\n    +readonly [K in keyof O]: ReadonlyDeep_2<O[K]>;\r\n};\r\n\r\ndeclare type Record_2<T extends string | number | symbol, U> = {\r\n    [P in T]: U;\r\n};\r\nexport { Record_2 as Record }\r\n\r\nexport declare type RenameAndNestPayloadKeys<P> = {\r\n    [K in keyof P as K extends 'scalars' | 'objects' | 'composites' ? keyof P[K] : never]: P[K];\r\n};\r\n\r\ndeclare type RequestBatchOptions<InteractiveTransactionPayload> = {\r\n    transaction?: TransactionOptions_3<InteractiveTransactionPayload>;\r\n    traceparent?: string;\r\n    numTry?: number;\r\n    containsWrite: boolean;\r\n    customDataProxyFetch?: CustomDataProxyFetch;\r\n};\r\n\r\ndeclare interface RequestError {\r\n    error: string;\r\n    user_facing_error: {\r\n        is_panic: boolean;\r\n        message: string;\r\n        meta?: Record<string, unknown>;\r\n        error_code?: string;\r\n        batch_request_idx?: number;\r\n    };\r\n}\r\n\r\ndeclare class RequestHandler {\r\n    client: Client;\r\n    dataloader: DataLoader<RequestParams>;\r\n    private logEmitter?;\r\n    constructor(client: Client, logEmitter?: LogEmitter);\r\n    request(params: RequestParams): Promise<any>;\r\n    mapQueryEngineResult({ dataPath, unpacker }: RequestParams, response: QueryEngineResultData<any>): any;\r\n    /**\r\n     * Handles the error and logs it, logging the error is done synchronously waiting for the event\r\n     * handlers to finish.\r\n     */\r\n    handleAndLogRequestError(params: HandleErrorParams): never;\r\n    handleRequestError({ error, clientMethod, callsite, transaction, args, modelName, globalOmit, }: HandleErrorParams): never;\r\n    sanitizeMessage(message: any): any;\r\n    unpack(data: unknown, dataPath: string[], unpacker?: Unpacker): any;\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\ndeclare type RequestOptions<InteractiveTransactionPayload> = {\r\n    traceparent?: string;\r\n    numTry?: number;\r\n    interactiveTransaction?: InteractiveTransactionOptions<InteractiveTransactionPayload>;\r\n    isWrite: boolean;\r\n    customDataProxyFetch?: CustomDataProxyFetch;\r\n};\r\n\r\ndeclare type RequestParams = {\r\n    modelName?: string;\r\n    action: Action;\r\n    protocolQuery: JsonQuery;\r\n    dataPath: string[];\r\n    clientMethod: string;\r\n    callsite?: CallSite;\r\n    transaction?: PrismaPromiseTransaction;\r\n    extensions: MergedExtensionsList;\r\n    args?: any;\r\n    headers?: Record<string, string>;\r\n    unpacker?: Unpacker;\r\n    otelParentCtx?: Context;\r\n    otelChildCtx?: Context;\r\n    globalOmit?: GlobalOmitOptions;\r\n    customDataProxyFetch?: CustomDataProxyFetch;\r\n};\r\n\r\ndeclare type RequiredExtensionArgs = NameArgs & ResultArgs & ModelArgs & ClientArgs & QueryOptions;\r\nexport { RequiredExtensionArgs }\r\nexport { RequiredExtensionArgs as UserArgs }\r\n\r\nexport declare type RequiredKeys<O> = {\r\n    [K in keyof O]-?: {} extends Pick_2<O, K> ? never : K;\r\n}[keyof O];\r\n\r\ndeclare function resolveDatasourceUrl({ inlineDatasources, overrideDatasources, env, clientVersion, }: {\r\n    inlineDatasources: GetPrismaClientConfig['inlineDatasources'];\r\n    overrideDatasources: Datasources;\r\n    env: Record<string, string | undefined>;\r\n    clientVersion: string;\r\n}): string;\r\n\r\nexport declare type Result<T, A, F extends Operation> = T extends {\r\n    [K: symbol]: {\r\n        types: {\r\n            payload: any;\r\n        };\r\n    };\r\n} ? GetResult<T[symbol]['types']['payload'], A, F> : GetResult<{\r\n    composites: {};\r\n    objects: {};\r\n    scalars: {};\r\n    name: '';\r\n}, {}, F>;\r\n\r\nexport declare type Result_2<T, A, F extends Operation> = Result<T, A, F>;\r\n\r\ndeclare namespace Result_3 {\r\n    export {\r\n        Count,\r\n        GetFindResult,\r\n        SelectablePayloadFields,\r\n        SelectField,\r\n        DefaultSelection,\r\n        UnwrapPayload,\r\n        ApplyOmit,\r\n        OmitValue,\r\n        GetCountResult,\r\n        Aggregate,\r\n        GetAggregateResult,\r\n        GetBatchResult,\r\n        GetGroupByResult,\r\n        GetResult,\r\n        ExtractGlobalOmit\r\n    }\r\n}\r\n\r\ndeclare type Result_4<T> = {\r\n    map<U>(fn: (value: T) => U): Result_4<U>;\r\n    flatMap<U>(fn: (value: T) => Result_4<U>): Result_4<U>;\r\n} & ({\r\n    readonly ok: true;\r\n    readonly value: T;\r\n} | {\r\n    readonly ok: false;\r\n    readonly error: Error_2;\r\n});\r\n\r\nexport declare type ResultArg = {\r\n    [FieldName in string]: ResultFieldDefinition;\r\n};\r\n\r\nexport declare type ResultArgs = {\r\n    result: {\r\n        [ModelName in string]: ResultArg;\r\n    };\r\n};\r\n\r\nexport declare type ResultArgsFieldCompute = (model: any) => unknown;\r\n\r\nexport declare type ResultFieldDefinition = {\r\n    needs?: {\r\n        [FieldName in string]: boolean;\r\n    };\r\n    compute: ResultArgsFieldCompute;\r\n};\r\n\r\nexport declare type Return<T> = T extends (...args: any[]) => infer R ? R : T;\r\n\r\nexport declare type RuntimeDataModel = {\r\n    readonly models: Record<string, RuntimeModel>;\r\n    readonly enums: Record<string, RuntimeEnum>;\r\n    readonly types: Record<string, RuntimeModel>;\r\n};\r\n\r\ndeclare type RuntimeEnum = Omit<DMMF_2.DatamodelEnum, 'name'>;\r\n\r\ndeclare type RuntimeModel = Omit<DMMF_2.Model, 'name'>;\r\n\r\ndeclare type RuntimeName = 'workerd' | 'deno' | 'netlify' | 'node' | 'bun' | 'edge-light' | '';\r\n\r\ndeclare type Schema = ReadonlyDeep_2<{\r\n    rootQueryType?: string;\r\n    rootMutationType?: string;\r\n    inputObjectTypes: {\r\n        model?: InputType[];\r\n        prisma: InputType[];\r\n    };\r\n    outputObjectTypes: {\r\n        model: OutputType[];\r\n        prisma: OutputType[];\r\n    };\r\n    enumTypes: {\r\n        model?: SchemaEnum[];\r\n        prisma: SchemaEnum[];\r\n    };\r\n    fieldRefTypes: {\r\n        prisma?: FieldRefType[];\r\n    };\r\n}>;\r\n\r\ndeclare type SchemaArg = ReadonlyDeep_2<{\r\n    name: string;\r\n    comment?: string;\r\n    isNullable: boolean;\r\n    isRequired: boolean;\r\n    inputTypes: InputTypeRef[];\r\n    deprecation?: Deprecation;\r\n}>;\r\n\r\ndeclare type SchemaEnum = ReadonlyDeep_2<{\r\n    name: string;\r\n    values: string[];\r\n}>;\r\n\r\ndeclare type SchemaField = ReadonlyDeep_2<{\r\n    name: string;\r\n    isNullable?: boolean;\r\n    outputType: OutputTypeRef;\r\n    args: SchemaArg[];\r\n    deprecation?: Deprecation;\r\n    documentation?: string;\r\n}>;\r\n\r\nexport declare type Select<T, U> = T extends U ? T : never;\r\n\r\nexport declare type SelectablePayloadFields<K extends PropertyKey, O> = {\r\n    objects: {\r\n        [k in K]: O;\r\n    };\r\n} | {\r\n    composites: {\r\n        [k in K]: O;\r\n    };\r\n};\r\n\r\nexport declare type SelectField<P extends SelectablePayloadFields<any, any>, K extends PropertyKey> = P extends {\r\n    objects: Record<K, any>;\r\n} ? P['objects'][K] : P extends {\r\n    composites: Record<K, any>;\r\n} ? P['composites'][K] : never;\r\n\r\ndeclare type Selection_2 = Record<string, boolean | Skip | JsArgs>;\r\nexport { Selection_2 as Selection }\r\n\r\nexport declare function serializeJsonQuery({ modelName, action, args, runtimeDataModel, extensions, callsite, clientMethod, errorFormat, clientVersion, previewFeatures, globalOmit, }: SerializeParams): JsonQuery;\r\n\r\ndeclare type SerializeParams = {\r\n    runtimeDataModel: RuntimeDataModel;\r\n    modelName?: string;\r\n    action: Action;\r\n    args?: JsArgs;\r\n    extensions?: MergedExtensionsList;\r\n    callsite?: CallSite;\r\n    clientMethod: string;\r\n    clientVersion: string;\r\n    errorFormat: ErrorFormat;\r\n    previewFeatures: string[];\r\n    globalOmit?: GlobalOmitOptions;\r\n};\r\n\r\ndeclare class Skip {\r\n    constructor(param?: symbol);\r\n    ifUndefined<T>(value: T | undefined): T | Skip;\r\n}\r\n\r\nexport declare const skip: Skip;\r\n\r\ndeclare type SortOrder = 'asc' | 'desc';\r\n\r\n/**\r\n * An interface that represents a span. A span represents a single operation\r\n * within a trace. Examples of span might include remote procedure calls or a\r\n * in-process function calls to sub-components. A Trace has a single, top-level\r\n * \"root\" Span that in turn may have zero or more child Spans, which in turn\r\n * may have children.\r\n *\r\n * Spans are created by the {@link Tracer.startSpan} method.\r\n */\r\ndeclare interface Span {\r\n    /**\r\n     * Returns the {@link SpanContext} object associated with this Span.\r\n     *\r\n     * Get an immutable, serializable identifier for this span that can be used\r\n     * to create new child spans. Returned SpanContext is usable even after the\r\n     * span ends.\r\n     *\r\n     * @returns the SpanContext object associated with this Span.\r\n     */\r\n    spanContext(): SpanContext;\r\n    /**\r\n     * Sets an attribute to the span.\r\n     *\r\n     * Sets a single Attribute with the key and value passed as arguments.\r\n     *\r\n     * @param key the key for this attribute.\r\n     * @param value the value for this attribute. Setting a value null or\r\n     *              undefined is invalid and will result in undefined behavior.\r\n     */\r\n    setAttribute(key: string, value: SpanAttributeValue): this;\r\n    /**\r\n     * Sets attributes to the span.\r\n     *\r\n     * @param attributes the attributes that will be added.\r\n     *                   null or undefined attribute values\r\n     *                   are invalid and will result in undefined behavior.\r\n     */\r\n    setAttributes(attributes: SpanAttributes): this;\r\n    /**\r\n     * Adds an event to the Span.\r\n     *\r\n     * @param name the name of the event.\r\n     * @param [attributesOrStartTime] the attributes that will be added; these are\r\n     *     associated with this event. Can be also a start time\r\n     *     if type is {@type TimeInput} and 3rd param is undefined\r\n     * @param [startTime] start time of the event.\r\n     */\r\n    addEvent(name: string, attributesOrStartTime?: SpanAttributes | TimeInput, startTime?: TimeInput): this;\r\n    /**\r\n     * Adds a single link to the span.\r\n     *\r\n     * Links added after the creation will not affect the sampling decision.\r\n     * It is preferred span links be added at span creation.\r\n     *\r\n     * @param link the link to add.\r\n     */\r\n    addLink(link: Link): this;\r\n    /**\r\n     * Adds multiple links to the span.\r\n     *\r\n     * Links added after the creation will not affect the sampling decision.\r\n     * It is preferred span links be added at span creation.\r\n     *\r\n     * @param links the links to add.\r\n     */\r\n    addLinks(links: Link[]): this;\r\n    /**\r\n     * Sets a status to the span. If used, this will override the default Span\r\n     * status. Default is {@link SpanStatusCode.UNSET}. SetStatus overrides the value\r\n     * of previous calls to SetStatus on the Span.\r\n     *\r\n     * @param status the SpanStatus to set.\r\n     */\r\n    setStatus(status: SpanStatus): this;\r\n    /**\r\n     * Updates the Span name.\r\n     *\r\n     * This will override the name provided via {@link Tracer.startSpan}.\r\n     *\r\n     * Upon this update, any sampling behavior based on Span name will depend on\r\n     * the implementation.\r\n     *\r\n     * @param name the Span name.\r\n     */\r\n    updateName(name: string): this;\r\n    /**\r\n     * Marks the end of Span execution.\r\n     *\r\n     * Call to End of a Span MUST not have any effects on child spans. Those may\r\n     * still be running and can be ended later.\r\n     *\r\n     * Do not return `this`. The Span generally should not be used after it\r\n     * is ended so chaining is not desired in this context.\r\n     *\r\n     * @param [endTime] the time to set as Span's end time. If not provided,\r\n     *     use the current time as the span's end time.\r\n     */\r\n    end(endTime?: TimeInput): void;\r\n    /**\r\n     * Returns the flag whether this span will be recorded.\r\n     *\r\n     * @returns true if this Span is active and recording information like events\r\n     *     with the `AddEvent` operation and attributes using `setAttributes`.\r\n     */\r\n    isRecording(): boolean;\r\n    /**\r\n     * Sets exception as a span event\r\n     * @param exception the exception the only accepted values are string or Error\r\n     * @param [time] the time to set as Span's event time. If not provided,\r\n     *     use the current time.\r\n     */\r\n    recordException(exception: Exception, time?: TimeInput): void;\r\n}\r\n\r\n/**\r\n * @deprecated please use {@link Attributes}\r\n */\r\ndeclare type SpanAttributes = Attributes;\r\n\r\n/**\r\n * @deprecated please use {@link AttributeValue}\r\n */\r\ndeclare type SpanAttributeValue = AttributeValue;\r\n\r\ndeclare type SpanCallback<R> = (span?: Span, context?: Context) => R;\r\n\r\n/**\r\n * A SpanContext represents the portion of a {@link Span} which must be\r\n * serialized and propagated along side of a {@link Baggage}.\r\n */\r\ndeclare interface SpanContext {\r\n    /**\r\n     * The ID of the trace that this span belongs to. It is worldwide unique\r\n     * with practically sufficient probability by being made as 16 randomly\r\n     * generated bytes, encoded as a 32 lowercase hex characters corresponding to\r\n     * 128 bits.\r\n     */\r\n    traceId: string;\r\n    /**\r\n     * The ID of the Span. It is globally unique with practically sufficient\r\n     * probability by being made as 8 randomly generated bytes, encoded as a 16\r\n     * lowercase hex characters corresponding to 64 bits.\r\n     */\r\n    spanId: string;\r\n    /**\r\n     * Only true if the SpanContext was propagated from a remote parent.\r\n     */\r\n    isRemote?: boolean;\r\n    /**\r\n     * Trace flags to propagate.\r\n     *\r\n     * It is represented as 1 byte (bitmap). Bit to represent whether trace is\r\n     * sampled or not. When set, the least significant bit documents that the\r\n     * caller may have recorded trace data. A caller who does not record trace\r\n     * data out-of-band leaves this flag unset.\r\n     *\r\n     * see {@link TraceFlags} for valid flag values.\r\n     */\r\n    traceFlags: number;\r\n    /**\r\n     * Tracing-system-specific info to propagate.\r\n     *\r\n     * The tracestate field value is a `list` as defined below. The `list` is a\r\n     * series of `list-members` separated by commas `,`, and a list-member is a\r\n     * key/value pair separated by an equals sign `=`. Spaces and horizontal tabs\r\n     * surrounding `list-members` are ignored. There can be a maximum of 32\r\n     * `list-members` in a `list`.\r\n     * More Info: https://www.w3.org/TR/trace-context/#tracestate-field\r\n     *\r\n     * Examples:\r\n     *     Single tracing system (generic format):\r\n     *         tracestate: rojo=00f067aa0ba902b7\r\n     *     Multiple tracing systems (with different formatting):\r\n     *         tracestate: rojo=00f067aa0ba902b7,congo=t61rcWkgMzE\r\n     */\r\n    traceState?: TraceState;\r\n}\r\n\r\ndeclare enum SpanKind {\r\n    /** Default value. Indicates that the span is used internally. */\r\n    INTERNAL = 0,\r\n    /**\r\n     * Indicates that the span covers server-side handling of an RPC or other\r\n     * remote request.\r\n     */\r\n    SERVER = 1,\r\n    /**\r\n     * Indicates that the span covers the client-side wrapper around an RPC or\r\n     * other remote request.\r\n     */\r\n    CLIENT = 2,\r\n    /**\r\n     * Indicates that the span describes producer sending a message to a\r\n     * broker. Unlike client and server, there is no direct critical path latency\r\n     * relationship between producer and consumer spans.\r\n     */\r\n    PRODUCER = 3,\r\n    /**\r\n     * Indicates that the span describes consumer receiving a message from a\r\n     * broker. Unlike client and server, there is no direct critical path latency\r\n     * relationship between producer and consumer spans.\r\n     */\r\n    CONSUMER = 4\r\n}\r\n\r\n/**\r\n * Options needed for span creation\r\n */\r\ndeclare interface SpanOptions {\r\n    /**\r\n     * The SpanKind of a span\r\n     * @default {@link SpanKind.INTERNAL}\r\n     */\r\n    kind?: SpanKind;\r\n    /** A span's attributes */\r\n    attributes?: SpanAttributes;\r\n    /** {@link Link}s span to other spans */\r\n    links?: Link[];\r\n    /** A manually specified start time for the created `Span` object. */\r\n    startTime?: TimeInput;\r\n    /** The new span should be a root span. (Ignore parent from context). */\r\n    root?: boolean;\r\n}\r\n\r\ndeclare interface SpanStatus {\r\n    /** The status code of this message. */\r\n    code: SpanStatusCode;\r\n    /** A developer-facing error message. */\r\n    message?: string;\r\n}\r\n\r\n/**\r\n * An enumeration of status codes.\r\n */\r\ndeclare enum SpanStatusCode {\r\n    /**\r\n     * The default status.\r\n     */\r\n    UNSET = 0,\r\n    /**\r\n     * The operation has been validated by an Application developer or\r\n     * Operator to have completed successfully.\r\n     */\r\n    OK = 1,\r\n    /**\r\n     * The operation contains an error.\r\n     */\r\n    ERROR = 2\r\n}\r\n\r\n/**\r\n * A SQL instance can be nested within each other to build SQL strings.\r\n */\r\nexport declare class Sql {\r\n    readonly values: Value[];\r\n    readonly strings: string[];\r\n    constructor(rawStrings: readonly string[], rawValues: readonly RawValue[]);\r\n    get sql(): string;\r\n    get statement(): string;\r\n    get text(): string;\r\n    inspect(): {\r\n        sql: string;\r\n        statement: string;\r\n        text: string;\r\n        values: unknown[];\r\n    };\r\n}\r\n\r\ndeclare interface SqlDriverAdapter extends SqlQueryable {\r\n    /**\r\n     * Execute multiple SQL statements separated by semicolon.\r\n     */\r\n    executeScript(script: string): Promise<void>;\r\n    /**\r\n     * Start new transaction.\r\n     */\r\n    startTransaction(isolationLevel?: IsolationLevel): Promise<Transaction>;\r\n    /**\r\n     * Optional method that returns extra connection info\r\n     */\r\n    getConnectionInfo?(): ConnectionInfo;\r\n    /**\r\n     * Dispose of the connection and release any resources.\r\n     */\r\n    dispose(): Promise<void>;\r\n}\r\n\r\nexport declare interface SqlDriverAdapterFactory extends DriverAdapterFactory<SqlQuery, SqlResultSet> {\r\n    connect(): Promise<SqlDriverAdapter>;\r\n}\r\n\r\ndeclare type SqlQuery = {\r\n    sql: string;\r\n    args: Array<unknown>;\r\n    argTypes: Array<ArgType>;\r\n};\r\n\r\ndeclare interface SqlQueryable extends Queryable<SqlQuery, SqlResultSet> {\r\n}\r\n\r\ndeclare interface SqlResultSet {\r\n    /**\r\n     * List of column types appearing in a database query, in the same order as `columnNames`.\r\n     * They are used within the Query Engine to convert values from JS to Quaint values.\r\n     */\r\n    columnTypes: Array<ColumnType>;\r\n    /**\r\n     * List of column names appearing in a database query, in the same order as `columnTypes`.\r\n     */\r\n    columnNames: Array<string>;\r\n    /**\r\n     * List of rows retrieved from a database query.\r\n     * Each row is a list of values, whose length matches `columnNames` and `columnTypes`.\r\n     */\r\n    rows: Array<Array<unknown>>;\r\n    /**\r\n     * The last ID of an `INSERT` statement, if any.\r\n     * This is required for `AUTO_INCREMENT` columns in databases based on MySQL and SQLite.\r\n     */\r\n    lastInsertId?: string;\r\n}\r\n\r\n/**\r\n * Create a SQL object from a template string.\r\n */\r\nexport declare function sqltag(strings: readonly string[], ...values: readonly RawValue[]): Sql;\r\n\r\n/**\r\n * Defines TimeInput.\r\n *\r\n * hrtime, epoch milliseconds, performance.now() or Date\r\n */\r\ndeclare type TimeInput = HrTime_2 | number | Date;\r\n\r\nexport declare type ToTuple<T> = T extends any[] ? T : [T];\r\n\r\ndeclare interface TraceState {\r\n    /**\r\n     * Create a new TraceState which inherits from this TraceState and has the\r\n     * given key set.\r\n     * The new entry will always be added in the front of the list of states.\r\n     *\r\n     * @param key key of the TraceState entry.\r\n     * @param value value of the TraceState entry.\r\n     */\r\n    set(key: string, value: string): TraceState;\r\n    /**\r\n     * Return a new TraceState which inherits from this TraceState but does not\r\n     * contain the given key.\r\n     *\r\n     * @param key the key for the TraceState entry to be removed.\r\n     */\r\n    unset(key: string): TraceState;\r\n    /**\r\n     * Returns the value to which the specified key is mapped, or `undefined` if\r\n     * this map contains no mapping for the key.\r\n     *\r\n     * @param key with which the specified value is to be associated.\r\n     * @returns the value to which the specified key is mapped, or `undefined` if\r\n     *     this map contains no mapping for the key.\r\n     */\r\n    get(key: string): string | undefined;\r\n    /**\r\n     * Serializes the TraceState to a `list` as defined below. The `list` is a\r\n     * series of `list-members` separated by commas `,`, and a list-member is a\r\n     * key/value pair separated by an equals sign `=`. Spaces and horizontal tabs\r\n     * surrounding `list-members` are ignored. There can be a maximum of 32\r\n     * `list-members` in a `list`.\r\n     *\r\n     * @returns the serialized string.\r\n     */\r\n    serialize(): string;\r\n}\r\n\r\ndeclare interface TracingHelper {\r\n    isEnabled(): boolean;\r\n    getTraceParent(context?: Context): string;\r\n    dispatchEngineSpans(spans: EngineSpan[]): void;\r\n    getActiveContext(): Context | undefined;\r\n    runInChildSpan<R>(nameOrOptions: string | ExtendedSpanOptions, callback: SpanCallback<R>): R;\r\n}\r\n\r\ndeclare interface Transaction extends AdapterInfo, SqlQueryable {\r\n    /**\r\n     * Transaction options.\r\n     */\r\n    readonly options: TransactionOptions;\r\n    /**\r\n     * Commit the transaction.\r\n     */\r\n    commit(): Promise<void>;\r\n    /**\r\n     * Roll back the transaction.\r\n     */\r\n    rollback(): Promise<void>;\r\n}\r\n\r\ndeclare namespace Transaction_2 {\r\n    export {\r\n        TransactionOptions_2 as Options,\r\n        InteractiveTransactionInfo,\r\n        TransactionHeaders\r\n    }\r\n}\r\n\r\ndeclare type TransactionHeaders = {\r\n    traceparent?: string;\r\n};\r\n\r\ndeclare type TransactionOptions = {\r\n    usePhantomQuery: boolean;\r\n};\r\n\r\ndeclare type TransactionOptions_2 = {\r\n    maxWait?: number;\r\n    timeout?: number;\r\n    isolationLevel?: IsolationLevel;\r\n};\r\n\r\ndeclare type TransactionOptions_3<InteractiveTransactionPayload> = {\r\n    kind: 'itx';\r\n    options: InteractiveTransactionOptions<InteractiveTransactionPayload>;\r\n} | {\r\n    kind: 'batch';\r\n    options: BatchTransactionOptions;\r\n};\r\n\r\nexport declare class TypedSql<Values extends readonly unknown[], Result> {\r\n    [PrivateResultType]: Result;\r\n    constructor(sql: string, values: Values);\r\n    get sql(): string;\r\n    get values(): Values;\r\n}\r\n\r\nexport declare type TypeMapCbDef = Fn<{\r\n    extArgs: InternalArgs;\r\n}, TypeMapDef>;\r\n\r\n/** Shared */\r\nexport declare type TypeMapDef = Record<any, any>;\r\n\r\ndeclare type TypeRef<AllowedLocations extends FieldLocation> = {\r\n    isList: boolean;\r\n    type: string;\r\n    location: AllowedLocations;\r\n    namespace?: FieldNamespace;\r\n};\r\n\r\ndeclare namespace Types {\r\n    export {\r\n        Result_3 as Result,\r\n        Extensions_2 as Extensions,\r\n        Utils,\r\n        Public_2 as Public,\r\n        isSkip,\r\n        Skip,\r\n        skip,\r\n        UnknownTypedSql,\r\n        OperationPayload as Payload\r\n    }\r\n}\r\nexport { Types }\r\n\r\ndeclare type uniqueIndex = ReadonlyDeep_2<{\r\n    name: string;\r\n    fields: string[];\r\n}>;\r\n\r\ndeclare type UnknownErrorParams = {\r\n    clientVersion: string;\r\n    batchRequestIdx?: number;\r\n};\r\n\r\nexport declare type UnknownTypedSql = TypedSql<unknown[], unknown>;\r\n\r\ndeclare type Unpacker = (data: any) => any;\r\n\r\nexport declare type UnwrapPayload<P> = {} extends P ? unknown : {\r\n    [K in keyof P]: P[K] extends {\r\n        scalars: infer S;\r\n        composites: infer C;\r\n    }[] ? Array<S & UnwrapPayload<C>> : P[K] extends {\r\n        scalars: infer S;\r\n        composites: infer C;\r\n    } | null ? S & UnwrapPayload<C> | Select<P[K], null> : never;\r\n};\r\n\r\nexport declare type UnwrapPromise<P> = P extends Promise<infer R> ? R : P;\r\n\r\nexport declare type UnwrapTuple<Tuple extends readonly unknown[]> = {\r\n    [K in keyof Tuple]: K extends `${number}` ? Tuple[K] extends PrismaPromise<infer X> ? X : UnwrapPromise<Tuple[K]> : UnwrapPromise<Tuple[K]>;\r\n};\r\n\r\n/**\r\n * Input that flows from the user into the Client.\r\n */\r\ndeclare type UserArgs_2 = any;\r\n\r\ndeclare namespace Utils {\r\n    export {\r\n        EmptyToUnknown,\r\n        NeverToUnknown,\r\n        PatchFlat,\r\n        Omit_2 as Omit,\r\n        Pick_2 as Pick,\r\n        ComputeDeep,\r\n        Compute,\r\n        OptionalFlat,\r\n        ReadonlyDeep,\r\n        Narrowable,\r\n        Narrow,\r\n        Exact,\r\n        Cast,\r\n        Record_2 as Record,\r\n        UnwrapPromise,\r\n        UnwrapTuple,\r\n        Path,\r\n        Fn,\r\n        Call,\r\n        RequiredKeys,\r\n        OptionalKeys,\r\n        Optional,\r\n        Return,\r\n        ToTuple,\r\n        RenameAndNestPayloadKeys,\r\n        PayloadToResult,\r\n        Select,\r\n        Equals,\r\n        Or,\r\n        JsPromise\r\n    }\r\n}\r\n\r\ndeclare function validator<V>(): <S>(select: Exact<S, V>) => S;\r\n\r\ndeclare function validator<C, M extends Exclude<keyof C, `$${string}`>, O extends keyof C[M] & Operation>(client: C, model: M, operation: O): <S>(select: Exact<S, Args<C[M], O>>) => S;\r\n\r\ndeclare function validator<C, M extends Exclude<keyof C, `$${string}`>, O extends keyof C[M] & Operation, P extends keyof Args<C[M], O>>(client: C, model: M, operation: O, prop: P): <S>(select: Exact<S, Args<C[M], O>[P]>) => S;\r\n\r\n/**\r\n * Values supported by SQL engine.\r\n */\r\nexport declare type Value = unknown;\r\n\r\nexport declare function warnEnvConflicts(envPaths: any): void;\r\n\r\nexport declare const warnOnce: (key: string, message: string, ...args: unknown[]) => void;\r\n\r\nexport { }\r\n",
        "node_modules/.prisma/client/wasm.d.ts": "export * from \"./index\"",
        "node_modules/@prisma/client/index.d.ts": "export * from '.prisma/client/default'"
      },
      "document": "# Prisma Markdown\n\n> Generated by [`prisma-markdown`](https://github.com/samchon/prisma-markdown)\n\n- [Core](#core)\n- [DiscussionBoard](#discussionboard)\n- [Comments](#comments)\n- [Interaction](#interaction)\n- [Moderation](#moderation)\n- [Notification](#notification)\n- [Admin](#admin)\n\n## Core\n\n```mermaid\nerDiagram\n\"discussionboard_user\" {\n  String id PK\n  String email UK\n  String password_hash\n  Boolean is_active\n  DateTime created_at\n  DateTime updated_at\n}\n\"discussionboard_user_profile\" {\n  String id PK\n  String user_id FK,UK\n  String display_name\n  String(80000) avatar_url \"nullable\"\n  String bio \"nullable\"\n}\n\"discussionboard_member\" {\n  String id PK\n  String user_id FK,UK\n  DateTime granted_at\n}\n\"discussionboard_moderator\" {\n  String id PK\n  String user_id FK,UK\n  DateTime assigned_at\n}\n\"discussionboard_admin\" {\n  String id PK\n  String user_id FK,UK\n  DateTime assigned_at\n}\n\"discussionboard_user_profile\" |o--|| \"discussionboard_user\" : user_profile_user_id\n\"discussionboard_member\" |o--|| \"discussionboard_user\" : member_user_id\n\"discussionboard_moderator\" |o--|| \"discussionboard_user\" : moderator_user_id\n\"discussionboard_admin\" |o--|| \"discussionboard_user\" : admin_user_id\n```\n\n### `discussionboard_user`\n\n[User Master Record] - This implements the foundational user management requirement noted in the requirements analysis (02_discussionboard_functional_requirements.md Section 3.1: User Registration & Authentication). \n\nThis model captures core authentication and identity data for all discussion board participants—regardless of role (member, moderator, admin). Maintains strict 3NF compliance by isolating authentication data (email, credential info, status) from profile and role specialization, preventing duplication or transitive dependencies. For example, all roles reference this entity, and profile/details are managed in separate tables.\n\nKey relationships: Links 1:1 to discussionboard_user_profile. Related 1:N with role specializations (member/moderator/admin), posts, comments, and all historical user actions.\nSpecial behaviors: Only one email per user. Role management handled via join/role specialization tables. Soft deactivation supported by 'is_active' flag.\n\nProperties as follows:\n\n- `id`: [Primary Key] - Globally unique identifier for the user. Implements the requirements for traceable, referential user identity across all core tables (see 02_discussionboard_functional_requirements.md). 3NF enforced as surrogate key. For example, all foreign key relationships use this for core user reference.\n- `email`: [Authentication Email] - Implements unique login credential per user requirement. Business meaning: Used for login, notifications, and password recovery. Ensures normalization by existing only on user root entity and not duplicated elsewhere. Enforced unique constraint. E.g., user login process.\n- `password_hash`: [Password Hash] - Securely stores password hash for authentication workflow per 02_discussionboard_functional_requirements.md. Ensures separation from credential-independent profile info. Used for login verification.\n- `is_active`: [Active Status] - Tracks whether the user account is enabled or deactivated (requirement: Admin can deactivate). Normalization: not duplicated elsewhere. For account suspension procedures.\n- `created_at`: [Creation Timestamp] - When user joined. Required for audit and analytics (see success criteria in 01_discussionboard_overview_and_scope.md). Used in user growth/activation KPIs.\n- `updated_at`: [Last Update Timestamp] - Business: Audit and admin review. Ensures clean separation—no transitive dependency.\n\n### `discussionboard_user_profile`\n\n[User Profile] - Implements user display/personalization requirements (02_discussionboard_functional_requirements.md, 3.1) distinct from root authentication. Holds display name, optional avatar, and bio—strictly 3NF as contact details, credentials, role, and settings are elsewhere. Used for member directories, post attributions, notifications.\n\nKey relationships: 1:1 with discussionboard_user (foreign key = unique). Not duplicated in role tables.\nSpecial behaviors: 1:1 uniqueness enforced. All user display data (NOT used for authentication).\n\nProperties as follows:\n\n- `id`: [Primary Key] - Globally unique identifier for the profile. Surrogate key for normalization. Ensures all profile retrieval and modifications are auditable.\n- `user_id`: [Foreign Key: discussionboard_user] - User this profile belongs to. Implements 1:1 user-profile relationship (requirement: one profile per account, never duplicated). Enforces normalization. E.g., to get profile when showing post author.\n- `display_name`: [Display Name] - User's chosen name, shown publicly on posts/comments. Not used for authentication. Maintains 3NF by separating identity from credential tables. E.g., 'JohnDoe'.\n- `avatar_url`: [Avatar Image] - Optional user image link. Not duplicated anywhere. Maintains normalized structure. Used on post lists/user bios.\n- `bio`: [User Bio] - Self-description or background, used on profiles/mouseover displays. Normalization: No business logic outside of display.\n\n### `discussionboard_member`\n\n[Member Role] - Implements domain model for general user participation rights (see user roles in 03_discussionboard_user_roles_and_permissions.md and participation requirements in 02_discussionboard_functional_requirements.md 3.2-3.4). This captures all accounts with base-level actions (posting, commenting, liking). All users with platform presence are members. 3NF: Only stores role-specific facts, no credential/profile fields duplicated.\n\nKey relationships: 1:1 with discussionboard_user. Related 1:N to posts, comments, likes, reports. Role is atomic, all privileges via explicit role presence.\nSpecial behaviors: Role assignment/demotion flows strictly auditable via foreign key.\n\nProperties as follows:\n\n- `id`: [Primary Key] - Each member has a dedicated, globally unique role assignment entry for traceability (even if admin or moderator). Enforces 3NF by using only a surrogate key.\n- `user_id`: [Foreign Key: discussionboard_user] - Account assigned this member role. Enforces 1:1 mapping, not duplicated for other roles. Needed for permissions matrix. E.g., to check if a user can create posts.\n- `granted_at`: [Membership Grant Timestamp] - When membership began. Required for audits, demotions, or calculating active duration. Maintains third normal form by not holding user or credential data.\n\n### `discussionboard_moderator`\n\n[Moderator Role] - Implements elevated moderator assignment for trusted members, referencing business rules in 03_discussionboard_user_roles_and_permissions.md and moderation functions in 02_discussionboard_functional_requirements.md 3.5. Only users explicitly assigned this role are allowed moderation tools. 3NF-preserving: only stores moderator-specific info (no duplication of credentials/profile).\n\nKey relationships: 1:1 to discussionboard_user (atomic assignment). Related 1:N to reports, moderation actions.\nSpecial behaviors: Grant/revoke flows auditable. All permission checks cleanly reference this mapping.\n\nProperties as follows:\n\n- `id`: [Primary Key] - Unique identifier for moderator role assignment. Enforces traceability, audit, and clean separation. Used for all moderator-level permission checks.\n- `user_id`: [Foreign Key: discussionboard_user] - User granted moderator authority (must also be a member). 1:1 constraint by unique index. Never duplicated nor nullable. E.g., lookup for report review access.\n- `assigned_at`: [Moderator Grant Timestamp] - When moderator role was assigned. Auditing and compliance for all moderator promotions. Normalization: Never holds non-moderator info.\n\n### `discussionboard_admin`\n\n[Admin Role] - Implements system administrator privilege assignment as per 03_discussionboard_user_roles_and_permissions.md and 02_discussionboard_functional_requirements.md (platform-wide management, user promotion/role reassignment). All platform-wide permissions are checked against this table. 3NF-compliant: only houses admin assignment data, never duplicates user or moderator/member details.\n\nKey relationships: 1:1 to discussionboard_user; referenced when determining admin dashboard/settings access. All permission checks reference this mapping.\nSpecial behaviors: Admin can demote/promote all other roles. Auditing via assignment timestamps. No transitive/admin details outside this entry.\n\nProperties as follows:\n\n- `id`: [Primary Key] - Surrogate key for admin role assignment. Allows auditing/change tracking for all promotions/demotions. Clean, normalized design.\n- `user_id`: [Foreign Key: discussionboard_user] - User assigned admin authority. Enforced 1:1 by unique index, not nullable. 3NF: Never duplicated.\n- `assigned_at`: [Admin Assignment Timestamp] - When the admin role was assigned; fulfills trace and change-audit requirements for privileged role escalation. Normalized by excluding non-admin details.\n\n## DiscussionBoard\n\n```mermaid\nerDiagram\n\"discussionboard_post\" {\n  String id PK\n  String author_member_id FK\n  String category_id FK\n  String title\n  String body\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"discussionboard_post_category\" {\n  String id PK\n  String name UK\n  String description \"nullable\"\n}\n\"discussionboard_post_tag\" {\n  String id PK\n  String name UK\n}\n\"discussionboard_post_attachment\" {\n  String id PK\n  String post_id FK\n  String(80000) file_url\n  String file_type\n  DateTime uploaded_at\n}\n\"discussionboard_post\" }o--|| \"discussionboard_post_category\" : category\n\"discussionboard_post_attachment\" }o--|| \"discussionboard_post\" : post\n```\n\n### `discussionboard_post`\n\n[Discussion Posts] - Implements Sections 3.2 (Creating & Managing Posts) and 3.1 (User Registration & Authentication) as detailed in the requirements (02_discussionboard_functional_requirements.md).\n\nStores the main discussion board contributions (posts), tracking author, category, creation/edit timestamps, and supports soft deletion. Ensures strict 3NF: posts do not contain redundant author or category data, referencing normalized member and category tables instead. Usage example: a post about economic policy references its author (member) and its category (e.g., 'Economics') without duplicating user/category info.\n\nKey relationships: discussionboard_member (author), discussionboard_post_category (category), attachments, tags, etc. Special behaviors: soft-delete is tracked via deleted_at; author/category FKs are required and not nullable.\n\nProperties as follows:\n\n- `id`: [Primary Key] - Unique identifier for each post as mandated for atomic access and historical auditing (Section 3.2).\n- `author_member_id`: [Author Member FK] - References the member authoring the post (see Section 3.2 in requirements). Maintains normalization by only referencing the member, not duplicating member data. E.g., used for showing all posts by a member.\n- `category_id`: [Category FK] - Associates post with a category (Section 3.2). Provides link to normalized category without duplication of data. E.g., 'Politics' or 'Economics'.\n- `title`: [Post Title] - Implements discussion title per Section 3.2. Used for search/listings. Always non-null, atomic text.\n- `body`: [Post Content Body] - Main text body, supports formatting. Fully normalized; not nullable.\n- `created_at`: [Creation Timestamp] - Records when the post was made (Section 3.2, 3.9).\n- `updated_at`: [Update Timestamp] - Last time this post was edited (Section 3.2). Used for audit/versioning display.\n- `deleted_at`: [Deleted Timestamp] - Soft-deletion timestamp if post is hidden/deleted by member or moderator. Nullable if not deleted.\n\n### `discussionboard_post_category`\n\n[Discussion Post Categories] - Implements Section 3.2 and 3.6 (Admin). Categories like 'Politics' or 'Economics'—referenced by posts, maintained separately for normalization. Usage: admins manage categories; posts always reference a category. Special: cannot delete if referenced by a post.\n\nProperties as follows:\n\n- `id`: [Primary Key] - Uniquely identifies category; normalization ensures only atomic references used.\n- `name`: [Category Name] - Per Section 3.2; e.g., 'Economics'. Used for filters/views. Unique and non-null.\n- `description`: [Category Description] - Extended human-readable info for admin/member UIs. Optional, normalized.\n\n### `discussionboard_post_tag`\n\n[Discussion Post Tags] - Implements tagging per Section 3.2 to enable content filtering/search without denormalization. Each tag is stored atomically and referenced by M:N join (not included here). E.g., post tagged 'inflation'. Usage: tag table ensures uniqueness; pure key-name pairs only.\n\nProperties as follows:\n\n- `id`: [Primary Key] - Unique atomic tag identity.\n- `name`: [Tag Name] - Required label, e.g. 'inflation'. Uniqueness enforced; normalized/atomic.\n\n### `discussionboard_post_attachment`\n\n[Post Attachments] - Implements file/image management for posts (Section 3.2). Each attachment references one post, with file URL/type metadata. Maintains normalization with atomic URI/type; all files managed outside main post record; supports cascading delete on post removal.\n\nProperties as follows:\n\n- `id`: [Primary Key] - Unique attachment identity for tracking and referencing.\n- `post_id`: [Post FK] - Attachment's parent post (Section 3.2). Referenced (not duplicated) for strict normalization. Cascades on post delete.\n- `file_url`: [Attachment File URL] - Atomic URI (e.g., https://cdn.site/file.jpg). Required.\n- `file_type`: [Attachment MIME Type] - e.g. 'image/jpeg'. Required; normalized for filters.\n- `uploaded_at`: [Upload Timestamp] - Required point-in-time, supporting audit and ordering.\n\n## Comments\n\n```mermaid\nerDiagram\n\"discussionboard_comments\" {\n  String id PK\n  String post_id FK\n  String author_id FK\n  String parent_comment_id FK \"nullable\"\n  String content\n  Boolean is_edited\n  Boolean is_deleted\n  DateTime created_at\n  DateTime updated_at\n}\n\"discussionboard_comments\" }o--o| \"discussionboard_comments\" : parent_comment\n```\n\n### `discussionboard_comments`\n\n[Comment Model] - This implements the comment functionality as outlined under functional requirements (sections 3.3, 3.4, 3.5) and supports threaded/nested comments for both 'Politics' and 'Economics' board categories. \n\nAllows users to participate in ongoing discussions by adding, editing, and deleting their own comments, with support for threaded conversations, reporting, moderation, and in-line engagement (likes). Maintains 3NF by separating this entity from users, posts, likes, and reports. For example, a user can comment on a post, reply to other comments (recursively), and have their comment moderated or reported independently. \n\nKey relationships: Links to posts, users (authors), and parent comment (if threaded). Supports foreign keys to reporting, moderation, and liking mechanisms in other models.\nSpecial behaviors: Enforces only one parent per comment for tree structure, supports soft deletion, and maintains a precise audit trail without any pre-calculated metrics.\n\nProperties as follows:\n\n- `id`\n  > [Comment Primary Key] - Implements the unique identification (see 3NF and requirements mapping).\n  >\n  > Globally unique identifier for each comment. Ensures 1NF uniqueness, enables precise referencing, and guarantees auditability and traceability across threads and moderation actions.\n- `post_id`\n  > [Foreign Key: Post] - Implements the post-comment linkage as per requirement 3.3.\n  >\n  > Associates each comment with its parent post (mandatory). Ensures 2NF by linking to the full post entity, not duplicating post info. For example, when displaying a comment, the app can show the related post's category or title.\n- `author_id`\n  > [Foreign Key: Author] - Implements comment authorship per requirements 3.3, 3.4.\n  >\n  > Links the comment directly to its user (author). Maintains normalization by not storing author details redundantly; user details are referenced via foreign key.\n- `parent_comment_id`\n  > [Foreign Key: Parent Comment] - Supports threaded/reply comments as per 3.3.\n  >\n  > Self-referential link for comment thread nesting (optional; null for root-level comments). Maintains normalization by linking only to one parent, supporting recursive conversation trees without redundancy.\n- `content`\n  > [Comment Content] - Implements actual user message storage per requirement 3.3.\n  >\n  > Holds the content/message of the comment. Ensures normalization by storing only the user's entry, not derived or precomputed data. For example, users can edit this field within role constraints. No denormalized summary or rendering is stored in regular tables.\n- `is_edited`\n  > [Edit Tracking Flag] - Supports edit-audit functionality per requirement 3.3 (editing own comments).\n  >\n  > Boolean indicating whether comment content has been modified since creation. Ensures normalization by storing only atomic edit status; edit history belongs in a separate snapshot/audit table if needed.\n- `is_deleted`\n  > [Soft Delete Flag] - Enables reversible deletion per 3.3 and moderation (3.5).\n  >\n  > Flags comments as deleted (soft) without actual removal from database. Supports auditability and role-based recovery, ensuring no information loss for moderation history.\n- `created_at`\n  > [Creation Timestamp] - Records when the comment was posted (requirements 3.3, 3.9).\n  >\n  > Stores creation time of the comment. Ensures normalization as an atomic, non-derived value, and provides audit trail foundation.\n- `updated_at`\n  > [Last Update Timestamp] - Tracks edits, moderation actions as in 3.3, 3.5, 3.9.\n  >\n  > Records latest update timestamp (edit, moderation, recovery, etc). Maintains audit and traceability without derived/polyglot aggregates.\n\n## Interaction\n\n```mermaid\nerDiagram\n\"discussionboard_likes\" {\n  String id PK\n  String user_id FK\n  String post_id FK \"nullable\"\n  String comment_id FK \"nullable\"\n  DateTime created_at\n  DateTime deleted_at \"nullable\"\n}\n\"discussionboard_reports\" {\n  String id PK\n  String user_id FK\n  String post_id FK \"nullable\"\n  String comment_id FK \"nullable\"\n  String reason_code\n  String reason_details \"nullable\"\n  DateTime created_at\n  DateTime deleted_at \"nullable\"\n}\n```\n\n### `discussionboard_likes`\n\nUser Content Like - This implements the user engagement and interaction requirements (see sections 3.4 and 3.8 of the requirements analysis).\n\nEnables the platform’s core like/voting system, allowing users to like posts or comments once, supporting quantifiable content popularity and user involvement. Maintains strict 3NF normalization by separating atomic like events, with no aggregate/calculated fields present. For example, when a user clicks 'like' on a post, a record is created here, which can later be used for denormalized like counts in mv_ tables only.\n\nKey relationships: references to both posts and comments for polymorphic liking, user reference, and indexes support multi-content type lookups.\nSpecial behaviors: Uniqueness enforced so a user may only like a given post OR comment once, but not both at once (polymorphic uniqueness). All deletions are soft-deletes for audit/compliant removal tracking.\n\nProperties as follows:\n\n- `id`: Primary Key - Implements entity uniqueness. Each like interaction is uniquely identified for precise auditing and event tracking.\n- `user_id`: User Foreign Key - Implements user traceability for interaction, mapping to discussionboard_user. Ensures which member created this like. For example, required when listing personal likes. Not nullable/required.\n- `post_id`: Polymorphic Foreign Key: Post - Implements which post the like is attached to (where applicable), mapping to discussionboard_post. NULL if the like is for a comment. Enforces atomic association. For example, a user clicking like on a post will set this field. Nullable for polymorphism.\n- `comment_id`: Polymorphic Foreign Key: Comment - Implements comment interaction scope, mapping to discussionboard_comments. NULL if the like is for a post. For example, liking a comment sets this field. Supports normalization and polymorphic association.\n- `created_at`: Creation Timestamp - Implements requirement for auditable, timestamped actions. When the like event was created. Ensures atomicity by being non-null and standard across events.\n- `deleted_at`: Soft-delete Timestamp - Enables reversible removal of like event in compliance with audit logging. Null if like is active, set if removed. Maintains normalization; never used as a logical indicator, only as an event timestamp.\n\n### `discussionboard_reports`\n\nUser Content Report - This implements abuse/spam reporting requirements from sections 3.4, 3.5, 3.6, and 3.9.\n\nAllows users to report specific posts or comments for guideline violations, abuse, or spam. Maintains 3NF normalization by capturing only atomic reporting events (no report counts or summaries in table). For example, when a user flags a comment or post for review, a record is created here, with reason captured, for review by moderators/admins via reporting tools.\n\nKey relationships: references user (reporter), post (or comment), and enables polymorphic targeting of reports. Moderation actions are maintained elsewhere. Enforces business rules for no duplicate reports from the same user for the same content and logs reporting context for trace/audit.\nSpecial behaviors: Uniqueness constraints prevent double-reporting by same user per content type. Deletions are soft-deletes for compliance and history retention.\n\nProperties as follows:\n\n- `id`: Primary Key - Uniquely identifies each report for compliance, auditing, moderation, and traceability.\n- `user_id`: Reporter Foreign Key - References the user (from discussionboard_user) who submitted the report. Maintains accountability and supports user-based moderation analytics. Not nullable; always required.\n- `post_id`: Polymorphic Foreign Key: Post - Identifies the post that is being reported (if applicable). NULL if report targets a comment. Ensures correct, strictly normalized associativity, and prevents overlap with comment_id.\n- `comment_id`: Polymorphic Foreign Key: Comment - Identifies the comment being reported (if any). NULL if post is targeted. Supports polymorphic reporting of both content types. Enforces correct normalization.\n- `reason_code`: Short Reason Code - Implements requirements for capturing structured event context (e.g. 'spam', 'abuse', 'off-topic'). Enables filtering and workflow logic. Follows a pre-set value list handled in application/business logic. 3NF maintained as reason text is never duplicated (codes only here).\n- `reason_details`: Detailed Reason (optional) - Implements reporting context capture for case auditing, moderation analytics, and transparency. Allows user to enter details or evidence. Nullable for cases where only the code is needed.\n- `created_at`: Report Creation Timestamp - Indicates when the report was made. Implements audit trail (requirement: 3.9 and moderation review within 24hr SLA). Non-null, ensures each report is audited with precise event time.\n- `deleted_at`: Soft-delete Timestamp - Enables soft-removal (not physical deletion) of reports for moderation or review compliance. Null if active, non-null when deleted. Ensures normalization and auditable workflow.\n\n## Moderation\n\n```mermaid\nerDiagram\n\"discussionboard_moderation_action\" {\n  String id PK\n  String actor_id FK\n  String target_user_id FK\n  String post_id FK \"nullable\"\n  String comment_id FK \"nullable\"\n  String action_type\n  String reason\n  DateTime created_at\n}\n\"discussionboard_report_review\" {\n  String id PK\n  String report_id FK,UK\n  String reviewer_id FK\n  String post_id FK \"nullable\"\n  String comment_id FK \"nullable\"\n  String review_status\n  String moderator_comment \"nullable\"\n  DateTime reviewed_at\n}\n\"discussionboard_warning\" {\n  String id PK\n  String issued_by_id FK\n  String issued_to_id FK\n  String post_id FK \"nullable\"\n  String comment_id FK \"nullable\"\n  String warning_type\n  String message\n  DateTime issued_at\n}\n\"discussionboard_ban\" {\n  String id PK\n  String banned_user_id FK\n  String banned_by_id FK\n  String warning_id FK \"nullable\"\n  String ban_type\n  String reason\n  DateTime issued_at\n  DateTime expires_at \"nullable\"\n}\n\"discussionboard_ban\" }o--o| \"discussionboard_warning\" : related_warning\n```\n\n### `discussionboard_moderation_action`\n\n[Moderation Actions Log] - This implements the moderation action audit requirement from the requirements documentation (sections 02.3.5, 02.3.6, and 03).\nRecords every direct moderation activity such as hide, delete, warning issuance, and user muting/ban performed by moderators or admins. Maintains 3NF compliance by referencing target users, actions, posts, and comments instead of duplicating their data. For example, every time a moderator deletes a post or issues a warning, a new record is created here linking who did what, to which item, and why.\nKey relationships: links to moderator/admin (actor), target user, affected post/comment (if applicable).\nSpecial behaviors: strictly append-only (no updates); supports complete audit trail of moderation interventions.\n\nProperties as follows:\n\n- `id`: [Primary key] - Standard internal identifier. Uniquely identifies each moderation action; ensures atomic representation of each occurrence.\n- `actor_id`: [Action originator] - Implements the 'who performed the action' requirement. References the moderator or admin user account executing the moderation. Ensures normalization by linking to user, not duplicating actor data. For example, when moderator #1234 deletes a comment, this field is #1234.\n- `target_user_id`: [User targeted] - Fulfills the 'target of moderation' tracking requirement. Links to the affected user account (e.g., reported member). Ensures single source of truth for user data and enables traceability. For example, for a ban of user X, this references user X.\n- `post_id`: [Affected post] - Implements moderation linkage for post-level actions. References the post if this action affects a specific post. Normalization preserved (nullable, as not all actions are post-related). For example, deleting a post links here; issuing a ban does not.\n- `comment_id`: [Affected comment] - Moderation linkage to comment. References the comment if the action is on a specific comment. Kept nullable to preserve 3NF and flexibility. For example, hiding a comment references its id here.\n- `action_type`: [Action type] - Implements requirement to enumerate distinct moderation activities. Type of moderation: e.g., 'delete_post', 'hide_comment', etc. Maintains normalization.\n- `reason`: [Reason] - Fulfills rationale for moderation. Stores moderator/admin's reason/comment. Ensures accountability, searchable, used for appeals.\n- `created_at`: [Timestamp] - Implements time-based audit tracking. True creation time of the action record, guarantees traceability.\n\n### `discussionboard_report_review`\n\n[Report Review Log] - Implements requirements for moderation report review workflow (sections 02.3.4, 02.3.5, 03).\nTracks moderator or admin handling of user-submitted reports on posts/comments. Maintains 3NF by referencing report, reviewer, affected post/comment, and action taken. For example, when a moderator reviews a reported post and marks it as 'resolved,' a record is created here linking to all relevant entities.\nKey relationships: links to the report, reviewer, optionally post/comment.\nSpecial behaviors: append-only, supports full reporting workflow and audit.\n\nProperties as follows:\n\n- `id`: [Primary key] - Unique identifier for report reviews.\n- `report_id`: [The report being reviewed] - Links to a specific user report for moderation review.\n- `reviewer_id`: [Moderator/admin reviewer] - References user carrying out the review.\n- `post_id`: [Reviewed post] - Links reviewed post, nullable because not all reports are about posts.\n- `comment_id`: [Reviewed comment] - Links reviewed comment, nullable because not all reports are about comments.\n- `review_status`: [Outcome status] - Status for reviewed reports: e.g., 'resolved', 'rejected', 'pending'.\n- `moderator_comment`: [Review notes] - Optional comments from reviewer.\n- `reviewed_at`: [Review timestamp] - Auditable time of moderation review.\n\n### `discussionboard_warning`\n\n[Warnings Issued Log] - Implements moderator warning history per requirements (sections 02.3.5, 02.3.6, 03).\nStores warnings given by moderators/admins to users for guideline-violating behavior. Maintains 3NF by linking recipient, issuer, and optionally the relevant post/comment. For example, when a moderator issues a warning for an offensive comment, that instance is logged here.\nKey relationships: issued_by (moderator/admin), issued_to (target user), post/comment (context, nullable).\nSpecial behaviors: historical only (warnings are never updated, only issued).\n\nProperties as follows:\n\n- `id`: [Primary key] - Globally unique identifier of each warning.\n- `issued_by_id`: [Issuer] - Moderator/admin user issuing the warning.\n- `issued_to_id`: [Recipient] - User who receives the warning.\n- `post_id`: [Related post] - Cause for warning (optional, nullable).\n- `comment_id`: [Related comment] - Cause for warning (optional, nullable).\n- `warning_type`: [Type of warning] - Categorical reason: e.g., 'abuse', 'spam', etc.\n- `message`: [Moderator message] - Human-explained rationale.\n- `issued_at`: [Issue timestamp] - The date/time warning was given.\n\n### `discussionboard_ban`\n\n[User Ban Log] - This model realizes the user suspension/ban requirements (sections 02.3.5, 02.3.6, 03).\nRecords every instance of an account being banned or muted, whether temporarily or permanently, by moderator/admin decision. Maintains 3NF by relating only to ban actors and affected users, no calculated ban metrics.\nKey relationships: 'banned_by_id' (moderator/admin), 'banned_user_id' (target member), warning reference for context, no circular dependencies.\nSpecial behaviors: all bans are point-in-time records, may be queried for active status by expiry date.\n\nProperties as follows:\n\n- `id`: [Primary key] - Unique ban instance ID; ensures each ban/mute event is singular and traceable.\n- `banned_user_id`: [Banned user] - Who is subjected to the ban/mute, referencing the user entity.\n- `banned_by_id`: [Moderator/admin] - Initiating user performing the ban/mute.\n- `warning_id`: [Related warning] - Optionally reference a specific prior warning that resulted in the ban/mute.\n- `ban_type`: [Ban type] - Type category; e.g., 'mute', 'temp_ban', 'perm_ban', etc.\n- `reason`: [Ban reason] - Human-entered explanation for audit, traceability, and user appeals.\n- `issued_at`: [Ban start time] - When ban was placed.\n- `expires_at`: [Ban expiry] - When unban occurs (nullable for permanent bans).\n\n## Notification\n\n```mermaid\nerDiagram\n\"discussionboard_notification\" {\n  String id PK\n  String recipient_user_id FK\n  String related_post_id FK \"nullable\"\n  String related_comment_id FK \"nullable\"\n  String actor_user_id FK \"nullable\"\n  String type\n  String message\n  Boolean is_read\n  DateTime created_at\n}\n\"discussionboard_notification_preference\" {\n  String id PK\n  String user_id FK,UK\n  Boolean notify_reply\n  Boolean notify_like\n  Boolean notify_moderator_action\n  Boolean notify_system_message\n}\n```\n\n### `discussionboard_notification`\n\n[Notification delivery and history] - This implements the 'User Notifications' and system-triggered alert requirements from the functional requirements (Section 3.7).\n\nThis table records each notification sent to users (members, moderators, admins) regarding activity on posts, comments, moderator actions, and system events. Maintains full normalization (3NF) by storing atomic notification data and strictly referencing user and activity entities. For example, when a user receives a reply to their comment or a moderator action on their post, a new record is created here and references the relevant entities.\n\nKey relationships: References recipient user ([discussionboard_user](#discussionboard_user)), optional linkage to post ([discussionboard_post](#discussionboard_post)) or comment ([discussionboard_comments](#discussionboard_comments)), and moderator/admin actor when relevant. \nSpecial behaviors: Supports targeting individual users; system messages have nullable activity references. All user/system notifications are auditable. No denormalized or calculated fields.\n\nProperties as follows:\n\n- `id`: [Primary key] - Implements unique identification of each notification. Ensures atomic records. For example, used to reference or audit notification events.\n- `recipient_user_id`: [Notification recipient] - Implements which user receives the notification, mapped to requirements for personalized notifications. For example, used to display notifications on user dashboard. Normalization: ensures recipient is atomically referenced and avoids denormalization. REQUIRED.\n- `related_post_id`: [Related post] - Associates notification with a post if applicable (e.g., reply, like on post). Fully normalized by optional reference. For example, used when notifying about replies or moderation of a post.\n- `related_comment_id`: [Related comment] - Associates notification with a comment if applicable (e.g., reply to comment, moderation). Normalized as optional reference. For example, used for notifications about comment mentions.\n- `actor_user_id`: [Notification actor/user] - (Optional) The user who triggered this notification (e.g., who liked/commented, moderator/admin who performed action). If the event is system-triggered, this is null. For example, used for 'X replied to your post.' Ensures actor is atomically referenced, prevents denormalization.\n- `type`: [Notification type] - Classifies the type of notification in accordance with Section 3.7's events (e.g., 'reply', 'like', 'moderator_action', 'system_message', etc.). Fully normalized. For example, enables UI filtering and template selection. Constraint: limited to allowed notification types via application logic.\n- `message`: [Notification body] - Human-readable message content sent to user. Implements functional requirement for notifications to explain events. Maintains normalization by storing only atomic message text; templates and aggregation are managed elsewhere. For example, 'Alice replied to your post.'\n- `is_read`: [Read/unread flag] - Tracks whether the notification has been marked as read by the recipient, as required by notification preference and in-app UX. Normalized as a pure flag. For example, unread messages appear in notification dropdown. Constraint: only toggled by recipient.\n- `created_at`: [Notification creation time] - Implements audit and sorting requirements for notification recency. Ensures full normalization; atomic timestamp. For example, used to order notifications in UI and for cleanup logic.\n\n### `discussionboard_notification_preference`\n\n[User notification preferences] - Implements the notification preference system specified in requirements Section 3.7, giving users fine-grained control over what notifications they receive and how. All data is fully normalized.\n\nBusiness purpose: Enables per-user customization (mute, enable, push preference, etc.) for different notification types and channels. For example, a member might mute 'like' notifications but enable 'moderator_action' notifications on mobile.\n\nTechnical context: Direct link to each user ([discussionboard_user](#discussionboard_user)), with one row per user (enforced by a unique constraint). No denormalization.\n\nUsage example: Used when generating notifications or respecting user muting/settings for different event types.\n\nSpecial behaviors: All boolean flags, atomic, fully normalized. No computed columns.\n\nProperties as follows:\n\n- `id`: [Primary key] - Implements unique identification for each user's notification preference record. Normalized; required for foreign key relationships and referencing.\n- `user_id`\n  > [User owning preferences] - Implements one-to-one mapping from user to notification preferences, as required by the per-user customization use case. Fully normalized: enforced by unique constraint. For example, fetching preferences when user changes settings. Enforces referential integrity; on user deletion, preference row is cleaned up.\n  >\n  > Special behavior: unique per user.\n- `notify_reply`: [Reply notification toggle] - User's option to receive notifications about direct replies. Implements user preference granularity requirement. For example, if false, the user does not get reply-related notifications. Fully normalized, no calculation.\n- `notify_like`: [Like notification toggle] - User's choice to receive/not receive notifications when their post or comment is liked. Maintains normalization. Example: toggling off keeps the user from being notified for likes.\n- `notify_moderator_action`: [Moderator action notification toggle] - Implements ability for users to be alerted when a moderator acts on their content. Normalization ensured. For example, disables notifications for moderation unless true.\n- `notify_system_message`: [System message notification toggle] - Whether user receives platform-wide messages or announcements. Normalization ensured. For example, used for site policy change notifications.\n\n## Admin\n\n```mermaid\nerDiagram\n\"discussionboard_audit_log\" {\n  String id PK\n  String actor_user_id FK\n  String target_user_id FK \"nullable\"\n  String action_type\n  String entity_type\n  String entity_id \"nullable\"\n  String action_detail \"nullable\"\n  DateTime created_at\n}\n\"discussionboard_platform_setting\" {\n  String id PK\n  String name UK\n  String value\n  String type\n  DateTime updated_at\n}\n```\n\n### `discussionboard_audit_log`\n\n[Audit Logging for Sensitive Actions] - This implements the audit logging and traceability requirements from the user management and security sections, specifically from 'Audit Logging' in the User Roles & Permissions and 'Access & Security' in the Functional Requirements documents. \n\nAllows full traceability and accountability across admin and privileged actions (e.g., role changes, bans, moderation actions). Maintains full 3NF normalization by separating audit trail details from direct business data, storing only atomic data and foreign key references. For example, every time a ban is issued, or a user changes role, an entry is created here independently of the action's core data tables.\n\nKey relationships: references the user (actor) performing the action, the affected user (target), and provides linkage via entity_type/entity_id for polymorphic connections to the target business object. \nSpecial behaviors: Should be written only by internal privileged actions, not by user-driven business flows. Designed for audit and compliance reviews. No calculated fields, strictly normalized.\n\nProperties as follows:\n\n- `id`: [Primary Key] - Implements identity and uniqueness for each audit log entry. Fulfills the uniqueness requirement per audit record. Ensures normalization by enabling atomic audit entries. Always generated as a UUID.\n- `actor_user_id`: [Action Actor] - Implements the requirement to store the user responsible for each privileged action. Links to the user who performed the action. Ensures 3NF by storing only the user id as a reference; all other actor information must be joined as needed. For example, references the admin who issued a ban.\n- `target_user_id`: [Action Target] - Fulfills the requirement to capture who is affected by the action, if applicable (e.g., in bans, warnings, or demotions). Nullable for actions targeting system settings rather than specific users. Keeps direct reference only to target user id to stay normalized.\n- `action_type`: [Action Type] - Implements the action classification requirement. Business meaning: describes the category (e.g., 'ban', 'role_change', 'settings_update'). Ensures normalization by not encoding business logic; only keeps atomic values (string), never details or summaries.\n- `entity_type`: [Entity Type] - Implements the need for polymorphic audit trail. Records the type of entity affected (e.g., 'user', 'post', 'comment', 'setting'). Ensures 3NF by representing entity type as atomic data, not as a foreign key or denormalized structure.\n- `entity_id`: [Entity Reference] - Fulfills requirement to record which object was modified. Nullable for actions that do not target a specific entity. Ensures normalization by storing atomic reference only.\n- `action_detail`: [Action Detail] - Implements extensible context for audit records. Stores optional contextual details, such as old/new role in a role change. Ensures normalization by keeping these as atomic strings, not by embedding object graphs.\n- `created_at`: [Timestamp] - Implements audit trail requirement for time traceability. Business meaning: when the privileged action took place. Ensures normalization by using a single atomic datetime. Example: records ban date or role assignment time.\n\n### `discussionboard_platform_setting`\n\n[Platform Configuration Management] - This implements requirements for platform-wide admin-configurable settings, drawn from 'Administration' in both the overview and functional requirements documents (see Admin: Platform Configuration, and Functionality: Platform-wide Settings). \n\nSolves the business problem of enabling admin users to manage platform-wide booleans, options, and policies in a normalized way. \nMaintains 3NF by storing one setting per row, keyed by setting name, value, and type—never groups or arrays. For example, \"MaxPostAttachments\" or \"EnableModerationQueue\" are single atomic settings stored here.\n\nKey relationships: No foreign keys; settings are manipulated by admin flows only. \nSpecial behaviors: Names are unique; mutating a setting should update only the single normalized row. No pre-calculated values or summaries—strictly atomic and normalized.\n\nProperties as follows:\n\n- `id`: [Primary Key] - Unique identifier for each platform setting. 3NF compliance: prevents duplicate or ambiguous settings by row identity.\n- `name`: [Setting Name] - Implements the need to uniquely identify every platform setting. Should be a descriptive string (e.g., 'EnableModerationQueue'). Ensures normalization by not encoding arrays or objects, only simple strings.\n- `value`: [Setting Value] - Implements storing current configuration/data. Can hold any atomic value as string (booleans='true'/'false', numbers as string, etc.). Ensures 3NF by keeping each value atomic and not embedding larger config structures.\n- `type`: [Data Type Marker] - Fulfills the requirement to distinguish setting value interpretation (e.g., 'boolean', 'int', 'string'). Maintains normalization by storing type marker atomically. Example: allows parsing and validation at the application level.\n- `updated_at`: [Last Updated Timestamp] - Supports auditability for platform changes. Maintains normalization by using a single atomic datetime. For example, allows the system to show when moderation settings were last updated.\n",
      "diagrams": {
        "Core": "```mermaid\nerDiagram\n\"discussionboard_user\" {\n  String id PK\n  String email UK\n  String password_hash\n  Boolean is_active\n  DateTime created_at\n  DateTime updated_at\n}\n\"discussionboard_user_profile\" {\n  String id PK\n  String user_id FK,UK\n  String display_name\n  String(80000) avatar_url \"nullable\"\n  String bio \"nullable\"\n}\n\"discussionboard_member\" {\n  String id PK\n  String user_id FK,UK\n  DateTime granted_at\n}\n\"discussionboard_moderator\" {\n  String id PK\n  String user_id FK,UK\n  DateTime assigned_at\n}\n\"discussionboard_admin\" {\n  String id PK\n  String user_id FK,UK\n  DateTime assigned_at\n}\n\"discussionboard_user_profile\" |o--|| \"discussionboard_user\" : user_profile_user_id\n\"discussionboard_member\" |o--|| \"discussionboard_user\" : member_user_id\n\"discussionboard_moderator\" |o--|| \"discussionboard_user\" : moderator_user_id\n\"discussionboard_admin\" |o--|| \"discussionboard_user\" : admin_user_id\n```",
        "DiscussionBoard": "```mermaid\nerDiagram\n\"discussionboard_post\" {\n  String id PK\n  String author_member_id FK\n  String category_id FK\n  String title\n  String body\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"discussionboard_post_category\" {\n  String id PK\n  String name UK\n  String description \"nullable\"\n}\n\"discussionboard_post_tag\" {\n  String id PK\n  String name UK\n}\n\"discussionboard_post_attachment\" {\n  String id PK\n  String post_id FK\n  String(80000) file_url\n  String file_type\n  DateTime uploaded_at\n}\n\"discussionboard_post\" }o--|| \"discussionboard_post_category\" : category\n\"discussionboard_post_attachment\" }o--|| \"discussionboard_post\" : post\n```",
        "Comments": "```mermaid\nerDiagram\n\"discussionboard_comments\" {\n  String id PK\n  String post_id FK\n  String author_id FK\n  String parent_comment_id FK \"nullable\"\n  String content\n  Boolean is_edited\n  Boolean is_deleted\n  DateTime created_at\n  DateTime updated_at\n}\n\"discussionboard_comments\" }o--o| \"discussionboard_comments\" : parent_comment\n```",
        "Interaction": "```mermaid\nerDiagram\n\"discussionboard_likes\" {\n  String id PK\n  String user_id FK\n  String post_id FK \"nullable\"\n  String comment_id FK \"nullable\"\n  DateTime created_at\n  DateTime deleted_at \"nullable\"\n}\n\"discussionboard_reports\" {\n  String id PK\n  String user_id FK\n  String post_id FK \"nullable\"\n  String comment_id FK \"nullable\"\n  String reason_code\n  String reason_details \"nullable\"\n  DateTime created_at\n  DateTime deleted_at \"nullable\"\n}\n```",
        "Moderation": "```mermaid\nerDiagram\n\"discussionboard_moderation_action\" {\n  String id PK\n  String actor_id FK\n  String target_user_id FK\n  String post_id FK \"nullable\"\n  String comment_id FK \"nullable\"\n  String action_type\n  String reason\n  DateTime created_at\n}\n\"discussionboard_report_review\" {\n  String id PK\n  String report_id FK,UK\n  String reviewer_id FK\n  String post_id FK \"nullable\"\n  String comment_id FK \"nullable\"\n  String review_status\n  String moderator_comment \"nullable\"\n  DateTime reviewed_at\n}\n\"discussionboard_warning\" {\n  String id PK\n  String issued_by_id FK\n  String issued_to_id FK\n  String post_id FK \"nullable\"\n  String comment_id FK \"nullable\"\n  String warning_type\n  String message\n  DateTime issued_at\n}\n\"discussionboard_ban\" {\n  String id PK\n  String banned_user_id FK\n  String banned_by_id FK\n  String warning_id FK \"nullable\"\n  String ban_type\n  String reason\n  DateTime issued_at\n  DateTime expires_at \"nullable\"\n}\n\"discussionboard_ban\" }o--o| \"discussionboard_warning\" : related_warning\n```",
        "Notification": "```mermaid\nerDiagram\n\"discussionboard_notification\" {\n  String id PK\n  String recipient_user_id FK\n  String related_post_id FK \"nullable\"\n  String related_comment_id FK \"nullable\"\n  String actor_user_id FK \"nullable\"\n  String type\n  String message\n  Boolean is_read\n  DateTime created_at\n}\n\"discussionboard_notification_preference\" {\n  String id PK\n  String user_id FK,UK\n  Boolean notify_reply\n  Boolean notify_like\n  Boolean notify_moderator_action\n  Boolean notify_system_message\n}\n```",
        "Admin": "```mermaid\nerDiagram\n\"discussionboard_audit_log\" {\n  String id PK\n  String actor_user_id FK\n  String target_user_id FK \"nullable\"\n  String action_type\n  String entity_type\n  String entity_id \"nullable\"\n  String action_detail \"nullable\"\n  DateTime created_at\n}\n\"discussionboard_platform_setting\" {\n  String id PK\n  String name UK\n  String value\n  String type\n  DateTime updated_at\n}\n```"
      }
    },
    "step": 0
  }
]