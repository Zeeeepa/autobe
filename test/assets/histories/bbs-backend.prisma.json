[
  {
    "id": "b51adde4-9e1e-4412-9641-df0869e3ab12",
    "type": "userMessage",
    "contents": [
      {
        "type": "text",
        "text": "I want to create a political/economic discussion board. Since I'm not familiar with programming, please write a requirements analysis report as you see fit. The report should be approximately 3 pages long.\n"
      }
    ],
    "created_at": "2025-06-09T05:49:50.474Z"
  },
  {
    "id": "bdaadd2d-9fed-4d06-9e7b-f27c5c69b4cc",
    "type": "userMessage",
    "contents": [
      {
        "type": "text",
        "text": "I want to create a political/economic discussion board. Since I'm not familiar with programming, please write a requirements analysis report as you see fit. The report should be approximately 3 pages long.\n"
      }
    ],
    "created_at": "2025-07-11T07:22:35.254Z"
  },
  {
    "id": "70f4748a-d815-4a94-8b21-81b841ef6046",
    "type": "analyze",
    "reason": "The user has requested a requirements analysis report for a political/economic discussion board, explicitly delegating the planning to us as they are not familiar with programming. Sufficient instruction has been given to draft a comprehensive three-page report on the system requirements and features.",
    "prefix": "discussion_board",
    "files": {
      "00_discussion_board_table_of_contents.md": "# Discussion Board Requirements Analysis Report\n\n## Table of Contents\n\n1. [Introduction & Objectives](./01_discussion_board_introduction_and_objectives.md)\n   - Purpose of the Document\n   - Project Goals\n   - Stakeholder Overview\n\n2. [Feature Requirements](./02_discussion_board_feature_requirements.md)\n   - Core Discussion Features\n   - User Types & Permissions\n   - Thread Management\n   - Moderation Functions\n   - Integration Points\n   - Accessibility & UX Guidelines\n\n3. [Non-Functional & Operational Requirements](./03_discussion_board_nonfunctional_and_operational_requirements.md)\n   - System Performance\n   - Security & Privacy\n   - Scalability Plans\n   - Maintenance & Support\n   - Compliance & Audit\n\n---\n\nEach section in this Table of Contents is hyperlinked for seamless navigation. This index ensures readers are guided through the complete requirements analysis for the Discussion Board project. For more specifics on any section, click its title.",
      "01_discussion_board_introduction_and_objectives.md": "# Introduction and Objectives for the Political/Economic Discussion Board\n\n## 1. Overview\nThis document serves as the foundational guide for the design, development, and deployment of a political and economic discussion board platform. The intent is to establish a dynamic, inclusive, and reliable space where users can engage in meaningful discussions, share insights on current affairs, and foster critical analysis of political and economic issues. The board aims to bridge diverse perspectives, enhance public discourse, and support knowledge-based community building.\n\n## 2. Motivation\nWith increasing polarization and the rapid evolution of information streams, the need for an organized and credible forum dedicated to political and economic dialogue has become urgent. Existing platforms are often fragmented, suffer from moderation issues, or lack the nuanced tools needed to drive informed debate. Our platform is designed to mitigate these challenges by encouraging respectful, data-driven discussions while providing safeguards to ensure civil and constructive engagement.\n\n## 3. High-Level Goals\n- Foster informed discussions among users of varying backgrounds\n- Provide reliable features for content creation, moderation, and engagement\n- Safeguard user experience with strong moderation, privacy, and accessibility standards\n- Support the discoverability and archiving of high-quality contributions\n\n## 4. Vision Statement\nTo become the leading digital platform for political and economic discourse by nurturing a respectful, accessible, and informed community where diverse opinions coexist, and robust debates drive social and intellectual progress.\n\n## 5. User Roles and Stakeholder Analysis\n- **Regular Members**: Authenticated users who can post, comment, vote, report content, personalize feeds, and participate in debates. Their primary goals involve expressing opinions, learning from others, and civic engagement.\n- **Moderators**: Trusted community volunteers or staff empowered to edit/delete posts, issue warnings, suspend accounts, curate trending topics, and manage escalated conflicts. Motivation: sustain quality, address abuse, and preserve community values.\n- **Administrators**: Platform owners and decision-makers responsible for system configuration, user management, analytics, legal compliance, and feature rollout. Expect a robust backend, flexible policies, and actionable insights.\n- **Guests**: Unauthenticated users with limited access to view public discussions, trending topics, and basic search features. Goal: explore content, decide whether to join.\n- **External Stakeholders**: Advertisers, academic researchers, partners, legal authorities, and possibly civic organizations seeking aggregated data, compliance reports, or partnership integrations.\n\n## 6. Functional Requirements\n- **User Registration/Login**: Secure sign-up processes with support for email and social accounts. Password recovery and multi-factor authentication are supported.\n- **Posting and Commenting**: Rich-text post editor with support for links, images, and formatting. Threaded comments, reply-all, edit/delete within limits.\n- **Moderation Tools**: Content flagging/reporting, automated offensive language detection, manual review queues, post removal, and escalation workflows.\n- **Search & Filtering**: Robust search engine with filtering by date, topic, author, tag, and popularity.\n- **Notifications**: Real-time and scheduled notifications for replies, mentions, moderation actions, and topic subscriptions. Customizable user settings.\n- **User Profiles**: Public profiles with avatar, badges, post history, credibility metrics, and privacy controls.\n- **Topic Tagging & Categorization**: Structured taxonomy for organizing discussions by theme, geography, and event.\n- **Voting & Reactions**: Mechanisms for upvoting, downvoting, and expressing agreement/disagreement.\n- **Reporting Abuse**: Easy-to-use forms, anonymous reporting, and escalation tracking for serious violations.\n\n## 7. Non-Functional Requirements\n- **Performance**: Fast response times even under high load; optimized for both desktop and mobile devices.\n- **Security**: End-to-end encryption of sensitive user data; compliance with regional privacy laws (GDPR, CCPA); protection against common threats (XSS, CSRF, SPAM).\n- **Scalability**: Modular design allowing horizontal scaling and integration with cloud infrastructure.\n- **Accessibility**: Compliance with WCAG 2.1 standards; keyboard navigation and screen reader compatibility.\n- **Privacy & Legal**: Transparent data use policies, age restrictions, copyright protection, audit and removal tools for users.\n- **Ethical Standards**: Clear community guidelines; processes for appeal, restorative actions, and ethical curation.\n\n## 8. System Constraints and Assumptions\n- **Assumed Technology Stack**: No specific technologies mandated here, but platform expected to support cross-browser compatibility, responsive design, and modern authentication protocols.\n- **Hosting Constraints**: Cloud-based hosting with regular backups, uptime monitoring, and disaster recovery plans.\n- **Integration Requirements**: Potential integration points for external moderators, law enforcement requests, or academic data export, all subject to strict data protection controls.\n- **Limitations**: Reliance on automated moderation has well-understood accuracy limits; human oversight remains essential for nuanced cases.\n\n## 9. Success Metrics and Evaluation Criteria\n- **User Engagement**: Number of active users, frequency of posts, comments, and votes; growth in registered members over time.\n- **Content Quality**: Percentage of posts flagged, moderation queue clearance rates, upvote/downvote ratios, unique topic coverage.\n- **User Satisfaction**: Survey results, average platform rating, NPS (Net Promoter Score), retention rates.\n- **Safety and Compliance**: Incident response times, abuse report resolution rates, legal/ethical compliance satisfaction (measured via audits).\n- **Platform Stability**: Uptime statistics, mean time to recover from incidents, average load time, and support ticket closure rates.\n\n---\nThis comprehensive document defines the vision, goals, user landscape, and execution blueprint for launching and iterating a successful political and economic discussion board platform. It invites further input from all stakeholders as the project evolves.",
      "02_discussion_board_feature_requirements.md": "# Discussion Board Feature Requirements\n\n## Overview\nThis document specifies the core and advanced feature requirements for the discussion board service. It is structured to guide design, implementation, and validation, ensuring that end-user needs and business objectives are met. The features are derived from user personas, key use cases, and common patterns in collaboration platforms.\n\n## 1. User Roles and Permissions\n- **Guest**: Read-only access to public threads; cannot post or comment.\n- **Registered User**: Create, edit, or delete their own threads and comments; upvote, report content.\n- **Moderator**: Manage all threads and comments (edit, delete, pin, lock); respond to reports.\n- **Administrator**: Full access, including user management, board settings, analytics.\n\n## 2. Thread & Post Management\n- **Create Thread**: Users can start new discussion topics with a title and initial post.\n- **Edit/Delete Thread**: Thread authors or moderators can modify or remove threads.\n- **Pin/Lock Thread**: Moderators can promote or restrict activity on threads.\n\n## 3. Commenting & Reply\n- **Comment**: Users can add comments to threads and reply to specific comments.\n- **Edit/Delete Comment**: Comment authors or moderators can modify or remove comments.\n- **Threaded Replies**: Support for nested replies for clearer discussion.\n\n## 4. Content Interaction\n- **Upvote/Downvote**: Registered users can rate threads and comments; aggregated counts displayed.\n- **Report Inappropriate Content**: Ability to flag posts/comments for moderator review.\n- **Bookmark/Favorite**: Save threads for quick access in user profile.\n\n## 5. Navigation & Search\n- **Categories/Tags**: Organize threads by topic, filter by tags.\n- **Full-Text Search**: Search threads and comments using keywords.\n- **Sorting & Filtering**: Latest, most popular, unresolved, etc.\n\n## 6. Notifications & Subscriptions\n- **In-App Notifications**: Alerts for replies, mentions, moderator actions.\n- **Email Notifications**: Optional, for followed threads or direct mentions.\n- **Subscribe/Unsubscribe**: Users can manage which threads and tags they follow.\n\n## 7. User Profiles & Activity\n- **Profile Page**: Show user’s posts, comments, badges, upvote score.\n- **Edit Profile**: Change avatar, display name, bio, notification preferences.\n- **Activity Feed**: Summary of recent participations and received interactions.\n\n## 8. Administration & Moderation Tools\n- **Content Moderation Panel**: Review reported items, ban users, audit logs.\n- **Analytics Dashboard**: Key metrics: active users, thread statistics, trending topics.\n- **Custom Board Settings**: Configure categories, enable/disable features, set access control.\n\n## 9. Accessibility & Mobile Support\n- **Responsive UI**: Optimized for desktop and mobile use.\n- **Keyboard Navigation & Screen Reader Support**: Meet basic accessibility standards.\n\n## 10. Security & Privacy Features\n- **Spam Prevention**: CAPTCHA, rate limits on posting for new users.\n- **Data Privacy Controls**: User option to delete account/data.\n- **Audit Log**: Track moderator/admin actions on content.\n\n## Link to Related Documents\n- [Table of Contents](./00_discussion_board_table_of_contents.md)\n- [Introduction and Objectives](./01_discussion_board_introduction_and_objectives.md)\n- [Nonfunctional & Operational Requirements](./03_discussion_board_nonfunctional_and_operational_requirements.md)\n",
      "03_discussion_board_nonfunctional_and_operational_requirements.md": "# Discussion Board Non-Functional and Operational Requirements\n\n## 1. Usability & Accessibility\n\n**User Experience:**\n- Interface must be intuitive and support frictionless navigation on both desktop and mobile browsers.\n- Responsive design is mandatory, with touch-target sizes >44px and readable fonts.\n- Color contrast must meet WCAG 2.1 AA standards.\n- Tutorials, tooltips, and onboarding guides shall be provided for first-time users and moderators alike.\n\n**Accessibility Use Case:**\n> *Alice, a visually impaired user, routinely accesses discussion threads via screen reader software. All interactive elements must supply ARIA labels and logical tab order so Alice can easily participate in discussions.*\n\n## 2. Security\n\n**Authentication & Authorization:**\n- Enforce strong password policies (min 12 chars, complexity requirements).\n- Offer 2FA by TOTP and backup codes for all accounts, especially moderators/admins.\n- Password reset process requires email verification and risk-based challenge questions.\n\n**Data Protection:**\n- All in-transit data encrypted via TLS 1.3+, with periodic review of certs.\n- PII stored at rest must be encrypted with monitored access logs.\n\n**Breach Protocol Example:**\n> *Upon suspected credential breach, all affected sessions are force-expired, users notified, and admins required to reset credentials. Audit logs facilitate forensic tracing.*\n\n## 3. Moderation & Abuse Prevention\n\n**Automated & Manual Controls:**\n- Real-time abuse filters flag suspected spam, slurs, or off-topic posts.\n- Escalation workflow for moderators to quickly review flagged content.\n- Role-based access restricts administrative actions, all with audit trailing.\n\n**Scenario:**\n> *If a heated debate escalates, multiple users report abusive messages. The system instantly hides these posts pending moderator review and notifies admins—ensuring community standards are safely maintained.*\n\n**Metric Target:**\n- 95% of abuse reports responded to within 1 hour.\n\n## 4. Performance & Scalability\n\n- P99 page load time <1.5s for up to 10,000 concurrent users.\n- System designed for horizontal scaling; supports 2x traffic spikes during major political events.\n- Rate limits (e.g., 10 posts/min per user) to ensure fair usage and prevent system overload.\n\n**Stress Scenario:**\n> *On election night, user traffic spikes 300%. Auto-scaling infrastructure adds resources, and all interaction remains within performance SLAs.*\n\n**Key Metric Table:**\n| Metric                | Target      |\n|----------------------|-------------|\n| Max Users Online     | 10,000+     |\n| P99 Load Time        | <1.5s       |\n| Abuse Response Time  | <1 hour     |\n\n## 5. Maintainability & Extensibility\n\n- Modular codebase allows roll-out of new features (e.g., polls, tagging) with minimal downtime.\n- All changes peer-reviewed via staging environments and automatic regression testing.\n- APIs documented for future mobile/native integrations.\n\n**Scenario:**\n> *A new emoji reaction feature is developed and rolled out in A/B tests. No downtime or existing feature regression is observed.*\n\n## 6. Compliance & Privacy\n\n- GDPR and local equivalents (e.g., Korea’s Personal Information Protection Act) upheld.\n- Consent dialogs for cookies, data export, and account removal built-in.\n- Annual external audit of privacy practices and access logs.\n\n**Scenario:**\n> *A user requests a copy of their data; the system generates export within 24h, confirming compliance.*\n\n## 7. Disaster Recovery & Backups\n\n- Full database and asset backup every 12 hours, incremental every 1 hour.\n- Geo-redundant offsite copies maintained, with quarterly restore drills.\n- Recovery point objective (RPO): 1 hour; Recovery time objective (RTO): 4 hours.\n\n## 8. Monitoring & Analytics\n\n- Central dashboards display real-time metrics: traffic levels, abuse trends, error rates.\n- 24/7 system alerting for outages and abuse surges.\n- Analytics track unique users, retention, and content/reporting patterns.\n\n## 9. Feature Requirements Overview (Summary)\n\n*For detailed feature requirements, see [02_discussion_board_feature_requirements.md]. Key feature areas include:*\n- Threaded discussions with upvoting/downvoting\n- Rich content support (text, images, links)\n- Persistent user profiles with reputation\n- Robust reporting and moderation workflows\n- Multi-platform accessibility\n- Real-time notifications\n\n---\n\n**Is there anything else to refine or clarify in this document?**"
    },
    "step": 0,
    "created_at": "2025-07-11T07:22:36.677Z",
    "completed_at": "2025-07-11T07:24:51.782Z"
  },
  {
    "type": "prisma",
    "id": "ce2a74e0-e0b0-4c77-8671-0362784a93f3",
    "created_at": "2025-07-11T07:59:02.585Z",
    "completed_at": "2025-07-11T08:07:05.634Z",
    "reason": "Step to the Prisma DB schema generation after requirements analysis",
    "description": "",
    "result": {
      "success": true,
      "data": {
        "files": [
          {
            "filename": "schema-01-core.prisma",
            "namespace": "Core",
            "models": [
              {
                "name": "discussion_board_users",
                "description": "User Accounts - This implements the requirement for individual user accounts, supporting registration, authentication, and all user-related auditability. \n\nProvides foundational user representation for all feature requirements involving user actions (posts, comments, votes, favorites, reports). Maintains full 3NF compliance by storing only atomic user identity attributes, with all other aspects normalized into related tables. For example, user display data and settings are not stored here but in dedicated profile/settings tables.\n\nKey relationships: Connects to {@link discussion_board_user_profiles}, {@link discussion_board_user_settings}, thread/posts/comments. \nSpecial behaviors: Uniqueness enforced on email/username; supports audit trails without calculated fields.",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "description": "Primary Key - Implements unique identification per user. \nEnsures 1NF and 3NF by uniquely identifying each user record. All business relationships and entity references use this UUID.\nFor example, a user's posts or profile will reference this id.",
                  "isId": true
                },
                "foreignFields": [],
                "plainFields": [
                  {
                    "name": "username",
                    "type": "string",
                    "required": true,
                    "nullable": false,
                    "description": "Username - Implements unique, human-friendly identifier for sign-in and public presence. Satisfies requirement for user authentication and personalized identifiers. \nMaintains 3NF by storing as atomic value; not duplicated elsewhere. For example, used to mention users in threads."
                  },
                  {
                    "name": "email",
                    "type": "string",
                    "required": true,
                    "nullable": false,
                    "description": "Email - Implements unique login credential and notification address, required for registration, password recovery, and business operations involving communication. \nEnsures 3NF and security compliance by isolating PII to core user record. Format validated as email. For example, delivery of account recovery links or notifications."
                  },
                  {
                    "name": "password_hash",
                    "type": "string",
                    "required": true,
                    "nullable": false,
                    "description": "Password Hash - Implements security requirements for credential storage. \nContains only the securely hashed password, never the raw value. Maintains 3NF by being strictly an atomic credential. For example, used on authentication attempt checks."
                  },
                  {
                    "name": "is_active",
                    "type": "boolean",
                    "required": true,
                    "nullable": false,
                    "description": "Active Flag - Supports account enable/disable flow as required by admin/moderation policies. \nMaintains normalization (3NF) by not encoding user status elsewhere. For example, a suspended user is marked inactive here."
                  },
                  {
                    "name": "created_at",
                    "type": "datetime",
                    "required": true,
                    "nullable": false,
                    "description": "Created Timestamp - Represents the time of user registration. Implements requirement for audit trail and account lifecycle analysis. \nAtomic, non-calculated field in strict 3NF. Example: find all accounts registered in a given period."
                  },
                  {
                    "name": "updated_at",
                    "type": "datetime",
                    "required": true,
                    "nullable": false,
                    "description": "Last Updated Timestamp - Tracks last mutation of user record (e.g., profile update, password change). \nFulfills audit, compliance, and operational needs. Normalized, atomic. Used for detecting recently changed accounts."
                  },
                  {
                    "name": "deleted_at",
                    "type": "datetime",
                    "required": false,
                    "nullable": true,
                    "description": "Soft Delete Timestamp - Implements requirement for recoverable account deletion. \nNullable. When set, the user is logically deleted for compliance or user-right-to-be-forgotten scenarios. No denormalization."
                  }
                ],
                "uniqueIndexes": [
                  {
                    "fields": [
                      "username"
                    ],
                    "fieldNames": [
                      "username"
                    ],
                    "description": "Unique Username Index - Ensures all usernames are distinct as mandated by feature and security requirements.",
                    "unique": true
                  },
                  {
                    "fields": [
                      "email"
                    ],
                    "fieldNames": [
                      "email"
                    ],
                    "description": "Unique Email Index - Guarantees no duplicate accounts by email, supporting authentication and account recovery.",
                    "unique": true
                  }
                ],
                "plainIndexes": [],
                "ginIndexes": []
              },
              {
                "name": "discussion_board_guests",
                "description": "Guest Access Logs - Implements the requirement to record unauthenticated/guest accesses per compliance and analytics goals. \nStores only atomic guest event records; does not duplicate user account data. Maintains 3NF: each row is a simple access instance, not historical aggregation.\nKey relationships: No foreign keys to the users table; all-inbound guest access.\nSpecial behaviors: Used only for analytic/compliance reporting; not authentication.",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "description": "Primary Key - Uniquely identifies a guest log record. 1NF and 3NF by strict atomic reference.",
                  "isId": true
                },
                "foreignFields": [],
                "plainFields": [
                  {
                    "name": "session_id",
                    "type": "string",
                    "required": true,
                    "nullable": false,
                    "description": "Session Identifier - Supports tracking unique anonymous accesses (session cookies or device id). Implements analytics requirements for guest activity. 3NF by atomicity. Example: Counting unique guests per day."
                  },
                  {
                    "name": "ip_address",
                    "type": "string",
                    "required": true,
                    "nullable": false,
                    "description": "IP Address - Logs guest's origin IP for compliance, abuse tracking, and analytics. 3NF compliance; not duplicated elsewhere. Ex: Used in abuse response."
                  },
                  {
                    "name": "user_agent",
                    "type": "string",
                    "required": false,
                    "nullable": true,
                    "description": "User Agent - Logs browser/device for guest session; optional for additional analytics. Stays atomic and complies with 3NF."
                  },
                  {
                    "name": "accessed_at",
                    "type": "datetime",
                    "required": true,
                    "nullable": false,
                    "description": "Timestamp of Access - Enforces audit requirements; strictly atomic. Usage: Analytics, abuse tracing, auditing guest surges."
                  }
                ],
                "uniqueIndexes": [],
                "plainIndexes": [
                  {
                    "fields": [
                      "accessed_at"
                    ],
                    "fieldNames": [
                      "accessed_at"
                    ],
                    "description": "Access Timestamp Index - Speeds up scans/reporting based on access period, per analytics requirement."
                  }
                ],
                "ginIndexes": []
              },
              {
                "name": "discussion_board_moderators",
                "description": "Moderator Roles - This model implements the requirement for moderator user assignment, privilege tracking, and role audit. \nRepresents the logical bridge between core user record and their moderator status, maintaining 3NF by not duplicating user identity or other profile information. For example, a user is assigned moderator status by being present in this table.\nKey relationships: FK to {@link discussion_board_users}, logs all who have or have had moderator role.\nSpecial behaviors: Historical tracking (active, demoted) possible without denormalization.",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "description": "Primary Key - Unique per moderator assignment record; strictly atomic and 3NF.",
                  "isId": true
                },
                "foreignFields": [
                  {
                    "name": "user_id",
                    "type": "uuid",
                    "target": "discussion_board_users",
                    "relation": {
                      "type": "foreignKey",
                      "targetModel": "discussion_board_users",
                      "targetField": "id",
                      "name": "fk_discussion_board_moderators_user_id_discussion_board_users_id"
                    },
                    "required": true,
                    "unique": true,
                    "nullable": false,
                    "description": "Foreign Key to User - Indicates which user is/was assigned as a moderator. Enforces role membership as normalized, not duplicated data. Enforced 1:N relationship: one user can have zero or one moderator assignments."
                  }
                ],
                "plainFields": [
                  {
                    "name": "is_active",
                    "type": "boolean",
                    "required": true,
                    "nullable": false,
                    "description": "Moderator Active Flag - Indicates whether the user currently holds moderator privileges. Implements requirement for role suspension, auditing role status history. Maintains normalization by not storing redundant role data elsewhere."
                  },
                  {
                    "name": "assigned_at",
                    "type": "datetime",
                    "required": true,
                    "nullable": false,
                    "description": "Timestamp of Role Assignment - Tracks when user was assigned moderator role. 3NF: pure atomic audit value."
                  },
                  {
                    "name": "revoked_at",
                    "type": "datetime",
                    "required": false,
                    "nullable": true,
                    "description": "Timestamp of Role Revocation - Implements tracking for demoted/expired moderator roles, for compliance, audit, and operational review. Nullable, stays 3NF."
                  }
                ],
                "uniqueIndexes": [
                  {
                    "fields": [
                      "user_id"
                    ],
                    "fieldNames": [
                      "user_id"
                    ],
                    "description": "Unique Moderator per User - Ensures a user cannot be assigned moderator role more than once at a time, as per business policy.",
                    "unique": true
                  }
                ],
                "plainIndexes": [
                  {
                    "fields": [
                      "is_active"
                    ],
                    "fieldNames": [
                      "is_active"
                    ],
                    "description": "Moderator Status Index - Optimizes pending moderation queries, enables active/inactive moderator filtering."
                  }
                ],
                "ginIndexes": []
              },
              {
                "name": "discussion_board_admins",
                "description": "Administrator Roles - Implements explicit administrator account linkage for full-system privileges, as required for configuration, user management, and audit purposes. 3NF: role assignment not duplicating user record.\n\nKey relationships: Links to {@link discussion_board_users} (user account), supports operational distinction between admins and other roles.\nSpecial behaviors: Admin privileges conferred strictly by row existence, supporting audit via assigned_at/revoked_at.",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "description": "Primary Key - Unique per admin record, ensures atomic audit trail of admin privilege granting/revoking.",
                  "isId": true
                },
                "foreignFields": [
                  {
                    "name": "user_id",
                    "type": "uuid",
                    "target": "discussion_board_users",
                    "relation": {
                      "type": "foreignKey",
                      "targetModel": "discussion_board_users",
                      "targetField": "id",
                      "name": "fk_discussion_board_admins_user_id_discussion_board_users_id"
                    },
                    "required": true,
                    "unique": true,
                    "nullable": false,
                    "description": "User Foreign Key - The user granted admin privileges. Maintains normalization: admin status never duplicated in other tables."
                  }
                ],
                "plainFields": [
                  {
                    "name": "is_active",
                    "type": "boolean",
                    "required": true,
                    "nullable": false,
                    "description": "Admin Status Flag - States whether admin privileges currently apply. Implements requirement for manageability and operational security controls."
                  },
                  {
                    "name": "assigned_at",
                    "type": "datetime",
                    "required": true,
                    "nullable": false,
                    "description": "Grant Timestamp - When privileges were activated. Maintains 3NF: atomic, unambiguous role tracking."
                  },
                  {
                    "name": "revoked_at",
                    "type": "datetime",
                    "required": false,
                    "nullable": true,
                    "description": "Revoked Timestamp - Supports audit/review of former admins, and system security compliance. Nullable, no denormalized roll-ups."
                  }
                ],
                "uniqueIndexes": [
                  {
                    "fields": [
                      "user_id"
                    ],
                    "fieldNames": [
                      "user_id"
                    ],
                    "description": "Unique Admin per User - Guarantees a user cannot be admin in logical duplicate roles at once.",
                    "unique": true
                  }
                ],
                "plainIndexes": [
                  {
                    "fields": [
                      "is_active"
                    ],
                    "fieldNames": [
                      "is_active"
                    ],
                    "description": "Admin Status Index - Helps querying active/inactive admin users, for operational dashboards."
                  }
                ],
                "ginIndexes": []
              },
              {
                "name": "discussion_board_user_profiles",
                "description": "User Profiles - Implements the requirement for extended, public-facing user information, as distinct from credentials. \nSupports profile fields (display name, avatar, bio, badges) and community metrics, strictly normalized and not duplicating data from users or settings. 3NF guaranteed: one profile per user, no pre-computed/aggregated fields stored here. Ex: upvote totals in views only.\n\nKey relationships: FK to {@link discussion_board_users}, exactly one per user.\nSpecial behaviors: Updates do not affect credentials or privacy settings.",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "description": "Primary Key - Unique for each profile, used for linking profile data to user. Ensures record atomicity.",
                  "isId": true
                },
                "foreignFields": [
                  {
                    "name": "user_id",
                    "type": "uuid",
                    "target": "discussion_board_users",
                    "relation": {
                      "type": "foreignKey",
                      "targetModel": "discussion_board_users",
                      "targetField": "id",
                      "name": "fk_discussion_board_user_profiles_user_id_discussion_board_users_id"
                    },
                    "required": true,
                    "unique": true,
                    "nullable": false,
                    "description": "User Foreign Key - Connects profile data precisely to its user account. Enforces 1:1 user-profile mapping."
                  }
                ],
                "plainFields": [
                  {
                    "name": "display_name",
                    "type": "string",
                    "required": false,
                    "nullable": true,
                    "description": "Display Name - Optional, user-customizable nickname for display. 3NF atomic field; example: public boards may show only this."
                  },
                  {
                    "name": "avatar_url",
                    "type": "uri",
                    "required": false,
                    "nullable": true,
                    "description": "Avatar URI - Optional, image URL for profile picture. Maintains normalization; avatar is not stored in user, settings, or duplicated elsewhere."
                  },
                  {
                    "name": "bio",
                    "type": "string",
                    "required": false,
                    "nullable": true,
                    "description": "User Biography - Optional, free-form text for interests, expertise or statements. 3NF: non-aggregated, not used for computation."
                  },
                  {
                    "name": "badges",
                    "type": "string",
                    "required": false,
                    "nullable": true,
                    "description": "User Badges - Optional, serialized badge list. 3NF, atomic per user (badge aggregation handled in materialized views as needed). Example: Displaying earned badges."
                  }
                ],
                "uniqueIndexes": [
                  {
                    "fields": [
                      "user_id"
                    ],
                    "fieldNames": [
                      "user_id"
                    ],
                    "description": "Unique Profile per User - Ensures strict 1:1 mapping between user and user profile.",
                    "unique": true
                  }
                ],
                "plainIndexes": [],
                "ginIndexes": [
                  {
                    "fields": [
                      "display_name"
                    ],
                    "fieldName": "display_name",
                    "description": "Display Name GIN Index - Supports full-text fuzzy search on displayed user names."
                  },
                  {
                    "fields": [
                      "bio"
                    ],
                    "fieldName": "bio",
                    "description": "Profile Bio GIN Index - Enables full-text search/retrieval of user biography content."
                  }
                ]
              },
              {
                "name": "discussion_board_user_settings",
                "description": "User Settings - Implements private, user-specific preferences and configuration (notification opt-in, accessibility, display, etc.). Normalized to ensure no redundant storage in user, profile, or role tables. Purely atomic per preference field; no rollups or calculated values.\n\nKey relationships: FK to {@link discussion_board_users}, strictly 1:1 mapping.\nSpecial behaviors: Updating settings does not affect user credentials or profile.",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "description": "Primary Key - Single settings record per user. Guarantees atomic, normalized storage without data duplication.",
                  "isId": true
                },
                "foreignFields": [
                  {
                    "name": "user_id",
                    "type": "uuid",
                    "target": "discussion_board_users",
                    "relation": {
                      "type": "foreignKey",
                      "targetModel": "discussion_board_users",
                      "targetField": "id",
                      "name": "fk_discussion_board_user_settings_user_id_discussion_board_users_id"
                    },
                    "required": true,
                    "unique": true,
                    "nullable": false,
                    "description": "User Foreign Key - Connects each settings record uniquely to a user. Guarantees 1:1 mapping."
                  }
                ],
                "plainFields": [
                  {
                    "name": "notification_email",
                    "type": "boolean",
                    "required": true,
                    "nullable": false,
                    "description": "Email Notification Opt-in - Whether the user wants to receive email notifications. Implements a requirement for user controllable notification preferences; strictly atomic."
                  },
                  {
                    "name": "notification_in_app",
                    "type": "boolean",
                    "required": true,
                    "nullable": false,
                    "description": "In-app Notification Opt-in - User choice to receive in-app platform notifications. Normalized; no duplication."
                  },
                  {
                    "name": "accessibility_mode",
                    "type": "string",
                    "required": false,
                    "nullable": true,
                    "description": "Accessibility Mode Setting - User choice for accessibility features (e.g., 'high_contrast', 'screen_reader'). Null if default. 3NF, atomic setting for UI/UX compliance."
                  },
                  {
                    "name": "display_density",
                    "type": "string",
                    "required": false,
                    "nullable": true,
                    "description": "Display Density Setting - User preferences for compact or spacious UI layouts. Atomic and normalized."
                  }
                ],
                "uniqueIndexes": [
                  {
                    "fields": [
                      "user_id"
                    ],
                    "fieldNames": [
                      "user_id"
                    ],
                    "description": "Unique Settings per User - Ensures each user can only have a single settings profile.",
                    "unique": true
                  }
                ],
                "plainIndexes": [],
                "ginIndexes": []
              }
            ]
          },
          {
            "filename": "schema-02-discussion.prisma",
            "namespace": "Discussion",
            "models": [
              {
                "name": "discussion_board_thread",
                "description": "[Thread Entity] - Implements thread management and structure from requirements. Represents a single discussion topic (thread), allows users to initiate topics, and structures posts under a subject. Enforces 3NF by holding only atomic thread details, linking to user and category. No redundant or derived fields.\n- Key relationships: Created by discussion_board_user, assigned to discussion_board_thread_category. Threads have many posts, tags assigned via junction table.",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "description": "[Thread unique identifier] - Primary key. Atomic and singular. Used for all thread references."
                },
                "foreignFields": [
                  {
                    "name": "creator_user_id",
                    "type": "uuid",
                    "description": "[Thread creator reference] - References thread creator, separating author data from thread content.",
                    "relation": {
                      "name": "creator_user",
                      "targetModel": "discussion_board_users",
                      "targetField": "id",
                      "type": "m:1",
                      "fromField": "creator_user_id"
                    },
                    "unique": false,
                    "nullable": false
                  },
                  {
                    "name": "category_id",
                    "type": "uuid",
                    "description": "[Thread category reference] - Links thread to category for filtering/grouping.",
                    "relation": {
                      "name": "category",
                      "targetModel": "discussion_board_thread_category",
                      "targetField": "id",
                      "type": "m:1",
                      "fromField": "category_id"
                    },
                    "unique": false,
                    "nullable": false
                  }
                ],
                "plainFields": [
                  {
                    "name": "title",
                    "type": "string",
                    "description": "[Thread title] - Atomic, non-derived. E.g., 'Election Impact Discussion'.",
                    "nullable": false
                  },
                  {
                    "name": "body",
                    "type": "string",
                    "description": "[Thread body content] - Initial post, atomic, not derived.",
                    "nullable": false
                  },
                  {
                    "name": "is_locked",
                    "type": "boolean",
                    "description": "[Lock flag] - Thread lock for moderation (true=locked).",
                    "nullable": false
                  },
                  {
                    "name": "is_pinned",
                    "type": "boolean",
                    "description": "[Pin flag] - Thread highlight at top (true=pinned).",
                    "nullable": false
                  },
                  {
                    "name": "created_at",
                    "type": "datetime",
                    "description": "[Created timestamp] - Atomic event timestamp.",
                    "nullable": false
                  },
                  {
                    "name": "updated_at",
                    "type": "datetime",
                    "description": "[Last updated timestamp] - Audit trail support.",
                    "nullable": false
                  },
                  {
                    "name": "deleted_at",
                    "type": "datetime",
                    "description": "[Deletion timestamp] - Soft deletion for compliance.",
                    "nullable": true
                  }
                ],
                "uniqueIndexes": [
                  {
                    "fieldNames": [
                      "title",
                      "category_id"
                    ],
                    "description": "[Unique] - One title per category; avoids duplicate threads.",
                    "unique": true
                  }
                ],
                "plainIndexes": [
                  {
                    "fieldNames": [
                      "created_at",
                      "is_pinned"
                    ],
                    "description": "[Performance] - Fast retrieval of pinned/latest threads."
                  },
                  {
                    "fieldNames": [
                      "creator_user_id",
                      "deleted_at"
                    ],
                    "description": "[Performance] - Mod review by creator/deletion state."
                  }
                ],
                "ginIndexes": [
                  {
                    "fieldName": "title",
                    "description": "[Search] - Full-text search on thread title."
                  },
                  {
                    "fieldName": "body",
                    "description": "[Search] - Full-text search on thread content."
                  }
                ]
              },
              {
                "name": "discussion_board_post",
                "description": "[Post Entity] - Implements post logic from requirements. Each row represents a post in a thread, including first and replies. 3NF enforced: only atomic fields. Posts reference thread and author, may be parent (for future nesting).",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "description": "[Post unique identifier] - Primary key for individual posts."
                },
                "foreignFields": [
                  {
                    "name": "thread_id",
                    "type": "uuid",
                    "description": "[Thread reference] - Links post to its parent thread.",
                    "relation": {
                      "name": "thread",
                      "targetModel": "discussion_board_thread",
                      "targetField": "id",
                      "type": "m:1",
                      "fromField": "thread_id"
                    },
                    "unique": false,
                    "nullable": false
                  },
                  {
                    "name": "author_user_id",
                    "type": "uuid",
                    "description": "[Author reference] - Author of the post, normalized away from post.",
                    "relation": {
                      "name": "author_user",
                      "targetModel": "discussion_board_users",
                      "targetField": "id",
                      "type": "m:1",
                      "fromField": "author_user_id"
                    },
                    "unique": false,
                    "nullable": false
                  },
                  {
                    "name": "parent_post_id",
                    "type": "uuid",
                    "description": "[Parent post] - Nullable for top-level; for reply nesting.",
                    "relation": {
                      "name": "parent_post",
                      "targetModel": "discussion_board_post",
                      "targetField": "id",
                      "type": "m:1",
                      "fromField": "parent_post_id",
                      "mappingName": "recursive"
                    },
                    "unique": false,
                    "nullable": true
                  }
                ],
                "plainFields": [
                  {
                    "name": "body",
                    "type": "string",
                    "description": "[Post content] - Main post text, atomic.",
                    "nullable": false
                  },
                  {
                    "name": "created_at",
                    "type": "datetime",
                    "description": "[Creation timestamp] - For activity and audit tracking.",
                    "nullable": false
                  },
                  {
                    "name": "updated_at",
                    "type": "datetime",
                    "description": "[Edit timestamp] - Indicates modification/audit history.",
                    "nullable": false
                  },
                  {
                    "name": "deleted_at",
                    "type": "datetime",
                    "description": "[Soft delete timestamp] - Compliance/takedown support.",
                    "nullable": true
                  }
                ],
                "uniqueIndexes": [],
                "plainIndexes": [
                  {
                    "fieldNames": [
                      "thread_id",
                      "created_at"
                    ],
                    "description": "[Performance] - Fetch by thread/chronology."
                  },
                  {
                    "fieldNames": [
                      "author_user_id",
                      "deleted_at"
                    ],
                    "description": "[Review] - Mod history by author."
                  }
                ],
                "ginIndexes": [
                  {
                    "fieldName": "body",
                    "description": "[Search] - Full-text search on post content."
                  }
                ]
              },
              {
                "name": "discussion_board_comment",
                "description": "[Comment Entity] - Implements comment/reply requirement. Each row is a single comment. 3NF enforced: each comment is atomic, referencing only its parent post/author/optional parent comment.",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "description": "[Comment unique identifier] - Singular reference."
                },
                "foreignFields": [
                  {
                    "name": "post_id",
                    "type": "uuid",
                    "description": "[Parent post] - Comment is attached to post.",
                    "relation": {
                      "name": "post",
                      "targetModel": "discussion_board_post",
                      "targetField": "id",
                      "type": "m:1",
                      "fromField": "post_id"
                    },
                    "unique": false,
                    "nullable": false
                  },
                  {
                    "name": "author_user_id",
                    "type": "uuid",
                    "description": "[Author reference] - Creator of this comment.",
                    "relation": {
                      "name": "author_user",
                      "targetModel": "discussion_board_users",
                      "targetField": "id",
                      "type": "m:1",
                      "fromField": "author_user_id"
                    },
                    "unique": false,
                    "nullable": false
                  },
                  {
                    "name": "parent_comment_id",
                    "type": "uuid",
                    "description": "[Parent comment] - Nullable; for replies only.",
                    "relation": {
                      "name": "parent_comment",
                      "targetModel": "discussion_board_comment",
                      "targetField": "id",
                      "type": "m:1",
                      "fromField": "parent_comment_id",
                      "mappingName": "recursive"
                    },
                    "unique": false,
                    "nullable": true
                  }
                ],
                "plainFields": [
                  {
                    "name": "body",
                    "type": "string",
                    "description": "[Comment body] - Atomic text value.",
                    "nullable": false
                  },
                  {
                    "name": "created_at",
                    "type": "datetime",
                    "description": "[Created] - Recent activity tracking.",
                    "nullable": false
                  },
                  {
                    "name": "updated_at",
                    "type": "datetime",
                    "description": "[Updated] - Revision/audit-trail.",
                    "nullable": false
                  },
                  {
                    "name": "deleted_at",
                    "type": "datetime",
                    "description": "[Soft delete] - Required for moderation.",
                    "nullable": true
                  }
                ],
                "uniqueIndexes": [],
                "plainIndexes": [
                  {
                    "fieldNames": [
                      "post_id",
                      "created_at"
                    ],
                    "description": "[Performance] - Chronological retrieval by post."
                  },
                  {
                    "fieldNames": [
                      "author_user_id"
                    ],
                    "description": "[Performance] - Mod tracking per user."
                  }
                ],
                "ginIndexes": [
                  {
                    "fieldName": "body",
                    "description": "[Search] - Full-text search for moderation and review."
                  }
                ]
              },
              {
                "name": "discussion_board_thread_tag",
                "description": "[Thread Tag Junction Table] - Implements M:N thread-tagging. Junction table only: each row links thread to allowed tag. No tag metadata stored here. Fully normalized (M:N).",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "isId": true,
                  "isGenerated": true,
                  "description": "[Junction unique identifier] - PK for junction row."
                },
                "foreignFields": [
                  {
                    "name": "thread_id",
                    "type": "uuid",
                    "model": "discussion_board_thread",
                    "nullable": false,
                    "unique": false,
                    "description": "[Thread FK] - Thread to which tag is assigned.",
                    "relation": {
                      "name": "thread",
                      "model": "discussion_board_thread",
                      "type": "m:1",
                      "fromField": "thread_id",
                      "toField": "id",
                      "targetModel": "discussion_board_thread"
                    }
                  },
                  {
                    "name": "tag_id",
                    "type": "uuid",
                    "model": "discussion_board_tag_category",
                    "nullable": false,
                    "unique": false,
                    "description": "[Tag FK] - Tag being assigned.",
                    "relation": {
                      "name": "tag_category",
                      "model": "discussion_board_tag_category",
                      "type": "m:1",
                      "fromField": "tag_id",
                      "toField": "id",
                      "targetModel": "discussion_board_tag_category"
                    }
                  }
                ],
                "plainFields": [
                  {
                    "name": "created_at",
                    "type": "datetime",
                    "nullable": false,
                    "description": "[Assignment timestamp] - Tagging operation date."
                  }
                ],
                "uniqueIndexes": [
                  {
                    "fieldNames": [
                      "thread_id",
                      "tag_id"
                    ],
                    "description": "[Unique M:N] - Prevent duplicate tag assignments to same thread.",
                    "unique": true
                  }
                ],
                "plainIndexes": [
                  {
                    "fieldNames": [
                      "tag_id"
                    ],
                    "description": "[Performance] - Query/filter by tag."
                  }
                ],
                "ginIndexes": []
              },
              {
                "name": "discussion_board_thread_category",
                "description": "[Thread Category Table] - Implements thread categorization. Each record is a unique, atomic category. No derived values. Used for grouping threads only.",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "description": "[Category PK] - Used as FK in threads."
                },
                "foreignFields": [],
                "plainFields": [
                  {
                    "name": "code",
                    "type": "string",
                    "description": "[Category code] - Short, unique code ('economy').",
                    "nullable": false
                  },
                  {
                    "name": "name",
                    "type": "string",
                    "description": "[Category name] - Human-friendly, unique.",
                    "nullable": false
                  },
                  {
                    "name": "description",
                    "type": "string",
                    "description": "[Optional details] - Category description.",
                    "nullable": true
                  },
                  {
                    "name": "created_at",
                    "type": "datetime",
                    "description": "[Created] - Auditing.",
                    "nullable": false
                  },
                  {
                    "name": "updated_at",
                    "type": "datetime",
                    "description": "[Updated] - Change/audit tracking.",
                    "nullable": false
                  }
                ],
                "uniqueIndexes": [
                  {
                    "fieldNames": [
                      "code"
                    ],
                    "description": "[Unique code] - Routing/filter business logic.",
                    "unique": true
                  },
                  {
                    "fieldNames": [
                      "name"
                    ],
                    "description": "[Unique name] - UI/duplication enforcement.",
                    "unique": true
                  }
                ],
                "plainIndexes": [],
                "ginIndexes": []
              },
              {
                "name": "discussion_board_tag_category",
                "description": "[Tag Category Table] - Master tag list fulfilling tag requirements. Each is atomic, referenced only by ID from thread tags. 3NF maintained: no aggregates or redundant fields.",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "description": "[Tag PK] - Unique per tag."
                },
                "foreignFields": [],
                "plainFields": [
                  {
                    "name": "code",
                    "type": "string",
                    "description": "[Tag code] - Unique, short value for tag (e.g. 'gdp', 'inflation').",
                    "nullable": false
                  },
                  {
                    "name": "name",
                    "type": "string",
                    "description": "[Tag name] - UI-friendly.",
                    "nullable": false
                  },
                  {
                    "name": "description",
                    "type": "string",
                    "description": "[Details] - UI/admin usage.",
                    "nullable": true
                  },
                  {
                    "name": "created_at",
                    "type": "datetime",
                    "description": "[Created] - Audit/ordering.",
                    "nullable": false
                  },
                  {
                    "name": "updated_at",
                    "type": "datetime",
                    "description": "[Updated] - Change/audit tracking.",
                    "nullable": false
                  }
                ],
                "uniqueIndexes": [
                  {
                    "fieldNames": [
                      "code"
                    ],
                    "description": "[Unique code] - Tagging integrity.",
                    "unique": true
                  },
                  {
                    "fieldNames": [
                      "name"
                    ],
                    "description": "[Unique name] - No duplicate tags accepted.",
                    "unique": true
                  }
                ],
                "plainIndexes": [],
                "ginIndexes": []
              },
              {
                "name": "mv_discussion_thread_activity",
                "description": "[Materialized View: Thread Activity] - Implements denormalized aggregate/reporting requirements for threads. Contains precomputed fields like reply_count for high-performance dashboards; these are omitted from base tables to enforce normalization.",
                "material": true,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "isId": true,
                  "isGenerated": true,
                  "description": "[Materialized view PK] - Identifies unique thread activity row."
                },
                "foreignFields": [
                  {
                    "name": "thread_id",
                    "type": "uuid",
                    "model": "discussion_board_thread",
                    "nullable": false,
                    "unique": true,
                    "description": "[Thread reference] - 1:1 to thread.id for aggregate metrics.",
                    "relation": {
                      "name": "thread",
                      "model": "discussion_board_thread",
                      "type": "1:1",
                      "fromField": "thread_id",
                      "toField": "id",
                      "targetModel": "discussion_board_thread"
                    }
                  }
                ],
                "plainFields": [
                  {
                    "name": "reply_count",
                    "type": "int",
                    "nullable": false,
                    "description": "[Aggregate] - Precomputed in materialization process."
                  },
                  {
                    "name": "last_posted_at",
                    "type": "datetime",
                    "nullable": true,
                    "description": "[Denormalized timestamp] - Recent post."
                  },
                  {
                    "name": "participant_user_ids",
                    "type": "string",
                    "nullable": true,
                    "description": "[Participant IDs] - Denormalized string, analytics only."
                  }
                ],
                "uniqueIndexes": [],
                "plainIndexes": [
                  {
                    "fieldNames": [
                      "reply_count"
                    ],
                    "description": "[Performance] - Fast queries for trending discussions."
                  }
                ],
                "ginIndexes": []
              }
            ]
          },
          {
            "filename": "schema-03-engagement.prisma",
            "namespace": "Engagement",
            "models": [
              {
                "name": "discussion_board_vote",
                "description": "[Vote Tracking] - This implements the 'Upvote/Downvote' and vote aggregation requirements outlined under 'Content Interaction' in 02_discussion_board_feature_requirements.md. \n\nThis model records every user's voting action (upvote or downvote) on threads, posts, and comments, allowing for tailored, real-time engagement statistics. Maintains 3NF by using atomic fields for all voting events, referencing both the voter and the target entity by normalized foreign keys. For example, when a user upvotes a comment, a new record is inserted specifying the user, target type, and direction. \n\nKey relationships: references the voting user in discussion_board_user and any of discussion_board_thread, discussion_board_post, or discussion_board_comment for the voted content. \nSpecial behaviors: Each user can only vote once per target; direction is strictly controlled; supports both upvotes and downvotes. Duplicate prevention is enforced by a composite unique index on (voter, target_type, target_id).",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "description": "[Vote Record Primary Key] - Implements unique identification of every vote operation as required for audit and traceability. This value ensures all vote records remain unique and supports direct lookups. This is fully normalized as it supplies no additional information beside entity identity."
                },
                "foreignFields": [
                  {
                    "name": "user_id",
                    "type": "uuid",
                    "description": "[Voting User] - References the user performing the vote according to requirements for audit and user-based tracking. This field allows for querying all votes cast by a particular user and is always required for normalization and referential integrity. For example, counting all upvotes by a user. Not nullable.",
                    "relation": {
                      "name": "user",
                      "targetModel": "discussion_board_users",
                      "targetField": "id",
                      "relationType": "m:1"
                    },
                    "unique": false,
                    "nullable": false
                  },
                  {
                    "name": "thread_id",
                    "type": "uuid",
                    "description": "[Thread Target] - Refers to the thread being voted on, if applicable, aligning with the need for thread upvote/downvote as in core feature requirements. Enables normalized storage without duplication. Nullable to permit post/comment targets instead.",
                    "relation": {
                      "name": "thread",
                      "targetModel": "discussion_board_thread",
                      "targetField": "id",
                      "relationType": "m:1"
                    },
                    "unique": false,
                    "nullable": true
                  },
                  {
                    "name": "post_id",
                    "type": "uuid",
                    "description": "[Post Target] - Refers to a specific post receiving a vote, only set if the target is a post. Implements normalization by storing the reference atomically. Nullable for other vote types.",
                    "relation": {
                      "name": "post",
                      "targetModel": "discussion_board_post",
                      "targetField": "id",
                      "relationType": "m:1"
                    },
                    "unique": false,
                    "nullable": true
                  },
                  {
                    "name": "comment_id",
                    "type": "uuid",
                    "description": "[Comment Target] - References a comment being voted on, per threaded/nested commentary needs. Only set if the vote applies to a comment. Ensures 3NF by isolating relationships. Nullable for other target types.",
                    "relation": {
                      "name": "comment",
                      "targetModel": "discussion_board_comment",
                      "targetField": "id",
                      "relationType": "m:1"
                    },
                    "unique": false,
                    "nullable": true
                  }
                ],
                "plainFields": [
                  {
                    "name": "direction",
                    "type": "string",
                    "description": "[Vote Direction] - Implements voting direction per 'upvote/downvote' usage. Accepts only 'up' or 'down' as valid values, reflecting the feature requirement. Maintains normalization by storing only atomic values. Used for aggregating vote totals efficiently.",
                    "nullable": false
                  },
                  {
                    "name": "created_at",
                    "type": "datetime",
                    "description": "[Vote Timestamp] - Records when the vote operation took place in accordance with audit and analytics tracking. Fully normalized, supports temporal queries and audit. For example, to track voting frequency or trends over time.",
                    "nullable": false
                  }
                ],
                "uniqueIndexes": [
                  {
                    "fieldNames": [
                      "user_id",
                      "thread_id",
                      "post_id",
                      "comment_id"
                    ],
                    "description": "[One User One Vote Constraint] - Ensures a user can only cast one vote per individual thread, post, or comment. Complies with business rules on duplicate vote prevention and supports fast existence checks.",
                    "unique": true
                  }
                ],
                "plainIndexes": [
                  {
                    "fieldNames": [
                      "created_at"
                    ],
                    "description": "[Recent Vote Search] - Supports queries for recent voting activity, e.g., last 24h upvotes for moderation or analytics."
                  }
                ],
                "ginIndexes": []
              },
              {
                "name": "discussion_board_reaction",
                "description": "[Reaction Log] - Implements the 'Voting & Reactions' and 'Rich Content' feature requirements from 02_discussion_board_feature_requirements.md. \n\nThis model records each user's emoji or symbolic reaction (e.g., emoji, like, disagree) attached to threads, posts, or comments. Fully 3NF: relation links stored atomically, no aggregates or counts in this table. For example, if a user reacts with 'like' to a post, an entry references the user, the post, and the type of reaction. \n\nKey relationships: References user, and one of thread, post, or comment. \nSpecial behaviors: Composite unique index enforces only one reaction of a specific type per user/target; arbitrary duplicate prevention. Used to drive aggregates (in views/materialized views) and for real-time UX feedback.",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "description": "[Reaction Primary Key] - Unique identifier for each atomic reaction event. Complies with full normalization principles and supports efficient lookups and audit trails."
                },
                "foreignFields": [
                  {
                    "name": "user_id",
                    "type": "uuid",
                    "description": "[Reacting User] - References user account providing the reaction. Required for tracking and personalization. Not nullable for auditability and user-specific features.",
                    "relation": {
                      "name": "user",
                      "targetModel": "discussion_board_users",
                      "targetField": "id",
                      "relationType": "m:1"
                    },
                    "unique": false,
                    "nullable": false
                  },
                  {
                    "name": "thread_id",
                    "type": "uuid",
                    "description": "[Thread Target] - References target thread if response is at thread level. Nullable if the reaction applies to post or comment.",
                    "relation": {
                      "name": "thread",
                      "targetModel": "discussion_board_thread",
                      "targetField": "id",
                      "relationType": "m:1"
                    },
                    "unique": false,
                    "nullable": true
                  },
                  {
                    "name": "post_id",
                    "type": "uuid",
                    "description": "[Post Target] - References post receiving reaction, following atomicity principles. Nullable for thread/comment targets.",
                    "relation": {
                      "name": "post",
                      "targetModel": "discussion_board_post",
                      "targetField": "id",
                      "relationType": "m:1"
                    },
                    "unique": false,
                    "nullable": true
                  },
                  {
                    "name": "comment_id",
                    "type": "uuid",
                    "description": "[Comment Target] - Used for reactions attached to a comment. Respects normalized data modeling through nullable field.",
                    "relation": {
                      "name": "comment",
                      "targetModel": "discussion_board_comment",
                      "targetField": "id",
                      "relationType": "m:1"
                    },
                    "unique": false,
                    "nullable": true
                  }
                ],
                "plainFields": [
                  {
                    "name": "reaction_type",
                    "type": "string",
                    "description": "[Reaction Type] - Captures the symbolic meaning of the user reaction (e.g., 'like', 'laugh', 'disagree', emoji code). Implements the UI/business requirements for expressive reactions and enables normalized lookup tables in future. For example, records 'like' or 'sad'. Restricts values to atomic symbols only. Not nullable.",
                    "nullable": false
                  },
                  {
                    "name": "created_at",
                    "type": "datetime",
                    "description": "[Reaction Timestamp] - Records exact time of reaction, enabling both audit/compliance and analytics functions. Fully normalized field supporting sort and filter operations.",
                    "nullable": false
                  }
                ],
                "uniqueIndexes": [
                  {
                    "fieldNames": [
                      "user_id",
                      "thread_id",
                      "post_id",
                      "comment_id",
                      "reaction_type"
                    ],
                    "description": "[Unique Reaction Type per User per Target] - Ensures one reaction of each type by a user for each thread, post, or comment. Prevents duplicate reactions as required by UX/business rules.",
                    "unique": true
                  }
                ],
                "plainIndexes": [
                  {
                    "fieldNames": [
                      "created_at"
                    ],
                    "description": "[Recent Reaction Search] - Enables analytics, notification, and moderation workflows to query latest reaction events with low latency."
                  }
                ],
                "ginIndexes": []
              },
              {
                "name": "discussion_board_bookmark",
                "description": "[User Bookmarking] - Implements the 'Bookmark/Favorite' feature from the 'Content Interaction' section in 02_discussion_board_feature_requirements.md. \n\nAllows users to save threads, posts, or comments for rapid access from their profile dashboards. Model structure maintains 3NF: each bookmark is atomic (user, target), no derived summary stored in this table. For example, when a user bookmarks a thread, one row is inserted per user/thread pair. \n\nKey relationships: Links to user and exactly one type of content. \nSpecial behaviors: Composite unique index to prevent duplicate user/content bookmarks; each bookmark is atomic, supporting efficient bookmarking/unbookmarking.",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "description": "[Bookmark Primary Key] - Unique per bookmark, with no derived fields, enabling robust tracking and audit."
                },
                "foreignFields": [
                  {
                    "name": "user_id",
                    "type": "uuid",
                    "description": "[Bookmarking User] - The user making the bookmark. Not nullable, as bookmarks must be attributable to a user per requirements.",
                    "relation": {
                      "name": "user",
                      "targetModel": "discussion_board_users",
                      "targetField": "id",
                      "relationType": "m:1"
                    },
                    "unique": false,
                    "nullable": false
                  },
                  {
                    "name": "thread_id",
                    "type": "uuid",
                    "description": "[Thread Target] - Refers to thread when bookmark targets a whole thread discussion. Nullable for post/comment targeting.",
                    "relation": {
                      "name": "thread",
                      "targetModel": "discussion_board_thread",
                      "targetField": "id",
                      "relationType": "m:1"
                    },
                    "unique": false,
                    "nullable": true
                  },
                  {
                    "name": "post_id",
                    "type": "uuid",
                    "description": "[Post Target] - Refers to specific post for more granular bookmarking. Nullable, enabling flexibility in target types.",
                    "relation": {
                      "name": "post",
                      "targetModel": "discussion_board_post",
                      "targetField": "id",
                      "relationType": "m:1"
                    },
                    "unique": false,
                    "nullable": true
                  },
                  {
                    "name": "comment_id",
                    "type": "uuid",
                    "description": "[Comment Target] - Allows comments as bookmark targets, covering use cases such as referencing a key point. Nullable for thread/post bookmarks.",
                    "relation": {
                      "name": "comment",
                      "targetModel": "discussion_board_comment",
                      "targetField": "id",
                      "relationType": "m:1"
                    },
                    "unique": false,
                    "nullable": true
                  }
                ],
                "plainFields": [
                  {
                    "name": "created_at",
                    "type": "datetime",
                    "description": "[Bookmark Timestamp] - Stores creation time to provide temporal analytics, audit trails, and personalized bookmark ordering. Atomic field following normalization principles.",
                    "nullable": false
                  }
                ],
                "uniqueIndexes": [
                  {
                    "fieldNames": [
                      "user_id",
                      "thread_id",
                      "post_id",
                      "comment_id"
                    ],
                    "description": "[Prevent Duplicate Bookmarks] - Ensures a user cannot bookmark the same piece of content more than once, aligning with UX and atomicity requirements.",
                    "unique": true
                  }
                ],
                "plainIndexes": [
                  {
                    "fieldNames": [
                      "created_at"
                    ],
                    "description": "[Recent Bookmark Search] - Allows efficient listing of a user's most recent bookmarks, for profile dashboards, feeds, etc."
                  }
                ],
                "ginIndexes": []
              },
              {
                "name": "discussion_board_notification",
                "description": "[Notifications Log] - Implements notification requirements for alerting users (in-app and email channels) about replies, mentions, moderation actions, etc., as described in the Notifications & Subscriptions features in 02_discussion_board_feature_requirements.md. \n\nEvery notification event is atomic and tied to the recipient and optionally the triggering content. Maintains full normalization by separating each notification event from aggregates or status fields. For example, when a user is mentioned in a thread, a row is inserted with recipient, type, linking to triggering content if needed. \n\nKey relationships: Ties to recipient user and optionally to the related thread/post/comment. \nSpecial behaviors: Non-null constraint on recipient; stores read/unread and delivery details for downstream UI logic. Notification history enables auditing and user controls for opt out, etc.",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "description": "[Notification Primary Key] - Atomic identifier supporting notification history, compliance, and lookup. Fulfills normalization requirement for entity-identity separation."
                },
                "foreignFields": [
                  {
                    "name": "recipient_user_id",
                    "type": "uuid",
                    "description": "[Recipient User] - Points to the user receiving the notification. Not nullable per notification and user personalization requirements.",
                    "relation": {
                      "name": "recipient_user",
                      "targetModel": "discussion_board_users",
                      "targetField": "id",
                      "relationType": "m:1"
                    },
                    "unique": false,
                    "nullable": false
                  },
                  {
                    "name": "thread_id",
                    "type": "uuid",
                    "description": "[Thread Trigger] - If notification triggered by a thread (e.g., being mentioned, thread activity), link to it. Nullable to generalize for other sources.",
                    "relation": {
                      "name": "thread",
                      "targetModel": "discussion_board_thread",
                      "targetField": "id",
                      "relationType": "m:1"
                    },
                    "unique": false,
                    "nullable": true
                  },
                  {
                    "name": "post_id",
                    "type": "uuid",
                    "description": "[Post Trigger] - Refers to originating post if present. Nullable for generic notifications.",
                    "relation": {
                      "name": "post",
                      "targetModel": "discussion_board_post",
                      "targetField": "id",
                      "relationType": "m:1"
                    },
                    "unique": false,
                    "nullable": true
                  },
                  {
                    "name": "comment_id",
                    "type": "uuid",
                    "description": "[Comment Trigger] - Optionally references comments that triggered notification. Nullable, supporting flexible notification types.",
                    "relation": {
                      "name": "comment",
                      "targetModel": "discussion_board_comment",
                      "targetField": "id",
                      "relationType": "m:1"
                    },
                    "unique": false,
                    "nullable": true
                  }
                ],
                "plainFields": [
                  {
                    "name": "notification_type",
                    "type": "string",
                    "description": "[Notification Type] - Specifies nature of notification (e.g., reply, mention, moderator_action, subscription_digest, etc.), per business requirements. Fully atomic and normalized to allow status/analytics grouping. Not nullable.",
                    "nullable": false
                  },
                  {
                    "name": "is_read",
                    "type": "boolean",
                    "description": "[Read Status] - Flags whether notification has been acknowledged. Implements user experience requirement for notification badge counts/read indicators. Fully normalized, as only true/false is stored.",
                    "nullable": false
                  },
                  {
                    "name": "channel",
                    "type": "string",
                    "description": "[Notification Channel] - Delivery channel (e.g., 'in_app', 'email'), mapping to platform business logic. Fully normalized and nullable to allow new channel types in future.",
                    "nullable": false
                  },
                  {
                    "name": "created_at",
                    "type": "datetime",
                    "description": "[Creation Timestamp] - Captures temporal analytics and enables notification sorting; supports full normalization by separating time from any derived status.",
                    "nullable": false
                  },
                  {
                    "name": "delivered_at",
                    "type": "datetime",
                    "description": "[Delivery Timestamp] - When notification was sent via the chosen channel. Null if not yet delivered (i.e., queue pending). Fully normalized, non-derived field.",
                    "nullable": true
                  }
                ],
                "uniqueIndexes": [],
                "plainIndexes": [
                  {
                    "fieldNames": [
                      "recipient_user_id",
                      "created_at"
                    ],
                    "description": "[Inbox Display & Search] - Enables listing recent notifications by user and filtering by date, satisfying main UX needs."
                  }
                ],
                "ginIndexes": []
              },
              {
                "name": "discussion_board_subscription",
                "description": "[Notification Subscriptions] - Implements 'Subscribe/Unsubscribe' and alert preferences from Notification & Subscription requirements in 02_discussion_board_feature_requirements.md. \n\nTable records explicit user opt-ins to topics, threads, or tags for notification delivery. Maintains full normalization: each record links subscriber, content, and chosen channel(s), with one row per atomic subscription. For instance, subscribing a user to a thread generates a record referencing the user, thread, and notification channel preferences. No aggregated status (e.g., total subscribers) is denormalized here. \n\nKey relationships: Links user to subscribed content (thread, tag, optionally post/comment for granular alerts). \nSpecial behaviors: Uniqueness constraint prevents duplicate subscriptions to the same channel/source. Supports managing user preferences and batch opt-in/out for analytics and compliance.",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "description": "[Subscription Primary Key] - Core unique identifier for tracking a single user/content/channel subscription. Enables efficient lookup and opt-in/out management."
                },
                "foreignFields": [
                  {
                    "name": "user_id",
                    "type": "uuid",
                    "description": "[Subscriber] - User who wants to receive notifications about a content/topic. Not nullable as individual opt-in is a requirement; supports user-specific notification feeds.",
                    "relation": {
                      "name": "user",
                      "targetModel": "discussion_board_users",
                      "targetField": "id",
                      "relationType": "m:1"
                    },
                    "unique": false,
                    "nullable": false
                  },
                  {
                    "name": "thread_id",
                    "type": "uuid",
                    "description": "[Target Thread] - Subscribes to thread-specific notifications. Nullable to allow for tag or post-based subscriptions per requirements.",
                    "relation": {
                      "name": "thread",
                      "targetModel": "discussion_board_thread",
                      "targetField": "id",
                      "relationType": "m:1"
                    },
                    "unique": false,
                    "nullable": true
                  },
                  {
                    "name": "tag_id",
                    "type": "uuid",
                    "description": "[Target Tag/Topic] - Allows subscribing to all threads tagged with particular tag. Nullable to support thread or post direct subscription.",
                    "relation": {
                      "name": "tag",
                      "targetModel": "discussion_board_thread_tag",
                      "targetField": "id",
                      "relationType": "m:1"
                    },
                    "unique": false,
                    "nullable": true
                  },
                  {
                    "name": "post_id",
                    "type": "uuid",
                    "description": "[Target Post] - For fine-grained notification preference, e.g., replies to a specific post. Nullable for more general subscriptions.",
                    "relation": {
                      "name": "post",
                      "targetModel": "discussion_board_post",
                      "targetField": "id",
                      "relationType": "m:1"
                    },
                    "unique": false,
                    "nullable": true
                  },
                  {
                    "name": "comment_id",
                    "type": "uuid",
                    "description": "[Target Comment] - For per-comment subscription, supporting granular, event-based notification delivery. Nullable.",
                    "relation": {
                      "name": "comment",
                      "targetModel": "discussion_board_comment",
                      "targetField": "id",
                      "relationType": "m:1"
                    },
                    "unique": false,
                    "nullable": true
                  }
                ],
                "plainFields": [
                  {
                    "name": "channel",
                    "type": "string",
                    "description": "[Subscription Channel] - Indicates chosen notification channel for subscription (e.g., 'in_app', 'email'). Fully normalized as it accommodates one value per field. Not nullable for clarity of delivery logic.",
                    "nullable": false
                  },
                  {
                    "name": "created_at",
                    "type": "datetime",
                    "description": "[Subscription Creation Timestamp] - Records when subscription was created, supporting analytics, compliance review, and auditing needs. Atomic field, fully normalized.",
                    "nullable": false
                  },
                  {
                    "name": "expires_at",
                    "type": "datetime",
                    "description": "[Subscription Expiry] - Optional expiry for time-bound subscriptions (e.g., temporary election thread). Nullable for permanent subscriptions. Fully normalized, adhering to business rules.",
                    "nullable": true
                  }
                ],
                "uniqueIndexes": [
                  {
                    "fieldNames": [
                      "user_id",
                      "thread_id",
                      "tag_id",
                      "post_id",
                      "comment_id",
                      "channel"
                    ],
                    "description": "[Unique Subscription per User per Target/Channel] - Ensures no duplicate subscriptions by user/content/channel, supporting opt-in integrity and analytics.",
                    "unique": true
                  }
                ],
                "plainIndexes": [
                  {
                    "fieldNames": [
                      "created_at"
                    ],
                    "description": "[Recent Subscription Listing] - Allows filtering/sorting subscriptions by timestamp for both users and admins."
                  }
                ],
                "ginIndexes": []
              }
            ]
          },
          {
            "filename": "schema-04-moderation.prisma",
            "namespace": "Moderation",
            "models": [
              {
                "name": "discussion_board_report",
                "description": "[Report Entity] - This implements the reporting and abuse workflow requirement from section 4 of the feature requirements. Enables users to flag inappropriate content for moderator review, centralizing reports for transparency and action tracking. Maintains 3NF by referencing precise users and content without duplicating user or content data. For example, when a post is flagged as offensive, a record is created here for moderator workflow. \nKey relationships: Links to reported user (optional), reporting user, and polymorphic content (thread/post/comment). Moderators use this to manage abuse workflows. \nSpecial behaviors: Cannot initiate for non-existent content; only one open report per user/content at a time is allowed.",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "description": "[Primary Key] - Unique identifier for each report. Implements the entity's uniqueness requirement. Standard UUID, ensures normalization. For example, used as reference in moderation actions."
                },
                "foreignFields": [
                  {
                    "name": "reported_user_id",
                    "type": "uuid",
                    "description": "[Offending User FK] - The user reported for abusive content. Enables targeted moderation and disciplinary action. Maintains 3NF by only storing the user reference. For example, a spammer being reported on a post. Nullable for content without registered user (e.g., deleted).",
                    "relation": {
                      "name": "reported_user",
                      "targetModel": "discussion_board_users",
                      "mappingName": "discussion_board_report_of_reported_user_id"
                    },
                    "unique": false,
                    "nullable": true
                  },
                  {
                    "name": "reporting_user_id",
                    "type": "uuid",
                    "description": "[Reporting User FK] - The user generating the report. Tracks abuse sources and enables accountability. Maintains 3NF as a direct reference. For example, the victim or witness reporting the abuse. Not nullable.",
                    "relation": {
                      "name": "reporting_user",
                      "targetModel": "discussion_board_users",
                      "mappingName": "discussion_board_report_of_reporting_user_id"
                    },
                    "unique": false,
                    "nullable": false
                  },
                  {
                    "name": "thread_id",
                    "type": "uuid",
                    "description": "[Thread FK] - Thread being reported, for thread-level abuse. Null for post/comment-level reports. Maintains normalization by referencing rather than duplicating content.",
                    "relation": {
                      "name": "thread",
                      "targetModel": "discussion_board_thread"
                    },
                    "unique": false,
                    "nullable": true
                  },
                  {
                    "name": "post_id",
                    "type": "uuid",
                    "description": "[Post FK] - Post being reported, for post-level abuse. Null for thread/comment-level reports. Keeps schema normalized.",
                    "relation": {
                      "name": "post",
                      "targetModel": "discussion_board_post"
                    },
                    "unique": false,
                    "nullable": true
                  },
                  {
                    "name": "comment_id",
                    "type": "uuid",
                    "description": "[Comment FK] - Comment being reported. Null for thread/post-level reports. Maintains field-level normalization.",
                    "relation": {
                      "name": "comment",
                      "targetModel": "discussion_board_comment"
                    },
                    "unique": false,
                    "nullable": true
                  }
                ],
                "plainFields": [
                  {
                    "name": "status",
                    "type": "string",
                    "description": "[Report Status] - Implements workflow state tracking from moderation requirements. Indicates if a report is 'pending', 'resolved', or 'dismissed'. Normalized (atomic, not derived). For example, status transitions after moderator review. Enum expected in application logic.",
                    "nullable": false
                  },
                  {
                    "name": "category",
                    "type": "string",
                    "description": "[Report Category] - Abuse type such as 'spam', 'harassment', 'off-topic'. Enables analytical grouping and moderator prioritization. Maintains normalization by not repeating explanations—only concise tags. For example, allows dashboard filtering of spam vs. harassment.",
                    "nullable": false
                  },
                  {
                    "name": "submitted_at",
                    "type": "datetime",
                    "description": "[Report Timestamp] - When abuse was reported. Auditable, normalized, atomic. Used to measure compliance with response time targets.",
                    "nullable": false
                  },
                  {
                    "name": "resolved_at",
                    "type": "datetime",
                    "description": "[Resolution Timestamp] - When a moderator resolved the report. Atomic, nullable (unresolved when null), keeps schema normalized.",
                    "nullable": true
                  },
                  {
                    "name": "details",
                    "type": "string",
                    "description": "[Report Details] - Freeform explanation from reporter. Fully normalized, as each instance is atomic. For example, a user's description of incident.",
                    "nullable": false
                  }
                ],
                "uniqueIndexes": [
                  {
                    "fieldNames": [
                      "reporting_user_id",
                      "thread_id",
                      "post_id",
                      "comment_id"
                    ],
                    "description": "Ensures a user can report a specific content only once at a time. Implements the business constraint on duplicate reports per user-content.",
                    "unique": true
                  }
                ],
                "plainIndexes": [
                  {
                    "fieldNames": [
                      "status"
                    ],
                    "description": "Facilitates queries for moderation queue (by report status)."
                  },
                  {
                    "fieldNames": [
                      "reported_user_id",
                      "submitted_at"
                    ],
                    "description": "Composite index for querying reports about a user over time, helps abuse review metrics."
                  }
                ],
                "ginIndexes": [
                  {
                    "fieldName": "details",
                    "description": "Enables full-text fuzzy search by moderators in report details for context and analytics."
                  }
                ]
              },
              {
                "name": "discussion_board_moderator_action",
                "description": "[Moderator Action Log] - Implements audit trail for moderator interventions as per Moderation Tools requirements (Section 8). Tracks every moderation event, providing historical accountability and clarity for escalated workflows. Maintains full normalization: stores only atomic reference to affected entities. For example, documenting a post removal or warning issued.\nKey relationships: Linked to moderator, reported user, report, and content (thread/post/comment). Supports analytics and compliance.\nSpecial behaviors: Immutable history (never updated, only appended).",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "description": "[Primary Key] - Unique action id for every intervention. Atomic, normalized, for referencing in audits."
                },
                "foreignFields": [
                  {
                    "name": "moderator_id",
                    "type": "uuid",
                    "description": "[Moderator FK] - The moderator performing the action. Maintains normalized link for accountability and reports. Not nullable.",
                    "relation": {
                      "name": "moderator",
                      "targetModel": "discussion_board_moderators"
                    },
                    "unique": false,
                    "nullable": false
                  },
                  {
                    "name": "user_id",
                    "type": "uuid",
                    "description": "[User FK] - User affected by the action (could be warned, banned, post deleted). Maintains normalization and supports analytics (e.g., repeat offenders). Nullable for system-level actions.",
                    "relation": {
                      "name": "user",
                      "targetModel": "discussion_board_users"
                    },
                    "unique": false,
                    "nullable": true
                  },
                  {
                    "name": "report_id",
                    "type": "uuid",
                    "description": "[Report FK] - Direct link to triggering report (if applicable). Enables action-report traceability. Nullable for proactive mod actions (not user-initiated).",
                    "relation": {
                      "name": "report",
                      "targetModel": "discussion_board_report"
                    },
                    "unique": false,
                    "nullable": true
                  },
                  {
                    "name": "thread_id",
                    "type": "uuid",
                    "description": "[Thread FK] - Thread affected by this action (optional). Maintains normalized reference.",
                    "relation": {
                      "name": "thread",
                      "targetModel": "discussion_board_thread"
                    },
                    "unique": false,
                    "nullable": true
                  },
                  {
                    "name": "post_id",
                    "type": "uuid",
                    "description": "[Post FK] - Post affected. Null unless specifically post-level intervention.",
                    "relation": {
                      "name": "post",
                      "targetModel": "discussion_board_post"
                    },
                    "unique": false,
                    "nullable": true
                  },
                  {
                    "name": "comment_id",
                    "type": "uuid",
                    "description": "[Comment FK] - Comment affected. Nullable, for comment-level moderation only.",
                    "relation": {
                      "name": "comment",
                      "targetModel": "discussion_board_comment"
                    },
                    "unique": false,
                    "nullable": true
                  }
                ],
                "plainFields": [
                  {
                    "name": "action_type",
                    "type": "string",
                    "description": "[Action Type] - Enumerates mod actions such as 'deleted', 'locked', 'warned', 'banned', 'approved', etc. Atomic per row. Application logic enforces allowed set. For example, tracks instance when moderator locks a thread.",
                    "nullable": false
                  },
                  {
                    "name": "reason",
                    "type": "string",
                    "description": "[Moderator Reason] - Justification for action, entered by mod. Fully normalized and atomic per event; clarifies decision context. For example, details why a post was removed.",
                    "nullable": false
                  },
                  {
                    "name": "created_at",
                    "type": "datetime",
                    "description": "[Timestamp] - Date/time when action occurred. Atomic, 3NF, enables time-based analysis.",
                    "nullable": false
                  }
                ],
                "uniqueIndexes": [],
                "plainIndexes": [
                  {
                    "fieldNames": [
                      "action_type"
                    ],
                    "description": "Facilitates analytics by action type (e.g., count of bans over time)."
                  },
                  {
                    "fieldNames": [
                      "moderator_id",
                      "created_at"
                    ],
                    "description": "Enables moderator performance review by time period."
                  }
                ],
                "ginIndexes": [
                  {
                    "fieldName": "reason",
                    "description": "For full-text justification analysis and fuzzy/moderator search."
                  }
                ]
              },
              {
                "name": "discussion_board_audit_log",
                "description": "[Global Audit Log] - Implements operational/audit requirements for compliance (Section 3, Non-Functional). Captures every high-impact admin or moderator change—user status, settings, board config, bans, etc. Designed for transparency and tamper-proof history. 3NF compliance: references changed entity and actor, avoids non-atomic fields. For example, logs every ban, warning, or system setting change.\nKey relationships: Relates to admin/moderator, optionally affected user and system objects.\nSpecial behaviors: Write-only history, never updated (immutable log).",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "description": "[Primary Key] - Unique audit entry. Holds atomic record reference. Used for compliance reviews and investigations."
                },
                "foreignFields": [
                  {
                    "name": "actor_id",
                    "type": "uuid",
                    "description": "[Actor FK] - User/mod/admin responsible for action. Direct accountability for each logged event. Always populated.",
                    "relation": {
                      "name": "actor",
                      "targetModel": "discussion_board_users",
                      "mappingName": "discussion_board_audit_log_of_actor_id"
                    },
                    "unique": false,
                    "nullable": false
                  },
                  {
                    "name": "affected_user_id",
                    "type": "uuid",
                    "description": "[Affected User FK] - User affected by event, if applicable (nullable for system actions). Keeps 3NF, as atomic ref.",
                    "relation": {
                      "name": "affected_user",
                      "targetModel": "discussion_board_users",
                      "mappingName": "discussion_board_audit_log_of_affected_user_id"
                    },
                    "unique": false,
                    "nullable": true
                  }
                ],
                "plainFields": [
                  {
                    "name": "entity_type",
                    "type": "string",
                    "description": "[Entity Type] - Indicates what was affected: 'user', 'setting', 'thread', etc. Atomic per log entry. Maintains normalization by not including redundant fields.",
                    "nullable": false
                  },
                  {
                    "name": "entity_id",
                    "type": "uuid",
                    "description": "[Entity ID] - Universal ID to pair with entity_type for object lookup. Atomic, normalized reference for all logged object types.",
                    "nullable": false
                  },
                  {
                    "name": "action",
                    "type": "string",
                    "description": "[Action] - Verb describing event: 'ban', 'unban', 'setting_change', 'delete', etc. 3NF compliance, only single type per row.",
                    "nullable": false
                  },
                  {
                    "name": "details",
                    "type": "string",
                    "description": "[Details] - Optional, atomic, freeform field allowing extra commentary for audits. Example: rationale behind a setting change.",
                    "nullable": false
                  },
                  {
                    "name": "created_at",
                    "type": "datetime",
                    "description": "[Timestamp] - When audit entry recorded. Atomic, supports time-based filtering.",
                    "nullable": false
                  }
                ],
                "uniqueIndexes": [],
                "plainIndexes": [
                  {
                    "fieldNames": [
                      "entity_type",
                      "entity_id"
                    ],
                    "description": "Enables direct queries for logs about a specific entity instance."
                  },
                  {
                    "fieldNames": [
                      "actor_id",
                      "created_at"
                    ],
                    "description": "For filtering actor/operator activity by time window."
                  }
                ],
                "ginIndexes": [
                  {
                    "fieldName": "details",
                    "description": "Search rationales/comments in audit logs—especially useful for audits reviewing subjective actions."
                  }
                ]
              },
              {
                "name": "discussion_board_warning",
                "description": "[Warning Entity] - Implements user warning workflow, supporting progressive discipline before bans. Complies with feature requirement for moderation and sanction history (Section 8). Ensures warnings are structured, individually reference mod and user, and retained for audit. Maintains 3NF: only links, never duplicates, user or mod info. E.g., user warned for offensive content, with one row per event.\nKey relationships: Directly linked to moderator and user; optionally references related content.\nSpecial behaviors: Sequential warnings tracked for progressive moderation.",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "description": "[Primary Key] - Unique id per warning. Enables audit traceability, atomic field. Used to reference a particular warning for bans/escalation."
                },
                "foreignFields": [
                  {
                    "name": "user_id",
                    "type": "uuid",
                    "description": "[User FK] - The warned user. Maintains normalization by referencing only. For example, a user accumulating multiple warnings.",
                    "relation": {
                      "name": "user",
                      "targetModel": "discussion_board_users"
                    },
                    "unique": false,
                    "nullable": false
                  },
                  {
                    "name": "moderator_id",
                    "type": "uuid",
                    "description": "[Moderator FK] - Mod issuing warning, ensures accountability and supports progressive discipline audit. Not nullable.",
                    "relation": {
                      "name": "moderator",
                      "targetModel": "discussion_board_moderators"
                    },
                    "unique": false,
                    "nullable": false
                  },
                  {
                    "name": "thread_id",
                    "type": "uuid",
                    "description": "[Thread FK] - The thread which triggered the warning (if relevant). Normalized, optional.",
                    "relation": {
                      "name": "thread",
                      "targetModel": "discussion_board_thread"
                    },
                    "unique": false,
                    "nullable": true
                  },
                  {
                    "name": "post_id",
                    "type": "uuid",
                    "description": "[Post FK] - The post triggering the warning, if relevant. Maintained as atomic/optional.",
                    "relation": {
                      "name": "post",
                      "targetModel": "discussion_board_post"
                    },
                    "unique": false,
                    "nullable": true
                  },
                  {
                    "name": "comment_id",
                    "type": "uuid",
                    "description": "[Comment FK] - Focused on content-related warnings. Maintains normalization, optional.",
                    "relation": {
                      "name": "comment",
                      "targetModel": "discussion_board_comment"
                    },
                    "unique": false,
                    "nullable": true
                  }
                ],
                "plainFields": [
                  {
                    "name": "reason",
                    "type": "string",
                    "description": "[Warning Reason] - Moderator-issued specific reason. 3NF compliance, atomic string. E.g., citing violation category.",
                    "nullable": false
                  },
                  {
                    "name": "issued_at",
                    "type": "datetime",
                    "description": "[Issued Timestamp] - When warning was given. Enables time-based moderation analytics and is normalized per event.",
                    "nullable": false
                  }
                ],
                "uniqueIndexes": [],
                "plainIndexes": [
                  {
                    "fieldNames": [
                      "user_id",
                      "issued_at"
                    ],
                    "description": "For tracking warning history of a user over time."
                  }
                ],
                "ginIndexes": [
                  {
                    "fieldName": "reason",
                    "description": "Allows moderator full-text search/filter on specific warning justifications."
                  }
                ]
              },
              {
                "name": "discussion_board_ban",
                "description": "[Ban Entity] - Implements account ban/suspension workflow per moderation and compliance requirements. Tracks bans (temporary, permanent) individually. Strict 3NF: only links to user, moderator, triggering action or report. For example, permanent ban for repeat abuse.\nKey relationships: Points to user, moderator, optional warning or report triggering the ban. Used by system for access control/state changes.\nSpecial behaviors: Bans are never updated, only created (history preserved for compliance).",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "description": "[Primary Key] - Unique ban record. Used for referencing in audit logs and reversals. Normalization: one row per ban event."
                },
                "foreignFields": [
                  {
                    "name": "user_id",
                    "type": "uuid",
                    "description": "[User FK] - Banned user. Normalization: ensures canonical reference; never duplicated user information.",
                    "relation": {
                      "name": "user",
                      "targetModel": "discussion_board_users"
                    },
                    "unique": false,
                    "nullable": false
                  },
                  {
                    "name": "moderator_id",
                    "type": "uuid",
                    "description": "[Moderator FK] - Moderator responsible for ban/termination. Only references, never duplicates mod identity.",
                    "relation": {
                      "name": "moderator",
                      "targetModel": "discussion_board_moderators"
                    },
                    "unique": false,
                    "nullable": false
                  },
                  {
                    "name": "warning_id",
                    "type": "uuid",
                    "description": "[Warning FK] - Warning event that triggered this ban (if relevant). Null unless escalation. Maintains normalization.",
                    "relation": {
                      "name": "warning",
                      "targetModel": "discussion_board_warning"
                    },
                    "unique": false,
                    "nullable": true
                  },
                  {
                    "name": "report_id",
                    "type": "uuid",
                    "description": "[Report FK] - Abuse report that resulted in ban (if relevant). Provides direct traceability and keeps schema normalized.",
                    "relation": {
                      "name": "report",
                      "targetModel": "discussion_board_report"
                    },
                    "unique": false,
                    "nullable": true
                  }
                ],
                "plainFields": [
                  {
                    "name": "ban_type",
                    "type": "string",
                    "description": "[Ban Type] - 'temporary' or 'permanent'. Application logic defines allowed enum. Keeps atomic, normalized per ban row.",
                    "nullable": false
                  },
                  {
                    "name": "reason",
                    "type": "string",
                    "description": "[Ban Reason] - Atomic string detailing moderator justification for ban.",
                    "nullable": false
                  },
                  {
                    "name": "banned_at",
                    "type": "datetime",
                    "description": "[Ban Start] - When ban was applied. For ongoing compliance and system checks.",
                    "nullable": false
                  },
                  {
                    "name": "expires_at",
                    "type": "datetime",
                    "description": "[Ban Expiry] - Ban end (null if permanent). Keeps type atomic and supports dynamic unbanning.",
                    "nullable": true
                  }
                ],
                "uniqueIndexes": [],
                "plainIndexes": [
                  {
                    "fieldNames": [
                      "user_id",
                      "banned_at"
                    ],
                    "description": "For querying user ban history for escalation review."
                  }
                ],
                "ginIndexes": [
                  {
                    "fieldName": "reason",
                    "description": "Full text reason for ban, enables compliance searches during reviews or appeals."
                  }
                ]
              }
            ]
          },
          {
            "filename": "schema-05-analytics.prisma",
            "namespace": "Analytics",
            "models": [
              {
                "name": "discussion_board_thread_stats",
                "description": "Thread Statistics - This implements the thread analytics and performance tracking requirement from the requirements document (see 'Analytics Dashboard', 'Content Quality Metrics', and 'Trending Topics' features). \n\nProvides essential storage for per-thread statistics such as the number of posts, comments, upvotes, downvotes, bookmarks, and abuse reports. Maintains 3NF by separating out aggregate/thread-level metrics from the main thread/post tables, avoiding redundancy or transitive dependencies. For example, this table is queried to highlight trending threads on dashboards or to trigger moderation review if abuse counts spike.\n\nKey relationships: references each thread (discussion_board_thread_id) directly; thread stats may be joined with user, moderator, or content abuse metric tables for advanced reporting. \nSpecial behaviors: Statistics are updated through dedicated service logic and batch jobs; all values reset if threads are deleted. No calculated fields here—pre-calculation is only allowed in mv_ materialized views for reporting snapshots.",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "description": "Primary Key - Implements unique, stable identification for each thread statistics record.\n\nUniquely identifies statistics per thread. Ensures normalization as the single-row-per-thread record anchor. Example: Used as the foreign key reference from other analytic or reporting systems.",
                  "isId": true,
                  "isGenerated": true,
                  "isUpdatedAt": false,
                  "isCreatedAt": false,
                  "dbType": "Uuid"
                },
                "foreignFields": [
                  {
                    "name": "discussion_board_thread_id",
                    "type": "uuid",
                    "description": "Thread Reference - Implements the mapping from statistics to the corresponding thread.\n\nConnects per-thread statistics to its primary discussion thread. Enforces normalization and referential integrity: every set of stats must belong to a valid thread. Example: When calculating trending topics, stats are filtered/grouped by this association. Constraint: Unique per thread.",
                    "relation": {
                      "targetModel": "discussion_board_thread",
                      "name": "discussion_board_thread",
                      "isUnique": true,
                      "onDelete": "Cascade"
                    },
                    "nullable": false,
                    "unique": true
                  }
                ],
                "plainFields": [
                  {
                    "name": "post_count",
                    "type": "int",
                    "description": "Post Count - Implements tracking of total posts per thread.\n\nAtomic and normalized: not derived, just incremented via logic. Example: Used for ranking or showing thread activity level.",
                    "nullable": false
                  },
                  {
                    "name": "comment_count",
                    "type": "int",
                    "description": "Comment Count - Implements tracking of comment volume per thread.\n\nNormalized, not computed from joins—only incremented or decremented on comment add/delete. For example, used to quickly filter threads with high participation.",
                    "nullable": false
                  },
                  {
                    "name": "upvote_count",
                    "type": "int",
                    "description": "Upvote Count - Implements part of engagement analytics per thread.\n\nAtomic, directly updated, not derived from votes table. Used for popularity display and filters. Normalized and non-redundant.",
                    "nullable": false
                  },
                  {
                    "name": "downvote_count",
                    "type": "int",
                    "description": "Downvote Count - Complements engagement analytics, enables controversial thread detection.\n\nAtomic field, directly maintained—not computed on the fly or denormalized from votes. Used in sort/filter, supports normalization by not including aggregate scores elsewhere.",
                    "nullable": false
                  },
                  {
                    "name": "bookmark_count",
                    "type": "int",
                    "description": "Bookmark Count - Tracks unique user bookmarks for this thread.\n\nAtomic integer, normalized: no redundant storage in user or thread tables. Helps power user feed and favorites lists.",
                    "nullable": false
                  },
                  {
                    "name": "abuse_report_count",
                    "type": "int",
                    "description": "Abuse Report Count - Implements monitoring/reporting for moderation triggers.\n\nAtomic, not computed; updated as users report content. For example, threads hitting a certain threshold show up in moderation dashboards. Supports auditing and quality control without polluting main business records.",
                    "nullable": false
                  },
                  {
                    "name": "created_at",
                    "type": "datetime",
                    "description": "Created At Timestamp - Implements record origination tracking.\n\nAtomic timestamp, supports audit, migration, and compliance. Example: Used by analytics for time-based trends.",
                    "nullable": false
                  },
                  {
                    "name": "updated_at",
                    "type": "datetime",
                    "description": "Updated At Timestamp - Implements update tracking for stats changes.\n\nEnsures all stats edits are tracked and assists with synchronization/auditing. Required for compliant analytics and consistent service behavior.",
                    "nullable": false
                  }
                ],
                "uniqueIndexes": [
                  {
                    "fieldNames": [
                      "discussion_board_thread_id"
                    ],
                    "description": "Unique per thread - Ensures one stats record per thread.",
                    "unique": true
                  }
                ],
                "plainIndexes": [
                  {
                    "fieldNames": [
                      "created_at"
                    ],
                    "description": "Created At Index - Facilitates time-based queries for trend analytics."
                  },
                  {
                    "fieldNames": [
                      "upvote_count",
                      "downvote_count"
                    ],
                    "description": "Engagement Composite Index - For sorting/filtering hot/controversial threads."
                  }
                ],
                "ginIndexes": []
              },
              {
                "name": "discussion_board_user_activity",
                "description": "User Activity Metrics - This implements the 'Profile Activity Feed' and user engagement analytics features (see 'User Profiles & Activity', 'Analytics Dashboard').\n\nStores usage statistics for each user including counts of threads authored, comments, upvotes/downvotes made, reports submitted, and bookmarks created. 3NF compliant by having ONLY activity metrics per user—no denormalized data. For example, this table feeds user reputation calculations and enables profile activity views.\n\nKey relationships: references discussion_board_user, discussion_board_user_profile for detailed join queries. Used by moderators/admins to assess user activity patterns. Special behaviors: Reset or anonymize activity counts for deleted/deactivated users as part of privacy compliance.",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "description": "Primary Key - Uniquely identifies each user activity metrics record.\n\nGuarantees one-to-one mapping with user entity for their aggregated metrics. 3NF: no derived data here—core activity metrics only."
                },
                "foreignFields": [
                  {
                    "name": "discussion_board_user_id",
                    "type": "uuid",
                    "description": "User Reference - Links metrics to an individual user account.\n\nSupports referential integrity and 3NF: all metrics are for a real, valid user only. Example: Used when building profile dashboards or leaderboard features.",
                    "relation": {
                      "name": "discussion_board_user",
                      "targetModel": "discussion_board_users",
                      "isUnique": true,
                      "onDelete": "Cascade"
                    },
                    "unique": true,
                    "nullable": false
                  }
                ],
                "plainFields": [
                  {
                    "name": "threads_authored",
                    "type": "int",
                    "description": "Threads Authored - Counts threads created by this user.\n\nAtomic, not derived elsewhere. Used in calculating engagement or reputation features.",
                    "nullable": false
                  },
                  {
                    "name": "posts_authored",
                    "type": "int",
                    "description": "Posts Authored - Number of initial posts (not comments) started by the user.\n\nMaintains normalization—no redundancy with thread or post tables.",
                    "nullable": false
                  },
                  {
                    "name": "comments_authored",
                    "type": "int",
                    "description": "Comments Authored - Tracks comment participation for this user.\n\nAtomic value, 3NF compliant. Used in moderation, reputation calculations, and personalized analytics.",
                    "nullable": false
                  },
                  {
                    "name": "upvotes_given",
                    "type": "int",
                    "description": "Upvotes Given - Number of times the user upvoted a thread or comment.\n\nNormalization: never derived, direct update only. Enables analysis of engagement and supports anti-abuse monitoring.",
                    "nullable": false
                  },
                  {
                    "name": "downvotes_given",
                    "type": "int",
                    "description": "Downvotes Given - Number of downvote actions performed by user.\n\nAtomic and non-redundant. Used for abuse pattern analysis and community flavor metrics.",
                    "nullable": false
                  },
                  {
                    "name": "reports_made",
                    "type": "int",
                    "description": "Reports Made - Total reports submitted by user for abusive/inappropriate content.\n\nEnables anti-abuse metrics, moderation insights, and potential restrictions for frequent false reporters. 3NF: only original counts are stored.",
                    "nullable": false
                  },
                  {
                    "name": "bookmarks_created",
                    "type": "int",
                    "description": "Bookmarks Created - Tracks count of bookmarks a user has made.\n\nAtomic field for UX features like favorites. Complies with normalization—bookmarks data not duplicated here.",
                    "nullable": false
                  },
                  {
                    "name": "created_at",
                    "type": "datetime",
                    "description": "Created At Timestamp - When the activity metrics record was created.\n\nSupports audit and traceability for compliance and analytics.",
                    "nullable": false
                  },
                  {
                    "name": "updated_at",
                    "type": "datetime",
                    "description": "Updated At Timestamp - Last time user metrics were updated.\n\nRequired for synchronization, analytics workflows, and audit trail features.",
                    "nullable": false
                  }
                ],
                "uniqueIndexes": [
                  {
                    "fieldNames": [
                      "discussion_board_user_id"
                    ],
                    "description": "Unique per user - Only one metrics record per user allowed.",
                    "unique": true
                  }
                ],
                "plainIndexes": [
                  {
                    "fieldNames": [
                      "created_at"
                    ],
                    "description": "Metrics Creation Index - For building registration and onboarding funnel analytics."
                  }
                ],
                "ginIndexes": []
              },
              {
                "name": "discussion_board_content_abuse_metric",
                "description": "Content Abuse Metrics - Implements the monitoring and metric-tracking requirements for abusive, spammy, or otherwise policy-violating activities (see Non-Functional: Security, Moderation & Abuse Prevention, and Analytics Dashboard requirements).\n\nTracks per-day metrics for flagged posts, abuse types, resolution times, auto-hides, moderator escalations, and false positive rates. Maintains 3NF by keeping only atomic, event-driven counts—no derived aggregates or flags. Example: Used by moderators and system analysts to determine policy needs, spot abuse trends, and audit moderator efficiency.\n\nKey relationships: Optionally references moderator for moderator-action mapping. Special behaviors: All time fields are UTC-normalized; no calculated fields—historical snapshots for trends must use mv_ tables.",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "description": "Primary Key - Unique identifier for each metric record, one per day+category.\n\nEnsures uniqueness for each set of abuse metrics tracked, supporting 3NF and compliance."
                },
                "foreignFields": [
                  {
                    "name": "moderator_id",
                    "type": "uuid",
                    "description": "Moderator Reference - If applicable, links the metrics to a specific moderator for escalation/resolution mapping.\n\n3NF: Foreign key nullable—some metrics may not involve a moderator (e.g., automated actions).",
                    "relation": {
                      "name": "discussion_board_moderator",
                      "targetModel": "discussion_board_moderators",
                      "isUnique": false,
                      "onDelete": "SetNull"
                    },
                    "unique": false,
                    "nullable": true
                  }
                ],
                "plainFields": [
                  {
                    "name": "date",
                    "type": "string",
                    "description": "Metric Date - Calendar day for which these metrics are tracked. Stored as ISO date string in yyyy-mm-dd format due to Prisma/JSON schema type constraints.\n\nHelps enforce normalized per-day storage. Example usage: plotting abuse events over time.",
                    "nullable": false
                  },
                  {
                    "name": "abuse_type",
                    "type": "string",
                    "description": "Abuse Type - String field categorizing abuse/spam type for the metric row (e.g., spam, hate_speech, offensive_language, off_topic, etc.).\n\nMaintains atomic (non-derived) data, supports normalization. Later analytics may perform grouping or pivoting on this field.",
                    "nullable": false
                  },
                  {
                    "name": "flagged_count",
                    "type": "int",
                    "description": "Flagged Count - Number of posts/comments flagged as abusive for this type/date.\n\nAtomic, not calculated. Example: Input into moderation alerts, compliance or escalation triggers.",
                    "nullable": false
                  },
                  {
                    "name": "auto_hidden_count",
                    "type": "int",
                    "description": "Auto Hidden Count - Number of posts/comments that were auto-hidden by policy on this date/type.\n\nEnables monitoring of automated moderation effectiveness and supports normalization by centralizing such stats here only.",
                    "nullable": false
                  },
                  {
                    "name": "escalation_count",
                    "type": "int",
                    "description": "Escalation Count - Metric for abuse events escalated to a moderator or admin.",
                    "nullable": false
                  },
                  {
                    "name": "false_positive_count",
                    "type": "int",
                    "description": "False Positive Count - Number of flagged events later cleared as false positives.\n\nAtomic and normalized; only tracked here, not in user or content tables. For example, helps track the impact of moderation improvements or AI upgrades.",
                    "nullable": false
                  },
                  {
                    "name": "avg_resolution_time_minutes",
                    "type": "int",
                    "description": "Average Resolution Time (Minutes) - Time spent (mean) to resolve, measured in minutes.\n\nAtomic metric, supports moderation workflow optimization. Normalized: full timestamps elsewhere, metric-only here. Used in dashboard averages and efficiency reports.",
                    "nullable": false
                  },
                  {
                    "name": "created_at",
                    "type": "datetime",
                    "description": "Created At Timestamp - Origination time of this metric record.\n\nEnsures compliance, allows for backfill/audit. Supports time-based analytics for abuse detection improvements.",
                    "nullable": false
                  },
                  {
                    "name": "updated_at",
                    "type": "datetime",
                    "description": "Updated At Timestamp - When this record was last updated.\n\nUsed for auditing statistics and ETL workflows in analytics pipelines.",
                    "nullable": false
                  }
                ],
                "uniqueIndexes": [
                  {
                    "fieldNames": [
                      "date",
                      "abuse_type"
                    ],
                    "description": "Unique Per Day & Abuse Type - Only one set of metrics per day/abuse type allowed.",
                    "unique": true
                  }
                ],
                "plainIndexes": [
                  {
                    "fieldNames": [
                      "date",
                      "flagged_count"
                    ],
                    "description": "Daily and Flag Count Index - For dashboard trending and high-abuse alerting."
                  },
                  {
                    "fieldNames": [
                      "moderator_id",
                      "escalation_count"
                    ],
                    "description": "Escalation-Mapping Index - For moderation and oversight workflows."
                  }
                ],
                "ginIndexes": []
              }
            ]
          },
          {
            "filename": "schema-06-utility.prisma",
            "namespace": "Utility",
            "models": [
              {
                "name": "discussion_board_setting",
                "description": "[Platform Configuration] - This implements the global platform and board-level settings requirement detailed in the feature, security, and privacy sections of the requirements analysis report (see 02_discussion_board_feature_requirements.md, 03_discussion_board_nonfunctional_and_operational_requirements.md). \n\nThis model enables administrators to store and manage mutable configuration values that affect discussion board functionality, presentation, and enforcement of rules—such as registration policy, default privacy, feature toggles (like post editing, image uploads), and branding. Maintains strict 3NF normalization by storing only atomic configuration entries, each identified by a symbolic key. No settings are duplicated, and all relations to system config (for default inheritance) are managed externally. For example, to toggle whether new threads require approval, a setting with key 'require_thread_approval' can be set to true or false. \n\nKey relationships: Should be referenced by system components enforcing runtime behavior; no hard foreign keys to application-level models (stateless coupling).\nSpecial behaviors: Uniqueness by 'key' is enforced. Deletion disables the setting but doesn't remove its value (for audit).",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "description": "[Unique Setting Key] - Implements the unique identification requirement for persistent board settings.\nBusiness meaning: Each setting must be addressable, auditable and updatable atomically. Ensures normalization by using a UUID-based identifier, aligning with best practices for distributed systems.\nFor example, to update the 'default_thread_sort' behavior, the corresponding setting row is addressed via this field.",
                  "isId": true,
                  "isGenerated": true
                },
                "foreignFields": [],
                "plainFields": [
                  {
                    "name": "key",
                    "type": "string",
                    "unique": true,
                    "description": "[Setting Key] - Implements symbolic addressing of each configuration aspect as required for modularity and feature toggling (see system configuration requirements).\nBusiness meaning: Allows individual settings (like 'allow_file_uploads', 'enable_external_login') to be toggled/queried atomically. Ensures strict normalization as each entry is uniquely keyed and non-redundant. For example, 'require_email_verification' represents the signup policy toggle.",
                    "nullable": false
                  },
                  {
                    "name": "value",
                    "type": "string",
                    "description": "[Atomic Value] - Stores the configuration value as required for runtime lookups and mutation.\nBusiness meaning: Enables flexible value types (as string), supporting boolean, number, JSON-stringified objects where needed. Remains normalized as all values are atomic and not derived; interpretation is handled in business logic. Example usage: 'false' for 'require_thread_approval' disables moderation queue for threads.",
                    "nullable": false
                  },
                  {
                    "name": "description",
                    "type": "string",
                    "description": "[Human-Readable Description] - Implements administrator tooling and auditability requirements. \nBusiness meaning: Provides context about the setting’s effect and usage, supporting maintainability and transparency. For example, \"If true, moderators must approve every new thread.\" This is atomic and ensures no duplicated documentation.\nNullable, as not all settings require verbose descriptions.",
                    "nullable": true
                  },
                  {
                    "name": "created_at",
                    "type": "datetime",
                    "description": "[Creation Timestamp] - Supports audit trail, compliance, and troubleshooting workflows (03_discussion_board_nonfunctional_and_operational_requirements.md).\nBusiness meaning: Allows admins to audit when this setting was introduced. Ensures normalization as the timestamp is intrinsic to the row, not derived. Example: Used in audit reporting to trace config changes over time.",
                    "nullable": false
                  },
                  {
                    "name": "updated_at",
                    "type": "datetime",
                    "description": "[Last Update Timestamp] - Tracks when the setting was modified, supporting audit logs and compliance.\nBusiness meaning: Used to verify when a given setting was last changed, e.g. for privacy compliance or rollback. Maintains normalization as this field is not computed from others.\nExample: On toggling 'allow_external_sharing', this gets refreshed automatically.",
                    "nullable": false
                  },
                  {
                    "name": "deleted_at",
                    "type": "datetime",
                    "description": "[Soft-Delete Marker] - Implements the logical deletion audit and recovery requirement (nonfunctional section on compliance, disaster recovery).\nBusiness meaning: Marks a setting as inactive rather than physically deleting, supporting rollback and postmortem.\nEnsures normalization by storing row state atomically. Example: Disabled settings can be referenced for rollback or audit purposes.",
                    "nullable": true
                  }
                ],
                "uniqueIndexes": [
                  {
                    "name": "unique_key",
                    "fields": [
                      "key"
                    ],
                    "fieldNames": [
                      "key"
                    ],
                    "unique": true
                  }
                ],
                "plainIndexes": [
                  {
                    "name": "idx_setting_deleted_at",
                    "fields": [
                      "deleted_at"
                    ],
                    "fieldNames": [
                      "deleted_at"
                    ]
                  }
                ],
                "ginIndexes": []
              },
              {
                "name": "discussion_board_system_config",
                "description": "[System-wide Default Configuration] - This implements the requirement for global, default system configuration (see section on configuration inheritance and compliance, 03_discussion_board_nonfunctional_and_operational_requirements.md).\n\nThis model provides a single authoritative set of configuration values, typically set by the system owner, which cascade as defaults for all board-level settings unless overridden in discussion_board_setting. Maintains 3NF by holding atomic config fields only—no computed values or redundancies. For example, setting the system-wide default for 'max_upload_size' and 'invite_policy'.\n\nKey relationships: Not directly referenced by board instances or users (stateless), but queried by system logic to resolve runtime policies for all boards.\nSpecial behaviors: Only one row should exist at a time in most deployments; multiple configs used for versioning, which should be enforced by application/business logic outside DB.",
                "material": false,
                "primaryField": {
                  "name": "id",
                  "type": "uuid",
                  "description": "[System Config Unique ID] - Implements the need for identifying each system-wide configuration set (for versioning, audit, or recovery). \nBusiness meaning: Allows referencing, updating, or rolling back changes atomically. Maintains normalization as an atomic UUID not derived from other fields. For example, on full platform config migration, a new row is inserted and old one marked deleted.",
                  "isId": true,
                  "isGenerated": true
                },
                "foreignFields": [],
                "plainFields": [
                  {
                    "name": "key",
                    "type": "string",
                    "unique": false,
                    "description": "[Configuration Key] - Names the specific configuration point in the system, as per requirement for admin-driven, symbolic settings.\nBusiness meaning: Flexible to store any system-level default (such as 'default_privacy_level' or 'max_upload_size_bytes'). Strict normalization: every configuration item is atomic, logical grouping is by application logic. Example: Setting 'enable_registration' to allow/disallow new accounts.",
                    "nullable": false
                  },
                  {
                    "name": "value",
                    "type": "string",
                    "description": "[Atomic Value] - The actual value for the specified config key. May be used as a string, boolean, numeric, or JSON-stringified object by external logic.\nBusiness meaning: Enables maximum runtime flexibility (see dynamic config requirement) without denormalization—all values stored atomically as string. For example, storing '100' as the default threads-per-page setting.",
                    "nullable": false
                  },
                  {
                    "name": "description",
                    "type": "string",
                    "description": "[Description] - Explains what the configuration controls for admin context, as required for nonfunctional requirements on maintainability and transparency.\nBusiness meaning: Helps admins understand system default values. Nullable (not all settings need documentation). Maintains normalization—each row documents one config point. Example: 'Default limit for file attachment size, in bytes.'",
                    "nullable": true
                  },
                  {
                    "name": "created_at",
                    "type": "datetime",
                    "description": "[Creation Timestamp] - Records when this configuration entry was created, supporting compliance and configuration audit trails.\nBusiness meaning: Used for recovery and forensic tracking of policy changes. Strictly normalized—atomic to the row. Example: Auditing how system-wide spam filter rules evolved.",
                    "nullable": false
                  },
                  {
                    "name": "updated_at",
                    "type": "datetime",
                    "description": "[Update Timestamp] - Tracks updates, enabling controlled config changes and auditing (see disaster recovery and compliance requirements).\nBusiness meaning: Ensures that admins can investigate when key system defaults last changed. Not computed/derived from other fields, maintaining strict normalization.",
                    "nullable": false
                  },
                  {
                    "name": "deleted_at",
                    "type": "datetime",
                    "description": "[Soft-Delete Marker] - Implements requirements for auditability and rollback in global config management.\nBusiness meaning: Instead of being dropped, obsolete configs are softly deleted by setting this field, preserving history for compliance. Nullable for active rows. For example, marking outdated 'default_notification_email_policy'.",
                    "nullable": true
                  }
                ],
                "uniqueIndexes": [],
                "plainIndexes": [
                  {
                    "name": "idx_system_config_key",
                    "fields": [
                      "key"
                    ],
                    "fieldNames": [
                      "key"
                    ]
                  },
                  {
                    "name": "idx_system_config_deleted_at",
                    "fields": [
                      "deleted_at"
                    ],
                    "fieldNames": [
                      "deleted_at"
                    ]
                  }
                ],
                "ginIndexes": []
              }
            ]
          }
        ]
      }
    },
    "schemas": {
      "schema-01-core.prisma": "/// User Accounts - This implements the requirement for individual user accounts, supporting registration, authentication, and all user-related auditability. \n///\n/// Provides foundational user representation for all feature requirements involving user actions (posts, comments, votes, favorites, reports). Maintains full 3NF compliance by storing only atomic user identity attributes, with all other aspects normalized into related tables. For example, user display data and settings are not stored here but in dedicated profile/settings tables.\n///\n/// Key relationships: Connects to {@link discussion_board_user_profiles}, {@link discussion_board_user_settings}, thread/posts/comments. \n/// Special behaviors: Uniqueness enforced on email/username; supports audit trails without calculated fields.\n///\n/// @namespace Core\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_users {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key - Implements unique identification per user. \n  /// Ensures 1NF and 3NF by uniquely identifying each user record. All business relationships and entity references use this UUID.\n  /// For example, a user's posts or profile will reference this id.\n  id String @id @db.Uuid\n  \n  /// Username - Implements unique, human-friendly identifier for sign-in and public presence. Satisfies requirement for user authentication and personalized identifiers. \n  /// Maintains 3NF by storing as atomic value; not duplicated elsewhere. For example, used to mention users in threads.\n  username String\n  \n  /// Email - Implements unique login credential and notification address, required for registration, password recovery, and business operations involving communication. \n  /// Ensures 3NF and security compliance by isolating PII to core user record. Format validated as email. For example, delivery of account recovery links or notifications.\n  email String\n  \n  /// Password Hash - Implements security requirements for credential storage. \n  /// Contains only the securely hashed password, never the raw value. Maintains 3NF by being strictly an atomic credential. For example, used on authentication attempt checks.\n  password_hash String\n  \n  /// Active Flag - Supports account enable/disable flow as required by admin/moderation policies. \n  /// Maintains normalization (3NF) by not encoding user status elsewhere. For example, a suspended user is marked inactive here.\n  is_active Boolean\n  \n  /// Created Timestamp - Represents the time of user registration. Implements requirement for audit trail and account lifecycle analysis. \n  /// Atomic, non-calculated field in strict 3NF. Example: find all accounts registered in a given period.\n  created_at DateTime @db.Timestamptz\n  \n  /// Last Updated Timestamp - Tracks last mutation of user record (e.g., profile update, password change). \n  /// Fulfills audit, compliance, and operational needs. Normalized, atomic. Used for detecting recently changed accounts.\n  updated_at DateTime @db.Timestamptz\n  \n  /// Soft Delete Timestamp - Implements requirement for recoverable account deletion. \n  /// Nullable. When set, the user is logically deleted for compliance or user-right-to-be-forgotten scenarios. No denormalization.\n  deleted_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  discussion_board_moderators discussion_board_moderators?\n  discussion_board_admins discussion_board_admins?\n  discussion_board_user_profiles discussion_board_user_profiles?\n  discussion_board_user_settings discussion_board_user_settings?\n  discussion_board_thread discussion_board_thread[]\n  discussion_board_post discussion_board_post[]\n  discussion_board_comment discussion_board_comment[]\n  discussion_board_vote discussion_board_vote[]\n  discussion_board_reaction discussion_board_reaction[]\n  discussion_board_bookmark discussion_board_bookmark[]\n  discussion_board_notification discussion_board_notification[]\n  discussion_board_subscription discussion_board_subscription[]\n  discussion_board_report_of_reported_user_id discussion_board_report[] @relation(\"discussion_board_report_of_reported_user_id\")\n  discussion_board_report_of_reporting_user_id discussion_board_report[] @relation(\"discussion_board_report_of_reporting_user_id\")\n  discussion_board_moderator_action discussion_board_moderator_action[]\n  discussion_board_audit_log_of_actor_id discussion_board_audit_log[] @relation(\"discussion_board_audit_log_of_actor_id\")\n  discussion_board_audit_log_of_affected_user_id discussion_board_audit_log[] @relation(\"discussion_board_audit_log_of_affected_user_id\")\n  discussion_board_warning discussion_board_warning[]\n  discussion_board_ban discussion_board_ban[]\n  discussion_board_user_activity discussion_board_user_activity?\n  \n  @@unique([username])\n  @@unique([email])\n}\n\n/// Guest Access Logs - Implements the requirement to record unauthenticated/guest accesses per compliance and analytics goals. \n/// Stores only atomic guest event records; does not duplicate user account data. Maintains 3NF: each row is a simple access instance, not historical aggregation.\n/// Key relationships: No foreign keys to the users table; all-inbound guest access.\n/// Special behaviors: Used only for analytic/compliance reporting; not authentication.\n///\n/// @namespace Core\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_guests {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key - Uniquely identifies a guest log record. 1NF and 3NF by strict atomic reference.\n  id String @id @db.Uuid\n  \n  /// Session Identifier - Supports tracking unique anonymous accesses (session cookies or device id). Implements analytics requirements for guest activity. 3NF by atomicity. Example: Counting unique guests per day.\n  session_id String\n  \n  /// IP Address - Logs guest's origin IP for compliance, abuse tracking, and analytics. 3NF compliance; not duplicated elsewhere. Ex: Used in abuse response.\n  ip_address String\n  \n  /// User Agent - Logs browser/device for guest session; optional for additional analytics. Stays atomic and complies with 3NF.\n  user_agent String?\n  \n  /// Timestamp of Access - Enforces audit requirements; strictly atomic. Usage: Analytics, abuse tracing, auditing guest surges.\n  accessed_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  @@index([accessed_at])\n}\n\n/// Moderator Roles - This model implements the requirement for moderator user assignment, privilege tracking, and role audit. \n/// Represents the logical bridge between core user record and their moderator status, maintaining 3NF by not duplicating user identity or other profile information. For example, a user is assigned moderator status by being present in this table.\n/// Key relationships: FK to {@link discussion_board_users}, logs all who have or have had moderator role.\n/// Special behaviors: Historical tracking (active, demoted) possible without denormalization.\n///\n/// @namespace Core\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_moderators {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key - Unique per moderator assignment record; strictly atomic and 3NF.\n  id String @id @db.Uuid\n  \n  /// Foreign Key to User - Indicates which user is/was assigned as a moderator. Enforces role membership as normalized, not duplicated data. Enforced 1:N relationship: one user can have zero or one moderator assignments.\n  user_id String @db.Uuid\n  \n  /// Moderator Active Flag - Indicates whether the user currently holds moderator privileges. Implements requirement for role suspension, auditing role status history. Maintains normalization by not storing redundant role data elsewhere.\n  is_active Boolean\n  \n  /// Timestamp of Role Assignment - Tracks when user was assigned moderator role. 3NF: pure atomic audit value.\n  assigned_at DateTime @db.Timestamptz\n  \n  /// Timestamp of Role Revocation - Implements tracking for demoted/expired moderator roles, for compliance, audit, and operational review. Nullable, stays 3NF.\n  revoked_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  fk_discussion_board_moderators_user_id_discussion_board_users_id discussion_board_users @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  \n  discussion_board_moderator_action discussion_board_moderator_action[]\n  discussion_board_warning discussion_board_warning[]\n  discussion_board_ban discussion_board_ban[]\n  discussion_board_content_abuse_metric discussion_board_content_abuse_metric[]\n  \n  @@unique([user_id])\n  @@index([is_active])\n}\n\n/// Administrator Roles - Implements explicit administrator account linkage for full-system privileges, as required for configuration, user management, and audit purposes. 3NF: role assignment not duplicating user record.\n///\n/// Key relationships: Links to {@link discussion_board_users} (user account), supports operational distinction between admins and other roles.\n/// Special behaviors: Admin privileges conferred strictly by row existence, supporting audit via assigned_at/revoked_at.\n///\n/// @namespace Core\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_admins {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key - Unique per admin record, ensures atomic audit trail of admin privilege granting/revoking.\n  id String @id @db.Uuid\n  \n  /// User Foreign Key - The user granted admin privileges. Maintains normalization: admin status never duplicated in other tables.\n  user_id String @db.Uuid\n  \n  /// Admin Status Flag - States whether admin privileges currently apply. Implements requirement for manageability and operational security controls.\n  is_active Boolean\n  \n  /// Grant Timestamp - When privileges were activated. Maintains 3NF: atomic, unambiguous role tracking.\n  assigned_at DateTime @db.Timestamptz\n  \n  /// Revoked Timestamp - Supports audit/review of former admins, and system security compliance. Nullable, no denormalized roll-ups.\n  revoked_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  fk_discussion_board_admins_user_id_discussion_board_users_id discussion_board_users @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  \n  @@unique([user_id])\n  @@index([is_active])\n}\n\n/// User Profiles - Implements the requirement for extended, public-facing user information, as distinct from credentials. \n/// Supports profile fields (display name, avatar, bio, badges) and community metrics, strictly normalized and not duplicating data from users or settings. 3NF guaranteed: one profile per user, no pre-computed/aggregated fields stored here. Ex: upvote totals in views only.\n///\n/// Key relationships: FK to {@link discussion_board_users}, exactly one per user.\n/// Special behaviors: Updates do not affect credentials or privacy settings.\n///\n/// @namespace Core\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_user_profiles {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key - Unique for each profile, used for linking profile data to user. Ensures record atomicity.\n  id String @id @db.Uuid\n  \n  /// User Foreign Key - Connects profile data precisely to its user account. Enforces 1:1 user-profile mapping.\n  user_id String @db.Uuid\n  \n  /// Display Name - Optional, user-customizable nickname for display. 3NF atomic field; example: public boards may show only this.\n  display_name String?\n  \n  /// Avatar URI - Optional, image URL for profile picture. Maintains normalization; avatar is not stored in user, settings, or duplicated elsewhere.\n  avatar_url String? @db.VarChar(80000)\n  \n  /// User Biography - Optional, free-form text for interests, expertise or statements. 3NF: non-aggregated, not used for computation.\n  bio String?\n  \n  /// User Badges - Optional, serialized badge list. 3NF, atomic per user (badge aggregation handled in materialized views as needed). Example: Displaying earned badges.\n  badges String?\n  \n  //----\n  // RELATIONS\n  //----\n  fk_discussion_board_user_profiles_user_id_discussion_board_users_id discussion_board_users @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  \n  @@unique([user_id])\n  @@index([display_name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n  @@index([bio(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// User Settings - Implements private, user-specific preferences and configuration (notification opt-in, accessibility, display, etc.). Normalized to ensure no redundant storage in user, profile, or role tables. Purely atomic per preference field; no rollups or calculated values.\n///\n/// Key relationships: FK to {@link discussion_board_users}, strictly 1:1 mapping.\n/// Special behaviors: Updating settings does not affect user credentials or profile.\n///\n/// @namespace Core\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_user_settings {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key - Single settings record per user. Guarantees atomic, normalized storage without data duplication.\n  id String @id @db.Uuid\n  \n  /// User Foreign Key - Connects each settings record uniquely to a user. Guarantees 1:1 mapping.\n  user_id String @db.Uuid\n  \n  /// Email Notification Opt-in - Whether the user wants to receive email notifications. Implements a requirement for user controllable notification preferences; strictly atomic.\n  notification_email Boolean\n  \n  /// In-app Notification Opt-in - User choice to receive in-app platform notifications. Normalized; no duplication.\n  notification_in_app Boolean\n  \n  /// Accessibility Mode Setting - User choice for accessibility features (e.g., 'high_contrast', 'screen_reader'). Null if default. 3NF, atomic setting for UI/UX compliance.\n  accessibility_mode String?\n  \n  /// Display Density Setting - User preferences for compact or spacious UI layouts. Atomic and normalized.\n  display_density String?\n  \n  //----\n  // RELATIONS\n  //----\n  fk_discussion_board_user_settings_user_id_discussion_board_users_id discussion_board_users @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  \n  @@unique([user_id])\n}",
      "schema-02-discussion.prisma": "/// [Thread Entity] - Implements thread management and structure from requirements. Represents a single discussion topic (thread), allows users to initiate topics, and structures posts under a subject. Enforces 3NF by holding only atomic thread details, linking to user and category. No redundant or derived fields.\n/// - Key relationships: Created by discussion_board_user, assigned to discussion_board_thread_category. Threads have many posts, tags assigned via junction table.\n///\n/// @namespace Discussion\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_thread {\n  //----\n  // COLUMNS\n  //----\n  /// [Thread unique identifier] - Primary key. Atomic and singular. Used for all thread references.\n  id String @id @db.Uuid\n  \n  /// [Thread creator reference] - References thread creator, separating author data from thread content.\n  creator_user_id String @db.Uuid\n  \n  /// [Thread category reference] - Links thread to category for filtering/grouping.\n  category_id String @db.Uuid\n  \n  /// [Thread title] - Atomic, non-derived. E.g., 'Election Impact Discussion'.\n  title String\n  \n  /// [Thread body content] - Initial post, atomic, not derived.\n  body String\n  \n  /// [Lock flag] - Thread lock for moderation (true=locked).\n  is_locked Boolean\n  \n  /// [Pin flag] - Thread highlight at top (true=pinned).\n  is_pinned Boolean\n  \n  /// [Created timestamp] - Atomic event timestamp.\n  created_at DateTime @db.Timestamptz\n  \n  /// [Last updated timestamp] - Audit trail support.\n  updated_at DateTime @db.Timestamptz\n  \n  /// [Deletion timestamp] - Soft deletion for compliance.\n  deleted_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  creator_user discussion_board_users @relation(fields: [creator_user_id], references: [id], onDelete: Cascade)\n  category discussion_board_thread_category @relation(fields: [category_id], references: [id], onDelete: Cascade)\n  \n  discussion_board_post discussion_board_post[]\n  discussion_board_thread_tag discussion_board_thread_tag[]\n  mv_discussion_thread_activity mv_discussion_thread_activity?\n  discussion_board_vote discussion_board_vote[]\n  discussion_board_reaction discussion_board_reaction[]\n  discussion_board_bookmark discussion_board_bookmark[]\n  discussion_board_notification discussion_board_notification[]\n  discussion_board_subscription discussion_board_subscription[]\n  discussion_board_report discussion_board_report[]\n  discussion_board_moderator_action discussion_board_moderator_action[]\n  discussion_board_warning discussion_board_warning[]\n  discussion_board_thread_stats discussion_board_thread_stats?\n  \n  @@index([category_id])\n  \n  @@unique([title, category_id])\n  @@index([created_at, is_pinned])\n  @@index([creator_user_id, deleted_at])\n  @@index([title(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n  @@index([body(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// [Post Entity] - Implements post logic from requirements. Each row represents a post in a thread, including first and replies. 3NF enforced: only atomic fields. Posts reference thread and author, may be parent (for future nesting).\n///\n/// @namespace Discussion\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_post {\n  //----\n  // COLUMNS\n  //----\n  /// [Post unique identifier] - Primary key for individual posts.\n  id String @id @db.Uuid\n  \n  /// [Thread reference] - Links post to its parent thread.\n  thread_id String @db.Uuid\n  \n  /// [Author reference] - Author of the post, normalized away from post.\n  author_user_id String @db.Uuid\n  \n  /// [Parent post] - Nullable for top-level; for reply nesting.\n  parent_post_id String? @db.Uuid\n  \n  /// [Post content] - Main post text, atomic.\n  body String\n  \n  /// [Creation timestamp] - For activity and audit tracking.\n  created_at DateTime @db.Timestamptz\n  \n  /// [Edit timestamp] - Indicates modification/audit history.\n  updated_at DateTime @db.Timestamptz\n  \n  /// [Soft delete timestamp] - Compliance/takedown support.\n  deleted_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  thread discussion_board_thread @relation(fields: [thread_id], references: [id], onDelete: Cascade)\n  author_user discussion_board_users @relation(fields: [author_user_id], references: [id], onDelete: Cascade)\n  parent_post discussion_board_post? @relation(\"recursive\", fields: [parent_post_id], references: [id], onDelete: Cascade)\n  \n  recursive discussion_board_post[] @relation(\"recursive\")\n  discussion_board_comment discussion_board_comment[]\n  discussion_board_vote discussion_board_vote[]\n  discussion_board_reaction discussion_board_reaction[]\n  discussion_board_bookmark discussion_board_bookmark[]\n  discussion_board_notification discussion_board_notification[]\n  discussion_board_subscription discussion_board_subscription[]\n  discussion_board_report discussion_board_report[]\n  discussion_board_moderator_action discussion_board_moderator_action[]\n  discussion_board_warning discussion_board_warning[]\n  \n  @@index([parent_post_id])\n  \n  @@index([thread_id, created_at])\n  @@index([author_user_id, deleted_at])\n  @@index([body(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// [Comment Entity] - Implements comment/reply requirement. Each row is a single comment. 3NF enforced: each comment is atomic, referencing only its parent post/author/optional parent comment.\n///\n/// @namespace Discussion\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_comment {\n  //----\n  // COLUMNS\n  //----\n  /// [Comment unique identifier] - Singular reference.\n  id String @id @db.Uuid\n  \n  /// [Parent post] - Comment is attached to post.\n  post_id String @db.Uuid\n  \n  /// [Author reference] - Creator of this comment.\n  author_user_id String @db.Uuid\n  \n  /// [Parent comment] - Nullable; for replies only.\n  parent_comment_id String? @db.Uuid\n  \n  /// [Comment body] - Atomic text value.\n  body String\n  \n  /// [Created] - Recent activity tracking.\n  created_at DateTime @db.Timestamptz\n  \n  /// [Updated] - Revision/audit-trail.\n  updated_at DateTime @db.Timestamptz\n  \n  /// [Soft delete] - Required for moderation.\n  deleted_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  post discussion_board_post @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  author_user discussion_board_users @relation(fields: [author_user_id], references: [id], onDelete: Cascade)\n  parent_comment discussion_board_comment? @relation(\"recursive\", fields: [parent_comment_id], references: [id], onDelete: Cascade)\n  \n  recursive discussion_board_comment[] @relation(\"recursive\")\n  discussion_board_vote discussion_board_vote[]\n  discussion_board_reaction discussion_board_reaction[]\n  discussion_board_bookmark discussion_board_bookmark[]\n  discussion_board_notification discussion_board_notification[]\n  discussion_board_subscription discussion_board_subscription[]\n  discussion_board_report discussion_board_report[]\n  discussion_board_moderator_action discussion_board_moderator_action[]\n  discussion_board_warning discussion_board_warning[]\n  \n  @@index([parent_comment_id])\n  \n  @@index([post_id, created_at])\n  @@index([author_user_id])\n  @@index([body(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// [Thread Tag Junction Table] - Implements M:N thread-tagging. Junction table only: each row links thread to allowed tag. No tag metadata stored here. Fully normalized (M:N).\n///\n/// @namespace Discussion\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_thread_tag {\n  //----\n  // COLUMNS\n  //----\n  /// [Junction unique identifier] - PK for junction row.\n  id String @id @db.Uuid\n  \n  /// [Thread FK] - Thread to which tag is assigned.\n  thread_id String @db.Uuid\n  \n  /// [Tag FK] - Tag being assigned.\n  tag_id String @db.Uuid\n  \n  /// [Assignment timestamp] - Tagging operation date.\n  created_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  thread discussion_board_thread @relation(fields: [thread_id], references: [id], onDelete: Cascade)\n  tag_category discussion_board_tag_category @relation(fields: [tag_id], references: [id], onDelete: Cascade)\n  \n  discussion_board_subscription discussion_board_subscription[]\n  \n  @@unique([thread_id, tag_id])\n  @@index([tag_id])\n}\n\n/// [Thread Category Table] - Implements thread categorization. Each record is a unique, atomic category. No derived values. Used for grouping threads only.\n///\n/// @namespace Discussion\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_thread_category {\n  //----\n  // COLUMNS\n  //----\n  /// [Category PK] - Used as FK in threads.\n  id String @id @db.Uuid\n  \n  /// [Category code] - Short, unique code ('economy').\n  code String\n  \n  /// [Category name] - Human-friendly, unique.\n  name String\n  \n  /// [Optional details] - Category description.\n  description String?\n  \n  /// [Created] - Auditing.\n  created_at DateTime @db.Timestamptz\n  \n  /// [Updated] - Change/audit tracking.\n  updated_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  discussion_board_thread discussion_board_thread[]\n  \n  @@unique([code])\n  @@unique([name])\n}\n\n/// [Tag Category Table] - Master tag list fulfilling tag requirements. Each is atomic, referenced only by ID from thread tags. 3NF maintained: no aggregates or redundant fields.\n///\n/// @namespace Discussion\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_tag_category {\n  //----\n  // COLUMNS\n  //----\n  /// [Tag PK] - Unique per tag.\n  id String @id @db.Uuid\n  \n  /// [Tag code] - Unique, short value for tag (e.g. 'gdp', 'inflation').\n  code String\n  \n  /// [Tag name] - UI-friendly.\n  name String\n  \n  /// [Details] - UI/admin usage.\n  description String?\n  \n  /// [Created] - Audit/ordering.\n  created_at DateTime @db.Timestamptz\n  \n  /// [Updated] - Change/audit tracking.\n  updated_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  discussion_board_thread_tag discussion_board_thread_tag[]\n  \n  @@unique([code])\n  @@unique([name])\n}\n\n/// [Materialized View: Thread Activity] - Implements denormalized aggregate/reporting requirements for threads. Contains precomputed fields like reply_count for high-performance dashboards; these are omitted from base tables to enforce normalization.\n///\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel mv_discussion_thread_activity {\n  //----\n  // COLUMNS\n  //----\n  /// [Materialized view PK] - Identifies unique thread activity row.\n  id String @id @db.Uuid\n  \n  /// [Thread reference] - 1:1 to thread.id for aggregate metrics.\n  thread_id String @db.Uuid\n  \n  /// [Aggregate] - Precomputed in materialization process.\n  reply_count Int @db.Integer\n  \n  /// [Denormalized timestamp] - Recent post.\n  last_posted_at DateTime? @db.Timestamptz\n  \n  /// [Participant IDs] - Denormalized string, analytics only.\n  participant_user_ids String?\n  \n  //----\n  // RELATIONS\n  //----\n  thread discussion_board_thread @relation(fields: [thread_id], references: [id], onDelete: Cascade)\n  \n  @@unique([thread_id])\n  \n  @@index([reply_count])\n}",
      "schema-03-engagement.prisma": "/// [Vote Tracking] - This implements the 'Upvote/Downvote' and vote aggregation requirements outlined under 'Content Interaction' in 02_discussion_board_feature_requirements.md. \n///\n/// This model records every user's voting action (upvote or downvote) on threads, posts, and comments, allowing for tailored, real-time engagement statistics. Maintains 3NF by using atomic fields for all voting events, referencing both the voter and the target entity by normalized foreign keys. For example, when a user upvotes a comment, a new record is inserted specifying the user, target type, and direction. \n///\n/// Key relationships: references the voting user in discussion_board_user and any of discussion_board_thread, discussion_board_post, or discussion_board_comment for the voted content. \n/// Special behaviors: Each user can only vote once per target; direction is strictly controlled; supports both upvotes and downvotes. Duplicate prevention is enforced by a composite unique index on (voter, target_type, target_id).\n///\n/// @namespace Engagement\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_vote {\n  //----\n  // COLUMNS\n  //----\n  /// [Vote Record Primary Key] - Implements unique identification of every vote operation as required for audit and traceability. This value ensures all vote records remain unique and supports direct lookups. This is fully normalized as it supplies no additional information beside entity identity.\n  id String @id @db.Uuid\n  \n  /// [Voting User] - References the user performing the vote according to requirements for audit and user-based tracking. This field allows for querying all votes cast by a particular user and is always required for normalization and referential integrity. For example, counting all upvotes by a user. Not nullable.\n  user_id String @db.Uuid\n  \n  /// [Thread Target] - Refers to the thread being voted on, if applicable, aligning with the need for thread upvote/downvote as in core feature requirements. Enables normalized storage without duplication. Nullable to permit post/comment targets instead.\n  thread_id String? @db.Uuid\n  \n  /// [Post Target] - Refers to a specific post receiving a vote, only set if the target is a post. Implements normalization by storing the reference atomically. Nullable for other vote types.\n  post_id String? @db.Uuid\n  \n  /// [Comment Target] - References a comment being voted on, per threaded/nested commentary needs. Only set if the vote applies to a comment. Ensures 3NF by isolating relationships. Nullable for other target types.\n  comment_id String? @db.Uuid\n  \n  /// [Vote Direction] - Implements voting direction per 'upvote/downvote' usage. Accepts only 'up' or 'down' as valid values, reflecting the feature requirement. Maintains normalization by storing only atomic values. Used for aggregating vote totals efficiently.\n  direction String\n  \n  /// [Vote Timestamp] - Records when the vote operation took place in accordance with audit and analytics tracking. Fully normalized, supports temporal queries and audit. For example, to track voting frequency or trends over time.\n  created_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  user discussion_board_users @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  thread discussion_board_thread? @relation(fields: [thread_id], references: [id], onDelete: Cascade)\n  post discussion_board_post? @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  comment discussion_board_comment? @relation(fields: [comment_id], references: [id], onDelete: Cascade)\n  \n  @@index([thread_id])\n  @@index([post_id])\n  @@index([comment_id])\n  \n  @@unique([user_id, thread_id, post_id, comment_id])\n  @@index([created_at])\n}\n\n/// [Reaction Log] - Implements the 'Voting & Reactions' and 'Rich Content' feature requirements from 02_discussion_board_feature_requirements.md. \n///\n/// This model records each user's emoji or symbolic reaction (e.g., emoji, like, disagree) attached to threads, posts, or comments. Fully 3NF: relation links stored atomically, no aggregates or counts in this table. For example, if a user reacts with 'like' to a post, an entry references the user, the post, and the type of reaction. \n///\n/// Key relationships: References user, and one of thread, post, or comment. \n/// Special behaviors: Composite unique index enforces only one reaction of a specific type per user/target; arbitrary duplicate prevention. Used to drive aggregates (in views/materialized views) and for real-time UX feedback.\n///\n/// @namespace Engagement\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_reaction {\n  //----\n  // COLUMNS\n  //----\n  /// [Reaction Primary Key] - Unique identifier for each atomic reaction event. Complies with full normalization principles and supports efficient lookups and audit trails.\n  id String @id @db.Uuid\n  \n  /// [Reacting User] - References user account providing the reaction. Required for tracking and personalization. Not nullable for auditability and user-specific features.\n  user_id String @db.Uuid\n  \n  /// [Thread Target] - References target thread if response is at thread level. Nullable if the reaction applies to post or comment.\n  thread_id String? @db.Uuid\n  \n  /// [Post Target] - References post receiving reaction, following atomicity principles. Nullable for thread/comment targets.\n  post_id String? @db.Uuid\n  \n  /// [Comment Target] - Used for reactions attached to a comment. Respects normalized data modeling through nullable field.\n  comment_id String? @db.Uuid\n  \n  /// [Reaction Type] - Captures the symbolic meaning of the user reaction (e.g., 'like', 'laugh', 'disagree', emoji code). Implements the UI/business requirements for expressive reactions and enables normalized lookup tables in future. For example, records 'like' or 'sad'. Restricts values to atomic symbols only. Not nullable.\n  reaction_type String\n  \n  /// [Reaction Timestamp] - Records exact time of reaction, enabling both audit/compliance and analytics functions. Fully normalized field supporting sort and filter operations.\n  created_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  user discussion_board_users @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  thread discussion_board_thread? @relation(fields: [thread_id], references: [id], onDelete: Cascade)\n  post discussion_board_post? @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  comment discussion_board_comment? @relation(fields: [comment_id], references: [id], onDelete: Cascade)\n  \n  @@index([thread_id])\n  @@index([post_id])\n  @@index([comment_id])\n  \n  @@unique([user_id, thread_id, post_id, comment_id, reaction_type])\n  @@index([created_at])\n}\n\n/// [User Bookmarking] - Implements the 'Bookmark/Favorite' feature from the 'Content Interaction' section in 02_discussion_board_feature_requirements.md. \n///\n/// Allows users to save threads, posts, or comments for rapid access from their profile dashboards. Model structure maintains 3NF: each bookmark is atomic (user, target), no derived summary stored in this table. For example, when a user bookmarks a thread, one row is inserted per user/thread pair. \n///\n/// Key relationships: Links to user and exactly one type of content. \n/// Special behaviors: Composite unique index to prevent duplicate user/content bookmarks; each bookmark is atomic, supporting efficient bookmarking/unbookmarking.\n///\n/// @namespace Engagement\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_bookmark {\n  //----\n  // COLUMNS\n  //----\n  /// [Bookmark Primary Key] - Unique per bookmark, with no derived fields, enabling robust tracking and audit.\n  id String @id @db.Uuid\n  \n  /// [Bookmarking User] - The user making the bookmark. Not nullable, as bookmarks must be attributable to a user per requirements.\n  user_id String @db.Uuid\n  \n  /// [Thread Target] - Refers to thread when bookmark targets a whole thread discussion. Nullable for post/comment targeting.\n  thread_id String? @db.Uuid\n  \n  /// [Post Target] - Refers to specific post for more granular bookmarking. Nullable, enabling flexibility in target types.\n  post_id String? @db.Uuid\n  \n  /// [Comment Target] - Allows comments as bookmark targets, covering use cases such as referencing a key point. Nullable for thread/post bookmarks.\n  comment_id String? @db.Uuid\n  \n  /// [Bookmark Timestamp] - Stores creation time to provide temporal analytics, audit trails, and personalized bookmark ordering. Atomic field following normalization principles.\n  created_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  user discussion_board_users @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  thread discussion_board_thread? @relation(fields: [thread_id], references: [id], onDelete: Cascade)\n  post discussion_board_post? @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  comment discussion_board_comment? @relation(fields: [comment_id], references: [id], onDelete: Cascade)\n  \n  @@index([thread_id])\n  @@index([post_id])\n  @@index([comment_id])\n  \n  @@unique([user_id, thread_id, post_id, comment_id])\n  @@index([created_at])\n}\n\n/// [Notifications Log] - Implements notification requirements for alerting users (in-app and email channels) about replies, mentions, moderation actions, etc., as described in the Notifications & Subscriptions features in 02_discussion_board_feature_requirements.md. \n///\n/// Every notification event is atomic and tied to the recipient and optionally the triggering content. Maintains full normalization by separating each notification event from aggregates or status fields. For example, when a user is mentioned in a thread, a row is inserted with recipient, type, linking to triggering content if needed. \n///\n/// Key relationships: Ties to recipient user and optionally to the related thread/post/comment. \n/// Special behaviors: Non-null constraint on recipient; stores read/unread and delivery details for downstream UI logic. Notification history enables auditing and user controls for opt out, etc.\n///\n/// @namespace Engagement\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_notification {\n  //----\n  // COLUMNS\n  //----\n  /// [Notification Primary Key] - Atomic identifier supporting notification history, compliance, and lookup. Fulfills normalization requirement for entity-identity separation.\n  id String @id @db.Uuid\n  \n  /// [Recipient User] - Points to the user receiving the notification. Not nullable per notification and user personalization requirements.\n  recipient_user_id String @db.Uuid\n  \n  /// [Thread Trigger] - If notification triggered by a thread (e.g., being mentioned, thread activity), link to it. Nullable to generalize for other sources.\n  thread_id String? @db.Uuid\n  \n  /// [Post Trigger] - Refers to originating post if present. Nullable for generic notifications.\n  post_id String? @db.Uuid\n  \n  /// [Comment Trigger] - Optionally references comments that triggered notification. Nullable, supporting flexible notification types.\n  comment_id String? @db.Uuid\n  \n  /// [Notification Type] - Specifies nature of notification (e.g., reply, mention, moderator_action, subscription_digest, etc.), per business requirements. Fully atomic and normalized to allow status/analytics grouping. Not nullable.\n  notification_type String\n  \n  /// [Read Status] - Flags whether notification has been acknowledged. Implements user experience requirement for notification badge counts/read indicators. Fully normalized, as only true/false is stored.\n  is_read Boolean\n  \n  /// [Notification Channel] - Delivery channel (e.g., 'in_app', 'email'), mapping to platform business logic. Fully normalized and nullable to allow new channel types in future.\n  channel String\n  \n  /// [Creation Timestamp] - Captures temporal analytics and enables notification sorting; supports full normalization by separating time from any derived status.\n  created_at DateTime @db.Timestamptz\n  \n  /// [Delivery Timestamp] - When notification was sent via the chosen channel. Null if not yet delivered (i.e., queue pending). Fully normalized, non-derived field.\n  delivered_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  recipient_user discussion_board_users @relation(fields: [recipient_user_id], references: [id], onDelete: Cascade)\n  thread discussion_board_thread? @relation(fields: [thread_id], references: [id], onDelete: Cascade)\n  post discussion_board_post? @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  comment discussion_board_comment? @relation(fields: [comment_id], references: [id], onDelete: Cascade)\n  \n  @@index([thread_id])\n  @@index([post_id])\n  @@index([comment_id])\n  \n  @@index([recipient_user_id, created_at])\n}\n\n/// [Notification Subscriptions] - Implements 'Subscribe/Unsubscribe' and alert preferences from Notification & Subscription requirements in 02_discussion_board_feature_requirements.md. \n///\n/// Table records explicit user opt-ins to topics, threads, or tags for notification delivery. Maintains full normalization: each record links subscriber, content, and chosen channel(s), with one row per atomic subscription. For instance, subscribing a user to a thread generates a record referencing the user, thread, and notification channel preferences. No aggregated status (e.g., total subscribers) is denormalized here. \n///\n/// Key relationships: Links user to subscribed content (thread, tag, optionally post/comment for granular alerts). \n/// Special behaviors: Uniqueness constraint prevents duplicate subscriptions to the same channel/source. Supports managing user preferences and batch opt-in/out for analytics and compliance.\n///\n/// @namespace Engagement\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_subscription {\n  //----\n  // COLUMNS\n  //----\n  /// [Subscription Primary Key] - Core unique identifier for tracking a single user/content/channel subscription. Enables efficient lookup and opt-in/out management.\n  id String @id @db.Uuid\n  \n  /// [Subscriber] - User who wants to receive notifications about a content/topic. Not nullable as individual opt-in is a requirement; supports user-specific notification feeds.\n  user_id String @db.Uuid\n  \n  /// [Target Thread] - Subscribes to thread-specific notifications. Nullable to allow for tag or post-based subscriptions per requirements.\n  thread_id String? @db.Uuid\n  \n  /// [Target Tag/Topic] - Allows subscribing to all threads tagged with particular tag. Nullable to support thread or post direct subscription.\n  tag_id String? @db.Uuid\n  \n  /// [Target Post] - For fine-grained notification preference, e.g., replies to a specific post. Nullable for more general subscriptions.\n  post_id String? @db.Uuid\n  \n  /// [Target Comment] - For per-comment subscription, supporting granular, event-based notification delivery. Nullable.\n  comment_id String? @db.Uuid\n  \n  /// [Subscription Channel] - Indicates chosen notification channel for subscription (e.g., 'in_app', 'email'). Fully normalized as it accommodates one value per field. Not nullable for clarity of delivery logic.\n  channel String\n  \n  /// [Subscription Creation Timestamp] - Records when subscription was created, supporting analytics, compliance review, and auditing needs. Atomic field, fully normalized.\n  created_at DateTime @db.Timestamptz\n  \n  /// [Subscription Expiry] - Optional expiry for time-bound subscriptions (e.g., temporary election thread). Nullable for permanent subscriptions. Fully normalized, adhering to business rules.\n  expires_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  user discussion_board_users @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  thread discussion_board_thread? @relation(fields: [thread_id], references: [id], onDelete: Cascade)\n  tag discussion_board_thread_tag? @relation(fields: [tag_id], references: [id], onDelete: Cascade)\n  post discussion_board_post? @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  comment discussion_board_comment? @relation(fields: [comment_id], references: [id], onDelete: Cascade)\n  \n  @@index([thread_id])\n  @@index([tag_id])\n  @@index([post_id])\n  @@index([comment_id])\n  \n  @@unique([user_id, thread_id, tag_id, post_id, comment_id, channel])\n  @@index([created_at])\n}",
      "schema-04-moderation.prisma": "/// [Report Entity] - This implements the reporting and abuse workflow requirement from section 4 of the feature requirements. Enables users to flag inappropriate content for moderator review, centralizing reports for transparency and action tracking. Maintains 3NF by referencing precise users and content without duplicating user or content data. For example, when a post is flagged as offensive, a record is created here for moderator workflow. \n/// Key relationships: Links to reported user (optional), reporting user, and polymorphic content (thread/post/comment). Moderators use this to manage abuse workflows. \n/// Special behaviors: Cannot initiate for non-existent content; only one open report per user/content at a time is allowed.\n///\n/// @namespace Moderation\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_report {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary Key] - Unique identifier for each report. Implements the entity's uniqueness requirement. Standard UUID, ensures normalization. For example, used as reference in moderation actions.\n  id String @id @db.Uuid\n  \n  /// [Offending User FK] - The user reported for abusive content. Enables targeted moderation and disciplinary action. Maintains 3NF by only storing the user reference. For example, a spammer being reported on a post. Nullable for content without registered user (e.g., deleted).\n  reported_user_id String? @db.Uuid\n  \n  /// [Reporting User FK] - The user generating the report. Tracks abuse sources and enables accountability. Maintains 3NF as a direct reference. For example, the victim or witness reporting the abuse. Not nullable.\n  reporting_user_id String @db.Uuid\n  \n  /// [Thread FK] - Thread being reported, for thread-level abuse. Null for post/comment-level reports. Maintains normalization by referencing rather than duplicating content.\n  thread_id String? @db.Uuid\n  \n  /// [Post FK] - Post being reported, for post-level abuse. Null for thread/comment-level reports. Keeps schema normalized.\n  post_id String? @db.Uuid\n  \n  /// [Comment FK] - Comment being reported. Null for thread/post-level reports. Maintains field-level normalization.\n  comment_id String? @db.Uuid\n  \n  /// [Report Status] - Implements workflow state tracking from moderation requirements. Indicates if a report is 'pending', 'resolved', or 'dismissed'. Normalized (atomic, not derived). For example, status transitions after moderator review. Enum expected in application logic.\n  status String\n  \n  /// [Report Category] - Abuse type such as 'spam', 'harassment', 'off-topic'. Enables analytical grouping and moderator prioritization. Maintains normalization by not repeating explanations—only concise tags. For example, allows dashboard filtering of spam vs. harassment.\n  category String\n  \n  /// [Report Timestamp] - When abuse was reported. Auditable, normalized, atomic. Used to measure compliance with response time targets.\n  submitted_at DateTime @db.Timestamptz\n  \n  /// [Resolution Timestamp] - When a moderator resolved the report. Atomic, nullable (unresolved when null), keeps schema normalized.\n  resolved_at DateTime? @db.Timestamptz\n  \n  /// [Report Details] - Freeform explanation from reporter. Fully normalized, as each instance is atomic. For example, a user's description of incident.\n  details String\n  \n  //----\n  // RELATIONS\n  //----\n  reported_user discussion_board_users? @relation(\"discussion_board_report_of_reported_user_id\", fields: [reported_user_id], references: [id], onDelete: Cascade)\n  reporting_user discussion_board_users @relation(\"discussion_board_report_of_reporting_user_id\", fields: [reporting_user_id], references: [id], onDelete: Cascade)\n  thread discussion_board_thread? @relation(fields: [thread_id], references: [id], onDelete: Cascade)\n  post discussion_board_post? @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  comment discussion_board_comment? @relation(fields: [comment_id], references: [id], onDelete: Cascade)\n  \n  discussion_board_moderator_action discussion_board_moderator_action[]\n  discussion_board_ban discussion_board_ban[]\n  \n  @@index([thread_id])\n  @@index([post_id])\n  @@index([comment_id])\n  \n  @@unique([reporting_user_id, thread_id, post_id, comment_id])\n  @@index([status])\n  @@index([reported_user_id, submitted_at])\n  @@index([details(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// [Moderator Action Log] - Implements audit trail for moderator interventions as per Moderation Tools requirements (Section 8). Tracks every moderation event, providing historical accountability and clarity for escalated workflows. Maintains full normalization: stores only atomic reference to affected entities. For example, documenting a post removal or warning issued.\n/// Key relationships: Linked to moderator, reported user, report, and content (thread/post/comment). Supports analytics and compliance.\n/// Special behaviors: Immutable history (never updated, only appended).\n///\n/// @namespace Moderation\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_moderator_action {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary Key] - Unique action id for every intervention. Atomic, normalized, for referencing in audits.\n  id String @id @db.Uuid\n  \n  /// [Moderator FK] - The moderator performing the action. Maintains normalized link for accountability and reports. Not nullable.\n  moderator_id String @db.Uuid\n  \n  /// [User FK] - User affected by the action (could be warned, banned, post deleted). Maintains normalization and supports analytics (e.g., repeat offenders). Nullable for system-level actions.\n  user_id String? @db.Uuid\n  \n  /// [Report FK] - Direct link to triggering report (if applicable). Enables action-report traceability. Nullable for proactive mod actions (not user-initiated).\n  report_id String? @db.Uuid\n  \n  /// [Thread FK] - Thread affected by this action (optional). Maintains normalized reference.\n  thread_id String? @db.Uuid\n  \n  /// [Post FK] - Post affected. Null unless specifically post-level intervention.\n  post_id String? @db.Uuid\n  \n  /// [Comment FK] - Comment affected. Nullable, for comment-level moderation only.\n  comment_id String? @db.Uuid\n  \n  /// [Action Type] - Enumerates mod actions such as 'deleted', 'locked', 'warned', 'banned', 'approved', etc. Atomic per row. Application logic enforces allowed set. For example, tracks instance when moderator locks a thread.\n  action_type String\n  \n  /// [Moderator Reason] - Justification for action, entered by mod. Fully normalized and atomic per event; clarifies decision context. For example, details why a post was removed.\n  reason String\n  \n  /// [Timestamp] - Date/time when action occurred. Atomic, 3NF, enables time-based analysis.\n  created_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  moderator discussion_board_moderators @relation(fields: [moderator_id], references: [id], onDelete: Cascade)\n  user discussion_board_users? @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  report discussion_board_report? @relation(fields: [report_id], references: [id], onDelete: Cascade)\n  thread discussion_board_thread? @relation(fields: [thread_id], references: [id], onDelete: Cascade)\n  post discussion_board_post? @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  comment discussion_board_comment? @relation(fields: [comment_id], references: [id], onDelete: Cascade)\n  \n  @@index([user_id])\n  @@index([report_id])\n  @@index([thread_id])\n  @@index([post_id])\n  @@index([comment_id])\n  \n  @@index([action_type])\n  @@index([moderator_id, created_at])\n  @@index([reason(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// [Global Audit Log] - Implements operational/audit requirements for compliance (Section 3, Non-Functional). Captures every high-impact admin or moderator change—user status, settings, board config, bans, etc. Designed for transparency and tamper-proof history. 3NF compliance: references changed entity and actor, avoids non-atomic fields. For example, logs every ban, warning, or system setting change.\n/// Key relationships: Relates to admin/moderator, optionally affected user and system objects.\n/// Special behaviors: Write-only history, never updated (immutable log).\n///\n/// @namespace Moderation\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_audit_log {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary Key] - Unique audit entry. Holds atomic record reference. Used for compliance reviews and investigations.\n  id String @id @db.Uuid\n  \n  /// [Actor FK] - User/mod/admin responsible for action. Direct accountability for each logged event. Always populated.\n  actor_id String @db.Uuid\n  \n  /// [Affected User FK] - User affected by event, if applicable (nullable for system actions). Keeps 3NF, as atomic ref.\n  affected_user_id String? @db.Uuid\n  \n  /// [Entity Type] - Indicates what was affected: 'user', 'setting', 'thread', etc. Atomic per log entry. Maintains normalization by not including redundant fields.\n  entity_type String\n  \n  /// [Entity ID] - Universal ID to pair with entity_type for object lookup. Atomic, normalized reference for all logged object types.\n  entity_id String @db.Uuid\n  \n  /// [Action] - Verb describing event: 'ban', 'unban', 'setting_change', 'delete', etc. 3NF compliance, only single type per row.\n  action String\n  \n  /// [Details] - Optional, atomic, freeform field allowing extra commentary for audits. Example: rationale behind a setting change.\n  details String\n  \n  /// [Timestamp] - When audit entry recorded. Atomic, supports time-based filtering.\n  created_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  actor discussion_board_users @relation(\"discussion_board_audit_log_of_actor_id\", fields: [actor_id], references: [id], onDelete: Cascade)\n  affected_user discussion_board_users? @relation(\"discussion_board_audit_log_of_affected_user_id\", fields: [affected_user_id], references: [id], onDelete: Cascade)\n  \n  @@index([affected_user_id])\n  \n  @@index([entity_type, entity_id])\n  @@index([actor_id, created_at])\n  @@index([details(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// [Warning Entity] - Implements user warning workflow, supporting progressive discipline before bans. Complies with feature requirement for moderation and sanction history (Section 8). Ensures warnings are structured, individually reference mod and user, and retained for audit. Maintains 3NF: only links, never duplicates, user or mod info. E.g., user warned for offensive content, with one row per event.\n/// Key relationships: Directly linked to moderator and user; optionally references related content.\n/// Special behaviors: Sequential warnings tracked for progressive moderation.\n///\n/// @namespace Moderation\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_warning {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary Key] - Unique id per warning. Enables audit traceability, atomic field. Used to reference a particular warning for bans/escalation.\n  id String @id @db.Uuid\n  \n  /// [User FK] - The warned user. Maintains normalization by referencing only. For example, a user accumulating multiple warnings.\n  user_id String @db.Uuid\n  \n  /// [Moderator FK] - Mod issuing warning, ensures accountability and supports progressive discipline audit. Not nullable.\n  moderator_id String @db.Uuid\n  \n  /// [Thread FK] - The thread which triggered the warning (if relevant). Normalized, optional.\n  thread_id String? @db.Uuid\n  \n  /// [Post FK] - The post triggering the warning, if relevant. Maintained as atomic/optional.\n  post_id String? @db.Uuid\n  \n  /// [Comment FK] - Focused on content-related warnings. Maintains normalization, optional.\n  comment_id String? @db.Uuid\n  \n  /// [Warning Reason] - Moderator-issued specific reason. 3NF compliance, atomic string. E.g., citing violation category.\n  reason String\n  \n  /// [Issued Timestamp] - When warning was given. Enables time-based moderation analytics and is normalized per event.\n  issued_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  user discussion_board_users @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  moderator discussion_board_moderators @relation(fields: [moderator_id], references: [id], onDelete: Cascade)\n  thread discussion_board_thread? @relation(fields: [thread_id], references: [id], onDelete: Cascade)\n  post discussion_board_post? @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  comment discussion_board_comment? @relation(fields: [comment_id], references: [id], onDelete: Cascade)\n  \n  discussion_board_ban discussion_board_ban[]\n  \n  @@index([moderator_id])\n  @@index([thread_id])\n  @@index([post_id])\n  @@index([comment_id])\n  \n  @@index([user_id, issued_at])\n  @@index([reason(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// [Ban Entity] - Implements account ban/suspension workflow per moderation and compliance requirements. Tracks bans (temporary, permanent) individually. Strict 3NF: only links to user, moderator, triggering action or report. For example, permanent ban for repeat abuse.\n/// Key relationships: Points to user, moderator, optional warning or report triggering the ban. Used by system for access control/state changes.\n/// Special behaviors: Bans are never updated, only created (history preserved for compliance).\n///\n/// @namespace Moderation\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_ban {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary Key] - Unique ban record. Used for referencing in audit logs and reversals. Normalization: one row per ban event.\n  id String @id @db.Uuid\n  \n  /// [User FK] - Banned user. Normalization: ensures canonical reference; never duplicated user information.\n  user_id String @db.Uuid\n  \n  /// [Moderator FK] - Moderator responsible for ban/termination. Only references, never duplicates mod identity.\n  moderator_id String @db.Uuid\n  \n  /// [Warning FK] - Warning event that triggered this ban (if relevant). Null unless escalation. Maintains normalization.\n  warning_id String? @db.Uuid\n  \n  /// [Report FK] - Abuse report that resulted in ban (if relevant). Provides direct traceability and keeps schema normalized.\n  report_id String? @db.Uuid\n  \n  /// [Ban Type] - 'temporary' or 'permanent'. Application logic defines allowed enum. Keeps atomic, normalized per ban row.\n  ban_type String\n  \n  /// [Ban Reason] - Atomic string detailing moderator justification for ban.\n  reason String\n  \n  /// [Ban Start] - When ban was applied. For ongoing compliance and system checks.\n  banned_at DateTime @db.Timestamptz\n  \n  /// [Ban Expiry] - Ban end (null if permanent). Keeps type atomic and supports dynamic unbanning.\n  expires_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  user discussion_board_users @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  moderator discussion_board_moderators @relation(fields: [moderator_id], references: [id], onDelete: Cascade)\n  warning discussion_board_warning? @relation(fields: [warning_id], references: [id], onDelete: Cascade)\n  report discussion_board_report? @relation(fields: [report_id], references: [id], onDelete: Cascade)\n  \n  @@index([moderator_id])\n  @@index([warning_id])\n  @@index([report_id])\n  \n  @@index([user_id, banned_at])\n  @@index([reason(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}",
      "schema-05-analytics.prisma": "/// Thread Statistics - This implements the thread analytics and performance tracking requirement from the requirements document (see 'Analytics Dashboard', 'Content Quality Metrics', and 'Trending Topics' features). \n///\n/// Provides essential storage for per-thread statistics such as the number of posts, comments, upvotes, downvotes, bookmarks, and abuse reports. Maintains 3NF by separating out aggregate/thread-level metrics from the main thread/post tables, avoiding redundancy or transitive dependencies. For example, this table is queried to highlight trending threads on dashboards or to trigger moderation review if abuse counts spike.\n///\n/// Key relationships: references each thread (discussion_board_thread_id) directly; thread stats may be joined with user, moderator, or content abuse metric tables for advanced reporting. \n/// Special behaviors: Statistics are updated through dedicated service logic and batch jobs; all values reset if threads are deleted. No calculated fields here—pre-calculation is only allowed in mv_ materialized views for reporting snapshots.\n///\n/// @namespace Analytics\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_thread_stats {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key - Implements unique, stable identification for each thread statistics record.\n  ///\n  /// Uniquely identifies statistics per thread. Ensures normalization as the single-row-per-thread record anchor. Example: Used as the foreign key reference from other analytic or reporting systems.\n  id String @id @db.Uuid\n  \n  /// Thread Reference - Implements the mapping from statistics to the corresponding thread.\n  ///\n  /// Connects per-thread statistics to its primary discussion thread. Enforces normalization and referential integrity: every set of stats must belong to a valid thread. Example: When calculating trending topics, stats are filtered/grouped by this association. Constraint: Unique per thread.\n  discussion_board_thread_id String @db.Uuid\n  \n  /// Post Count - Implements tracking of total posts per thread.\n  ///\n  /// Atomic and normalized: not derived, just incremented via logic. Example: Used for ranking or showing thread activity level.\n  post_count Int @db.Integer\n  \n  /// Comment Count - Implements tracking of comment volume per thread.\n  ///\n  /// Normalized, not computed from joins—only incremented or decremented on comment add/delete. For example, used to quickly filter threads with high participation.\n  comment_count Int @db.Integer\n  \n  /// Upvote Count - Implements part of engagement analytics per thread.\n  ///\n  /// Atomic, directly updated, not derived from votes table. Used for popularity display and filters. Normalized and non-redundant.\n  upvote_count Int @db.Integer\n  \n  /// Downvote Count - Complements engagement analytics, enables controversial thread detection.\n  ///\n  /// Atomic field, directly maintained—not computed on the fly or denormalized from votes. Used in sort/filter, supports normalization by not including aggregate scores elsewhere.\n  downvote_count Int @db.Integer\n  \n  /// Bookmark Count - Tracks unique user bookmarks for this thread.\n  ///\n  /// Atomic integer, normalized: no redundant storage in user or thread tables. Helps power user feed and favorites lists.\n  bookmark_count Int @db.Integer\n  \n  /// Abuse Report Count - Implements monitoring/reporting for moderation triggers.\n  ///\n  /// Atomic, not computed; updated as users report content. For example, threads hitting a certain threshold show up in moderation dashboards. Supports auditing and quality control without polluting main business records.\n  abuse_report_count Int @db.Integer\n  \n  /// Created At Timestamp - Implements record origination tracking.\n  ///\n  /// Atomic timestamp, supports audit, migration, and compliance. Example: Used by analytics for time-based trends.\n  created_at DateTime @db.Timestamptz\n  \n  /// Updated At Timestamp - Implements update tracking for stats changes.\n  ///\n  /// Ensures all stats edits are tracked and assists with synchronization/auditing. Required for compliant analytics and consistent service behavior.\n  updated_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  discussion_board_thread discussion_board_thread @relation(fields: [discussion_board_thread_id], references: [id], onDelete: Cascade)\n  \n  @@unique([discussion_board_thread_id])\n  @@index([created_at])\n  @@index([upvote_count, downvote_count])\n}\n\n/// User Activity Metrics - This implements the 'Profile Activity Feed' and user engagement analytics features (see 'User Profiles & Activity', 'Analytics Dashboard').\n///\n/// Stores usage statistics for each user including counts of threads authored, comments, upvotes/downvotes made, reports submitted, and bookmarks created. 3NF compliant by having ONLY activity metrics per user—no denormalized data. For example, this table feeds user reputation calculations and enables profile activity views.\n///\n/// Key relationships: references discussion_board_user, discussion_board_user_profile for detailed join queries. Used by moderators/admins to assess user activity patterns. Special behaviors: Reset or anonymize activity counts for deleted/deactivated users as part of privacy compliance.\n///\n/// @namespace Analytics\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_user_activity {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key - Uniquely identifies each user activity metrics record.\n  ///\n  /// Guarantees one-to-one mapping with user entity for their aggregated metrics. 3NF: no derived data here—core activity metrics only.\n  id String @id @db.Uuid\n  \n  /// User Reference - Links metrics to an individual user account.\n  ///\n  /// Supports referential integrity and 3NF: all metrics are for a real, valid user only. Example: Used when building profile dashboards or leaderboard features.\n  discussion_board_user_id String @db.Uuid\n  \n  /// Threads Authored - Counts threads created by this user.\n  ///\n  /// Atomic, not derived elsewhere. Used in calculating engagement or reputation features.\n  threads_authored Int @db.Integer\n  \n  /// Posts Authored - Number of initial posts (not comments) started by the user.\n  ///\n  /// Maintains normalization—no redundancy with thread or post tables.\n  posts_authored Int @db.Integer\n  \n  /// Comments Authored - Tracks comment participation for this user.\n  ///\n  /// Atomic value, 3NF compliant. Used in moderation, reputation calculations, and personalized analytics.\n  comments_authored Int @db.Integer\n  \n  /// Upvotes Given - Number of times the user upvoted a thread or comment.\n  ///\n  /// Normalization: never derived, direct update only. Enables analysis of engagement and supports anti-abuse monitoring.\n  upvotes_given Int @db.Integer\n  \n  /// Downvotes Given - Number of downvote actions performed by user.\n  ///\n  /// Atomic and non-redundant. Used for abuse pattern analysis and community flavor metrics.\n  downvotes_given Int @db.Integer\n  \n  /// Reports Made - Total reports submitted by user for abusive/inappropriate content.\n  ///\n  /// Enables anti-abuse metrics, moderation insights, and potential restrictions for frequent false reporters. 3NF: only original counts are stored.\n  reports_made Int @db.Integer\n  \n  /// Bookmarks Created - Tracks count of bookmarks a user has made.\n  ///\n  /// Atomic field for UX features like favorites. Complies with normalization—bookmarks data not duplicated here.\n  bookmarks_created Int @db.Integer\n  \n  /// Created At Timestamp - When the activity metrics record was created.\n  ///\n  /// Supports audit and traceability for compliance and analytics.\n  created_at DateTime @db.Timestamptz\n  \n  /// Updated At Timestamp - Last time user metrics were updated.\n  ///\n  /// Required for synchronization, analytics workflows, and audit trail features.\n  updated_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  discussion_board_user discussion_board_users @relation(fields: [discussion_board_user_id], references: [id], onDelete: Cascade)\n  \n  @@unique([discussion_board_user_id])\n  @@index([created_at])\n}\n\n/// Content Abuse Metrics - Implements the monitoring and metric-tracking requirements for abusive, spammy, or otherwise policy-violating activities (see Non-Functional: Security, Moderation & Abuse Prevention, and Analytics Dashboard requirements).\n///\n/// Tracks per-day metrics for flagged posts, abuse types, resolution times, auto-hides, moderator escalations, and false positive rates. Maintains 3NF by keeping only atomic, event-driven counts—no derived aggregates or flags. Example: Used by moderators and system analysts to determine policy needs, spot abuse trends, and audit moderator efficiency.\n///\n/// Key relationships: Optionally references moderator for moderator-action mapping. Special behaviors: All time fields are UTC-normalized; no calculated fields—historical snapshots for trends must use mv_ tables.\n///\n/// @namespace Analytics\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_content_abuse_metric {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key - Unique identifier for each metric record, one per day+category.\n  ///\n  /// Ensures uniqueness for each set of abuse metrics tracked, supporting 3NF and compliance.\n  id String @id @db.Uuid\n  \n  /// Moderator Reference - If applicable, links the metrics to a specific moderator for escalation/resolution mapping.\n  ///\n  /// 3NF: Foreign key nullable—some metrics may not involve a moderator (e.g., automated actions).\n  moderator_id String? @db.Uuid\n  \n  /// Metric Date - Calendar day for which these metrics are tracked. Stored as ISO date string in yyyy-mm-dd format due to Prisma/JSON schema type constraints.\n  ///\n  /// Helps enforce normalized per-day storage. Example usage: plotting abuse events over time.\n  date String\n  \n  /// Abuse Type - String field categorizing abuse/spam type for the metric row (e.g., spam, hate_speech, offensive_language, off_topic, etc.).\n  ///\n  /// Maintains atomic (non-derived) data, supports normalization. Later analytics may perform grouping or pivoting on this field.\n  abuse_type String\n  \n  /// Flagged Count - Number of posts/comments flagged as abusive for this type/date.\n  ///\n  /// Atomic, not calculated. Example: Input into moderation alerts, compliance or escalation triggers.\n  flagged_count Int @db.Integer\n  \n  /// Auto Hidden Count - Number of posts/comments that were auto-hidden by policy on this date/type.\n  ///\n  /// Enables monitoring of automated moderation effectiveness and supports normalization by centralizing such stats here only.\n  auto_hidden_count Int @db.Integer\n  \n  /// Escalation Count - Metric for abuse events escalated to a moderator or admin.\n  escalation_count Int @db.Integer\n  \n  /// False Positive Count - Number of flagged events later cleared as false positives.\n  ///\n  /// Atomic and normalized; only tracked here, not in user or content tables. For example, helps track the impact of moderation improvements or AI upgrades.\n  false_positive_count Int @db.Integer\n  \n  /// Average Resolution Time (Minutes) - Time spent (mean) to resolve, measured in minutes.\n  ///\n  /// Atomic metric, supports moderation workflow optimization. Normalized: full timestamps elsewhere, metric-only here. Used in dashboard averages and efficiency reports.\n  avg_resolution_time_minutes Int @db.Integer\n  \n  /// Created At Timestamp - Origination time of this metric record.\n  ///\n  /// Ensures compliance, allows for backfill/audit. Supports time-based analytics for abuse detection improvements.\n  created_at DateTime @db.Timestamptz\n  \n  /// Updated At Timestamp - When this record was last updated.\n  ///\n  /// Used for auditing statistics and ETL workflows in analytics pipelines.\n  updated_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  discussion_board_moderator discussion_board_moderators? @relation(fields: [moderator_id], references: [id], onDelete: Cascade)\n  \n  @@unique([date, abuse_type])\n  @@index([date, flagged_count])\n  @@index([moderator_id, escalation_count])\n}",
      "schema-06-utility.prisma": "/// [Platform Configuration] - This implements the global platform and board-level settings requirement detailed in the feature, security, and privacy sections of the requirements analysis report (see 02_discussion_board_feature_requirements.md, 03_discussion_board_nonfunctional_and_operational_requirements.md). \n///\n/// This model enables administrators to store and manage mutable configuration values that affect discussion board functionality, presentation, and enforcement of rules—such as registration policy, default privacy, feature toggles (like post editing, image uploads), and branding. Maintains strict 3NF normalization by storing only atomic configuration entries, each identified by a symbolic key. No settings are duplicated, and all relations to system config (for default inheritance) are managed externally. For example, to toggle whether new threads require approval, a setting with key 'require_thread_approval' can be set to true or false. \n///\n/// Key relationships: Should be referenced by system components enforcing runtime behavior; no hard foreign keys to application-level models (stateless coupling).\n/// Special behaviors: Uniqueness by 'key' is enforced. Deletion disables the setting but doesn't remove its value (for audit).\n///\n/// @namespace Utility\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_setting {\n  //----\n  // COLUMNS\n  //----\n  /// [Unique Setting Key] - Implements the unique identification requirement for persistent board settings.\n  /// Business meaning: Each setting must be addressable, auditable and updatable atomically. Ensures normalization by using a UUID-based identifier, aligning with best practices for distributed systems.\n  /// For example, to update the 'default_thread_sort' behavior, the corresponding setting row is addressed via this field.\n  id String @id @db.Uuid\n  \n  /// [Setting Key] - Implements symbolic addressing of each configuration aspect as required for modularity and feature toggling (see system configuration requirements).\n  /// Business meaning: Allows individual settings (like 'allow_file_uploads', 'enable_external_login') to be toggled/queried atomically. Ensures strict normalization as each entry is uniquely keyed and non-redundant. For example, 'require_email_verification' represents the signup policy toggle.\n  key String\n  \n  /// [Atomic Value] - Stores the configuration value as required for runtime lookups and mutation.\n  /// Business meaning: Enables flexible value types (as string), supporting boolean, number, JSON-stringified objects where needed. Remains normalized as all values are atomic and not derived; interpretation is handled in business logic. Example usage: 'false' for 'require_thread_approval' disables moderation queue for threads.\n  value String\n  \n  /// [Human-Readable Description] - Implements administrator tooling and auditability requirements. \n  /// Business meaning: Provides context about the setting’s effect and usage, supporting maintainability and transparency. For example, \"If true, moderators must approve every new thread.\" This is atomic and ensures no duplicated documentation.\n  /// Nullable, as not all settings require verbose descriptions.\n  description String?\n  \n  /// [Creation Timestamp] - Supports audit trail, compliance, and troubleshooting workflows (03_discussion_board_nonfunctional_and_operational_requirements.md).\n  /// Business meaning: Allows admins to audit when this setting was introduced. Ensures normalization as the timestamp is intrinsic to the row, not derived. Example: Used in audit reporting to trace config changes over time.\n  created_at DateTime @db.Timestamptz\n  \n  /// [Last Update Timestamp] - Tracks when the setting was modified, supporting audit logs and compliance.\n  /// Business meaning: Used to verify when a given setting was last changed, e.g. for privacy compliance or rollback. Maintains normalization as this field is not computed from others.\n  /// Example: On toggling 'allow_external_sharing', this gets refreshed automatically.\n  updated_at DateTime @db.Timestamptz\n  \n  /// [Soft-Delete Marker] - Implements the logical deletion audit and recovery requirement (nonfunctional section on compliance, disaster recovery).\n  /// Business meaning: Marks a setting as inactive rather than physically deleting, supporting rollback and postmortem.\n  /// Ensures normalization by storing row state atomically. Example: Disabled settings can be referenced for rollback or audit purposes.\n  deleted_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  @@unique([key])\n  @@index([deleted_at])\n}\n\n/// [System-wide Default Configuration] - This implements the requirement for global, default system configuration (see section on configuration inheritance and compliance, 03_discussion_board_nonfunctional_and_operational_requirements.md).\n///\n/// This model provides a single authoritative set of configuration values, typically set by the system owner, which cascade as defaults for all board-level settings unless overridden in discussion_board_setting. Maintains 3NF by holding atomic config fields only—no computed values or redundancies. For example, setting the system-wide default for 'max_upload_size' and 'invite_policy'.\n///\n/// Key relationships: Not directly referenced by board instances or users (stateless), but queried by system logic to resolve runtime policies for all boards.\n/// Special behaviors: Only one row should exist at a time in most deployments; multiple configs used for versioning, which should be enforced by application/business logic outside DB.\n///\n/// @namespace Utility\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_system_config {\n  //----\n  // COLUMNS\n  //----\n  /// [System Config Unique ID] - Implements the need for identifying each system-wide configuration set (for versioning, audit, or recovery). \n  /// Business meaning: Allows referencing, updating, or rolling back changes atomically. Maintains normalization as an atomic UUID not derived from other fields. For example, on full platform config migration, a new row is inserted and old one marked deleted.\n  id String @id @db.Uuid\n  \n  /// [Configuration Key] - Names the specific configuration point in the system, as per requirement for admin-driven, symbolic settings.\n  /// Business meaning: Flexible to store any system-level default (such as 'default_privacy_level' or 'max_upload_size_bytes'). Strict normalization: every configuration item is atomic, logical grouping is by application logic. Example: Setting 'enable_registration' to allow/disallow new accounts.\n  key String\n  \n  /// [Atomic Value] - The actual value for the specified config key. May be used as a string, boolean, numeric, or JSON-stringified object by external logic.\n  /// Business meaning: Enables maximum runtime flexibility (see dynamic config requirement) without denormalization—all values stored atomically as string. For example, storing '100' as the default threads-per-page setting.\n  value String\n  \n  /// [Description] - Explains what the configuration controls for admin context, as required for nonfunctional requirements on maintainability and transparency.\n  /// Business meaning: Helps admins understand system default values. Nullable (not all settings need documentation). Maintains normalization—each row documents one config point. Example: 'Default limit for file attachment size, in bytes.'\n  description String?\n  \n  /// [Creation Timestamp] - Records when this configuration entry was created, supporting compliance and configuration audit trails.\n  /// Business meaning: Used for recovery and forensic tracking of policy changes. Strictly normalized—atomic to the row. Example: Auditing how system-wide spam filter rules evolved.\n  created_at DateTime @db.Timestamptz\n  \n  /// [Update Timestamp] - Tracks updates, enabling controlled config changes and auditing (see disaster recovery and compliance requirements).\n  /// Business meaning: Ensures that admins can investigate when key system defaults last changed. Not computed/derived from other fields, maintaining strict normalization.\n  updated_at DateTime @db.Timestamptz\n  \n  /// [Soft-Delete Marker] - Implements requirements for auditability and rollback in global config management.\n  /// Business meaning: Instead of being dropped, obsolete configs are softly deleted by setting this field, preserving history for compliance. Nullable for active rows. For example, marking outdated 'default_notification_email_policy'.\n  deleted_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  @@index([key])\n  @@index([deleted_at])\n}",
      "main.prisma": "generator client {\n  provider        = \"prisma-client-js\"\n  previewFeatures = [\"postgresqlExtensions\", \"views\"]\n  binaryTargets   = [\"native\"]\n}\ndatasource db {\n  provider   = \"postgresql\"\n  url        = env(\"DATABASE_URL\")\n  extensions = []\n}\ngenerator markdown {\n  provider = \"prisma-markdown\"\n  output   = \"../docs/ERD.md\"\n}"
    },
    "compiled": {
      "type": "success",
      "schemas": {
        "schema-01-core.prisma": "/// User Accounts - This implements the requirement for individual user accounts, supporting registration, authentication, and all user-related auditability. \n///\n/// Provides foundational user representation for all feature requirements involving user actions (posts, comments, votes, favorites, reports). Maintains full 3NF compliance by storing only atomic user identity attributes, with all other aspects normalized into related tables. For example, user display data and settings are not stored here but in dedicated profile/settings tables.\n///\n/// Key relationships: Connects to {@link discussion_board_user_profiles}, {@link discussion_board_user_settings}, thread/posts/comments. \n/// Special behaviors: Uniqueness enforced on email/username; supports audit trails without calculated fields.\n///\n/// @namespace Core\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_users {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key - Implements unique identification per user. \n  /// Ensures 1NF and 3NF by uniquely identifying each user record. All business relationships and entity references use this UUID.\n  /// For example, a user's posts or profile will reference this id.\n  id String @id @db.Uuid\n\n  /// Username - Implements unique, human-friendly identifier for sign-in and public presence. Satisfies requirement for user authentication and personalized identifiers. \n  /// Maintains 3NF by storing as atomic value; not duplicated elsewhere. For example, used to mention users in threads.\n  username String\n\n  /// Email - Implements unique login credential and notification address, required for registration, password recovery, and business operations involving communication. \n  /// Ensures 3NF and security compliance by isolating PII to core user record. Format validated as email. For example, delivery of account recovery links or notifications.\n  email String\n\n  /// Password Hash - Implements security requirements for credential storage. \n  /// Contains only the securely hashed password, never the raw value. Maintains 3NF by being strictly an atomic credential. For example, used on authentication attempt checks.\n  password_hash String\n\n  /// Active Flag - Supports account enable/disable flow as required by admin/moderation policies. \n  /// Maintains normalization (3NF) by not encoding user status elsewhere. For example, a suspended user is marked inactive here.\n  is_active Boolean\n\n  /// Created Timestamp - Represents the time of user registration. Implements requirement for audit trail and account lifecycle analysis. \n  /// Atomic, non-calculated field in strict 3NF. Example: find all accounts registered in a given period.\n  created_at DateTime @db.Timestamptz\n\n  /// Last Updated Timestamp - Tracks last mutation of user record (e.g., profile update, password change). \n  /// Fulfills audit, compliance, and operational needs. Normalized, atomic. Used for detecting recently changed accounts.\n  updated_at DateTime @db.Timestamptz\n\n  /// Soft Delete Timestamp - Implements requirement for recoverable account deletion. \n  /// Nullable. When set, the user is logically deleted for compliance or user-right-to-be-forgotten scenarios. No denormalization.\n  deleted_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  discussion_board_moderators                    discussion_board_moderators?\n  discussion_board_admins                        discussion_board_admins?\n  discussion_board_user_profiles                 discussion_board_user_profiles?\n  discussion_board_user_settings                 discussion_board_user_settings?\n  discussion_board_thread                        discussion_board_thread[]\n  discussion_board_post                          discussion_board_post[]\n  discussion_board_comment                       discussion_board_comment[]\n  discussion_board_vote                          discussion_board_vote[]\n  discussion_board_reaction                      discussion_board_reaction[]\n  discussion_board_bookmark                      discussion_board_bookmark[]\n  discussion_board_notification                  discussion_board_notification[]\n  discussion_board_subscription                  discussion_board_subscription[]\n  discussion_board_report_of_reported_user_id    discussion_board_report[]           @relation(\"discussion_board_report_of_reported_user_id\")\n  discussion_board_report_of_reporting_user_id   discussion_board_report[]           @relation(\"discussion_board_report_of_reporting_user_id\")\n  discussion_board_moderator_action              discussion_board_moderator_action[]\n  discussion_board_audit_log_of_actor_id         discussion_board_audit_log[]        @relation(\"discussion_board_audit_log_of_actor_id\")\n  discussion_board_audit_log_of_affected_user_id discussion_board_audit_log[]        @relation(\"discussion_board_audit_log_of_affected_user_id\")\n  discussion_board_warning                       discussion_board_warning[]\n  discussion_board_ban                           discussion_board_ban[]\n  discussion_board_user_activity                 discussion_board_user_activity?\n\n  @@unique([username])\n  @@unique([email])\n}\n\n/// Guest Access Logs - Implements the requirement to record unauthenticated/guest accesses per compliance and analytics goals. \n/// Stores only atomic guest event records; does not duplicate user account data. Maintains 3NF: each row is a simple access instance, not historical aggregation.\n/// Key relationships: No foreign keys to the users table; all-inbound guest access.\n/// Special behaviors: Used only for analytic/compliance reporting; not authentication.\n///\n/// @namespace Core\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_guests {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key - Uniquely identifies a guest log record. 1NF and 3NF by strict atomic reference.\n  id String @id @db.Uuid\n\n  /// Session Identifier - Supports tracking unique anonymous accesses (session cookies or device id). Implements analytics requirements for guest activity. 3NF by atomicity. Example: Counting unique guests per day.\n  session_id String\n\n  /// IP Address - Logs guest's origin IP for compliance, abuse tracking, and analytics. 3NF compliance; not duplicated elsewhere. Ex: Used in abuse response.\n  ip_address String\n\n  /// User Agent - Logs browser/device for guest session; optional for additional analytics. Stays atomic and complies with 3NF.\n  user_agent String?\n\n  /// Timestamp of Access - Enforces audit requirements; strictly atomic. Usage: Analytics, abuse tracing, auditing guest surges.\n  accessed_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  @@index([accessed_at])\n}\n\n/// Moderator Roles - This model implements the requirement for moderator user assignment, privilege tracking, and role audit. \n/// Represents the logical bridge between core user record and their moderator status, maintaining 3NF by not duplicating user identity or other profile information. For example, a user is assigned moderator status by being present in this table.\n/// Key relationships: FK to {@link discussion_board_users}, logs all who have or have had moderator role.\n/// Special behaviors: Historical tracking (active, demoted) possible without denormalization.\n///\n/// @namespace Core\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_moderators {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key - Unique per moderator assignment record; strictly atomic and 3NF.\n  id String @id @db.Uuid\n\n  /// Foreign Key to User - Indicates which user is/was assigned as a moderator. Enforces role membership as normalized, not duplicated data. Enforced 1:N relationship: one user can have zero or one moderator assignments.\n  user_id String @db.Uuid\n\n  /// Moderator Active Flag - Indicates whether the user currently holds moderator privileges. Implements requirement for role suspension, auditing role status history. Maintains normalization by not storing redundant role data elsewhere.\n  is_active Boolean\n\n  /// Timestamp of Role Assignment - Tracks when user was assigned moderator role. 3NF: pure atomic audit value.\n  assigned_at DateTime @db.Timestamptz\n\n  /// Timestamp of Role Revocation - Implements tracking for demoted/expired moderator roles, for compliance, audit, and operational review. Nullable, stays 3NF.\n  revoked_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  fk_discussion_board_moderators_user_id_discussion_board_users_id discussion_board_users @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  discussion_board_moderator_action     discussion_board_moderator_action[]\n  discussion_board_warning              discussion_board_warning[]\n  discussion_board_ban                  discussion_board_ban[]\n  discussion_board_content_abuse_metric discussion_board_content_abuse_metric[]\n\n  @@unique([user_id])\n  @@index([is_active])\n}\n\n/// Administrator Roles - Implements explicit administrator account linkage for full-system privileges, as required for configuration, user management, and audit purposes. 3NF: role assignment not duplicating user record.\n///\n/// Key relationships: Links to {@link discussion_board_users} (user account), supports operational distinction between admins and other roles.\n/// Special behaviors: Admin privileges conferred strictly by row existence, supporting audit via assigned_at/revoked_at.\n///\n/// @namespace Core\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_admins {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key - Unique per admin record, ensures atomic audit trail of admin privilege granting/revoking.\n  id String @id @db.Uuid\n\n  /// User Foreign Key - The user granted admin privileges. Maintains normalization: admin status never duplicated in other tables.\n  user_id String @db.Uuid\n\n  /// Admin Status Flag - States whether admin privileges currently apply. Implements requirement for manageability and operational security controls.\n  is_active Boolean\n\n  /// Grant Timestamp - When privileges were activated. Maintains 3NF: atomic, unambiguous role tracking.\n  assigned_at DateTime @db.Timestamptz\n\n  /// Revoked Timestamp - Supports audit/review of former admins, and system security compliance. Nullable, no denormalized roll-ups.\n  revoked_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  fk_discussion_board_admins_user_id_discussion_board_users_id discussion_board_users @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@unique([user_id])\n  @@index([is_active])\n}\n\n/// User Profiles - Implements the requirement for extended, public-facing user information, as distinct from credentials. \n/// Supports profile fields (display name, avatar, bio, badges) and community metrics, strictly normalized and not duplicating data from users or settings. 3NF guaranteed: one profile per user, no pre-computed/aggregated fields stored here. Ex: upvote totals in views only.\n///\n/// Key relationships: FK to {@link discussion_board_users}, exactly one per user.\n/// Special behaviors: Updates do not affect credentials or privacy settings.\n///\n/// @namespace Core\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_user_profiles {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key - Unique for each profile, used for linking profile data to user. Ensures record atomicity.\n  id String @id @db.Uuid\n\n  /// User Foreign Key - Connects profile data precisely to its user account. Enforces 1:1 user-profile mapping.\n  user_id String @db.Uuid\n\n  /// Display Name - Optional, user-customizable nickname for display. 3NF atomic field; example: public boards may show only this.\n  display_name String?\n\n  /// Avatar URI - Optional, image URL for profile picture. Maintains normalization; avatar is not stored in user, settings, or duplicated elsewhere.\n  avatar_url String? @db.VarChar(80000)\n\n  /// User Biography - Optional, free-form text for interests, expertise or statements. 3NF: non-aggregated, not used for computation.\n  bio String?\n\n  /// User Badges - Optional, serialized badge list. 3NF, atomic per user (badge aggregation handled in materialized views as needed). Example: Displaying earned badges.\n  badges String?\n\n  //----\n  // RELATIONS\n  //----\n  fk_discussion_board_user_profiles_user_id_discussion_board_users_id discussion_board_users @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@unique([user_id])\n  @@index([display_name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n  @@index([bio(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// User Settings - Implements private, user-specific preferences and configuration (notification opt-in, accessibility, display, etc.). Normalized to ensure no redundant storage in user, profile, or role tables. Purely atomic per preference field; no rollups or calculated values.\n///\n/// Key relationships: FK to {@link discussion_board_users}, strictly 1:1 mapping.\n/// Special behaviors: Updating settings does not affect user credentials or profile.\n///\n/// @namespace Core\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_user_settings {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key - Single settings record per user. Guarantees atomic, normalized storage without data duplication.\n  id String @id @db.Uuid\n\n  /// User Foreign Key - Connects each settings record uniquely to a user. Guarantees 1:1 mapping.\n  user_id String @db.Uuid\n\n  /// Email Notification Opt-in - Whether the user wants to receive email notifications. Implements a requirement for user controllable notification preferences; strictly atomic.\n  notification_email Boolean\n\n  /// In-app Notification Opt-in - User choice to receive in-app platform notifications. Normalized; no duplication.\n  notification_in_app Boolean\n\n  /// Accessibility Mode Setting - User choice for accessibility features (e.g., 'high_contrast', 'screen_reader'). Null if default. 3NF, atomic setting for UI/UX compliance.\n  accessibility_mode String?\n\n  /// Display Density Setting - User preferences for compact or spacious UI layouts. Atomic and normalized.\n  display_density String?\n\n  //----\n  // RELATIONS\n  //----\n  fk_discussion_board_user_settings_user_id_discussion_board_users_id discussion_board_users @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@unique([user_id])\n}\n",
        "schema-02-discussion.prisma": "/// [Thread Entity] - Implements thread management and structure from requirements. Represents a single discussion topic (thread), allows users to initiate topics, and structures posts under a subject. Enforces 3NF by holding only atomic thread details, linking to user and category. No redundant or derived fields.\n/// - Key relationships: Created by discussion_board_user, assigned to discussion_board_thread_category. Threads have many posts, tags assigned via junction table.\n///\n/// @namespace Discussion\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_thread {\n  //----\n  // COLUMNS\n  //----\n  /// [Thread unique identifier] - Primary key. Atomic and singular. Used for all thread references.\n  id String @id @db.Uuid\n\n  /// [Thread creator reference] - References thread creator, separating author data from thread content.\n  creator_user_id String @db.Uuid\n\n  /// [Thread category reference] - Links thread to category for filtering/grouping.\n  category_id String @db.Uuid\n\n  /// [Thread title] - Atomic, non-derived. E.g., 'Election Impact Discussion'.\n  title String\n\n  /// [Thread body content] - Initial post, atomic, not derived.\n  body String\n\n  /// [Lock flag] - Thread lock for moderation (true=locked).\n  is_locked Boolean\n\n  /// [Pin flag] - Thread highlight at top (true=pinned).\n  is_pinned Boolean\n\n  /// [Created timestamp] - Atomic event timestamp.\n  created_at DateTime @db.Timestamptz\n\n  /// [Last updated timestamp] - Audit trail support.\n  updated_at DateTime @db.Timestamptz\n\n  /// [Deletion timestamp] - Soft deletion for compliance.\n  deleted_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  creator_user discussion_board_users           @relation(fields: [creator_user_id], references: [id], onDelete: Cascade)\n  category     discussion_board_thread_category @relation(fields: [category_id], references: [id], onDelete: Cascade)\n\n  discussion_board_post             discussion_board_post[]\n  discussion_board_thread_tag       discussion_board_thread_tag[]\n  mv_discussion_thread_activity     mv_discussion_thread_activity?\n  discussion_board_vote             discussion_board_vote[]\n  discussion_board_reaction         discussion_board_reaction[]\n  discussion_board_bookmark         discussion_board_bookmark[]\n  discussion_board_notification     discussion_board_notification[]\n  discussion_board_subscription     discussion_board_subscription[]\n  discussion_board_report           discussion_board_report[]\n  discussion_board_moderator_action discussion_board_moderator_action[]\n  discussion_board_warning          discussion_board_warning[]\n  discussion_board_thread_stats     discussion_board_thread_stats?\n\n  @@unique([title, category_id])\n  @@index([category_id])\n  @@index([created_at, is_pinned])\n  @@index([creator_user_id, deleted_at])\n  @@index([title(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n  @@index([body(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// [Post Entity] - Implements post logic from requirements. Each row represents a post in a thread, including first and replies. 3NF enforced: only atomic fields. Posts reference thread and author, may be parent (for future nesting).\n///\n/// @namespace Discussion\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_post {\n  //----\n  // COLUMNS\n  //----\n  /// [Post unique identifier] - Primary key for individual posts.\n  id String @id @db.Uuid\n\n  /// [Thread reference] - Links post to its parent thread.\n  thread_id String @db.Uuid\n\n  /// [Author reference] - Author of the post, normalized away from post.\n  author_user_id String @db.Uuid\n\n  /// [Parent post] - Nullable for top-level; for reply nesting.\n  parent_post_id String? @db.Uuid\n\n  /// [Post content] - Main post text, atomic.\n  body String\n\n  /// [Creation timestamp] - For activity and audit tracking.\n  created_at DateTime @db.Timestamptz\n\n  /// [Edit timestamp] - Indicates modification/audit history.\n  updated_at DateTime @db.Timestamptz\n\n  /// [Soft delete timestamp] - Compliance/takedown support.\n  deleted_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  thread      discussion_board_thread @relation(fields: [thread_id], references: [id], onDelete: Cascade)\n  author_user discussion_board_users  @relation(fields: [author_user_id], references: [id], onDelete: Cascade)\n  parent_post discussion_board_post?  @relation(\"recursive\", fields: [parent_post_id], references: [id], onDelete: Cascade)\n\n  recursive                         discussion_board_post[]             @relation(\"recursive\")\n  discussion_board_comment          discussion_board_comment[]\n  discussion_board_vote             discussion_board_vote[]\n  discussion_board_reaction         discussion_board_reaction[]\n  discussion_board_bookmark         discussion_board_bookmark[]\n  discussion_board_notification     discussion_board_notification[]\n  discussion_board_subscription     discussion_board_subscription[]\n  discussion_board_report           discussion_board_report[]\n  discussion_board_moderator_action discussion_board_moderator_action[]\n  discussion_board_warning          discussion_board_warning[]\n\n  @@index([parent_post_id])\n  @@index([thread_id, created_at])\n  @@index([author_user_id, deleted_at])\n  @@index([body(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// [Comment Entity] - Implements comment/reply requirement. Each row is a single comment. 3NF enforced: each comment is atomic, referencing only its parent post/author/optional parent comment.\n///\n/// @namespace Discussion\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_comment {\n  //----\n  // COLUMNS\n  //----\n  /// [Comment unique identifier] - Singular reference.\n  id String @id @db.Uuid\n\n  /// [Parent post] - Comment is attached to post.\n  post_id String @db.Uuid\n\n  /// [Author reference] - Creator of this comment.\n  author_user_id String @db.Uuid\n\n  /// [Parent comment] - Nullable; for replies only.\n  parent_comment_id String? @db.Uuid\n\n  /// [Comment body] - Atomic text value.\n  body String\n\n  /// [Created] - Recent activity tracking.\n  created_at DateTime @db.Timestamptz\n\n  /// [Updated] - Revision/audit-trail.\n  updated_at DateTime @db.Timestamptz\n\n  /// [Soft delete] - Required for moderation.\n  deleted_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  post           discussion_board_post     @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  author_user    discussion_board_users    @relation(fields: [author_user_id], references: [id], onDelete: Cascade)\n  parent_comment discussion_board_comment? @relation(\"recursive\", fields: [parent_comment_id], references: [id], onDelete: Cascade)\n\n  recursive                         discussion_board_comment[]          @relation(\"recursive\")\n  discussion_board_vote             discussion_board_vote[]\n  discussion_board_reaction         discussion_board_reaction[]\n  discussion_board_bookmark         discussion_board_bookmark[]\n  discussion_board_notification     discussion_board_notification[]\n  discussion_board_subscription     discussion_board_subscription[]\n  discussion_board_report           discussion_board_report[]\n  discussion_board_moderator_action discussion_board_moderator_action[]\n  discussion_board_warning          discussion_board_warning[]\n\n  @@index([parent_comment_id])\n  @@index([post_id, created_at])\n  @@index([author_user_id])\n  @@index([body(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// [Thread Tag Junction Table] - Implements M:N thread-tagging. Junction table only: each row links thread to allowed tag. No tag metadata stored here. Fully normalized (M:N).\n///\n/// @namespace Discussion\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_thread_tag {\n  //----\n  // COLUMNS\n  //----\n  /// [Junction unique identifier] - PK for junction row.\n  id String @id @db.Uuid\n\n  /// [Thread FK] - Thread to which tag is assigned.\n  thread_id String @db.Uuid\n\n  /// [Tag FK] - Tag being assigned.\n  tag_id String @db.Uuid\n\n  /// [Assignment timestamp] - Tagging operation date.\n  created_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  thread       discussion_board_thread       @relation(fields: [thread_id], references: [id], onDelete: Cascade)\n  tag_category discussion_board_tag_category @relation(fields: [tag_id], references: [id], onDelete: Cascade)\n\n  discussion_board_subscription discussion_board_subscription[]\n\n  @@unique([thread_id, tag_id])\n  @@index([tag_id])\n}\n\n/// [Thread Category Table] - Implements thread categorization. Each record is a unique, atomic category. No derived values. Used for grouping threads only.\n///\n/// @namespace Discussion\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_thread_category {\n  //----\n  // COLUMNS\n  //----\n  /// [Category PK] - Used as FK in threads.\n  id String @id @db.Uuid\n\n  /// [Category code] - Short, unique code ('economy').\n  code String\n\n  /// [Category name] - Human-friendly, unique.\n  name String\n\n  /// [Optional details] - Category description.\n  description String?\n\n  /// [Created] - Auditing.\n  created_at DateTime @db.Timestamptz\n\n  /// [Updated] - Change/audit tracking.\n  updated_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  discussion_board_thread discussion_board_thread[]\n\n  @@unique([code])\n  @@unique([name])\n}\n\n/// [Tag Category Table] - Master tag list fulfilling tag requirements. Each is atomic, referenced only by ID from thread tags. 3NF maintained: no aggregates or redundant fields.\n///\n/// @namespace Discussion\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_tag_category {\n  //----\n  // COLUMNS\n  //----\n  /// [Tag PK] - Unique per tag.\n  id String @id @db.Uuid\n\n  /// [Tag code] - Unique, short value for tag (e.g. 'gdp', 'inflation').\n  code String\n\n  /// [Tag name] - UI-friendly.\n  name String\n\n  /// [Details] - UI/admin usage.\n  description String?\n\n  /// [Created] - Audit/ordering.\n  created_at DateTime @db.Timestamptz\n\n  /// [Updated] - Change/audit tracking.\n  updated_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  discussion_board_thread_tag discussion_board_thread_tag[]\n\n  @@unique([code])\n  @@unique([name])\n}\n\n/// [Materialized View: Thread Activity] - Implements denormalized aggregate/reporting requirements for threads. Contains precomputed fields like reply_count for high-performance dashboards; these are omitted from base tables to enforce normalization.\n///\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel mv_discussion_thread_activity {\n  //----\n  // COLUMNS\n  //----\n  /// [Materialized view PK] - Identifies unique thread activity row.\n  id String @id @db.Uuid\n\n  /// [Thread reference] - 1:1 to thread.id for aggregate metrics.\n  thread_id String @db.Uuid\n\n  /// [Aggregate] - Precomputed in materialization process.\n  reply_count Int @db.Integer\n\n  /// [Denormalized timestamp] - Recent post.\n  last_posted_at DateTime? @db.Timestamptz\n\n  /// [Participant IDs] - Denormalized string, analytics only.\n  participant_user_ids String?\n\n  //----\n  // RELATIONS\n  //----\n  thread discussion_board_thread @relation(fields: [thread_id], references: [id], onDelete: Cascade)\n\n  @@unique([thread_id])\n  @@index([reply_count])\n}\n",
        "schema-03-engagement.prisma": "/// [Vote Tracking] - This implements the 'Upvote/Downvote' and vote aggregation requirements outlined under 'Content Interaction' in 02_discussion_board_feature_requirements.md. \n///\n/// This model records every user's voting action (upvote or downvote) on threads, posts, and comments, allowing for tailored, real-time engagement statistics. Maintains 3NF by using atomic fields for all voting events, referencing both the voter and the target entity by normalized foreign keys. For example, when a user upvotes a comment, a new record is inserted specifying the user, target type, and direction. \n///\n/// Key relationships: references the voting user in discussion_board_user and any of discussion_board_thread, discussion_board_post, or discussion_board_comment for the voted content. \n/// Special behaviors: Each user can only vote once per target; direction is strictly controlled; supports both upvotes and downvotes. Duplicate prevention is enforced by a composite unique index on (voter, target_type, target_id).\n///\n/// @namespace Engagement\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_vote {\n  //----\n  // COLUMNS\n  //----\n  /// [Vote Record Primary Key] - Implements unique identification of every vote operation as required for audit and traceability. This value ensures all vote records remain unique and supports direct lookups. This is fully normalized as it supplies no additional information beside entity identity.\n  id String @id @db.Uuid\n\n  /// [Voting User] - References the user performing the vote according to requirements for audit and user-based tracking. This field allows for querying all votes cast by a particular user and is always required for normalization and referential integrity. For example, counting all upvotes by a user. Not nullable.\n  user_id String @db.Uuid\n\n  /// [Thread Target] - Refers to the thread being voted on, if applicable, aligning with the need for thread upvote/downvote as in core feature requirements. Enables normalized storage without duplication. Nullable to permit post/comment targets instead.\n  thread_id String? @db.Uuid\n\n  /// [Post Target] - Refers to a specific post receiving a vote, only set if the target is a post. Implements normalization by storing the reference atomically. Nullable for other vote types.\n  post_id String? @db.Uuid\n\n  /// [Comment Target] - References a comment being voted on, per threaded/nested commentary needs. Only set if the vote applies to a comment. Ensures 3NF by isolating relationships. Nullable for other target types.\n  comment_id String? @db.Uuid\n\n  /// [Vote Direction] - Implements voting direction per 'upvote/downvote' usage. Accepts only 'up' or 'down' as valid values, reflecting the feature requirement. Maintains normalization by storing only atomic values. Used for aggregating vote totals efficiently.\n  direction String\n\n  /// [Vote Timestamp] - Records when the vote operation took place in accordance with audit and analytics tracking. Fully normalized, supports temporal queries and audit. For example, to track voting frequency or trends over time.\n  created_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  user    discussion_board_users    @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  thread  discussion_board_thread?  @relation(fields: [thread_id], references: [id], onDelete: Cascade)\n  post    discussion_board_post?    @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  comment discussion_board_comment? @relation(fields: [comment_id], references: [id], onDelete: Cascade)\n\n  @@unique([user_id, thread_id, post_id, comment_id])\n  @@index([thread_id])\n  @@index([post_id])\n  @@index([comment_id])\n  @@index([created_at])\n}\n\n/// [Reaction Log] - Implements the 'Voting & Reactions' and 'Rich Content' feature requirements from 02_discussion_board_feature_requirements.md. \n///\n/// This model records each user's emoji or symbolic reaction (e.g., emoji, like, disagree) attached to threads, posts, or comments. Fully 3NF: relation links stored atomically, no aggregates or counts in this table. For example, if a user reacts with 'like' to a post, an entry references the user, the post, and the type of reaction. \n///\n/// Key relationships: References user, and one of thread, post, or comment. \n/// Special behaviors: Composite unique index enforces only one reaction of a specific type per user/target; arbitrary duplicate prevention. Used to drive aggregates (in views/materialized views) and for real-time UX feedback.\n///\n/// @namespace Engagement\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_reaction {\n  //----\n  // COLUMNS\n  //----\n  /// [Reaction Primary Key] - Unique identifier for each atomic reaction event. Complies with full normalization principles and supports efficient lookups and audit trails.\n  id String @id @db.Uuid\n\n  /// [Reacting User] - References user account providing the reaction. Required for tracking and personalization. Not nullable for auditability and user-specific features.\n  user_id String @db.Uuid\n\n  /// [Thread Target] - References target thread if response is at thread level. Nullable if the reaction applies to post or comment.\n  thread_id String? @db.Uuid\n\n  /// [Post Target] - References post receiving reaction, following atomicity principles. Nullable for thread/comment targets.\n  post_id String? @db.Uuid\n\n  /// [Comment Target] - Used for reactions attached to a comment. Respects normalized data modeling through nullable field.\n  comment_id String? @db.Uuid\n\n  /// [Reaction Type] - Captures the symbolic meaning of the user reaction (e.g., 'like', 'laugh', 'disagree', emoji code). Implements the UI/business requirements for expressive reactions and enables normalized lookup tables in future. For example, records 'like' or 'sad'. Restricts values to atomic symbols only. Not nullable.\n  reaction_type String\n\n  /// [Reaction Timestamp] - Records exact time of reaction, enabling both audit/compliance and analytics functions. Fully normalized field supporting sort and filter operations.\n  created_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  user    discussion_board_users    @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  thread  discussion_board_thread?  @relation(fields: [thread_id], references: [id], onDelete: Cascade)\n  post    discussion_board_post?    @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  comment discussion_board_comment? @relation(fields: [comment_id], references: [id], onDelete: Cascade)\n\n  @@unique([user_id, thread_id, post_id, comment_id, reaction_type])\n  @@index([thread_id])\n  @@index([post_id])\n  @@index([comment_id])\n  @@index([created_at])\n}\n\n/// [User Bookmarking] - Implements the 'Bookmark/Favorite' feature from the 'Content Interaction' section in 02_discussion_board_feature_requirements.md. \n///\n/// Allows users to save threads, posts, or comments for rapid access from their profile dashboards. Model structure maintains 3NF: each bookmark is atomic (user, target), no derived summary stored in this table. For example, when a user bookmarks a thread, one row is inserted per user/thread pair. \n///\n/// Key relationships: Links to user and exactly one type of content. \n/// Special behaviors: Composite unique index to prevent duplicate user/content bookmarks; each bookmark is atomic, supporting efficient bookmarking/unbookmarking.\n///\n/// @namespace Engagement\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_bookmark {\n  //----\n  // COLUMNS\n  //----\n  /// [Bookmark Primary Key] - Unique per bookmark, with no derived fields, enabling robust tracking and audit.\n  id String @id @db.Uuid\n\n  /// [Bookmarking User] - The user making the bookmark. Not nullable, as bookmarks must be attributable to a user per requirements.\n  user_id String @db.Uuid\n\n  /// [Thread Target] - Refers to thread when bookmark targets a whole thread discussion. Nullable for post/comment targeting.\n  thread_id String? @db.Uuid\n\n  /// [Post Target] - Refers to specific post for more granular bookmarking. Nullable, enabling flexibility in target types.\n  post_id String? @db.Uuid\n\n  /// [Comment Target] - Allows comments as bookmark targets, covering use cases such as referencing a key point. Nullable for thread/post bookmarks.\n  comment_id String? @db.Uuid\n\n  /// [Bookmark Timestamp] - Stores creation time to provide temporal analytics, audit trails, and personalized bookmark ordering. Atomic field following normalization principles.\n  created_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  user    discussion_board_users    @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  thread  discussion_board_thread?  @relation(fields: [thread_id], references: [id], onDelete: Cascade)\n  post    discussion_board_post?    @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  comment discussion_board_comment? @relation(fields: [comment_id], references: [id], onDelete: Cascade)\n\n  @@unique([user_id, thread_id, post_id, comment_id])\n  @@index([thread_id])\n  @@index([post_id])\n  @@index([comment_id])\n  @@index([created_at])\n}\n\n/// [Notifications Log] - Implements notification requirements for alerting users (in-app and email channels) about replies, mentions, moderation actions, etc., as described in the Notifications & Subscriptions features in 02_discussion_board_feature_requirements.md. \n///\n/// Every notification event is atomic and tied to the recipient and optionally the triggering content. Maintains full normalization by separating each notification event from aggregates or status fields. For example, when a user is mentioned in a thread, a row is inserted with recipient, type, linking to triggering content if needed. \n///\n/// Key relationships: Ties to recipient user and optionally to the related thread/post/comment. \n/// Special behaviors: Non-null constraint on recipient; stores read/unread and delivery details for downstream UI logic. Notification history enables auditing and user controls for opt out, etc.\n///\n/// @namespace Engagement\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_notification {\n  //----\n  // COLUMNS\n  //----\n  /// [Notification Primary Key] - Atomic identifier supporting notification history, compliance, and lookup. Fulfills normalization requirement for entity-identity separation.\n  id String @id @db.Uuid\n\n  /// [Recipient User] - Points to the user receiving the notification. Not nullable per notification and user personalization requirements.\n  recipient_user_id String @db.Uuid\n\n  /// [Thread Trigger] - If notification triggered by a thread (e.g., being mentioned, thread activity), link to it. Nullable to generalize for other sources.\n  thread_id String? @db.Uuid\n\n  /// [Post Trigger] - Refers to originating post if present. Nullable for generic notifications.\n  post_id String? @db.Uuid\n\n  /// [Comment Trigger] - Optionally references comments that triggered notification. Nullable, supporting flexible notification types.\n  comment_id String? @db.Uuid\n\n  /// [Notification Type] - Specifies nature of notification (e.g., reply, mention, moderator_action, subscription_digest, etc.), per business requirements. Fully atomic and normalized to allow status/analytics grouping. Not nullable.\n  notification_type String\n\n  /// [Read Status] - Flags whether notification has been acknowledged. Implements user experience requirement for notification badge counts/read indicators. Fully normalized, as only true/false is stored.\n  is_read Boolean\n\n  /// [Notification Channel] - Delivery channel (e.g., 'in_app', 'email'), mapping to platform business logic. Fully normalized and nullable to allow new channel types in future.\n  channel String\n\n  /// [Creation Timestamp] - Captures temporal analytics and enables notification sorting; supports full normalization by separating time from any derived status.\n  created_at DateTime @db.Timestamptz\n\n  /// [Delivery Timestamp] - When notification was sent via the chosen channel. Null if not yet delivered (i.e., queue pending). Fully normalized, non-derived field.\n  delivered_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  recipient_user discussion_board_users    @relation(fields: [recipient_user_id], references: [id], onDelete: Cascade)\n  thread         discussion_board_thread?  @relation(fields: [thread_id], references: [id], onDelete: Cascade)\n  post           discussion_board_post?    @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  comment        discussion_board_comment? @relation(fields: [comment_id], references: [id], onDelete: Cascade)\n\n  @@index([thread_id])\n  @@index([post_id])\n  @@index([comment_id])\n  @@index([recipient_user_id, created_at])\n}\n\n/// [Notification Subscriptions] - Implements 'Subscribe/Unsubscribe' and alert preferences from Notification & Subscription requirements in 02_discussion_board_feature_requirements.md. \n///\n/// Table records explicit user opt-ins to topics, threads, or tags for notification delivery. Maintains full normalization: each record links subscriber, content, and chosen channel(s), with one row per atomic subscription. For instance, subscribing a user to a thread generates a record referencing the user, thread, and notification channel preferences. No aggregated status (e.g., total subscribers) is denormalized here. \n///\n/// Key relationships: Links user to subscribed content (thread, tag, optionally post/comment for granular alerts). \n/// Special behaviors: Uniqueness constraint prevents duplicate subscriptions to the same channel/source. Supports managing user preferences and batch opt-in/out for analytics and compliance.\n///\n/// @namespace Engagement\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_subscription {\n  //----\n  // COLUMNS\n  //----\n  /// [Subscription Primary Key] - Core unique identifier for tracking a single user/content/channel subscription. Enables efficient lookup and opt-in/out management.\n  id String @id @db.Uuid\n\n  /// [Subscriber] - User who wants to receive notifications about a content/topic. Not nullable as individual opt-in is a requirement; supports user-specific notification feeds.\n  user_id String @db.Uuid\n\n  /// [Target Thread] - Subscribes to thread-specific notifications. Nullable to allow for tag or post-based subscriptions per requirements.\n  thread_id String? @db.Uuid\n\n  /// [Target Tag/Topic] - Allows subscribing to all threads tagged with particular tag. Nullable to support thread or post direct subscription.\n  tag_id String? @db.Uuid\n\n  /// [Target Post] - For fine-grained notification preference, e.g., replies to a specific post. Nullable for more general subscriptions.\n  post_id String? @db.Uuid\n\n  /// [Target Comment] - For per-comment subscription, supporting granular, event-based notification delivery. Nullable.\n  comment_id String? @db.Uuid\n\n  /// [Subscription Channel] - Indicates chosen notification channel for subscription (e.g., 'in_app', 'email'). Fully normalized as it accommodates one value per field. Not nullable for clarity of delivery logic.\n  channel String\n\n  /// [Subscription Creation Timestamp] - Records when subscription was created, supporting analytics, compliance review, and auditing needs. Atomic field, fully normalized.\n  created_at DateTime @db.Timestamptz\n\n  /// [Subscription Expiry] - Optional expiry for time-bound subscriptions (e.g., temporary election thread). Nullable for permanent subscriptions. Fully normalized, adhering to business rules.\n  expires_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  user    discussion_board_users       @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  thread  discussion_board_thread?     @relation(fields: [thread_id], references: [id], onDelete: Cascade)\n  tag     discussion_board_thread_tag? @relation(fields: [tag_id], references: [id], onDelete: Cascade)\n  post    discussion_board_post?       @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  comment discussion_board_comment?    @relation(fields: [comment_id], references: [id], onDelete: Cascade)\n\n  @@unique([user_id, thread_id, tag_id, post_id, comment_id, channel])\n  @@index([thread_id])\n  @@index([tag_id])\n  @@index([post_id])\n  @@index([comment_id])\n  @@index([created_at])\n}\n",
        "schema-04-moderation.prisma": "/// [Report Entity] - This implements the reporting and abuse workflow requirement from section 4 of the feature requirements. Enables users to flag inappropriate content for moderator review, centralizing reports for transparency and action tracking. Maintains 3NF by referencing precise users and content without duplicating user or content data. For example, when a post is flagged as offensive, a record is created here for moderator workflow. \n/// Key relationships: Links to reported user (optional), reporting user, and polymorphic content (thread/post/comment). Moderators use this to manage abuse workflows. \n/// Special behaviors: Cannot initiate for non-existent content; only one open report per user/content at a time is allowed.\n///\n/// @namespace Moderation\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_report {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary Key] - Unique identifier for each report. Implements the entity's uniqueness requirement. Standard UUID, ensures normalization. For example, used as reference in moderation actions.\n  id String @id @db.Uuid\n\n  /// [Offending User FK] - The user reported for abusive content. Enables targeted moderation and disciplinary action. Maintains 3NF by only storing the user reference. For example, a spammer being reported on a post. Nullable for content without registered user (e.g., deleted).\n  reported_user_id String? @db.Uuid\n\n  /// [Reporting User FK] - The user generating the report. Tracks abuse sources and enables accountability. Maintains 3NF as a direct reference. For example, the victim or witness reporting the abuse. Not nullable.\n  reporting_user_id String @db.Uuid\n\n  /// [Thread FK] - Thread being reported, for thread-level abuse. Null for post/comment-level reports. Maintains normalization by referencing rather than duplicating content.\n  thread_id String? @db.Uuid\n\n  /// [Post FK] - Post being reported, for post-level abuse. Null for thread/comment-level reports. Keeps schema normalized.\n  post_id String? @db.Uuid\n\n  /// [Comment FK] - Comment being reported. Null for thread/post-level reports. Maintains field-level normalization.\n  comment_id String? @db.Uuid\n\n  /// [Report Status] - Implements workflow state tracking from moderation requirements. Indicates if a report is 'pending', 'resolved', or 'dismissed'. Normalized (atomic, not derived). For example, status transitions after moderator review. Enum expected in application logic.\n  status String\n\n  /// [Report Category] - Abuse type such as 'spam', 'harassment', 'off-topic'. Enables analytical grouping and moderator prioritization. Maintains normalization by not repeating explanations—only concise tags. For example, allows dashboard filtering of spam vs. harassment.\n  category String\n\n  /// [Report Timestamp] - When abuse was reported. Auditable, normalized, atomic. Used to measure compliance with response time targets.\n  submitted_at DateTime @db.Timestamptz\n\n  /// [Resolution Timestamp] - When a moderator resolved the report. Atomic, nullable (unresolved when null), keeps schema normalized.\n  resolved_at DateTime? @db.Timestamptz\n\n  /// [Report Details] - Freeform explanation from reporter. Fully normalized, as each instance is atomic. For example, a user's description of incident.\n  details String\n\n  //----\n  // RELATIONS\n  //----\n  reported_user  discussion_board_users?   @relation(\"discussion_board_report_of_reported_user_id\", fields: [reported_user_id], references: [id], onDelete: Cascade)\n  reporting_user discussion_board_users    @relation(\"discussion_board_report_of_reporting_user_id\", fields: [reporting_user_id], references: [id], onDelete: Cascade)\n  thread         discussion_board_thread?  @relation(fields: [thread_id], references: [id], onDelete: Cascade)\n  post           discussion_board_post?    @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  comment        discussion_board_comment? @relation(fields: [comment_id], references: [id], onDelete: Cascade)\n\n  discussion_board_moderator_action discussion_board_moderator_action[]\n  discussion_board_ban              discussion_board_ban[]\n\n  @@unique([reporting_user_id, thread_id, post_id, comment_id])\n  @@index([thread_id])\n  @@index([post_id])\n  @@index([comment_id])\n  @@index([status])\n  @@index([reported_user_id, submitted_at])\n  @@index([details(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// [Moderator Action Log] - Implements audit trail for moderator interventions as per Moderation Tools requirements (Section 8). Tracks every moderation event, providing historical accountability and clarity for escalated workflows. Maintains full normalization: stores only atomic reference to affected entities. For example, documenting a post removal or warning issued.\n/// Key relationships: Linked to moderator, reported user, report, and content (thread/post/comment). Supports analytics and compliance.\n/// Special behaviors: Immutable history (never updated, only appended).\n///\n/// @namespace Moderation\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_moderator_action {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary Key] - Unique action id for every intervention. Atomic, normalized, for referencing in audits.\n  id String @id @db.Uuid\n\n  /// [Moderator FK] - The moderator performing the action. Maintains normalized link for accountability and reports. Not nullable.\n  moderator_id String @db.Uuid\n\n  /// [User FK] - User affected by the action (could be warned, banned, post deleted). Maintains normalization and supports analytics (e.g., repeat offenders). Nullable for system-level actions.\n  user_id String? @db.Uuid\n\n  /// [Report FK] - Direct link to triggering report (if applicable). Enables action-report traceability. Nullable for proactive mod actions (not user-initiated).\n  report_id String? @db.Uuid\n\n  /// [Thread FK] - Thread affected by this action (optional). Maintains normalized reference.\n  thread_id String? @db.Uuid\n\n  /// [Post FK] - Post affected. Null unless specifically post-level intervention.\n  post_id String? @db.Uuid\n\n  /// [Comment FK] - Comment affected. Nullable, for comment-level moderation only.\n  comment_id String? @db.Uuid\n\n  /// [Action Type] - Enumerates mod actions such as 'deleted', 'locked', 'warned', 'banned', 'approved', etc. Atomic per row. Application logic enforces allowed set. For example, tracks instance when moderator locks a thread.\n  action_type String\n\n  /// [Moderator Reason] - Justification for action, entered by mod. Fully normalized and atomic per event; clarifies decision context. For example, details why a post was removed.\n  reason String\n\n  /// [Timestamp] - Date/time when action occurred. Atomic, 3NF, enables time-based analysis.\n  created_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  moderator discussion_board_moderators @relation(fields: [moderator_id], references: [id], onDelete: Cascade)\n  user      discussion_board_users?     @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  report    discussion_board_report?    @relation(fields: [report_id], references: [id], onDelete: Cascade)\n  thread    discussion_board_thread?    @relation(fields: [thread_id], references: [id], onDelete: Cascade)\n  post      discussion_board_post?      @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  comment   discussion_board_comment?   @relation(fields: [comment_id], references: [id], onDelete: Cascade)\n\n  @@index([user_id])\n  @@index([report_id])\n  @@index([thread_id])\n  @@index([post_id])\n  @@index([comment_id])\n  @@index([action_type])\n  @@index([moderator_id, created_at])\n  @@index([reason(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// [Global Audit Log] - Implements operational/audit requirements for compliance (Section 3, Non-Functional). Captures every high-impact admin or moderator change—user status, settings, board config, bans, etc. Designed for transparency and tamper-proof history. 3NF compliance: references changed entity and actor, avoids non-atomic fields. For example, logs every ban, warning, or system setting change.\n/// Key relationships: Relates to admin/moderator, optionally affected user and system objects.\n/// Special behaviors: Write-only history, never updated (immutable log).\n///\n/// @namespace Moderation\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_audit_log {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary Key] - Unique audit entry. Holds atomic record reference. Used for compliance reviews and investigations.\n  id String @id @db.Uuid\n\n  /// [Actor FK] - User/mod/admin responsible for action. Direct accountability for each logged event. Always populated.\n  actor_id String @db.Uuid\n\n  /// [Affected User FK] - User affected by event, if applicable (nullable for system actions). Keeps 3NF, as atomic ref.\n  affected_user_id String? @db.Uuid\n\n  /// [Entity Type] - Indicates what was affected: 'user', 'setting', 'thread', etc. Atomic per log entry. Maintains normalization by not including redundant fields.\n  entity_type String\n\n  /// [Entity ID] - Universal ID to pair with entity_type for object lookup. Atomic, normalized reference for all logged object types.\n  entity_id String @db.Uuid\n\n  /// [Action] - Verb describing event: 'ban', 'unban', 'setting_change', 'delete', etc. 3NF compliance, only single type per row.\n  action String\n\n  /// [Details] - Optional, atomic, freeform field allowing extra commentary for audits. Example: rationale behind a setting change.\n  details String\n\n  /// [Timestamp] - When audit entry recorded. Atomic, supports time-based filtering.\n  created_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  actor         discussion_board_users  @relation(\"discussion_board_audit_log_of_actor_id\", fields: [actor_id], references: [id], onDelete: Cascade)\n  affected_user discussion_board_users? @relation(\"discussion_board_audit_log_of_affected_user_id\", fields: [affected_user_id], references: [id], onDelete: Cascade)\n\n  @@index([affected_user_id])\n  @@index([entity_type, entity_id])\n  @@index([actor_id, created_at])\n  @@index([details(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// [Warning Entity] - Implements user warning workflow, supporting progressive discipline before bans. Complies with feature requirement for moderation and sanction history (Section 8). Ensures warnings are structured, individually reference mod and user, and retained for audit. Maintains 3NF: only links, never duplicates, user or mod info. E.g., user warned for offensive content, with one row per event.\n/// Key relationships: Directly linked to moderator and user; optionally references related content.\n/// Special behaviors: Sequential warnings tracked for progressive moderation.\n///\n/// @namespace Moderation\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_warning {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary Key] - Unique id per warning. Enables audit traceability, atomic field. Used to reference a particular warning for bans/escalation.\n  id String @id @db.Uuid\n\n  /// [User FK] - The warned user. Maintains normalization by referencing only. For example, a user accumulating multiple warnings.\n  user_id String @db.Uuid\n\n  /// [Moderator FK] - Mod issuing warning, ensures accountability and supports progressive discipline audit. Not nullable.\n  moderator_id String @db.Uuid\n\n  /// [Thread FK] - The thread which triggered the warning (if relevant). Normalized, optional.\n  thread_id String? @db.Uuid\n\n  /// [Post FK] - The post triggering the warning, if relevant. Maintained as atomic/optional.\n  post_id String? @db.Uuid\n\n  /// [Comment FK] - Focused on content-related warnings. Maintains normalization, optional.\n  comment_id String? @db.Uuid\n\n  /// [Warning Reason] - Moderator-issued specific reason. 3NF compliance, atomic string. E.g., citing violation category.\n  reason String\n\n  /// [Issued Timestamp] - When warning was given. Enables time-based moderation analytics and is normalized per event.\n  issued_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  user      discussion_board_users      @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  moderator discussion_board_moderators @relation(fields: [moderator_id], references: [id], onDelete: Cascade)\n  thread    discussion_board_thread?    @relation(fields: [thread_id], references: [id], onDelete: Cascade)\n  post      discussion_board_post?      @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  comment   discussion_board_comment?   @relation(fields: [comment_id], references: [id], onDelete: Cascade)\n\n  discussion_board_ban discussion_board_ban[]\n\n  @@index([moderator_id])\n  @@index([thread_id])\n  @@index([post_id])\n  @@index([comment_id])\n  @@index([user_id, issued_at])\n  @@index([reason(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// [Ban Entity] - Implements account ban/suspension workflow per moderation and compliance requirements. Tracks bans (temporary, permanent) individually. Strict 3NF: only links to user, moderator, triggering action or report. For example, permanent ban for repeat abuse.\n/// Key relationships: Points to user, moderator, optional warning or report triggering the ban. Used by system for access control/state changes.\n/// Special behaviors: Bans are never updated, only created (history preserved for compliance).\n///\n/// @namespace Moderation\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_ban {\n  //----\n  // COLUMNS\n  //----\n  /// [Primary Key] - Unique ban record. Used for referencing in audit logs and reversals. Normalization: one row per ban event.\n  id String @id @db.Uuid\n\n  /// [User FK] - Banned user. Normalization: ensures canonical reference; never duplicated user information.\n  user_id String @db.Uuid\n\n  /// [Moderator FK] - Moderator responsible for ban/termination. Only references, never duplicates mod identity.\n  moderator_id String @db.Uuid\n\n  /// [Warning FK] - Warning event that triggered this ban (if relevant). Null unless escalation. Maintains normalization.\n  warning_id String? @db.Uuid\n\n  /// [Report FK] - Abuse report that resulted in ban (if relevant). Provides direct traceability and keeps schema normalized.\n  report_id String? @db.Uuid\n\n  /// [Ban Type] - 'temporary' or 'permanent'. Application logic defines allowed enum. Keeps atomic, normalized per ban row.\n  ban_type String\n\n  /// [Ban Reason] - Atomic string detailing moderator justification for ban.\n  reason String\n\n  /// [Ban Start] - When ban was applied. For ongoing compliance and system checks.\n  banned_at DateTime @db.Timestamptz\n\n  /// [Ban Expiry] - Ban end (null if permanent). Keeps type atomic and supports dynamic unbanning.\n  expires_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  user      discussion_board_users      @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  moderator discussion_board_moderators @relation(fields: [moderator_id], references: [id], onDelete: Cascade)\n  warning   discussion_board_warning?   @relation(fields: [warning_id], references: [id], onDelete: Cascade)\n  report    discussion_board_report?    @relation(fields: [report_id], references: [id], onDelete: Cascade)\n\n  @@index([moderator_id])\n  @@index([warning_id])\n  @@index([report_id])\n  @@index([user_id, banned_at])\n  @@index([reason(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n",
        "schema-05-analytics.prisma": "/// Thread Statistics - This implements the thread analytics and performance tracking requirement from the requirements document (see 'Analytics Dashboard', 'Content Quality Metrics', and 'Trending Topics' features). \n///\n/// Provides essential storage for per-thread statistics such as the number of posts, comments, upvotes, downvotes, bookmarks, and abuse reports. Maintains 3NF by separating out aggregate/thread-level metrics from the main thread/post tables, avoiding redundancy or transitive dependencies. For example, this table is queried to highlight trending threads on dashboards or to trigger moderation review if abuse counts spike.\n///\n/// Key relationships: references each thread (discussion_board_thread_id) directly; thread stats may be joined with user, moderator, or content abuse metric tables for advanced reporting. \n/// Special behaviors: Statistics are updated through dedicated service logic and batch jobs; all values reset if threads are deleted. No calculated fields here—pre-calculation is only allowed in mv_ materialized views for reporting snapshots.\n///\n/// @namespace Analytics\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_thread_stats {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key - Implements unique, stable identification for each thread statistics record.\n  ///\n  /// Uniquely identifies statistics per thread. Ensures normalization as the single-row-per-thread record anchor. Example: Used as the foreign key reference from other analytic or reporting systems.\n  id String @id @db.Uuid\n\n  /// Thread Reference - Implements the mapping from statistics to the corresponding thread.\n  ///\n  /// Connects per-thread statistics to its primary discussion thread. Enforces normalization and referential integrity: every set of stats must belong to a valid thread. Example: When calculating trending topics, stats are filtered/grouped by this association. Constraint: Unique per thread.\n  discussion_board_thread_id String @db.Uuid\n\n  /// Post Count - Implements tracking of total posts per thread.\n  ///\n  /// Atomic and normalized: not derived, just incremented via logic. Example: Used for ranking or showing thread activity level.\n  post_count Int @db.Integer\n\n  /// Comment Count - Implements tracking of comment volume per thread.\n  ///\n  /// Normalized, not computed from joins—only incremented or decremented on comment add/delete. For example, used to quickly filter threads with high participation.\n  comment_count Int @db.Integer\n\n  /// Upvote Count - Implements part of engagement analytics per thread.\n  ///\n  /// Atomic, directly updated, not derived from votes table. Used for popularity display and filters. Normalized and non-redundant.\n  upvote_count Int @db.Integer\n\n  /// Downvote Count - Complements engagement analytics, enables controversial thread detection.\n  ///\n  /// Atomic field, directly maintained—not computed on the fly or denormalized from votes. Used in sort/filter, supports normalization by not including aggregate scores elsewhere.\n  downvote_count Int @db.Integer\n\n  /// Bookmark Count - Tracks unique user bookmarks for this thread.\n  ///\n  /// Atomic integer, normalized: no redundant storage in user or thread tables. Helps power user feed and favorites lists.\n  bookmark_count Int @db.Integer\n\n  /// Abuse Report Count - Implements monitoring/reporting for moderation triggers.\n  ///\n  /// Atomic, not computed; updated as users report content. For example, threads hitting a certain threshold show up in moderation dashboards. Supports auditing and quality control without polluting main business records.\n  abuse_report_count Int @db.Integer\n\n  /// Created At Timestamp - Implements record origination tracking.\n  ///\n  /// Atomic timestamp, supports audit, migration, and compliance. Example: Used by analytics for time-based trends.\n  created_at DateTime @db.Timestamptz\n\n  /// Updated At Timestamp - Implements update tracking for stats changes.\n  ///\n  /// Ensures all stats edits are tracked and assists with synchronization/auditing. Required for compliant analytics and consistent service behavior.\n  updated_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  discussion_board_thread discussion_board_thread @relation(fields: [discussion_board_thread_id], references: [id], onDelete: Cascade)\n\n  @@unique([discussion_board_thread_id])\n  @@index([created_at])\n  @@index([upvote_count, downvote_count])\n}\n\n/// User Activity Metrics - This implements the 'Profile Activity Feed' and user engagement analytics features (see 'User Profiles & Activity', 'Analytics Dashboard').\n///\n/// Stores usage statistics for each user including counts of threads authored, comments, upvotes/downvotes made, reports submitted, and bookmarks created. 3NF compliant by having ONLY activity metrics per user—no denormalized data. For example, this table feeds user reputation calculations and enables profile activity views.\n///\n/// Key relationships: references discussion_board_user, discussion_board_user_profile for detailed join queries. Used by moderators/admins to assess user activity patterns. Special behaviors: Reset or anonymize activity counts for deleted/deactivated users as part of privacy compliance.\n///\n/// @namespace Analytics\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_user_activity {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key - Uniquely identifies each user activity metrics record.\n  ///\n  /// Guarantees one-to-one mapping with user entity for their aggregated metrics. 3NF: no derived data here—core activity metrics only.\n  id String @id @db.Uuid\n\n  /// User Reference - Links metrics to an individual user account.\n  ///\n  /// Supports referential integrity and 3NF: all metrics are for a real, valid user only. Example: Used when building profile dashboards or leaderboard features.\n  discussion_board_user_id String @db.Uuid\n\n  /// Threads Authored - Counts threads created by this user.\n  ///\n  /// Atomic, not derived elsewhere. Used in calculating engagement or reputation features.\n  threads_authored Int @db.Integer\n\n  /// Posts Authored - Number of initial posts (not comments) started by the user.\n  ///\n  /// Maintains normalization—no redundancy with thread or post tables.\n  posts_authored Int @db.Integer\n\n  /// Comments Authored - Tracks comment participation for this user.\n  ///\n  /// Atomic value, 3NF compliant. Used in moderation, reputation calculations, and personalized analytics.\n  comments_authored Int @db.Integer\n\n  /// Upvotes Given - Number of times the user upvoted a thread or comment.\n  ///\n  /// Normalization: never derived, direct update only. Enables analysis of engagement and supports anti-abuse monitoring.\n  upvotes_given Int @db.Integer\n\n  /// Downvotes Given - Number of downvote actions performed by user.\n  ///\n  /// Atomic and non-redundant. Used for abuse pattern analysis and community flavor metrics.\n  downvotes_given Int @db.Integer\n\n  /// Reports Made - Total reports submitted by user for abusive/inappropriate content.\n  ///\n  /// Enables anti-abuse metrics, moderation insights, and potential restrictions for frequent false reporters. 3NF: only original counts are stored.\n  reports_made Int @db.Integer\n\n  /// Bookmarks Created - Tracks count of bookmarks a user has made.\n  ///\n  /// Atomic field for UX features like favorites. Complies with normalization—bookmarks data not duplicated here.\n  bookmarks_created Int @db.Integer\n\n  /// Created At Timestamp - When the activity metrics record was created.\n  ///\n  /// Supports audit and traceability for compliance and analytics.\n  created_at DateTime @db.Timestamptz\n\n  /// Updated At Timestamp - Last time user metrics were updated.\n  ///\n  /// Required for synchronization, analytics workflows, and audit trail features.\n  updated_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  discussion_board_user discussion_board_users @relation(fields: [discussion_board_user_id], references: [id], onDelete: Cascade)\n\n  @@unique([discussion_board_user_id])\n  @@index([created_at])\n}\n\n/// Content Abuse Metrics - Implements the monitoring and metric-tracking requirements for abusive, spammy, or otherwise policy-violating activities (see Non-Functional: Security, Moderation & Abuse Prevention, and Analytics Dashboard requirements).\n///\n/// Tracks per-day metrics for flagged posts, abuse types, resolution times, auto-hides, moderator escalations, and false positive rates. Maintains 3NF by keeping only atomic, event-driven counts—no derived aggregates or flags. Example: Used by moderators and system analysts to determine policy needs, spot abuse trends, and audit moderator efficiency.\n///\n/// Key relationships: Optionally references moderator for moderator-action mapping. Special behaviors: All time fields are UTC-normalized; no calculated fields—historical snapshots for trends must use mv_ tables.\n///\n/// @namespace Analytics\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_content_abuse_metric {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key - Unique identifier for each metric record, one per day+category.\n  ///\n  /// Ensures uniqueness for each set of abuse metrics tracked, supporting 3NF and compliance.\n  id String @id @db.Uuid\n\n  /// Moderator Reference - If applicable, links the metrics to a specific moderator for escalation/resolution mapping.\n  ///\n  /// 3NF: Foreign key nullable—some metrics may not involve a moderator (e.g., automated actions).\n  moderator_id String? @db.Uuid\n\n  /// Metric Date - Calendar day for which these metrics are tracked. Stored as ISO date string in yyyy-mm-dd format due to Prisma/JSON schema type constraints.\n  ///\n  /// Helps enforce normalized per-day storage. Example usage: plotting abuse events over time.\n  date String\n\n  /// Abuse Type - String field categorizing abuse/spam type for the metric row (e.g., spam, hate_speech, offensive_language, off_topic, etc.).\n  ///\n  /// Maintains atomic (non-derived) data, supports normalization. Later analytics may perform grouping or pivoting on this field.\n  abuse_type String\n\n  /// Flagged Count - Number of posts/comments flagged as abusive for this type/date.\n  ///\n  /// Atomic, not calculated. Example: Input into moderation alerts, compliance or escalation triggers.\n  flagged_count Int @db.Integer\n\n  /// Auto Hidden Count - Number of posts/comments that were auto-hidden by policy on this date/type.\n  ///\n  /// Enables monitoring of automated moderation effectiveness and supports normalization by centralizing such stats here only.\n  auto_hidden_count Int @db.Integer\n\n  /// Escalation Count - Metric for abuse events escalated to a moderator or admin.\n  escalation_count Int @db.Integer\n\n  /// False Positive Count - Number of flagged events later cleared as false positives.\n  ///\n  /// Atomic and normalized; only tracked here, not in user or content tables. For example, helps track the impact of moderation improvements or AI upgrades.\n  false_positive_count Int @db.Integer\n\n  /// Average Resolution Time (Minutes) - Time spent (mean) to resolve, measured in minutes.\n  ///\n  /// Atomic metric, supports moderation workflow optimization. Normalized: full timestamps elsewhere, metric-only here. Used in dashboard averages and efficiency reports.\n  avg_resolution_time_minutes Int @db.Integer\n\n  /// Created At Timestamp - Origination time of this metric record.\n  ///\n  /// Ensures compliance, allows for backfill/audit. Supports time-based analytics for abuse detection improvements.\n  created_at DateTime @db.Timestamptz\n\n  /// Updated At Timestamp - When this record was last updated.\n  ///\n  /// Used for auditing statistics and ETL workflows in analytics pipelines.\n  updated_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  discussion_board_moderator discussion_board_moderators? @relation(fields: [moderator_id], references: [id], onDelete: Cascade)\n\n  @@unique([date, abuse_type])\n  @@index([date, flagged_count])\n  @@index([moderator_id, escalation_count])\n}\n",
        "schema-06-utility.prisma": "/// [Platform Configuration] - This implements the global platform and board-level settings requirement detailed in the feature, security, and privacy sections of the requirements analysis report (see 02_discussion_board_feature_requirements.md, 03_discussion_board_nonfunctional_and_operational_requirements.md). \n///\n/// This model enables administrators to store and manage mutable configuration values that affect discussion board functionality, presentation, and enforcement of rules—such as registration policy, default privacy, feature toggles (like post editing, image uploads), and branding. Maintains strict 3NF normalization by storing only atomic configuration entries, each identified by a symbolic key. No settings are duplicated, and all relations to system config (for default inheritance) are managed externally. For example, to toggle whether new threads require approval, a setting with key 'require_thread_approval' can be set to true or false. \n///\n/// Key relationships: Should be referenced by system components enforcing runtime behavior; no hard foreign keys to application-level models (stateless coupling).\n/// Special behaviors: Uniqueness by 'key' is enforced. Deletion disables the setting but doesn't remove its value (for audit).\n///\n/// @namespace Utility\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_setting {\n  //----\n  // COLUMNS\n  //----\n  /// [Unique Setting Key] - Implements the unique identification requirement for persistent board settings.\n  /// Business meaning: Each setting must be addressable, auditable and updatable atomically. Ensures normalization by using a UUID-based identifier, aligning with best practices for distributed systems.\n  /// For example, to update the 'default_thread_sort' behavior, the corresponding setting row is addressed via this field.\n  id String @id @db.Uuid\n\n  /// [Setting Key] - Implements symbolic addressing of each configuration aspect as required for modularity and feature toggling (see system configuration requirements).\n  /// Business meaning: Allows individual settings (like 'allow_file_uploads', 'enable_external_login') to be toggled/queried atomically. Ensures strict normalization as each entry is uniquely keyed and non-redundant. For example, 'require_email_verification' represents the signup policy toggle.\n  key String\n\n  /// [Atomic Value] - Stores the configuration value as required for runtime lookups and mutation.\n  /// Business meaning: Enables flexible value types (as string), supporting boolean, number, JSON-stringified objects where needed. Remains normalized as all values are atomic and not derived; interpretation is handled in business logic. Example usage: 'false' for 'require_thread_approval' disables moderation queue for threads.\n  value String\n\n  /// [Human-Readable Description] - Implements administrator tooling and auditability requirements. \n  /// Business meaning: Provides context about the setting’s effect and usage, supporting maintainability and transparency. For example, \"If true, moderators must approve every new thread.\" This is atomic and ensures no duplicated documentation.\n  /// Nullable, as not all settings require verbose descriptions.\n  description String?\n\n  /// [Creation Timestamp] - Supports audit trail, compliance, and troubleshooting workflows (03_discussion_board_nonfunctional_and_operational_requirements.md).\n  /// Business meaning: Allows admins to audit when this setting was introduced. Ensures normalization as the timestamp is intrinsic to the row, not derived. Example: Used in audit reporting to trace config changes over time.\n  created_at DateTime @db.Timestamptz\n\n  /// [Last Update Timestamp] - Tracks when the setting was modified, supporting audit logs and compliance.\n  /// Business meaning: Used to verify when a given setting was last changed, e.g. for privacy compliance or rollback. Maintains normalization as this field is not computed from others.\n  /// Example: On toggling 'allow_external_sharing', this gets refreshed automatically.\n  updated_at DateTime @db.Timestamptz\n\n  /// [Soft-Delete Marker] - Implements the logical deletion audit and recovery requirement (nonfunctional section on compliance, disaster recovery).\n  /// Business meaning: Marks a setting as inactive rather than physically deleting, supporting rollback and postmortem.\n  /// Ensures normalization by storing row state atomically. Example: Disabled settings can be referenced for rollback or audit purposes.\n  deleted_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  @@unique([key])\n  @@index([deleted_at])\n}\n\n/// [System-wide Default Configuration] - This implements the requirement for global, default system configuration (see section on configuration inheritance and compliance, 03_discussion_board_nonfunctional_and_operational_requirements.md).\n///\n/// This model provides a single authoritative set of configuration values, typically set by the system owner, which cascade as defaults for all board-level settings unless overridden in discussion_board_setting. Maintains 3NF by holding atomic config fields only—no computed values or redundancies. For example, setting the system-wide default for 'max_upload_size' and 'invite_policy'.\n///\n/// Key relationships: Not directly referenced by board instances or users (stateless), but queried by system logic to resolve runtime policies for all boards.\n/// Special behaviors: Only one row should exist at a time in most deployments; multiple configs used for versioning, which should be enforced by application/business logic outside DB.\n///\n/// @namespace Utility\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussion_board_system_config {\n  //----\n  // COLUMNS\n  //----\n  /// [System Config Unique ID] - Implements the need for identifying each system-wide configuration set (for versioning, audit, or recovery). \n  /// Business meaning: Allows referencing, updating, or rolling back changes atomically. Maintains normalization as an atomic UUID not derived from other fields. For example, on full platform config migration, a new row is inserted and old one marked deleted.\n  id String @id @db.Uuid\n\n  /// [Configuration Key] - Names the specific configuration point in the system, as per requirement for admin-driven, symbolic settings.\n  /// Business meaning: Flexible to store any system-level default (such as 'default_privacy_level' or 'max_upload_size_bytes'). Strict normalization: every configuration item is atomic, logical grouping is by application logic. Example: Setting 'enable_registration' to allow/disallow new accounts.\n  key String\n\n  /// [Atomic Value] - The actual value for the specified config key. May be used as a string, boolean, numeric, or JSON-stringified object by external logic.\n  /// Business meaning: Enables maximum runtime flexibility (see dynamic config requirement) without denormalization—all values stored atomically as string. For example, storing '100' as the default threads-per-page setting.\n  value String\n\n  /// [Description] - Explains what the configuration controls for admin context, as required for nonfunctional requirements on maintainability and transparency.\n  /// Business meaning: Helps admins understand system default values. Nullable (not all settings need documentation). Maintains normalization—each row documents one config point. Example: 'Default limit for file attachment size, in bytes.'\n  description String?\n\n  /// [Creation Timestamp] - Records when this configuration entry was created, supporting compliance and configuration audit trails.\n  /// Business meaning: Used for recovery and forensic tracking of policy changes. Strictly normalized—atomic to the row. Example: Auditing how system-wide spam filter rules evolved.\n  created_at DateTime @db.Timestamptz\n\n  /// [Update Timestamp] - Tracks updates, enabling controlled config changes and auditing (see disaster recovery and compliance requirements).\n  /// Business meaning: Ensures that admins can investigate when key system defaults last changed. Not computed/derived from other fields, maintaining strict normalization.\n  updated_at DateTime @db.Timestamptz\n\n  /// [Soft-Delete Marker] - Implements requirements for auditability and rollback in global config management.\n  /// Business meaning: Instead of being dropped, obsolete configs are softly deleted by setting this field, preserving history for compliance. Nullable for active rows. For example, marking outdated 'default_notification_email_policy'.\n  deleted_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  @@index([key])\n  @@index([deleted_at])\n}\n",
        "main.prisma": "generator client {\n  provider        = \"prisma-client-js\"\n  previewFeatures = [\"postgresqlExtensions\", \"views\"]\n  binaryTargets   = [\"native\"]\n}\n\ndatasource db {\n  provider   = \"postgresql\"\n  url        = env(\"DATABASE_URL\")\n  extensions = []\n}\n\ngenerator markdown {\n  provider = \"prisma-markdown\"\n  output   = \"../docs/ERD.md\"\n}\n"
      },
      "nodeModules": {
        "node_modules/.prisma/client/client.d.ts": "export * from \"./index\"",
        "node_modules/.prisma/client/default.d.ts": "export * from \"./index\"",
        "node_modules/.prisma/client/edge.d.ts": "export * from \"./default\"",
        "node_modules/.prisma/client/index.d.ts": "\n/**\n * Client\n**/\n\nimport * as runtime from './runtime/library.js';\nimport $Types = runtime.Types // general types\nimport $Public = runtime.Types.Public\nimport $Utils = runtime.Types.Utils\nimport $Extensions = runtime.Types.Extensions\nimport $Result = runtime.Types.Result\n\nexport type PrismaPromise<T> = $Public.PrismaPromise<T>\n\n\n/**\n * Model discussion_board_users\n * User Accounts - This implements the requirement for individual user accounts, supporting registration, authentication, and all user-related auditability. \n * \n * Provides foundational user representation for all feature requirements involving user actions (posts, comments, votes, favorites, reports). Maintains full 3NF compliance by storing only atomic user identity attributes, with all other aspects normalized into related tables. For example, user display data and settings are not stored here but in dedicated profile/settings tables.\n * \n * Key relationships: Connects to {@link discussion_board_user_profiles}, {@link discussion_board_user_settings}, thread/posts/comments. \n * Special behaviors: Uniqueness enforced on email/username; supports audit trails without calculated fields.\n * \n * @namespace Core\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussion_board_users = $Result.DefaultSelection<Prisma.$discussion_board_usersPayload>\n/**\n * Model discussion_board_guests\n * Guest Access Logs - Implements the requirement to record unauthenticated/guest accesses per compliance and analytics goals. \n * Stores only atomic guest event records; does not duplicate user account data. Maintains 3NF: each row is a simple access instance, not historical aggregation.\n * Key relationships: No foreign keys to the users table; all-inbound guest access.\n * Special behaviors: Used only for analytic/compliance reporting; not authentication.\n * \n * @namespace Core\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussion_board_guests = $Result.DefaultSelection<Prisma.$discussion_board_guestsPayload>\n/**\n * Model discussion_board_moderators\n * Moderator Roles - This model implements the requirement for moderator user assignment, privilege tracking, and role audit. \n * Represents the logical bridge between core user record and their moderator status, maintaining 3NF by not duplicating user identity or other profile information. For example, a user is assigned moderator status by being present in this table.\n * Key relationships: FK to {@link discussion_board_users}, logs all who have or have had moderator role.\n * Special behaviors: Historical tracking (active, demoted) possible without denormalization.\n * \n * @namespace Core\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussion_board_moderators = $Result.DefaultSelection<Prisma.$discussion_board_moderatorsPayload>\n/**\n * Model discussion_board_admins\n * Administrator Roles - Implements explicit administrator account linkage for full-system privileges, as required for configuration, user management, and audit purposes. 3NF: role assignment not duplicating user record.\n * \n * Key relationships: Links to {@link discussion_board_users} (user account), supports operational distinction between admins and other roles.\n * Special behaviors: Admin privileges conferred strictly by row existence, supporting audit via assigned_at/revoked_at.\n * \n * @namespace Core\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussion_board_admins = $Result.DefaultSelection<Prisma.$discussion_board_adminsPayload>\n/**\n * Model discussion_board_user_profiles\n * User Profiles - Implements the requirement for extended, public-facing user information, as distinct from credentials. \n * Supports profile fields (display name, avatar, bio, badges) and community metrics, strictly normalized and not duplicating data from users or settings. 3NF guaranteed: one profile per user, no pre-computed/aggregated fields stored here. Ex: upvote totals in views only.\n * \n * Key relationships: FK to {@link discussion_board_users}, exactly one per user.\n * Special behaviors: Updates do not affect credentials or privacy settings.\n * \n * @namespace Core\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussion_board_user_profiles = $Result.DefaultSelection<Prisma.$discussion_board_user_profilesPayload>\n/**\n * Model discussion_board_user_settings\n * User Settings - Implements private, user-specific preferences and configuration (notification opt-in, accessibility, display, etc.). Normalized to ensure no redundant storage in user, profile, or role tables. Purely atomic per preference field; no rollups or calculated values.\n * \n * Key relationships: FK to {@link discussion_board_users}, strictly 1:1 mapping.\n * Special behaviors: Updating settings does not affect user credentials or profile.\n * \n * @namespace Core\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussion_board_user_settings = $Result.DefaultSelection<Prisma.$discussion_board_user_settingsPayload>\n/**\n * Model discussion_board_thread\n * [Thread Entity] - Implements thread management and structure from requirements. Represents a single discussion topic (thread), allows users to initiate topics, and structures posts under a subject. Enforces 3NF by holding only atomic thread details, linking to user and category. No redundant or derived fields.\n * - Key relationships: Created by discussion_board_user, assigned to discussion_board_thread_category. Threads have many posts, tags assigned via junction table.\n * \n * @namespace Discussion\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussion_board_thread = $Result.DefaultSelection<Prisma.$discussion_board_threadPayload>\n/**\n * Model discussion_board_post\n * [Post Entity] - Implements post logic from requirements. Each row represents a post in a thread, including first and replies. 3NF enforced: only atomic fields. Posts reference thread and author, may be parent (for future nesting).\n * \n * @namespace Discussion\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussion_board_post = $Result.DefaultSelection<Prisma.$discussion_board_postPayload>\n/**\n * Model discussion_board_comment\n * [Comment Entity] - Implements comment/reply requirement. Each row is a single comment. 3NF enforced: each comment is atomic, referencing only its parent post/author/optional parent comment.\n * \n * @namespace Discussion\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussion_board_comment = $Result.DefaultSelection<Prisma.$discussion_board_commentPayload>\n/**\n * Model discussion_board_thread_tag\n * [Thread Tag Junction Table] - Implements M:N thread-tagging. Junction table only: each row links thread to allowed tag. No tag metadata stored here. Fully normalized (M:N).\n * \n * @namespace Discussion\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussion_board_thread_tag = $Result.DefaultSelection<Prisma.$discussion_board_thread_tagPayload>\n/**\n * Model discussion_board_thread_category\n * [Thread Category Table] - Implements thread categorization. Each record is a unique, atomic category. No derived values. Used for grouping threads only.\n * \n * @namespace Discussion\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussion_board_thread_category = $Result.DefaultSelection<Prisma.$discussion_board_thread_categoryPayload>\n/**\n * Model discussion_board_tag_category\n * [Tag Category Table] - Master tag list fulfilling tag requirements. Each is atomic, referenced only by ID from thread tags. 3NF maintained: no aggregates or redundant fields.\n * \n * @namespace Discussion\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussion_board_tag_category = $Result.DefaultSelection<Prisma.$discussion_board_tag_categoryPayload>\n/**\n * Model mv_discussion_thread_activity\n * [Materialized View: Thread Activity] - Implements denormalized aggregate/reporting requirements for threads. Contains precomputed fields like reply_count for high-performance dashboards; these are omitted from base tables to enforce normalization.\n * \n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type mv_discussion_thread_activity = $Result.DefaultSelection<Prisma.$mv_discussion_thread_activityPayload>\n/**\n * Model discussion_board_vote\n * [Vote Tracking] - This implements the 'Upvote/Downvote' and vote aggregation requirements outlined under 'Content Interaction' in 02_discussion_board_feature_requirements.md. \n * \n * This model records every user's voting action (upvote or downvote) on threads, posts, and comments, allowing for tailored, real-time engagement statistics. Maintains 3NF by using atomic fields for all voting events, referencing both the voter and the target entity by normalized foreign keys. For example, when a user upvotes a comment, a new record is inserted specifying the user, target type, and direction. \n * \n * Key relationships: references the voting user in discussion_board_user and any of discussion_board_thread, discussion_board_post, or discussion_board_comment for the voted content. \n * Special behaviors: Each user can only vote once per target; direction is strictly controlled; supports both upvotes and downvotes. Duplicate prevention is enforced by a composite unique index on (voter, target_type, target_id).\n * \n * @namespace Engagement\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussion_board_vote = $Result.DefaultSelection<Prisma.$discussion_board_votePayload>\n/**\n * Model discussion_board_reaction\n * [Reaction Log] - Implements the 'Voting & Reactions' and 'Rich Content' feature requirements from 02_discussion_board_feature_requirements.md. \n * \n * This model records each user's emoji or symbolic reaction (e.g., emoji, like, disagree) attached to threads, posts, or comments. Fully 3NF: relation links stored atomically, no aggregates or counts in this table. For example, if a user reacts with 'like' to a post, an entry references the user, the post, and the type of reaction. \n * \n * Key relationships: References user, and one of thread, post, or comment. \n * Special behaviors: Composite unique index enforces only one reaction of a specific type per user/target; arbitrary duplicate prevention. Used to drive aggregates (in views/materialized views) and for real-time UX feedback.\n * \n * @namespace Engagement\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussion_board_reaction = $Result.DefaultSelection<Prisma.$discussion_board_reactionPayload>\n/**\n * Model discussion_board_bookmark\n * [User Bookmarking] - Implements the 'Bookmark/Favorite' feature from the 'Content Interaction' section in 02_discussion_board_feature_requirements.md. \n * \n * Allows users to save threads, posts, or comments for rapid access from their profile dashboards. Model structure maintains 3NF: each bookmark is atomic (user, target), no derived summary stored in this table. For example, when a user bookmarks a thread, one row is inserted per user/thread pair. \n * \n * Key relationships: Links to user and exactly one type of content. \n * Special behaviors: Composite unique index to prevent duplicate user/content bookmarks; each bookmark is atomic, supporting efficient bookmarking/unbookmarking.\n * \n * @namespace Engagement\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussion_board_bookmark = $Result.DefaultSelection<Prisma.$discussion_board_bookmarkPayload>\n/**\n * Model discussion_board_notification\n * [Notifications Log] - Implements notification requirements for alerting users (in-app and email channels) about replies, mentions, moderation actions, etc., as described in the Notifications & Subscriptions features in 02_discussion_board_feature_requirements.md. \n * \n * Every notification event is atomic and tied to the recipient and optionally the triggering content. Maintains full normalization by separating each notification event from aggregates or status fields. For example, when a user is mentioned in a thread, a row is inserted with recipient, type, linking to triggering content if needed. \n * \n * Key relationships: Ties to recipient user and optionally to the related thread/post/comment. \n * Special behaviors: Non-null constraint on recipient; stores read/unread and delivery details for downstream UI logic. Notification history enables auditing and user controls for opt out, etc.\n * \n * @namespace Engagement\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussion_board_notification = $Result.DefaultSelection<Prisma.$discussion_board_notificationPayload>\n/**\n * Model discussion_board_subscription\n * [Notification Subscriptions] - Implements 'Subscribe/Unsubscribe' and alert preferences from Notification & Subscription requirements in 02_discussion_board_feature_requirements.md. \n * \n * Table records explicit user opt-ins to topics, threads, or tags for notification delivery. Maintains full normalization: each record links subscriber, content, and chosen channel(s), with one row per atomic subscription. For instance, subscribing a user to a thread generates a record referencing the user, thread, and notification channel preferences. No aggregated status (e.g., total subscribers) is denormalized here. \n * \n * Key relationships: Links user to subscribed content (thread, tag, optionally post/comment for granular alerts). \n * Special behaviors: Uniqueness constraint prevents duplicate subscriptions to the same channel/source. Supports managing user preferences and batch opt-in/out for analytics and compliance.\n * \n * @namespace Engagement\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussion_board_subscription = $Result.DefaultSelection<Prisma.$discussion_board_subscriptionPayload>\n/**\n * Model discussion_board_report\n * [Report Entity] - This implements the reporting and abuse workflow requirement from section 4 of the feature requirements. Enables users to flag inappropriate content for moderator review, centralizing reports for transparency and action tracking. Maintains 3NF by referencing precise users and content without duplicating user or content data. For example, when a post is flagged as offensive, a record is created here for moderator workflow. \n * Key relationships: Links to reported user (optional), reporting user, and polymorphic content (thread/post/comment). Moderators use this to manage abuse workflows. \n * Special behaviors: Cannot initiate for non-existent content; only one open report per user/content at a time is allowed.\n * \n * @namespace Moderation\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussion_board_report = $Result.DefaultSelection<Prisma.$discussion_board_reportPayload>\n/**\n * Model discussion_board_moderator_action\n * [Moderator Action Log] - Implements audit trail for moderator interventions as per Moderation Tools requirements (Section 8). Tracks every moderation event, providing historical accountability and clarity for escalated workflows. Maintains full normalization: stores only atomic reference to affected entities. For example, documenting a post removal or warning issued.\n * Key relationships: Linked to moderator, reported user, report, and content (thread/post/comment). Supports analytics and compliance.\n * Special behaviors: Immutable history (never updated, only appended).\n * \n * @namespace Moderation\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussion_board_moderator_action = $Result.DefaultSelection<Prisma.$discussion_board_moderator_actionPayload>\n/**\n * Model discussion_board_audit_log\n * [Global Audit Log] - Implements operational/audit requirements for compliance (Section 3, Non-Functional). Captures every high-impact admin or moderator change—user status, settings, board config, bans, etc. Designed for transparency and tamper-proof history. 3NF compliance: references changed entity and actor, avoids non-atomic fields. For example, logs every ban, warning, or system setting change.\n * Key relationships: Relates to admin/moderator, optionally affected user and system objects.\n * Special behaviors: Write-only history, never updated (immutable log).\n * \n * @namespace Moderation\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussion_board_audit_log = $Result.DefaultSelection<Prisma.$discussion_board_audit_logPayload>\n/**\n * Model discussion_board_warning\n * [Warning Entity] - Implements user warning workflow, supporting progressive discipline before bans. Complies with feature requirement for moderation and sanction history (Section 8). Ensures warnings are structured, individually reference mod and user, and retained for audit. Maintains 3NF: only links, never duplicates, user or mod info. E.g., user warned for offensive content, with one row per event.\n * Key relationships: Directly linked to moderator and user; optionally references related content.\n * Special behaviors: Sequential warnings tracked for progressive moderation.\n * \n * @namespace Moderation\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussion_board_warning = $Result.DefaultSelection<Prisma.$discussion_board_warningPayload>\n/**\n * Model discussion_board_ban\n * [Ban Entity] - Implements account ban/suspension workflow per moderation and compliance requirements. Tracks bans (temporary, permanent) individually. Strict 3NF: only links to user, moderator, triggering action or report. For example, permanent ban for repeat abuse.\n * Key relationships: Points to user, moderator, optional warning or report triggering the ban. Used by system for access control/state changes.\n * Special behaviors: Bans are never updated, only created (history preserved for compliance).\n * \n * @namespace Moderation\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussion_board_ban = $Result.DefaultSelection<Prisma.$discussion_board_banPayload>\n/**\n * Model discussion_board_thread_stats\n * Thread Statistics - This implements the thread analytics and performance tracking requirement from the requirements document (see 'Analytics Dashboard', 'Content Quality Metrics', and 'Trending Topics' features). \n * \n * Provides essential storage for per-thread statistics such as the number of posts, comments, upvotes, downvotes, bookmarks, and abuse reports. Maintains 3NF by separating out aggregate/thread-level metrics from the main thread/post tables, avoiding redundancy or transitive dependencies. For example, this table is queried to highlight trending threads on dashboards or to trigger moderation review if abuse counts spike.\n * \n * Key relationships: references each thread (discussion_board_thread_id) directly; thread stats may be joined with user, moderator, or content abuse metric tables for advanced reporting. \n * Special behaviors: Statistics are updated through dedicated service logic and batch jobs; all values reset if threads are deleted. No calculated fields here—pre-calculation is only allowed in mv_ materialized views for reporting snapshots.\n * \n * @namespace Analytics\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussion_board_thread_stats = $Result.DefaultSelection<Prisma.$discussion_board_thread_statsPayload>\n/**\n * Model discussion_board_user_activity\n * User Activity Metrics - This implements the 'Profile Activity Feed' and user engagement analytics features (see 'User Profiles & Activity', 'Analytics Dashboard').\n * \n * Stores usage statistics for each user including counts of threads authored, comments, upvotes/downvotes made, reports submitted, and bookmarks created. 3NF compliant by having ONLY activity metrics per user—no denormalized data. For example, this table feeds user reputation calculations and enables profile activity views.\n * \n * Key relationships: references discussion_board_user, discussion_board_user_profile for detailed join queries. Used by moderators/admins to assess user activity patterns. Special behaviors: Reset or anonymize activity counts for deleted/deactivated users as part of privacy compliance.\n * \n * @namespace Analytics\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussion_board_user_activity = $Result.DefaultSelection<Prisma.$discussion_board_user_activityPayload>\n/**\n * Model discussion_board_content_abuse_metric\n * Content Abuse Metrics - Implements the monitoring and metric-tracking requirements for abusive, spammy, or otherwise policy-violating activities (see Non-Functional: Security, Moderation & Abuse Prevention, and Analytics Dashboard requirements).\n * \n * Tracks per-day metrics for flagged posts, abuse types, resolution times, auto-hides, moderator escalations, and false positive rates. Maintains 3NF by keeping only atomic, event-driven counts—no derived aggregates or flags. Example: Used by moderators and system analysts to determine policy needs, spot abuse trends, and audit moderator efficiency.\n * \n * Key relationships: Optionally references moderator for moderator-action mapping. Special behaviors: All time fields are UTC-normalized; no calculated fields—historical snapshots for trends must use mv_ tables.\n * \n * @namespace Analytics\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussion_board_content_abuse_metric = $Result.DefaultSelection<Prisma.$discussion_board_content_abuse_metricPayload>\n/**\n * Model discussion_board_setting\n * [Platform Configuration] - This implements the global platform and board-level settings requirement detailed in the feature, security, and privacy sections of the requirements analysis report (see 02_discussion_board_feature_requirements.md, 03_discussion_board_nonfunctional_and_operational_requirements.md). \n * \n * This model enables administrators to store and manage mutable configuration values that affect discussion board functionality, presentation, and enforcement of rules—such as registration policy, default privacy, feature toggles (like post editing, image uploads), and branding. Maintains strict 3NF normalization by storing only atomic configuration entries, each identified by a symbolic key. No settings are duplicated, and all relations to system config (for default inheritance) are managed externally. For example, to toggle whether new threads require approval, a setting with key 'require_thread_approval' can be set to true or false. \n * \n * Key relationships: Should be referenced by system components enforcing runtime behavior; no hard foreign keys to application-level models (stateless coupling).\n * Special behaviors: Uniqueness by 'key' is enforced. Deletion disables the setting but doesn't remove its value (for audit).\n * \n * @namespace Utility\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussion_board_setting = $Result.DefaultSelection<Prisma.$discussion_board_settingPayload>\n/**\n * Model discussion_board_system_config\n * [System-wide Default Configuration] - This implements the requirement for global, default system configuration (see section on configuration inheritance and compliance, 03_discussion_board_nonfunctional_and_operational_requirements.md).\n * \n * This model provides a single authoritative set of configuration values, typically set by the system owner, which cascade as defaults for all board-level settings unless overridden in discussion_board_setting. Maintains 3NF by holding atomic config fields only—no computed values or redundancies. For example, setting the system-wide default for 'max_upload_size' and 'invite_policy'.\n * \n * Key relationships: Not directly referenced by board instances or users (stateless), but queried by system logic to resolve runtime policies for all boards.\n * Special behaviors: Only one row should exist at a time in most deployments; multiple configs used for versioning, which should be enforced by application/business logic outside DB.\n * \n * @namespace Utility\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussion_board_system_config = $Result.DefaultSelection<Prisma.$discussion_board_system_configPayload>\n\n/**\n * ##  Prisma Client ʲˢ\n *\n * Type-safe database client for TypeScript & Node.js\n * @example\n * ```\n * const prisma = new PrismaClient()\n * // Fetch zero or more Discussion_board_users\n * const discussion_board_users = await prisma.discussion_board_users.findMany()\n * ```\n *\n *\n * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).\n */\nexport class PrismaClient<\n  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,\n  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,\n  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs\n> {\n  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }\n\n    /**\n   * ##  Prisma Client ʲˢ\n   *\n   * Type-safe database client for TypeScript & Node.js\n   * @example\n   * ```\n   * const prisma = new PrismaClient()\n   * // Fetch zero or more Discussion_board_users\n   * const discussion_board_users = await prisma.discussion_board_users.findMany()\n   * ```\n   *\n   *\n   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).\n   */\n\n  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);\n  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;\n\n  /**\n   * Connect with the database\n   */\n  $connect(): $Utils.JsPromise<void>;\n\n  /**\n   * Disconnect from the database\n   */\n  $disconnect(): $Utils.JsPromise<void>;\n\n  /**\n   * Add a middleware\n   * @deprecated since 4.16.0. For new code, prefer client extensions instead.\n   * @see https://pris.ly/d/extensions\n   */\n  $use(cb: Prisma.Middleware): void\n\n/**\n   * Executes a prepared raw query and returns the number of affected rows.\n   * @example\n   * ```\n   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`\n   * ```\n   *\n   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).\n   */\n  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;\n\n  /**\n   * Executes a raw query and returns the number of affected rows.\n   * Susceptible to SQL injections, see documentation.\n   * @example\n   * ```\n   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')\n   * ```\n   *\n   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).\n   */\n  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;\n\n  /**\n   * Performs a prepared raw query and returns the `SELECT` data.\n   * @example\n   * ```\n   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`\n   * ```\n   *\n   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).\n   */\n  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;\n\n  /**\n   * Performs a raw query and returns the `SELECT` data.\n   * Susceptible to SQL injections, see documentation.\n   * @example\n   * ```\n   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')\n   * ```\n   *\n   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).\n   */\n  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;\n\n\n  /**\n   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.\n   * @example\n   * ```\n   * const [george, bob, alice] = await prisma.$transaction([\n   *   prisma.user.create({ data: { name: 'George' } }),\n   *   prisma.user.create({ data: { name: 'Bob' } }),\n   *   prisma.user.create({ data: { name: 'Alice' } }),\n   * ])\n   * ```\n   * \n   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).\n   */\n  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>\n\n  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>\n\n\n  $extends: $Extensions.ExtendsHook<\"extends\", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {\n    extArgs: ExtArgs\n  }>>\n\n      /**\n   * `prisma.discussion_board_users`: Exposes CRUD operations for the **discussion_board_users** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussion_board_users\n    * const discussion_board_users = await prisma.discussion_board_users.findMany()\n    * ```\n    */\n  get discussion_board_users(): Prisma.discussion_board_usersDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussion_board_guests`: Exposes CRUD operations for the **discussion_board_guests** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussion_board_guests\n    * const discussion_board_guests = await prisma.discussion_board_guests.findMany()\n    * ```\n    */\n  get discussion_board_guests(): Prisma.discussion_board_guestsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussion_board_moderators`: Exposes CRUD operations for the **discussion_board_moderators** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussion_board_moderators\n    * const discussion_board_moderators = await prisma.discussion_board_moderators.findMany()\n    * ```\n    */\n  get discussion_board_moderators(): Prisma.discussion_board_moderatorsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussion_board_admins`: Exposes CRUD operations for the **discussion_board_admins** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussion_board_admins\n    * const discussion_board_admins = await prisma.discussion_board_admins.findMany()\n    * ```\n    */\n  get discussion_board_admins(): Prisma.discussion_board_adminsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussion_board_user_profiles`: Exposes CRUD operations for the **discussion_board_user_profiles** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussion_board_user_profiles\n    * const discussion_board_user_profiles = await prisma.discussion_board_user_profiles.findMany()\n    * ```\n    */\n  get discussion_board_user_profiles(): Prisma.discussion_board_user_profilesDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussion_board_user_settings`: Exposes CRUD operations for the **discussion_board_user_settings** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussion_board_user_settings\n    * const discussion_board_user_settings = await prisma.discussion_board_user_settings.findMany()\n    * ```\n    */\n  get discussion_board_user_settings(): Prisma.discussion_board_user_settingsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussion_board_thread`: Exposes CRUD operations for the **discussion_board_thread** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussion_board_threads\n    * const discussion_board_threads = await prisma.discussion_board_thread.findMany()\n    * ```\n    */\n  get discussion_board_thread(): Prisma.discussion_board_threadDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussion_board_post`: Exposes CRUD operations for the **discussion_board_post** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussion_board_posts\n    * const discussion_board_posts = await prisma.discussion_board_post.findMany()\n    * ```\n    */\n  get discussion_board_post(): Prisma.discussion_board_postDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussion_board_comment`: Exposes CRUD operations for the **discussion_board_comment** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussion_board_comments\n    * const discussion_board_comments = await prisma.discussion_board_comment.findMany()\n    * ```\n    */\n  get discussion_board_comment(): Prisma.discussion_board_commentDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussion_board_thread_tag`: Exposes CRUD operations for the **discussion_board_thread_tag** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussion_board_thread_tags\n    * const discussion_board_thread_tags = await prisma.discussion_board_thread_tag.findMany()\n    * ```\n    */\n  get discussion_board_thread_tag(): Prisma.discussion_board_thread_tagDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussion_board_thread_category`: Exposes CRUD operations for the **discussion_board_thread_category** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussion_board_thread_categories\n    * const discussion_board_thread_categories = await prisma.discussion_board_thread_category.findMany()\n    * ```\n    */\n  get discussion_board_thread_category(): Prisma.discussion_board_thread_categoryDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussion_board_tag_category`: Exposes CRUD operations for the **discussion_board_tag_category** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussion_board_tag_categories\n    * const discussion_board_tag_categories = await prisma.discussion_board_tag_category.findMany()\n    * ```\n    */\n  get discussion_board_tag_category(): Prisma.discussion_board_tag_categoryDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.mv_discussion_thread_activity`: Exposes CRUD operations for the **mv_discussion_thread_activity** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Mv_discussion_thread_activities\n    * const mv_discussion_thread_activities = await prisma.mv_discussion_thread_activity.findMany()\n    * ```\n    */\n  get mv_discussion_thread_activity(): Prisma.mv_discussion_thread_activityDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussion_board_vote`: Exposes CRUD operations for the **discussion_board_vote** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussion_board_votes\n    * const discussion_board_votes = await prisma.discussion_board_vote.findMany()\n    * ```\n    */\n  get discussion_board_vote(): Prisma.discussion_board_voteDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussion_board_reaction`: Exposes CRUD operations for the **discussion_board_reaction** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussion_board_reactions\n    * const discussion_board_reactions = await prisma.discussion_board_reaction.findMany()\n    * ```\n    */\n  get discussion_board_reaction(): Prisma.discussion_board_reactionDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussion_board_bookmark`: Exposes CRUD operations for the **discussion_board_bookmark** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussion_board_bookmarks\n    * const discussion_board_bookmarks = await prisma.discussion_board_bookmark.findMany()\n    * ```\n    */\n  get discussion_board_bookmark(): Prisma.discussion_board_bookmarkDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussion_board_notification`: Exposes CRUD operations for the **discussion_board_notification** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussion_board_notifications\n    * const discussion_board_notifications = await prisma.discussion_board_notification.findMany()\n    * ```\n    */\n  get discussion_board_notification(): Prisma.discussion_board_notificationDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussion_board_subscription`: Exposes CRUD operations for the **discussion_board_subscription** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussion_board_subscriptions\n    * const discussion_board_subscriptions = await prisma.discussion_board_subscription.findMany()\n    * ```\n    */\n  get discussion_board_subscription(): Prisma.discussion_board_subscriptionDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussion_board_report`: Exposes CRUD operations for the **discussion_board_report** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussion_board_reports\n    * const discussion_board_reports = await prisma.discussion_board_report.findMany()\n    * ```\n    */\n  get discussion_board_report(): Prisma.discussion_board_reportDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussion_board_moderator_action`: Exposes CRUD operations for the **discussion_board_moderator_action** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussion_board_moderator_actions\n    * const discussion_board_moderator_actions = await prisma.discussion_board_moderator_action.findMany()\n    * ```\n    */\n  get discussion_board_moderator_action(): Prisma.discussion_board_moderator_actionDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussion_board_audit_log`: Exposes CRUD operations for the **discussion_board_audit_log** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussion_board_audit_logs\n    * const discussion_board_audit_logs = await prisma.discussion_board_audit_log.findMany()\n    * ```\n    */\n  get discussion_board_audit_log(): Prisma.discussion_board_audit_logDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussion_board_warning`: Exposes CRUD operations for the **discussion_board_warning** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussion_board_warnings\n    * const discussion_board_warnings = await prisma.discussion_board_warning.findMany()\n    * ```\n    */\n  get discussion_board_warning(): Prisma.discussion_board_warningDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussion_board_ban`: Exposes CRUD operations for the **discussion_board_ban** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussion_board_bans\n    * const discussion_board_bans = await prisma.discussion_board_ban.findMany()\n    * ```\n    */\n  get discussion_board_ban(): Prisma.discussion_board_banDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussion_board_thread_stats`: Exposes CRUD operations for the **discussion_board_thread_stats** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussion_board_thread_stats\n    * const discussion_board_thread_stats = await prisma.discussion_board_thread_stats.findMany()\n    * ```\n    */\n  get discussion_board_thread_stats(): Prisma.discussion_board_thread_statsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussion_board_user_activity`: Exposes CRUD operations for the **discussion_board_user_activity** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussion_board_user_activities\n    * const discussion_board_user_activities = await prisma.discussion_board_user_activity.findMany()\n    * ```\n    */\n  get discussion_board_user_activity(): Prisma.discussion_board_user_activityDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussion_board_content_abuse_metric`: Exposes CRUD operations for the **discussion_board_content_abuse_metric** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussion_board_content_abuse_metrics\n    * const discussion_board_content_abuse_metrics = await prisma.discussion_board_content_abuse_metric.findMany()\n    * ```\n    */\n  get discussion_board_content_abuse_metric(): Prisma.discussion_board_content_abuse_metricDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussion_board_setting`: Exposes CRUD operations for the **discussion_board_setting** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussion_board_settings\n    * const discussion_board_settings = await prisma.discussion_board_setting.findMany()\n    * ```\n    */\n  get discussion_board_setting(): Prisma.discussion_board_settingDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussion_board_system_config`: Exposes CRUD operations for the **discussion_board_system_config** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussion_board_system_configs\n    * const discussion_board_system_configs = await prisma.discussion_board_system_config.findMany()\n    * ```\n    */\n  get discussion_board_system_config(): Prisma.discussion_board_system_configDelegate<ExtArgs, ClientOptions>;\n}\n\nexport namespace Prisma {\n  export import DMMF = runtime.DMMF\n\n  export type PrismaPromise<T> = $Public.PrismaPromise<T>\n\n  /**\n   * Validator\n   */\n  export import validator = runtime.Public.validator\n\n  /**\n   * Prisma Errors\n   */\n  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError\n  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError\n  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError\n  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError\n  export import PrismaClientValidationError = runtime.PrismaClientValidationError\n\n  /**\n   * Re-export of sql-template-tag\n   */\n  export import sql = runtime.sqltag\n  export import empty = runtime.empty\n  export import join = runtime.join\n  export import raw = runtime.raw\n  export import Sql = runtime.Sql\n\n\n\n  /**\n   * Decimal.js\n   */\n  export import Decimal = runtime.Decimal\n\n  export type DecimalJsLike = runtime.DecimalJsLike\n\n  /**\n   * Metrics\n   */\n  export type Metrics = runtime.Metrics\n  export type Metric<T> = runtime.Metric<T>\n  export type MetricHistogram = runtime.MetricHistogram\n  export type MetricHistogramBucket = runtime.MetricHistogramBucket\n\n  /**\n  * Extensions\n  */\n  export import Extension = $Extensions.UserArgs\n  export import getExtensionContext = runtime.Extensions.getExtensionContext\n  export import Args = $Public.Args\n  export import Payload = $Public.Payload\n  export import Result = $Public.Result\n  export import Exact = $Public.Exact\n\n  /**\n   * Prisma Client JS version: local\n   * Query Engine version: local\n   */\n  export type PrismaVersion = {\n    client: string\n  }\n\n  export const prismaVersion: PrismaVersion\n\n  /**\n   * Utility Types\n   */\n\n\n  export import JsonObject = runtime.JsonObject\n  export import JsonArray = runtime.JsonArray\n  export import JsonValue = runtime.JsonValue\n  export import InputJsonObject = runtime.InputJsonObject\n  export import InputJsonArray = runtime.InputJsonArray\n  export import InputJsonValue = runtime.InputJsonValue\n\n  /**\n   * Types of the values used to represent different kinds of `null` values when working with JSON fields.\n   *\n   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n   */\n  namespace NullTypes {\n    /**\n    * Type of `Prisma.DbNull`.\n    *\n    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.\n    *\n    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n    */\n    class DbNull {\n      private DbNull: never\n      private constructor()\n    }\n\n    /**\n    * Type of `Prisma.JsonNull`.\n    *\n    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.\n    *\n    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n    */\n    class JsonNull {\n      private JsonNull: never\n      private constructor()\n    }\n\n    /**\n    * Type of `Prisma.AnyNull`.\n    *\n    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.\n    *\n    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n    */\n    class AnyNull {\n      private AnyNull: never\n      private constructor()\n    }\n  }\n\n  /**\n   * Helper for filtering JSON entries that have `null` on the database (empty on the db)\n   *\n   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n   */\n  export const DbNull: NullTypes.DbNull\n\n  /**\n   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)\n   *\n   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n   */\n  export const JsonNull: NullTypes.JsonNull\n\n  /**\n   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`\n   *\n   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n   */\n  export const AnyNull: NullTypes.AnyNull\n\n  type SelectAndInclude = {\n    select: any\n    include: any\n  }\n\n  type SelectAndOmit = {\n    select: any\n    omit: any\n  }\n\n  /**\n   * Get the type of the value, that the Promise holds.\n   */\n  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;\n\n  /**\n   * Get the return type of a function which returns a Promise.\n   */\n  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>\n\n  /**\n   * From T, pick a set of properties whose keys are in the union K\n   */\n  type Prisma__Pick<T, K extends keyof T> = {\n      [P in K]: T[P];\n  };\n\n\n  export type Enumerable<T> = T | Array<T>;\n\n  export type RequiredKeys<T> = {\n    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K\n  }[keyof T]\n\n  export type TruthyKeys<T> = keyof {\n    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K\n  }\n\n  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>\n\n  /**\n   * Subset\n   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection\n   */\n  export type Subset<T, U> = {\n    [key in keyof T]: key extends keyof U ? T[key] : never;\n  };\n\n  /**\n   * SelectSubset\n   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.\n   * Additionally, it validates, if both select and include are present. If the case, it errors.\n   */\n  export type SelectSubset<T, U> = {\n    [key in keyof T]: key extends keyof U ? T[key] : never\n  } &\n    (T extends SelectAndInclude\n      ? 'Please either choose `select` or `include`.'\n      : T extends SelectAndOmit\n        ? 'Please either choose `select` or `omit`.'\n        : {})\n\n  /**\n   * Subset + Intersection\n   * @desc From `T` pick properties that exist in `U` and intersect `K`\n   */\n  export type SubsetIntersection<T, U, K> = {\n    [key in keyof T]: key extends keyof U ? T[key] : never\n  } &\n    K\n\n  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };\n\n  /**\n   * XOR is needed to have a real mutually exclusive union type\n   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types\n   */\n  type XOR<T, U> =\n    T extends object ?\n    U extends object ?\n      (Without<T, U> & U) | (Without<U, T> & T)\n    : U : T\n\n\n  /**\n   * Is T a Record?\n   */\n  type IsObject<T extends any> = T extends Array<any>\n  ? False\n  : T extends Date\n  ? False\n  : T extends Uint8Array\n  ? False\n  : T extends BigInt\n  ? False\n  : T extends object\n  ? True\n  : False\n\n\n  /**\n   * If it's T[], return T\n   */\n  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T\n\n  /**\n   * From ts-toolbelt\n   */\n\n  type __Either<O extends object, K extends Key> = Omit<O, K> &\n    {\n      // Merge all but K\n      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities\n    }[K]\n\n  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>\n\n  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>\n\n  type _Either<\n    O extends object,\n    K extends Key,\n    strict extends Boolean\n  > = {\n    1: EitherStrict<O, K>\n    0: EitherLoose<O, K>\n  }[strict]\n\n  type Either<\n    O extends object,\n    K extends Key,\n    strict extends Boolean = 1\n  > = O extends unknown ? _Either<O, K, strict> : never\n\n  export type Union = any\n\n  type PatchUndefined<O extends object, O1 extends object> = {\n    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]\n  } & {}\n\n  /** Helper Types for \"Merge\" **/\n  export type IntersectOf<U extends Union> = (\n    U extends unknown ? (k: U) => void : never\n  ) extends (k: infer I) => void\n    ? I\n    : never\n\n  export type Overwrite<O extends object, O1 extends object> = {\n      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];\n  } & {};\n\n  type _Merge<U extends object> = IntersectOf<Overwrite<U, {\n      [K in keyof U]-?: At<U, K>;\n  }>>;\n\n  type Key = string | number | symbol;\n  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;\n  type AtStrict<O extends object, K extends Key> = O[K & keyof O];\n  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;\n  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {\n      1: AtStrict<O, K>;\n      0: AtLoose<O, K>;\n  }[strict];\n\n  export type ComputeRaw<A extends any> = A extends Function ? A : {\n    [K in keyof A]: A[K];\n  } & {};\n\n  export type OptionalFlat<O> = {\n    [K in keyof O]?: O[K];\n  } & {};\n\n  type _Record<K extends keyof any, T> = {\n    [P in K]: T;\n  };\n\n  // cause typescript not to expand types and preserve names\n  type NoExpand<T> = T extends unknown ? T : never;\n\n  // this type assumes the passed object is entirely optional\n  type AtLeast<O extends object, K extends string> = NoExpand<\n    O extends unknown\n    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)\n      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O\n    : never>;\n\n  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;\n\n  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;\n  /** End Helper Types for \"Merge\" **/\n\n  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;\n\n  /**\n  A [[Boolean]]\n  */\n  export type Boolean = True | False\n\n  // /**\n  // 1\n  // */\n  export type True = 1\n\n  /**\n  0\n  */\n  export type False = 0\n\n  export type Not<B extends Boolean> = {\n    0: 1\n    1: 0\n  }[B]\n\n  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]\n    ? 0 // anything `never` is false\n    : A1 extends A2\n    ? 1\n    : 0\n\n  export type Has<U extends Union, U1 extends Union> = Not<\n    Extends<Exclude<U1, U>, U1>\n  >\n\n  export type Or<B1 extends Boolean, B2 extends Boolean> = {\n    0: {\n      0: 0\n      1: 1\n    }\n    1: {\n      0: 1\n      1: 1\n    }\n  }[B1][B2]\n\n  export type Keys<U extends Union> = U extends unknown ? keyof U : never\n\n  type Cast<A, B> = A extends B ? A : B;\n\n  export const type: unique symbol;\n\n\n\n  /**\n   * Used by group by\n   */\n\n  export type GetScalarType<T, O> = O extends object ? {\n    [P in keyof T]: P extends keyof O\n      ? O[P]\n      : never\n  } : never\n\n  type FieldPaths<\n    T,\n    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>\n  > = IsObject<T> extends True ? U : T\n\n  type GetHavingFields<T> = {\n    [K in keyof T]: Or<\n      Or<Extends<'OR', K>, Extends<'AND', K>>,\n      Extends<'NOT', K>\n    > extends True\n      ? // infer is only needed to not hit TS limit\n        // based on the brilliant idea of Pierre-Antoine Mills\n        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437\n        T[K] extends infer TK\n        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>\n        : never\n      : {} extends FieldPaths<T[K]>\n      ? never\n      : K\n  }[keyof T]\n\n  /**\n   * Convert tuple to union\n   */\n  type _TupleToUnion<T> = T extends (infer E)[] ? E : never\n  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>\n  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T\n\n  /**\n   * Like `Pick`, but additionally can also accept an array of keys\n   */\n  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>\n\n  /**\n   * Exclude all keys with underscores\n   */\n  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T\n\n\n  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>\n\n  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>\n\n\n  export const ModelName: {\n    discussion_board_users: 'discussion_board_users',\n    discussion_board_guests: 'discussion_board_guests',\n    discussion_board_moderators: 'discussion_board_moderators',\n    discussion_board_admins: 'discussion_board_admins',\n    discussion_board_user_profiles: 'discussion_board_user_profiles',\n    discussion_board_user_settings: 'discussion_board_user_settings',\n    discussion_board_thread: 'discussion_board_thread',\n    discussion_board_post: 'discussion_board_post',\n    discussion_board_comment: 'discussion_board_comment',\n    discussion_board_thread_tag: 'discussion_board_thread_tag',\n    discussion_board_thread_category: 'discussion_board_thread_category',\n    discussion_board_tag_category: 'discussion_board_tag_category',\n    mv_discussion_thread_activity: 'mv_discussion_thread_activity',\n    discussion_board_vote: 'discussion_board_vote',\n    discussion_board_reaction: 'discussion_board_reaction',\n    discussion_board_bookmark: 'discussion_board_bookmark',\n    discussion_board_notification: 'discussion_board_notification',\n    discussion_board_subscription: 'discussion_board_subscription',\n    discussion_board_report: 'discussion_board_report',\n    discussion_board_moderator_action: 'discussion_board_moderator_action',\n    discussion_board_audit_log: 'discussion_board_audit_log',\n    discussion_board_warning: 'discussion_board_warning',\n    discussion_board_ban: 'discussion_board_ban',\n    discussion_board_thread_stats: 'discussion_board_thread_stats',\n    discussion_board_user_activity: 'discussion_board_user_activity',\n    discussion_board_content_abuse_metric: 'discussion_board_content_abuse_metric',\n    discussion_board_setting: 'discussion_board_setting',\n    discussion_board_system_config: 'discussion_board_system_config'\n  };\n\n  export type ModelName = (typeof ModelName)[keyof typeof ModelName]\n\n\n  export type Datasources = {\n    db?: Datasource\n  }\n\n  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {\n    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>\n  }\n\n  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {\n    globalOmitOptions: {\n      omit: GlobalOmitOptions\n    }\n    meta: {\n      modelProps: \"discussion_board_users\" | \"discussion_board_guests\" | \"discussion_board_moderators\" | \"discussion_board_admins\" | \"discussion_board_user_profiles\" | \"discussion_board_user_settings\" | \"discussion_board_thread\" | \"discussion_board_post\" | \"discussion_board_comment\" | \"discussion_board_thread_tag\" | \"discussion_board_thread_category\" | \"discussion_board_tag_category\" | \"mv_discussion_thread_activity\" | \"discussion_board_vote\" | \"discussion_board_reaction\" | \"discussion_board_bookmark\" | \"discussion_board_notification\" | \"discussion_board_subscription\" | \"discussion_board_report\" | \"discussion_board_moderator_action\" | \"discussion_board_audit_log\" | \"discussion_board_warning\" | \"discussion_board_ban\" | \"discussion_board_thread_stats\" | \"discussion_board_user_activity\" | \"discussion_board_content_abuse_metric\" | \"discussion_board_setting\" | \"discussion_board_system_config\"\n      txIsolationLevel: Prisma.TransactionIsolationLevel\n    }\n    model: {\n      discussion_board_users: {\n        payload: Prisma.$discussion_board_usersPayload<ExtArgs>\n        fields: Prisma.discussion_board_usersFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussion_board_usersFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_usersPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussion_board_usersFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_usersPayload>\n          }\n          findFirst: {\n            args: Prisma.discussion_board_usersFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_usersPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussion_board_usersFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_usersPayload>\n          }\n          findMany: {\n            args: Prisma.discussion_board_usersFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_usersPayload>[]\n          }\n          create: {\n            args: Prisma.discussion_board_usersCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_usersPayload>\n          }\n          createMany: {\n            args: Prisma.discussion_board_usersCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussion_board_usersCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_usersPayload>[]\n          }\n          delete: {\n            args: Prisma.discussion_board_usersDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_usersPayload>\n          }\n          update: {\n            args: Prisma.discussion_board_usersUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_usersPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussion_board_usersDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussion_board_usersUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussion_board_usersUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_usersPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussion_board_usersUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_usersPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussion_board_usersAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussion_board_users>\n          }\n          groupBy: {\n            args: Prisma.discussion_board_usersGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_usersGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussion_board_usersCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_usersCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussion_board_guests: {\n        payload: Prisma.$discussion_board_guestsPayload<ExtArgs>\n        fields: Prisma.discussion_board_guestsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussion_board_guestsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_guestsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussion_board_guestsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_guestsPayload>\n          }\n          findFirst: {\n            args: Prisma.discussion_board_guestsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_guestsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussion_board_guestsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_guestsPayload>\n          }\n          findMany: {\n            args: Prisma.discussion_board_guestsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_guestsPayload>[]\n          }\n          create: {\n            args: Prisma.discussion_board_guestsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_guestsPayload>\n          }\n          createMany: {\n            args: Prisma.discussion_board_guestsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussion_board_guestsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_guestsPayload>[]\n          }\n          delete: {\n            args: Prisma.discussion_board_guestsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_guestsPayload>\n          }\n          update: {\n            args: Prisma.discussion_board_guestsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_guestsPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussion_board_guestsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussion_board_guestsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussion_board_guestsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_guestsPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussion_board_guestsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_guestsPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussion_board_guestsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussion_board_guests>\n          }\n          groupBy: {\n            args: Prisma.discussion_board_guestsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_guestsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussion_board_guestsCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_guestsCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussion_board_moderators: {\n        payload: Prisma.$discussion_board_moderatorsPayload<ExtArgs>\n        fields: Prisma.discussion_board_moderatorsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussion_board_moderatorsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_moderatorsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussion_board_moderatorsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_moderatorsPayload>\n          }\n          findFirst: {\n            args: Prisma.discussion_board_moderatorsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_moderatorsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussion_board_moderatorsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_moderatorsPayload>\n          }\n          findMany: {\n            args: Prisma.discussion_board_moderatorsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_moderatorsPayload>[]\n          }\n          create: {\n            args: Prisma.discussion_board_moderatorsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_moderatorsPayload>\n          }\n          createMany: {\n            args: Prisma.discussion_board_moderatorsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussion_board_moderatorsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_moderatorsPayload>[]\n          }\n          delete: {\n            args: Prisma.discussion_board_moderatorsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_moderatorsPayload>\n          }\n          update: {\n            args: Prisma.discussion_board_moderatorsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_moderatorsPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussion_board_moderatorsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussion_board_moderatorsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussion_board_moderatorsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_moderatorsPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussion_board_moderatorsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_moderatorsPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussion_board_moderatorsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussion_board_moderators>\n          }\n          groupBy: {\n            args: Prisma.discussion_board_moderatorsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_moderatorsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussion_board_moderatorsCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_moderatorsCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussion_board_admins: {\n        payload: Prisma.$discussion_board_adminsPayload<ExtArgs>\n        fields: Prisma.discussion_board_adminsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussion_board_adminsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_adminsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussion_board_adminsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_adminsPayload>\n          }\n          findFirst: {\n            args: Prisma.discussion_board_adminsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_adminsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussion_board_adminsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_adminsPayload>\n          }\n          findMany: {\n            args: Prisma.discussion_board_adminsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_adminsPayload>[]\n          }\n          create: {\n            args: Prisma.discussion_board_adminsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_adminsPayload>\n          }\n          createMany: {\n            args: Prisma.discussion_board_adminsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussion_board_adminsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_adminsPayload>[]\n          }\n          delete: {\n            args: Prisma.discussion_board_adminsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_adminsPayload>\n          }\n          update: {\n            args: Prisma.discussion_board_adminsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_adminsPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussion_board_adminsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussion_board_adminsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussion_board_adminsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_adminsPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussion_board_adminsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_adminsPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussion_board_adminsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussion_board_admins>\n          }\n          groupBy: {\n            args: Prisma.discussion_board_adminsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_adminsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussion_board_adminsCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_adminsCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussion_board_user_profiles: {\n        payload: Prisma.$discussion_board_user_profilesPayload<ExtArgs>\n        fields: Prisma.discussion_board_user_profilesFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussion_board_user_profilesFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_user_profilesPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussion_board_user_profilesFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_user_profilesPayload>\n          }\n          findFirst: {\n            args: Prisma.discussion_board_user_profilesFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_user_profilesPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussion_board_user_profilesFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_user_profilesPayload>\n          }\n          findMany: {\n            args: Prisma.discussion_board_user_profilesFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_user_profilesPayload>[]\n          }\n          create: {\n            args: Prisma.discussion_board_user_profilesCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_user_profilesPayload>\n          }\n          createMany: {\n            args: Prisma.discussion_board_user_profilesCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussion_board_user_profilesCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_user_profilesPayload>[]\n          }\n          delete: {\n            args: Prisma.discussion_board_user_profilesDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_user_profilesPayload>\n          }\n          update: {\n            args: Prisma.discussion_board_user_profilesUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_user_profilesPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussion_board_user_profilesDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussion_board_user_profilesUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussion_board_user_profilesUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_user_profilesPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussion_board_user_profilesUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_user_profilesPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussion_board_user_profilesAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussion_board_user_profiles>\n          }\n          groupBy: {\n            args: Prisma.discussion_board_user_profilesGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_user_profilesGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussion_board_user_profilesCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_user_profilesCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussion_board_user_settings: {\n        payload: Prisma.$discussion_board_user_settingsPayload<ExtArgs>\n        fields: Prisma.discussion_board_user_settingsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussion_board_user_settingsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_user_settingsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussion_board_user_settingsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_user_settingsPayload>\n          }\n          findFirst: {\n            args: Prisma.discussion_board_user_settingsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_user_settingsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussion_board_user_settingsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_user_settingsPayload>\n          }\n          findMany: {\n            args: Prisma.discussion_board_user_settingsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_user_settingsPayload>[]\n          }\n          create: {\n            args: Prisma.discussion_board_user_settingsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_user_settingsPayload>\n          }\n          createMany: {\n            args: Prisma.discussion_board_user_settingsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussion_board_user_settingsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_user_settingsPayload>[]\n          }\n          delete: {\n            args: Prisma.discussion_board_user_settingsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_user_settingsPayload>\n          }\n          update: {\n            args: Prisma.discussion_board_user_settingsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_user_settingsPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussion_board_user_settingsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussion_board_user_settingsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussion_board_user_settingsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_user_settingsPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussion_board_user_settingsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_user_settingsPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussion_board_user_settingsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussion_board_user_settings>\n          }\n          groupBy: {\n            args: Prisma.discussion_board_user_settingsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_user_settingsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussion_board_user_settingsCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_user_settingsCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussion_board_thread: {\n        payload: Prisma.$discussion_board_threadPayload<ExtArgs>\n        fields: Prisma.discussion_board_threadFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussion_board_threadFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_threadPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussion_board_threadFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_threadPayload>\n          }\n          findFirst: {\n            args: Prisma.discussion_board_threadFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_threadPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussion_board_threadFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_threadPayload>\n          }\n          findMany: {\n            args: Prisma.discussion_board_threadFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_threadPayload>[]\n          }\n          create: {\n            args: Prisma.discussion_board_threadCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_threadPayload>\n          }\n          createMany: {\n            args: Prisma.discussion_board_threadCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussion_board_threadCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_threadPayload>[]\n          }\n          delete: {\n            args: Prisma.discussion_board_threadDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_threadPayload>\n          }\n          update: {\n            args: Prisma.discussion_board_threadUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_threadPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussion_board_threadDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussion_board_threadUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussion_board_threadUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_threadPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussion_board_threadUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_threadPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussion_board_threadAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussion_board_thread>\n          }\n          groupBy: {\n            args: Prisma.discussion_board_threadGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_threadGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussion_board_threadCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_threadCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussion_board_post: {\n        payload: Prisma.$discussion_board_postPayload<ExtArgs>\n        fields: Prisma.discussion_board_postFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussion_board_postFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_postPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussion_board_postFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_postPayload>\n          }\n          findFirst: {\n            args: Prisma.discussion_board_postFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_postPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussion_board_postFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_postPayload>\n          }\n          findMany: {\n            args: Prisma.discussion_board_postFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_postPayload>[]\n          }\n          create: {\n            args: Prisma.discussion_board_postCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_postPayload>\n          }\n          createMany: {\n            args: Prisma.discussion_board_postCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussion_board_postCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_postPayload>[]\n          }\n          delete: {\n            args: Prisma.discussion_board_postDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_postPayload>\n          }\n          update: {\n            args: Prisma.discussion_board_postUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_postPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussion_board_postDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussion_board_postUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussion_board_postUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_postPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussion_board_postUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_postPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussion_board_postAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussion_board_post>\n          }\n          groupBy: {\n            args: Prisma.discussion_board_postGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_postGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussion_board_postCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_postCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussion_board_comment: {\n        payload: Prisma.$discussion_board_commentPayload<ExtArgs>\n        fields: Prisma.discussion_board_commentFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussion_board_commentFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_commentPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussion_board_commentFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_commentPayload>\n          }\n          findFirst: {\n            args: Prisma.discussion_board_commentFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_commentPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussion_board_commentFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_commentPayload>\n          }\n          findMany: {\n            args: Prisma.discussion_board_commentFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_commentPayload>[]\n          }\n          create: {\n            args: Prisma.discussion_board_commentCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_commentPayload>\n          }\n          createMany: {\n            args: Prisma.discussion_board_commentCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussion_board_commentCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_commentPayload>[]\n          }\n          delete: {\n            args: Prisma.discussion_board_commentDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_commentPayload>\n          }\n          update: {\n            args: Prisma.discussion_board_commentUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_commentPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussion_board_commentDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussion_board_commentUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussion_board_commentUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_commentPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussion_board_commentUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_commentPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussion_board_commentAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussion_board_comment>\n          }\n          groupBy: {\n            args: Prisma.discussion_board_commentGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_commentGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussion_board_commentCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_commentCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussion_board_thread_tag: {\n        payload: Prisma.$discussion_board_thread_tagPayload<ExtArgs>\n        fields: Prisma.discussion_board_thread_tagFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussion_board_thread_tagFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_thread_tagPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussion_board_thread_tagFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_thread_tagPayload>\n          }\n          findFirst: {\n            args: Prisma.discussion_board_thread_tagFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_thread_tagPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussion_board_thread_tagFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_thread_tagPayload>\n          }\n          findMany: {\n            args: Prisma.discussion_board_thread_tagFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_thread_tagPayload>[]\n          }\n          create: {\n            args: Prisma.discussion_board_thread_tagCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_thread_tagPayload>\n          }\n          createMany: {\n            args: Prisma.discussion_board_thread_tagCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussion_board_thread_tagCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_thread_tagPayload>[]\n          }\n          delete: {\n            args: Prisma.discussion_board_thread_tagDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_thread_tagPayload>\n          }\n          update: {\n            args: Prisma.discussion_board_thread_tagUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_thread_tagPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussion_board_thread_tagDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussion_board_thread_tagUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussion_board_thread_tagUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_thread_tagPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussion_board_thread_tagUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_thread_tagPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussion_board_thread_tagAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussion_board_thread_tag>\n          }\n          groupBy: {\n            args: Prisma.discussion_board_thread_tagGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_thread_tagGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussion_board_thread_tagCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_thread_tagCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussion_board_thread_category: {\n        payload: Prisma.$discussion_board_thread_categoryPayload<ExtArgs>\n        fields: Prisma.discussion_board_thread_categoryFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussion_board_thread_categoryFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_thread_categoryPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussion_board_thread_categoryFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_thread_categoryPayload>\n          }\n          findFirst: {\n            args: Prisma.discussion_board_thread_categoryFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_thread_categoryPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussion_board_thread_categoryFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_thread_categoryPayload>\n          }\n          findMany: {\n            args: Prisma.discussion_board_thread_categoryFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_thread_categoryPayload>[]\n          }\n          create: {\n            args: Prisma.discussion_board_thread_categoryCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_thread_categoryPayload>\n          }\n          createMany: {\n            args: Prisma.discussion_board_thread_categoryCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussion_board_thread_categoryCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_thread_categoryPayload>[]\n          }\n          delete: {\n            args: Prisma.discussion_board_thread_categoryDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_thread_categoryPayload>\n          }\n          update: {\n            args: Prisma.discussion_board_thread_categoryUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_thread_categoryPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussion_board_thread_categoryDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussion_board_thread_categoryUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussion_board_thread_categoryUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_thread_categoryPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussion_board_thread_categoryUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_thread_categoryPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussion_board_thread_categoryAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussion_board_thread_category>\n          }\n          groupBy: {\n            args: Prisma.discussion_board_thread_categoryGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_thread_categoryGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussion_board_thread_categoryCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_thread_categoryCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussion_board_tag_category: {\n        payload: Prisma.$discussion_board_tag_categoryPayload<ExtArgs>\n        fields: Prisma.discussion_board_tag_categoryFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussion_board_tag_categoryFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_tag_categoryPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussion_board_tag_categoryFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_tag_categoryPayload>\n          }\n          findFirst: {\n            args: Prisma.discussion_board_tag_categoryFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_tag_categoryPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussion_board_tag_categoryFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_tag_categoryPayload>\n          }\n          findMany: {\n            args: Prisma.discussion_board_tag_categoryFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_tag_categoryPayload>[]\n          }\n          create: {\n            args: Prisma.discussion_board_tag_categoryCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_tag_categoryPayload>\n          }\n          createMany: {\n            args: Prisma.discussion_board_tag_categoryCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussion_board_tag_categoryCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_tag_categoryPayload>[]\n          }\n          delete: {\n            args: Prisma.discussion_board_tag_categoryDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_tag_categoryPayload>\n          }\n          update: {\n            args: Prisma.discussion_board_tag_categoryUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_tag_categoryPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussion_board_tag_categoryDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussion_board_tag_categoryUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussion_board_tag_categoryUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_tag_categoryPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussion_board_tag_categoryUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_tag_categoryPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussion_board_tag_categoryAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussion_board_tag_category>\n          }\n          groupBy: {\n            args: Prisma.discussion_board_tag_categoryGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_tag_categoryGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussion_board_tag_categoryCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_tag_categoryCountAggregateOutputType> | number\n          }\n        }\n      }\n      mv_discussion_thread_activity: {\n        payload: Prisma.$mv_discussion_thread_activityPayload<ExtArgs>\n        fields: Prisma.mv_discussion_thread_activityFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.mv_discussion_thread_activityFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$mv_discussion_thread_activityPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.mv_discussion_thread_activityFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$mv_discussion_thread_activityPayload>\n          }\n          findFirst: {\n            args: Prisma.mv_discussion_thread_activityFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$mv_discussion_thread_activityPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.mv_discussion_thread_activityFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$mv_discussion_thread_activityPayload>\n          }\n          findMany: {\n            args: Prisma.mv_discussion_thread_activityFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$mv_discussion_thread_activityPayload>[]\n          }\n          create: {\n            args: Prisma.mv_discussion_thread_activityCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$mv_discussion_thread_activityPayload>\n          }\n          createMany: {\n            args: Prisma.mv_discussion_thread_activityCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.mv_discussion_thread_activityCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$mv_discussion_thread_activityPayload>[]\n          }\n          delete: {\n            args: Prisma.mv_discussion_thread_activityDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$mv_discussion_thread_activityPayload>\n          }\n          update: {\n            args: Prisma.mv_discussion_thread_activityUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$mv_discussion_thread_activityPayload>\n          }\n          deleteMany: {\n            args: Prisma.mv_discussion_thread_activityDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.mv_discussion_thread_activityUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.mv_discussion_thread_activityUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$mv_discussion_thread_activityPayload>[]\n          }\n          upsert: {\n            args: Prisma.mv_discussion_thread_activityUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$mv_discussion_thread_activityPayload>\n          }\n          aggregate: {\n            args: Prisma.Mv_discussion_thread_activityAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateMv_discussion_thread_activity>\n          }\n          groupBy: {\n            args: Prisma.mv_discussion_thread_activityGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Mv_discussion_thread_activityGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.mv_discussion_thread_activityCountArgs<ExtArgs>\n            result: $Utils.Optional<Mv_discussion_thread_activityCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussion_board_vote: {\n        payload: Prisma.$discussion_board_votePayload<ExtArgs>\n        fields: Prisma.discussion_board_voteFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussion_board_voteFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_votePayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussion_board_voteFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_votePayload>\n          }\n          findFirst: {\n            args: Prisma.discussion_board_voteFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_votePayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussion_board_voteFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_votePayload>\n          }\n          findMany: {\n            args: Prisma.discussion_board_voteFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_votePayload>[]\n          }\n          create: {\n            args: Prisma.discussion_board_voteCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_votePayload>\n          }\n          createMany: {\n            args: Prisma.discussion_board_voteCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussion_board_voteCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_votePayload>[]\n          }\n          delete: {\n            args: Prisma.discussion_board_voteDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_votePayload>\n          }\n          update: {\n            args: Prisma.discussion_board_voteUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_votePayload>\n          }\n          deleteMany: {\n            args: Prisma.discussion_board_voteDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussion_board_voteUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussion_board_voteUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_votePayload>[]\n          }\n          upsert: {\n            args: Prisma.discussion_board_voteUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_votePayload>\n          }\n          aggregate: {\n            args: Prisma.Discussion_board_voteAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussion_board_vote>\n          }\n          groupBy: {\n            args: Prisma.discussion_board_voteGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_voteGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussion_board_voteCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_voteCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussion_board_reaction: {\n        payload: Prisma.$discussion_board_reactionPayload<ExtArgs>\n        fields: Prisma.discussion_board_reactionFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussion_board_reactionFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_reactionPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussion_board_reactionFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_reactionPayload>\n          }\n          findFirst: {\n            args: Prisma.discussion_board_reactionFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_reactionPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussion_board_reactionFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_reactionPayload>\n          }\n          findMany: {\n            args: Prisma.discussion_board_reactionFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_reactionPayload>[]\n          }\n          create: {\n            args: Prisma.discussion_board_reactionCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_reactionPayload>\n          }\n          createMany: {\n            args: Prisma.discussion_board_reactionCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussion_board_reactionCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_reactionPayload>[]\n          }\n          delete: {\n            args: Prisma.discussion_board_reactionDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_reactionPayload>\n          }\n          update: {\n            args: Prisma.discussion_board_reactionUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_reactionPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussion_board_reactionDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussion_board_reactionUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussion_board_reactionUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_reactionPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussion_board_reactionUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_reactionPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussion_board_reactionAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussion_board_reaction>\n          }\n          groupBy: {\n            args: Prisma.discussion_board_reactionGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_reactionGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussion_board_reactionCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_reactionCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussion_board_bookmark: {\n        payload: Prisma.$discussion_board_bookmarkPayload<ExtArgs>\n        fields: Prisma.discussion_board_bookmarkFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussion_board_bookmarkFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_bookmarkPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussion_board_bookmarkFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_bookmarkPayload>\n          }\n          findFirst: {\n            args: Prisma.discussion_board_bookmarkFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_bookmarkPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussion_board_bookmarkFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_bookmarkPayload>\n          }\n          findMany: {\n            args: Prisma.discussion_board_bookmarkFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_bookmarkPayload>[]\n          }\n          create: {\n            args: Prisma.discussion_board_bookmarkCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_bookmarkPayload>\n          }\n          createMany: {\n            args: Prisma.discussion_board_bookmarkCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussion_board_bookmarkCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_bookmarkPayload>[]\n          }\n          delete: {\n            args: Prisma.discussion_board_bookmarkDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_bookmarkPayload>\n          }\n          update: {\n            args: Prisma.discussion_board_bookmarkUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_bookmarkPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussion_board_bookmarkDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussion_board_bookmarkUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussion_board_bookmarkUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_bookmarkPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussion_board_bookmarkUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_bookmarkPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussion_board_bookmarkAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussion_board_bookmark>\n          }\n          groupBy: {\n            args: Prisma.discussion_board_bookmarkGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_bookmarkGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussion_board_bookmarkCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_bookmarkCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussion_board_notification: {\n        payload: Prisma.$discussion_board_notificationPayload<ExtArgs>\n        fields: Prisma.discussion_board_notificationFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussion_board_notificationFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_notificationPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussion_board_notificationFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_notificationPayload>\n          }\n          findFirst: {\n            args: Prisma.discussion_board_notificationFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_notificationPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussion_board_notificationFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_notificationPayload>\n          }\n          findMany: {\n            args: Prisma.discussion_board_notificationFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_notificationPayload>[]\n          }\n          create: {\n            args: Prisma.discussion_board_notificationCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_notificationPayload>\n          }\n          createMany: {\n            args: Prisma.discussion_board_notificationCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussion_board_notificationCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_notificationPayload>[]\n          }\n          delete: {\n            args: Prisma.discussion_board_notificationDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_notificationPayload>\n          }\n          update: {\n            args: Prisma.discussion_board_notificationUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_notificationPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussion_board_notificationDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussion_board_notificationUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussion_board_notificationUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_notificationPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussion_board_notificationUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_notificationPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussion_board_notificationAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussion_board_notification>\n          }\n          groupBy: {\n            args: Prisma.discussion_board_notificationGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_notificationGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussion_board_notificationCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_notificationCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussion_board_subscription: {\n        payload: Prisma.$discussion_board_subscriptionPayload<ExtArgs>\n        fields: Prisma.discussion_board_subscriptionFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussion_board_subscriptionFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_subscriptionPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussion_board_subscriptionFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_subscriptionPayload>\n          }\n          findFirst: {\n            args: Prisma.discussion_board_subscriptionFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_subscriptionPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussion_board_subscriptionFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_subscriptionPayload>\n          }\n          findMany: {\n            args: Prisma.discussion_board_subscriptionFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_subscriptionPayload>[]\n          }\n          create: {\n            args: Prisma.discussion_board_subscriptionCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_subscriptionPayload>\n          }\n          createMany: {\n            args: Prisma.discussion_board_subscriptionCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussion_board_subscriptionCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_subscriptionPayload>[]\n          }\n          delete: {\n            args: Prisma.discussion_board_subscriptionDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_subscriptionPayload>\n          }\n          update: {\n            args: Prisma.discussion_board_subscriptionUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_subscriptionPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussion_board_subscriptionDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussion_board_subscriptionUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussion_board_subscriptionUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_subscriptionPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussion_board_subscriptionUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_subscriptionPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussion_board_subscriptionAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussion_board_subscription>\n          }\n          groupBy: {\n            args: Prisma.discussion_board_subscriptionGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_subscriptionGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussion_board_subscriptionCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_subscriptionCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussion_board_report: {\n        payload: Prisma.$discussion_board_reportPayload<ExtArgs>\n        fields: Prisma.discussion_board_reportFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussion_board_reportFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_reportPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussion_board_reportFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_reportPayload>\n          }\n          findFirst: {\n            args: Prisma.discussion_board_reportFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_reportPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussion_board_reportFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_reportPayload>\n          }\n          findMany: {\n            args: Prisma.discussion_board_reportFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_reportPayload>[]\n          }\n          create: {\n            args: Prisma.discussion_board_reportCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_reportPayload>\n          }\n          createMany: {\n            args: Prisma.discussion_board_reportCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussion_board_reportCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_reportPayload>[]\n          }\n          delete: {\n            args: Prisma.discussion_board_reportDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_reportPayload>\n          }\n          update: {\n            args: Prisma.discussion_board_reportUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_reportPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussion_board_reportDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussion_board_reportUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussion_board_reportUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_reportPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussion_board_reportUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_reportPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussion_board_reportAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussion_board_report>\n          }\n          groupBy: {\n            args: Prisma.discussion_board_reportGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_reportGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussion_board_reportCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_reportCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussion_board_moderator_action: {\n        payload: Prisma.$discussion_board_moderator_actionPayload<ExtArgs>\n        fields: Prisma.discussion_board_moderator_actionFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussion_board_moderator_actionFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_moderator_actionPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussion_board_moderator_actionFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_moderator_actionPayload>\n          }\n          findFirst: {\n            args: Prisma.discussion_board_moderator_actionFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_moderator_actionPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussion_board_moderator_actionFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_moderator_actionPayload>\n          }\n          findMany: {\n            args: Prisma.discussion_board_moderator_actionFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_moderator_actionPayload>[]\n          }\n          create: {\n            args: Prisma.discussion_board_moderator_actionCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_moderator_actionPayload>\n          }\n          createMany: {\n            args: Prisma.discussion_board_moderator_actionCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussion_board_moderator_actionCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_moderator_actionPayload>[]\n          }\n          delete: {\n            args: Prisma.discussion_board_moderator_actionDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_moderator_actionPayload>\n          }\n          update: {\n            args: Prisma.discussion_board_moderator_actionUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_moderator_actionPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussion_board_moderator_actionDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussion_board_moderator_actionUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussion_board_moderator_actionUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_moderator_actionPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussion_board_moderator_actionUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_moderator_actionPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussion_board_moderator_actionAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussion_board_moderator_action>\n          }\n          groupBy: {\n            args: Prisma.discussion_board_moderator_actionGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_moderator_actionGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussion_board_moderator_actionCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_moderator_actionCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussion_board_audit_log: {\n        payload: Prisma.$discussion_board_audit_logPayload<ExtArgs>\n        fields: Prisma.discussion_board_audit_logFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussion_board_audit_logFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_audit_logPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussion_board_audit_logFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_audit_logPayload>\n          }\n          findFirst: {\n            args: Prisma.discussion_board_audit_logFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_audit_logPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussion_board_audit_logFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_audit_logPayload>\n          }\n          findMany: {\n            args: Prisma.discussion_board_audit_logFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_audit_logPayload>[]\n          }\n          create: {\n            args: Prisma.discussion_board_audit_logCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_audit_logPayload>\n          }\n          createMany: {\n            args: Prisma.discussion_board_audit_logCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussion_board_audit_logCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_audit_logPayload>[]\n          }\n          delete: {\n            args: Prisma.discussion_board_audit_logDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_audit_logPayload>\n          }\n          update: {\n            args: Prisma.discussion_board_audit_logUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_audit_logPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussion_board_audit_logDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussion_board_audit_logUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussion_board_audit_logUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_audit_logPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussion_board_audit_logUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_audit_logPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussion_board_audit_logAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussion_board_audit_log>\n          }\n          groupBy: {\n            args: Prisma.discussion_board_audit_logGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_audit_logGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussion_board_audit_logCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_audit_logCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussion_board_warning: {\n        payload: Prisma.$discussion_board_warningPayload<ExtArgs>\n        fields: Prisma.discussion_board_warningFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussion_board_warningFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_warningPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussion_board_warningFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_warningPayload>\n          }\n          findFirst: {\n            args: Prisma.discussion_board_warningFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_warningPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussion_board_warningFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_warningPayload>\n          }\n          findMany: {\n            args: Prisma.discussion_board_warningFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_warningPayload>[]\n          }\n          create: {\n            args: Prisma.discussion_board_warningCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_warningPayload>\n          }\n          createMany: {\n            args: Prisma.discussion_board_warningCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussion_board_warningCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_warningPayload>[]\n          }\n          delete: {\n            args: Prisma.discussion_board_warningDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_warningPayload>\n          }\n          update: {\n            args: Prisma.discussion_board_warningUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_warningPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussion_board_warningDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussion_board_warningUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussion_board_warningUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_warningPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussion_board_warningUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_warningPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussion_board_warningAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussion_board_warning>\n          }\n          groupBy: {\n            args: Prisma.discussion_board_warningGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_warningGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussion_board_warningCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_warningCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussion_board_ban: {\n        payload: Prisma.$discussion_board_banPayload<ExtArgs>\n        fields: Prisma.discussion_board_banFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussion_board_banFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_banPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussion_board_banFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_banPayload>\n          }\n          findFirst: {\n            args: Prisma.discussion_board_banFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_banPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussion_board_banFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_banPayload>\n          }\n          findMany: {\n            args: Prisma.discussion_board_banFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_banPayload>[]\n          }\n          create: {\n            args: Prisma.discussion_board_banCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_banPayload>\n          }\n          createMany: {\n            args: Prisma.discussion_board_banCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussion_board_banCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_banPayload>[]\n          }\n          delete: {\n            args: Prisma.discussion_board_banDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_banPayload>\n          }\n          update: {\n            args: Prisma.discussion_board_banUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_banPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussion_board_banDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussion_board_banUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussion_board_banUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_banPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussion_board_banUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_banPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussion_board_banAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussion_board_ban>\n          }\n          groupBy: {\n            args: Prisma.discussion_board_banGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_banGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussion_board_banCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_banCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussion_board_thread_stats: {\n        payload: Prisma.$discussion_board_thread_statsPayload<ExtArgs>\n        fields: Prisma.discussion_board_thread_statsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussion_board_thread_statsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_thread_statsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussion_board_thread_statsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_thread_statsPayload>\n          }\n          findFirst: {\n            args: Prisma.discussion_board_thread_statsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_thread_statsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussion_board_thread_statsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_thread_statsPayload>\n          }\n          findMany: {\n            args: Prisma.discussion_board_thread_statsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_thread_statsPayload>[]\n          }\n          create: {\n            args: Prisma.discussion_board_thread_statsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_thread_statsPayload>\n          }\n          createMany: {\n            args: Prisma.discussion_board_thread_statsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussion_board_thread_statsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_thread_statsPayload>[]\n          }\n          delete: {\n            args: Prisma.discussion_board_thread_statsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_thread_statsPayload>\n          }\n          update: {\n            args: Prisma.discussion_board_thread_statsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_thread_statsPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussion_board_thread_statsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussion_board_thread_statsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussion_board_thread_statsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_thread_statsPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussion_board_thread_statsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_thread_statsPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussion_board_thread_statsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussion_board_thread_stats>\n          }\n          groupBy: {\n            args: Prisma.discussion_board_thread_statsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_thread_statsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussion_board_thread_statsCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_thread_statsCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussion_board_user_activity: {\n        payload: Prisma.$discussion_board_user_activityPayload<ExtArgs>\n        fields: Prisma.discussion_board_user_activityFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussion_board_user_activityFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_user_activityPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussion_board_user_activityFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_user_activityPayload>\n          }\n          findFirst: {\n            args: Prisma.discussion_board_user_activityFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_user_activityPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussion_board_user_activityFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_user_activityPayload>\n          }\n          findMany: {\n            args: Prisma.discussion_board_user_activityFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_user_activityPayload>[]\n          }\n          create: {\n            args: Prisma.discussion_board_user_activityCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_user_activityPayload>\n          }\n          createMany: {\n            args: Prisma.discussion_board_user_activityCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussion_board_user_activityCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_user_activityPayload>[]\n          }\n          delete: {\n            args: Prisma.discussion_board_user_activityDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_user_activityPayload>\n          }\n          update: {\n            args: Prisma.discussion_board_user_activityUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_user_activityPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussion_board_user_activityDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussion_board_user_activityUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussion_board_user_activityUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_user_activityPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussion_board_user_activityUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_user_activityPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussion_board_user_activityAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussion_board_user_activity>\n          }\n          groupBy: {\n            args: Prisma.discussion_board_user_activityGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_user_activityGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussion_board_user_activityCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_user_activityCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussion_board_content_abuse_metric: {\n        payload: Prisma.$discussion_board_content_abuse_metricPayload<ExtArgs>\n        fields: Prisma.discussion_board_content_abuse_metricFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussion_board_content_abuse_metricFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_content_abuse_metricPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussion_board_content_abuse_metricFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_content_abuse_metricPayload>\n          }\n          findFirst: {\n            args: Prisma.discussion_board_content_abuse_metricFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_content_abuse_metricPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussion_board_content_abuse_metricFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_content_abuse_metricPayload>\n          }\n          findMany: {\n            args: Prisma.discussion_board_content_abuse_metricFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_content_abuse_metricPayload>[]\n          }\n          create: {\n            args: Prisma.discussion_board_content_abuse_metricCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_content_abuse_metricPayload>\n          }\n          createMany: {\n            args: Prisma.discussion_board_content_abuse_metricCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussion_board_content_abuse_metricCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_content_abuse_metricPayload>[]\n          }\n          delete: {\n            args: Prisma.discussion_board_content_abuse_metricDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_content_abuse_metricPayload>\n          }\n          update: {\n            args: Prisma.discussion_board_content_abuse_metricUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_content_abuse_metricPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussion_board_content_abuse_metricDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussion_board_content_abuse_metricUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussion_board_content_abuse_metricUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_content_abuse_metricPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussion_board_content_abuse_metricUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_content_abuse_metricPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussion_board_content_abuse_metricAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussion_board_content_abuse_metric>\n          }\n          groupBy: {\n            args: Prisma.discussion_board_content_abuse_metricGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_content_abuse_metricGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussion_board_content_abuse_metricCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_content_abuse_metricCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussion_board_setting: {\n        payload: Prisma.$discussion_board_settingPayload<ExtArgs>\n        fields: Prisma.discussion_board_settingFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussion_board_settingFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_settingPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussion_board_settingFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_settingPayload>\n          }\n          findFirst: {\n            args: Prisma.discussion_board_settingFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_settingPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussion_board_settingFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_settingPayload>\n          }\n          findMany: {\n            args: Prisma.discussion_board_settingFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_settingPayload>[]\n          }\n          create: {\n            args: Prisma.discussion_board_settingCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_settingPayload>\n          }\n          createMany: {\n            args: Prisma.discussion_board_settingCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussion_board_settingCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_settingPayload>[]\n          }\n          delete: {\n            args: Prisma.discussion_board_settingDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_settingPayload>\n          }\n          update: {\n            args: Prisma.discussion_board_settingUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_settingPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussion_board_settingDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussion_board_settingUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussion_board_settingUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_settingPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussion_board_settingUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_settingPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussion_board_settingAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussion_board_setting>\n          }\n          groupBy: {\n            args: Prisma.discussion_board_settingGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_settingGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussion_board_settingCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_settingCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussion_board_system_config: {\n        payload: Prisma.$discussion_board_system_configPayload<ExtArgs>\n        fields: Prisma.discussion_board_system_configFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussion_board_system_configFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_system_configPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussion_board_system_configFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_system_configPayload>\n          }\n          findFirst: {\n            args: Prisma.discussion_board_system_configFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_system_configPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussion_board_system_configFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_system_configPayload>\n          }\n          findMany: {\n            args: Prisma.discussion_board_system_configFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_system_configPayload>[]\n          }\n          create: {\n            args: Prisma.discussion_board_system_configCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_system_configPayload>\n          }\n          createMany: {\n            args: Prisma.discussion_board_system_configCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussion_board_system_configCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_system_configPayload>[]\n          }\n          delete: {\n            args: Prisma.discussion_board_system_configDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_system_configPayload>\n          }\n          update: {\n            args: Prisma.discussion_board_system_configUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_system_configPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussion_board_system_configDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussion_board_system_configUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussion_board_system_configUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_system_configPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussion_board_system_configUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussion_board_system_configPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussion_board_system_configAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussion_board_system_config>\n          }\n          groupBy: {\n            args: Prisma.discussion_board_system_configGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_system_configGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussion_board_system_configCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussion_board_system_configCountAggregateOutputType> | number\n          }\n        }\n      }\n    }\n  } & {\n    other: {\n      payload: any\n      operations: {\n        $executeRaw: {\n          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],\n          result: any\n        }\n        $executeRawUnsafe: {\n          args: [query: string, ...values: any[]],\n          result: any\n        }\n        $queryRaw: {\n          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],\n          result: any\n        }\n        $queryRawUnsafe: {\n          args: [query: string, ...values: any[]],\n          result: any\n        }\n      }\n    }\n  }\n  export const defineExtension: $Extensions.ExtendsHook<\"define\", Prisma.TypeMapCb, $Extensions.DefaultArgs>\n  export type DefaultPrismaClient = PrismaClient\n  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'\n  export interface PrismaClientOptions {\n    /**\n     * Overwrites the datasource url from your schema.prisma file\n     */\n    datasources?: Datasources\n    /**\n     * Overwrites the datasource url from your schema.prisma file\n     */\n    datasourceUrl?: string\n    /**\n     * @default \"colorless\"\n     */\n    errorFormat?: ErrorFormat\n    /**\n     * @example\n     * ```\n     * // Defaults to stdout\n     * log: ['query', 'info', 'warn', 'error']\n     * \n     * // Emit as events\n     * log: [\n     *   { emit: 'stdout', level: 'query' },\n     *   { emit: 'stdout', level: 'info' },\n     *   { emit: 'stdout', level: 'warn' }\n     *   { emit: 'stdout', level: 'error' }\n     * ]\n     * ```\n     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).\n     */\n    log?: (LogLevel | LogDefinition)[]\n    /**\n     * The default values for transactionOptions\n     * maxWait ?= 2000\n     * timeout ?= 5000\n     */\n    transactionOptions?: {\n      maxWait?: number\n      timeout?: number\n      isolationLevel?: Prisma.TransactionIsolationLevel\n    }\n    /**\n     * Global configuration for omitting model fields by default.\n     * \n     * @example\n     * ```\n     * const prisma = new PrismaClient({\n     *   omit: {\n     *     user: {\n     *       password: true\n     *     }\n     *   }\n     * })\n     * ```\n     */\n    omit?: Prisma.GlobalOmitConfig\n  }\n  export type GlobalOmitConfig = {\n    discussion_board_users?: discussion_board_usersOmit\n    discussion_board_guests?: discussion_board_guestsOmit\n    discussion_board_moderators?: discussion_board_moderatorsOmit\n    discussion_board_admins?: discussion_board_adminsOmit\n    discussion_board_user_profiles?: discussion_board_user_profilesOmit\n    discussion_board_user_settings?: discussion_board_user_settingsOmit\n    discussion_board_thread?: discussion_board_threadOmit\n    discussion_board_post?: discussion_board_postOmit\n    discussion_board_comment?: discussion_board_commentOmit\n    discussion_board_thread_tag?: discussion_board_thread_tagOmit\n    discussion_board_thread_category?: discussion_board_thread_categoryOmit\n    discussion_board_tag_category?: discussion_board_tag_categoryOmit\n    mv_discussion_thread_activity?: mv_discussion_thread_activityOmit\n    discussion_board_vote?: discussion_board_voteOmit\n    discussion_board_reaction?: discussion_board_reactionOmit\n    discussion_board_bookmark?: discussion_board_bookmarkOmit\n    discussion_board_notification?: discussion_board_notificationOmit\n    discussion_board_subscription?: discussion_board_subscriptionOmit\n    discussion_board_report?: discussion_board_reportOmit\n    discussion_board_moderator_action?: discussion_board_moderator_actionOmit\n    discussion_board_audit_log?: discussion_board_audit_logOmit\n    discussion_board_warning?: discussion_board_warningOmit\n    discussion_board_ban?: discussion_board_banOmit\n    discussion_board_thread_stats?: discussion_board_thread_statsOmit\n    discussion_board_user_activity?: discussion_board_user_activityOmit\n    discussion_board_content_abuse_metric?: discussion_board_content_abuse_metricOmit\n    discussion_board_setting?: discussion_board_settingOmit\n    discussion_board_system_config?: discussion_board_system_configOmit\n  }\n\n  /* Types for Logging */\n  export type LogLevel = 'info' | 'query' | 'warn' | 'error'\n  export type LogDefinition = {\n    level: LogLevel\n    emit: 'stdout' | 'event'\n  }\n\n  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never\n  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?\n    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>\n    : never\n\n  export type QueryEvent = {\n    timestamp: Date\n    query: string\n    params: string\n    duration: number\n    target: string\n  }\n\n  export type LogEvent = {\n    timestamp: Date\n    message: string\n    target: string\n  }\n  /* End Types for Logging */\n\n\n  export type PrismaAction =\n    | 'findUnique'\n    | 'findUniqueOrThrow'\n    | 'findMany'\n    | 'findFirst'\n    | 'findFirstOrThrow'\n    | 'create'\n    | 'createMany'\n    | 'createManyAndReturn'\n    | 'update'\n    | 'updateMany'\n    | 'updateManyAndReturn'\n    | 'upsert'\n    | 'delete'\n    | 'deleteMany'\n    | 'executeRaw'\n    | 'queryRaw'\n    | 'aggregate'\n    | 'count'\n    | 'runCommandRaw'\n    | 'findRaw'\n    | 'groupBy'\n\n  /**\n   * These options are being passed into the middleware as \"params\"\n   */\n  export type MiddlewareParams = {\n    model?: ModelName\n    action: PrismaAction\n    args: any\n    dataPath: string[]\n    runInTransaction: boolean\n  }\n\n  /**\n   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation\n   */\n  export type Middleware<T = any> = (\n    params: MiddlewareParams,\n    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,\n  ) => $Utils.JsPromise<T>\n\n  // tested in getLogLevel.test.ts\n  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;\n\n  /**\n   * `PrismaClient` proxy available in interactive transactions.\n   */\n  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>\n\n  export type Datasource = {\n    url?: string\n  }\n\n  /**\n   * Count Types\n   */\n\n\n  /**\n   * Count Type Discussion_board_usersCountOutputType\n   */\n\n  export type Discussion_board_usersCountOutputType = {\n    discussion_board_thread: number\n    discussion_board_post: number\n    discussion_board_comment: number\n    discussion_board_vote: number\n    discussion_board_reaction: number\n    discussion_board_bookmark: number\n    discussion_board_notification: number\n    discussion_board_subscription: number\n    discussion_board_report_of_reported_user_id: number\n    discussion_board_report_of_reporting_user_id: number\n    discussion_board_moderator_action: number\n    discussion_board_audit_log_of_actor_id: number\n    discussion_board_audit_log_of_affected_user_id: number\n    discussion_board_warning: number\n    discussion_board_ban: number\n  }\n\n  export type Discussion_board_usersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussion_board_thread?: boolean | Discussion_board_usersCountOutputTypeCountDiscussion_board_threadArgs\n    discussion_board_post?: boolean | Discussion_board_usersCountOutputTypeCountDiscussion_board_postArgs\n    discussion_board_comment?: boolean | Discussion_board_usersCountOutputTypeCountDiscussion_board_commentArgs\n    discussion_board_vote?: boolean | Discussion_board_usersCountOutputTypeCountDiscussion_board_voteArgs\n    discussion_board_reaction?: boolean | Discussion_board_usersCountOutputTypeCountDiscussion_board_reactionArgs\n    discussion_board_bookmark?: boolean | Discussion_board_usersCountOutputTypeCountDiscussion_board_bookmarkArgs\n    discussion_board_notification?: boolean | Discussion_board_usersCountOutputTypeCountDiscussion_board_notificationArgs\n    discussion_board_subscription?: boolean | Discussion_board_usersCountOutputTypeCountDiscussion_board_subscriptionArgs\n    discussion_board_report_of_reported_user_id?: boolean | Discussion_board_usersCountOutputTypeCountDiscussion_board_report_of_reported_user_idArgs\n    discussion_board_report_of_reporting_user_id?: boolean | Discussion_board_usersCountOutputTypeCountDiscussion_board_report_of_reporting_user_idArgs\n    discussion_board_moderator_action?: boolean | Discussion_board_usersCountOutputTypeCountDiscussion_board_moderator_actionArgs\n    discussion_board_audit_log_of_actor_id?: boolean | Discussion_board_usersCountOutputTypeCountDiscussion_board_audit_log_of_actor_idArgs\n    discussion_board_audit_log_of_affected_user_id?: boolean | Discussion_board_usersCountOutputTypeCountDiscussion_board_audit_log_of_affected_user_idArgs\n    discussion_board_warning?: boolean | Discussion_board_usersCountOutputTypeCountDiscussion_board_warningArgs\n    discussion_board_ban?: boolean | Discussion_board_usersCountOutputTypeCountDiscussion_board_banArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Discussion_board_usersCountOutputType without action\n   */\n  export type Discussion_board_usersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Discussion_board_usersCountOutputType\n     */\n    select?: Discussion_board_usersCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Discussion_board_usersCountOutputType without action\n   */\n  export type Discussion_board_usersCountOutputTypeCountDiscussion_board_threadArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_threadWhereInput\n  }\n\n  /**\n   * Discussion_board_usersCountOutputType without action\n   */\n  export type Discussion_board_usersCountOutputTypeCountDiscussion_board_postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_postWhereInput\n  }\n\n  /**\n   * Discussion_board_usersCountOutputType without action\n   */\n  export type Discussion_board_usersCountOutputTypeCountDiscussion_board_commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_commentWhereInput\n  }\n\n  /**\n   * Discussion_board_usersCountOutputType without action\n   */\n  export type Discussion_board_usersCountOutputTypeCountDiscussion_board_voteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_voteWhereInput\n  }\n\n  /**\n   * Discussion_board_usersCountOutputType without action\n   */\n  export type Discussion_board_usersCountOutputTypeCountDiscussion_board_reactionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_reactionWhereInput\n  }\n\n  /**\n   * Discussion_board_usersCountOutputType without action\n   */\n  export type Discussion_board_usersCountOutputTypeCountDiscussion_board_bookmarkArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_bookmarkWhereInput\n  }\n\n  /**\n   * Discussion_board_usersCountOutputType without action\n   */\n  export type Discussion_board_usersCountOutputTypeCountDiscussion_board_notificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_notificationWhereInput\n  }\n\n  /**\n   * Discussion_board_usersCountOutputType without action\n   */\n  export type Discussion_board_usersCountOutputTypeCountDiscussion_board_subscriptionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_subscriptionWhereInput\n  }\n\n  /**\n   * Discussion_board_usersCountOutputType without action\n   */\n  export type Discussion_board_usersCountOutputTypeCountDiscussion_board_report_of_reported_user_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_reportWhereInput\n  }\n\n  /**\n   * Discussion_board_usersCountOutputType without action\n   */\n  export type Discussion_board_usersCountOutputTypeCountDiscussion_board_report_of_reporting_user_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_reportWhereInput\n  }\n\n  /**\n   * Discussion_board_usersCountOutputType without action\n   */\n  export type Discussion_board_usersCountOutputTypeCountDiscussion_board_moderator_actionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_moderator_actionWhereInput\n  }\n\n  /**\n   * Discussion_board_usersCountOutputType without action\n   */\n  export type Discussion_board_usersCountOutputTypeCountDiscussion_board_audit_log_of_actor_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_audit_logWhereInput\n  }\n\n  /**\n   * Discussion_board_usersCountOutputType without action\n   */\n  export type Discussion_board_usersCountOutputTypeCountDiscussion_board_audit_log_of_affected_user_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_audit_logWhereInput\n  }\n\n  /**\n   * Discussion_board_usersCountOutputType without action\n   */\n  export type Discussion_board_usersCountOutputTypeCountDiscussion_board_warningArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_warningWhereInput\n  }\n\n  /**\n   * Discussion_board_usersCountOutputType without action\n   */\n  export type Discussion_board_usersCountOutputTypeCountDiscussion_board_banArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_banWhereInput\n  }\n\n\n  /**\n   * Count Type Discussion_board_moderatorsCountOutputType\n   */\n\n  export type Discussion_board_moderatorsCountOutputType = {\n    discussion_board_moderator_action: number\n    discussion_board_warning: number\n    discussion_board_ban: number\n    discussion_board_content_abuse_metric: number\n  }\n\n  export type Discussion_board_moderatorsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussion_board_moderator_action?: boolean | Discussion_board_moderatorsCountOutputTypeCountDiscussion_board_moderator_actionArgs\n    discussion_board_warning?: boolean | Discussion_board_moderatorsCountOutputTypeCountDiscussion_board_warningArgs\n    discussion_board_ban?: boolean | Discussion_board_moderatorsCountOutputTypeCountDiscussion_board_banArgs\n    discussion_board_content_abuse_metric?: boolean | Discussion_board_moderatorsCountOutputTypeCountDiscussion_board_content_abuse_metricArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Discussion_board_moderatorsCountOutputType without action\n   */\n  export type Discussion_board_moderatorsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Discussion_board_moderatorsCountOutputType\n     */\n    select?: Discussion_board_moderatorsCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Discussion_board_moderatorsCountOutputType without action\n   */\n  export type Discussion_board_moderatorsCountOutputTypeCountDiscussion_board_moderator_actionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_moderator_actionWhereInput\n  }\n\n  /**\n   * Discussion_board_moderatorsCountOutputType without action\n   */\n  export type Discussion_board_moderatorsCountOutputTypeCountDiscussion_board_warningArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_warningWhereInput\n  }\n\n  /**\n   * Discussion_board_moderatorsCountOutputType without action\n   */\n  export type Discussion_board_moderatorsCountOutputTypeCountDiscussion_board_banArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_banWhereInput\n  }\n\n  /**\n   * Discussion_board_moderatorsCountOutputType without action\n   */\n  export type Discussion_board_moderatorsCountOutputTypeCountDiscussion_board_content_abuse_metricArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_content_abuse_metricWhereInput\n  }\n\n\n  /**\n   * Count Type Discussion_board_threadCountOutputType\n   */\n\n  export type Discussion_board_threadCountOutputType = {\n    discussion_board_post: number\n    discussion_board_thread_tag: number\n    discussion_board_vote: number\n    discussion_board_reaction: number\n    discussion_board_bookmark: number\n    discussion_board_notification: number\n    discussion_board_subscription: number\n    discussion_board_report: number\n    discussion_board_moderator_action: number\n    discussion_board_warning: number\n  }\n\n  export type Discussion_board_threadCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussion_board_post?: boolean | Discussion_board_threadCountOutputTypeCountDiscussion_board_postArgs\n    discussion_board_thread_tag?: boolean | Discussion_board_threadCountOutputTypeCountDiscussion_board_thread_tagArgs\n    discussion_board_vote?: boolean | Discussion_board_threadCountOutputTypeCountDiscussion_board_voteArgs\n    discussion_board_reaction?: boolean | Discussion_board_threadCountOutputTypeCountDiscussion_board_reactionArgs\n    discussion_board_bookmark?: boolean | Discussion_board_threadCountOutputTypeCountDiscussion_board_bookmarkArgs\n    discussion_board_notification?: boolean | Discussion_board_threadCountOutputTypeCountDiscussion_board_notificationArgs\n    discussion_board_subscription?: boolean | Discussion_board_threadCountOutputTypeCountDiscussion_board_subscriptionArgs\n    discussion_board_report?: boolean | Discussion_board_threadCountOutputTypeCountDiscussion_board_reportArgs\n    discussion_board_moderator_action?: boolean | Discussion_board_threadCountOutputTypeCountDiscussion_board_moderator_actionArgs\n    discussion_board_warning?: boolean | Discussion_board_threadCountOutputTypeCountDiscussion_board_warningArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Discussion_board_threadCountOutputType without action\n   */\n  export type Discussion_board_threadCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Discussion_board_threadCountOutputType\n     */\n    select?: Discussion_board_threadCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Discussion_board_threadCountOutputType without action\n   */\n  export type Discussion_board_threadCountOutputTypeCountDiscussion_board_postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_postWhereInput\n  }\n\n  /**\n   * Discussion_board_threadCountOutputType without action\n   */\n  export type Discussion_board_threadCountOutputTypeCountDiscussion_board_thread_tagArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_thread_tagWhereInput\n  }\n\n  /**\n   * Discussion_board_threadCountOutputType without action\n   */\n  export type Discussion_board_threadCountOutputTypeCountDiscussion_board_voteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_voteWhereInput\n  }\n\n  /**\n   * Discussion_board_threadCountOutputType without action\n   */\n  export type Discussion_board_threadCountOutputTypeCountDiscussion_board_reactionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_reactionWhereInput\n  }\n\n  /**\n   * Discussion_board_threadCountOutputType without action\n   */\n  export type Discussion_board_threadCountOutputTypeCountDiscussion_board_bookmarkArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_bookmarkWhereInput\n  }\n\n  /**\n   * Discussion_board_threadCountOutputType without action\n   */\n  export type Discussion_board_threadCountOutputTypeCountDiscussion_board_notificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_notificationWhereInput\n  }\n\n  /**\n   * Discussion_board_threadCountOutputType without action\n   */\n  export type Discussion_board_threadCountOutputTypeCountDiscussion_board_subscriptionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_subscriptionWhereInput\n  }\n\n  /**\n   * Discussion_board_threadCountOutputType without action\n   */\n  export type Discussion_board_threadCountOutputTypeCountDiscussion_board_reportArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_reportWhereInput\n  }\n\n  /**\n   * Discussion_board_threadCountOutputType without action\n   */\n  export type Discussion_board_threadCountOutputTypeCountDiscussion_board_moderator_actionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_moderator_actionWhereInput\n  }\n\n  /**\n   * Discussion_board_threadCountOutputType without action\n   */\n  export type Discussion_board_threadCountOutputTypeCountDiscussion_board_warningArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_warningWhereInput\n  }\n\n\n  /**\n   * Count Type Discussion_board_postCountOutputType\n   */\n\n  export type Discussion_board_postCountOutputType = {\n    recursive: number\n    discussion_board_comment: number\n    discussion_board_vote: number\n    discussion_board_reaction: number\n    discussion_board_bookmark: number\n    discussion_board_notification: number\n    discussion_board_subscription: number\n    discussion_board_report: number\n    discussion_board_moderator_action: number\n    discussion_board_warning: number\n  }\n\n  export type Discussion_board_postCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    recursive?: boolean | Discussion_board_postCountOutputTypeCountRecursiveArgs\n    discussion_board_comment?: boolean | Discussion_board_postCountOutputTypeCountDiscussion_board_commentArgs\n    discussion_board_vote?: boolean | Discussion_board_postCountOutputTypeCountDiscussion_board_voteArgs\n    discussion_board_reaction?: boolean | Discussion_board_postCountOutputTypeCountDiscussion_board_reactionArgs\n    discussion_board_bookmark?: boolean | Discussion_board_postCountOutputTypeCountDiscussion_board_bookmarkArgs\n    discussion_board_notification?: boolean | Discussion_board_postCountOutputTypeCountDiscussion_board_notificationArgs\n    discussion_board_subscription?: boolean | Discussion_board_postCountOutputTypeCountDiscussion_board_subscriptionArgs\n    discussion_board_report?: boolean | Discussion_board_postCountOutputTypeCountDiscussion_board_reportArgs\n    discussion_board_moderator_action?: boolean | Discussion_board_postCountOutputTypeCountDiscussion_board_moderator_actionArgs\n    discussion_board_warning?: boolean | Discussion_board_postCountOutputTypeCountDiscussion_board_warningArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Discussion_board_postCountOutputType without action\n   */\n  export type Discussion_board_postCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Discussion_board_postCountOutputType\n     */\n    select?: Discussion_board_postCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Discussion_board_postCountOutputType without action\n   */\n  export type Discussion_board_postCountOutputTypeCountRecursiveArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_postWhereInput\n  }\n\n  /**\n   * Discussion_board_postCountOutputType without action\n   */\n  export type Discussion_board_postCountOutputTypeCountDiscussion_board_commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_commentWhereInput\n  }\n\n  /**\n   * Discussion_board_postCountOutputType without action\n   */\n  export type Discussion_board_postCountOutputTypeCountDiscussion_board_voteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_voteWhereInput\n  }\n\n  /**\n   * Discussion_board_postCountOutputType without action\n   */\n  export type Discussion_board_postCountOutputTypeCountDiscussion_board_reactionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_reactionWhereInput\n  }\n\n  /**\n   * Discussion_board_postCountOutputType without action\n   */\n  export type Discussion_board_postCountOutputTypeCountDiscussion_board_bookmarkArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_bookmarkWhereInput\n  }\n\n  /**\n   * Discussion_board_postCountOutputType without action\n   */\n  export type Discussion_board_postCountOutputTypeCountDiscussion_board_notificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_notificationWhereInput\n  }\n\n  /**\n   * Discussion_board_postCountOutputType without action\n   */\n  export type Discussion_board_postCountOutputTypeCountDiscussion_board_subscriptionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_subscriptionWhereInput\n  }\n\n  /**\n   * Discussion_board_postCountOutputType without action\n   */\n  export type Discussion_board_postCountOutputTypeCountDiscussion_board_reportArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_reportWhereInput\n  }\n\n  /**\n   * Discussion_board_postCountOutputType without action\n   */\n  export type Discussion_board_postCountOutputTypeCountDiscussion_board_moderator_actionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_moderator_actionWhereInput\n  }\n\n  /**\n   * Discussion_board_postCountOutputType without action\n   */\n  export type Discussion_board_postCountOutputTypeCountDiscussion_board_warningArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_warningWhereInput\n  }\n\n\n  /**\n   * Count Type Discussion_board_commentCountOutputType\n   */\n\n  export type Discussion_board_commentCountOutputType = {\n    recursive: number\n    discussion_board_vote: number\n    discussion_board_reaction: number\n    discussion_board_bookmark: number\n    discussion_board_notification: number\n    discussion_board_subscription: number\n    discussion_board_report: number\n    discussion_board_moderator_action: number\n    discussion_board_warning: number\n  }\n\n  export type Discussion_board_commentCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    recursive?: boolean | Discussion_board_commentCountOutputTypeCountRecursiveArgs\n    discussion_board_vote?: boolean | Discussion_board_commentCountOutputTypeCountDiscussion_board_voteArgs\n    discussion_board_reaction?: boolean | Discussion_board_commentCountOutputTypeCountDiscussion_board_reactionArgs\n    discussion_board_bookmark?: boolean | Discussion_board_commentCountOutputTypeCountDiscussion_board_bookmarkArgs\n    discussion_board_notification?: boolean | Discussion_board_commentCountOutputTypeCountDiscussion_board_notificationArgs\n    discussion_board_subscription?: boolean | Discussion_board_commentCountOutputTypeCountDiscussion_board_subscriptionArgs\n    discussion_board_report?: boolean | Discussion_board_commentCountOutputTypeCountDiscussion_board_reportArgs\n    discussion_board_moderator_action?: boolean | Discussion_board_commentCountOutputTypeCountDiscussion_board_moderator_actionArgs\n    discussion_board_warning?: boolean | Discussion_board_commentCountOutputTypeCountDiscussion_board_warningArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Discussion_board_commentCountOutputType without action\n   */\n  export type Discussion_board_commentCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Discussion_board_commentCountOutputType\n     */\n    select?: Discussion_board_commentCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Discussion_board_commentCountOutputType without action\n   */\n  export type Discussion_board_commentCountOutputTypeCountRecursiveArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_commentWhereInput\n  }\n\n  /**\n   * Discussion_board_commentCountOutputType without action\n   */\n  export type Discussion_board_commentCountOutputTypeCountDiscussion_board_voteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_voteWhereInput\n  }\n\n  /**\n   * Discussion_board_commentCountOutputType without action\n   */\n  export type Discussion_board_commentCountOutputTypeCountDiscussion_board_reactionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_reactionWhereInput\n  }\n\n  /**\n   * Discussion_board_commentCountOutputType without action\n   */\n  export type Discussion_board_commentCountOutputTypeCountDiscussion_board_bookmarkArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_bookmarkWhereInput\n  }\n\n  /**\n   * Discussion_board_commentCountOutputType without action\n   */\n  export type Discussion_board_commentCountOutputTypeCountDiscussion_board_notificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_notificationWhereInput\n  }\n\n  /**\n   * Discussion_board_commentCountOutputType without action\n   */\n  export type Discussion_board_commentCountOutputTypeCountDiscussion_board_subscriptionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_subscriptionWhereInput\n  }\n\n  /**\n   * Discussion_board_commentCountOutputType without action\n   */\n  export type Discussion_board_commentCountOutputTypeCountDiscussion_board_reportArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_reportWhereInput\n  }\n\n  /**\n   * Discussion_board_commentCountOutputType without action\n   */\n  export type Discussion_board_commentCountOutputTypeCountDiscussion_board_moderator_actionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_moderator_actionWhereInput\n  }\n\n  /**\n   * Discussion_board_commentCountOutputType without action\n   */\n  export type Discussion_board_commentCountOutputTypeCountDiscussion_board_warningArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_warningWhereInput\n  }\n\n\n  /**\n   * Count Type Discussion_board_thread_tagCountOutputType\n   */\n\n  export type Discussion_board_thread_tagCountOutputType = {\n    discussion_board_subscription: number\n  }\n\n  export type Discussion_board_thread_tagCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussion_board_subscription?: boolean | Discussion_board_thread_tagCountOutputTypeCountDiscussion_board_subscriptionArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Discussion_board_thread_tagCountOutputType without action\n   */\n  export type Discussion_board_thread_tagCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Discussion_board_thread_tagCountOutputType\n     */\n    select?: Discussion_board_thread_tagCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Discussion_board_thread_tagCountOutputType without action\n   */\n  export type Discussion_board_thread_tagCountOutputTypeCountDiscussion_board_subscriptionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_subscriptionWhereInput\n  }\n\n\n  /**\n   * Count Type Discussion_board_thread_categoryCountOutputType\n   */\n\n  export type Discussion_board_thread_categoryCountOutputType = {\n    discussion_board_thread: number\n  }\n\n  export type Discussion_board_thread_categoryCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussion_board_thread?: boolean | Discussion_board_thread_categoryCountOutputTypeCountDiscussion_board_threadArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Discussion_board_thread_categoryCountOutputType without action\n   */\n  export type Discussion_board_thread_categoryCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Discussion_board_thread_categoryCountOutputType\n     */\n    select?: Discussion_board_thread_categoryCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Discussion_board_thread_categoryCountOutputType without action\n   */\n  export type Discussion_board_thread_categoryCountOutputTypeCountDiscussion_board_threadArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_threadWhereInput\n  }\n\n\n  /**\n   * Count Type Discussion_board_tag_categoryCountOutputType\n   */\n\n  export type Discussion_board_tag_categoryCountOutputType = {\n    discussion_board_thread_tag: number\n  }\n\n  export type Discussion_board_tag_categoryCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussion_board_thread_tag?: boolean | Discussion_board_tag_categoryCountOutputTypeCountDiscussion_board_thread_tagArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Discussion_board_tag_categoryCountOutputType without action\n   */\n  export type Discussion_board_tag_categoryCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Discussion_board_tag_categoryCountOutputType\n     */\n    select?: Discussion_board_tag_categoryCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Discussion_board_tag_categoryCountOutputType without action\n   */\n  export type Discussion_board_tag_categoryCountOutputTypeCountDiscussion_board_thread_tagArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_thread_tagWhereInput\n  }\n\n\n  /**\n   * Count Type Discussion_board_reportCountOutputType\n   */\n\n  export type Discussion_board_reportCountOutputType = {\n    discussion_board_moderator_action: number\n    discussion_board_ban: number\n  }\n\n  export type Discussion_board_reportCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussion_board_moderator_action?: boolean | Discussion_board_reportCountOutputTypeCountDiscussion_board_moderator_actionArgs\n    discussion_board_ban?: boolean | Discussion_board_reportCountOutputTypeCountDiscussion_board_banArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Discussion_board_reportCountOutputType without action\n   */\n  export type Discussion_board_reportCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Discussion_board_reportCountOutputType\n     */\n    select?: Discussion_board_reportCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Discussion_board_reportCountOutputType without action\n   */\n  export type Discussion_board_reportCountOutputTypeCountDiscussion_board_moderator_actionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_moderator_actionWhereInput\n  }\n\n  /**\n   * Discussion_board_reportCountOutputType without action\n   */\n  export type Discussion_board_reportCountOutputTypeCountDiscussion_board_banArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_banWhereInput\n  }\n\n\n  /**\n   * Count Type Discussion_board_warningCountOutputType\n   */\n\n  export type Discussion_board_warningCountOutputType = {\n    discussion_board_ban: number\n  }\n\n  export type Discussion_board_warningCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussion_board_ban?: boolean | Discussion_board_warningCountOutputTypeCountDiscussion_board_banArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Discussion_board_warningCountOutputType without action\n   */\n  export type Discussion_board_warningCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Discussion_board_warningCountOutputType\n     */\n    select?: Discussion_board_warningCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Discussion_board_warningCountOutputType without action\n   */\n  export type Discussion_board_warningCountOutputTypeCountDiscussion_board_banArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_banWhereInput\n  }\n\n\n  /**\n   * Models\n   */\n\n  /**\n   * Model discussion_board_users\n   */\n\n  export type AggregateDiscussion_board_users = {\n    _count: Discussion_board_usersCountAggregateOutputType | null\n    _min: Discussion_board_usersMinAggregateOutputType | null\n    _max: Discussion_board_usersMaxAggregateOutputType | null\n  }\n\n  export type Discussion_board_usersMinAggregateOutputType = {\n    id: string | null\n    username: string | null\n    email: string | null\n    password_hash: string | null\n    is_active: boolean | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Discussion_board_usersMaxAggregateOutputType = {\n    id: string | null\n    username: string | null\n    email: string | null\n    password_hash: string | null\n    is_active: boolean | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Discussion_board_usersCountAggregateOutputType = {\n    id: number\n    username: number\n    email: number\n    password_hash: number\n    is_active: number\n    created_at: number\n    updated_at: number\n    deleted_at: number\n    _all: number\n  }\n\n\n  export type Discussion_board_usersMinAggregateInputType = {\n    id?: true\n    username?: true\n    email?: true\n    password_hash?: true\n    is_active?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Discussion_board_usersMaxAggregateInputType = {\n    id?: true\n    username?: true\n    email?: true\n    password_hash?: true\n    is_active?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Discussion_board_usersCountAggregateInputType = {\n    id?: true\n    username?: true\n    email?: true\n    password_hash?: true\n    is_active?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n    _all?: true\n  }\n\n  export type Discussion_board_usersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_users to aggregate.\n     */\n    where?: discussion_board_usersWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_users to fetch.\n     */\n    orderBy?: discussion_board_usersOrderByWithRelationInput | discussion_board_usersOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussion_board_usersWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_users from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_users.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussion_board_users\n    **/\n    _count?: true | Discussion_board_usersCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussion_board_usersMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussion_board_usersMaxAggregateInputType\n  }\n\n  export type GetDiscussion_board_usersAggregateType<T extends Discussion_board_usersAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussion_board_users]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussion_board_users[P]>\n      : GetScalarType<T[P], AggregateDiscussion_board_users[P]>\n  }\n\n\n\n\n  export type discussion_board_usersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_usersWhereInput\n    orderBy?: discussion_board_usersOrderByWithAggregationInput | discussion_board_usersOrderByWithAggregationInput[]\n    by: Discussion_board_usersScalarFieldEnum[] | Discussion_board_usersScalarFieldEnum\n    having?: discussion_board_usersScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussion_board_usersCountAggregateInputType | true\n    _min?: Discussion_board_usersMinAggregateInputType\n    _max?: Discussion_board_usersMaxAggregateInputType\n  }\n\n  export type Discussion_board_usersGroupByOutputType = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date\n    updated_at: Date\n    deleted_at: Date | null\n    _count: Discussion_board_usersCountAggregateOutputType | null\n    _min: Discussion_board_usersMinAggregateOutputType | null\n    _max: Discussion_board_usersMaxAggregateOutputType | null\n  }\n\n  type GetDiscussion_board_usersGroupByPayload<T extends discussion_board_usersGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussion_board_usersGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussion_board_usersGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussion_board_usersGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussion_board_usersGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussion_board_usersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    username?: boolean\n    email?: boolean\n    password_hash?: boolean\n    is_active?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    discussion_board_moderators?: boolean | discussion_board_users$discussion_board_moderatorsArgs<ExtArgs>\n    discussion_board_admins?: boolean | discussion_board_users$discussion_board_adminsArgs<ExtArgs>\n    discussion_board_user_profiles?: boolean | discussion_board_users$discussion_board_user_profilesArgs<ExtArgs>\n    discussion_board_user_settings?: boolean | discussion_board_users$discussion_board_user_settingsArgs<ExtArgs>\n    discussion_board_thread?: boolean | discussion_board_users$discussion_board_threadArgs<ExtArgs>\n    discussion_board_post?: boolean | discussion_board_users$discussion_board_postArgs<ExtArgs>\n    discussion_board_comment?: boolean | discussion_board_users$discussion_board_commentArgs<ExtArgs>\n    discussion_board_vote?: boolean | discussion_board_users$discussion_board_voteArgs<ExtArgs>\n    discussion_board_reaction?: boolean | discussion_board_users$discussion_board_reactionArgs<ExtArgs>\n    discussion_board_bookmark?: boolean | discussion_board_users$discussion_board_bookmarkArgs<ExtArgs>\n    discussion_board_notification?: boolean | discussion_board_users$discussion_board_notificationArgs<ExtArgs>\n    discussion_board_subscription?: boolean | discussion_board_users$discussion_board_subscriptionArgs<ExtArgs>\n    discussion_board_report_of_reported_user_id?: boolean | discussion_board_users$discussion_board_report_of_reported_user_idArgs<ExtArgs>\n    discussion_board_report_of_reporting_user_id?: boolean | discussion_board_users$discussion_board_report_of_reporting_user_idArgs<ExtArgs>\n    discussion_board_moderator_action?: boolean | discussion_board_users$discussion_board_moderator_actionArgs<ExtArgs>\n    discussion_board_audit_log_of_actor_id?: boolean | discussion_board_users$discussion_board_audit_log_of_actor_idArgs<ExtArgs>\n    discussion_board_audit_log_of_affected_user_id?: boolean | discussion_board_users$discussion_board_audit_log_of_affected_user_idArgs<ExtArgs>\n    discussion_board_warning?: boolean | discussion_board_users$discussion_board_warningArgs<ExtArgs>\n    discussion_board_ban?: boolean | discussion_board_users$discussion_board_banArgs<ExtArgs>\n    discussion_board_user_activity?: boolean | discussion_board_users$discussion_board_user_activityArgs<ExtArgs>\n    _count?: boolean | Discussion_board_usersCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_users\"]>\n\n  export type discussion_board_usersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    username?: boolean\n    email?: boolean\n    password_hash?: boolean\n    is_active?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }, ExtArgs[\"result\"][\"discussion_board_users\"]>\n\n  export type discussion_board_usersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    username?: boolean\n    email?: boolean\n    password_hash?: boolean\n    is_active?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }, ExtArgs[\"result\"][\"discussion_board_users\"]>\n\n  export type discussion_board_usersSelectScalar = {\n    id?: boolean\n    username?: boolean\n    email?: boolean\n    password_hash?: boolean\n    is_active?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }\n\n  export type discussion_board_usersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"username\" | \"email\" | \"password_hash\" | \"is_active\" | \"created_at\" | \"updated_at\" | \"deleted_at\", ExtArgs[\"result\"][\"discussion_board_users\"]>\n  export type discussion_board_usersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussion_board_moderators?: boolean | discussion_board_users$discussion_board_moderatorsArgs<ExtArgs>\n    discussion_board_admins?: boolean | discussion_board_users$discussion_board_adminsArgs<ExtArgs>\n    discussion_board_user_profiles?: boolean | discussion_board_users$discussion_board_user_profilesArgs<ExtArgs>\n    discussion_board_user_settings?: boolean | discussion_board_users$discussion_board_user_settingsArgs<ExtArgs>\n    discussion_board_thread?: boolean | discussion_board_users$discussion_board_threadArgs<ExtArgs>\n    discussion_board_post?: boolean | discussion_board_users$discussion_board_postArgs<ExtArgs>\n    discussion_board_comment?: boolean | discussion_board_users$discussion_board_commentArgs<ExtArgs>\n    discussion_board_vote?: boolean | discussion_board_users$discussion_board_voteArgs<ExtArgs>\n    discussion_board_reaction?: boolean | discussion_board_users$discussion_board_reactionArgs<ExtArgs>\n    discussion_board_bookmark?: boolean | discussion_board_users$discussion_board_bookmarkArgs<ExtArgs>\n    discussion_board_notification?: boolean | discussion_board_users$discussion_board_notificationArgs<ExtArgs>\n    discussion_board_subscription?: boolean | discussion_board_users$discussion_board_subscriptionArgs<ExtArgs>\n    discussion_board_report_of_reported_user_id?: boolean | discussion_board_users$discussion_board_report_of_reported_user_idArgs<ExtArgs>\n    discussion_board_report_of_reporting_user_id?: boolean | discussion_board_users$discussion_board_report_of_reporting_user_idArgs<ExtArgs>\n    discussion_board_moderator_action?: boolean | discussion_board_users$discussion_board_moderator_actionArgs<ExtArgs>\n    discussion_board_audit_log_of_actor_id?: boolean | discussion_board_users$discussion_board_audit_log_of_actor_idArgs<ExtArgs>\n    discussion_board_audit_log_of_affected_user_id?: boolean | discussion_board_users$discussion_board_audit_log_of_affected_user_idArgs<ExtArgs>\n    discussion_board_warning?: boolean | discussion_board_users$discussion_board_warningArgs<ExtArgs>\n    discussion_board_ban?: boolean | discussion_board_users$discussion_board_banArgs<ExtArgs>\n    discussion_board_user_activity?: boolean | discussion_board_users$discussion_board_user_activityArgs<ExtArgs>\n    _count?: boolean | Discussion_board_usersCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type discussion_board_usersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}\n  export type discussion_board_usersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}\n\n  export type $discussion_board_usersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussion_board_users\"\n    objects: {\n      discussion_board_moderators: Prisma.$discussion_board_moderatorsPayload<ExtArgs> | null\n      discussion_board_admins: Prisma.$discussion_board_adminsPayload<ExtArgs> | null\n      discussion_board_user_profiles: Prisma.$discussion_board_user_profilesPayload<ExtArgs> | null\n      discussion_board_user_settings: Prisma.$discussion_board_user_settingsPayload<ExtArgs> | null\n      discussion_board_thread: Prisma.$discussion_board_threadPayload<ExtArgs>[]\n      discussion_board_post: Prisma.$discussion_board_postPayload<ExtArgs>[]\n      discussion_board_comment: Prisma.$discussion_board_commentPayload<ExtArgs>[]\n      discussion_board_vote: Prisma.$discussion_board_votePayload<ExtArgs>[]\n      discussion_board_reaction: Prisma.$discussion_board_reactionPayload<ExtArgs>[]\n      discussion_board_bookmark: Prisma.$discussion_board_bookmarkPayload<ExtArgs>[]\n      discussion_board_notification: Prisma.$discussion_board_notificationPayload<ExtArgs>[]\n      discussion_board_subscription: Prisma.$discussion_board_subscriptionPayload<ExtArgs>[]\n      discussion_board_report_of_reported_user_id: Prisma.$discussion_board_reportPayload<ExtArgs>[]\n      discussion_board_report_of_reporting_user_id: Prisma.$discussion_board_reportPayload<ExtArgs>[]\n      discussion_board_moderator_action: Prisma.$discussion_board_moderator_actionPayload<ExtArgs>[]\n      discussion_board_audit_log_of_actor_id: Prisma.$discussion_board_audit_logPayload<ExtArgs>[]\n      discussion_board_audit_log_of_affected_user_id: Prisma.$discussion_board_audit_logPayload<ExtArgs>[]\n      discussion_board_warning: Prisma.$discussion_board_warningPayload<ExtArgs>[]\n      discussion_board_ban: Prisma.$discussion_board_banPayload<ExtArgs>[]\n      discussion_board_user_activity: Prisma.$discussion_board_user_activityPayload<ExtArgs> | null\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key - Implements unique identification per user. \n       * Ensures 1NF and 3NF by uniquely identifying each user record. All business relationships and entity references use this UUID.\n       * For example, a user's posts or profile will reference this id.\n       */\n      id: string\n      /**\n       * Username - Implements unique, human-friendly identifier for sign-in and public presence. Satisfies requirement for user authentication and personalized identifiers. \n       * Maintains 3NF by storing as atomic value; not duplicated elsewhere. For example, used to mention users in threads.\n       */\n      username: string\n      /**\n       * Email - Implements unique login credential and notification address, required for registration, password recovery, and business operations involving communication. \n       * Ensures 3NF and security compliance by isolating PII to core user record. Format validated as email. For example, delivery of account recovery links or notifications.\n       */\n      email: string\n      /**\n       * Password Hash - Implements security requirements for credential storage. \n       * Contains only the securely hashed password, never the raw value. Maintains 3NF by being strictly an atomic credential. For example, used on authentication attempt checks.\n       */\n      password_hash: string\n      /**\n       * Active Flag - Supports account enable/disable flow as required by admin/moderation policies. \n       * Maintains normalization (3NF) by not encoding user status elsewhere. For example, a suspended user is marked inactive here.\n       */\n      is_active: boolean\n      /**\n       * Created Timestamp - Represents the time of user registration. Implements requirement for audit trail and account lifecycle analysis. \n       * Atomic, non-calculated field in strict 3NF. Example: find all accounts registered in a given period.\n       */\n      created_at: Date\n      /**\n       * Last Updated Timestamp - Tracks last mutation of user record (e.g., profile update, password change). \n       * Fulfills audit, compliance, and operational needs. Normalized, atomic. Used for detecting recently changed accounts.\n       */\n      updated_at: Date\n      /**\n       * Soft Delete Timestamp - Implements requirement for recoverable account deletion. \n       * Nullable. When set, the user is logically deleted for compliance or user-right-to-be-forgotten scenarios. No denormalization.\n       */\n      deleted_at: Date | null\n    }, ExtArgs[\"result\"][\"discussion_board_users\"]>\n    composites: {}\n  }\n\n  type discussion_board_usersGetPayload<S extends boolean | null | undefined | discussion_board_usersDefaultArgs> = $Result.GetResult<Prisma.$discussion_board_usersPayload, S>\n\n  type discussion_board_usersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussion_board_usersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussion_board_usersCountAggregateInputType | true\n    }\n\n  export interface discussion_board_usersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussion_board_users'], meta: { name: 'discussion_board_users' } }\n    /**\n     * Find zero or one Discussion_board_users that matches the filter.\n     * @param {discussion_board_usersFindUniqueArgs} args - Arguments to find a Discussion_board_users\n     * @example\n     * // Get one Discussion_board_users\n     * const discussion_board_users = await prisma.discussion_board_users.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussion_board_usersFindUniqueArgs>(args: SelectSubset<T, discussion_board_usersFindUniqueArgs<ExtArgs>>): Prisma__discussion_board_usersClient<$Result.GetResult<Prisma.$discussion_board_usersPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussion_board_users that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussion_board_usersFindUniqueOrThrowArgs} args - Arguments to find a Discussion_board_users\n     * @example\n     * // Get one Discussion_board_users\n     * const discussion_board_users = await prisma.discussion_board_users.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussion_board_usersFindUniqueOrThrowArgs>(args: SelectSubset<T, discussion_board_usersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussion_board_usersClient<$Result.GetResult<Prisma.$discussion_board_usersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_users that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_usersFindFirstArgs} args - Arguments to find a Discussion_board_users\n     * @example\n     * // Get one Discussion_board_users\n     * const discussion_board_users = await prisma.discussion_board_users.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussion_board_usersFindFirstArgs>(args?: SelectSubset<T, discussion_board_usersFindFirstArgs<ExtArgs>>): Prisma__discussion_board_usersClient<$Result.GetResult<Prisma.$discussion_board_usersPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_users that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_usersFindFirstOrThrowArgs} args - Arguments to find a Discussion_board_users\n     * @example\n     * // Get one Discussion_board_users\n     * const discussion_board_users = await prisma.discussion_board_users.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussion_board_usersFindFirstOrThrowArgs>(args?: SelectSubset<T, discussion_board_usersFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussion_board_usersClient<$Result.GetResult<Prisma.$discussion_board_usersPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussion_board_users that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_usersFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussion_board_users\n     * const discussion_board_users = await prisma.discussion_board_users.findMany()\n     * \n     * // Get first 10 Discussion_board_users\n     * const discussion_board_users = await prisma.discussion_board_users.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussion_board_usersWithIdOnly = await prisma.discussion_board_users.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussion_board_usersFindManyArgs>(args?: SelectSubset<T, discussion_board_usersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_usersPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussion_board_users.\n     * @param {discussion_board_usersCreateArgs} args - Arguments to create a Discussion_board_users.\n     * @example\n     * // Create one Discussion_board_users\n     * const Discussion_board_users = await prisma.discussion_board_users.create({\n     *   data: {\n     *     // ... data to create a Discussion_board_users\n     *   }\n     * })\n     * \n     */\n    create<T extends discussion_board_usersCreateArgs>(args: SelectSubset<T, discussion_board_usersCreateArgs<ExtArgs>>): Prisma__discussion_board_usersClient<$Result.GetResult<Prisma.$discussion_board_usersPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussion_board_users.\n     * @param {discussion_board_usersCreateManyArgs} args - Arguments to create many Discussion_board_users.\n     * @example\n     * // Create many Discussion_board_users\n     * const discussion_board_users = await prisma.discussion_board_users.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussion_board_usersCreateManyArgs>(args?: SelectSubset<T, discussion_board_usersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussion_board_users and returns the data saved in the database.\n     * @param {discussion_board_usersCreateManyAndReturnArgs} args - Arguments to create many Discussion_board_users.\n     * @example\n     * // Create many Discussion_board_users\n     * const discussion_board_users = await prisma.discussion_board_users.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussion_board_users and only return the `id`\n     * const discussion_board_usersWithIdOnly = await prisma.discussion_board_users.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussion_board_usersCreateManyAndReturnArgs>(args?: SelectSubset<T, discussion_board_usersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_usersPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussion_board_users.\n     * @param {discussion_board_usersDeleteArgs} args - Arguments to delete one Discussion_board_users.\n     * @example\n     * // Delete one Discussion_board_users\n     * const Discussion_board_users = await prisma.discussion_board_users.delete({\n     *   where: {\n     *     // ... filter to delete one Discussion_board_users\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussion_board_usersDeleteArgs>(args: SelectSubset<T, discussion_board_usersDeleteArgs<ExtArgs>>): Prisma__discussion_board_usersClient<$Result.GetResult<Prisma.$discussion_board_usersPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussion_board_users.\n     * @param {discussion_board_usersUpdateArgs} args - Arguments to update one Discussion_board_users.\n     * @example\n     * // Update one Discussion_board_users\n     * const discussion_board_users = await prisma.discussion_board_users.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussion_board_usersUpdateArgs>(args: SelectSubset<T, discussion_board_usersUpdateArgs<ExtArgs>>): Prisma__discussion_board_usersClient<$Result.GetResult<Prisma.$discussion_board_usersPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussion_board_users.\n     * @param {discussion_board_usersDeleteManyArgs} args - Arguments to filter Discussion_board_users to delete.\n     * @example\n     * // Delete a few Discussion_board_users\n     * const { count } = await prisma.discussion_board_users.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussion_board_usersDeleteManyArgs>(args?: SelectSubset<T, discussion_board_usersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_users.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_usersUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussion_board_users\n     * const discussion_board_users = await prisma.discussion_board_users.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussion_board_usersUpdateManyArgs>(args: SelectSubset<T, discussion_board_usersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_users and returns the data updated in the database.\n     * @param {discussion_board_usersUpdateManyAndReturnArgs} args - Arguments to update many Discussion_board_users.\n     * @example\n     * // Update many Discussion_board_users\n     * const discussion_board_users = await prisma.discussion_board_users.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussion_board_users and only return the `id`\n     * const discussion_board_usersWithIdOnly = await prisma.discussion_board_users.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussion_board_usersUpdateManyAndReturnArgs>(args: SelectSubset<T, discussion_board_usersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_usersPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussion_board_users.\n     * @param {discussion_board_usersUpsertArgs} args - Arguments to update or create a Discussion_board_users.\n     * @example\n     * // Update or create a Discussion_board_users\n     * const discussion_board_users = await prisma.discussion_board_users.upsert({\n     *   create: {\n     *     // ... data to create a Discussion_board_users\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussion_board_users we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussion_board_usersUpsertArgs>(args: SelectSubset<T, discussion_board_usersUpsertArgs<ExtArgs>>): Prisma__discussion_board_usersClient<$Result.GetResult<Prisma.$discussion_board_usersPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussion_board_users.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_usersCountArgs} args - Arguments to filter Discussion_board_users to count.\n     * @example\n     * // Count the number of Discussion_board_users\n     * const count = await prisma.discussion_board_users.count({\n     *   where: {\n     *     // ... the filter for the Discussion_board_users we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussion_board_usersCountArgs>(\n      args?: Subset<T, discussion_board_usersCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussion_board_usersCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussion_board_users.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussion_board_usersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussion_board_usersAggregateArgs>(args: Subset<T, Discussion_board_usersAggregateArgs>): Prisma.PrismaPromise<GetDiscussion_board_usersAggregateType<T>>\n\n    /**\n     * Group by Discussion_board_users.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_usersGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussion_board_usersGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussion_board_usersGroupByArgs['orderBy'] }\n        : { orderBy?: discussion_board_usersGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussion_board_usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussion_board_usersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussion_board_users model\n   */\n  readonly fields: discussion_board_usersFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussion_board_users.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussion_board_usersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    discussion_board_moderators<T extends discussion_board_users$discussion_board_moderatorsArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_users$discussion_board_moderatorsArgs<ExtArgs>>): Prisma__discussion_board_moderatorsClient<$Result.GetResult<Prisma.$discussion_board_moderatorsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    discussion_board_admins<T extends discussion_board_users$discussion_board_adminsArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_users$discussion_board_adminsArgs<ExtArgs>>): Prisma__discussion_board_adminsClient<$Result.GetResult<Prisma.$discussion_board_adminsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    discussion_board_user_profiles<T extends discussion_board_users$discussion_board_user_profilesArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_users$discussion_board_user_profilesArgs<ExtArgs>>): Prisma__discussion_board_user_profilesClient<$Result.GetResult<Prisma.$discussion_board_user_profilesPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    discussion_board_user_settings<T extends discussion_board_users$discussion_board_user_settingsArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_users$discussion_board_user_settingsArgs<ExtArgs>>): Prisma__discussion_board_user_settingsClient<$Result.GetResult<Prisma.$discussion_board_user_settingsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    discussion_board_thread<T extends discussion_board_users$discussion_board_threadArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_users$discussion_board_threadArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_threadPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_post<T extends discussion_board_users$discussion_board_postArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_users$discussion_board_postArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_postPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_comment<T extends discussion_board_users$discussion_board_commentArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_users$discussion_board_commentArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_commentPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_vote<T extends discussion_board_users$discussion_board_voteArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_users$discussion_board_voteArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_votePayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_reaction<T extends discussion_board_users$discussion_board_reactionArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_users$discussion_board_reactionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_reactionPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_bookmark<T extends discussion_board_users$discussion_board_bookmarkArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_users$discussion_board_bookmarkArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_bookmarkPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_notification<T extends discussion_board_users$discussion_board_notificationArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_users$discussion_board_notificationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_notificationPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_subscription<T extends discussion_board_users$discussion_board_subscriptionArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_users$discussion_board_subscriptionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_subscriptionPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_report_of_reported_user_id<T extends discussion_board_users$discussion_board_report_of_reported_user_idArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_users$discussion_board_report_of_reported_user_idArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_reportPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_report_of_reporting_user_id<T extends discussion_board_users$discussion_board_report_of_reporting_user_idArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_users$discussion_board_report_of_reporting_user_idArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_reportPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_moderator_action<T extends discussion_board_users$discussion_board_moderator_actionArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_users$discussion_board_moderator_actionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_moderator_actionPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_audit_log_of_actor_id<T extends discussion_board_users$discussion_board_audit_log_of_actor_idArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_users$discussion_board_audit_log_of_actor_idArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_audit_logPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_audit_log_of_affected_user_id<T extends discussion_board_users$discussion_board_audit_log_of_affected_user_idArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_users$discussion_board_audit_log_of_affected_user_idArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_audit_logPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_warning<T extends discussion_board_users$discussion_board_warningArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_users$discussion_board_warningArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_warningPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_ban<T extends discussion_board_users$discussion_board_banArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_users$discussion_board_banArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_banPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_user_activity<T extends discussion_board_users$discussion_board_user_activityArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_users$discussion_board_user_activityArgs<ExtArgs>>): Prisma__discussion_board_user_activityClient<$Result.GetResult<Prisma.$discussion_board_user_activityPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussion_board_users model\n   */\n  interface discussion_board_usersFieldRefs {\n    readonly id: FieldRef<\"discussion_board_users\", 'String'>\n    readonly username: FieldRef<\"discussion_board_users\", 'String'>\n    readonly email: FieldRef<\"discussion_board_users\", 'String'>\n    readonly password_hash: FieldRef<\"discussion_board_users\", 'String'>\n    readonly is_active: FieldRef<\"discussion_board_users\", 'Boolean'>\n    readonly created_at: FieldRef<\"discussion_board_users\", 'DateTime'>\n    readonly updated_at: FieldRef<\"discussion_board_users\", 'DateTime'>\n    readonly deleted_at: FieldRef<\"discussion_board_users\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussion_board_users findUnique\n   */\n  export type discussion_board_usersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_users\n     */\n    select?: discussion_board_usersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_users\n     */\n    omit?: discussion_board_usersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_usersInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_users to fetch.\n     */\n    where: discussion_board_usersWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_users findUniqueOrThrow\n   */\n  export type discussion_board_usersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_users\n     */\n    select?: discussion_board_usersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_users\n     */\n    omit?: discussion_board_usersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_usersInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_users to fetch.\n     */\n    where: discussion_board_usersWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_users findFirst\n   */\n  export type discussion_board_usersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_users\n     */\n    select?: discussion_board_usersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_users\n     */\n    omit?: discussion_board_usersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_usersInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_users to fetch.\n     */\n    where?: discussion_board_usersWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_users to fetch.\n     */\n    orderBy?: discussion_board_usersOrderByWithRelationInput | discussion_board_usersOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_users.\n     */\n    cursor?: discussion_board_usersWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_users from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_users.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_users.\n     */\n    distinct?: Discussion_board_usersScalarFieldEnum | Discussion_board_usersScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_users findFirstOrThrow\n   */\n  export type discussion_board_usersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_users\n     */\n    select?: discussion_board_usersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_users\n     */\n    omit?: discussion_board_usersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_usersInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_users to fetch.\n     */\n    where?: discussion_board_usersWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_users to fetch.\n     */\n    orderBy?: discussion_board_usersOrderByWithRelationInput | discussion_board_usersOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_users.\n     */\n    cursor?: discussion_board_usersWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_users from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_users.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_users.\n     */\n    distinct?: Discussion_board_usersScalarFieldEnum | Discussion_board_usersScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_users findMany\n   */\n  export type discussion_board_usersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_users\n     */\n    select?: discussion_board_usersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_users\n     */\n    omit?: discussion_board_usersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_usersInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_users to fetch.\n     */\n    where?: discussion_board_usersWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_users to fetch.\n     */\n    orderBy?: discussion_board_usersOrderByWithRelationInput | discussion_board_usersOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussion_board_users.\n     */\n    cursor?: discussion_board_usersWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_users from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_users.\n     */\n    skip?: number\n    distinct?: Discussion_board_usersScalarFieldEnum | Discussion_board_usersScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_users create\n   */\n  export type discussion_board_usersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_users\n     */\n    select?: discussion_board_usersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_users\n     */\n    omit?: discussion_board_usersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_usersInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussion_board_users.\n     */\n    data: XOR<discussion_board_usersCreateInput, discussion_board_usersUncheckedCreateInput>\n  }\n\n  /**\n   * discussion_board_users createMany\n   */\n  export type discussion_board_usersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussion_board_users.\n     */\n    data: discussion_board_usersCreateManyInput | discussion_board_usersCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussion_board_users createManyAndReturn\n   */\n  export type discussion_board_usersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_users\n     */\n    select?: discussion_board_usersSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_users\n     */\n    omit?: discussion_board_usersOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussion_board_users.\n     */\n    data: discussion_board_usersCreateManyInput | discussion_board_usersCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussion_board_users update\n   */\n  export type discussion_board_usersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_users\n     */\n    select?: discussion_board_usersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_users\n     */\n    omit?: discussion_board_usersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_usersInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussion_board_users.\n     */\n    data: XOR<discussion_board_usersUpdateInput, discussion_board_usersUncheckedUpdateInput>\n    /**\n     * Choose, which discussion_board_users to update.\n     */\n    where: discussion_board_usersWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_users updateMany\n   */\n  export type discussion_board_usersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussion_board_users.\n     */\n    data: XOR<discussion_board_usersUpdateManyMutationInput, discussion_board_usersUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_users to update\n     */\n    where?: discussion_board_usersWhereInput\n    /**\n     * Limit how many discussion_board_users to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_users updateManyAndReturn\n   */\n  export type discussion_board_usersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_users\n     */\n    select?: discussion_board_usersSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_users\n     */\n    omit?: discussion_board_usersOmit<ExtArgs> | null\n    /**\n     * The data used to update discussion_board_users.\n     */\n    data: XOR<discussion_board_usersUpdateManyMutationInput, discussion_board_usersUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_users to update\n     */\n    where?: discussion_board_usersWhereInput\n    /**\n     * Limit how many discussion_board_users to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_users upsert\n   */\n  export type discussion_board_usersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_users\n     */\n    select?: discussion_board_usersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_users\n     */\n    omit?: discussion_board_usersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_usersInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussion_board_users to update in case it exists.\n     */\n    where: discussion_board_usersWhereUniqueInput\n    /**\n     * In case the discussion_board_users found by the `where` argument doesn't exist, create a new discussion_board_users with this data.\n     */\n    create: XOR<discussion_board_usersCreateInput, discussion_board_usersUncheckedCreateInput>\n    /**\n     * In case the discussion_board_users was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussion_board_usersUpdateInput, discussion_board_usersUncheckedUpdateInput>\n  }\n\n  /**\n   * discussion_board_users delete\n   */\n  export type discussion_board_usersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_users\n     */\n    select?: discussion_board_usersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_users\n     */\n    omit?: discussion_board_usersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_usersInclude<ExtArgs> | null\n    /**\n     * Filter which discussion_board_users to delete.\n     */\n    where: discussion_board_usersWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_users deleteMany\n   */\n  export type discussion_board_usersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_users to delete\n     */\n    where?: discussion_board_usersWhereInput\n    /**\n     * Limit how many discussion_board_users to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_users.discussion_board_moderators\n   */\n  export type discussion_board_users$discussion_board_moderatorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_moderators\n     */\n    select?: discussion_board_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_moderators\n     */\n    omit?: discussion_board_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_moderatorsInclude<ExtArgs> | null\n    where?: discussion_board_moderatorsWhereInput\n  }\n\n  /**\n   * discussion_board_users.discussion_board_admins\n   */\n  export type discussion_board_users$discussion_board_adminsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_admins\n     */\n    select?: discussion_board_adminsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_admins\n     */\n    omit?: discussion_board_adminsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_adminsInclude<ExtArgs> | null\n    where?: discussion_board_adminsWhereInput\n  }\n\n  /**\n   * discussion_board_users.discussion_board_user_profiles\n   */\n  export type discussion_board_users$discussion_board_user_profilesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_user_profiles\n     */\n    select?: discussion_board_user_profilesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_user_profiles\n     */\n    omit?: discussion_board_user_profilesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_user_profilesInclude<ExtArgs> | null\n    where?: discussion_board_user_profilesWhereInput\n  }\n\n  /**\n   * discussion_board_users.discussion_board_user_settings\n   */\n  export type discussion_board_users$discussion_board_user_settingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_user_settings\n     */\n    select?: discussion_board_user_settingsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_user_settings\n     */\n    omit?: discussion_board_user_settingsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_user_settingsInclude<ExtArgs> | null\n    where?: discussion_board_user_settingsWhereInput\n  }\n\n  /**\n   * discussion_board_users.discussion_board_thread\n   */\n  export type discussion_board_users$discussion_board_threadArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread\n     */\n    select?: discussion_board_threadSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread\n     */\n    omit?: discussion_board_threadOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_threadInclude<ExtArgs> | null\n    where?: discussion_board_threadWhereInput\n    orderBy?: discussion_board_threadOrderByWithRelationInput | discussion_board_threadOrderByWithRelationInput[]\n    cursor?: discussion_board_threadWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_threadScalarFieldEnum | Discussion_board_threadScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_users.discussion_board_post\n   */\n  export type discussion_board_users$discussion_board_postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_post\n     */\n    select?: discussion_board_postSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_post\n     */\n    omit?: discussion_board_postOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_postInclude<ExtArgs> | null\n    where?: discussion_board_postWhereInput\n    orderBy?: discussion_board_postOrderByWithRelationInput | discussion_board_postOrderByWithRelationInput[]\n    cursor?: discussion_board_postWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_postScalarFieldEnum | Discussion_board_postScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_users.discussion_board_comment\n   */\n  export type discussion_board_users$discussion_board_commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_comment\n     */\n    select?: discussion_board_commentSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_comment\n     */\n    omit?: discussion_board_commentOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_commentInclude<ExtArgs> | null\n    where?: discussion_board_commentWhereInput\n    orderBy?: discussion_board_commentOrderByWithRelationInput | discussion_board_commentOrderByWithRelationInput[]\n    cursor?: discussion_board_commentWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_commentScalarFieldEnum | Discussion_board_commentScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_users.discussion_board_vote\n   */\n  export type discussion_board_users$discussion_board_voteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_vote\n     */\n    select?: discussion_board_voteSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_vote\n     */\n    omit?: discussion_board_voteOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_voteInclude<ExtArgs> | null\n    where?: discussion_board_voteWhereInput\n    orderBy?: discussion_board_voteOrderByWithRelationInput | discussion_board_voteOrderByWithRelationInput[]\n    cursor?: discussion_board_voteWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_voteScalarFieldEnum | Discussion_board_voteScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_users.discussion_board_reaction\n   */\n  export type discussion_board_users$discussion_board_reactionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_reaction\n     */\n    select?: discussion_board_reactionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_reaction\n     */\n    omit?: discussion_board_reactionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_reactionInclude<ExtArgs> | null\n    where?: discussion_board_reactionWhereInput\n    orderBy?: discussion_board_reactionOrderByWithRelationInput | discussion_board_reactionOrderByWithRelationInput[]\n    cursor?: discussion_board_reactionWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_reactionScalarFieldEnum | Discussion_board_reactionScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_users.discussion_board_bookmark\n   */\n  export type discussion_board_users$discussion_board_bookmarkArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_bookmark\n     */\n    select?: discussion_board_bookmarkSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_bookmark\n     */\n    omit?: discussion_board_bookmarkOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_bookmarkInclude<ExtArgs> | null\n    where?: discussion_board_bookmarkWhereInput\n    orderBy?: discussion_board_bookmarkOrderByWithRelationInput | discussion_board_bookmarkOrderByWithRelationInput[]\n    cursor?: discussion_board_bookmarkWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_bookmarkScalarFieldEnum | Discussion_board_bookmarkScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_users.discussion_board_notification\n   */\n  export type discussion_board_users$discussion_board_notificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_notification\n     */\n    select?: discussion_board_notificationSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_notification\n     */\n    omit?: discussion_board_notificationOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_notificationInclude<ExtArgs> | null\n    where?: discussion_board_notificationWhereInput\n    orderBy?: discussion_board_notificationOrderByWithRelationInput | discussion_board_notificationOrderByWithRelationInput[]\n    cursor?: discussion_board_notificationWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_notificationScalarFieldEnum | Discussion_board_notificationScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_users.discussion_board_subscription\n   */\n  export type discussion_board_users$discussion_board_subscriptionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_subscription\n     */\n    select?: discussion_board_subscriptionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_subscription\n     */\n    omit?: discussion_board_subscriptionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_subscriptionInclude<ExtArgs> | null\n    where?: discussion_board_subscriptionWhereInput\n    orderBy?: discussion_board_subscriptionOrderByWithRelationInput | discussion_board_subscriptionOrderByWithRelationInput[]\n    cursor?: discussion_board_subscriptionWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_subscriptionScalarFieldEnum | Discussion_board_subscriptionScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_users.discussion_board_report_of_reported_user_id\n   */\n  export type discussion_board_users$discussion_board_report_of_reported_user_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_report\n     */\n    select?: discussion_board_reportSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_report\n     */\n    omit?: discussion_board_reportOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_reportInclude<ExtArgs> | null\n    where?: discussion_board_reportWhereInput\n    orderBy?: discussion_board_reportOrderByWithRelationInput | discussion_board_reportOrderByWithRelationInput[]\n    cursor?: discussion_board_reportWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_reportScalarFieldEnum | Discussion_board_reportScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_users.discussion_board_report_of_reporting_user_id\n   */\n  export type discussion_board_users$discussion_board_report_of_reporting_user_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_report\n     */\n    select?: discussion_board_reportSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_report\n     */\n    omit?: discussion_board_reportOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_reportInclude<ExtArgs> | null\n    where?: discussion_board_reportWhereInput\n    orderBy?: discussion_board_reportOrderByWithRelationInput | discussion_board_reportOrderByWithRelationInput[]\n    cursor?: discussion_board_reportWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_reportScalarFieldEnum | Discussion_board_reportScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_users.discussion_board_moderator_action\n   */\n  export type discussion_board_users$discussion_board_moderator_actionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_moderator_action\n     */\n    select?: discussion_board_moderator_actionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_moderator_action\n     */\n    omit?: discussion_board_moderator_actionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_moderator_actionInclude<ExtArgs> | null\n    where?: discussion_board_moderator_actionWhereInput\n    orderBy?: discussion_board_moderator_actionOrderByWithRelationInput | discussion_board_moderator_actionOrderByWithRelationInput[]\n    cursor?: discussion_board_moderator_actionWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_moderator_actionScalarFieldEnum | Discussion_board_moderator_actionScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_users.discussion_board_audit_log_of_actor_id\n   */\n  export type discussion_board_users$discussion_board_audit_log_of_actor_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_audit_log\n     */\n    select?: discussion_board_audit_logSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_audit_log\n     */\n    omit?: discussion_board_audit_logOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_audit_logInclude<ExtArgs> | null\n    where?: discussion_board_audit_logWhereInput\n    orderBy?: discussion_board_audit_logOrderByWithRelationInput | discussion_board_audit_logOrderByWithRelationInput[]\n    cursor?: discussion_board_audit_logWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_audit_logScalarFieldEnum | Discussion_board_audit_logScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_users.discussion_board_audit_log_of_affected_user_id\n   */\n  export type discussion_board_users$discussion_board_audit_log_of_affected_user_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_audit_log\n     */\n    select?: discussion_board_audit_logSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_audit_log\n     */\n    omit?: discussion_board_audit_logOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_audit_logInclude<ExtArgs> | null\n    where?: discussion_board_audit_logWhereInput\n    orderBy?: discussion_board_audit_logOrderByWithRelationInput | discussion_board_audit_logOrderByWithRelationInput[]\n    cursor?: discussion_board_audit_logWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_audit_logScalarFieldEnum | Discussion_board_audit_logScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_users.discussion_board_warning\n   */\n  export type discussion_board_users$discussion_board_warningArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_warning\n     */\n    select?: discussion_board_warningSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_warning\n     */\n    omit?: discussion_board_warningOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_warningInclude<ExtArgs> | null\n    where?: discussion_board_warningWhereInput\n    orderBy?: discussion_board_warningOrderByWithRelationInput | discussion_board_warningOrderByWithRelationInput[]\n    cursor?: discussion_board_warningWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_warningScalarFieldEnum | Discussion_board_warningScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_users.discussion_board_ban\n   */\n  export type discussion_board_users$discussion_board_banArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_ban\n     */\n    select?: discussion_board_banSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_ban\n     */\n    omit?: discussion_board_banOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_banInclude<ExtArgs> | null\n    where?: discussion_board_banWhereInput\n    orderBy?: discussion_board_banOrderByWithRelationInput | discussion_board_banOrderByWithRelationInput[]\n    cursor?: discussion_board_banWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_banScalarFieldEnum | Discussion_board_banScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_users.discussion_board_user_activity\n   */\n  export type discussion_board_users$discussion_board_user_activityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_user_activity\n     */\n    select?: discussion_board_user_activitySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_user_activity\n     */\n    omit?: discussion_board_user_activityOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_user_activityInclude<ExtArgs> | null\n    where?: discussion_board_user_activityWhereInput\n  }\n\n  /**\n   * discussion_board_users without action\n   */\n  export type discussion_board_usersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_users\n     */\n    select?: discussion_board_usersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_users\n     */\n    omit?: discussion_board_usersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_usersInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussion_board_guests\n   */\n\n  export type AggregateDiscussion_board_guests = {\n    _count: Discussion_board_guestsCountAggregateOutputType | null\n    _min: Discussion_board_guestsMinAggregateOutputType | null\n    _max: Discussion_board_guestsMaxAggregateOutputType | null\n  }\n\n  export type Discussion_board_guestsMinAggregateOutputType = {\n    id: string | null\n    session_id: string | null\n    ip_address: string | null\n    user_agent: string | null\n    accessed_at: Date | null\n  }\n\n  export type Discussion_board_guestsMaxAggregateOutputType = {\n    id: string | null\n    session_id: string | null\n    ip_address: string | null\n    user_agent: string | null\n    accessed_at: Date | null\n  }\n\n  export type Discussion_board_guestsCountAggregateOutputType = {\n    id: number\n    session_id: number\n    ip_address: number\n    user_agent: number\n    accessed_at: number\n    _all: number\n  }\n\n\n  export type Discussion_board_guestsMinAggregateInputType = {\n    id?: true\n    session_id?: true\n    ip_address?: true\n    user_agent?: true\n    accessed_at?: true\n  }\n\n  export type Discussion_board_guestsMaxAggregateInputType = {\n    id?: true\n    session_id?: true\n    ip_address?: true\n    user_agent?: true\n    accessed_at?: true\n  }\n\n  export type Discussion_board_guestsCountAggregateInputType = {\n    id?: true\n    session_id?: true\n    ip_address?: true\n    user_agent?: true\n    accessed_at?: true\n    _all?: true\n  }\n\n  export type Discussion_board_guestsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_guests to aggregate.\n     */\n    where?: discussion_board_guestsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_guests to fetch.\n     */\n    orderBy?: discussion_board_guestsOrderByWithRelationInput | discussion_board_guestsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussion_board_guestsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_guests from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_guests.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussion_board_guests\n    **/\n    _count?: true | Discussion_board_guestsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussion_board_guestsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussion_board_guestsMaxAggregateInputType\n  }\n\n  export type GetDiscussion_board_guestsAggregateType<T extends Discussion_board_guestsAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussion_board_guests]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussion_board_guests[P]>\n      : GetScalarType<T[P], AggregateDiscussion_board_guests[P]>\n  }\n\n\n\n\n  export type discussion_board_guestsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_guestsWhereInput\n    orderBy?: discussion_board_guestsOrderByWithAggregationInput | discussion_board_guestsOrderByWithAggregationInput[]\n    by: Discussion_board_guestsScalarFieldEnum[] | Discussion_board_guestsScalarFieldEnum\n    having?: discussion_board_guestsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussion_board_guestsCountAggregateInputType | true\n    _min?: Discussion_board_guestsMinAggregateInputType\n    _max?: Discussion_board_guestsMaxAggregateInputType\n  }\n\n  export type Discussion_board_guestsGroupByOutputType = {\n    id: string\n    session_id: string\n    ip_address: string\n    user_agent: string | null\n    accessed_at: Date\n    _count: Discussion_board_guestsCountAggregateOutputType | null\n    _min: Discussion_board_guestsMinAggregateOutputType | null\n    _max: Discussion_board_guestsMaxAggregateOutputType | null\n  }\n\n  type GetDiscussion_board_guestsGroupByPayload<T extends discussion_board_guestsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussion_board_guestsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussion_board_guestsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussion_board_guestsGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussion_board_guestsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussion_board_guestsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    session_id?: boolean\n    ip_address?: boolean\n    user_agent?: boolean\n    accessed_at?: boolean\n  }, ExtArgs[\"result\"][\"discussion_board_guests\"]>\n\n  export type discussion_board_guestsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    session_id?: boolean\n    ip_address?: boolean\n    user_agent?: boolean\n    accessed_at?: boolean\n  }, ExtArgs[\"result\"][\"discussion_board_guests\"]>\n\n  export type discussion_board_guestsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    session_id?: boolean\n    ip_address?: boolean\n    user_agent?: boolean\n    accessed_at?: boolean\n  }, ExtArgs[\"result\"][\"discussion_board_guests\"]>\n\n  export type discussion_board_guestsSelectScalar = {\n    id?: boolean\n    session_id?: boolean\n    ip_address?: boolean\n    user_agent?: boolean\n    accessed_at?: boolean\n  }\n\n  export type discussion_board_guestsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"session_id\" | \"ip_address\" | \"user_agent\" | \"accessed_at\", ExtArgs[\"result\"][\"discussion_board_guests\"]>\n\n  export type $discussion_board_guestsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussion_board_guests\"\n    objects: {}\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key - Uniquely identifies a guest log record. 1NF and 3NF by strict atomic reference.\n       */\n      id: string\n      /**\n       * Session Identifier - Supports tracking unique anonymous accesses (session cookies or device id). Implements analytics requirements for guest activity. 3NF by atomicity. Example: Counting unique guests per day.\n       */\n      session_id: string\n      /**\n       * IP Address - Logs guest's origin IP for compliance, abuse tracking, and analytics. 3NF compliance; not duplicated elsewhere. Ex: Used in abuse response.\n       */\n      ip_address: string\n      /**\n       * User Agent - Logs browser/device for guest session; optional for additional analytics. Stays atomic and complies with 3NF.\n       */\n      user_agent: string | null\n      /**\n       * Timestamp of Access - Enforces audit requirements; strictly atomic. Usage: Analytics, abuse tracing, auditing guest surges.\n       */\n      accessed_at: Date\n    }, ExtArgs[\"result\"][\"discussion_board_guests\"]>\n    composites: {}\n  }\n\n  type discussion_board_guestsGetPayload<S extends boolean | null | undefined | discussion_board_guestsDefaultArgs> = $Result.GetResult<Prisma.$discussion_board_guestsPayload, S>\n\n  type discussion_board_guestsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussion_board_guestsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussion_board_guestsCountAggregateInputType | true\n    }\n\n  export interface discussion_board_guestsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussion_board_guests'], meta: { name: 'discussion_board_guests' } }\n    /**\n     * Find zero or one Discussion_board_guests that matches the filter.\n     * @param {discussion_board_guestsFindUniqueArgs} args - Arguments to find a Discussion_board_guests\n     * @example\n     * // Get one Discussion_board_guests\n     * const discussion_board_guests = await prisma.discussion_board_guests.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussion_board_guestsFindUniqueArgs>(args: SelectSubset<T, discussion_board_guestsFindUniqueArgs<ExtArgs>>): Prisma__discussion_board_guestsClient<$Result.GetResult<Prisma.$discussion_board_guestsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussion_board_guests that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussion_board_guestsFindUniqueOrThrowArgs} args - Arguments to find a Discussion_board_guests\n     * @example\n     * // Get one Discussion_board_guests\n     * const discussion_board_guests = await prisma.discussion_board_guests.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussion_board_guestsFindUniqueOrThrowArgs>(args: SelectSubset<T, discussion_board_guestsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussion_board_guestsClient<$Result.GetResult<Prisma.$discussion_board_guestsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_guests that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_guestsFindFirstArgs} args - Arguments to find a Discussion_board_guests\n     * @example\n     * // Get one Discussion_board_guests\n     * const discussion_board_guests = await prisma.discussion_board_guests.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussion_board_guestsFindFirstArgs>(args?: SelectSubset<T, discussion_board_guestsFindFirstArgs<ExtArgs>>): Prisma__discussion_board_guestsClient<$Result.GetResult<Prisma.$discussion_board_guestsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_guests that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_guestsFindFirstOrThrowArgs} args - Arguments to find a Discussion_board_guests\n     * @example\n     * // Get one Discussion_board_guests\n     * const discussion_board_guests = await prisma.discussion_board_guests.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussion_board_guestsFindFirstOrThrowArgs>(args?: SelectSubset<T, discussion_board_guestsFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussion_board_guestsClient<$Result.GetResult<Prisma.$discussion_board_guestsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussion_board_guests that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_guestsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussion_board_guests\n     * const discussion_board_guests = await prisma.discussion_board_guests.findMany()\n     * \n     * // Get first 10 Discussion_board_guests\n     * const discussion_board_guests = await prisma.discussion_board_guests.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussion_board_guestsWithIdOnly = await prisma.discussion_board_guests.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussion_board_guestsFindManyArgs>(args?: SelectSubset<T, discussion_board_guestsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_guestsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussion_board_guests.\n     * @param {discussion_board_guestsCreateArgs} args - Arguments to create a Discussion_board_guests.\n     * @example\n     * // Create one Discussion_board_guests\n     * const Discussion_board_guests = await prisma.discussion_board_guests.create({\n     *   data: {\n     *     // ... data to create a Discussion_board_guests\n     *   }\n     * })\n     * \n     */\n    create<T extends discussion_board_guestsCreateArgs>(args: SelectSubset<T, discussion_board_guestsCreateArgs<ExtArgs>>): Prisma__discussion_board_guestsClient<$Result.GetResult<Prisma.$discussion_board_guestsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussion_board_guests.\n     * @param {discussion_board_guestsCreateManyArgs} args - Arguments to create many Discussion_board_guests.\n     * @example\n     * // Create many Discussion_board_guests\n     * const discussion_board_guests = await prisma.discussion_board_guests.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussion_board_guestsCreateManyArgs>(args?: SelectSubset<T, discussion_board_guestsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussion_board_guests and returns the data saved in the database.\n     * @param {discussion_board_guestsCreateManyAndReturnArgs} args - Arguments to create many Discussion_board_guests.\n     * @example\n     * // Create many Discussion_board_guests\n     * const discussion_board_guests = await prisma.discussion_board_guests.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussion_board_guests and only return the `id`\n     * const discussion_board_guestsWithIdOnly = await prisma.discussion_board_guests.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussion_board_guestsCreateManyAndReturnArgs>(args?: SelectSubset<T, discussion_board_guestsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_guestsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussion_board_guests.\n     * @param {discussion_board_guestsDeleteArgs} args - Arguments to delete one Discussion_board_guests.\n     * @example\n     * // Delete one Discussion_board_guests\n     * const Discussion_board_guests = await prisma.discussion_board_guests.delete({\n     *   where: {\n     *     // ... filter to delete one Discussion_board_guests\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussion_board_guestsDeleteArgs>(args: SelectSubset<T, discussion_board_guestsDeleteArgs<ExtArgs>>): Prisma__discussion_board_guestsClient<$Result.GetResult<Prisma.$discussion_board_guestsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussion_board_guests.\n     * @param {discussion_board_guestsUpdateArgs} args - Arguments to update one Discussion_board_guests.\n     * @example\n     * // Update one Discussion_board_guests\n     * const discussion_board_guests = await prisma.discussion_board_guests.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussion_board_guestsUpdateArgs>(args: SelectSubset<T, discussion_board_guestsUpdateArgs<ExtArgs>>): Prisma__discussion_board_guestsClient<$Result.GetResult<Prisma.$discussion_board_guestsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussion_board_guests.\n     * @param {discussion_board_guestsDeleteManyArgs} args - Arguments to filter Discussion_board_guests to delete.\n     * @example\n     * // Delete a few Discussion_board_guests\n     * const { count } = await prisma.discussion_board_guests.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussion_board_guestsDeleteManyArgs>(args?: SelectSubset<T, discussion_board_guestsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_guests.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_guestsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussion_board_guests\n     * const discussion_board_guests = await prisma.discussion_board_guests.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussion_board_guestsUpdateManyArgs>(args: SelectSubset<T, discussion_board_guestsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_guests and returns the data updated in the database.\n     * @param {discussion_board_guestsUpdateManyAndReturnArgs} args - Arguments to update many Discussion_board_guests.\n     * @example\n     * // Update many Discussion_board_guests\n     * const discussion_board_guests = await prisma.discussion_board_guests.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussion_board_guests and only return the `id`\n     * const discussion_board_guestsWithIdOnly = await prisma.discussion_board_guests.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussion_board_guestsUpdateManyAndReturnArgs>(args: SelectSubset<T, discussion_board_guestsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_guestsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussion_board_guests.\n     * @param {discussion_board_guestsUpsertArgs} args - Arguments to update or create a Discussion_board_guests.\n     * @example\n     * // Update or create a Discussion_board_guests\n     * const discussion_board_guests = await prisma.discussion_board_guests.upsert({\n     *   create: {\n     *     // ... data to create a Discussion_board_guests\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussion_board_guests we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussion_board_guestsUpsertArgs>(args: SelectSubset<T, discussion_board_guestsUpsertArgs<ExtArgs>>): Prisma__discussion_board_guestsClient<$Result.GetResult<Prisma.$discussion_board_guestsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussion_board_guests.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_guestsCountArgs} args - Arguments to filter Discussion_board_guests to count.\n     * @example\n     * // Count the number of Discussion_board_guests\n     * const count = await prisma.discussion_board_guests.count({\n     *   where: {\n     *     // ... the filter for the Discussion_board_guests we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussion_board_guestsCountArgs>(\n      args?: Subset<T, discussion_board_guestsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussion_board_guestsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussion_board_guests.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussion_board_guestsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussion_board_guestsAggregateArgs>(args: Subset<T, Discussion_board_guestsAggregateArgs>): Prisma.PrismaPromise<GetDiscussion_board_guestsAggregateType<T>>\n\n    /**\n     * Group by Discussion_board_guests.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_guestsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussion_board_guestsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussion_board_guestsGroupByArgs['orderBy'] }\n        : { orderBy?: discussion_board_guestsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussion_board_guestsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussion_board_guestsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussion_board_guests model\n   */\n  readonly fields: discussion_board_guestsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussion_board_guests.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussion_board_guestsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussion_board_guests model\n   */\n  interface discussion_board_guestsFieldRefs {\n    readonly id: FieldRef<\"discussion_board_guests\", 'String'>\n    readonly session_id: FieldRef<\"discussion_board_guests\", 'String'>\n    readonly ip_address: FieldRef<\"discussion_board_guests\", 'String'>\n    readonly user_agent: FieldRef<\"discussion_board_guests\", 'String'>\n    readonly accessed_at: FieldRef<\"discussion_board_guests\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussion_board_guests findUnique\n   */\n  export type discussion_board_guestsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_guests\n     */\n    select?: discussion_board_guestsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_guests\n     */\n    omit?: discussion_board_guestsOmit<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_guests to fetch.\n     */\n    where: discussion_board_guestsWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_guests findUniqueOrThrow\n   */\n  export type discussion_board_guestsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_guests\n     */\n    select?: discussion_board_guestsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_guests\n     */\n    omit?: discussion_board_guestsOmit<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_guests to fetch.\n     */\n    where: discussion_board_guestsWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_guests findFirst\n   */\n  export type discussion_board_guestsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_guests\n     */\n    select?: discussion_board_guestsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_guests\n     */\n    omit?: discussion_board_guestsOmit<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_guests to fetch.\n     */\n    where?: discussion_board_guestsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_guests to fetch.\n     */\n    orderBy?: discussion_board_guestsOrderByWithRelationInput | discussion_board_guestsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_guests.\n     */\n    cursor?: discussion_board_guestsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_guests from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_guests.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_guests.\n     */\n    distinct?: Discussion_board_guestsScalarFieldEnum | Discussion_board_guestsScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_guests findFirstOrThrow\n   */\n  export type discussion_board_guestsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_guests\n     */\n    select?: discussion_board_guestsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_guests\n     */\n    omit?: discussion_board_guestsOmit<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_guests to fetch.\n     */\n    where?: discussion_board_guestsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_guests to fetch.\n     */\n    orderBy?: discussion_board_guestsOrderByWithRelationInput | discussion_board_guestsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_guests.\n     */\n    cursor?: discussion_board_guestsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_guests from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_guests.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_guests.\n     */\n    distinct?: Discussion_board_guestsScalarFieldEnum | Discussion_board_guestsScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_guests findMany\n   */\n  export type discussion_board_guestsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_guests\n     */\n    select?: discussion_board_guestsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_guests\n     */\n    omit?: discussion_board_guestsOmit<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_guests to fetch.\n     */\n    where?: discussion_board_guestsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_guests to fetch.\n     */\n    orderBy?: discussion_board_guestsOrderByWithRelationInput | discussion_board_guestsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussion_board_guests.\n     */\n    cursor?: discussion_board_guestsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_guests from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_guests.\n     */\n    skip?: number\n    distinct?: Discussion_board_guestsScalarFieldEnum | Discussion_board_guestsScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_guests create\n   */\n  export type discussion_board_guestsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_guests\n     */\n    select?: discussion_board_guestsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_guests\n     */\n    omit?: discussion_board_guestsOmit<ExtArgs> | null\n    /**\n     * The data needed to create a discussion_board_guests.\n     */\n    data: XOR<discussion_board_guestsCreateInput, discussion_board_guestsUncheckedCreateInput>\n  }\n\n  /**\n   * discussion_board_guests createMany\n   */\n  export type discussion_board_guestsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussion_board_guests.\n     */\n    data: discussion_board_guestsCreateManyInput | discussion_board_guestsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussion_board_guests createManyAndReturn\n   */\n  export type discussion_board_guestsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_guests\n     */\n    select?: discussion_board_guestsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_guests\n     */\n    omit?: discussion_board_guestsOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussion_board_guests.\n     */\n    data: discussion_board_guestsCreateManyInput | discussion_board_guestsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussion_board_guests update\n   */\n  export type discussion_board_guestsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_guests\n     */\n    select?: discussion_board_guestsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_guests\n     */\n    omit?: discussion_board_guestsOmit<ExtArgs> | null\n    /**\n     * The data needed to update a discussion_board_guests.\n     */\n    data: XOR<discussion_board_guestsUpdateInput, discussion_board_guestsUncheckedUpdateInput>\n    /**\n     * Choose, which discussion_board_guests to update.\n     */\n    where: discussion_board_guestsWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_guests updateMany\n   */\n  export type discussion_board_guestsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussion_board_guests.\n     */\n    data: XOR<discussion_board_guestsUpdateManyMutationInput, discussion_board_guestsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_guests to update\n     */\n    where?: discussion_board_guestsWhereInput\n    /**\n     * Limit how many discussion_board_guests to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_guests updateManyAndReturn\n   */\n  export type discussion_board_guestsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_guests\n     */\n    select?: discussion_board_guestsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_guests\n     */\n    omit?: discussion_board_guestsOmit<ExtArgs> | null\n    /**\n     * The data used to update discussion_board_guests.\n     */\n    data: XOR<discussion_board_guestsUpdateManyMutationInput, discussion_board_guestsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_guests to update\n     */\n    where?: discussion_board_guestsWhereInput\n    /**\n     * Limit how many discussion_board_guests to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_guests upsert\n   */\n  export type discussion_board_guestsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_guests\n     */\n    select?: discussion_board_guestsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_guests\n     */\n    omit?: discussion_board_guestsOmit<ExtArgs> | null\n    /**\n     * The filter to search for the discussion_board_guests to update in case it exists.\n     */\n    where: discussion_board_guestsWhereUniqueInput\n    /**\n     * In case the discussion_board_guests found by the `where` argument doesn't exist, create a new discussion_board_guests with this data.\n     */\n    create: XOR<discussion_board_guestsCreateInput, discussion_board_guestsUncheckedCreateInput>\n    /**\n     * In case the discussion_board_guests was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussion_board_guestsUpdateInput, discussion_board_guestsUncheckedUpdateInput>\n  }\n\n  /**\n   * discussion_board_guests delete\n   */\n  export type discussion_board_guestsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_guests\n     */\n    select?: discussion_board_guestsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_guests\n     */\n    omit?: discussion_board_guestsOmit<ExtArgs> | null\n    /**\n     * Filter which discussion_board_guests to delete.\n     */\n    where: discussion_board_guestsWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_guests deleteMany\n   */\n  export type discussion_board_guestsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_guests to delete\n     */\n    where?: discussion_board_guestsWhereInput\n    /**\n     * Limit how many discussion_board_guests to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_guests without action\n   */\n  export type discussion_board_guestsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_guests\n     */\n    select?: discussion_board_guestsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_guests\n     */\n    omit?: discussion_board_guestsOmit<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussion_board_moderators\n   */\n\n  export type AggregateDiscussion_board_moderators = {\n    _count: Discussion_board_moderatorsCountAggregateOutputType | null\n    _min: Discussion_board_moderatorsMinAggregateOutputType | null\n    _max: Discussion_board_moderatorsMaxAggregateOutputType | null\n  }\n\n  export type Discussion_board_moderatorsMinAggregateOutputType = {\n    id: string | null\n    user_id: string | null\n    is_active: boolean | null\n    assigned_at: Date | null\n    revoked_at: Date | null\n  }\n\n  export type Discussion_board_moderatorsMaxAggregateOutputType = {\n    id: string | null\n    user_id: string | null\n    is_active: boolean | null\n    assigned_at: Date | null\n    revoked_at: Date | null\n  }\n\n  export type Discussion_board_moderatorsCountAggregateOutputType = {\n    id: number\n    user_id: number\n    is_active: number\n    assigned_at: number\n    revoked_at: number\n    _all: number\n  }\n\n\n  export type Discussion_board_moderatorsMinAggregateInputType = {\n    id?: true\n    user_id?: true\n    is_active?: true\n    assigned_at?: true\n    revoked_at?: true\n  }\n\n  export type Discussion_board_moderatorsMaxAggregateInputType = {\n    id?: true\n    user_id?: true\n    is_active?: true\n    assigned_at?: true\n    revoked_at?: true\n  }\n\n  export type Discussion_board_moderatorsCountAggregateInputType = {\n    id?: true\n    user_id?: true\n    is_active?: true\n    assigned_at?: true\n    revoked_at?: true\n    _all?: true\n  }\n\n  export type Discussion_board_moderatorsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_moderators to aggregate.\n     */\n    where?: discussion_board_moderatorsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_moderators to fetch.\n     */\n    orderBy?: discussion_board_moderatorsOrderByWithRelationInput | discussion_board_moderatorsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussion_board_moderatorsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_moderators from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_moderators.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussion_board_moderators\n    **/\n    _count?: true | Discussion_board_moderatorsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussion_board_moderatorsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussion_board_moderatorsMaxAggregateInputType\n  }\n\n  export type GetDiscussion_board_moderatorsAggregateType<T extends Discussion_board_moderatorsAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussion_board_moderators]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussion_board_moderators[P]>\n      : GetScalarType<T[P], AggregateDiscussion_board_moderators[P]>\n  }\n\n\n\n\n  export type discussion_board_moderatorsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_moderatorsWhereInput\n    orderBy?: discussion_board_moderatorsOrderByWithAggregationInput | discussion_board_moderatorsOrderByWithAggregationInput[]\n    by: Discussion_board_moderatorsScalarFieldEnum[] | Discussion_board_moderatorsScalarFieldEnum\n    having?: discussion_board_moderatorsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussion_board_moderatorsCountAggregateInputType | true\n    _min?: Discussion_board_moderatorsMinAggregateInputType\n    _max?: Discussion_board_moderatorsMaxAggregateInputType\n  }\n\n  export type Discussion_board_moderatorsGroupByOutputType = {\n    id: string\n    user_id: string\n    is_active: boolean\n    assigned_at: Date\n    revoked_at: Date | null\n    _count: Discussion_board_moderatorsCountAggregateOutputType | null\n    _min: Discussion_board_moderatorsMinAggregateOutputType | null\n    _max: Discussion_board_moderatorsMaxAggregateOutputType | null\n  }\n\n  type GetDiscussion_board_moderatorsGroupByPayload<T extends discussion_board_moderatorsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussion_board_moderatorsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussion_board_moderatorsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussion_board_moderatorsGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussion_board_moderatorsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussion_board_moderatorsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    is_active?: boolean\n    assigned_at?: boolean\n    revoked_at?: boolean\n    fk_discussion_board_moderators_user_id_discussion_board_users_id?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    discussion_board_moderator_action?: boolean | discussion_board_moderators$discussion_board_moderator_actionArgs<ExtArgs>\n    discussion_board_warning?: boolean | discussion_board_moderators$discussion_board_warningArgs<ExtArgs>\n    discussion_board_ban?: boolean | discussion_board_moderators$discussion_board_banArgs<ExtArgs>\n    discussion_board_content_abuse_metric?: boolean | discussion_board_moderators$discussion_board_content_abuse_metricArgs<ExtArgs>\n    _count?: boolean | Discussion_board_moderatorsCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_moderators\"]>\n\n  export type discussion_board_moderatorsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    is_active?: boolean\n    assigned_at?: boolean\n    revoked_at?: boolean\n    fk_discussion_board_moderators_user_id_discussion_board_users_id?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_moderators\"]>\n\n  export type discussion_board_moderatorsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    is_active?: boolean\n    assigned_at?: boolean\n    revoked_at?: boolean\n    fk_discussion_board_moderators_user_id_discussion_board_users_id?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_moderators\"]>\n\n  export type discussion_board_moderatorsSelectScalar = {\n    id?: boolean\n    user_id?: boolean\n    is_active?: boolean\n    assigned_at?: boolean\n    revoked_at?: boolean\n  }\n\n  export type discussion_board_moderatorsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"user_id\" | \"is_active\" | \"assigned_at\" | \"revoked_at\", ExtArgs[\"result\"][\"discussion_board_moderators\"]>\n  export type discussion_board_moderatorsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_discussion_board_moderators_user_id_discussion_board_users_id?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    discussion_board_moderator_action?: boolean | discussion_board_moderators$discussion_board_moderator_actionArgs<ExtArgs>\n    discussion_board_warning?: boolean | discussion_board_moderators$discussion_board_warningArgs<ExtArgs>\n    discussion_board_ban?: boolean | discussion_board_moderators$discussion_board_banArgs<ExtArgs>\n    discussion_board_content_abuse_metric?: boolean | discussion_board_moderators$discussion_board_content_abuse_metricArgs<ExtArgs>\n    _count?: boolean | Discussion_board_moderatorsCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type discussion_board_moderatorsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_discussion_board_moderators_user_id_discussion_board_users_id?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n  }\n  export type discussion_board_moderatorsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_discussion_board_moderators_user_id_discussion_board_users_id?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n  }\n\n  export type $discussion_board_moderatorsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussion_board_moderators\"\n    objects: {\n      fk_discussion_board_moderators_user_id_discussion_board_users_id: Prisma.$discussion_board_usersPayload<ExtArgs>\n      discussion_board_moderator_action: Prisma.$discussion_board_moderator_actionPayload<ExtArgs>[]\n      discussion_board_warning: Prisma.$discussion_board_warningPayload<ExtArgs>[]\n      discussion_board_ban: Prisma.$discussion_board_banPayload<ExtArgs>[]\n      discussion_board_content_abuse_metric: Prisma.$discussion_board_content_abuse_metricPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key - Unique per moderator assignment record; strictly atomic and 3NF.\n       */\n      id: string\n      /**\n       * Foreign Key to User - Indicates which user is/was assigned as a moderator. Enforces role membership as normalized, not duplicated data. Enforced 1:N relationship: one user can have zero or one moderator assignments.\n       */\n      user_id: string\n      /**\n       * Moderator Active Flag - Indicates whether the user currently holds moderator privileges. Implements requirement for role suspension, auditing role status history. Maintains normalization by not storing redundant role data elsewhere.\n       */\n      is_active: boolean\n      /**\n       * Timestamp of Role Assignment - Tracks when user was assigned moderator role. 3NF: pure atomic audit value.\n       */\n      assigned_at: Date\n      /**\n       * Timestamp of Role Revocation - Implements tracking for demoted/expired moderator roles, for compliance, audit, and operational review. Nullable, stays 3NF.\n       */\n      revoked_at: Date | null\n    }, ExtArgs[\"result\"][\"discussion_board_moderators\"]>\n    composites: {}\n  }\n\n  type discussion_board_moderatorsGetPayload<S extends boolean | null | undefined | discussion_board_moderatorsDefaultArgs> = $Result.GetResult<Prisma.$discussion_board_moderatorsPayload, S>\n\n  type discussion_board_moderatorsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussion_board_moderatorsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussion_board_moderatorsCountAggregateInputType | true\n    }\n\n  export interface discussion_board_moderatorsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussion_board_moderators'], meta: { name: 'discussion_board_moderators' } }\n    /**\n     * Find zero or one Discussion_board_moderators that matches the filter.\n     * @param {discussion_board_moderatorsFindUniqueArgs} args - Arguments to find a Discussion_board_moderators\n     * @example\n     * // Get one Discussion_board_moderators\n     * const discussion_board_moderators = await prisma.discussion_board_moderators.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussion_board_moderatorsFindUniqueArgs>(args: SelectSubset<T, discussion_board_moderatorsFindUniqueArgs<ExtArgs>>): Prisma__discussion_board_moderatorsClient<$Result.GetResult<Prisma.$discussion_board_moderatorsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussion_board_moderators that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussion_board_moderatorsFindUniqueOrThrowArgs} args - Arguments to find a Discussion_board_moderators\n     * @example\n     * // Get one Discussion_board_moderators\n     * const discussion_board_moderators = await prisma.discussion_board_moderators.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussion_board_moderatorsFindUniqueOrThrowArgs>(args: SelectSubset<T, discussion_board_moderatorsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussion_board_moderatorsClient<$Result.GetResult<Prisma.$discussion_board_moderatorsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_moderators that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_moderatorsFindFirstArgs} args - Arguments to find a Discussion_board_moderators\n     * @example\n     * // Get one Discussion_board_moderators\n     * const discussion_board_moderators = await prisma.discussion_board_moderators.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussion_board_moderatorsFindFirstArgs>(args?: SelectSubset<T, discussion_board_moderatorsFindFirstArgs<ExtArgs>>): Prisma__discussion_board_moderatorsClient<$Result.GetResult<Prisma.$discussion_board_moderatorsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_moderators that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_moderatorsFindFirstOrThrowArgs} args - Arguments to find a Discussion_board_moderators\n     * @example\n     * // Get one Discussion_board_moderators\n     * const discussion_board_moderators = await prisma.discussion_board_moderators.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussion_board_moderatorsFindFirstOrThrowArgs>(args?: SelectSubset<T, discussion_board_moderatorsFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussion_board_moderatorsClient<$Result.GetResult<Prisma.$discussion_board_moderatorsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussion_board_moderators that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_moderatorsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussion_board_moderators\n     * const discussion_board_moderators = await prisma.discussion_board_moderators.findMany()\n     * \n     * // Get first 10 Discussion_board_moderators\n     * const discussion_board_moderators = await prisma.discussion_board_moderators.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussion_board_moderatorsWithIdOnly = await prisma.discussion_board_moderators.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussion_board_moderatorsFindManyArgs>(args?: SelectSubset<T, discussion_board_moderatorsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_moderatorsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussion_board_moderators.\n     * @param {discussion_board_moderatorsCreateArgs} args - Arguments to create a Discussion_board_moderators.\n     * @example\n     * // Create one Discussion_board_moderators\n     * const Discussion_board_moderators = await prisma.discussion_board_moderators.create({\n     *   data: {\n     *     // ... data to create a Discussion_board_moderators\n     *   }\n     * })\n     * \n     */\n    create<T extends discussion_board_moderatorsCreateArgs>(args: SelectSubset<T, discussion_board_moderatorsCreateArgs<ExtArgs>>): Prisma__discussion_board_moderatorsClient<$Result.GetResult<Prisma.$discussion_board_moderatorsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussion_board_moderators.\n     * @param {discussion_board_moderatorsCreateManyArgs} args - Arguments to create many Discussion_board_moderators.\n     * @example\n     * // Create many Discussion_board_moderators\n     * const discussion_board_moderators = await prisma.discussion_board_moderators.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussion_board_moderatorsCreateManyArgs>(args?: SelectSubset<T, discussion_board_moderatorsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussion_board_moderators and returns the data saved in the database.\n     * @param {discussion_board_moderatorsCreateManyAndReturnArgs} args - Arguments to create many Discussion_board_moderators.\n     * @example\n     * // Create many Discussion_board_moderators\n     * const discussion_board_moderators = await prisma.discussion_board_moderators.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussion_board_moderators and only return the `id`\n     * const discussion_board_moderatorsWithIdOnly = await prisma.discussion_board_moderators.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussion_board_moderatorsCreateManyAndReturnArgs>(args?: SelectSubset<T, discussion_board_moderatorsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_moderatorsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussion_board_moderators.\n     * @param {discussion_board_moderatorsDeleteArgs} args - Arguments to delete one Discussion_board_moderators.\n     * @example\n     * // Delete one Discussion_board_moderators\n     * const Discussion_board_moderators = await prisma.discussion_board_moderators.delete({\n     *   where: {\n     *     // ... filter to delete one Discussion_board_moderators\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussion_board_moderatorsDeleteArgs>(args: SelectSubset<T, discussion_board_moderatorsDeleteArgs<ExtArgs>>): Prisma__discussion_board_moderatorsClient<$Result.GetResult<Prisma.$discussion_board_moderatorsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussion_board_moderators.\n     * @param {discussion_board_moderatorsUpdateArgs} args - Arguments to update one Discussion_board_moderators.\n     * @example\n     * // Update one Discussion_board_moderators\n     * const discussion_board_moderators = await prisma.discussion_board_moderators.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussion_board_moderatorsUpdateArgs>(args: SelectSubset<T, discussion_board_moderatorsUpdateArgs<ExtArgs>>): Prisma__discussion_board_moderatorsClient<$Result.GetResult<Prisma.$discussion_board_moderatorsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussion_board_moderators.\n     * @param {discussion_board_moderatorsDeleteManyArgs} args - Arguments to filter Discussion_board_moderators to delete.\n     * @example\n     * // Delete a few Discussion_board_moderators\n     * const { count } = await prisma.discussion_board_moderators.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussion_board_moderatorsDeleteManyArgs>(args?: SelectSubset<T, discussion_board_moderatorsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_moderators.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_moderatorsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussion_board_moderators\n     * const discussion_board_moderators = await prisma.discussion_board_moderators.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussion_board_moderatorsUpdateManyArgs>(args: SelectSubset<T, discussion_board_moderatorsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_moderators and returns the data updated in the database.\n     * @param {discussion_board_moderatorsUpdateManyAndReturnArgs} args - Arguments to update many Discussion_board_moderators.\n     * @example\n     * // Update many Discussion_board_moderators\n     * const discussion_board_moderators = await prisma.discussion_board_moderators.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussion_board_moderators and only return the `id`\n     * const discussion_board_moderatorsWithIdOnly = await prisma.discussion_board_moderators.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussion_board_moderatorsUpdateManyAndReturnArgs>(args: SelectSubset<T, discussion_board_moderatorsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_moderatorsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussion_board_moderators.\n     * @param {discussion_board_moderatorsUpsertArgs} args - Arguments to update or create a Discussion_board_moderators.\n     * @example\n     * // Update or create a Discussion_board_moderators\n     * const discussion_board_moderators = await prisma.discussion_board_moderators.upsert({\n     *   create: {\n     *     // ... data to create a Discussion_board_moderators\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussion_board_moderators we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussion_board_moderatorsUpsertArgs>(args: SelectSubset<T, discussion_board_moderatorsUpsertArgs<ExtArgs>>): Prisma__discussion_board_moderatorsClient<$Result.GetResult<Prisma.$discussion_board_moderatorsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussion_board_moderators.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_moderatorsCountArgs} args - Arguments to filter Discussion_board_moderators to count.\n     * @example\n     * // Count the number of Discussion_board_moderators\n     * const count = await prisma.discussion_board_moderators.count({\n     *   where: {\n     *     // ... the filter for the Discussion_board_moderators we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussion_board_moderatorsCountArgs>(\n      args?: Subset<T, discussion_board_moderatorsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussion_board_moderatorsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussion_board_moderators.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussion_board_moderatorsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussion_board_moderatorsAggregateArgs>(args: Subset<T, Discussion_board_moderatorsAggregateArgs>): Prisma.PrismaPromise<GetDiscussion_board_moderatorsAggregateType<T>>\n\n    /**\n     * Group by Discussion_board_moderators.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_moderatorsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussion_board_moderatorsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussion_board_moderatorsGroupByArgs['orderBy'] }\n        : { orderBy?: discussion_board_moderatorsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussion_board_moderatorsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussion_board_moderatorsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussion_board_moderators model\n   */\n  readonly fields: discussion_board_moderatorsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussion_board_moderators.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussion_board_moderatorsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    fk_discussion_board_moderators_user_id_discussion_board_users_id<T extends discussion_board_usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_usersDefaultArgs<ExtArgs>>): Prisma__discussion_board_usersClient<$Result.GetResult<Prisma.$discussion_board_usersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    discussion_board_moderator_action<T extends discussion_board_moderators$discussion_board_moderator_actionArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_moderators$discussion_board_moderator_actionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_moderator_actionPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_warning<T extends discussion_board_moderators$discussion_board_warningArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_moderators$discussion_board_warningArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_warningPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_ban<T extends discussion_board_moderators$discussion_board_banArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_moderators$discussion_board_banArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_banPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_content_abuse_metric<T extends discussion_board_moderators$discussion_board_content_abuse_metricArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_moderators$discussion_board_content_abuse_metricArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_content_abuse_metricPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussion_board_moderators model\n   */\n  interface discussion_board_moderatorsFieldRefs {\n    readonly id: FieldRef<\"discussion_board_moderators\", 'String'>\n    readonly user_id: FieldRef<\"discussion_board_moderators\", 'String'>\n    readonly is_active: FieldRef<\"discussion_board_moderators\", 'Boolean'>\n    readonly assigned_at: FieldRef<\"discussion_board_moderators\", 'DateTime'>\n    readonly revoked_at: FieldRef<\"discussion_board_moderators\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussion_board_moderators findUnique\n   */\n  export type discussion_board_moderatorsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_moderators\n     */\n    select?: discussion_board_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_moderators\n     */\n    omit?: discussion_board_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_moderatorsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_moderators to fetch.\n     */\n    where: discussion_board_moderatorsWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_moderators findUniqueOrThrow\n   */\n  export type discussion_board_moderatorsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_moderators\n     */\n    select?: discussion_board_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_moderators\n     */\n    omit?: discussion_board_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_moderatorsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_moderators to fetch.\n     */\n    where: discussion_board_moderatorsWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_moderators findFirst\n   */\n  export type discussion_board_moderatorsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_moderators\n     */\n    select?: discussion_board_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_moderators\n     */\n    omit?: discussion_board_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_moderatorsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_moderators to fetch.\n     */\n    where?: discussion_board_moderatorsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_moderators to fetch.\n     */\n    orderBy?: discussion_board_moderatorsOrderByWithRelationInput | discussion_board_moderatorsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_moderators.\n     */\n    cursor?: discussion_board_moderatorsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_moderators from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_moderators.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_moderators.\n     */\n    distinct?: Discussion_board_moderatorsScalarFieldEnum | Discussion_board_moderatorsScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_moderators findFirstOrThrow\n   */\n  export type discussion_board_moderatorsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_moderators\n     */\n    select?: discussion_board_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_moderators\n     */\n    omit?: discussion_board_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_moderatorsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_moderators to fetch.\n     */\n    where?: discussion_board_moderatorsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_moderators to fetch.\n     */\n    orderBy?: discussion_board_moderatorsOrderByWithRelationInput | discussion_board_moderatorsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_moderators.\n     */\n    cursor?: discussion_board_moderatorsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_moderators from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_moderators.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_moderators.\n     */\n    distinct?: Discussion_board_moderatorsScalarFieldEnum | Discussion_board_moderatorsScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_moderators findMany\n   */\n  export type discussion_board_moderatorsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_moderators\n     */\n    select?: discussion_board_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_moderators\n     */\n    omit?: discussion_board_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_moderatorsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_moderators to fetch.\n     */\n    where?: discussion_board_moderatorsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_moderators to fetch.\n     */\n    orderBy?: discussion_board_moderatorsOrderByWithRelationInput | discussion_board_moderatorsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussion_board_moderators.\n     */\n    cursor?: discussion_board_moderatorsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_moderators from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_moderators.\n     */\n    skip?: number\n    distinct?: Discussion_board_moderatorsScalarFieldEnum | Discussion_board_moderatorsScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_moderators create\n   */\n  export type discussion_board_moderatorsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_moderators\n     */\n    select?: discussion_board_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_moderators\n     */\n    omit?: discussion_board_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_moderatorsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussion_board_moderators.\n     */\n    data: XOR<discussion_board_moderatorsCreateInput, discussion_board_moderatorsUncheckedCreateInput>\n  }\n\n  /**\n   * discussion_board_moderators createMany\n   */\n  export type discussion_board_moderatorsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussion_board_moderators.\n     */\n    data: discussion_board_moderatorsCreateManyInput | discussion_board_moderatorsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussion_board_moderators createManyAndReturn\n   */\n  export type discussion_board_moderatorsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_moderators\n     */\n    select?: discussion_board_moderatorsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_moderators\n     */\n    omit?: discussion_board_moderatorsOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussion_board_moderators.\n     */\n    data: discussion_board_moderatorsCreateManyInput | discussion_board_moderatorsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_moderatorsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_moderators update\n   */\n  export type discussion_board_moderatorsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_moderators\n     */\n    select?: discussion_board_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_moderators\n     */\n    omit?: discussion_board_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_moderatorsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussion_board_moderators.\n     */\n    data: XOR<discussion_board_moderatorsUpdateInput, discussion_board_moderatorsUncheckedUpdateInput>\n    /**\n     * Choose, which discussion_board_moderators to update.\n     */\n    where: discussion_board_moderatorsWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_moderators updateMany\n   */\n  export type discussion_board_moderatorsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussion_board_moderators.\n     */\n    data: XOR<discussion_board_moderatorsUpdateManyMutationInput, discussion_board_moderatorsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_moderators to update\n     */\n    where?: discussion_board_moderatorsWhereInput\n    /**\n     * Limit how many discussion_board_moderators to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_moderators updateManyAndReturn\n   */\n  export type discussion_board_moderatorsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_moderators\n     */\n    select?: discussion_board_moderatorsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_moderators\n     */\n    omit?: discussion_board_moderatorsOmit<ExtArgs> | null\n    /**\n     * The data used to update discussion_board_moderators.\n     */\n    data: XOR<discussion_board_moderatorsUpdateManyMutationInput, discussion_board_moderatorsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_moderators to update\n     */\n    where?: discussion_board_moderatorsWhereInput\n    /**\n     * Limit how many discussion_board_moderators to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_moderatorsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_moderators upsert\n   */\n  export type discussion_board_moderatorsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_moderators\n     */\n    select?: discussion_board_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_moderators\n     */\n    omit?: discussion_board_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_moderatorsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussion_board_moderators to update in case it exists.\n     */\n    where: discussion_board_moderatorsWhereUniqueInput\n    /**\n     * In case the discussion_board_moderators found by the `where` argument doesn't exist, create a new discussion_board_moderators with this data.\n     */\n    create: XOR<discussion_board_moderatorsCreateInput, discussion_board_moderatorsUncheckedCreateInput>\n    /**\n     * In case the discussion_board_moderators was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussion_board_moderatorsUpdateInput, discussion_board_moderatorsUncheckedUpdateInput>\n  }\n\n  /**\n   * discussion_board_moderators delete\n   */\n  export type discussion_board_moderatorsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_moderators\n     */\n    select?: discussion_board_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_moderators\n     */\n    omit?: discussion_board_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_moderatorsInclude<ExtArgs> | null\n    /**\n     * Filter which discussion_board_moderators to delete.\n     */\n    where: discussion_board_moderatorsWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_moderators deleteMany\n   */\n  export type discussion_board_moderatorsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_moderators to delete\n     */\n    where?: discussion_board_moderatorsWhereInput\n    /**\n     * Limit how many discussion_board_moderators to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_moderators.discussion_board_moderator_action\n   */\n  export type discussion_board_moderators$discussion_board_moderator_actionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_moderator_action\n     */\n    select?: discussion_board_moderator_actionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_moderator_action\n     */\n    omit?: discussion_board_moderator_actionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_moderator_actionInclude<ExtArgs> | null\n    where?: discussion_board_moderator_actionWhereInput\n    orderBy?: discussion_board_moderator_actionOrderByWithRelationInput | discussion_board_moderator_actionOrderByWithRelationInput[]\n    cursor?: discussion_board_moderator_actionWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_moderator_actionScalarFieldEnum | Discussion_board_moderator_actionScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_moderators.discussion_board_warning\n   */\n  export type discussion_board_moderators$discussion_board_warningArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_warning\n     */\n    select?: discussion_board_warningSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_warning\n     */\n    omit?: discussion_board_warningOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_warningInclude<ExtArgs> | null\n    where?: discussion_board_warningWhereInput\n    orderBy?: discussion_board_warningOrderByWithRelationInput | discussion_board_warningOrderByWithRelationInput[]\n    cursor?: discussion_board_warningWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_warningScalarFieldEnum | Discussion_board_warningScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_moderators.discussion_board_ban\n   */\n  export type discussion_board_moderators$discussion_board_banArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_ban\n     */\n    select?: discussion_board_banSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_ban\n     */\n    omit?: discussion_board_banOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_banInclude<ExtArgs> | null\n    where?: discussion_board_banWhereInput\n    orderBy?: discussion_board_banOrderByWithRelationInput | discussion_board_banOrderByWithRelationInput[]\n    cursor?: discussion_board_banWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_banScalarFieldEnum | Discussion_board_banScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_moderators.discussion_board_content_abuse_metric\n   */\n  export type discussion_board_moderators$discussion_board_content_abuse_metricArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_content_abuse_metric\n     */\n    select?: discussion_board_content_abuse_metricSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_content_abuse_metric\n     */\n    omit?: discussion_board_content_abuse_metricOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_content_abuse_metricInclude<ExtArgs> | null\n    where?: discussion_board_content_abuse_metricWhereInput\n    orderBy?: discussion_board_content_abuse_metricOrderByWithRelationInput | discussion_board_content_abuse_metricOrderByWithRelationInput[]\n    cursor?: discussion_board_content_abuse_metricWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_content_abuse_metricScalarFieldEnum | Discussion_board_content_abuse_metricScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_moderators without action\n   */\n  export type discussion_board_moderatorsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_moderators\n     */\n    select?: discussion_board_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_moderators\n     */\n    omit?: discussion_board_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_moderatorsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussion_board_admins\n   */\n\n  export type AggregateDiscussion_board_admins = {\n    _count: Discussion_board_adminsCountAggregateOutputType | null\n    _min: Discussion_board_adminsMinAggregateOutputType | null\n    _max: Discussion_board_adminsMaxAggregateOutputType | null\n  }\n\n  export type Discussion_board_adminsMinAggregateOutputType = {\n    id: string | null\n    user_id: string | null\n    is_active: boolean | null\n    assigned_at: Date | null\n    revoked_at: Date | null\n  }\n\n  export type Discussion_board_adminsMaxAggregateOutputType = {\n    id: string | null\n    user_id: string | null\n    is_active: boolean | null\n    assigned_at: Date | null\n    revoked_at: Date | null\n  }\n\n  export type Discussion_board_adminsCountAggregateOutputType = {\n    id: number\n    user_id: number\n    is_active: number\n    assigned_at: number\n    revoked_at: number\n    _all: number\n  }\n\n\n  export type Discussion_board_adminsMinAggregateInputType = {\n    id?: true\n    user_id?: true\n    is_active?: true\n    assigned_at?: true\n    revoked_at?: true\n  }\n\n  export type Discussion_board_adminsMaxAggregateInputType = {\n    id?: true\n    user_id?: true\n    is_active?: true\n    assigned_at?: true\n    revoked_at?: true\n  }\n\n  export type Discussion_board_adminsCountAggregateInputType = {\n    id?: true\n    user_id?: true\n    is_active?: true\n    assigned_at?: true\n    revoked_at?: true\n    _all?: true\n  }\n\n  export type Discussion_board_adminsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_admins to aggregate.\n     */\n    where?: discussion_board_adminsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_admins to fetch.\n     */\n    orderBy?: discussion_board_adminsOrderByWithRelationInput | discussion_board_adminsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussion_board_adminsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_admins from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_admins.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussion_board_admins\n    **/\n    _count?: true | Discussion_board_adminsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussion_board_adminsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussion_board_adminsMaxAggregateInputType\n  }\n\n  export type GetDiscussion_board_adminsAggregateType<T extends Discussion_board_adminsAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussion_board_admins]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussion_board_admins[P]>\n      : GetScalarType<T[P], AggregateDiscussion_board_admins[P]>\n  }\n\n\n\n\n  export type discussion_board_adminsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_adminsWhereInput\n    orderBy?: discussion_board_adminsOrderByWithAggregationInput | discussion_board_adminsOrderByWithAggregationInput[]\n    by: Discussion_board_adminsScalarFieldEnum[] | Discussion_board_adminsScalarFieldEnum\n    having?: discussion_board_adminsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussion_board_adminsCountAggregateInputType | true\n    _min?: Discussion_board_adminsMinAggregateInputType\n    _max?: Discussion_board_adminsMaxAggregateInputType\n  }\n\n  export type Discussion_board_adminsGroupByOutputType = {\n    id: string\n    user_id: string\n    is_active: boolean\n    assigned_at: Date\n    revoked_at: Date | null\n    _count: Discussion_board_adminsCountAggregateOutputType | null\n    _min: Discussion_board_adminsMinAggregateOutputType | null\n    _max: Discussion_board_adminsMaxAggregateOutputType | null\n  }\n\n  type GetDiscussion_board_adminsGroupByPayload<T extends discussion_board_adminsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussion_board_adminsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussion_board_adminsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussion_board_adminsGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussion_board_adminsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussion_board_adminsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    is_active?: boolean\n    assigned_at?: boolean\n    revoked_at?: boolean\n    fk_discussion_board_admins_user_id_discussion_board_users_id?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_admins\"]>\n\n  export type discussion_board_adminsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    is_active?: boolean\n    assigned_at?: boolean\n    revoked_at?: boolean\n    fk_discussion_board_admins_user_id_discussion_board_users_id?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_admins\"]>\n\n  export type discussion_board_adminsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    is_active?: boolean\n    assigned_at?: boolean\n    revoked_at?: boolean\n    fk_discussion_board_admins_user_id_discussion_board_users_id?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_admins\"]>\n\n  export type discussion_board_adminsSelectScalar = {\n    id?: boolean\n    user_id?: boolean\n    is_active?: boolean\n    assigned_at?: boolean\n    revoked_at?: boolean\n  }\n\n  export type discussion_board_adminsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"user_id\" | \"is_active\" | \"assigned_at\" | \"revoked_at\", ExtArgs[\"result\"][\"discussion_board_admins\"]>\n  export type discussion_board_adminsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_discussion_board_admins_user_id_discussion_board_users_id?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n  }\n  export type discussion_board_adminsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_discussion_board_admins_user_id_discussion_board_users_id?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n  }\n  export type discussion_board_adminsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_discussion_board_admins_user_id_discussion_board_users_id?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n  }\n\n  export type $discussion_board_adminsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussion_board_admins\"\n    objects: {\n      fk_discussion_board_admins_user_id_discussion_board_users_id: Prisma.$discussion_board_usersPayload<ExtArgs>\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key - Unique per admin record, ensures atomic audit trail of admin privilege granting/revoking.\n       */\n      id: string\n      /**\n       * User Foreign Key - The user granted admin privileges. Maintains normalization: admin status never duplicated in other tables.\n       */\n      user_id: string\n      /**\n       * Admin Status Flag - States whether admin privileges currently apply. Implements requirement for manageability and operational security controls.\n       */\n      is_active: boolean\n      /**\n       * Grant Timestamp - When privileges were activated. Maintains 3NF: atomic, unambiguous role tracking.\n       */\n      assigned_at: Date\n      /**\n       * Revoked Timestamp - Supports audit/review of former admins, and system security compliance. Nullable, no denormalized roll-ups.\n       */\n      revoked_at: Date | null\n    }, ExtArgs[\"result\"][\"discussion_board_admins\"]>\n    composites: {}\n  }\n\n  type discussion_board_adminsGetPayload<S extends boolean | null | undefined | discussion_board_adminsDefaultArgs> = $Result.GetResult<Prisma.$discussion_board_adminsPayload, S>\n\n  type discussion_board_adminsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussion_board_adminsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussion_board_adminsCountAggregateInputType | true\n    }\n\n  export interface discussion_board_adminsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussion_board_admins'], meta: { name: 'discussion_board_admins' } }\n    /**\n     * Find zero or one Discussion_board_admins that matches the filter.\n     * @param {discussion_board_adminsFindUniqueArgs} args - Arguments to find a Discussion_board_admins\n     * @example\n     * // Get one Discussion_board_admins\n     * const discussion_board_admins = await prisma.discussion_board_admins.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussion_board_adminsFindUniqueArgs>(args: SelectSubset<T, discussion_board_adminsFindUniqueArgs<ExtArgs>>): Prisma__discussion_board_adminsClient<$Result.GetResult<Prisma.$discussion_board_adminsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussion_board_admins that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussion_board_adminsFindUniqueOrThrowArgs} args - Arguments to find a Discussion_board_admins\n     * @example\n     * // Get one Discussion_board_admins\n     * const discussion_board_admins = await prisma.discussion_board_admins.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussion_board_adminsFindUniqueOrThrowArgs>(args: SelectSubset<T, discussion_board_adminsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussion_board_adminsClient<$Result.GetResult<Prisma.$discussion_board_adminsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_admins that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_adminsFindFirstArgs} args - Arguments to find a Discussion_board_admins\n     * @example\n     * // Get one Discussion_board_admins\n     * const discussion_board_admins = await prisma.discussion_board_admins.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussion_board_adminsFindFirstArgs>(args?: SelectSubset<T, discussion_board_adminsFindFirstArgs<ExtArgs>>): Prisma__discussion_board_adminsClient<$Result.GetResult<Prisma.$discussion_board_adminsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_admins that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_adminsFindFirstOrThrowArgs} args - Arguments to find a Discussion_board_admins\n     * @example\n     * // Get one Discussion_board_admins\n     * const discussion_board_admins = await prisma.discussion_board_admins.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussion_board_adminsFindFirstOrThrowArgs>(args?: SelectSubset<T, discussion_board_adminsFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussion_board_adminsClient<$Result.GetResult<Prisma.$discussion_board_adminsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussion_board_admins that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_adminsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussion_board_admins\n     * const discussion_board_admins = await prisma.discussion_board_admins.findMany()\n     * \n     * // Get first 10 Discussion_board_admins\n     * const discussion_board_admins = await prisma.discussion_board_admins.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussion_board_adminsWithIdOnly = await prisma.discussion_board_admins.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussion_board_adminsFindManyArgs>(args?: SelectSubset<T, discussion_board_adminsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_adminsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussion_board_admins.\n     * @param {discussion_board_adminsCreateArgs} args - Arguments to create a Discussion_board_admins.\n     * @example\n     * // Create one Discussion_board_admins\n     * const Discussion_board_admins = await prisma.discussion_board_admins.create({\n     *   data: {\n     *     // ... data to create a Discussion_board_admins\n     *   }\n     * })\n     * \n     */\n    create<T extends discussion_board_adminsCreateArgs>(args: SelectSubset<T, discussion_board_adminsCreateArgs<ExtArgs>>): Prisma__discussion_board_adminsClient<$Result.GetResult<Prisma.$discussion_board_adminsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussion_board_admins.\n     * @param {discussion_board_adminsCreateManyArgs} args - Arguments to create many Discussion_board_admins.\n     * @example\n     * // Create many Discussion_board_admins\n     * const discussion_board_admins = await prisma.discussion_board_admins.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussion_board_adminsCreateManyArgs>(args?: SelectSubset<T, discussion_board_adminsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussion_board_admins and returns the data saved in the database.\n     * @param {discussion_board_adminsCreateManyAndReturnArgs} args - Arguments to create many Discussion_board_admins.\n     * @example\n     * // Create many Discussion_board_admins\n     * const discussion_board_admins = await prisma.discussion_board_admins.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussion_board_admins and only return the `id`\n     * const discussion_board_adminsWithIdOnly = await prisma.discussion_board_admins.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussion_board_adminsCreateManyAndReturnArgs>(args?: SelectSubset<T, discussion_board_adminsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_adminsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussion_board_admins.\n     * @param {discussion_board_adminsDeleteArgs} args - Arguments to delete one Discussion_board_admins.\n     * @example\n     * // Delete one Discussion_board_admins\n     * const Discussion_board_admins = await prisma.discussion_board_admins.delete({\n     *   where: {\n     *     // ... filter to delete one Discussion_board_admins\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussion_board_adminsDeleteArgs>(args: SelectSubset<T, discussion_board_adminsDeleteArgs<ExtArgs>>): Prisma__discussion_board_adminsClient<$Result.GetResult<Prisma.$discussion_board_adminsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussion_board_admins.\n     * @param {discussion_board_adminsUpdateArgs} args - Arguments to update one Discussion_board_admins.\n     * @example\n     * // Update one Discussion_board_admins\n     * const discussion_board_admins = await prisma.discussion_board_admins.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussion_board_adminsUpdateArgs>(args: SelectSubset<T, discussion_board_adminsUpdateArgs<ExtArgs>>): Prisma__discussion_board_adminsClient<$Result.GetResult<Prisma.$discussion_board_adminsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussion_board_admins.\n     * @param {discussion_board_adminsDeleteManyArgs} args - Arguments to filter Discussion_board_admins to delete.\n     * @example\n     * // Delete a few Discussion_board_admins\n     * const { count } = await prisma.discussion_board_admins.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussion_board_adminsDeleteManyArgs>(args?: SelectSubset<T, discussion_board_adminsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_admins.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_adminsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussion_board_admins\n     * const discussion_board_admins = await prisma.discussion_board_admins.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussion_board_adminsUpdateManyArgs>(args: SelectSubset<T, discussion_board_adminsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_admins and returns the data updated in the database.\n     * @param {discussion_board_adminsUpdateManyAndReturnArgs} args - Arguments to update many Discussion_board_admins.\n     * @example\n     * // Update many Discussion_board_admins\n     * const discussion_board_admins = await prisma.discussion_board_admins.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussion_board_admins and only return the `id`\n     * const discussion_board_adminsWithIdOnly = await prisma.discussion_board_admins.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussion_board_adminsUpdateManyAndReturnArgs>(args: SelectSubset<T, discussion_board_adminsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_adminsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussion_board_admins.\n     * @param {discussion_board_adminsUpsertArgs} args - Arguments to update or create a Discussion_board_admins.\n     * @example\n     * // Update or create a Discussion_board_admins\n     * const discussion_board_admins = await prisma.discussion_board_admins.upsert({\n     *   create: {\n     *     // ... data to create a Discussion_board_admins\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussion_board_admins we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussion_board_adminsUpsertArgs>(args: SelectSubset<T, discussion_board_adminsUpsertArgs<ExtArgs>>): Prisma__discussion_board_adminsClient<$Result.GetResult<Prisma.$discussion_board_adminsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussion_board_admins.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_adminsCountArgs} args - Arguments to filter Discussion_board_admins to count.\n     * @example\n     * // Count the number of Discussion_board_admins\n     * const count = await prisma.discussion_board_admins.count({\n     *   where: {\n     *     // ... the filter for the Discussion_board_admins we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussion_board_adminsCountArgs>(\n      args?: Subset<T, discussion_board_adminsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussion_board_adminsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussion_board_admins.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussion_board_adminsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussion_board_adminsAggregateArgs>(args: Subset<T, Discussion_board_adminsAggregateArgs>): Prisma.PrismaPromise<GetDiscussion_board_adminsAggregateType<T>>\n\n    /**\n     * Group by Discussion_board_admins.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_adminsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussion_board_adminsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussion_board_adminsGroupByArgs['orderBy'] }\n        : { orderBy?: discussion_board_adminsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussion_board_adminsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussion_board_adminsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussion_board_admins model\n   */\n  readonly fields: discussion_board_adminsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussion_board_admins.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussion_board_adminsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    fk_discussion_board_admins_user_id_discussion_board_users_id<T extends discussion_board_usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_usersDefaultArgs<ExtArgs>>): Prisma__discussion_board_usersClient<$Result.GetResult<Prisma.$discussion_board_usersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussion_board_admins model\n   */\n  interface discussion_board_adminsFieldRefs {\n    readonly id: FieldRef<\"discussion_board_admins\", 'String'>\n    readonly user_id: FieldRef<\"discussion_board_admins\", 'String'>\n    readonly is_active: FieldRef<\"discussion_board_admins\", 'Boolean'>\n    readonly assigned_at: FieldRef<\"discussion_board_admins\", 'DateTime'>\n    readonly revoked_at: FieldRef<\"discussion_board_admins\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussion_board_admins findUnique\n   */\n  export type discussion_board_adminsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_admins\n     */\n    select?: discussion_board_adminsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_admins\n     */\n    omit?: discussion_board_adminsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_adminsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_admins to fetch.\n     */\n    where: discussion_board_adminsWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_admins findUniqueOrThrow\n   */\n  export type discussion_board_adminsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_admins\n     */\n    select?: discussion_board_adminsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_admins\n     */\n    omit?: discussion_board_adminsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_adminsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_admins to fetch.\n     */\n    where: discussion_board_adminsWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_admins findFirst\n   */\n  export type discussion_board_adminsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_admins\n     */\n    select?: discussion_board_adminsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_admins\n     */\n    omit?: discussion_board_adminsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_adminsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_admins to fetch.\n     */\n    where?: discussion_board_adminsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_admins to fetch.\n     */\n    orderBy?: discussion_board_adminsOrderByWithRelationInput | discussion_board_adminsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_admins.\n     */\n    cursor?: discussion_board_adminsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_admins from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_admins.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_admins.\n     */\n    distinct?: Discussion_board_adminsScalarFieldEnum | Discussion_board_adminsScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_admins findFirstOrThrow\n   */\n  export type discussion_board_adminsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_admins\n     */\n    select?: discussion_board_adminsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_admins\n     */\n    omit?: discussion_board_adminsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_adminsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_admins to fetch.\n     */\n    where?: discussion_board_adminsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_admins to fetch.\n     */\n    orderBy?: discussion_board_adminsOrderByWithRelationInput | discussion_board_adminsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_admins.\n     */\n    cursor?: discussion_board_adminsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_admins from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_admins.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_admins.\n     */\n    distinct?: Discussion_board_adminsScalarFieldEnum | Discussion_board_adminsScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_admins findMany\n   */\n  export type discussion_board_adminsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_admins\n     */\n    select?: discussion_board_adminsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_admins\n     */\n    omit?: discussion_board_adminsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_adminsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_admins to fetch.\n     */\n    where?: discussion_board_adminsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_admins to fetch.\n     */\n    orderBy?: discussion_board_adminsOrderByWithRelationInput | discussion_board_adminsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussion_board_admins.\n     */\n    cursor?: discussion_board_adminsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_admins from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_admins.\n     */\n    skip?: number\n    distinct?: Discussion_board_adminsScalarFieldEnum | Discussion_board_adminsScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_admins create\n   */\n  export type discussion_board_adminsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_admins\n     */\n    select?: discussion_board_adminsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_admins\n     */\n    omit?: discussion_board_adminsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_adminsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussion_board_admins.\n     */\n    data: XOR<discussion_board_adminsCreateInput, discussion_board_adminsUncheckedCreateInput>\n  }\n\n  /**\n   * discussion_board_admins createMany\n   */\n  export type discussion_board_adminsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussion_board_admins.\n     */\n    data: discussion_board_adminsCreateManyInput | discussion_board_adminsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussion_board_admins createManyAndReturn\n   */\n  export type discussion_board_adminsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_admins\n     */\n    select?: discussion_board_adminsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_admins\n     */\n    omit?: discussion_board_adminsOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussion_board_admins.\n     */\n    data: discussion_board_adminsCreateManyInput | discussion_board_adminsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_adminsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_admins update\n   */\n  export type discussion_board_adminsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_admins\n     */\n    select?: discussion_board_adminsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_admins\n     */\n    omit?: discussion_board_adminsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_adminsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussion_board_admins.\n     */\n    data: XOR<discussion_board_adminsUpdateInput, discussion_board_adminsUncheckedUpdateInput>\n    /**\n     * Choose, which discussion_board_admins to update.\n     */\n    where: discussion_board_adminsWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_admins updateMany\n   */\n  export type discussion_board_adminsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussion_board_admins.\n     */\n    data: XOR<discussion_board_adminsUpdateManyMutationInput, discussion_board_adminsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_admins to update\n     */\n    where?: discussion_board_adminsWhereInput\n    /**\n     * Limit how many discussion_board_admins to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_admins updateManyAndReturn\n   */\n  export type discussion_board_adminsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_admins\n     */\n    select?: discussion_board_adminsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_admins\n     */\n    omit?: discussion_board_adminsOmit<ExtArgs> | null\n    /**\n     * The data used to update discussion_board_admins.\n     */\n    data: XOR<discussion_board_adminsUpdateManyMutationInput, discussion_board_adminsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_admins to update\n     */\n    where?: discussion_board_adminsWhereInput\n    /**\n     * Limit how many discussion_board_admins to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_adminsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_admins upsert\n   */\n  export type discussion_board_adminsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_admins\n     */\n    select?: discussion_board_adminsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_admins\n     */\n    omit?: discussion_board_adminsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_adminsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussion_board_admins to update in case it exists.\n     */\n    where: discussion_board_adminsWhereUniqueInput\n    /**\n     * In case the discussion_board_admins found by the `where` argument doesn't exist, create a new discussion_board_admins with this data.\n     */\n    create: XOR<discussion_board_adminsCreateInput, discussion_board_adminsUncheckedCreateInput>\n    /**\n     * In case the discussion_board_admins was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussion_board_adminsUpdateInput, discussion_board_adminsUncheckedUpdateInput>\n  }\n\n  /**\n   * discussion_board_admins delete\n   */\n  export type discussion_board_adminsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_admins\n     */\n    select?: discussion_board_adminsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_admins\n     */\n    omit?: discussion_board_adminsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_adminsInclude<ExtArgs> | null\n    /**\n     * Filter which discussion_board_admins to delete.\n     */\n    where: discussion_board_adminsWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_admins deleteMany\n   */\n  export type discussion_board_adminsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_admins to delete\n     */\n    where?: discussion_board_adminsWhereInput\n    /**\n     * Limit how many discussion_board_admins to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_admins without action\n   */\n  export type discussion_board_adminsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_admins\n     */\n    select?: discussion_board_adminsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_admins\n     */\n    omit?: discussion_board_adminsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_adminsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussion_board_user_profiles\n   */\n\n  export type AggregateDiscussion_board_user_profiles = {\n    _count: Discussion_board_user_profilesCountAggregateOutputType | null\n    _min: Discussion_board_user_profilesMinAggregateOutputType | null\n    _max: Discussion_board_user_profilesMaxAggregateOutputType | null\n  }\n\n  export type Discussion_board_user_profilesMinAggregateOutputType = {\n    id: string | null\n    user_id: string | null\n    display_name: string | null\n    avatar_url: string | null\n    bio: string | null\n    badges: string | null\n  }\n\n  export type Discussion_board_user_profilesMaxAggregateOutputType = {\n    id: string | null\n    user_id: string | null\n    display_name: string | null\n    avatar_url: string | null\n    bio: string | null\n    badges: string | null\n  }\n\n  export type Discussion_board_user_profilesCountAggregateOutputType = {\n    id: number\n    user_id: number\n    display_name: number\n    avatar_url: number\n    bio: number\n    badges: number\n    _all: number\n  }\n\n\n  export type Discussion_board_user_profilesMinAggregateInputType = {\n    id?: true\n    user_id?: true\n    display_name?: true\n    avatar_url?: true\n    bio?: true\n    badges?: true\n  }\n\n  export type Discussion_board_user_profilesMaxAggregateInputType = {\n    id?: true\n    user_id?: true\n    display_name?: true\n    avatar_url?: true\n    bio?: true\n    badges?: true\n  }\n\n  export type Discussion_board_user_profilesCountAggregateInputType = {\n    id?: true\n    user_id?: true\n    display_name?: true\n    avatar_url?: true\n    bio?: true\n    badges?: true\n    _all?: true\n  }\n\n  export type Discussion_board_user_profilesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_user_profiles to aggregate.\n     */\n    where?: discussion_board_user_profilesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_user_profiles to fetch.\n     */\n    orderBy?: discussion_board_user_profilesOrderByWithRelationInput | discussion_board_user_profilesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussion_board_user_profilesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_user_profiles from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_user_profiles.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussion_board_user_profiles\n    **/\n    _count?: true | Discussion_board_user_profilesCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussion_board_user_profilesMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussion_board_user_profilesMaxAggregateInputType\n  }\n\n  export type GetDiscussion_board_user_profilesAggregateType<T extends Discussion_board_user_profilesAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussion_board_user_profiles]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussion_board_user_profiles[P]>\n      : GetScalarType<T[P], AggregateDiscussion_board_user_profiles[P]>\n  }\n\n\n\n\n  export type discussion_board_user_profilesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_user_profilesWhereInput\n    orderBy?: discussion_board_user_profilesOrderByWithAggregationInput | discussion_board_user_profilesOrderByWithAggregationInput[]\n    by: Discussion_board_user_profilesScalarFieldEnum[] | Discussion_board_user_profilesScalarFieldEnum\n    having?: discussion_board_user_profilesScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussion_board_user_profilesCountAggregateInputType | true\n    _min?: Discussion_board_user_profilesMinAggregateInputType\n    _max?: Discussion_board_user_profilesMaxAggregateInputType\n  }\n\n  export type Discussion_board_user_profilesGroupByOutputType = {\n    id: string\n    user_id: string\n    display_name: string | null\n    avatar_url: string | null\n    bio: string | null\n    badges: string | null\n    _count: Discussion_board_user_profilesCountAggregateOutputType | null\n    _min: Discussion_board_user_profilesMinAggregateOutputType | null\n    _max: Discussion_board_user_profilesMaxAggregateOutputType | null\n  }\n\n  type GetDiscussion_board_user_profilesGroupByPayload<T extends discussion_board_user_profilesGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussion_board_user_profilesGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussion_board_user_profilesGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussion_board_user_profilesGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussion_board_user_profilesGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussion_board_user_profilesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    display_name?: boolean\n    avatar_url?: boolean\n    bio?: boolean\n    badges?: boolean\n    fk_discussion_board_user_profiles_user_id_discussion_board_users_id?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_user_profiles\"]>\n\n  export type discussion_board_user_profilesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    display_name?: boolean\n    avatar_url?: boolean\n    bio?: boolean\n    badges?: boolean\n    fk_discussion_board_user_profiles_user_id_discussion_board_users_id?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_user_profiles\"]>\n\n  export type discussion_board_user_profilesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    display_name?: boolean\n    avatar_url?: boolean\n    bio?: boolean\n    badges?: boolean\n    fk_discussion_board_user_profiles_user_id_discussion_board_users_id?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_user_profiles\"]>\n\n  export type discussion_board_user_profilesSelectScalar = {\n    id?: boolean\n    user_id?: boolean\n    display_name?: boolean\n    avatar_url?: boolean\n    bio?: boolean\n    badges?: boolean\n  }\n\n  export type discussion_board_user_profilesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"user_id\" | \"display_name\" | \"avatar_url\" | \"bio\" | \"badges\", ExtArgs[\"result\"][\"discussion_board_user_profiles\"]>\n  export type discussion_board_user_profilesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_discussion_board_user_profiles_user_id_discussion_board_users_id?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n  }\n  export type discussion_board_user_profilesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_discussion_board_user_profiles_user_id_discussion_board_users_id?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n  }\n  export type discussion_board_user_profilesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_discussion_board_user_profiles_user_id_discussion_board_users_id?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n  }\n\n  export type $discussion_board_user_profilesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussion_board_user_profiles\"\n    objects: {\n      fk_discussion_board_user_profiles_user_id_discussion_board_users_id: Prisma.$discussion_board_usersPayload<ExtArgs>\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key - Unique for each profile, used for linking profile data to user. Ensures record atomicity.\n       */\n      id: string\n      /**\n       * User Foreign Key - Connects profile data precisely to its user account. Enforces 1:1 user-profile mapping.\n       */\n      user_id: string\n      /**\n       * Display Name - Optional, user-customizable nickname for display. 3NF atomic field; example: public boards may show only this.\n       */\n      display_name: string | null\n      /**\n       * Avatar URI - Optional, image URL for profile picture. Maintains normalization; avatar is not stored in user, settings, or duplicated elsewhere.\n       */\n      avatar_url: string | null\n      /**\n       * User Biography - Optional, free-form text for interests, expertise or statements. 3NF: non-aggregated, not used for computation.\n       */\n      bio: string | null\n      /**\n       * User Badges - Optional, serialized badge list. 3NF, atomic per user (badge aggregation handled in materialized views as needed). Example: Displaying earned badges.\n       */\n      badges: string | null\n    }, ExtArgs[\"result\"][\"discussion_board_user_profiles\"]>\n    composites: {}\n  }\n\n  type discussion_board_user_profilesGetPayload<S extends boolean | null | undefined | discussion_board_user_profilesDefaultArgs> = $Result.GetResult<Prisma.$discussion_board_user_profilesPayload, S>\n\n  type discussion_board_user_profilesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussion_board_user_profilesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussion_board_user_profilesCountAggregateInputType | true\n    }\n\n  export interface discussion_board_user_profilesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussion_board_user_profiles'], meta: { name: 'discussion_board_user_profiles' } }\n    /**\n     * Find zero or one Discussion_board_user_profiles that matches the filter.\n     * @param {discussion_board_user_profilesFindUniqueArgs} args - Arguments to find a Discussion_board_user_profiles\n     * @example\n     * // Get one Discussion_board_user_profiles\n     * const discussion_board_user_profiles = await prisma.discussion_board_user_profiles.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussion_board_user_profilesFindUniqueArgs>(args: SelectSubset<T, discussion_board_user_profilesFindUniqueArgs<ExtArgs>>): Prisma__discussion_board_user_profilesClient<$Result.GetResult<Prisma.$discussion_board_user_profilesPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussion_board_user_profiles that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussion_board_user_profilesFindUniqueOrThrowArgs} args - Arguments to find a Discussion_board_user_profiles\n     * @example\n     * // Get one Discussion_board_user_profiles\n     * const discussion_board_user_profiles = await prisma.discussion_board_user_profiles.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussion_board_user_profilesFindUniqueOrThrowArgs>(args: SelectSubset<T, discussion_board_user_profilesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussion_board_user_profilesClient<$Result.GetResult<Prisma.$discussion_board_user_profilesPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_user_profiles that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_user_profilesFindFirstArgs} args - Arguments to find a Discussion_board_user_profiles\n     * @example\n     * // Get one Discussion_board_user_profiles\n     * const discussion_board_user_profiles = await prisma.discussion_board_user_profiles.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussion_board_user_profilesFindFirstArgs>(args?: SelectSubset<T, discussion_board_user_profilesFindFirstArgs<ExtArgs>>): Prisma__discussion_board_user_profilesClient<$Result.GetResult<Prisma.$discussion_board_user_profilesPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_user_profiles that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_user_profilesFindFirstOrThrowArgs} args - Arguments to find a Discussion_board_user_profiles\n     * @example\n     * // Get one Discussion_board_user_profiles\n     * const discussion_board_user_profiles = await prisma.discussion_board_user_profiles.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussion_board_user_profilesFindFirstOrThrowArgs>(args?: SelectSubset<T, discussion_board_user_profilesFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussion_board_user_profilesClient<$Result.GetResult<Prisma.$discussion_board_user_profilesPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussion_board_user_profiles that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_user_profilesFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussion_board_user_profiles\n     * const discussion_board_user_profiles = await prisma.discussion_board_user_profiles.findMany()\n     * \n     * // Get first 10 Discussion_board_user_profiles\n     * const discussion_board_user_profiles = await prisma.discussion_board_user_profiles.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussion_board_user_profilesWithIdOnly = await prisma.discussion_board_user_profiles.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussion_board_user_profilesFindManyArgs>(args?: SelectSubset<T, discussion_board_user_profilesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_user_profilesPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussion_board_user_profiles.\n     * @param {discussion_board_user_profilesCreateArgs} args - Arguments to create a Discussion_board_user_profiles.\n     * @example\n     * // Create one Discussion_board_user_profiles\n     * const Discussion_board_user_profiles = await prisma.discussion_board_user_profiles.create({\n     *   data: {\n     *     // ... data to create a Discussion_board_user_profiles\n     *   }\n     * })\n     * \n     */\n    create<T extends discussion_board_user_profilesCreateArgs>(args: SelectSubset<T, discussion_board_user_profilesCreateArgs<ExtArgs>>): Prisma__discussion_board_user_profilesClient<$Result.GetResult<Prisma.$discussion_board_user_profilesPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussion_board_user_profiles.\n     * @param {discussion_board_user_profilesCreateManyArgs} args - Arguments to create many Discussion_board_user_profiles.\n     * @example\n     * // Create many Discussion_board_user_profiles\n     * const discussion_board_user_profiles = await prisma.discussion_board_user_profiles.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussion_board_user_profilesCreateManyArgs>(args?: SelectSubset<T, discussion_board_user_profilesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussion_board_user_profiles and returns the data saved in the database.\n     * @param {discussion_board_user_profilesCreateManyAndReturnArgs} args - Arguments to create many Discussion_board_user_profiles.\n     * @example\n     * // Create many Discussion_board_user_profiles\n     * const discussion_board_user_profiles = await prisma.discussion_board_user_profiles.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussion_board_user_profiles and only return the `id`\n     * const discussion_board_user_profilesWithIdOnly = await prisma.discussion_board_user_profiles.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussion_board_user_profilesCreateManyAndReturnArgs>(args?: SelectSubset<T, discussion_board_user_profilesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_user_profilesPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussion_board_user_profiles.\n     * @param {discussion_board_user_profilesDeleteArgs} args - Arguments to delete one Discussion_board_user_profiles.\n     * @example\n     * // Delete one Discussion_board_user_profiles\n     * const Discussion_board_user_profiles = await prisma.discussion_board_user_profiles.delete({\n     *   where: {\n     *     // ... filter to delete one Discussion_board_user_profiles\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussion_board_user_profilesDeleteArgs>(args: SelectSubset<T, discussion_board_user_profilesDeleteArgs<ExtArgs>>): Prisma__discussion_board_user_profilesClient<$Result.GetResult<Prisma.$discussion_board_user_profilesPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussion_board_user_profiles.\n     * @param {discussion_board_user_profilesUpdateArgs} args - Arguments to update one Discussion_board_user_profiles.\n     * @example\n     * // Update one Discussion_board_user_profiles\n     * const discussion_board_user_profiles = await prisma.discussion_board_user_profiles.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussion_board_user_profilesUpdateArgs>(args: SelectSubset<T, discussion_board_user_profilesUpdateArgs<ExtArgs>>): Prisma__discussion_board_user_profilesClient<$Result.GetResult<Prisma.$discussion_board_user_profilesPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussion_board_user_profiles.\n     * @param {discussion_board_user_profilesDeleteManyArgs} args - Arguments to filter Discussion_board_user_profiles to delete.\n     * @example\n     * // Delete a few Discussion_board_user_profiles\n     * const { count } = await prisma.discussion_board_user_profiles.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussion_board_user_profilesDeleteManyArgs>(args?: SelectSubset<T, discussion_board_user_profilesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_user_profiles.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_user_profilesUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussion_board_user_profiles\n     * const discussion_board_user_profiles = await prisma.discussion_board_user_profiles.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussion_board_user_profilesUpdateManyArgs>(args: SelectSubset<T, discussion_board_user_profilesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_user_profiles and returns the data updated in the database.\n     * @param {discussion_board_user_profilesUpdateManyAndReturnArgs} args - Arguments to update many Discussion_board_user_profiles.\n     * @example\n     * // Update many Discussion_board_user_profiles\n     * const discussion_board_user_profiles = await prisma.discussion_board_user_profiles.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussion_board_user_profiles and only return the `id`\n     * const discussion_board_user_profilesWithIdOnly = await prisma.discussion_board_user_profiles.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussion_board_user_profilesUpdateManyAndReturnArgs>(args: SelectSubset<T, discussion_board_user_profilesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_user_profilesPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussion_board_user_profiles.\n     * @param {discussion_board_user_profilesUpsertArgs} args - Arguments to update or create a Discussion_board_user_profiles.\n     * @example\n     * // Update or create a Discussion_board_user_profiles\n     * const discussion_board_user_profiles = await prisma.discussion_board_user_profiles.upsert({\n     *   create: {\n     *     // ... data to create a Discussion_board_user_profiles\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussion_board_user_profiles we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussion_board_user_profilesUpsertArgs>(args: SelectSubset<T, discussion_board_user_profilesUpsertArgs<ExtArgs>>): Prisma__discussion_board_user_profilesClient<$Result.GetResult<Prisma.$discussion_board_user_profilesPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussion_board_user_profiles.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_user_profilesCountArgs} args - Arguments to filter Discussion_board_user_profiles to count.\n     * @example\n     * // Count the number of Discussion_board_user_profiles\n     * const count = await prisma.discussion_board_user_profiles.count({\n     *   where: {\n     *     // ... the filter for the Discussion_board_user_profiles we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussion_board_user_profilesCountArgs>(\n      args?: Subset<T, discussion_board_user_profilesCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussion_board_user_profilesCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussion_board_user_profiles.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussion_board_user_profilesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussion_board_user_profilesAggregateArgs>(args: Subset<T, Discussion_board_user_profilesAggregateArgs>): Prisma.PrismaPromise<GetDiscussion_board_user_profilesAggregateType<T>>\n\n    /**\n     * Group by Discussion_board_user_profiles.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_user_profilesGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussion_board_user_profilesGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussion_board_user_profilesGroupByArgs['orderBy'] }\n        : { orderBy?: discussion_board_user_profilesGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussion_board_user_profilesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussion_board_user_profilesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussion_board_user_profiles model\n   */\n  readonly fields: discussion_board_user_profilesFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussion_board_user_profiles.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussion_board_user_profilesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    fk_discussion_board_user_profiles_user_id_discussion_board_users_id<T extends discussion_board_usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_usersDefaultArgs<ExtArgs>>): Prisma__discussion_board_usersClient<$Result.GetResult<Prisma.$discussion_board_usersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussion_board_user_profiles model\n   */\n  interface discussion_board_user_profilesFieldRefs {\n    readonly id: FieldRef<\"discussion_board_user_profiles\", 'String'>\n    readonly user_id: FieldRef<\"discussion_board_user_profiles\", 'String'>\n    readonly display_name: FieldRef<\"discussion_board_user_profiles\", 'String'>\n    readonly avatar_url: FieldRef<\"discussion_board_user_profiles\", 'String'>\n    readonly bio: FieldRef<\"discussion_board_user_profiles\", 'String'>\n    readonly badges: FieldRef<\"discussion_board_user_profiles\", 'String'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussion_board_user_profiles findUnique\n   */\n  export type discussion_board_user_profilesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_user_profiles\n     */\n    select?: discussion_board_user_profilesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_user_profiles\n     */\n    omit?: discussion_board_user_profilesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_user_profilesInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_user_profiles to fetch.\n     */\n    where: discussion_board_user_profilesWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_user_profiles findUniqueOrThrow\n   */\n  export type discussion_board_user_profilesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_user_profiles\n     */\n    select?: discussion_board_user_profilesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_user_profiles\n     */\n    omit?: discussion_board_user_profilesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_user_profilesInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_user_profiles to fetch.\n     */\n    where: discussion_board_user_profilesWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_user_profiles findFirst\n   */\n  export type discussion_board_user_profilesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_user_profiles\n     */\n    select?: discussion_board_user_profilesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_user_profiles\n     */\n    omit?: discussion_board_user_profilesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_user_profilesInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_user_profiles to fetch.\n     */\n    where?: discussion_board_user_profilesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_user_profiles to fetch.\n     */\n    orderBy?: discussion_board_user_profilesOrderByWithRelationInput | discussion_board_user_profilesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_user_profiles.\n     */\n    cursor?: discussion_board_user_profilesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_user_profiles from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_user_profiles.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_user_profiles.\n     */\n    distinct?: Discussion_board_user_profilesScalarFieldEnum | Discussion_board_user_profilesScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_user_profiles findFirstOrThrow\n   */\n  export type discussion_board_user_profilesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_user_profiles\n     */\n    select?: discussion_board_user_profilesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_user_profiles\n     */\n    omit?: discussion_board_user_profilesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_user_profilesInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_user_profiles to fetch.\n     */\n    where?: discussion_board_user_profilesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_user_profiles to fetch.\n     */\n    orderBy?: discussion_board_user_profilesOrderByWithRelationInput | discussion_board_user_profilesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_user_profiles.\n     */\n    cursor?: discussion_board_user_profilesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_user_profiles from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_user_profiles.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_user_profiles.\n     */\n    distinct?: Discussion_board_user_profilesScalarFieldEnum | Discussion_board_user_profilesScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_user_profiles findMany\n   */\n  export type discussion_board_user_profilesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_user_profiles\n     */\n    select?: discussion_board_user_profilesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_user_profiles\n     */\n    omit?: discussion_board_user_profilesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_user_profilesInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_user_profiles to fetch.\n     */\n    where?: discussion_board_user_profilesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_user_profiles to fetch.\n     */\n    orderBy?: discussion_board_user_profilesOrderByWithRelationInput | discussion_board_user_profilesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussion_board_user_profiles.\n     */\n    cursor?: discussion_board_user_profilesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_user_profiles from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_user_profiles.\n     */\n    skip?: number\n    distinct?: Discussion_board_user_profilesScalarFieldEnum | Discussion_board_user_profilesScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_user_profiles create\n   */\n  export type discussion_board_user_profilesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_user_profiles\n     */\n    select?: discussion_board_user_profilesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_user_profiles\n     */\n    omit?: discussion_board_user_profilesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_user_profilesInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussion_board_user_profiles.\n     */\n    data: XOR<discussion_board_user_profilesCreateInput, discussion_board_user_profilesUncheckedCreateInput>\n  }\n\n  /**\n   * discussion_board_user_profiles createMany\n   */\n  export type discussion_board_user_profilesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussion_board_user_profiles.\n     */\n    data: discussion_board_user_profilesCreateManyInput | discussion_board_user_profilesCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussion_board_user_profiles createManyAndReturn\n   */\n  export type discussion_board_user_profilesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_user_profiles\n     */\n    select?: discussion_board_user_profilesSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_user_profiles\n     */\n    omit?: discussion_board_user_profilesOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussion_board_user_profiles.\n     */\n    data: discussion_board_user_profilesCreateManyInput | discussion_board_user_profilesCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_user_profilesIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_user_profiles update\n   */\n  export type discussion_board_user_profilesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_user_profiles\n     */\n    select?: discussion_board_user_profilesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_user_profiles\n     */\n    omit?: discussion_board_user_profilesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_user_profilesInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussion_board_user_profiles.\n     */\n    data: XOR<discussion_board_user_profilesUpdateInput, discussion_board_user_profilesUncheckedUpdateInput>\n    /**\n     * Choose, which discussion_board_user_profiles to update.\n     */\n    where: discussion_board_user_profilesWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_user_profiles updateMany\n   */\n  export type discussion_board_user_profilesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussion_board_user_profiles.\n     */\n    data: XOR<discussion_board_user_profilesUpdateManyMutationInput, discussion_board_user_profilesUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_user_profiles to update\n     */\n    where?: discussion_board_user_profilesWhereInput\n    /**\n     * Limit how many discussion_board_user_profiles to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_user_profiles updateManyAndReturn\n   */\n  export type discussion_board_user_profilesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_user_profiles\n     */\n    select?: discussion_board_user_profilesSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_user_profiles\n     */\n    omit?: discussion_board_user_profilesOmit<ExtArgs> | null\n    /**\n     * The data used to update discussion_board_user_profiles.\n     */\n    data: XOR<discussion_board_user_profilesUpdateManyMutationInput, discussion_board_user_profilesUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_user_profiles to update\n     */\n    where?: discussion_board_user_profilesWhereInput\n    /**\n     * Limit how many discussion_board_user_profiles to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_user_profilesIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_user_profiles upsert\n   */\n  export type discussion_board_user_profilesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_user_profiles\n     */\n    select?: discussion_board_user_profilesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_user_profiles\n     */\n    omit?: discussion_board_user_profilesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_user_profilesInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussion_board_user_profiles to update in case it exists.\n     */\n    where: discussion_board_user_profilesWhereUniqueInput\n    /**\n     * In case the discussion_board_user_profiles found by the `where` argument doesn't exist, create a new discussion_board_user_profiles with this data.\n     */\n    create: XOR<discussion_board_user_profilesCreateInput, discussion_board_user_profilesUncheckedCreateInput>\n    /**\n     * In case the discussion_board_user_profiles was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussion_board_user_profilesUpdateInput, discussion_board_user_profilesUncheckedUpdateInput>\n  }\n\n  /**\n   * discussion_board_user_profiles delete\n   */\n  export type discussion_board_user_profilesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_user_profiles\n     */\n    select?: discussion_board_user_profilesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_user_profiles\n     */\n    omit?: discussion_board_user_profilesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_user_profilesInclude<ExtArgs> | null\n    /**\n     * Filter which discussion_board_user_profiles to delete.\n     */\n    where: discussion_board_user_profilesWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_user_profiles deleteMany\n   */\n  export type discussion_board_user_profilesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_user_profiles to delete\n     */\n    where?: discussion_board_user_profilesWhereInput\n    /**\n     * Limit how many discussion_board_user_profiles to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_user_profiles without action\n   */\n  export type discussion_board_user_profilesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_user_profiles\n     */\n    select?: discussion_board_user_profilesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_user_profiles\n     */\n    omit?: discussion_board_user_profilesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_user_profilesInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussion_board_user_settings\n   */\n\n  export type AggregateDiscussion_board_user_settings = {\n    _count: Discussion_board_user_settingsCountAggregateOutputType | null\n    _min: Discussion_board_user_settingsMinAggregateOutputType | null\n    _max: Discussion_board_user_settingsMaxAggregateOutputType | null\n  }\n\n  export type Discussion_board_user_settingsMinAggregateOutputType = {\n    id: string | null\n    user_id: string | null\n    notification_email: boolean | null\n    notification_in_app: boolean | null\n    accessibility_mode: string | null\n    display_density: string | null\n  }\n\n  export type Discussion_board_user_settingsMaxAggregateOutputType = {\n    id: string | null\n    user_id: string | null\n    notification_email: boolean | null\n    notification_in_app: boolean | null\n    accessibility_mode: string | null\n    display_density: string | null\n  }\n\n  export type Discussion_board_user_settingsCountAggregateOutputType = {\n    id: number\n    user_id: number\n    notification_email: number\n    notification_in_app: number\n    accessibility_mode: number\n    display_density: number\n    _all: number\n  }\n\n\n  export type Discussion_board_user_settingsMinAggregateInputType = {\n    id?: true\n    user_id?: true\n    notification_email?: true\n    notification_in_app?: true\n    accessibility_mode?: true\n    display_density?: true\n  }\n\n  export type Discussion_board_user_settingsMaxAggregateInputType = {\n    id?: true\n    user_id?: true\n    notification_email?: true\n    notification_in_app?: true\n    accessibility_mode?: true\n    display_density?: true\n  }\n\n  export type Discussion_board_user_settingsCountAggregateInputType = {\n    id?: true\n    user_id?: true\n    notification_email?: true\n    notification_in_app?: true\n    accessibility_mode?: true\n    display_density?: true\n    _all?: true\n  }\n\n  export type Discussion_board_user_settingsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_user_settings to aggregate.\n     */\n    where?: discussion_board_user_settingsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_user_settings to fetch.\n     */\n    orderBy?: discussion_board_user_settingsOrderByWithRelationInput | discussion_board_user_settingsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussion_board_user_settingsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_user_settings from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_user_settings.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussion_board_user_settings\n    **/\n    _count?: true | Discussion_board_user_settingsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussion_board_user_settingsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussion_board_user_settingsMaxAggregateInputType\n  }\n\n  export type GetDiscussion_board_user_settingsAggregateType<T extends Discussion_board_user_settingsAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussion_board_user_settings]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussion_board_user_settings[P]>\n      : GetScalarType<T[P], AggregateDiscussion_board_user_settings[P]>\n  }\n\n\n\n\n  export type discussion_board_user_settingsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_user_settingsWhereInput\n    orderBy?: discussion_board_user_settingsOrderByWithAggregationInput | discussion_board_user_settingsOrderByWithAggregationInput[]\n    by: Discussion_board_user_settingsScalarFieldEnum[] | Discussion_board_user_settingsScalarFieldEnum\n    having?: discussion_board_user_settingsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussion_board_user_settingsCountAggregateInputType | true\n    _min?: Discussion_board_user_settingsMinAggregateInputType\n    _max?: Discussion_board_user_settingsMaxAggregateInputType\n  }\n\n  export type Discussion_board_user_settingsGroupByOutputType = {\n    id: string\n    user_id: string\n    notification_email: boolean\n    notification_in_app: boolean\n    accessibility_mode: string | null\n    display_density: string | null\n    _count: Discussion_board_user_settingsCountAggregateOutputType | null\n    _min: Discussion_board_user_settingsMinAggregateOutputType | null\n    _max: Discussion_board_user_settingsMaxAggregateOutputType | null\n  }\n\n  type GetDiscussion_board_user_settingsGroupByPayload<T extends discussion_board_user_settingsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussion_board_user_settingsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussion_board_user_settingsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussion_board_user_settingsGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussion_board_user_settingsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussion_board_user_settingsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    notification_email?: boolean\n    notification_in_app?: boolean\n    accessibility_mode?: boolean\n    display_density?: boolean\n    fk_discussion_board_user_settings_user_id_discussion_board_users_id?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_user_settings\"]>\n\n  export type discussion_board_user_settingsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    notification_email?: boolean\n    notification_in_app?: boolean\n    accessibility_mode?: boolean\n    display_density?: boolean\n    fk_discussion_board_user_settings_user_id_discussion_board_users_id?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_user_settings\"]>\n\n  export type discussion_board_user_settingsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    notification_email?: boolean\n    notification_in_app?: boolean\n    accessibility_mode?: boolean\n    display_density?: boolean\n    fk_discussion_board_user_settings_user_id_discussion_board_users_id?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_user_settings\"]>\n\n  export type discussion_board_user_settingsSelectScalar = {\n    id?: boolean\n    user_id?: boolean\n    notification_email?: boolean\n    notification_in_app?: boolean\n    accessibility_mode?: boolean\n    display_density?: boolean\n  }\n\n  export type discussion_board_user_settingsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"user_id\" | \"notification_email\" | \"notification_in_app\" | \"accessibility_mode\" | \"display_density\", ExtArgs[\"result\"][\"discussion_board_user_settings\"]>\n  export type discussion_board_user_settingsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_discussion_board_user_settings_user_id_discussion_board_users_id?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n  }\n  export type discussion_board_user_settingsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_discussion_board_user_settings_user_id_discussion_board_users_id?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n  }\n  export type discussion_board_user_settingsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_discussion_board_user_settings_user_id_discussion_board_users_id?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n  }\n\n  export type $discussion_board_user_settingsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussion_board_user_settings\"\n    objects: {\n      fk_discussion_board_user_settings_user_id_discussion_board_users_id: Prisma.$discussion_board_usersPayload<ExtArgs>\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key - Single settings record per user. Guarantees atomic, normalized storage without data duplication.\n       */\n      id: string\n      /**\n       * User Foreign Key - Connects each settings record uniquely to a user. Guarantees 1:1 mapping.\n       */\n      user_id: string\n      /**\n       * Email Notification Opt-in - Whether the user wants to receive email notifications. Implements a requirement for user controllable notification preferences; strictly atomic.\n       */\n      notification_email: boolean\n      /**\n       * In-app Notification Opt-in - User choice to receive in-app platform notifications. Normalized; no duplication.\n       */\n      notification_in_app: boolean\n      /**\n       * Accessibility Mode Setting - User choice for accessibility features (e.g., 'high_contrast', 'screen_reader'). Null if default. 3NF, atomic setting for UI/UX compliance.\n       */\n      accessibility_mode: string | null\n      /**\n       * Display Density Setting - User preferences for compact or spacious UI layouts. Atomic and normalized.\n       */\n      display_density: string | null\n    }, ExtArgs[\"result\"][\"discussion_board_user_settings\"]>\n    composites: {}\n  }\n\n  type discussion_board_user_settingsGetPayload<S extends boolean | null | undefined | discussion_board_user_settingsDefaultArgs> = $Result.GetResult<Prisma.$discussion_board_user_settingsPayload, S>\n\n  type discussion_board_user_settingsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussion_board_user_settingsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussion_board_user_settingsCountAggregateInputType | true\n    }\n\n  export interface discussion_board_user_settingsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussion_board_user_settings'], meta: { name: 'discussion_board_user_settings' } }\n    /**\n     * Find zero or one Discussion_board_user_settings that matches the filter.\n     * @param {discussion_board_user_settingsFindUniqueArgs} args - Arguments to find a Discussion_board_user_settings\n     * @example\n     * // Get one Discussion_board_user_settings\n     * const discussion_board_user_settings = await prisma.discussion_board_user_settings.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussion_board_user_settingsFindUniqueArgs>(args: SelectSubset<T, discussion_board_user_settingsFindUniqueArgs<ExtArgs>>): Prisma__discussion_board_user_settingsClient<$Result.GetResult<Prisma.$discussion_board_user_settingsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussion_board_user_settings that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussion_board_user_settingsFindUniqueOrThrowArgs} args - Arguments to find a Discussion_board_user_settings\n     * @example\n     * // Get one Discussion_board_user_settings\n     * const discussion_board_user_settings = await prisma.discussion_board_user_settings.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussion_board_user_settingsFindUniqueOrThrowArgs>(args: SelectSubset<T, discussion_board_user_settingsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussion_board_user_settingsClient<$Result.GetResult<Prisma.$discussion_board_user_settingsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_user_settings that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_user_settingsFindFirstArgs} args - Arguments to find a Discussion_board_user_settings\n     * @example\n     * // Get one Discussion_board_user_settings\n     * const discussion_board_user_settings = await prisma.discussion_board_user_settings.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussion_board_user_settingsFindFirstArgs>(args?: SelectSubset<T, discussion_board_user_settingsFindFirstArgs<ExtArgs>>): Prisma__discussion_board_user_settingsClient<$Result.GetResult<Prisma.$discussion_board_user_settingsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_user_settings that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_user_settingsFindFirstOrThrowArgs} args - Arguments to find a Discussion_board_user_settings\n     * @example\n     * // Get one Discussion_board_user_settings\n     * const discussion_board_user_settings = await prisma.discussion_board_user_settings.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussion_board_user_settingsFindFirstOrThrowArgs>(args?: SelectSubset<T, discussion_board_user_settingsFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussion_board_user_settingsClient<$Result.GetResult<Prisma.$discussion_board_user_settingsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussion_board_user_settings that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_user_settingsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussion_board_user_settings\n     * const discussion_board_user_settings = await prisma.discussion_board_user_settings.findMany()\n     * \n     * // Get first 10 Discussion_board_user_settings\n     * const discussion_board_user_settings = await prisma.discussion_board_user_settings.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussion_board_user_settingsWithIdOnly = await prisma.discussion_board_user_settings.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussion_board_user_settingsFindManyArgs>(args?: SelectSubset<T, discussion_board_user_settingsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_user_settingsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussion_board_user_settings.\n     * @param {discussion_board_user_settingsCreateArgs} args - Arguments to create a Discussion_board_user_settings.\n     * @example\n     * // Create one Discussion_board_user_settings\n     * const Discussion_board_user_settings = await prisma.discussion_board_user_settings.create({\n     *   data: {\n     *     // ... data to create a Discussion_board_user_settings\n     *   }\n     * })\n     * \n     */\n    create<T extends discussion_board_user_settingsCreateArgs>(args: SelectSubset<T, discussion_board_user_settingsCreateArgs<ExtArgs>>): Prisma__discussion_board_user_settingsClient<$Result.GetResult<Prisma.$discussion_board_user_settingsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussion_board_user_settings.\n     * @param {discussion_board_user_settingsCreateManyArgs} args - Arguments to create many Discussion_board_user_settings.\n     * @example\n     * // Create many Discussion_board_user_settings\n     * const discussion_board_user_settings = await prisma.discussion_board_user_settings.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussion_board_user_settingsCreateManyArgs>(args?: SelectSubset<T, discussion_board_user_settingsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussion_board_user_settings and returns the data saved in the database.\n     * @param {discussion_board_user_settingsCreateManyAndReturnArgs} args - Arguments to create many Discussion_board_user_settings.\n     * @example\n     * // Create many Discussion_board_user_settings\n     * const discussion_board_user_settings = await prisma.discussion_board_user_settings.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussion_board_user_settings and only return the `id`\n     * const discussion_board_user_settingsWithIdOnly = await prisma.discussion_board_user_settings.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussion_board_user_settingsCreateManyAndReturnArgs>(args?: SelectSubset<T, discussion_board_user_settingsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_user_settingsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussion_board_user_settings.\n     * @param {discussion_board_user_settingsDeleteArgs} args - Arguments to delete one Discussion_board_user_settings.\n     * @example\n     * // Delete one Discussion_board_user_settings\n     * const Discussion_board_user_settings = await prisma.discussion_board_user_settings.delete({\n     *   where: {\n     *     // ... filter to delete one Discussion_board_user_settings\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussion_board_user_settingsDeleteArgs>(args: SelectSubset<T, discussion_board_user_settingsDeleteArgs<ExtArgs>>): Prisma__discussion_board_user_settingsClient<$Result.GetResult<Prisma.$discussion_board_user_settingsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussion_board_user_settings.\n     * @param {discussion_board_user_settingsUpdateArgs} args - Arguments to update one Discussion_board_user_settings.\n     * @example\n     * // Update one Discussion_board_user_settings\n     * const discussion_board_user_settings = await prisma.discussion_board_user_settings.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussion_board_user_settingsUpdateArgs>(args: SelectSubset<T, discussion_board_user_settingsUpdateArgs<ExtArgs>>): Prisma__discussion_board_user_settingsClient<$Result.GetResult<Prisma.$discussion_board_user_settingsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussion_board_user_settings.\n     * @param {discussion_board_user_settingsDeleteManyArgs} args - Arguments to filter Discussion_board_user_settings to delete.\n     * @example\n     * // Delete a few Discussion_board_user_settings\n     * const { count } = await prisma.discussion_board_user_settings.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussion_board_user_settingsDeleteManyArgs>(args?: SelectSubset<T, discussion_board_user_settingsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_user_settings.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_user_settingsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussion_board_user_settings\n     * const discussion_board_user_settings = await prisma.discussion_board_user_settings.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussion_board_user_settingsUpdateManyArgs>(args: SelectSubset<T, discussion_board_user_settingsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_user_settings and returns the data updated in the database.\n     * @param {discussion_board_user_settingsUpdateManyAndReturnArgs} args - Arguments to update many Discussion_board_user_settings.\n     * @example\n     * // Update many Discussion_board_user_settings\n     * const discussion_board_user_settings = await prisma.discussion_board_user_settings.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussion_board_user_settings and only return the `id`\n     * const discussion_board_user_settingsWithIdOnly = await prisma.discussion_board_user_settings.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussion_board_user_settingsUpdateManyAndReturnArgs>(args: SelectSubset<T, discussion_board_user_settingsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_user_settingsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussion_board_user_settings.\n     * @param {discussion_board_user_settingsUpsertArgs} args - Arguments to update or create a Discussion_board_user_settings.\n     * @example\n     * // Update or create a Discussion_board_user_settings\n     * const discussion_board_user_settings = await prisma.discussion_board_user_settings.upsert({\n     *   create: {\n     *     // ... data to create a Discussion_board_user_settings\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussion_board_user_settings we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussion_board_user_settingsUpsertArgs>(args: SelectSubset<T, discussion_board_user_settingsUpsertArgs<ExtArgs>>): Prisma__discussion_board_user_settingsClient<$Result.GetResult<Prisma.$discussion_board_user_settingsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussion_board_user_settings.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_user_settingsCountArgs} args - Arguments to filter Discussion_board_user_settings to count.\n     * @example\n     * // Count the number of Discussion_board_user_settings\n     * const count = await prisma.discussion_board_user_settings.count({\n     *   where: {\n     *     // ... the filter for the Discussion_board_user_settings we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussion_board_user_settingsCountArgs>(\n      args?: Subset<T, discussion_board_user_settingsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussion_board_user_settingsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussion_board_user_settings.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussion_board_user_settingsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussion_board_user_settingsAggregateArgs>(args: Subset<T, Discussion_board_user_settingsAggregateArgs>): Prisma.PrismaPromise<GetDiscussion_board_user_settingsAggregateType<T>>\n\n    /**\n     * Group by Discussion_board_user_settings.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_user_settingsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussion_board_user_settingsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussion_board_user_settingsGroupByArgs['orderBy'] }\n        : { orderBy?: discussion_board_user_settingsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussion_board_user_settingsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussion_board_user_settingsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussion_board_user_settings model\n   */\n  readonly fields: discussion_board_user_settingsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussion_board_user_settings.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussion_board_user_settingsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    fk_discussion_board_user_settings_user_id_discussion_board_users_id<T extends discussion_board_usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_usersDefaultArgs<ExtArgs>>): Prisma__discussion_board_usersClient<$Result.GetResult<Prisma.$discussion_board_usersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussion_board_user_settings model\n   */\n  interface discussion_board_user_settingsFieldRefs {\n    readonly id: FieldRef<\"discussion_board_user_settings\", 'String'>\n    readonly user_id: FieldRef<\"discussion_board_user_settings\", 'String'>\n    readonly notification_email: FieldRef<\"discussion_board_user_settings\", 'Boolean'>\n    readonly notification_in_app: FieldRef<\"discussion_board_user_settings\", 'Boolean'>\n    readonly accessibility_mode: FieldRef<\"discussion_board_user_settings\", 'String'>\n    readonly display_density: FieldRef<\"discussion_board_user_settings\", 'String'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussion_board_user_settings findUnique\n   */\n  export type discussion_board_user_settingsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_user_settings\n     */\n    select?: discussion_board_user_settingsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_user_settings\n     */\n    omit?: discussion_board_user_settingsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_user_settingsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_user_settings to fetch.\n     */\n    where: discussion_board_user_settingsWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_user_settings findUniqueOrThrow\n   */\n  export type discussion_board_user_settingsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_user_settings\n     */\n    select?: discussion_board_user_settingsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_user_settings\n     */\n    omit?: discussion_board_user_settingsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_user_settingsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_user_settings to fetch.\n     */\n    where: discussion_board_user_settingsWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_user_settings findFirst\n   */\n  export type discussion_board_user_settingsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_user_settings\n     */\n    select?: discussion_board_user_settingsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_user_settings\n     */\n    omit?: discussion_board_user_settingsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_user_settingsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_user_settings to fetch.\n     */\n    where?: discussion_board_user_settingsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_user_settings to fetch.\n     */\n    orderBy?: discussion_board_user_settingsOrderByWithRelationInput | discussion_board_user_settingsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_user_settings.\n     */\n    cursor?: discussion_board_user_settingsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_user_settings from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_user_settings.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_user_settings.\n     */\n    distinct?: Discussion_board_user_settingsScalarFieldEnum | Discussion_board_user_settingsScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_user_settings findFirstOrThrow\n   */\n  export type discussion_board_user_settingsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_user_settings\n     */\n    select?: discussion_board_user_settingsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_user_settings\n     */\n    omit?: discussion_board_user_settingsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_user_settingsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_user_settings to fetch.\n     */\n    where?: discussion_board_user_settingsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_user_settings to fetch.\n     */\n    orderBy?: discussion_board_user_settingsOrderByWithRelationInput | discussion_board_user_settingsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_user_settings.\n     */\n    cursor?: discussion_board_user_settingsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_user_settings from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_user_settings.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_user_settings.\n     */\n    distinct?: Discussion_board_user_settingsScalarFieldEnum | Discussion_board_user_settingsScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_user_settings findMany\n   */\n  export type discussion_board_user_settingsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_user_settings\n     */\n    select?: discussion_board_user_settingsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_user_settings\n     */\n    omit?: discussion_board_user_settingsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_user_settingsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_user_settings to fetch.\n     */\n    where?: discussion_board_user_settingsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_user_settings to fetch.\n     */\n    orderBy?: discussion_board_user_settingsOrderByWithRelationInput | discussion_board_user_settingsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussion_board_user_settings.\n     */\n    cursor?: discussion_board_user_settingsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_user_settings from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_user_settings.\n     */\n    skip?: number\n    distinct?: Discussion_board_user_settingsScalarFieldEnum | Discussion_board_user_settingsScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_user_settings create\n   */\n  export type discussion_board_user_settingsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_user_settings\n     */\n    select?: discussion_board_user_settingsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_user_settings\n     */\n    omit?: discussion_board_user_settingsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_user_settingsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussion_board_user_settings.\n     */\n    data: XOR<discussion_board_user_settingsCreateInput, discussion_board_user_settingsUncheckedCreateInput>\n  }\n\n  /**\n   * discussion_board_user_settings createMany\n   */\n  export type discussion_board_user_settingsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussion_board_user_settings.\n     */\n    data: discussion_board_user_settingsCreateManyInput | discussion_board_user_settingsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussion_board_user_settings createManyAndReturn\n   */\n  export type discussion_board_user_settingsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_user_settings\n     */\n    select?: discussion_board_user_settingsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_user_settings\n     */\n    omit?: discussion_board_user_settingsOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussion_board_user_settings.\n     */\n    data: discussion_board_user_settingsCreateManyInput | discussion_board_user_settingsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_user_settingsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_user_settings update\n   */\n  export type discussion_board_user_settingsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_user_settings\n     */\n    select?: discussion_board_user_settingsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_user_settings\n     */\n    omit?: discussion_board_user_settingsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_user_settingsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussion_board_user_settings.\n     */\n    data: XOR<discussion_board_user_settingsUpdateInput, discussion_board_user_settingsUncheckedUpdateInput>\n    /**\n     * Choose, which discussion_board_user_settings to update.\n     */\n    where: discussion_board_user_settingsWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_user_settings updateMany\n   */\n  export type discussion_board_user_settingsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussion_board_user_settings.\n     */\n    data: XOR<discussion_board_user_settingsUpdateManyMutationInput, discussion_board_user_settingsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_user_settings to update\n     */\n    where?: discussion_board_user_settingsWhereInput\n    /**\n     * Limit how many discussion_board_user_settings to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_user_settings updateManyAndReturn\n   */\n  export type discussion_board_user_settingsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_user_settings\n     */\n    select?: discussion_board_user_settingsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_user_settings\n     */\n    omit?: discussion_board_user_settingsOmit<ExtArgs> | null\n    /**\n     * The data used to update discussion_board_user_settings.\n     */\n    data: XOR<discussion_board_user_settingsUpdateManyMutationInput, discussion_board_user_settingsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_user_settings to update\n     */\n    where?: discussion_board_user_settingsWhereInput\n    /**\n     * Limit how many discussion_board_user_settings to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_user_settingsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_user_settings upsert\n   */\n  export type discussion_board_user_settingsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_user_settings\n     */\n    select?: discussion_board_user_settingsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_user_settings\n     */\n    omit?: discussion_board_user_settingsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_user_settingsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussion_board_user_settings to update in case it exists.\n     */\n    where: discussion_board_user_settingsWhereUniqueInput\n    /**\n     * In case the discussion_board_user_settings found by the `where` argument doesn't exist, create a new discussion_board_user_settings with this data.\n     */\n    create: XOR<discussion_board_user_settingsCreateInput, discussion_board_user_settingsUncheckedCreateInput>\n    /**\n     * In case the discussion_board_user_settings was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussion_board_user_settingsUpdateInput, discussion_board_user_settingsUncheckedUpdateInput>\n  }\n\n  /**\n   * discussion_board_user_settings delete\n   */\n  export type discussion_board_user_settingsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_user_settings\n     */\n    select?: discussion_board_user_settingsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_user_settings\n     */\n    omit?: discussion_board_user_settingsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_user_settingsInclude<ExtArgs> | null\n    /**\n     * Filter which discussion_board_user_settings to delete.\n     */\n    where: discussion_board_user_settingsWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_user_settings deleteMany\n   */\n  export type discussion_board_user_settingsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_user_settings to delete\n     */\n    where?: discussion_board_user_settingsWhereInput\n    /**\n     * Limit how many discussion_board_user_settings to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_user_settings without action\n   */\n  export type discussion_board_user_settingsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_user_settings\n     */\n    select?: discussion_board_user_settingsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_user_settings\n     */\n    omit?: discussion_board_user_settingsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_user_settingsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussion_board_thread\n   */\n\n  export type AggregateDiscussion_board_thread = {\n    _count: Discussion_board_threadCountAggregateOutputType | null\n    _min: Discussion_board_threadMinAggregateOutputType | null\n    _max: Discussion_board_threadMaxAggregateOutputType | null\n  }\n\n  export type Discussion_board_threadMinAggregateOutputType = {\n    id: string | null\n    creator_user_id: string | null\n    category_id: string | null\n    title: string | null\n    body: string | null\n    is_locked: boolean | null\n    is_pinned: boolean | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Discussion_board_threadMaxAggregateOutputType = {\n    id: string | null\n    creator_user_id: string | null\n    category_id: string | null\n    title: string | null\n    body: string | null\n    is_locked: boolean | null\n    is_pinned: boolean | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Discussion_board_threadCountAggregateOutputType = {\n    id: number\n    creator_user_id: number\n    category_id: number\n    title: number\n    body: number\n    is_locked: number\n    is_pinned: number\n    created_at: number\n    updated_at: number\n    deleted_at: number\n    _all: number\n  }\n\n\n  export type Discussion_board_threadMinAggregateInputType = {\n    id?: true\n    creator_user_id?: true\n    category_id?: true\n    title?: true\n    body?: true\n    is_locked?: true\n    is_pinned?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Discussion_board_threadMaxAggregateInputType = {\n    id?: true\n    creator_user_id?: true\n    category_id?: true\n    title?: true\n    body?: true\n    is_locked?: true\n    is_pinned?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Discussion_board_threadCountAggregateInputType = {\n    id?: true\n    creator_user_id?: true\n    category_id?: true\n    title?: true\n    body?: true\n    is_locked?: true\n    is_pinned?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n    _all?: true\n  }\n\n  export type Discussion_board_threadAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_thread to aggregate.\n     */\n    where?: discussion_board_threadWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_threads to fetch.\n     */\n    orderBy?: discussion_board_threadOrderByWithRelationInput | discussion_board_threadOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussion_board_threadWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_threads from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_threads.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussion_board_threads\n    **/\n    _count?: true | Discussion_board_threadCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussion_board_threadMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussion_board_threadMaxAggregateInputType\n  }\n\n  export type GetDiscussion_board_threadAggregateType<T extends Discussion_board_threadAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussion_board_thread]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussion_board_thread[P]>\n      : GetScalarType<T[P], AggregateDiscussion_board_thread[P]>\n  }\n\n\n\n\n  export type discussion_board_threadGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_threadWhereInput\n    orderBy?: discussion_board_threadOrderByWithAggregationInput | discussion_board_threadOrderByWithAggregationInput[]\n    by: Discussion_board_threadScalarFieldEnum[] | Discussion_board_threadScalarFieldEnum\n    having?: discussion_board_threadScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussion_board_threadCountAggregateInputType | true\n    _min?: Discussion_board_threadMinAggregateInputType\n    _max?: Discussion_board_threadMaxAggregateInputType\n  }\n\n  export type Discussion_board_threadGroupByOutputType = {\n    id: string\n    creator_user_id: string\n    category_id: string\n    title: string\n    body: string\n    is_locked: boolean\n    is_pinned: boolean\n    created_at: Date\n    updated_at: Date\n    deleted_at: Date | null\n    _count: Discussion_board_threadCountAggregateOutputType | null\n    _min: Discussion_board_threadMinAggregateOutputType | null\n    _max: Discussion_board_threadMaxAggregateOutputType | null\n  }\n\n  type GetDiscussion_board_threadGroupByPayload<T extends discussion_board_threadGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussion_board_threadGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussion_board_threadGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussion_board_threadGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussion_board_threadGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussion_board_threadSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    creator_user_id?: boolean\n    category_id?: boolean\n    title?: boolean\n    body?: boolean\n    is_locked?: boolean\n    is_pinned?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    creator_user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    category?: boolean | discussion_board_thread_categoryDefaultArgs<ExtArgs>\n    discussion_board_post?: boolean | discussion_board_thread$discussion_board_postArgs<ExtArgs>\n    discussion_board_thread_tag?: boolean | discussion_board_thread$discussion_board_thread_tagArgs<ExtArgs>\n    mv_discussion_thread_activity?: boolean | discussion_board_thread$mv_discussion_thread_activityArgs<ExtArgs>\n    discussion_board_vote?: boolean | discussion_board_thread$discussion_board_voteArgs<ExtArgs>\n    discussion_board_reaction?: boolean | discussion_board_thread$discussion_board_reactionArgs<ExtArgs>\n    discussion_board_bookmark?: boolean | discussion_board_thread$discussion_board_bookmarkArgs<ExtArgs>\n    discussion_board_notification?: boolean | discussion_board_thread$discussion_board_notificationArgs<ExtArgs>\n    discussion_board_subscription?: boolean | discussion_board_thread$discussion_board_subscriptionArgs<ExtArgs>\n    discussion_board_report?: boolean | discussion_board_thread$discussion_board_reportArgs<ExtArgs>\n    discussion_board_moderator_action?: boolean | discussion_board_thread$discussion_board_moderator_actionArgs<ExtArgs>\n    discussion_board_warning?: boolean | discussion_board_thread$discussion_board_warningArgs<ExtArgs>\n    discussion_board_thread_stats?: boolean | discussion_board_thread$discussion_board_thread_statsArgs<ExtArgs>\n    _count?: boolean | Discussion_board_threadCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_thread\"]>\n\n  export type discussion_board_threadSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    creator_user_id?: boolean\n    category_id?: boolean\n    title?: boolean\n    body?: boolean\n    is_locked?: boolean\n    is_pinned?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    creator_user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    category?: boolean | discussion_board_thread_categoryDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_thread\"]>\n\n  export type discussion_board_threadSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    creator_user_id?: boolean\n    category_id?: boolean\n    title?: boolean\n    body?: boolean\n    is_locked?: boolean\n    is_pinned?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    creator_user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    category?: boolean | discussion_board_thread_categoryDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_thread\"]>\n\n  export type discussion_board_threadSelectScalar = {\n    id?: boolean\n    creator_user_id?: boolean\n    category_id?: boolean\n    title?: boolean\n    body?: boolean\n    is_locked?: boolean\n    is_pinned?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }\n\n  export type discussion_board_threadOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"creator_user_id\" | \"category_id\" | \"title\" | \"body\" | \"is_locked\" | \"is_pinned\" | \"created_at\" | \"updated_at\" | \"deleted_at\", ExtArgs[\"result\"][\"discussion_board_thread\"]>\n  export type discussion_board_threadInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    creator_user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    category?: boolean | discussion_board_thread_categoryDefaultArgs<ExtArgs>\n    discussion_board_post?: boolean | discussion_board_thread$discussion_board_postArgs<ExtArgs>\n    discussion_board_thread_tag?: boolean | discussion_board_thread$discussion_board_thread_tagArgs<ExtArgs>\n    mv_discussion_thread_activity?: boolean | discussion_board_thread$mv_discussion_thread_activityArgs<ExtArgs>\n    discussion_board_vote?: boolean | discussion_board_thread$discussion_board_voteArgs<ExtArgs>\n    discussion_board_reaction?: boolean | discussion_board_thread$discussion_board_reactionArgs<ExtArgs>\n    discussion_board_bookmark?: boolean | discussion_board_thread$discussion_board_bookmarkArgs<ExtArgs>\n    discussion_board_notification?: boolean | discussion_board_thread$discussion_board_notificationArgs<ExtArgs>\n    discussion_board_subscription?: boolean | discussion_board_thread$discussion_board_subscriptionArgs<ExtArgs>\n    discussion_board_report?: boolean | discussion_board_thread$discussion_board_reportArgs<ExtArgs>\n    discussion_board_moderator_action?: boolean | discussion_board_thread$discussion_board_moderator_actionArgs<ExtArgs>\n    discussion_board_warning?: boolean | discussion_board_thread$discussion_board_warningArgs<ExtArgs>\n    discussion_board_thread_stats?: boolean | discussion_board_thread$discussion_board_thread_statsArgs<ExtArgs>\n    _count?: boolean | Discussion_board_threadCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type discussion_board_threadIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    creator_user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    category?: boolean | discussion_board_thread_categoryDefaultArgs<ExtArgs>\n  }\n  export type discussion_board_threadIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    creator_user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    category?: boolean | discussion_board_thread_categoryDefaultArgs<ExtArgs>\n  }\n\n  export type $discussion_board_threadPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussion_board_thread\"\n    objects: {\n      creator_user: Prisma.$discussion_board_usersPayload<ExtArgs>\n      category: Prisma.$discussion_board_thread_categoryPayload<ExtArgs>\n      discussion_board_post: Prisma.$discussion_board_postPayload<ExtArgs>[]\n      discussion_board_thread_tag: Prisma.$discussion_board_thread_tagPayload<ExtArgs>[]\n      mv_discussion_thread_activity: Prisma.$mv_discussion_thread_activityPayload<ExtArgs> | null\n      discussion_board_vote: Prisma.$discussion_board_votePayload<ExtArgs>[]\n      discussion_board_reaction: Prisma.$discussion_board_reactionPayload<ExtArgs>[]\n      discussion_board_bookmark: Prisma.$discussion_board_bookmarkPayload<ExtArgs>[]\n      discussion_board_notification: Prisma.$discussion_board_notificationPayload<ExtArgs>[]\n      discussion_board_subscription: Prisma.$discussion_board_subscriptionPayload<ExtArgs>[]\n      discussion_board_report: Prisma.$discussion_board_reportPayload<ExtArgs>[]\n      discussion_board_moderator_action: Prisma.$discussion_board_moderator_actionPayload<ExtArgs>[]\n      discussion_board_warning: Prisma.$discussion_board_warningPayload<ExtArgs>[]\n      discussion_board_thread_stats: Prisma.$discussion_board_thread_statsPayload<ExtArgs> | null\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * [Thread unique identifier] - Primary key. Atomic and singular. Used for all thread references.\n       */\n      id: string\n      /**\n       * [Thread creator reference] - References thread creator, separating author data from thread content.\n       */\n      creator_user_id: string\n      /**\n       * [Thread category reference] - Links thread to category for filtering/grouping.\n       */\n      category_id: string\n      /**\n       * [Thread title] - Atomic, non-derived. E.g., 'Election Impact Discussion'.\n       */\n      title: string\n      /**\n       * [Thread body content] - Initial post, atomic, not derived.\n       */\n      body: string\n      /**\n       * [Lock flag] - Thread lock for moderation (true=locked).\n       */\n      is_locked: boolean\n      /**\n       * [Pin flag] - Thread highlight at top (true=pinned).\n       */\n      is_pinned: boolean\n      /**\n       * [Created timestamp] - Atomic event timestamp.\n       */\n      created_at: Date\n      /**\n       * [Last updated timestamp] - Audit trail support.\n       */\n      updated_at: Date\n      /**\n       * [Deletion timestamp] - Soft deletion for compliance.\n       */\n      deleted_at: Date | null\n    }, ExtArgs[\"result\"][\"discussion_board_thread\"]>\n    composites: {}\n  }\n\n  type discussion_board_threadGetPayload<S extends boolean | null | undefined | discussion_board_threadDefaultArgs> = $Result.GetResult<Prisma.$discussion_board_threadPayload, S>\n\n  type discussion_board_threadCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussion_board_threadFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussion_board_threadCountAggregateInputType | true\n    }\n\n  export interface discussion_board_threadDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussion_board_thread'], meta: { name: 'discussion_board_thread' } }\n    /**\n     * Find zero or one Discussion_board_thread that matches the filter.\n     * @param {discussion_board_threadFindUniqueArgs} args - Arguments to find a Discussion_board_thread\n     * @example\n     * // Get one Discussion_board_thread\n     * const discussion_board_thread = await prisma.discussion_board_thread.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussion_board_threadFindUniqueArgs>(args: SelectSubset<T, discussion_board_threadFindUniqueArgs<ExtArgs>>): Prisma__discussion_board_threadClient<$Result.GetResult<Prisma.$discussion_board_threadPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussion_board_thread that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussion_board_threadFindUniqueOrThrowArgs} args - Arguments to find a Discussion_board_thread\n     * @example\n     * // Get one Discussion_board_thread\n     * const discussion_board_thread = await prisma.discussion_board_thread.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussion_board_threadFindUniqueOrThrowArgs>(args: SelectSubset<T, discussion_board_threadFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussion_board_threadClient<$Result.GetResult<Prisma.$discussion_board_threadPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_thread that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_threadFindFirstArgs} args - Arguments to find a Discussion_board_thread\n     * @example\n     * // Get one Discussion_board_thread\n     * const discussion_board_thread = await prisma.discussion_board_thread.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussion_board_threadFindFirstArgs>(args?: SelectSubset<T, discussion_board_threadFindFirstArgs<ExtArgs>>): Prisma__discussion_board_threadClient<$Result.GetResult<Prisma.$discussion_board_threadPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_thread that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_threadFindFirstOrThrowArgs} args - Arguments to find a Discussion_board_thread\n     * @example\n     * // Get one Discussion_board_thread\n     * const discussion_board_thread = await prisma.discussion_board_thread.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussion_board_threadFindFirstOrThrowArgs>(args?: SelectSubset<T, discussion_board_threadFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussion_board_threadClient<$Result.GetResult<Prisma.$discussion_board_threadPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussion_board_threads that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_threadFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussion_board_threads\n     * const discussion_board_threads = await prisma.discussion_board_thread.findMany()\n     * \n     * // Get first 10 Discussion_board_threads\n     * const discussion_board_threads = await prisma.discussion_board_thread.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussion_board_threadWithIdOnly = await prisma.discussion_board_thread.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussion_board_threadFindManyArgs>(args?: SelectSubset<T, discussion_board_threadFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_threadPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussion_board_thread.\n     * @param {discussion_board_threadCreateArgs} args - Arguments to create a Discussion_board_thread.\n     * @example\n     * // Create one Discussion_board_thread\n     * const Discussion_board_thread = await prisma.discussion_board_thread.create({\n     *   data: {\n     *     // ... data to create a Discussion_board_thread\n     *   }\n     * })\n     * \n     */\n    create<T extends discussion_board_threadCreateArgs>(args: SelectSubset<T, discussion_board_threadCreateArgs<ExtArgs>>): Prisma__discussion_board_threadClient<$Result.GetResult<Prisma.$discussion_board_threadPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussion_board_threads.\n     * @param {discussion_board_threadCreateManyArgs} args - Arguments to create many Discussion_board_threads.\n     * @example\n     * // Create many Discussion_board_threads\n     * const discussion_board_thread = await prisma.discussion_board_thread.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussion_board_threadCreateManyArgs>(args?: SelectSubset<T, discussion_board_threadCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussion_board_threads and returns the data saved in the database.\n     * @param {discussion_board_threadCreateManyAndReturnArgs} args - Arguments to create many Discussion_board_threads.\n     * @example\n     * // Create many Discussion_board_threads\n     * const discussion_board_thread = await prisma.discussion_board_thread.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussion_board_threads and only return the `id`\n     * const discussion_board_threadWithIdOnly = await prisma.discussion_board_thread.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussion_board_threadCreateManyAndReturnArgs>(args?: SelectSubset<T, discussion_board_threadCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_threadPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussion_board_thread.\n     * @param {discussion_board_threadDeleteArgs} args - Arguments to delete one Discussion_board_thread.\n     * @example\n     * // Delete one Discussion_board_thread\n     * const Discussion_board_thread = await prisma.discussion_board_thread.delete({\n     *   where: {\n     *     // ... filter to delete one Discussion_board_thread\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussion_board_threadDeleteArgs>(args: SelectSubset<T, discussion_board_threadDeleteArgs<ExtArgs>>): Prisma__discussion_board_threadClient<$Result.GetResult<Prisma.$discussion_board_threadPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussion_board_thread.\n     * @param {discussion_board_threadUpdateArgs} args - Arguments to update one Discussion_board_thread.\n     * @example\n     * // Update one Discussion_board_thread\n     * const discussion_board_thread = await prisma.discussion_board_thread.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussion_board_threadUpdateArgs>(args: SelectSubset<T, discussion_board_threadUpdateArgs<ExtArgs>>): Prisma__discussion_board_threadClient<$Result.GetResult<Prisma.$discussion_board_threadPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussion_board_threads.\n     * @param {discussion_board_threadDeleteManyArgs} args - Arguments to filter Discussion_board_threads to delete.\n     * @example\n     * // Delete a few Discussion_board_threads\n     * const { count } = await prisma.discussion_board_thread.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussion_board_threadDeleteManyArgs>(args?: SelectSubset<T, discussion_board_threadDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_threads.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_threadUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussion_board_threads\n     * const discussion_board_thread = await prisma.discussion_board_thread.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussion_board_threadUpdateManyArgs>(args: SelectSubset<T, discussion_board_threadUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_threads and returns the data updated in the database.\n     * @param {discussion_board_threadUpdateManyAndReturnArgs} args - Arguments to update many Discussion_board_threads.\n     * @example\n     * // Update many Discussion_board_threads\n     * const discussion_board_thread = await prisma.discussion_board_thread.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussion_board_threads and only return the `id`\n     * const discussion_board_threadWithIdOnly = await prisma.discussion_board_thread.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussion_board_threadUpdateManyAndReturnArgs>(args: SelectSubset<T, discussion_board_threadUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_threadPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussion_board_thread.\n     * @param {discussion_board_threadUpsertArgs} args - Arguments to update or create a Discussion_board_thread.\n     * @example\n     * // Update or create a Discussion_board_thread\n     * const discussion_board_thread = await prisma.discussion_board_thread.upsert({\n     *   create: {\n     *     // ... data to create a Discussion_board_thread\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussion_board_thread we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussion_board_threadUpsertArgs>(args: SelectSubset<T, discussion_board_threadUpsertArgs<ExtArgs>>): Prisma__discussion_board_threadClient<$Result.GetResult<Prisma.$discussion_board_threadPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussion_board_threads.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_threadCountArgs} args - Arguments to filter Discussion_board_threads to count.\n     * @example\n     * // Count the number of Discussion_board_threads\n     * const count = await prisma.discussion_board_thread.count({\n     *   where: {\n     *     // ... the filter for the Discussion_board_threads we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussion_board_threadCountArgs>(\n      args?: Subset<T, discussion_board_threadCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussion_board_threadCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussion_board_thread.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussion_board_threadAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussion_board_threadAggregateArgs>(args: Subset<T, Discussion_board_threadAggregateArgs>): Prisma.PrismaPromise<GetDiscussion_board_threadAggregateType<T>>\n\n    /**\n     * Group by Discussion_board_thread.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_threadGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussion_board_threadGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussion_board_threadGroupByArgs['orderBy'] }\n        : { orderBy?: discussion_board_threadGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussion_board_threadGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussion_board_threadGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussion_board_thread model\n   */\n  readonly fields: discussion_board_threadFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussion_board_thread.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussion_board_threadClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    creator_user<T extends discussion_board_usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_usersDefaultArgs<ExtArgs>>): Prisma__discussion_board_usersClient<$Result.GetResult<Prisma.$discussion_board_usersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    category<T extends discussion_board_thread_categoryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_thread_categoryDefaultArgs<ExtArgs>>): Prisma__discussion_board_thread_categoryClient<$Result.GetResult<Prisma.$discussion_board_thread_categoryPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    discussion_board_post<T extends discussion_board_thread$discussion_board_postArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_thread$discussion_board_postArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_postPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_thread_tag<T extends discussion_board_thread$discussion_board_thread_tagArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_thread$discussion_board_thread_tagArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_thread_tagPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    mv_discussion_thread_activity<T extends discussion_board_thread$mv_discussion_thread_activityArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_thread$mv_discussion_thread_activityArgs<ExtArgs>>): Prisma__mv_discussion_thread_activityClient<$Result.GetResult<Prisma.$mv_discussion_thread_activityPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    discussion_board_vote<T extends discussion_board_thread$discussion_board_voteArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_thread$discussion_board_voteArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_votePayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_reaction<T extends discussion_board_thread$discussion_board_reactionArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_thread$discussion_board_reactionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_reactionPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_bookmark<T extends discussion_board_thread$discussion_board_bookmarkArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_thread$discussion_board_bookmarkArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_bookmarkPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_notification<T extends discussion_board_thread$discussion_board_notificationArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_thread$discussion_board_notificationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_notificationPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_subscription<T extends discussion_board_thread$discussion_board_subscriptionArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_thread$discussion_board_subscriptionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_subscriptionPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_report<T extends discussion_board_thread$discussion_board_reportArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_thread$discussion_board_reportArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_reportPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_moderator_action<T extends discussion_board_thread$discussion_board_moderator_actionArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_thread$discussion_board_moderator_actionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_moderator_actionPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_warning<T extends discussion_board_thread$discussion_board_warningArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_thread$discussion_board_warningArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_warningPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_thread_stats<T extends discussion_board_thread$discussion_board_thread_statsArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_thread$discussion_board_thread_statsArgs<ExtArgs>>): Prisma__discussion_board_thread_statsClient<$Result.GetResult<Prisma.$discussion_board_thread_statsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussion_board_thread model\n   */\n  interface discussion_board_threadFieldRefs {\n    readonly id: FieldRef<\"discussion_board_thread\", 'String'>\n    readonly creator_user_id: FieldRef<\"discussion_board_thread\", 'String'>\n    readonly category_id: FieldRef<\"discussion_board_thread\", 'String'>\n    readonly title: FieldRef<\"discussion_board_thread\", 'String'>\n    readonly body: FieldRef<\"discussion_board_thread\", 'String'>\n    readonly is_locked: FieldRef<\"discussion_board_thread\", 'Boolean'>\n    readonly is_pinned: FieldRef<\"discussion_board_thread\", 'Boolean'>\n    readonly created_at: FieldRef<\"discussion_board_thread\", 'DateTime'>\n    readonly updated_at: FieldRef<\"discussion_board_thread\", 'DateTime'>\n    readonly deleted_at: FieldRef<\"discussion_board_thread\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussion_board_thread findUnique\n   */\n  export type discussion_board_threadFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread\n     */\n    select?: discussion_board_threadSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread\n     */\n    omit?: discussion_board_threadOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_threadInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_thread to fetch.\n     */\n    where: discussion_board_threadWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_thread findUniqueOrThrow\n   */\n  export type discussion_board_threadFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread\n     */\n    select?: discussion_board_threadSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread\n     */\n    omit?: discussion_board_threadOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_threadInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_thread to fetch.\n     */\n    where: discussion_board_threadWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_thread findFirst\n   */\n  export type discussion_board_threadFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread\n     */\n    select?: discussion_board_threadSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread\n     */\n    omit?: discussion_board_threadOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_threadInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_thread to fetch.\n     */\n    where?: discussion_board_threadWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_threads to fetch.\n     */\n    orderBy?: discussion_board_threadOrderByWithRelationInput | discussion_board_threadOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_threads.\n     */\n    cursor?: discussion_board_threadWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_threads from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_threads.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_threads.\n     */\n    distinct?: Discussion_board_threadScalarFieldEnum | Discussion_board_threadScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_thread findFirstOrThrow\n   */\n  export type discussion_board_threadFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread\n     */\n    select?: discussion_board_threadSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread\n     */\n    omit?: discussion_board_threadOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_threadInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_thread to fetch.\n     */\n    where?: discussion_board_threadWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_threads to fetch.\n     */\n    orderBy?: discussion_board_threadOrderByWithRelationInput | discussion_board_threadOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_threads.\n     */\n    cursor?: discussion_board_threadWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_threads from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_threads.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_threads.\n     */\n    distinct?: Discussion_board_threadScalarFieldEnum | Discussion_board_threadScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_thread findMany\n   */\n  export type discussion_board_threadFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread\n     */\n    select?: discussion_board_threadSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread\n     */\n    omit?: discussion_board_threadOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_threadInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_threads to fetch.\n     */\n    where?: discussion_board_threadWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_threads to fetch.\n     */\n    orderBy?: discussion_board_threadOrderByWithRelationInput | discussion_board_threadOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussion_board_threads.\n     */\n    cursor?: discussion_board_threadWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_threads from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_threads.\n     */\n    skip?: number\n    distinct?: Discussion_board_threadScalarFieldEnum | Discussion_board_threadScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_thread create\n   */\n  export type discussion_board_threadCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread\n     */\n    select?: discussion_board_threadSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread\n     */\n    omit?: discussion_board_threadOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_threadInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussion_board_thread.\n     */\n    data: XOR<discussion_board_threadCreateInput, discussion_board_threadUncheckedCreateInput>\n  }\n\n  /**\n   * discussion_board_thread createMany\n   */\n  export type discussion_board_threadCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussion_board_threads.\n     */\n    data: discussion_board_threadCreateManyInput | discussion_board_threadCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussion_board_thread createManyAndReturn\n   */\n  export type discussion_board_threadCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread\n     */\n    select?: discussion_board_threadSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread\n     */\n    omit?: discussion_board_threadOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussion_board_threads.\n     */\n    data: discussion_board_threadCreateManyInput | discussion_board_threadCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_threadIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_thread update\n   */\n  export type discussion_board_threadUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread\n     */\n    select?: discussion_board_threadSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread\n     */\n    omit?: discussion_board_threadOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_threadInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussion_board_thread.\n     */\n    data: XOR<discussion_board_threadUpdateInput, discussion_board_threadUncheckedUpdateInput>\n    /**\n     * Choose, which discussion_board_thread to update.\n     */\n    where: discussion_board_threadWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_thread updateMany\n   */\n  export type discussion_board_threadUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussion_board_threads.\n     */\n    data: XOR<discussion_board_threadUpdateManyMutationInput, discussion_board_threadUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_threads to update\n     */\n    where?: discussion_board_threadWhereInput\n    /**\n     * Limit how many discussion_board_threads to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_thread updateManyAndReturn\n   */\n  export type discussion_board_threadUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread\n     */\n    select?: discussion_board_threadSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread\n     */\n    omit?: discussion_board_threadOmit<ExtArgs> | null\n    /**\n     * The data used to update discussion_board_threads.\n     */\n    data: XOR<discussion_board_threadUpdateManyMutationInput, discussion_board_threadUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_threads to update\n     */\n    where?: discussion_board_threadWhereInput\n    /**\n     * Limit how many discussion_board_threads to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_threadIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_thread upsert\n   */\n  export type discussion_board_threadUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread\n     */\n    select?: discussion_board_threadSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread\n     */\n    omit?: discussion_board_threadOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_threadInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussion_board_thread to update in case it exists.\n     */\n    where: discussion_board_threadWhereUniqueInput\n    /**\n     * In case the discussion_board_thread found by the `where` argument doesn't exist, create a new discussion_board_thread with this data.\n     */\n    create: XOR<discussion_board_threadCreateInput, discussion_board_threadUncheckedCreateInput>\n    /**\n     * In case the discussion_board_thread was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussion_board_threadUpdateInput, discussion_board_threadUncheckedUpdateInput>\n  }\n\n  /**\n   * discussion_board_thread delete\n   */\n  export type discussion_board_threadDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread\n     */\n    select?: discussion_board_threadSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread\n     */\n    omit?: discussion_board_threadOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_threadInclude<ExtArgs> | null\n    /**\n     * Filter which discussion_board_thread to delete.\n     */\n    where: discussion_board_threadWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_thread deleteMany\n   */\n  export type discussion_board_threadDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_threads to delete\n     */\n    where?: discussion_board_threadWhereInput\n    /**\n     * Limit how many discussion_board_threads to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_thread.discussion_board_post\n   */\n  export type discussion_board_thread$discussion_board_postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_post\n     */\n    select?: discussion_board_postSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_post\n     */\n    omit?: discussion_board_postOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_postInclude<ExtArgs> | null\n    where?: discussion_board_postWhereInput\n    orderBy?: discussion_board_postOrderByWithRelationInput | discussion_board_postOrderByWithRelationInput[]\n    cursor?: discussion_board_postWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_postScalarFieldEnum | Discussion_board_postScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_thread.discussion_board_thread_tag\n   */\n  export type discussion_board_thread$discussion_board_thread_tagArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread_tag\n     */\n    select?: discussion_board_thread_tagSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread_tag\n     */\n    omit?: discussion_board_thread_tagOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_thread_tagInclude<ExtArgs> | null\n    where?: discussion_board_thread_tagWhereInput\n    orderBy?: discussion_board_thread_tagOrderByWithRelationInput | discussion_board_thread_tagOrderByWithRelationInput[]\n    cursor?: discussion_board_thread_tagWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_thread_tagScalarFieldEnum | Discussion_board_thread_tagScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_thread.mv_discussion_thread_activity\n   */\n  export type discussion_board_thread$mv_discussion_thread_activityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the mv_discussion_thread_activity\n     */\n    select?: mv_discussion_thread_activitySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the mv_discussion_thread_activity\n     */\n    omit?: mv_discussion_thread_activityOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: mv_discussion_thread_activityInclude<ExtArgs> | null\n    where?: mv_discussion_thread_activityWhereInput\n  }\n\n  /**\n   * discussion_board_thread.discussion_board_vote\n   */\n  export type discussion_board_thread$discussion_board_voteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_vote\n     */\n    select?: discussion_board_voteSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_vote\n     */\n    omit?: discussion_board_voteOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_voteInclude<ExtArgs> | null\n    where?: discussion_board_voteWhereInput\n    orderBy?: discussion_board_voteOrderByWithRelationInput | discussion_board_voteOrderByWithRelationInput[]\n    cursor?: discussion_board_voteWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_voteScalarFieldEnum | Discussion_board_voteScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_thread.discussion_board_reaction\n   */\n  export type discussion_board_thread$discussion_board_reactionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_reaction\n     */\n    select?: discussion_board_reactionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_reaction\n     */\n    omit?: discussion_board_reactionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_reactionInclude<ExtArgs> | null\n    where?: discussion_board_reactionWhereInput\n    orderBy?: discussion_board_reactionOrderByWithRelationInput | discussion_board_reactionOrderByWithRelationInput[]\n    cursor?: discussion_board_reactionWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_reactionScalarFieldEnum | Discussion_board_reactionScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_thread.discussion_board_bookmark\n   */\n  export type discussion_board_thread$discussion_board_bookmarkArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_bookmark\n     */\n    select?: discussion_board_bookmarkSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_bookmark\n     */\n    omit?: discussion_board_bookmarkOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_bookmarkInclude<ExtArgs> | null\n    where?: discussion_board_bookmarkWhereInput\n    orderBy?: discussion_board_bookmarkOrderByWithRelationInput | discussion_board_bookmarkOrderByWithRelationInput[]\n    cursor?: discussion_board_bookmarkWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_bookmarkScalarFieldEnum | Discussion_board_bookmarkScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_thread.discussion_board_notification\n   */\n  export type discussion_board_thread$discussion_board_notificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_notification\n     */\n    select?: discussion_board_notificationSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_notification\n     */\n    omit?: discussion_board_notificationOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_notificationInclude<ExtArgs> | null\n    where?: discussion_board_notificationWhereInput\n    orderBy?: discussion_board_notificationOrderByWithRelationInput | discussion_board_notificationOrderByWithRelationInput[]\n    cursor?: discussion_board_notificationWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_notificationScalarFieldEnum | Discussion_board_notificationScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_thread.discussion_board_subscription\n   */\n  export type discussion_board_thread$discussion_board_subscriptionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_subscription\n     */\n    select?: discussion_board_subscriptionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_subscription\n     */\n    omit?: discussion_board_subscriptionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_subscriptionInclude<ExtArgs> | null\n    where?: discussion_board_subscriptionWhereInput\n    orderBy?: discussion_board_subscriptionOrderByWithRelationInput | discussion_board_subscriptionOrderByWithRelationInput[]\n    cursor?: discussion_board_subscriptionWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_subscriptionScalarFieldEnum | Discussion_board_subscriptionScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_thread.discussion_board_report\n   */\n  export type discussion_board_thread$discussion_board_reportArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_report\n     */\n    select?: discussion_board_reportSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_report\n     */\n    omit?: discussion_board_reportOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_reportInclude<ExtArgs> | null\n    where?: discussion_board_reportWhereInput\n    orderBy?: discussion_board_reportOrderByWithRelationInput | discussion_board_reportOrderByWithRelationInput[]\n    cursor?: discussion_board_reportWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_reportScalarFieldEnum | Discussion_board_reportScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_thread.discussion_board_moderator_action\n   */\n  export type discussion_board_thread$discussion_board_moderator_actionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_moderator_action\n     */\n    select?: discussion_board_moderator_actionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_moderator_action\n     */\n    omit?: discussion_board_moderator_actionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_moderator_actionInclude<ExtArgs> | null\n    where?: discussion_board_moderator_actionWhereInput\n    orderBy?: discussion_board_moderator_actionOrderByWithRelationInput | discussion_board_moderator_actionOrderByWithRelationInput[]\n    cursor?: discussion_board_moderator_actionWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_moderator_actionScalarFieldEnum | Discussion_board_moderator_actionScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_thread.discussion_board_warning\n   */\n  export type discussion_board_thread$discussion_board_warningArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_warning\n     */\n    select?: discussion_board_warningSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_warning\n     */\n    omit?: discussion_board_warningOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_warningInclude<ExtArgs> | null\n    where?: discussion_board_warningWhereInput\n    orderBy?: discussion_board_warningOrderByWithRelationInput | discussion_board_warningOrderByWithRelationInput[]\n    cursor?: discussion_board_warningWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_warningScalarFieldEnum | Discussion_board_warningScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_thread.discussion_board_thread_stats\n   */\n  export type discussion_board_thread$discussion_board_thread_statsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread_stats\n     */\n    select?: discussion_board_thread_statsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread_stats\n     */\n    omit?: discussion_board_thread_statsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_thread_statsInclude<ExtArgs> | null\n    where?: discussion_board_thread_statsWhereInput\n  }\n\n  /**\n   * discussion_board_thread without action\n   */\n  export type discussion_board_threadDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread\n     */\n    select?: discussion_board_threadSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread\n     */\n    omit?: discussion_board_threadOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_threadInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussion_board_post\n   */\n\n  export type AggregateDiscussion_board_post = {\n    _count: Discussion_board_postCountAggregateOutputType | null\n    _min: Discussion_board_postMinAggregateOutputType | null\n    _max: Discussion_board_postMaxAggregateOutputType | null\n  }\n\n  export type Discussion_board_postMinAggregateOutputType = {\n    id: string | null\n    thread_id: string | null\n    author_user_id: string | null\n    parent_post_id: string | null\n    body: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Discussion_board_postMaxAggregateOutputType = {\n    id: string | null\n    thread_id: string | null\n    author_user_id: string | null\n    parent_post_id: string | null\n    body: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Discussion_board_postCountAggregateOutputType = {\n    id: number\n    thread_id: number\n    author_user_id: number\n    parent_post_id: number\n    body: number\n    created_at: number\n    updated_at: number\n    deleted_at: number\n    _all: number\n  }\n\n\n  export type Discussion_board_postMinAggregateInputType = {\n    id?: true\n    thread_id?: true\n    author_user_id?: true\n    parent_post_id?: true\n    body?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Discussion_board_postMaxAggregateInputType = {\n    id?: true\n    thread_id?: true\n    author_user_id?: true\n    parent_post_id?: true\n    body?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Discussion_board_postCountAggregateInputType = {\n    id?: true\n    thread_id?: true\n    author_user_id?: true\n    parent_post_id?: true\n    body?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n    _all?: true\n  }\n\n  export type Discussion_board_postAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_post to aggregate.\n     */\n    where?: discussion_board_postWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_posts to fetch.\n     */\n    orderBy?: discussion_board_postOrderByWithRelationInput | discussion_board_postOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussion_board_postWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_posts from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_posts.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussion_board_posts\n    **/\n    _count?: true | Discussion_board_postCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussion_board_postMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussion_board_postMaxAggregateInputType\n  }\n\n  export type GetDiscussion_board_postAggregateType<T extends Discussion_board_postAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussion_board_post]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussion_board_post[P]>\n      : GetScalarType<T[P], AggregateDiscussion_board_post[P]>\n  }\n\n\n\n\n  export type discussion_board_postGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_postWhereInput\n    orderBy?: discussion_board_postOrderByWithAggregationInput | discussion_board_postOrderByWithAggregationInput[]\n    by: Discussion_board_postScalarFieldEnum[] | Discussion_board_postScalarFieldEnum\n    having?: discussion_board_postScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussion_board_postCountAggregateInputType | true\n    _min?: Discussion_board_postMinAggregateInputType\n    _max?: Discussion_board_postMaxAggregateInputType\n  }\n\n  export type Discussion_board_postGroupByOutputType = {\n    id: string\n    thread_id: string\n    author_user_id: string\n    parent_post_id: string | null\n    body: string\n    created_at: Date\n    updated_at: Date\n    deleted_at: Date | null\n    _count: Discussion_board_postCountAggregateOutputType | null\n    _min: Discussion_board_postMinAggregateOutputType | null\n    _max: Discussion_board_postMaxAggregateOutputType | null\n  }\n\n  type GetDiscussion_board_postGroupByPayload<T extends discussion_board_postGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussion_board_postGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussion_board_postGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussion_board_postGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussion_board_postGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussion_board_postSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    thread_id?: boolean\n    author_user_id?: boolean\n    parent_post_id?: boolean\n    body?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    thread?: boolean | discussion_board_threadDefaultArgs<ExtArgs>\n    author_user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    parent_post?: boolean | discussion_board_post$parent_postArgs<ExtArgs>\n    recursive?: boolean | discussion_board_post$recursiveArgs<ExtArgs>\n    discussion_board_comment?: boolean | discussion_board_post$discussion_board_commentArgs<ExtArgs>\n    discussion_board_vote?: boolean | discussion_board_post$discussion_board_voteArgs<ExtArgs>\n    discussion_board_reaction?: boolean | discussion_board_post$discussion_board_reactionArgs<ExtArgs>\n    discussion_board_bookmark?: boolean | discussion_board_post$discussion_board_bookmarkArgs<ExtArgs>\n    discussion_board_notification?: boolean | discussion_board_post$discussion_board_notificationArgs<ExtArgs>\n    discussion_board_subscription?: boolean | discussion_board_post$discussion_board_subscriptionArgs<ExtArgs>\n    discussion_board_report?: boolean | discussion_board_post$discussion_board_reportArgs<ExtArgs>\n    discussion_board_moderator_action?: boolean | discussion_board_post$discussion_board_moderator_actionArgs<ExtArgs>\n    discussion_board_warning?: boolean | discussion_board_post$discussion_board_warningArgs<ExtArgs>\n    _count?: boolean | Discussion_board_postCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_post\"]>\n\n  export type discussion_board_postSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    thread_id?: boolean\n    author_user_id?: boolean\n    parent_post_id?: boolean\n    body?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    thread?: boolean | discussion_board_threadDefaultArgs<ExtArgs>\n    author_user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    parent_post?: boolean | discussion_board_post$parent_postArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_post\"]>\n\n  export type discussion_board_postSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    thread_id?: boolean\n    author_user_id?: boolean\n    parent_post_id?: boolean\n    body?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    thread?: boolean | discussion_board_threadDefaultArgs<ExtArgs>\n    author_user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    parent_post?: boolean | discussion_board_post$parent_postArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_post\"]>\n\n  export type discussion_board_postSelectScalar = {\n    id?: boolean\n    thread_id?: boolean\n    author_user_id?: boolean\n    parent_post_id?: boolean\n    body?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }\n\n  export type discussion_board_postOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"thread_id\" | \"author_user_id\" | \"parent_post_id\" | \"body\" | \"created_at\" | \"updated_at\" | \"deleted_at\", ExtArgs[\"result\"][\"discussion_board_post\"]>\n  export type discussion_board_postInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    thread?: boolean | discussion_board_threadDefaultArgs<ExtArgs>\n    author_user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    parent_post?: boolean | discussion_board_post$parent_postArgs<ExtArgs>\n    recursive?: boolean | discussion_board_post$recursiveArgs<ExtArgs>\n    discussion_board_comment?: boolean | discussion_board_post$discussion_board_commentArgs<ExtArgs>\n    discussion_board_vote?: boolean | discussion_board_post$discussion_board_voteArgs<ExtArgs>\n    discussion_board_reaction?: boolean | discussion_board_post$discussion_board_reactionArgs<ExtArgs>\n    discussion_board_bookmark?: boolean | discussion_board_post$discussion_board_bookmarkArgs<ExtArgs>\n    discussion_board_notification?: boolean | discussion_board_post$discussion_board_notificationArgs<ExtArgs>\n    discussion_board_subscription?: boolean | discussion_board_post$discussion_board_subscriptionArgs<ExtArgs>\n    discussion_board_report?: boolean | discussion_board_post$discussion_board_reportArgs<ExtArgs>\n    discussion_board_moderator_action?: boolean | discussion_board_post$discussion_board_moderator_actionArgs<ExtArgs>\n    discussion_board_warning?: boolean | discussion_board_post$discussion_board_warningArgs<ExtArgs>\n    _count?: boolean | Discussion_board_postCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type discussion_board_postIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    thread?: boolean | discussion_board_threadDefaultArgs<ExtArgs>\n    author_user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    parent_post?: boolean | discussion_board_post$parent_postArgs<ExtArgs>\n  }\n  export type discussion_board_postIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    thread?: boolean | discussion_board_threadDefaultArgs<ExtArgs>\n    author_user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    parent_post?: boolean | discussion_board_post$parent_postArgs<ExtArgs>\n  }\n\n  export type $discussion_board_postPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussion_board_post\"\n    objects: {\n      thread: Prisma.$discussion_board_threadPayload<ExtArgs>\n      author_user: Prisma.$discussion_board_usersPayload<ExtArgs>\n      parent_post: Prisma.$discussion_board_postPayload<ExtArgs> | null\n      recursive: Prisma.$discussion_board_postPayload<ExtArgs>[]\n      discussion_board_comment: Prisma.$discussion_board_commentPayload<ExtArgs>[]\n      discussion_board_vote: Prisma.$discussion_board_votePayload<ExtArgs>[]\n      discussion_board_reaction: Prisma.$discussion_board_reactionPayload<ExtArgs>[]\n      discussion_board_bookmark: Prisma.$discussion_board_bookmarkPayload<ExtArgs>[]\n      discussion_board_notification: Prisma.$discussion_board_notificationPayload<ExtArgs>[]\n      discussion_board_subscription: Prisma.$discussion_board_subscriptionPayload<ExtArgs>[]\n      discussion_board_report: Prisma.$discussion_board_reportPayload<ExtArgs>[]\n      discussion_board_moderator_action: Prisma.$discussion_board_moderator_actionPayload<ExtArgs>[]\n      discussion_board_warning: Prisma.$discussion_board_warningPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * [Post unique identifier] - Primary key for individual posts.\n       */\n      id: string\n      /**\n       * [Thread reference] - Links post to its parent thread.\n       */\n      thread_id: string\n      /**\n       * [Author reference] - Author of the post, normalized away from post.\n       */\n      author_user_id: string\n      /**\n       * [Parent post] - Nullable for top-level; for reply nesting.\n       */\n      parent_post_id: string | null\n      /**\n       * [Post content] - Main post text, atomic.\n       */\n      body: string\n      /**\n       * [Creation timestamp] - For activity and audit tracking.\n       */\n      created_at: Date\n      /**\n       * [Edit timestamp] - Indicates modification/audit history.\n       */\n      updated_at: Date\n      /**\n       * [Soft delete timestamp] - Compliance/takedown support.\n       */\n      deleted_at: Date | null\n    }, ExtArgs[\"result\"][\"discussion_board_post\"]>\n    composites: {}\n  }\n\n  type discussion_board_postGetPayload<S extends boolean | null | undefined | discussion_board_postDefaultArgs> = $Result.GetResult<Prisma.$discussion_board_postPayload, S>\n\n  type discussion_board_postCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussion_board_postFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussion_board_postCountAggregateInputType | true\n    }\n\n  export interface discussion_board_postDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussion_board_post'], meta: { name: 'discussion_board_post' } }\n    /**\n     * Find zero or one Discussion_board_post that matches the filter.\n     * @param {discussion_board_postFindUniqueArgs} args - Arguments to find a Discussion_board_post\n     * @example\n     * // Get one Discussion_board_post\n     * const discussion_board_post = await prisma.discussion_board_post.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussion_board_postFindUniqueArgs>(args: SelectSubset<T, discussion_board_postFindUniqueArgs<ExtArgs>>): Prisma__discussion_board_postClient<$Result.GetResult<Prisma.$discussion_board_postPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussion_board_post that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussion_board_postFindUniqueOrThrowArgs} args - Arguments to find a Discussion_board_post\n     * @example\n     * // Get one Discussion_board_post\n     * const discussion_board_post = await prisma.discussion_board_post.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussion_board_postFindUniqueOrThrowArgs>(args: SelectSubset<T, discussion_board_postFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussion_board_postClient<$Result.GetResult<Prisma.$discussion_board_postPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_post that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_postFindFirstArgs} args - Arguments to find a Discussion_board_post\n     * @example\n     * // Get one Discussion_board_post\n     * const discussion_board_post = await prisma.discussion_board_post.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussion_board_postFindFirstArgs>(args?: SelectSubset<T, discussion_board_postFindFirstArgs<ExtArgs>>): Prisma__discussion_board_postClient<$Result.GetResult<Prisma.$discussion_board_postPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_post that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_postFindFirstOrThrowArgs} args - Arguments to find a Discussion_board_post\n     * @example\n     * // Get one Discussion_board_post\n     * const discussion_board_post = await prisma.discussion_board_post.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussion_board_postFindFirstOrThrowArgs>(args?: SelectSubset<T, discussion_board_postFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussion_board_postClient<$Result.GetResult<Prisma.$discussion_board_postPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussion_board_posts that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_postFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussion_board_posts\n     * const discussion_board_posts = await prisma.discussion_board_post.findMany()\n     * \n     * // Get first 10 Discussion_board_posts\n     * const discussion_board_posts = await prisma.discussion_board_post.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussion_board_postWithIdOnly = await prisma.discussion_board_post.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussion_board_postFindManyArgs>(args?: SelectSubset<T, discussion_board_postFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_postPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussion_board_post.\n     * @param {discussion_board_postCreateArgs} args - Arguments to create a Discussion_board_post.\n     * @example\n     * // Create one Discussion_board_post\n     * const Discussion_board_post = await prisma.discussion_board_post.create({\n     *   data: {\n     *     // ... data to create a Discussion_board_post\n     *   }\n     * })\n     * \n     */\n    create<T extends discussion_board_postCreateArgs>(args: SelectSubset<T, discussion_board_postCreateArgs<ExtArgs>>): Prisma__discussion_board_postClient<$Result.GetResult<Prisma.$discussion_board_postPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussion_board_posts.\n     * @param {discussion_board_postCreateManyArgs} args - Arguments to create many Discussion_board_posts.\n     * @example\n     * // Create many Discussion_board_posts\n     * const discussion_board_post = await prisma.discussion_board_post.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussion_board_postCreateManyArgs>(args?: SelectSubset<T, discussion_board_postCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussion_board_posts and returns the data saved in the database.\n     * @param {discussion_board_postCreateManyAndReturnArgs} args - Arguments to create many Discussion_board_posts.\n     * @example\n     * // Create many Discussion_board_posts\n     * const discussion_board_post = await prisma.discussion_board_post.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussion_board_posts and only return the `id`\n     * const discussion_board_postWithIdOnly = await prisma.discussion_board_post.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussion_board_postCreateManyAndReturnArgs>(args?: SelectSubset<T, discussion_board_postCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_postPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussion_board_post.\n     * @param {discussion_board_postDeleteArgs} args - Arguments to delete one Discussion_board_post.\n     * @example\n     * // Delete one Discussion_board_post\n     * const Discussion_board_post = await prisma.discussion_board_post.delete({\n     *   where: {\n     *     // ... filter to delete one Discussion_board_post\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussion_board_postDeleteArgs>(args: SelectSubset<T, discussion_board_postDeleteArgs<ExtArgs>>): Prisma__discussion_board_postClient<$Result.GetResult<Prisma.$discussion_board_postPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussion_board_post.\n     * @param {discussion_board_postUpdateArgs} args - Arguments to update one Discussion_board_post.\n     * @example\n     * // Update one Discussion_board_post\n     * const discussion_board_post = await prisma.discussion_board_post.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussion_board_postUpdateArgs>(args: SelectSubset<T, discussion_board_postUpdateArgs<ExtArgs>>): Prisma__discussion_board_postClient<$Result.GetResult<Prisma.$discussion_board_postPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussion_board_posts.\n     * @param {discussion_board_postDeleteManyArgs} args - Arguments to filter Discussion_board_posts to delete.\n     * @example\n     * // Delete a few Discussion_board_posts\n     * const { count } = await prisma.discussion_board_post.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussion_board_postDeleteManyArgs>(args?: SelectSubset<T, discussion_board_postDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_posts.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_postUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussion_board_posts\n     * const discussion_board_post = await prisma.discussion_board_post.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussion_board_postUpdateManyArgs>(args: SelectSubset<T, discussion_board_postUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_posts and returns the data updated in the database.\n     * @param {discussion_board_postUpdateManyAndReturnArgs} args - Arguments to update many Discussion_board_posts.\n     * @example\n     * // Update many Discussion_board_posts\n     * const discussion_board_post = await prisma.discussion_board_post.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussion_board_posts and only return the `id`\n     * const discussion_board_postWithIdOnly = await prisma.discussion_board_post.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussion_board_postUpdateManyAndReturnArgs>(args: SelectSubset<T, discussion_board_postUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_postPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussion_board_post.\n     * @param {discussion_board_postUpsertArgs} args - Arguments to update or create a Discussion_board_post.\n     * @example\n     * // Update or create a Discussion_board_post\n     * const discussion_board_post = await prisma.discussion_board_post.upsert({\n     *   create: {\n     *     // ... data to create a Discussion_board_post\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussion_board_post we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussion_board_postUpsertArgs>(args: SelectSubset<T, discussion_board_postUpsertArgs<ExtArgs>>): Prisma__discussion_board_postClient<$Result.GetResult<Prisma.$discussion_board_postPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussion_board_posts.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_postCountArgs} args - Arguments to filter Discussion_board_posts to count.\n     * @example\n     * // Count the number of Discussion_board_posts\n     * const count = await prisma.discussion_board_post.count({\n     *   where: {\n     *     // ... the filter for the Discussion_board_posts we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussion_board_postCountArgs>(\n      args?: Subset<T, discussion_board_postCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussion_board_postCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussion_board_post.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussion_board_postAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussion_board_postAggregateArgs>(args: Subset<T, Discussion_board_postAggregateArgs>): Prisma.PrismaPromise<GetDiscussion_board_postAggregateType<T>>\n\n    /**\n     * Group by Discussion_board_post.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_postGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussion_board_postGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussion_board_postGroupByArgs['orderBy'] }\n        : { orderBy?: discussion_board_postGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussion_board_postGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussion_board_postGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussion_board_post model\n   */\n  readonly fields: discussion_board_postFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussion_board_post.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussion_board_postClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    thread<T extends discussion_board_threadDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_threadDefaultArgs<ExtArgs>>): Prisma__discussion_board_threadClient<$Result.GetResult<Prisma.$discussion_board_threadPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    author_user<T extends discussion_board_usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_usersDefaultArgs<ExtArgs>>): Prisma__discussion_board_usersClient<$Result.GetResult<Prisma.$discussion_board_usersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    parent_post<T extends discussion_board_post$parent_postArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_post$parent_postArgs<ExtArgs>>): Prisma__discussion_board_postClient<$Result.GetResult<Prisma.$discussion_board_postPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    recursive<T extends discussion_board_post$recursiveArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_post$recursiveArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_postPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_comment<T extends discussion_board_post$discussion_board_commentArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_post$discussion_board_commentArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_commentPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_vote<T extends discussion_board_post$discussion_board_voteArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_post$discussion_board_voteArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_votePayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_reaction<T extends discussion_board_post$discussion_board_reactionArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_post$discussion_board_reactionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_reactionPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_bookmark<T extends discussion_board_post$discussion_board_bookmarkArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_post$discussion_board_bookmarkArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_bookmarkPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_notification<T extends discussion_board_post$discussion_board_notificationArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_post$discussion_board_notificationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_notificationPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_subscription<T extends discussion_board_post$discussion_board_subscriptionArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_post$discussion_board_subscriptionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_subscriptionPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_report<T extends discussion_board_post$discussion_board_reportArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_post$discussion_board_reportArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_reportPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_moderator_action<T extends discussion_board_post$discussion_board_moderator_actionArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_post$discussion_board_moderator_actionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_moderator_actionPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_warning<T extends discussion_board_post$discussion_board_warningArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_post$discussion_board_warningArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_warningPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussion_board_post model\n   */\n  interface discussion_board_postFieldRefs {\n    readonly id: FieldRef<\"discussion_board_post\", 'String'>\n    readonly thread_id: FieldRef<\"discussion_board_post\", 'String'>\n    readonly author_user_id: FieldRef<\"discussion_board_post\", 'String'>\n    readonly parent_post_id: FieldRef<\"discussion_board_post\", 'String'>\n    readonly body: FieldRef<\"discussion_board_post\", 'String'>\n    readonly created_at: FieldRef<\"discussion_board_post\", 'DateTime'>\n    readonly updated_at: FieldRef<\"discussion_board_post\", 'DateTime'>\n    readonly deleted_at: FieldRef<\"discussion_board_post\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussion_board_post findUnique\n   */\n  export type discussion_board_postFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_post\n     */\n    select?: discussion_board_postSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_post\n     */\n    omit?: discussion_board_postOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_postInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_post to fetch.\n     */\n    where: discussion_board_postWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_post findUniqueOrThrow\n   */\n  export type discussion_board_postFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_post\n     */\n    select?: discussion_board_postSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_post\n     */\n    omit?: discussion_board_postOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_postInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_post to fetch.\n     */\n    where: discussion_board_postWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_post findFirst\n   */\n  export type discussion_board_postFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_post\n     */\n    select?: discussion_board_postSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_post\n     */\n    omit?: discussion_board_postOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_postInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_post to fetch.\n     */\n    where?: discussion_board_postWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_posts to fetch.\n     */\n    orderBy?: discussion_board_postOrderByWithRelationInput | discussion_board_postOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_posts.\n     */\n    cursor?: discussion_board_postWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_posts from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_posts.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_posts.\n     */\n    distinct?: Discussion_board_postScalarFieldEnum | Discussion_board_postScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_post findFirstOrThrow\n   */\n  export type discussion_board_postFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_post\n     */\n    select?: discussion_board_postSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_post\n     */\n    omit?: discussion_board_postOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_postInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_post to fetch.\n     */\n    where?: discussion_board_postWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_posts to fetch.\n     */\n    orderBy?: discussion_board_postOrderByWithRelationInput | discussion_board_postOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_posts.\n     */\n    cursor?: discussion_board_postWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_posts from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_posts.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_posts.\n     */\n    distinct?: Discussion_board_postScalarFieldEnum | Discussion_board_postScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_post findMany\n   */\n  export type discussion_board_postFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_post\n     */\n    select?: discussion_board_postSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_post\n     */\n    omit?: discussion_board_postOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_postInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_posts to fetch.\n     */\n    where?: discussion_board_postWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_posts to fetch.\n     */\n    orderBy?: discussion_board_postOrderByWithRelationInput | discussion_board_postOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussion_board_posts.\n     */\n    cursor?: discussion_board_postWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_posts from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_posts.\n     */\n    skip?: number\n    distinct?: Discussion_board_postScalarFieldEnum | Discussion_board_postScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_post create\n   */\n  export type discussion_board_postCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_post\n     */\n    select?: discussion_board_postSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_post\n     */\n    omit?: discussion_board_postOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_postInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussion_board_post.\n     */\n    data: XOR<discussion_board_postCreateInput, discussion_board_postUncheckedCreateInput>\n  }\n\n  /**\n   * discussion_board_post createMany\n   */\n  export type discussion_board_postCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussion_board_posts.\n     */\n    data: discussion_board_postCreateManyInput | discussion_board_postCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussion_board_post createManyAndReturn\n   */\n  export type discussion_board_postCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_post\n     */\n    select?: discussion_board_postSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_post\n     */\n    omit?: discussion_board_postOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussion_board_posts.\n     */\n    data: discussion_board_postCreateManyInput | discussion_board_postCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_postIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_post update\n   */\n  export type discussion_board_postUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_post\n     */\n    select?: discussion_board_postSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_post\n     */\n    omit?: discussion_board_postOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_postInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussion_board_post.\n     */\n    data: XOR<discussion_board_postUpdateInput, discussion_board_postUncheckedUpdateInput>\n    /**\n     * Choose, which discussion_board_post to update.\n     */\n    where: discussion_board_postWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_post updateMany\n   */\n  export type discussion_board_postUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussion_board_posts.\n     */\n    data: XOR<discussion_board_postUpdateManyMutationInput, discussion_board_postUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_posts to update\n     */\n    where?: discussion_board_postWhereInput\n    /**\n     * Limit how many discussion_board_posts to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_post updateManyAndReturn\n   */\n  export type discussion_board_postUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_post\n     */\n    select?: discussion_board_postSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_post\n     */\n    omit?: discussion_board_postOmit<ExtArgs> | null\n    /**\n     * The data used to update discussion_board_posts.\n     */\n    data: XOR<discussion_board_postUpdateManyMutationInput, discussion_board_postUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_posts to update\n     */\n    where?: discussion_board_postWhereInput\n    /**\n     * Limit how many discussion_board_posts to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_postIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_post upsert\n   */\n  export type discussion_board_postUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_post\n     */\n    select?: discussion_board_postSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_post\n     */\n    omit?: discussion_board_postOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_postInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussion_board_post to update in case it exists.\n     */\n    where: discussion_board_postWhereUniqueInput\n    /**\n     * In case the discussion_board_post found by the `where` argument doesn't exist, create a new discussion_board_post with this data.\n     */\n    create: XOR<discussion_board_postCreateInput, discussion_board_postUncheckedCreateInput>\n    /**\n     * In case the discussion_board_post was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussion_board_postUpdateInput, discussion_board_postUncheckedUpdateInput>\n  }\n\n  /**\n   * discussion_board_post delete\n   */\n  export type discussion_board_postDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_post\n     */\n    select?: discussion_board_postSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_post\n     */\n    omit?: discussion_board_postOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_postInclude<ExtArgs> | null\n    /**\n     * Filter which discussion_board_post to delete.\n     */\n    where: discussion_board_postWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_post deleteMany\n   */\n  export type discussion_board_postDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_posts to delete\n     */\n    where?: discussion_board_postWhereInput\n    /**\n     * Limit how many discussion_board_posts to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_post.parent_post\n   */\n  export type discussion_board_post$parent_postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_post\n     */\n    select?: discussion_board_postSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_post\n     */\n    omit?: discussion_board_postOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_postInclude<ExtArgs> | null\n    where?: discussion_board_postWhereInput\n  }\n\n  /**\n   * discussion_board_post.recursive\n   */\n  export type discussion_board_post$recursiveArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_post\n     */\n    select?: discussion_board_postSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_post\n     */\n    omit?: discussion_board_postOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_postInclude<ExtArgs> | null\n    where?: discussion_board_postWhereInput\n    orderBy?: discussion_board_postOrderByWithRelationInput | discussion_board_postOrderByWithRelationInput[]\n    cursor?: discussion_board_postWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_postScalarFieldEnum | Discussion_board_postScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_post.discussion_board_comment\n   */\n  export type discussion_board_post$discussion_board_commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_comment\n     */\n    select?: discussion_board_commentSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_comment\n     */\n    omit?: discussion_board_commentOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_commentInclude<ExtArgs> | null\n    where?: discussion_board_commentWhereInput\n    orderBy?: discussion_board_commentOrderByWithRelationInput | discussion_board_commentOrderByWithRelationInput[]\n    cursor?: discussion_board_commentWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_commentScalarFieldEnum | Discussion_board_commentScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_post.discussion_board_vote\n   */\n  export type discussion_board_post$discussion_board_voteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_vote\n     */\n    select?: discussion_board_voteSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_vote\n     */\n    omit?: discussion_board_voteOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_voteInclude<ExtArgs> | null\n    where?: discussion_board_voteWhereInput\n    orderBy?: discussion_board_voteOrderByWithRelationInput | discussion_board_voteOrderByWithRelationInput[]\n    cursor?: discussion_board_voteWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_voteScalarFieldEnum | Discussion_board_voteScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_post.discussion_board_reaction\n   */\n  export type discussion_board_post$discussion_board_reactionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_reaction\n     */\n    select?: discussion_board_reactionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_reaction\n     */\n    omit?: discussion_board_reactionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_reactionInclude<ExtArgs> | null\n    where?: discussion_board_reactionWhereInput\n    orderBy?: discussion_board_reactionOrderByWithRelationInput | discussion_board_reactionOrderByWithRelationInput[]\n    cursor?: discussion_board_reactionWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_reactionScalarFieldEnum | Discussion_board_reactionScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_post.discussion_board_bookmark\n   */\n  export type discussion_board_post$discussion_board_bookmarkArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_bookmark\n     */\n    select?: discussion_board_bookmarkSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_bookmark\n     */\n    omit?: discussion_board_bookmarkOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_bookmarkInclude<ExtArgs> | null\n    where?: discussion_board_bookmarkWhereInput\n    orderBy?: discussion_board_bookmarkOrderByWithRelationInput | discussion_board_bookmarkOrderByWithRelationInput[]\n    cursor?: discussion_board_bookmarkWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_bookmarkScalarFieldEnum | Discussion_board_bookmarkScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_post.discussion_board_notification\n   */\n  export type discussion_board_post$discussion_board_notificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_notification\n     */\n    select?: discussion_board_notificationSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_notification\n     */\n    omit?: discussion_board_notificationOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_notificationInclude<ExtArgs> | null\n    where?: discussion_board_notificationWhereInput\n    orderBy?: discussion_board_notificationOrderByWithRelationInput | discussion_board_notificationOrderByWithRelationInput[]\n    cursor?: discussion_board_notificationWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_notificationScalarFieldEnum | Discussion_board_notificationScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_post.discussion_board_subscription\n   */\n  export type discussion_board_post$discussion_board_subscriptionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_subscription\n     */\n    select?: discussion_board_subscriptionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_subscription\n     */\n    omit?: discussion_board_subscriptionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_subscriptionInclude<ExtArgs> | null\n    where?: discussion_board_subscriptionWhereInput\n    orderBy?: discussion_board_subscriptionOrderByWithRelationInput | discussion_board_subscriptionOrderByWithRelationInput[]\n    cursor?: discussion_board_subscriptionWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_subscriptionScalarFieldEnum | Discussion_board_subscriptionScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_post.discussion_board_report\n   */\n  export type discussion_board_post$discussion_board_reportArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_report\n     */\n    select?: discussion_board_reportSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_report\n     */\n    omit?: discussion_board_reportOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_reportInclude<ExtArgs> | null\n    where?: discussion_board_reportWhereInput\n    orderBy?: discussion_board_reportOrderByWithRelationInput | discussion_board_reportOrderByWithRelationInput[]\n    cursor?: discussion_board_reportWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_reportScalarFieldEnum | Discussion_board_reportScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_post.discussion_board_moderator_action\n   */\n  export type discussion_board_post$discussion_board_moderator_actionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_moderator_action\n     */\n    select?: discussion_board_moderator_actionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_moderator_action\n     */\n    omit?: discussion_board_moderator_actionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_moderator_actionInclude<ExtArgs> | null\n    where?: discussion_board_moderator_actionWhereInput\n    orderBy?: discussion_board_moderator_actionOrderByWithRelationInput | discussion_board_moderator_actionOrderByWithRelationInput[]\n    cursor?: discussion_board_moderator_actionWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_moderator_actionScalarFieldEnum | Discussion_board_moderator_actionScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_post.discussion_board_warning\n   */\n  export type discussion_board_post$discussion_board_warningArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_warning\n     */\n    select?: discussion_board_warningSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_warning\n     */\n    omit?: discussion_board_warningOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_warningInclude<ExtArgs> | null\n    where?: discussion_board_warningWhereInput\n    orderBy?: discussion_board_warningOrderByWithRelationInput | discussion_board_warningOrderByWithRelationInput[]\n    cursor?: discussion_board_warningWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_warningScalarFieldEnum | Discussion_board_warningScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_post without action\n   */\n  export type discussion_board_postDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_post\n     */\n    select?: discussion_board_postSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_post\n     */\n    omit?: discussion_board_postOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_postInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussion_board_comment\n   */\n\n  export type AggregateDiscussion_board_comment = {\n    _count: Discussion_board_commentCountAggregateOutputType | null\n    _min: Discussion_board_commentMinAggregateOutputType | null\n    _max: Discussion_board_commentMaxAggregateOutputType | null\n  }\n\n  export type Discussion_board_commentMinAggregateOutputType = {\n    id: string | null\n    post_id: string | null\n    author_user_id: string | null\n    parent_comment_id: string | null\n    body: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Discussion_board_commentMaxAggregateOutputType = {\n    id: string | null\n    post_id: string | null\n    author_user_id: string | null\n    parent_comment_id: string | null\n    body: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Discussion_board_commentCountAggregateOutputType = {\n    id: number\n    post_id: number\n    author_user_id: number\n    parent_comment_id: number\n    body: number\n    created_at: number\n    updated_at: number\n    deleted_at: number\n    _all: number\n  }\n\n\n  export type Discussion_board_commentMinAggregateInputType = {\n    id?: true\n    post_id?: true\n    author_user_id?: true\n    parent_comment_id?: true\n    body?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Discussion_board_commentMaxAggregateInputType = {\n    id?: true\n    post_id?: true\n    author_user_id?: true\n    parent_comment_id?: true\n    body?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Discussion_board_commentCountAggregateInputType = {\n    id?: true\n    post_id?: true\n    author_user_id?: true\n    parent_comment_id?: true\n    body?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n    _all?: true\n  }\n\n  export type Discussion_board_commentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_comment to aggregate.\n     */\n    where?: discussion_board_commentWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_comments to fetch.\n     */\n    orderBy?: discussion_board_commentOrderByWithRelationInput | discussion_board_commentOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussion_board_commentWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_comments from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_comments.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussion_board_comments\n    **/\n    _count?: true | Discussion_board_commentCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussion_board_commentMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussion_board_commentMaxAggregateInputType\n  }\n\n  export type GetDiscussion_board_commentAggregateType<T extends Discussion_board_commentAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussion_board_comment]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussion_board_comment[P]>\n      : GetScalarType<T[P], AggregateDiscussion_board_comment[P]>\n  }\n\n\n\n\n  export type discussion_board_commentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_commentWhereInput\n    orderBy?: discussion_board_commentOrderByWithAggregationInput | discussion_board_commentOrderByWithAggregationInput[]\n    by: Discussion_board_commentScalarFieldEnum[] | Discussion_board_commentScalarFieldEnum\n    having?: discussion_board_commentScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussion_board_commentCountAggregateInputType | true\n    _min?: Discussion_board_commentMinAggregateInputType\n    _max?: Discussion_board_commentMaxAggregateInputType\n  }\n\n  export type Discussion_board_commentGroupByOutputType = {\n    id: string\n    post_id: string\n    author_user_id: string\n    parent_comment_id: string | null\n    body: string\n    created_at: Date\n    updated_at: Date\n    deleted_at: Date | null\n    _count: Discussion_board_commentCountAggregateOutputType | null\n    _min: Discussion_board_commentMinAggregateOutputType | null\n    _max: Discussion_board_commentMaxAggregateOutputType | null\n  }\n\n  type GetDiscussion_board_commentGroupByPayload<T extends discussion_board_commentGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussion_board_commentGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussion_board_commentGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussion_board_commentGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussion_board_commentGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussion_board_commentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    post_id?: boolean\n    author_user_id?: boolean\n    parent_comment_id?: boolean\n    body?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    post?: boolean | discussion_board_postDefaultArgs<ExtArgs>\n    author_user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    parent_comment?: boolean | discussion_board_comment$parent_commentArgs<ExtArgs>\n    recursive?: boolean | discussion_board_comment$recursiveArgs<ExtArgs>\n    discussion_board_vote?: boolean | discussion_board_comment$discussion_board_voteArgs<ExtArgs>\n    discussion_board_reaction?: boolean | discussion_board_comment$discussion_board_reactionArgs<ExtArgs>\n    discussion_board_bookmark?: boolean | discussion_board_comment$discussion_board_bookmarkArgs<ExtArgs>\n    discussion_board_notification?: boolean | discussion_board_comment$discussion_board_notificationArgs<ExtArgs>\n    discussion_board_subscription?: boolean | discussion_board_comment$discussion_board_subscriptionArgs<ExtArgs>\n    discussion_board_report?: boolean | discussion_board_comment$discussion_board_reportArgs<ExtArgs>\n    discussion_board_moderator_action?: boolean | discussion_board_comment$discussion_board_moderator_actionArgs<ExtArgs>\n    discussion_board_warning?: boolean | discussion_board_comment$discussion_board_warningArgs<ExtArgs>\n    _count?: boolean | Discussion_board_commentCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_comment\"]>\n\n  export type discussion_board_commentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    post_id?: boolean\n    author_user_id?: boolean\n    parent_comment_id?: boolean\n    body?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    post?: boolean | discussion_board_postDefaultArgs<ExtArgs>\n    author_user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    parent_comment?: boolean | discussion_board_comment$parent_commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_comment\"]>\n\n  export type discussion_board_commentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    post_id?: boolean\n    author_user_id?: boolean\n    parent_comment_id?: boolean\n    body?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    post?: boolean | discussion_board_postDefaultArgs<ExtArgs>\n    author_user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    parent_comment?: boolean | discussion_board_comment$parent_commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_comment\"]>\n\n  export type discussion_board_commentSelectScalar = {\n    id?: boolean\n    post_id?: boolean\n    author_user_id?: boolean\n    parent_comment_id?: boolean\n    body?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }\n\n  export type discussion_board_commentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"post_id\" | \"author_user_id\" | \"parent_comment_id\" | \"body\" | \"created_at\" | \"updated_at\" | \"deleted_at\", ExtArgs[\"result\"][\"discussion_board_comment\"]>\n  export type discussion_board_commentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    post?: boolean | discussion_board_postDefaultArgs<ExtArgs>\n    author_user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    parent_comment?: boolean | discussion_board_comment$parent_commentArgs<ExtArgs>\n    recursive?: boolean | discussion_board_comment$recursiveArgs<ExtArgs>\n    discussion_board_vote?: boolean | discussion_board_comment$discussion_board_voteArgs<ExtArgs>\n    discussion_board_reaction?: boolean | discussion_board_comment$discussion_board_reactionArgs<ExtArgs>\n    discussion_board_bookmark?: boolean | discussion_board_comment$discussion_board_bookmarkArgs<ExtArgs>\n    discussion_board_notification?: boolean | discussion_board_comment$discussion_board_notificationArgs<ExtArgs>\n    discussion_board_subscription?: boolean | discussion_board_comment$discussion_board_subscriptionArgs<ExtArgs>\n    discussion_board_report?: boolean | discussion_board_comment$discussion_board_reportArgs<ExtArgs>\n    discussion_board_moderator_action?: boolean | discussion_board_comment$discussion_board_moderator_actionArgs<ExtArgs>\n    discussion_board_warning?: boolean | discussion_board_comment$discussion_board_warningArgs<ExtArgs>\n    _count?: boolean | Discussion_board_commentCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type discussion_board_commentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    post?: boolean | discussion_board_postDefaultArgs<ExtArgs>\n    author_user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    parent_comment?: boolean | discussion_board_comment$parent_commentArgs<ExtArgs>\n  }\n  export type discussion_board_commentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    post?: boolean | discussion_board_postDefaultArgs<ExtArgs>\n    author_user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    parent_comment?: boolean | discussion_board_comment$parent_commentArgs<ExtArgs>\n  }\n\n  export type $discussion_board_commentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussion_board_comment\"\n    objects: {\n      post: Prisma.$discussion_board_postPayload<ExtArgs>\n      author_user: Prisma.$discussion_board_usersPayload<ExtArgs>\n      parent_comment: Prisma.$discussion_board_commentPayload<ExtArgs> | null\n      recursive: Prisma.$discussion_board_commentPayload<ExtArgs>[]\n      discussion_board_vote: Prisma.$discussion_board_votePayload<ExtArgs>[]\n      discussion_board_reaction: Prisma.$discussion_board_reactionPayload<ExtArgs>[]\n      discussion_board_bookmark: Prisma.$discussion_board_bookmarkPayload<ExtArgs>[]\n      discussion_board_notification: Prisma.$discussion_board_notificationPayload<ExtArgs>[]\n      discussion_board_subscription: Prisma.$discussion_board_subscriptionPayload<ExtArgs>[]\n      discussion_board_report: Prisma.$discussion_board_reportPayload<ExtArgs>[]\n      discussion_board_moderator_action: Prisma.$discussion_board_moderator_actionPayload<ExtArgs>[]\n      discussion_board_warning: Prisma.$discussion_board_warningPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * [Comment unique identifier] - Singular reference.\n       */\n      id: string\n      /**\n       * [Parent post] - Comment is attached to post.\n       */\n      post_id: string\n      /**\n       * [Author reference] - Creator of this comment.\n       */\n      author_user_id: string\n      /**\n       * [Parent comment] - Nullable; for replies only.\n       */\n      parent_comment_id: string | null\n      /**\n       * [Comment body] - Atomic text value.\n       */\n      body: string\n      /**\n       * [Created] - Recent activity tracking.\n       */\n      created_at: Date\n      /**\n       * [Updated] - Revision/audit-trail.\n       */\n      updated_at: Date\n      /**\n       * [Soft delete] - Required for moderation.\n       */\n      deleted_at: Date | null\n    }, ExtArgs[\"result\"][\"discussion_board_comment\"]>\n    composites: {}\n  }\n\n  type discussion_board_commentGetPayload<S extends boolean | null | undefined | discussion_board_commentDefaultArgs> = $Result.GetResult<Prisma.$discussion_board_commentPayload, S>\n\n  type discussion_board_commentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussion_board_commentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussion_board_commentCountAggregateInputType | true\n    }\n\n  export interface discussion_board_commentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussion_board_comment'], meta: { name: 'discussion_board_comment' } }\n    /**\n     * Find zero or one Discussion_board_comment that matches the filter.\n     * @param {discussion_board_commentFindUniqueArgs} args - Arguments to find a Discussion_board_comment\n     * @example\n     * // Get one Discussion_board_comment\n     * const discussion_board_comment = await prisma.discussion_board_comment.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussion_board_commentFindUniqueArgs>(args: SelectSubset<T, discussion_board_commentFindUniqueArgs<ExtArgs>>): Prisma__discussion_board_commentClient<$Result.GetResult<Prisma.$discussion_board_commentPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussion_board_comment that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussion_board_commentFindUniqueOrThrowArgs} args - Arguments to find a Discussion_board_comment\n     * @example\n     * // Get one Discussion_board_comment\n     * const discussion_board_comment = await prisma.discussion_board_comment.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussion_board_commentFindUniqueOrThrowArgs>(args: SelectSubset<T, discussion_board_commentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussion_board_commentClient<$Result.GetResult<Prisma.$discussion_board_commentPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_comment that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_commentFindFirstArgs} args - Arguments to find a Discussion_board_comment\n     * @example\n     * // Get one Discussion_board_comment\n     * const discussion_board_comment = await prisma.discussion_board_comment.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussion_board_commentFindFirstArgs>(args?: SelectSubset<T, discussion_board_commentFindFirstArgs<ExtArgs>>): Prisma__discussion_board_commentClient<$Result.GetResult<Prisma.$discussion_board_commentPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_comment that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_commentFindFirstOrThrowArgs} args - Arguments to find a Discussion_board_comment\n     * @example\n     * // Get one Discussion_board_comment\n     * const discussion_board_comment = await prisma.discussion_board_comment.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussion_board_commentFindFirstOrThrowArgs>(args?: SelectSubset<T, discussion_board_commentFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussion_board_commentClient<$Result.GetResult<Prisma.$discussion_board_commentPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussion_board_comments that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_commentFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussion_board_comments\n     * const discussion_board_comments = await prisma.discussion_board_comment.findMany()\n     * \n     * // Get first 10 Discussion_board_comments\n     * const discussion_board_comments = await prisma.discussion_board_comment.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussion_board_commentWithIdOnly = await prisma.discussion_board_comment.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussion_board_commentFindManyArgs>(args?: SelectSubset<T, discussion_board_commentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_commentPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussion_board_comment.\n     * @param {discussion_board_commentCreateArgs} args - Arguments to create a Discussion_board_comment.\n     * @example\n     * // Create one Discussion_board_comment\n     * const Discussion_board_comment = await prisma.discussion_board_comment.create({\n     *   data: {\n     *     // ... data to create a Discussion_board_comment\n     *   }\n     * })\n     * \n     */\n    create<T extends discussion_board_commentCreateArgs>(args: SelectSubset<T, discussion_board_commentCreateArgs<ExtArgs>>): Prisma__discussion_board_commentClient<$Result.GetResult<Prisma.$discussion_board_commentPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussion_board_comments.\n     * @param {discussion_board_commentCreateManyArgs} args - Arguments to create many Discussion_board_comments.\n     * @example\n     * // Create many Discussion_board_comments\n     * const discussion_board_comment = await prisma.discussion_board_comment.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussion_board_commentCreateManyArgs>(args?: SelectSubset<T, discussion_board_commentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussion_board_comments and returns the data saved in the database.\n     * @param {discussion_board_commentCreateManyAndReturnArgs} args - Arguments to create many Discussion_board_comments.\n     * @example\n     * // Create many Discussion_board_comments\n     * const discussion_board_comment = await prisma.discussion_board_comment.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussion_board_comments and only return the `id`\n     * const discussion_board_commentWithIdOnly = await prisma.discussion_board_comment.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussion_board_commentCreateManyAndReturnArgs>(args?: SelectSubset<T, discussion_board_commentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_commentPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussion_board_comment.\n     * @param {discussion_board_commentDeleteArgs} args - Arguments to delete one Discussion_board_comment.\n     * @example\n     * // Delete one Discussion_board_comment\n     * const Discussion_board_comment = await prisma.discussion_board_comment.delete({\n     *   where: {\n     *     // ... filter to delete one Discussion_board_comment\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussion_board_commentDeleteArgs>(args: SelectSubset<T, discussion_board_commentDeleteArgs<ExtArgs>>): Prisma__discussion_board_commentClient<$Result.GetResult<Prisma.$discussion_board_commentPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussion_board_comment.\n     * @param {discussion_board_commentUpdateArgs} args - Arguments to update one Discussion_board_comment.\n     * @example\n     * // Update one Discussion_board_comment\n     * const discussion_board_comment = await prisma.discussion_board_comment.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussion_board_commentUpdateArgs>(args: SelectSubset<T, discussion_board_commentUpdateArgs<ExtArgs>>): Prisma__discussion_board_commentClient<$Result.GetResult<Prisma.$discussion_board_commentPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussion_board_comments.\n     * @param {discussion_board_commentDeleteManyArgs} args - Arguments to filter Discussion_board_comments to delete.\n     * @example\n     * // Delete a few Discussion_board_comments\n     * const { count } = await prisma.discussion_board_comment.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussion_board_commentDeleteManyArgs>(args?: SelectSubset<T, discussion_board_commentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_comments.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_commentUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussion_board_comments\n     * const discussion_board_comment = await prisma.discussion_board_comment.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussion_board_commentUpdateManyArgs>(args: SelectSubset<T, discussion_board_commentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_comments and returns the data updated in the database.\n     * @param {discussion_board_commentUpdateManyAndReturnArgs} args - Arguments to update many Discussion_board_comments.\n     * @example\n     * // Update many Discussion_board_comments\n     * const discussion_board_comment = await prisma.discussion_board_comment.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussion_board_comments and only return the `id`\n     * const discussion_board_commentWithIdOnly = await prisma.discussion_board_comment.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussion_board_commentUpdateManyAndReturnArgs>(args: SelectSubset<T, discussion_board_commentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_commentPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussion_board_comment.\n     * @param {discussion_board_commentUpsertArgs} args - Arguments to update or create a Discussion_board_comment.\n     * @example\n     * // Update or create a Discussion_board_comment\n     * const discussion_board_comment = await prisma.discussion_board_comment.upsert({\n     *   create: {\n     *     // ... data to create a Discussion_board_comment\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussion_board_comment we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussion_board_commentUpsertArgs>(args: SelectSubset<T, discussion_board_commentUpsertArgs<ExtArgs>>): Prisma__discussion_board_commentClient<$Result.GetResult<Prisma.$discussion_board_commentPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussion_board_comments.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_commentCountArgs} args - Arguments to filter Discussion_board_comments to count.\n     * @example\n     * // Count the number of Discussion_board_comments\n     * const count = await prisma.discussion_board_comment.count({\n     *   where: {\n     *     // ... the filter for the Discussion_board_comments we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussion_board_commentCountArgs>(\n      args?: Subset<T, discussion_board_commentCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussion_board_commentCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussion_board_comment.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussion_board_commentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussion_board_commentAggregateArgs>(args: Subset<T, Discussion_board_commentAggregateArgs>): Prisma.PrismaPromise<GetDiscussion_board_commentAggregateType<T>>\n\n    /**\n     * Group by Discussion_board_comment.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_commentGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussion_board_commentGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussion_board_commentGroupByArgs['orderBy'] }\n        : { orderBy?: discussion_board_commentGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussion_board_commentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussion_board_commentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussion_board_comment model\n   */\n  readonly fields: discussion_board_commentFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussion_board_comment.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussion_board_commentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    post<T extends discussion_board_postDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_postDefaultArgs<ExtArgs>>): Prisma__discussion_board_postClient<$Result.GetResult<Prisma.$discussion_board_postPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    author_user<T extends discussion_board_usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_usersDefaultArgs<ExtArgs>>): Prisma__discussion_board_usersClient<$Result.GetResult<Prisma.$discussion_board_usersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    parent_comment<T extends discussion_board_comment$parent_commentArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_comment$parent_commentArgs<ExtArgs>>): Prisma__discussion_board_commentClient<$Result.GetResult<Prisma.$discussion_board_commentPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    recursive<T extends discussion_board_comment$recursiveArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_comment$recursiveArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_commentPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_vote<T extends discussion_board_comment$discussion_board_voteArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_comment$discussion_board_voteArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_votePayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_reaction<T extends discussion_board_comment$discussion_board_reactionArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_comment$discussion_board_reactionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_reactionPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_bookmark<T extends discussion_board_comment$discussion_board_bookmarkArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_comment$discussion_board_bookmarkArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_bookmarkPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_notification<T extends discussion_board_comment$discussion_board_notificationArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_comment$discussion_board_notificationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_notificationPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_subscription<T extends discussion_board_comment$discussion_board_subscriptionArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_comment$discussion_board_subscriptionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_subscriptionPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_report<T extends discussion_board_comment$discussion_board_reportArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_comment$discussion_board_reportArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_reportPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_moderator_action<T extends discussion_board_comment$discussion_board_moderator_actionArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_comment$discussion_board_moderator_actionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_moderator_actionPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_warning<T extends discussion_board_comment$discussion_board_warningArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_comment$discussion_board_warningArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_warningPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussion_board_comment model\n   */\n  interface discussion_board_commentFieldRefs {\n    readonly id: FieldRef<\"discussion_board_comment\", 'String'>\n    readonly post_id: FieldRef<\"discussion_board_comment\", 'String'>\n    readonly author_user_id: FieldRef<\"discussion_board_comment\", 'String'>\n    readonly parent_comment_id: FieldRef<\"discussion_board_comment\", 'String'>\n    readonly body: FieldRef<\"discussion_board_comment\", 'String'>\n    readonly created_at: FieldRef<\"discussion_board_comment\", 'DateTime'>\n    readonly updated_at: FieldRef<\"discussion_board_comment\", 'DateTime'>\n    readonly deleted_at: FieldRef<\"discussion_board_comment\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussion_board_comment findUnique\n   */\n  export type discussion_board_commentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_comment\n     */\n    select?: discussion_board_commentSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_comment\n     */\n    omit?: discussion_board_commentOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_commentInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_comment to fetch.\n     */\n    where: discussion_board_commentWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_comment findUniqueOrThrow\n   */\n  export type discussion_board_commentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_comment\n     */\n    select?: discussion_board_commentSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_comment\n     */\n    omit?: discussion_board_commentOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_commentInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_comment to fetch.\n     */\n    where: discussion_board_commentWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_comment findFirst\n   */\n  export type discussion_board_commentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_comment\n     */\n    select?: discussion_board_commentSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_comment\n     */\n    omit?: discussion_board_commentOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_commentInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_comment to fetch.\n     */\n    where?: discussion_board_commentWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_comments to fetch.\n     */\n    orderBy?: discussion_board_commentOrderByWithRelationInput | discussion_board_commentOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_comments.\n     */\n    cursor?: discussion_board_commentWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_comments from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_comments.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_comments.\n     */\n    distinct?: Discussion_board_commentScalarFieldEnum | Discussion_board_commentScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_comment findFirstOrThrow\n   */\n  export type discussion_board_commentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_comment\n     */\n    select?: discussion_board_commentSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_comment\n     */\n    omit?: discussion_board_commentOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_commentInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_comment to fetch.\n     */\n    where?: discussion_board_commentWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_comments to fetch.\n     */\n    orderBy?: discussion_board_commentOrderByWithRelationInput | discussion_board_commentOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_comments.\n     */\n    cursor?: discussion_board_commentWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_comments from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_comments.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_comments.\n     */\n    distinct?: Discussion_board_commentScalarFieldEnum | Discussion_board_commentScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_comment findMany\n   */\n  export type discussion_board_commentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_comment\n     */\n    select?: discussion_board_commentSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_comment\n     */\n    omit?: discussion_board_commentOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_commentInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_comments to fetch.\n     */\n    where?: discussion_board_commentWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_comments to fetch.\n     */\n    orderBy?: discussion_board_commentOrderByWithRelationInput | discussion_board_commentOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussion_board_comments.\n     */\n    cursor?: discussion_board_commentWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_comments from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_comments.\n     */\n    skip?: number\n    distinct?: Discussion_board_commentScalarFieldEnum | Discussion_board_commentScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_comment create\n   */\n  export type discussion_board_commentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_comment\n     */\n    select?: discussion_board_commentSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_comment\n     */\n    omit?: discussion_board_commentOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_commentInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussion_board_comment.\n     */\n    data: XOR<discussion_board_commentCreateInput, discussion_board_commentUncheckedCreateInput>\n  }\n\n  /**\n   * discussion_board_comment createMany\n   */\n  export type discussion_board_commentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussion_board_comments.\n     */\n    data: discussion_board_commentCreateManyInput | discussion_board_commentCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussion_board_comment createManyAndReturn\n   */\n  export type discussion_board_commentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_comment\n     */\n    select?: discussion_board_commentSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_comment\n     */\n    omit?: discussion_board_commentOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussion_board_comments.\n     */\n    data: discussion_board_commentCreateManyInput | discussion_board_commentCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_commentIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_comment update\n   */\n  export type discussion_board_commentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_comment\n     */\n    select?: discussion_board_commentSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_comment\n     */\n    omit?: discussion_board_commentOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_commentInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussion_board_comment.\n     */\n    data: XOR<discussion_board_commentUpdateInput, discussion_board_commentUncheckedUpdateInput>\n    /**\n     * Choose, which discussion_board_comment to update.\n     */\n    where: discussion_board_commentWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_comment updateMany\n   */\n  export type discussion_board_commentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussion_board_comments.\n     */\n    data: XOR<discussion_board_commentUpdateManyMutationInput, discussion_board_commentUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_comments to update\n     */\n    where?: discussion_board_commentWhereInput\n    /**\n     * Limit how many discussion_board_comments to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_comment updateManyAndReturn\n   */\n  export type discussion_board_commentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_comment\n     */\n    select?: discussion_board_commentSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_comment\n     */\n    omit?: discussion_board_commentOmit<ExtArgs> | null\n    /**\n     * The data used to update discussion_board_comments.\n     */\n    data: XOR<discussion_board_commentUpdateManyMutationInput, discussion_board_commentUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_comments to update\n     */\n    where?: discussion_board_commentWhereInput\n    /**\n     * Limit how many discussion_board_comments to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_commentIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_comment upsert\n   */\n  export type discussion_board_commentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_comment\n     */\n    select?: discussion_board_commentSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_comment\n     */\n    omit?: discussion_board_commentOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_commentInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussion_board_comment to update in case it exists.\n     */\n    where: discussion_board_commentWhereUniqueInput\n    /**\n     * In case the discussion_board_comment found by the `where` argument doesn't exist, create a new discussion_board_comment with this data.\n     */\n    create: XOR<discussion_board_commentCreateInput, discussion_board_commentUncheckedCreateInput>\n    /**\n     * In case the discussion_board_comment was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussion_board_commentUpdateInput, discussion_board_commentUncheckedUpdateInput>\n  }\n\n  /**\n   * discussion_board_comment delete\n   */\n  export type discussion_board_commentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_comment\n     */\n    select?: discussion_board_commentSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_comment\n     */\n    omit?: discussion_board_commentOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_commentInclude<ExtArgs> | null\n    /**\n     * Filter which discussion_board_comment to delete.\n     */\n    where: discussion_board_commentWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_comment deleteMany\n   */\n  export type discussion_board_commentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_comments to delete\n     */\n    where?: discussion_board_commentWhereInput\n    /**\n     * Limit how many discussion_board_comments to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_comment.parent_comment\n   */\n  export type discussion_board_comment$parent_commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_comment\n     */\n    select?: discussion_board_commentSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_comment\n     */\n    omit?: discussion_board_commentOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_commentInclude<ExtArgs> | null\n    where?: discussion_board_commentWhereInput\n  }\n\n  /**\n   * discussion_board_comment.recursive\n   */\n  export type discussion_board_comment$recursiveArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_comment\n     */\n    select?: discussion_board_commentSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_comment\n     */\n    omit?: discussion_board_commentOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_commentInclude<ExtArgs> | null\n    where?: discussion_board_commentWhereInput\n    orderBy?: discussion_board_commentOrderByWithRelationInput | discussion_board_commentOrderByWithRelationInput[]\n    cursor?: discussion_board_commentWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_commentScalarFieldEnum | Discussion_board_commentScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_comment.discussion_board_vote\n   */\n  export type discussion_board_comment$discussion_board_voteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_vote\n     */\n    select?: discussion_board_voteSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_vote\n     */\n    omit?: discussion_board_voteOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_voteInclude<ExtArgs> | null\n    where?: discussion_board_voteWhereInput\n    orderBy?: discussion_board_voteOrderByWithRelationInput | discussion_board_voteOrderByWithRelationInput[]\n    cursor?: discussion_board_voteWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_voteScalarFieldEnum | Discussion_board_voteScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_comment.discussion_board_reaction\n   */\n  export type discussion_board_comment$discussion_board_reactionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_reaction\n     */\n    select?: discussion_board_reactionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_reaction\n     */\n    omit?: discussion_board_reactionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_reactionInclude<ExtArgs> | null\n    where?: discussion_board_reactionWhereInput\n    orderBy?: discussion_board_reactionOrderByWithRelationInput | discussion_board_reactionOrderByWithRelationInput[]\n    cursor?: discussion_board_reactionWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_reactionScalarFieldEnum | Discussion_board_reactionScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_comment.discussion_board_bookmark\n   */\n  export type discussion_board_comment$discussion_board_bookmarkArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_bookmark\n     */\n    select?: discussion_board_bookmarkSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_bookmark\n     */\n    omit?: discussion_board_bookmarkOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_bookmarkInclude<ExtArgs> | null\n    where?: discussion_board_bookmarkWhereInput\n    orderBy?: discussion_board_bookmarkOrderByWithRelationInput | discussion_board_bookmarkOrderByWithRelationInput[]\n    cursor?: discussion_board_bookmarkWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_bookmarkScalarFieldEnum | Discussion_board_bookmarkScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_comment.discussion_board_notification\n   */\n  export type discussion_board_comment$discussion_board_notificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_notification\n     */\n    select?: discussion_board_notificationSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_notification\n     */\n    omit?: discussion_board_notificationOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_notificationInclude<ExtArgs> | null\n    where?: discussion_board_notificationWhereInput\n    orderBy?: discussion_board_notificationOrderByWithRelationInput | discussion_board_notificationOrderByWithRelationInput[]\n    cursor?: discussion_board_notificationWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_notificationScalarFieldEnum | Discussion_board_notificationScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_comment.discussion_board_subscription\n   */\n  export type discussion_board_comment$discussion_board_subscriptionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_subscription\n     */\n    select?: discussion_board_subscriptionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_subscription\n     */\n    omit?: discussion_board_subscriptionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_subscriptionInclude<ExtArgs> | null\n    where?: discussion_board_subscriptionWhereInput\n    orderBy?: discussion_board_subscriptionOrderByWithRelationInput | discussion_board_subscriptionOrderByWithRelationInput[]\n    cursor?: discussion_board_subscriptionWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_subscriptionScalarFieldEnum | Discussion_board_subscriptionScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_comment.discussion_board_report\n   */\n  export type discussion_board_comment$discussion_board_reportArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_report\n     */\n    select?: discussion_board_reportSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_report\n     */\n    omit?: discussion_board_reportOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_reportInclude<ExtArgs> | null\n    where?: discussion_board_reportWhereInput\n    orderBy?: discussion_board_reportOrderByWithRelationInput | discussion_board_reportOrderByWithRelationInput[]\n    cursor?: discussion_board_reportWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_reportScalarFieldEnum | Discussion_board_reportScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_comment.discussion_board_moderator_action\n   */\n  export type discussion_board_comment$discussion_board_moderator_actionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_moderator_action\n     */\n    select?: discussion_board_moderator_actionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_moderator_action\n     */\n    omit?: discussion_board_moderator_actionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_moderator_actionInclude<ExtArgs> | null\n    where?: discussion_board_moderator_actionWhereInput\n    orderBy?: discussion_board_moderator_actionOrderByWithRelationInput | discussion_board_moderator_actionOrderByWithRelationInput[]\n    cursor?: discussion_board_moderator_actionWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_moderator_actionScalarFieldEnum | Discussion_board_moderator_actionScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_comment.discussion_board_warning\n   */\n  export type discussion_board_comment$discussion_board_warningArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_warning\n     */\n    select?: discussion_board_warningSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_warning\n     */\n    omit?: discussion_board_warningOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_warningInclude<ExtArgs> | null\n    where?: discussion_board_warningWhereInput\n    orderBy?: discussion_board_warningOrderByWithRelationInput | discussion_board_warningOrderByWithRelationInput[]\n    cursor?: discussion_board_warningWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_warningScalarFieldEnum | Discussion_board_warningScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_comment without action\n   */\n  export type discussion_board_commentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_comment\n     */\n    select?: discussion_board_commentSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_comment\n     */\n    omit?: discussion_board_commentOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_commentInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussion_board_thread_tag\n   */\n\n  export type AggregateDiscussion_board_thread_tag = {\n    _count: Discussion_board_thread_tagCountAggregateOutputType | null\n    _min: Discussion_board_thread_tagMinAggregateOutputType | null\n    _max: Discussion_board_thread_tagMaxAggregateOutputType | null\n  }\n\n  export type Discussion_board_thread_tagMinAggregateOutputType = {\n    id: string | null\n    thread_id: string | null\n    tag_id: string | null\n    created_at: Date | null\n  }\n\n  export type Discussion_board_thread_tagMaxAggregateOutputType = {\n    id: string | null\n    thread_id: string | null\n    tag_id: string | null\n    created_at: Date | null\n  }\n\n  export type Discussion_board_thread_tagCountAggregateOutputType = {\n    id: number\n    thread_id: number\n    tag_id: number\n    created_at: number\n    _all: number\n  }\n\n\n  export type Discussion_board_thread_tagMinAggregateInputType = {\n    id?: true\n    thread_id?: true\n    tag_id?: true\n    created_at?: true\n  }\n\n  export type Discussion_board_thread_tagMaxAggregateInputType = {\n    id?: true\n    thread_id?: true\n    tag_id?: true\n    created_at?: true\n  }\n\n  export type Discussion_board_thread_tagCountAggregateInputType = {\n    id?: true\n    thread_id?: true\n    tag_id?: true\n    created_at?: true\n    _all?: true\n  }\n\n  export type Discussion_board_thread_tagAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_thread_tag to aggregate.\n     */\n    where?: discussion_board_thread_tagWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_thread_tags to fetch.\n     */\n    orderBy?: discussion_board_thread_tagOrderByWithRelationInput | discussion_board_thread_tagOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussion_board_thread_tagWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_thread_tags from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_thread_tags.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussion_board_thread_tags\n    **/\n    _count?: true | Discussion_board_thread_tagCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussion_board_thread_tagMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussion_board_thread_tagMaxAggregateInputType\n  }\n\n  export type GetDiscussion_board_thread_tagAggregateType<T extends Discussion_board_thread_tagAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussion_board_thread_tag]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussion_board_thread_tag[P]>\n      : GetScalarType<T[P], AggregateDiscussion_board_thread_tag[P]>\n  }\n\n\n\n\n  export type discussion_board_thread_tagGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_thread_tagWhereInput\n    orderBy?: discussion_board_thread_tagOrderByWithAggregationInput | discussion_board_thread_tagOrderByWithAggregationInput[]\n    by: Discussion_board_thread_tagScalarFieldEnum[] | Discussion_board_thread_tagScalarFieldEnum\n    having?: discussion_board_thread_tagScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussion_board_thread_tagCountAggregateInputType | true\n    _min?: Discussion_board_thread_tagMinAggregateInputType\n    _max?: Discussion_board_thread_tagMaxAggregateInputType\n  }\n\n  export type Discussion_board_thread_tagGroupByOutputType = {\n    id: string\n    thread_id: string\n    tag_id: string\n    created_at: Date\n    _count: Discussion_board_thread_tagCountAggregateOutputType | null\n    _min: Discussion_board_thread_tagMinAggregateOutputType | null\n    _max: Discussion_board_thread_tagMaxAggregateOutputType | null\n  }\n\n  type GetDiscussion_board_thread_tagGroupByPayload<T extends discussion_board_thread_tagGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussion_board_thread_tagGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussion_board_thread_tagGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussion_board_thread_tagGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussion_board_thread_tagGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussion_board_thread_tagSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    thread_id?: boolean\n    tag_id?: boolean\n    created_at?: boolean\n    thread?: boolean | discussion_board_threadDefaultArgs<ExtArgs>\n    tag_category?: boolean | discussion_board_tag_categoryDefaultArgs<ExtArgs>\n    discussion_board_subscription?: boolean | discussion_board_thread_tag$discussion_board_subscriptionArgs<ExtArgs>\n    _count?: boolean | Discussion_board_thread_tagCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_thread_tag\"]>\n\n  export type discussion_board_thread_tagSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    thread_id?: boolean\n    tag_id?: boolean\n    created_at?: boolean\n    thread?: boolean | discussion_board_threadDefaultArgs<ExtArgs>\n    tag_category?: boolean | discussion_board_tag_categoryDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_thread_tag\"]>\n\n  export type discussion_board_thread_tagSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    thread_id?: boolean\n    tag_id?: boolean\n    created_at?: boolean\n    thread?: boolean | discussion_board_threadDefaultArgs<ExtArgs>\n    tag_category?: boolean | discussion_board_tag_categoryDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_thread_tag\"]>\n\n  export type discussion_board_thread_tagSelectScalar = {\n    id?: boolean\n    thread_id?: boolean\n    tag_id?: boolean\n    created_at?: boolean\n  }\n\n  export type discussion_board_thread_tagOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"thread_id\" | \"tag_id\" | \"created_at\", ExtArgs[\"result\"][\"discussion_board_thread_tag\"]>\n  export type discussion_board_thread_tagInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    thread?: boolean | discussion_board_threadDefaultArgs<ExtArgs>\n    tag_category?: boolean | discussion_board_tag_categoryDefaultArgs<ExtArgs>\n    discussion_board_subscription?: boolean | discussion_board_thread_tag$discussion_board_subscriptionArgs<ExtArgs>\n    _count?: boolean | Discussion_board_thread_tagCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type discussion_board_thread_tagIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    thread?: boolean | discussion_board_threadDefaultArgs<ExtArgs>\n    tag_category?: boolean | discussion_board_tag_categoryDefaultArgs<ExtArgs>\n  }\n  export type discussion_board_thread_tagIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    thread?: boolean | discussion_board_threadDefaultArgs<ExtArgs>\n    tag_category?: boolean | discussion_board_tag_categoryDefaultArgs<ExtArgs>\n  }\n\n  export type $discussion_board_thread_tagPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussion_board_thread_tag\"\n    objects: {\n      thread: Prisma.$discussion_board_threadPayload<ExtArgs>\n      tag_category: Prisma.$discussion_board_tag_categoryPayload<ExtArgs>\n      discussion_board_subscription: Prisma.$discussion_board_subscriptionPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * [Junction unique identifier] - PK for junction row.\n       */\n      id: string\n      /**\n       * [Thread FK] - Thread to which tag is assigned.\n       */\n      thread_id: string\n      /**\n       * [Tag FK] - Tag being assigned.\n       */\n      tag_id: string\n      /**\n       * [Assignment timestamp] - Tagging operation date.\n       */\n      created_at: Date\n    }, ExtArgs[\"result\"][\"discussion_board_thread_tag\"]>\n    composites: {}\n  }\n\n  type discussion_board_thread_tagGetPayload<S extends boolean | null | undefined | discussion_board_thread_tagDefaultArgs> = $Result.GetResult<Prisma.$discussion_board_thread_tagPayload, S>\n\n  type discussion_board_thread_tagCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussion_board_thread_tagFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussion_board_thread_tagCountAggregateInputType | true\n    }\n\n  export interface discussion_board_thread_tagDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussion_board_thread_tag'], meta: { name: 'discussion_board_thread_tag' } }\n    /**\n     * Find zero or one Discussion_board_thread_tag that matches the filter.\n     * @param {discussion_board_thread_tagFindUniqueArgs} args - Arguments to find a Discussion_board_thread_tag\n     * @example\n     * // Get one Discussion_board_thread_tag\n     * const discussion_board_thread_tag = await prisma.discussion_board_thread_tag.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussion_board_thread_tagFindUniqueArgs>(args: SelectSubset<T, discussion_board_thread_tagFindUniqueArgs<ExtArgs>>): Prisma__discussion_board_thread_tagClient<$Result.GetResult<Prisma.$discussion_board_thread_tagPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussion_board_thread_tag that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussion_board_thread_tagFindUniqueOrThrowArgs} args - Arguments to find a Discussion_board_thread_tag\n     * @example\n     * // Get one Discussion_board_thread_tag\n     * const discussion_board_thread_tag = await prisma.discussion_board_thread_tag.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussion_board_thread_tagFindUniqueOrThrowArgs>(args: SelectSubset<T, discussion_board_thread_tagFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussion_board_thread_tagClient<$Result.GetResult<Prisma.$discussion_board_thread_tagPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_thread_tag that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_thread_tagFindFirstArgs} args - Arguments to find a Discussion_board_thread_tag\n     * @example\n     * // Get one Discussion_board_thread_tag\n     * const discussion_board_thread_tag = await prisma.discussion_board_thread_tag.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussion_board_thread_tagFindFirstArgs>(args?: SelectSubset<T, discussion_board_thread_tagFindFirstArgs<ExtArgs>>): Prisma__discussion_board_thread_tagClient<$Result.GetResult<Prisma.$discussion_board_thread_tagPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_thread_tag that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_thread_tagFindFirstOrThrowArgs} args - Arguments to find a Discussion_board_thread_tag\n     * @example\n     * // Get one Discussion_board_thread_tag\n     * const discussion_board_thread_tag = await prisma.discussion_board_thread_tag.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussion_board_thread_tagFindFirstOrThrowArgs>(args?: SelectSubset<T, discussion_board_thread_tagFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussion_board_thread_tagClient<$Result.GetResult<Prisma.$discussion_board_thread_tagPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussion_board_thread_tags that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_thread_tagFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussion_board_thread_tags\n     * const discussion_board_thread_tags = await prisma.discussion_board_thread_tag.findMany()\n     * \n     * // Get first 10 Discussion_board_thread_tags\n     * const discussion_board_thread_tags = await prisma.discussion_board_thread_tag.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussion_board_thread_tagWithIdOnly = await prisma.discussion_board_thread_tag.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussion_board_thread_tagFindManyArgs>(args?: SelectSubset<T, discussion_board_thread_tagFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_thread_tagPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussion_board_thread_tag.\n     * @param {discussion_board_thread_tagCreateArgs} args - Arguments to create a Discussion_board_thread_tag.\n     * @example\n     * // Create one Discussion_board_thread_tag\n     * const Discussion_board_thread_tag = await prisma.discussion_board_thread_tag.create({\n     *   data: {\n     *     // ... data to create a Discussion_board_thread_tag\n     *   }\n     * })\n     * \n     */\n    create<T extends discussion_board_thread_tagCreateArgs>(args: SelectSubset<T, discussion_board_thread_tagCreateArgs<ExtArgs>>): Prisma__discussion_board_thread_tagClient<$Result.GetResult<Prisma.$discussion_board_thread_tagPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussion_board_thread_tags.\n     * @param {discussion_board_thread_tagCreateManyArgs} args - Arguments to create many Discussion_board_thread_tags.\n     * @example\n     * // Create many Discussion_board_thread_tags\n     * const discussion_board_thread_tag = await prisma.discussion_board_thread_tag.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussion_board_thread_tagCreateManyArgs>(args?: SelectSubset<T, discussion_board_thread_tagCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussion_board_thread_tags and returns the data saved in the database.\n     * @param {discussion_board_thread_tagCreateManyAndReturnArgs} args - Arguments to create many Discussion_board_thread_tags.\n     * @example\n     * // Create many Discussion_board_thread_tags\n     * const discussion_board_thread_tag = await prisma.discussion_board_thread_tag.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussion_board_thread_tags and only return the `id`\n     * const discussion_board_thread_tagWithIdOnly = await prisma.discussion_board_thread_tag.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussion_board_thread_tagCreateManyAndReturnArgs>(args?: SelectSubset<T, discussion_board_thread_tagCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_thread_tagPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussion_board_thread_tag.\n     * @param {discussion_board_thread_tagDeleteArgs} args - Arguments to delete one Discussion_board_thread_tag.\n     * @example\n     * // Delete one Discussion_board_thread_tag\n     * const Discussion_board_thread_tag = await prisma.discussion_board_thread_tag.delete({\n     *   where: {\n     *     // ... filter to delete one Discussion_board_thread_tag\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussion_board_thread_tagDeleteArgs>(args: SelectSubset<T, discussion_board_thread_tagDeleteArgs<ExtArgs>>): Prisma__discussion_board_thread_tagClient<$Result.GetResult<Prisma.$discussion_board_thread_tagPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussion_board_thread_tag.\n     * @param {discussion_board_thread_tagUpdateArgs} args - Arguments to update one Discussion_board_thread_tag.\n     * @example\n     * // Update one Discussion_board_thread_tag\n     * const discussion_board_thread_tag = await prisma.discussion_board_thread_tag.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussion_board_thread_tagUpdateArgs>(args: SelectSubset<T, discussion_board_thread_tagUpdateArgs<ExtArgs>>): Prisma__discussion_board_thread_tagClient<$Result.GetResult<Prisma.$discussion_board_thread_tagPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussion_board_thread_tags.\n     * @param {discussion_board_thread_tagDeleteManyArgs} args - Arguments to filter Discussion_board_thread_tags to delete.\n     * @example\n     * // Delete a few Discussion_board_thread_tags\n     * const { count } = await prisma.discussion_board_thread_tag.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussion_board_thread_tagDeleteManyArgs>(args?: SelectSubset<T, discussion_board_thread_tagDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_thread_tags.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_thread_tagUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussion_board_thread_tags\n     * const discussion_board_thread_tag = await prisma.discussion_board_thread_tag.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussion_board_thread_tagUpdateManyArgs>(args: SelectSubset<T, discussion_board_thread_tagUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_thread_tags and returns the data updated in the database.\n     * @param {discussion_board_thread_tagUpdateManyAndReturnArgs} args - Arguments to update many Discussion_board_thread_tags.\n     * @example\n     * // Update many Discussion_board_thread_tags\n     * const discussion_board_thread_tag = await prisma.discussion_board_thread_tag.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussion_board_thread_tags and only return the `id`\n     * const discussion_board_thread_tagWithIdOnly = await prisma.discussion_board_thread_tag.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussion_board_thread_tagUpdateManyAndReturnArgs>(args: SelectSubset<T, discussion_board_thread_tagUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_thread_tagPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussion_board_thread_tag.\n     * @param {discussion_board_thread_tagUpsertArgs} args - Arguments to update or create a Discussion_board_thread_tag.\n     * @example\n     * // Update or create a Discussion_board_thread_tag\n     * const discussion_board_thread_tag = await prisma.discussion_board_thread_tag.upsert({\n     *   create: {\n     *     // ... data to create a Discussion_board_thread_tag\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussion_board_thread_tag we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussion_board_thread_tagUpsertArgs>(args: SelectSubset<T, discussion_board_thread_tagUpsertArgs<ExtArgs>>): Prisma__discussion_board_thread_tagClient<$Result.GetResult<Prisma.$discussion_board_thread_tagPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussion_board_thread_tags.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_thread_tagCountArgs} args - Arguments to filter Discussion_board_thread_tags to count.\n     * @example\n     * // Count the number of Discussion_board_thread_tags\n     * const count = await prisma.discussion_board_thread_tag.count({\n     *   where: {\n     *     // ... the filter for the Discussion_board_thread_tags we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussion_board_thread_tagCountArgs>(\n      args?: Subset<T, discussion_board_thread_tagCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussion_board_thread_tagCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussion_board_thread_tag.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussion_board_thread_tagAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussion_board_thread_tagAggregateArgs>(args: Subset<T, Discussion_board_thread_tagAggregateArgs>): Prisma.PrismaPromise<GetDiscussion_board_thread_tagAggregateType<T>>\n\n    /**\n     * Group by Discussion_board_thread_tag.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_thread_tagGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussion_board_thread_tagGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussion_board_thread_tagGroupByArgs['orderBy'] }\n        : { orderBy?: discussion_board_thread_tagGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussion_board_thread_tagGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussion_board_thread_tagGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussion_board_thread_tag model\n   */\n  readonly fields: discussion_board_thread_tagFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussion_board_thread_tag.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussion_board_thread_tagClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    thread<T extends discussion_board_threadDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_threadDefaultArgs<ExtArgs>>): Prisma__discussion_board_threadClient<$Result.GetResult<Prisma.$discussion_board_threadPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    tag_category<T extends discussion_board_tag_categoryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_tag_categoryDefaultArgs<ExtArgs>>): Prisma__discussion_board_tag_categoryClient<$Result.GetResult<Prisma.$discussion_board_tag_categoryPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    discussion_board_subscription<T extends discussion_board_thread_tag$discussion_board_subscriptionArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_thread_tag$discussion_board_subscriptionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_subscriptionPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussion_board_thread_tag model\n   */\n  interface discussion_board_thread_tagFieldRefs {\n    readonly id: FieldRef<\"discussion_board_thread_tag\", 'String'>\n    readonly thread_id: FieldRef<\"discussion_board_thread_tag\", 'String'>\n    readonly tag_id: FieldRef<\"discussion_board_thread_tag\", 'String'>\n    readonly created_at: FieldRef<\"discussion_board_thread_tag\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussion_board_thread_tag findUnique\n   */\n  export type discussion_board_thread_tagFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread_tag\n     */\n    select?: discussion_board_thread_tagSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread_tag\n     */\n    omit?: discussion_board_thread_tagOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_thread_tagInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_thread_tag to fetch.\n     */\n    where: discussion_board_thread_tagWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_thread_tag findUniqueOrThrow\n   */\n  export type discussion_board_thread_tagFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread_tag\n     */\n    select?: discussion_board_thread_tagSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread_tag\n     */\n    omit?: discussion_board_thread_tagOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_thread_tagInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_thread_tag to fetch.\n     */\n    where: discussion_board_thread_tagWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_thread_tag findFirst\n   */\n  export type discussion_board_thread_tagFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread_tag\n     */\n    select?: discussion_board_thread_tagSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread_tag\n     */\n    omit?: discussion_board_thread_tagOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_thread_tagInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_thread_tag to fetch.\n     */\n    where?: discussion_board_thread_tagWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_thread_tags to fetch.\n     */\n    orderBy?: discussion_board_thread_tagOrderByWithRelationInput | discussion_board_thread_tagOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_thread_tags.\n     */\n    cursor?: discussion_board_thread_tagWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_thread_tags from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_thread_tags.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_thread_tags.\n     */\n    distinct?: Discussion_board_thread_tagScalarFieldEnum | Discussion_board_thread_tagScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_thread_tag findFirstOrThrow\n   */\n  export type discussion_board_thread_tagFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread_tag\n     */\n    select?: discussion_board_thread_tagSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread_tag\n     */\n    omit?: discussion_board_thread_tagOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_thread_tagInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_thread_tag to fetch.\n     */\n    where?: discussion_board_thread_tagWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_thread_tags to fetch.\n     */\n    orderBy?: discussion_board_thread_tagOrderByWithRelationInput | discussion_board_thread_tagOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_thread_tags.\n     */\n    cursor?: discussion_board_thread_tagWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_thread_tags from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_thread_tags.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_thread_tags.\n     */\n    distinct?: Discussion_board_thread_tagScalarFieldEnum | Discussion_board_thread_tagScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_thread_tag findMany\n   */\n  export type discussion_board_thread_tagFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread_tag\n     */\n    select?: discussion_board_thread_tagSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread_tag\n     */\n    omit?: discussion_board_thread_tagOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_thread_tagInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_thread_tags to fetch.\n     */\n    where?: discussion_board_thread_tagWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_thread_tags to fetch.\n     */\n    orderBy?: discussion_board_thread_tagOrderByWithRelationInput | discussion_board_thread_tagOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussion_board_thread_tags.\n     */\n    cursor?: discussion_board_thread_tagWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_thread_tags from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_thread_tags.\n     */\n    skip?: number\n    distinct?: Discussion_board_thread_tagScalarFieldEnum | Discussion_board_thread_tagScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_thread_tag create\n   */\n  export type discussion_board_thread_tagCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread_tag\n     */\n    select?: discussion_board_thread_tagSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread_tag\n     */\n    omit?: discussion_board_thread_tagOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_thread_tagInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussion_board_thread_tag.\n     */\n    data: XOR<discussion_board_thread_tagCreateInput, discussion_board_thread_tagUncheckedCreateInput>\n  }\n\n  /**\n   * discussion_board_thread_tag createMany\n   */\n  export type discussion_board_thread_tagCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussion_board_thread_tags.\n     */\n    data: discussion_board_thread_tagCreateManyInput | discussion_board_thread_tagCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussion_board_thread_tag createManyAndReturn\n   */\n  export type discussion_board_thread_tagCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread_tag\n     */\n    select?: discussion_board_thread_tagSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread_tag\n     */\n    omit?: discussion_board_thread_tagOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussion_board_thread_tags.\n     */\n    data: discussion_board_thread_tagCreateManyInput | discussion_board_thread_tagCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_thread_tagIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_thread_tag update\n   */\n  export type discussion_board_thread_tagUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread_tag\n     */\n    select?: discussion_board_thread_tagSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread_tag\n     */\n    omit?: discussion_board_thread_tagOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_thread_tagInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussion_board_thread_tag.\n     */\n    data: XOR<discussion_board_thread_tagUpdateInput, discussion_board_thread_tagUncheckedUpdateInput>\n    /**\n     * Choose, which discussion_board_thread_tag to update.\n     */\n    where: discussion_board_thread_tagWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_thread_tag updateMany\n   */\n  export type discussion_board_thread_tagUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussion_board_thread_tags.\n     */\n    data: XOR<discussion_board_thread_tagUpdateManyMutationInput, discussion_board_thread_tagUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_thread_tags to update\n     */\n    where?: discussion_board_thread_tagWhereInput\n    /**\n     * Limit how many discussion_board_thread_tags to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_thread_tag updateManyAndReturn\n   */\n  export type discussion_board_thread_tagUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread_tag\n     */\n    select?: discussion_board_thread_tagSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread_tag\n     */\n    omit?: discussion_board_thread_tagOmit<ExtArgs> | null\n    /**\n     * The data used to update discussion_board_thread_tags.\n     */\n    data: XOR<discussion_board_thread_tagUpdateManyMutationInput, discussion_board_thread_tagUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_thread_tags to update\n     */\n    where?: discussion_board_thread_tagWhereInput\n    /**\n     * Limit how many discussion_board_thread_tags to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_thread_tagIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_thread_tag upsert\n   */\n  export type discussion_board_thread_tagUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread_tag\n     */\n    select?: discussion_board_thread_tagSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread_tag\n     */\n    omit?: discussion_board_thread_tagOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_thread_tagInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussion_board_thread_tag to update in case it exists.\n     */\n    where: discussion_board_thread_tagWhereUniqueInput\n    /**\n     * In case the discussion_board_thread_tag found by the `where` argument doesn't exist, create a new discussion_board_thread_tag with this data.\n     */\n    create: XOR<discussion_board_thread_tagCreateInput, discussion_board_thread_tagUncheckedCreateInput>\n    /**\n     * In case the discussion_board_thread_tag was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussion_board_thread_tagUpdateInput, discussion_board_thread_tagUncheckedUpdateInput>\n  }\n\n  /**\n   * discussion_board_thread_tag delete\n   */\n  export type discussion_board_thread_tagDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread_tag\n     */\n    select?: discussion_board_thread_tagSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread_tag\n     */\n    omit?: discussion_board_thread_tagOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_thread_tagInclude<ExtArgs> | null\n    /**\n     * Filter which discussion_board_thread_tag to delete.\n     */\n    where: discussion_board_thread_tagWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_thread_tag deleteMany\n   */\n  export type discussion_board_thread_tagDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_thread_tags to delete\n     */\n    where?: discussion_board_thread_tagWhereInput\n    /**\n     * Limit how many discussion_board_thread_tags to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_thread_tag.discussion_board_subscription\n   */\n  export type discussion_board_thread_tag$discussion_board_subscriptionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_subscription\n     */\n    select?: discussion_board_subscriptionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_subscription\n     */\n    omit?: discussion_board_subscriptionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_subscriptionInclude<ExtArgs> | null\n    where?: discussion_board_subscriptionWhereInput\n    orderBy?: discussion_board_subscriptionOrderByWithRelationInput | discussion_board_subscriptionOrderByWithRelationInput[]\n    cursor?: discussion_board_subscriptionWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_subscriptionScalarFieldEnum | Discussion_board_subscriptionScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_thread_tag without action\n   */\n  export type discussion_board_thread_tagDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread_tag\n     */\n    select?: discussion_board_thread_tagSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread_tag\n     */\n    omit?: discussion_board_thread_tagOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_thread_tagInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussion_board_thread_category\n   */\n\n  export type AggregateDiscussion_board_thread_category = {\n    _count: Discussion_board_thread_categoryCountAggregateOutputType | null\n    _min: Discussion_board_thread_categoryMinAggregateOutputType | null\n    _max: Discussion_board_thread_categoryMaxAggregateOutputType | null\n  }\n\n  export type Discussion_board_thread_categoryMinAggregateOutputType = {\n    id: string | null\n    code: string | null\n    name: string | null\n    description: string | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Discussion_board_thread_categoryMaxAggregateOutputType = {\n    id: string | null\n    code: string | null\n    name: string | null\n    description: string | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Discussion_board_thread_categoryCountAggregateOutputType = {\n    id: number\n    code: number\n    name: number\n    description: number\n    created_at: number\n    updated_at: number\n    _all: number\n  }\n\n\n  export type Discussion_board_thread_categoryMinAggregateInputType = {\n    id?: true\n    code?: true\n    name?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Discussion_board_thread_categoryMaxAggregateInputType = {\n    id?: true\n    code?: true\n    name?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Discussion_board_thread_categoryCountAggregateInputType = {\n    id?: true\n    code?: true\n    name?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n    _all?: true\n  }\n\n  export type Discussion_board_thread_categoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_thread_category to aggregate.\n     */\n    where?: discussion_board_thread_categoryWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_thread_categories to fetch.\n     */\n    orderBy?: discussion_board_thread_categoryOrderByWithRelationInput | discussion_board_thread_categoryOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussion_board_thread_categoryWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_thread_categories from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_thread_categories.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussion_board_thread_categories\n    **/\n    _count?: true | Discussion_board_thread_categoryCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussion_board_thread_categoryMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussion_board_thread_categoryMaxAggregateInputType\n  }\n\n  export type GetDiscussion_board_thread_categoryAggregateType<T extends Discussion_board_thread_categoryAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussion_board_thread_category]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussion_board_thread_category[P]>\n      : GetScalarType<T[P], AggregateDiscussion_board_thread_category[P]>\n  }\n\n\n\n\n  export type discussion_board_thread_categoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_thread_categoryWhereInput\n    orderBy?: discussion_board_thread_categoryOrderByWithAggregationInput | discussion_board_thread_categoryOrderByWithAggregationInput[]\n    by: Discussion_board_thread_categoryScalarFieldEnum[] | Discussion_board_thread_categoryScalarFieldEnum\n    having?: discussion_board_thread_categoryScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussion_board_thread_categoryCountAggregateInputType | true\n    _min?: Discussion_board_thread_categoryMinAggregateInputType\n    _max?: Discussion_board_thread_categoryMaxAggregateInputType\n  }\n\n  export type Discussion_board_thread_categoryGroupByOutputType = {\n    id: string\n    code: string\n    name: string\n    description: string | null\n    created_at: Date\n    updated_at: Date\n    _count: Discussion_board_thread_categoryCountAggregateOutputType | null\n    _min: Discussion_board_thread_categoryMinAggregateOutputType | null\n    _max: Discussion_board_thread_categoryMaxAggregateOutputType | null\n  }\n\n  type GetDiscussion_board_thread_categoryGroupByPayload<T extends discussion_board_thread_categoryGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussion_board_thread_categoryGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussion_board_thread_categoryGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussion_board_thread_categoryGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussion_board_thread_categoryGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussion_board_thread_categorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    code?: boolean\n    name?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    discussion_board_thread?: boolean | discussion_board_thread_category$discussion_board_threadArgs<ExtArgs>\n    _count?: boolean | Discussion_board_thread_categoryCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_thread_category\"]>\n\n  export type discussion_board_thread_categorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    code?: boolean\n    name?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"discussion_board_thread_category\"]>\n\n  export type discussion_board_thread_categorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    code?: boolean\n    name?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"discussion_board_thread_category\"]>\n\n  export type discussion_board_thread_categorySelectScalar = {\n    id?: boolean\n    code?: boolean\n    name?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }\n\n  export type discussion_board_thread_categoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"code\" | \"name\" | \"description\" | \"created_at\" | \"updated_at\", ExtArgs[\"result\"][\"discussion_board_thread_category\"]>\n  export type discussion_board_thread_categoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussion_board_thread?: boolean | discussion_board_thread_category$discussion_board_threadArgs<ExtArgs>\n    _count?: boolean | Discussion_board_thread_categoryCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type discussion_board_thread_categoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}\n  export type discussion_board_thread_categoryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}\n\n  export type $discussion_board_thread_categoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussion_board_thread_category\"\n    objects: {\n      discussion_board_thread: Prisma.$discussion_board_threadPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * [Category PK] - Used as FK in threads.\n       */\n      id: string\n      /**\n       * [Category code] - Short, unique code ('economy').\n       */\n      code: string\n      /**\n       * [Category name] - Human-friendly, unique.\n       */\n      name: string\n      /**\n       * [Optional details] - Category description.\n       */\n      description: string | null\n      /**\n       * [Created] - Auditing.\n       */\n      created_at: Date\n      /**\n       * [Updated] - Change/audit tracking.\n       */\n      updated_at: Date\n    }, ExtArgs[\"result\"][\"discussion_board_thread_category\"]>\n    composites: {}\n  }\n\n  type discussion_board_thread_categoryGetPayload<S extends boolean | null | undefined | discussion_board_thread_categoryDefaultArgs> = $Result.GetResult<Prisma.$discussion_board_thread_categoryPayload, S>\n\n  type discussion_board_thread_categoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussion_board_thread_categoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussion_board_thread_categoryCountAggregateInputType | true\n    }\n\n  export interface discussion_board_thread_categoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussion_board_thread_category'], meta: { name: 'discussion_board_thread_category' } }\n    /**\n     * Find zero or one Discussion_board_thread_category that matches the filter.\n     * @param {discussion_board_thread_categoryFindUniqueArgs} args - Arguments to find a Discussion_board_thread_category\n     * @example\n     * // Get one Discussion_board_thread_category\n     * const discussion_board_thread_category = await prisma.discussion_board_thread_category.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussion_board_thread_categoryFindUniqueArgs>(args: SelectSubset<T, discussion_board_thread_categoryFindUniqueArgs<ExtArgs>>): Prisma__discussion_board_thread_categoryClient<$Result.GetResult<Prisma.$discussion_board_thread_categoryPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussion_board_thread_category that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussion_board_thread_categoryFindUniqueOrThrowArgs} args - Arguments to find a Discussion_board_thread_category\n     * @example\n     * // Get one Discussion_board_thread_category\n     * const discussion_board_thread_category = await prisma.discussion_board_thread_category.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussion_board_thread_categoryFindUniqueOrThrowArgs>(args: SelectSubset<T, discussion_board_thread_categoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussion_board_thread_categoryClient<$Result.GetResult<Prisma.$discussion_board_thread_categoryPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_thread_category that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_thread_categoryFindFirstArgs} args - Arguments to find a Discussion_board_thread_category\n     * @example\n     * // Get one Discussion_board_thread_category\n     * const discussion_board_thread_category = await prisma.discussion_board_thread_category.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussion_board_thread_categoryFindFirstArgs>(args?: SelectSubset<T, discussion_board_thread_categoryFindFirstArgs<ExtArgs>>): Prisma__discussion_board_thread_categoryClient<$Result.GetResult<Prisma.$discussion_board_thread_categoryPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_thread_category that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_thread_categoryFindFirstOrThrowArgs} args - Arguments to find a Discussion_board_thread_category\n     * @example\n     * // Get one Discussion_board_thread_category\n     * const discussion_board_thread_category = await prisma.discussion_board_thread_category.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussion_board_thread_categoryFindFirstOrThrowArgs>(args?: SelectSubset<T, discussion_board_thread_categoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussion_board_thread_categoryClient<$Result.GetResult<Prisma.$discussion_board_thread_categoryPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussion_board_thread_categories that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_thread_categoryFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussion_board_thread_categories\n     * const discussion_board_thread_categories = await prisma.discussion_board_thread_category.findMany()\n     * \n     * // Get first 10 Discussion_board_thread_categories\n     * const discussion_board_thread_categories = await prisma.discussion_board_thread_category.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussion_board_thread_categoryWithIdOnly = await prisma.discussion_board_thread_category.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussion_board_thread_categoryFindManyArgs>(args?: SelectSubset<T, discussion_board_thread_categoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_thread_categoryPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussion_board_thread_category.\n     * @param {discussion_board_thread_categoryCreateArgs} args - Arguments to create a Discussion_board_thread_category.\n     * @example\n     * // Create one Discussion_board_thread_category\n     * const Discussion_board_thread_category = await prisma.discussion_board_thread_category.create({\n     *   data: {\n     *     // ... data to create a Discussion_board_thread_category\n     *   }\n     * })\n     * \n     */\n    create<T extends discussion_board_thread_categoryCreateArgs>(args: SelectSubset<T, discussion_board_thread_categoryCreateArgs<ExtArgs>>): Prisma__discussion_board_thread_categoryClient<$Result.GetResult<Prisma.$discussion_board_thread_categoryPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussion_board_thread_categories.\n     * @param {discussion_board_thread_categoryCreateManyArgs} args - Arguments to create many Discussion_board_thread_categories.\n     * @example\n     * // Create many Discussion_board_thread_categories\n     * const discussion_board_thread_category = await prisma.discussion_board_thread_category.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussion_board_thread_categoryCreateManyArgs>(args?: SelectSubset<T, discussion_board_thread_categoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussion_board_thread_categories and returns the data saved in the database.\n     * @param {discussion_board_thread_categoryCreateManyAndReturnArgs} args - Arguments to create many Discussion_board_thread_categories.\n     * @example\n     * // Create many Discussion_board_thread_categories\n     * const discussion_board_thread_category = await prisma.discussion_board_thread_category.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussion_board_thread_categories and only return the `id`\n     * const discussion_board_thread_categoryWithIdOnly = await prisma.discussion_board_thread_category.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussion_board_thread_categoryCreateManyAndReturnArgs>(args?: SelectSubset<T, discussion_board_thread_categoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_thread_categoryPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussion_board_thread_category.\n     * @param {discussion_board_thread_categoryDeleteArgs} args - Arguments to delete one Discussion_board_thread_category.\n     * @example\n     * // Delete one Discussion_board_thread_category\n     * const Discussion_board_thread_category = await prisma.discussion_board_thread_category.delete({\n     *   where: {\n     *     // ... filter to delete one Discussion_board_thread_category\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussion_board_thread_categoryDeleteArgs>(args: SelectSubset<T, discussion_board_thread_categoryDeleteArgs<ExtArgs>>): Prisma__discussion_board_thread_categoryClient<$Result.GetResult<Prisma.$discussion_board_thread_categoryPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussion_board_thread_category.\n     * @param {discussion_board_thread_categoryUpdateArgs} args - Arguments to update one Discussion_board_thread_category.\n     * @example\n     * // Update one Discussion_board_thread_category\n     * const discussion_board_thread_category = await prisma.discussion_board_thread_category.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussion_board_thread_categoryUpdateArgs>(args: SelectSubset<T, discussion_board_thread_categoryUpdateArgs<ExtArgs>>): Prisma__discussion_board_thread_categoryClient<$Result.GetResult<Prisma.$discussion_board_thread_categoryPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussion_board_thread_categories.\n     * @param {discussion_board_thread_categoryDeleteManyArgs} args - Arguments to filter Discussion_board_thread_categories to delete.\n     * @example\n     * // Delete a few Discussion_board_thread_categories\n     * const { count } = await prisma.discussion_board_thread_category.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussion_board_thread_categoryDeleteManyArgs>(args?: SelectSubset<T, discussion_board_thread_categoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_thread_categories.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_thread_categoryUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussion_board_thread_categories\n     * const discussion_board_thread_category = await prisma.discussion_board_thread_category.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussion_board_thread_categoryUpdateManyArgs>(args: SelectSubset<T, discussion_board_thread_categoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_thread_categories and returns the data updated in the database.\n     * @param {discussion_board_thread_categoryUpdateManyAndReturnArgs} args - Arguments to update many Discussion_board_thread_categories.\n     * @example\n     * // Update many Discussion_board_thread_categories\n     * const discussion_board_thread_category = await prisma.discussion_board_thread_category.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussion_board_thread_categories and only return the `id`\n     * const discussion_board_thread_categoryWithIdOnly = await prisma.discussion_board_thread_category.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussion_board_thread_categoryUpdateManyAndReturnArgs>(args: SelectSubset<T, discussion_board_thread_categoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_thread_categoryPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussion_board_thread_category.\n     * @param {discussion_board_thread_categoryUpsertArgs} args - Arguments to update or create a Discussion_board_thread_category.\n     * @example\n     * // Update or create a Discussion_board_thread_category\n     * const discussion_board_thread_category = await prisma.discussion_board_thread_category.upsert({\n     *   create: {\n     *     // ... data to create a Discussion_board_thread_category\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussion_board_thread_category we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussion_board_thread_categoryUpsertArgs>(args: SelectSubset<T, discussion_board_thread_categoryUpsertArgs<ExtArgs>>): Prisma__discussion_board_thread_categoryClient<$Result.GetResult<Prisma.$discussion_board_thread_categoryPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussion_board_thread_categories.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_thread_categoryCountArgs} args - Arguments to filter Discussion_board_thread_categories to count.\n     * @example\n     * // Count the number of Discussion_board_thread_categories\n     * const count = await prisma.discussion_board_thread_category.count({\n     *   where: {\n     *     // ... the filter for the Discussion_board_thread_categories we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussion_board_thread_categoryCountArgs>(\n      args?: Subset<T, discussion_board_thread_categoryCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussion_board_thread_categoryCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussion_board_thread_category.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussion_board_thread_categoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussion_board_thread_categoryAggregateArgs>(args: Subset<T, Discussion_board_thread_categoryAggregateArgs>): Prisma.PrismaPromise<GetDiscussion_board_thread_categoryAggregateType<T>>\n\n    /**\n     * Group by Discussion_board_thread_category.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_thread_categoryGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussion_board_thread_categoryGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussion_board_thread_categoryGroupByArgs['orderBy'] }\n        : { orderBy?: discussion_board_thread_categoryGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussion_board_thread_categoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussion_board_thread_categoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussion_board_thread_category model\n   */\n  readonly fields: discussion_board_thread_categoryFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussion_board_thread_category.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussion_board_thread_categoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    discussion_board_thread<T extends discussion_board_thread_category$discussion_board_threadArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_thread_category$discussion_board_threadArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_threadPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussion_board_thread_category model\n   */\n  interface discussion_board_thread_categoryFieldRefs {\n    readonly id: FieldRef<\"discussion_board_thread_category\", 'String'>\n    readonly code: FieldRef<\"discussion_board_thread_category\", 'String'>\n    readonly name: FieldRef<\"discussion_board_thread_category\", 'String'>\n    readonly description: FieldRef<\"discussion_board_thread_category\", 'String'>\n    readonly created_at: FieldRef<\"discussion_board_thread_category\", 'DateTime'>\n    readonly updated_at: FieldRef<\"discussion_board_thread_category\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussion_board_thread_category findUnique\n   */\n  export type discussion_board_thread_categoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread_category\n     */\n    select?: discussion_board_thread_categorySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread_category\n     */\n    omit?: discussion_board_thread_categoryOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_thread_categoryInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_thread_category to fetch.\n     */\n    where: discussion_board_thread_categoryWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_thread_category findUniqueOrThrow\n   */\n  export type discussion_board_thread_categoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread_category\n     */\n    select?: discussion_board_thread_categorySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread_category\n     */\n    omit?: discussion_board_thread_categoryOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_thread_categoryInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_thread_category to fetch.\n     */\n    where: discussion_board_thread_categoryWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_thread_category findFirst\n   */\n  export type discussion_board_thread_categoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread_category\n     */\n    select?: discussion_board_thread_categorySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread_category\n     */\n    omit?: discussion_board_thread_categoryOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_thread_categoryInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_thread_category to fetch.\n     */\n    where?: discussion_board_thread_categoryWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_thread_categories to fetch.\n     */\n    orderBy?: discussion_board_thread_categoryOrderByWithRelationInput | discussion_board_thread_categoryOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_thread_categories.\n     */\n    cursor?: discussion_board_thread_categoryWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_thread_categories from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_thread_categories.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_thread_categories.\n     */\n    distinct?: Discussion_board_thread_categoryScalarFieldEnum | Discussion_board_thread_categoryScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_thread_category findFirstOrThrow\n   */\n  export type discussion_board_thread_categoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread_category\n     */\n    select?: discussion_board_thread_categorySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread_category\n     */\n    omit?: discussion_board_thread_categoryOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_thread_categoryInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_thread_category to fetch.\n     */\n    where?: discussion_board_thread_categoryWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_thread_categories to fetch.\n     */\n    orderBy?: discussion_board_thread_categoryOrderByWithRelationInput | discussion_board_thread_categoryOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_thread_categories.\n     */\n    cursor?: discussion_board_thread_categoryWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_thread_categories from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_thread_categories.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_thread_categories.\n     */\n    distinct?: Discussion_board_thread_categoryScalarFieldEnum | Discussion_board_thread_categoryScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_thread_category findMany\n   */\n  export type discussion_board_thread_categoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread_category\n     */\n    select?: discussion_board_thread_categorySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread_category\n     */\n    omit?: discussion_board_thread_categoryOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_thread_categoryInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_thread_categories to fetch.\n     */\n    where?: discussion_board_thread_categoryWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_thread_categories to fetch.\n     */\n    orderBy?: discussion_board_thread_categoryOrderByWithRelationInput | discussion_board_thread_categoryOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussion_board_thread_categories.\n     */\n    cursor?: discussion_board_thread_categoryWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_thread_categories from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_thread_categories.\n     */\n    skip?: number\n    distinct?: Discussion_board_thread_categoryScalarFieldEnum | Discussion_board_thread_categoryScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_thread_category create\n   */\n  export type discussion_board_thread_categoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread_category\n     */\n    select?: discussion_board_thread_categorySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread_category\n     */\n    omit?: discussion_board_thread_categoryOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_thread_categoryInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussion_board_thread_category.\n     */\n    data: XOR<discussion_board_thread_categoryCreateInput, discussion_board_thread_categoryUncheckedCreateInput>\n  }\n\n  /**\n   * discussion_board_thread_category createMany\n   */\n  export type discussion_board_thread_categoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussion_board_thread_categories.\n     */\n    data: discussion_board_thread_categoryCreateManyInput | discussion_board_thread_categoryCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussion_board_thread_category createManyAndReturn\n   */\n  export type discussion_board_thread_categoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread_category\n     */\n    select?: discussion_board_thread_categorySelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread_category\n     */\n    omit?: discussion_board_thread_categoryOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussion_board_thread_categories.\n     */\n    data: discussion_board_thread_categoryCreateManyInput | discussion_board_thread_categoryCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussion_board_thread_category update\n   */\n  export type discussion_board_thread_categoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread_category\n     */\n    select?: discussion_board_thread_categorySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread_category\n     */\n    omit?: discussion_board_thread_categoryOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_thread_categoryInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussion_board_thread_category.\n     */\n    data: XOR<discussion_board_thread_categoryUpdateInput, discussion_board_thread_categoryUncheckedUpdateInput>\n    /**\n     * Choose, which discussion_board_thread_category to update.\n     */\n    where: discussion_board_thread_categoryWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_thread_category updateMany\n   */\n  export type discussion_board_thread_categoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussion_board_thread_categories.\n     */\n    data: XOR<discussion_board_thread_categoryUpdateManyMutationInput, discussion_board_thread_categoryUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_thread_categories to update\n     */\n    where?: discussion_board_thread_categoryWhereInput\n    /**\n     * Limit how many discussion_board_thread_categories to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_thread_category updateManyAndReturn\n   */\n  export type discussion_board_thread_categoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread_category\n     */\n    select?: discussion_board_thread_categorySelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread_category\n     */\n    omit?: discussion_board_thread_categoryOmit<ExtArgs> | null\n    /**\n     * The data used to update discussion_board_thread_categories.\n     */\n    data: XOR<discussion_board_thread_categoryUpdateManyMutationInput, discussion_board_thread_categoryUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_thread_categories to update\n     */\n    where?: discussion_board_thread_categoryWhereInput\n    /**\n     * Limit how many discussion_board_thread_categories to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_thread_category upsert\n   */\n  export type discussion_board_thread_categoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread_category\n     */\n    select?: discussion_board_thread_categorySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread_category\n     */\n    omit?: discussion_board_thread_categoryOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_thread_categoryInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussion_board_thread_category to update in case it exists.\n     */\n    where: discussion_board_thread_categoryWhereUniqueInput\n    /**\n     * In case the discussion_board_thread_category found by the `where` argument doesn't exist, create a new discussion_board_thread_category with this data.\n     */\n    create: XOR<discussion_board_thread_categoryCreateInput, discussion_board_thread_categoryUncheckedCreateInput>\n    /**\n     * In case the discussion_board_thread_category was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussion_board_thread_categoryUpdateInput, discussion_board_thread_categoryUncheckedUpdateInput>\n  }\n\n  /**\n   * discussion_board_thread_category delete\n   */\n  export type discussion_board_thread_categoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread_category\n     */\n    select?: discussion_board_thread_categorySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread_category\n     */\n    omit?: discussion_board_thread_categoryOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_thread_categoryInclude<ExtArgs> | null\n    /**\n     * Filter which discussion_board_thread_category to delete.\n     */\n    where: discussion_board_thread_categoryWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_thread_category deleteMany\n   */\n  export type discussion_board_thread_categoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_thread_categories to delete\n     */\n    where?: discussion_board_thread_categoryWhereInput\n    /**\n     * Limit how many discussion_board_thread_categories to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_thread_category.discussion_board_thread\n   */\n  export type discussion_board_thread_category$discussion_board_threadArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread\n     */\n    select?: discussion_board_threadSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread\n     */\n    omit?: discussion_board_threadOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_threadInclude<ExtArgs> | null\n    where?: discussion_board_threadWhereInput\n    orderBy?: discussion_board_threadOrderByWithRelationInput | discussion_board_threadOrderByWithRelationInput[]\n    cursor?: discussion_board_threadWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_threadScalarFieldEnum | Discussion_board_threadScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_thread_category without action\n   */\n  export type discussion_board_thread_categoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread_category\n     */\n    select?: discussion_board_thread_categorySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread_category\n     */\n    omit?: discussion_board_thread_categoryOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_thread_categoryInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussion_board_tag_category\n   */\n\n  export type AggregateDiscussion_board_tag_category = {\n    _count: Discussion_board_tag_categoryCountAggregateOutputType | null\n    _min: Discussion_board_tag_categoryMinAggregateOutputType | null\n    _max: Discussion_board_tag_categoryMaxAggregateOutputType | null\n  }\n\n  export type Discussion_board_tag_categoryMinAggregateOutputType = {\n    id: string | null\n    code: string | null\n    name: string | null\n    description: string | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Discussion_board_tag_categoryMaxAggregateOutputType = {\n    id: string | null\n    code: string | null\n    name: string | null\n    description: string | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Discussion_board_tag_categoryCountAggregateOutputType = {\n    id: number\n    code: number\n    name: number\n    description: number\n    created_at: number\n    updated_at: number\n    _all: number\n  }\n\n\n  export type Discussion_board_tag_categoryMinAggregateInputType = {\n    id?: true\n    code?: true\n    name?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Discussion_board_tag_categoryMaxAggregateInputType = {\n    id?: true\n    code?: true\n    name?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Discussion_board_tag_categoryCountAggregateInputType = {\n    id?: true\n    code?: true\n    name?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n    _all?: true\n  }\n\n  export type Discussion_board_tag_categoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_tag_category to aggregate.\n     */\n    where?: discussion_board_tag_categoryWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_tag_categories to fetch.\n     */\n    orderBy?: discussion_board_tag_categoryOrderByWithRelationInput | discussion_board_tag_categoryOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussion_board_tag_categoryWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_tag_categories from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_tag_categories.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussion_board_tag_categories\n    **/\n    _count?: true | Discussion_board_tag_categoryCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussion_board_tag_categoryMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussion_board_tag_categoryMaxAggregateInputType\n  }\n\n  export type GetDiscussion_board_tag_categoryAggregateType<T extends Discussion_board_tag_categoryAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussion_board_tag_category]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussion_board_tag_category[P]>\n      : GetScalarType<T[P], AggregateDiscussion_board_tag_category[P]>\n  }\n\n\n\n\n  export type discussion_board_tag_categoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_tag_categoryWhereInput\n    orderBy?: discussion_board_tag_categoryOrderByWithAggregationInput | discussion_board_tag_categoryOrderByWithAggregationInput[]\n    by: Discussion_board_tag_categoryScalarFieldEnum[] | Discussion_board_tag_categoryScalarFieldEnum\n    having?: discussion_board_tag_categoryScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussion_board_tag_categoryCountAggregateInputType | true\n    _min?: Discussion_board_tag_categoryMinAggregateInputType\n    _max?: Discussion_board_tag_categoryMaxAggregateInputType\n  }\n\n  export type Discussion_board_tag_categoryGroupByOutputType = {\n    id: string\n    code: string\n    name: string\n    description: string | null\n    created_at: Date\n    updated_at: Date\n    _count: Discussion_board_tag_categoryCountAggregateOutputType | null\n    _min: Discussion_board_tag_categoryMinAggregateOutputType | null\n    _max: Discussion_board_tag_categoryMaxAggregateOutputType | null\n  }\n\n  type GetDiscussion_board_tag_categoryGroupByPayload<T extends discussion_board_tag_categoryGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussion_board_tag_categoryGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussion_board_tag_categoryGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussion_board_tag_categoryGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussion_board_tag_categoryGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussion_board_tag_categorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    code?: boolean\n    name?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    discussion_board_thread_tag?: boolean | discussion_board_tag_category$discussion_board_thread_tagArgs<ExtArgs>\n    _count?: boolean | Discussion_board_tag_categoryCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_tag_category\"]>\n\n  export type discussion_board_tag_categorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    code?: boolean\n    name?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"discussion_board_tag_category\"]>\n\n  export type discussion_board_tag_categorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    code?: boolean\n    name?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"discussion_board_tag_category\"]>\n\n  export type discussion_board_tag_categorySelectScalar = {\n    id?: boolean\n    code?: boolean\n    name?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }\n\n  export type discussion_board_tag_categoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"code\" | \"name\" | \"description\" | \"created_at\" | \"updated_at\", ExtArgs[\"result\"][\"discussion_board_tag_category\"]>\n  export type discussion_board_tag_categoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussion_board_thread_tag?: boolean | discussion_board_tag_category$discussion_board_thread_tagArgs<ExtArgs>\n    _count?: boolean | Discussion_board_tag_categoryCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type discussion_board_tag_categoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}\n  export type discussion_board_tag_categoryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}\n\n  export type $discussion_board_tag_categoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussion_board_tag_category\"\n    objects: {\n      discussion_board_thread_tag: Prisma.$discussion_board_thread_tagPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * [Tag PK] - Unique per tag.\n       */\n      id: string\n      /**\n       * [Tag code] - Unique, short value for tag (e.g. 'gdp', 'inflation').\n       */\n      code: string\n      /**\n       * [Tag name] - UI-friendly.\n       */\n      name: string\n      /**\n       * [Details] - UI/admin usage.\n       */\n      description: string | null\n      /**\n       * [Created] - Audit/ordering.\n       */\n      created_at: Date\n      /**\n       * [Updated] - Change/audit tracking.\n       */\n      updated_at: Date\n    }, ExtArgs[\"result\"][\"discussion_board_tag_category\"]>\n    composites: {}\n  }\n\n  type discussion_board_tag_categoryGetPayload<S extends boolean | null | undefined | discussion_board_tag_categoryDefaultArgs> = $Result.GetResult<Prisma.$discussion_board_tag_categoryPayload, S>\n\n  type discussion_board_tag_categoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussion_board_tag_categoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussion_board_tag_categoryCountAggregateInputType | true\n    }\n\n  export interface discussion_board_tag_categoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussion_board_tag_category'], meta: { name: 'discussion_board_tag_category' } }\n    /**\n     * Find zero or one Discussion_board_tag_category that matches the filter.\n     * @param {discussion_board_tag_categoryFindUniqueArgs} args - Arguments to find a Discussion_board_tag_category\n     * @example\n     * // Get one Discussion_board_tag_category\n     * const discussion_board_tag_category = await prisma.discussion_board_tag_category.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussion_board_tag_categoryFindUniqueArgs>(args: SelectSubset<T, discussion_board_tag_categoryFindUniqueArgs<ExtArgs>>): Prisma__discussion_board_tag_categoryClient<$Result.GetResult<Prisma.$discussion_board_tag_categoryPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussion_board_tag_category that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussion_board_tag_categoryFindUniqueOrThrowArgs} args - Arguments to find a Discussion_board_tag_category\n     * @example\n     * // Get one Discussion_board_tag_category\n     * const discussion_board_tag_category = await prisma.discussion_board_tag_category.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussion_board_tag_categoryFindUniqueOrThrowArgs>(args: SelectSubset<T, discussion_board_tag_categoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussion_board_tag_categoryClient<$Result.GetResult<Prisma.$discussion_board_tag_categoryPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_tag_category that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_tag_categoryFindFirstArgs} args - Arguments to find a Discussion_board_tag_category\n     * @example\n     * // Get one Discussion_board_tag_category\n     * const discussion_board_tag_category = await prisma.discussion_board_tag_category.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussion_board_tag_categoryFindFirstArgs>(args?: SelectSubset<T, discussion_board_tag_categoryFindFirstArgs<ExtArgs>>): Prisma__discussion_board_tag_categoryClient<$Result.GetResult<Prisma.$discussion_board_tag_categoryPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_tag_category that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_tag_categoryFindFirstOrThrowArgs} args - Arguments to find a Discussion_board_tag_category\n     * @example\n     * // Get one Discussion_board_tag_category\n     * const discussion_board_tag_category = await prisma.discussion_board_tag_category.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussion_board_tag_categoryFindFirstOrThrowArgs>(args?: SelectSubset<T, discussion_board_tag_categoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussion_board_tag_categoryClient<$Result.GetResult<Prisma.$discussion_board_tag_categoryPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussion_board_tag_categories that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_tag_categoryFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussion_board_tag_categories\n     * const discussion_board_tag_categories = await prisma.discussion_board_tag_category.findMany()\n     * \n     * // Get first 10 Discussion_board_tag_categories\n     * const discussion_board_tag_categories = await prisma.discussion_board_tag_category.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussion_board_tag_categoryWithIdOnly = await prisma.discussion_board_tag_category.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussion_board_tag_categoryFindManyArgs>(args?: SelectSubset<T, discussion_board_tag_categoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_tag_categoryPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussion_board_tag_category.\n     * @param {discussion_board_tag_categoryCreateArgs} args - Arguments to create a Discussion_board_tag_category.\n     * @example\n     * // Create one Discussion_board_tag_category\n     * const Discussion_board_tag_category = await prisma.discussion_board_tag_category.create({\n     *   data: {\n     *     // ... data to create a Discussion_board_tag_category\n     *   }\n     * })\n     * \n     */\n    create<T extends discussion_board_tag_categoryCreateArgs>(args: SelectSubset<T, discussion_board_tag_categoryCreateArgs<ExtArgs>>): Prisma__discussion_board_tag_categoryClient<$Result.GetResult<Prisma.$discussion_board_tag_categoryPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussion_board_tag_categories.\n     * @param {discussion_board_tag_categoryCreateManyArgs} args - Arguments to create many Discussion_board_tag_categories.\n     * @example\n     * // Create many Discussion_board_tag_categories\n     * const discussion_board_tag_category = await prisma.discussion_board_tag_category.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussion_board_tag_categoryCreateManyArgs>(args?: SelectSubset<T, discussion_board_tag_categoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussion_board_tag_categories and returns the data saved in the database.\n     * @param {discussion_board_tag_categoryCreateManyAndReturnArgs} args - Arguments to create many Discussion_board_tag_categories.\n     * @example\n     * // Create many Discussion_board_tag_categories\n     * const discussion_board_tag_category = await prisma.discussion_board_tag_category.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussion_board_tag_categories and only return the `id`\n     * const discussion_board_tag_categoryWithIdOnly = await prisma.discussion_board_tag_category.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussion_board_tag_categoryCreateManyAndReturnArgs>(args?: SelectSubset<T, discussion_board_tag_categoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_tag_categoryPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussion_board_tag_category.\n     * @param {discussion_board_tag_categoryDeleteArgs} args - Arguments to delete one Discussion_board_tag_category.\n     * @example\n     * // Delete one Discussion_board_tag_category\n     * const Discussion_board_tag_category = await prisma.discussion_board_tag_category.delete({\n     *   where: {\n     *     // ... filter to delete one Discussion_board_tag_category\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussion_board_tag_categoryDeleteArgs>(args: SelectSubset<T, discussion_board_tag_categoryDeleteArgs<ExtArgs>>): Prisma__discussion_board_tag_categoryClient<$Result.GetResult<Prisma.$discussion_board_tag_categoryPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussion_board_tag_category.\n     * @param {discussion_board_tag_categoryUpdateArgs} args - Arguments to update one Discussion_board_tag_category.\n     * @example\n     * // Update one Discussion_board_tag_category\n     * const discussion_board_tag_category = await prisma.discussion_board_tag_category.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussion_board_tag_categoryUpdateArgs>(args: SelectSubset<T, discussion_board_tag_categoryUpdateArgs<ExtArgs>>): Prisma__discussion_board_tag_categoryClient<$Result.GetResult<Prisma.$discussion_board_tag_categoryPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussion_board_tag_categories.\n     * @param {discussion_board_tag_categoryDeleteManyArgs} args - Arguments to filter Discussion_board_tag_categories to delete.\n     * @example\n     * // Delete a few Discussion_board_tag_categories\n     * const { count } = await prisma.discussion_board_tag_category.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussion_board_tag_categoryDeleteManyArgs>(args?: SelectSubset<T, discussion_board_tag_categoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_tag_categories.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_tag_categoryUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussion_board_tag_categories\n     * const discussion_board_tag_category = await prisma.discussion_board_tag_category.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussion_board_tag_categoryUpdateManyArgs>(args: SelectSubset<T, discussion_board_tag_categoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_tag_categories and returns the data updated in the database.\n     * @param {discussion_board_tag_categoryUpdateManyAndReturnArgs} args - Arguments to update many Discussion_board_tag_categories.\n     * @example\n     * // Update many Discussion_board_tag_categories\n     * const discussion_board_tag_category = await prisma.discussion_board_tag_category.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussion_board_tag_categories and only return the `id`\n     * const discussion_board_tag_categoryWithIdOnly = await prisma.discussion_board_tag_category.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussion_board_tag_categoryUpdateManyAndReturnArgs>(args: SelectSubset<T, discussion_board_tag_categoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_tag_categoryPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussion_board_tag_category.\n     * @param {discussion_board_tag_categoryUpsertArgs} args - Arguments to update or create a Discussion_board_tag_category.\n     * @example\n     * // Update or create a Discussion_board_tag_category\n     * const discussion_board_tag_category = await prisma.discussion_board_tag_category.upsert({\n     *   create: {\n     *     // ... data to create a Discussion_board_tag_category\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussion_board_tag_category we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussion_board_tag_categoryUpsertArgs>(args: SelectSubset<T, discussion_board_tag_categoryUpsertArgs<ExtArgs>>): Prisma__discussion_board_tag_categoryClient<$Result.GetResult<Prisma.$discussion_board_tag_categoryPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussion_board_tag_categories.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_tag_categoryCountArgs} args - Arguments to filter Discussion_board_tag_categories to count.\n     * @example\n     * // Count the number of Discussion_board_tag_categories\n     * const count = await prisma.discussion_board_tag_category.count({\n     *   where: {\n     *     // ... the filter for the Discussion_board_tag_categories we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussion_board_tag_categoryCountArgs>(\n      args?: Subset<T, discussion_board_tag_categoryCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussion_board_tag_categoryCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussion_board_tag_category.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussion_board_tag_categoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussion_board_tag_categoryAggregateArgs>(args: Subset<T, Discussion_board_tag_categoryAggregateArgs>): Prisma.PrismaPromise<GetDiscussion_board_tag_categoryAggregateType<T>>\n\n    /**\n     * Group by Discussion_board_tag_category.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_tag_categoryGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussion_board_tag_categoryGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussion_board_tag_categoryGroupByArgs['orderBy'] }\n        : { orderBy?: discussion_board_tag_categoryGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussion_board_tag_categoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussion_board_tag_categoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussion_board_tag_category model\n   */\n  readonly fields: discussion_board_tag_categoryFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussion_board_tag_category.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussion_board_tag_categoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    discussion_board_thread_tag<T extends discussion_board_tag_category$discussion_board_thread_tagArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_tag_category$discussion_board_thread_tagArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_thread_tagPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussion_board_tag_category model\n   */\n  interface discussion_board_tag_categoryFieldRefs {\n    readonly id: FieldRef<\"discussion_board_tag_category\", 'String'>\n    readonly code: FieldRef<\"discussion_board_tag_category\", 'String'>\n    readonly name: FieldRef<\"discussion_board_tag_category\", 'String'>\n    readonly description: FieldRef<\"discussion_board_tag_category\", 'String'>\n    readonly created_at: FieldRef<\"discussion_board_tag_category\", 'DateTime'>\n    readonly updated_at: FieldRef<\"discussion_board_tag_category\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussion_board_tag_category findUnique\n   */\n  export type discussion_board_tag_categoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_tag_category\n     */\n    select?: discussion_board_tag_categorySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_tag_category\n     */\n    omit?: discussion_board_tag_categoryOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_tag_categoryInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_tag_category to fetch.\n     */\n    where: discussion_board_tag_categoryWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_tag_category findUniqueOrThrow\n   */\n  export type discussion_board_tag_categoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_tag_category\n     */\n    select?: discussion_board_tag_categorySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_tag_category\n     */\n    omit?: discussion_board_tag_categoryOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_tag_categoryInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_tag_category to fetch.\n     */\n    where: discussion_board_tag_categoryWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_tag_category findFirst\n   */\n  export type discussion_board_tag_categoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_tag_category\n     */\n    select?: discussion_board_tag_categorySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_tag_category\n     */\n    omit?: discussion_board_tag_categoryOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_tag_categoryInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_tag_category to fetch.\n     */\n    where?: discussion_board_tag_categoryWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_tag_categories to fetch.\n     */\n    orderBy?: discussion_board_tag_categoryOrderByWithRelationInput | discussion_board_tag_categoryOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_tag_categories.\n     */\n    cursor?: discussion_board_tag_categoryWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_tag_categories from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_tag_categories.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_tag_categories.\n     */\n    distinct?: Discussion_board_tag_categoryScalarFieldEnum | Discussion_board_tag_categoryScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_tag_category findFirstOrThrow\n   */\n  export type discussion_board_tag_categoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_tag_category\n     */\n    select?: discussion_board_tag_categorySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_tag_category\n     */\n    omit?: discussion_board_tag_categoryOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_tag_categoryInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_tag_category to fetch.\n     */\n    where?: discussion_board_tag_categoryWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_tag_categories to fetch.\n     */\n    orderBy?: discussion_board_tag_categoryOrderByWithRelationInput | discussion_board_tag_categoryOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_tag_categories.\n     */\n    cursor?: discussion_board_tag_categoryWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_tag_categories from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_tag_categories.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_tag_categories.\n     */\n    distinct?: Discussion_board_tag_categoryScalarFieldEnum | Discussion_board_tag_categoryScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_tag_category findMany\n   */\n  export type discussion_board_tag_categoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_tag_category\n     */\n    select?: discussion_board_tag_categorySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_tag_category\n     */\n    omit?: discussion_board_tag_categoryOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_tag_categoryInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_tag_categories to fetch.\n     */\n    where?: discussion_board_tag_categoryWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_tag_categories to fetch.\n     */\n    orderBy?: discussion_board_tag_categoryOrderByWithRelationInput | discussion_board_tag_categoryOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussion_board_tag_categories.\n     */\n    cursor?: discussion_board_tag_categoryWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_tag_categories from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_tag_categories.\n     */\n    skip?: number\n    distinct?: Discussion_board_tag_categoryScalarFieldEnum | Discussion_board_tag_categoryScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_tag_category create\n   */\n  export type discussion_board_tag_categoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_tag_category\n     */\n    select?: discussion_board_tag_categorySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_tag_category\n     */\n    omit?: discussion_board_tag_categoryOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_tag_categoryInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussion_board_tag_category.\n     */\n    data: XOR<discussion_board_tag_categoryCreateInput, discussion_board_tag_categoryUncheckedCreateInput>\n  }\n\n  /**\n   * discussion_board_tag_category createMany\n   */\n  export type discussion_board_tag_categoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussion_board_tag_categories.\n     */\n    data: discussion_board_tag_categoryCreateManyInput | discussion_board_tag_categoryCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussion_board_tag_category createManyAndReturn\n   */\n  export type discussion_board_tag_categoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_tag_category\n     */\n    select?: discussion_board_tag_categorySelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_tag_category\n     */\n    omit?: discussion_board_tag_categoryOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussion_board_tag_categories.\n     */\n    data: discussion_board_tag_categoryCreateManyInput | discussion_board_tag_categoryCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussion_board_tag_category update\n   */\n  export type discussion_board_tag_categoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_tag_category\n     */\n    select?: discussion_board_tag_categorySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_tag_category\n     */\n    omit?: discussion_board_tag_categoryOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_tag_categoryInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussion_board_tag_category.\n     */\n    data: XOR<discussion_board_tag_categoryUpdateInput, discussion_board_tag_categoryUncheckedUpdateInput>\n    /**\n     * Choose, which discussion_board_tag_category to update.\n     */\n    where: discussion_board_tag_categoryWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_tag_category updateMany\n   */\n  export type discussion_board_tag_categoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussion_board_tag_categories.\n     */\n    data: XOR<discussion_board_tag_categoryUpdateManyMutationInput, discussion_board_tag_categoryUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_tag_categories to update\n     */\n    where?: discussion_board_tag_categoryWhereInput\n    /**\n     * Limit how many discussion_board_tag_categories to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_tag_category updateManyAndReturn\n   */\n  export type discussion_board_tag_categoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_tag_category\n     */\n    select?: discussion_board_tag_categorySelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_tag_category\n     */\n    omit?: discussion_board_tag_categoryOmit<ExtArgs> | null\n    /**\n     * The data used to update discussion_board_tag_categories.\n     */\n    data: XOR<discussion_board_tag_categoryUpdateManyMutationInput, discussion_board_tag_categoryUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_tag_categories to update\n     */\n    where?: discussion_board_tag_categoryWhereInput\n    /**\n     * Limit how many discussion_board_tag_categories to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_tag_category upsert\n   */\n  export type discussion_board_tag_categoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_tag_category\n     */\n    select?: discussion_board_tag_categorySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_tag_category\n     */\n    omit?: discussion_board_tag_categoryOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_tag_categoryInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussion_board_tag_category to update in case it exists.\n     */\n    where: discussion_board_tag_categoryWhereUniqueInput\n    /**\n     * In case the discussion_board_tag_category found by the `where` argument doesn't exist, create a new discussion_board_tag_category with this data.\n     */\n    create: XOR<discussion_board_tag_categoryCreateInput, discussion_board_tag_categoryUncheckedCreateInput>\n    /**\n     * In case the discussion_board_tag_category was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussion_board_tag_categoryUpdateInput, discussion_board_tag_categoryUncheckedUpdateInput>\n  }\n\n  /**\n   * discussion_board_tag_category delete\n   */\n  export type discussion_board_tag_categoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_tag_category\n     */\n    select?: discussion_board_tag_categorySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_tag_category\n     */\n    omit?: discussion_board_tag_categoryOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_tag_categoryInclude<ExtArgs> | null\n    /**\n     * Filter which discussion_board_tag_category to delete.\n     */\n    where: discussion_board_tag_categoryWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_tag_category deleteMany\n   */\n  export type discussion_board_tag_categoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_tag_categories to delete\n     */\n    where?: discussion_board_tag_categoryWhereInput\n    /**\n     * Limit how many discussion_board_tag_categories to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_tag_category.discussion_board_thread_tag\n   */\n  export type discussion_board_tag_category$discussion_board_thread_tagArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread_tag\n     */\n    select?: discussion_board_thread_tagSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread_tag\n     */\n    omit?: discussion_board_thread_tagOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_thread_tagInclude<ExtArgs> | null\n    where?: discussion_board_thread_tagWhereInput\n    orderBy?: discussion_board_thread_tagOrderByWithRelationInput | discussion_board_thread_tagOrderByWithRelationInput[]\n    cursor?: discussion_board_thread_tagWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_thread_tagScalarFieldEnum | Discussion_board_thread_tagScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_tag_category without action\n   */\n  export type discussion_board_tag_categoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_tag_category\n     */\n    select?: discussion_board_tag_categorySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_tag_category\n     */\n    omit?: discussion_board_tag_categoryOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_tag_categoryInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model mv_discussion_thread_activity\n   */\n\n  export type AggregateMv_discussion_thread_activity = {\n    _count: Mv_discussion_thread_activityCountAggregateOutputType | null\n    _avg: Mv_discussion_thread_activityAvgAggregateOutputType | null\n    _sum: Mv_discussion_thread_activitySumAggregateOutputType | null\n    _min: Mv_discussion_thread_activityMinAggregateOutputType | null\n    _max: Mv_discussion_thread_activityMaxAggregateOutputType | null\n  }\n\n  export type Mv_discussion_thread_activityAvgAggregateOutputType = {\n    reply_count: number | null\n  }\n\n  export type Mv_discussion_thread_activitySumAggregateOutputType = {\n    reply_count: number | null\n  }\n\n  export type Mv_discussion_thread_activityMinAggregateOutputType = {\n    id: string | null\n    thread_id: string | null\n    reply_count: number | null\n    last_posted_at: Date | null\n    participant_user_ids: string | null\n  }\n\n  export type Mv_discussion_thread_activityMaxAggregateOutputType = {\n    id: string | null\n    thread_id: string | null\n    reply_count: number | null\n    last_posted_at: Date | null\n    participant_user_ids: string | null\n  }\n\n  export type Mv_discussion_thread_activityCountAggregateOutputType = {\n    id: number\n    thread_id: number\n    reply_count: number\n    last_posted_at: number\n    participant_user_ids: number\n    _all: number\n  }\n\n\n  export type Mv_discussion_thread_activityAvgAggregateInputType = {\n    reply_count?: true\n  }\n\n  export type Mv_discussion_thread_activitySumAggregateInputType = {\n    reply_count?: true\n  }\n\n  export type Mv_discussion_thread_activityMinAggregateInputType = {\n    id?: true\n    thread_id?: true\n    reply_count?: true\n    last_posted_at?: true\n    participant_user_ids?: true\n  }\n\n  export type Mv_discussion_thread_activityMaxAggregateInputType = {\n    id?: true\n    thread_id?: true\n    reply_count?: true\n    last_posted_at?: true\n    participant_user_ids?: true\n  }\n\n  export type Mv_discussion_thread_activityCountAggregateInputType = {\n    id?: true\n    thread_id?: true\n    reply_count?: true\n    last_posted_at?: true\n    participant_user_ids?: true\n    _all?: true\n  }\n\n  export type Mv_discussion_thread_activityAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which mv_discussion_thread_activity to aggregate.\n     */\n    where?: mv_discussion_thread_activityWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of mv_discussion_thread_activities to fetch.\n     */\n    orderBy?: mv_discussion_thread_activityOrderByWithRelationInput | mv_discussion_thread_activityOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: mv_discussion_thread_activityWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` mv_discussion_thread_activities from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` mv_discussion_thread_activities.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned mv_discussion_thread_activities\n    **/\n    _count?: true | Mv_discussion_thread_activityCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to average\n    **/\n    _avg?: Mv_discussion_thread_activityAvgAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to sum\n    **/\n    _sum?: Mv_discussion_thread_activitySumAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Mv_discussion_thread_activityMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Mv_discussion_thread_activityMaxAggregateInputType\n  }\n\n  export type GetMv_discussion_thread_activityAggregateType<T extends Mv_discussion_thread_activityAggregateArgs> = {\n        [P in keyof T & keyof AggregateMv_discussion_thread_activity]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateMv_discussion_thread_activity[P]>\n      : GetScalarType<T[P], AggregateMv_discussion_thread_activity[P]>\n  }\n\n\n\n\n  export type mv_discussion_thread_activityGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: mv_discussion_thread_activityWhereInput\n    orderBy?: mv_discussion_thread_activityOrderByWithAggregationInput | mv_discussion_thread_activityOrderByWithAggregationInput[]\n    by: Mv_discussion_thread_activityScalarFieldEnum[] | Mv_discussion_thread_activityScalarFieldEnum\n    having?: mv_discussion_thread_activityScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Mv_discussion_thread_activityCountAggregateInputType | true\n    _avg?: Mv_discussion_thread_activityAvgAggregateInputType\n    _sum?: Mv_discussion_thread_activitySumAggregateInputType\n    _min?: Mv_discussion_thread_activityMinAggregateInputType\n    _max?: Mv_discussion_thread_activityMaxAggregateInputType\n  }\n\n  export type Mv_discussion_thread_activityGroupByOutputType = {\n    id: string\n    thread_id: string\n    reply_count: number\n    last_posted_at: Date | null\n    participant_user_ids: string | null\n    _count: Mv_discussion_thread_activityCountAggregateOutputType | null\n    _avg: Mv_discussion_thread_activityAvgAggregateOutputType | null\n    _sum: Mv_discussion_thread_activitySumAggregateOutputType | null\n    _min: Mv_discussion_thread_activityMinAggregateOutputType | null\n    _max: Mv_discussion_thread_activityMaxAggregateOutputType | null\n  }\n\n  type GetMv_discussion_thread_activityGroupByPayload<T extends mv_discussion_thread_activityGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Mv_discussion_thread_activityGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Mv_discussion_thread_activityGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Mv_discussion_thread_activityGroupByOutputType[P]>\n            : GetScalarType<T[P], Mv_discussion_thread_activityGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type mv_discussion_thread_activitySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    thread_id?: boolean\n    reply_count?: boolean\n    last_posted_at?: boolean\n    participant_user_ids?: boolean\n    thread?: boolean | discussion_board_threadDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"mv_discussion_thread_activity\"]>\n\n  export type mv_discussion_thread_activitySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    thread_id?: boolean\n    reply_count?: boolean\n    last_posted_at?: boolean\n    participant_user_ids?: boolean\n    thread?: boolean | discussion_board_threadDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"mv_discussion_thread_activity\"]>\n\n  export type mv_discussion_thread_activitySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    thread_id?: boolean\n    reply_count?: boolean\n    last_posted_at?: boolean\n    participant_user_ids?: boolean\n    thread?: boolean | discussion_board_threadDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"mv_discussion_thread_activity\"]>\n\n  export type mv_discussion_thread_activitySelectScalar = {\n    id?: boolean\n    thread_id?: boolean\n    reply_count?: boolean\n    last_posted_at?: boolean\n    participant_user_ids?: boolean\n  }\n\n  export type mv_discussion_thread_activityOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"thread_id\" | \"reply_count\" | \"last_posted_at\" | \"participant_user_ids\", ExtArgs[\"result\"][\"mv_discussion_thread_activity\"]>\n  export type mv_discussion_thread_activityInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    thread?: boolean | discussion_board_threadDefaultArgs<ExtArgs>\n  }\n  export type mv_discussion_thread_activityIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    thread?: boolean | discussion_board_threadDefaultArgs<ExtArgs>\n  }\n  export type mv_discussion_thread_activityIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    thread?: boolean | discussion_board_threadDefaultArgs<ExtArgs>\n  }\n\n  export type $mv_discussion_thread_activityPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"mv_discussion_thread_activity\"\n    objects: {\n      thread: Prisma.$discussion_board_threadPayload<ExtArgs>\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * [Materialized view PK] - Identifies unique thread activity row.\n       */\n      id: string\n      /**\n       * [Thread reference] - 1:1 to thread.id for aggregate metrics.\n       */\n      thread_id: string\n      /**\n       * [Aggregate] - Precomputed in materialization process.\n       */\n      reply_count: number\n      /**\n       * [Denormalized timestamp] - Recent post.\n       */\n      last_posted_at: Date | null\n      /**\n       * [Participant IDs] - Denormalized string, analytics only.\n       */\n      participant_user_ids: string | null\n    }, ExtArgs[\"result\"][\"mv_discussion_thread_activity\"]>\n    composites: {}\n  }\n\n  type mv_discussion_thread_activityGetPayload<S extends boolean | null | undefined | mv_discussion_thread_activityDefaultArgs> = $Result.GetResult<Prisma.$mv_discussion_thread_activityPayload, S>\n\n  type mv_discussion_thread_activityCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<mv_discussion_thread_activityFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Mv_discussion_thread_activityCountAggregateInputType | true\n    }\n\n  export interface mv_discussion_thread_activityDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['mv_discussion_thread_activity'], meta: { name: 'mv_discussion_thread_activity' } }\n    /**\n     * Find zero or one Mv_discussion_thread_activity that matches the filter.\n     * @param {mv_discussion_thread_activityFindUniqueArgs} args - Arguments to find a Mv_discussion_thread_activity\n     * @example\n     * // Get one Mv_discussion_thread_activity\n     * const mv_discussion_thread_activity = await prisma.mv_discussion_thread_activity.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends mv_discussion_thread_activityFindUniqueArgs>(args: SelectSubset<T, mv_discussion_thread_activityFindUniqueArgs<ExtArgs>>): Prisma__mv_discussion_thread_activityClient<$Result.GetResult<Prisma.$mv_discussion_thread_activityPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Mv_discussion_thread_activity that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {mv_discussion_thread_activityFindUniqueOrThrowArgs} args - Arguments to find a Mv_discussion_thread_activity\n     * @example\n     * // Get one Mv_discussion_thread_activity\n     * const mv_discussion_thread_activity = await prisma.mv_discussion_thread_activity.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends mv_discussion_thread_activityFindUniqueOrThrowArgs>(args: SelectSubset<T, mv_discussion_thread_activityFindUniqueOrThrowArgs<ExtArgs>>): Prisma__mv_discussion_thread_activityClient<$Result.GetResult<Prisma.$mv_discussion_thread_activityPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Mv_discussion_thread_activity that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {mv_discussion_thread_activityFindFirstArgs} args - Arguments to find a Mv_discussion_thread_activity\n     * @example\n     * // Get one Mv_discussion_thread_activity\n     * const mv_discussion_thread_activity = await prisma.mv_discussion_thread_activity.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends mv_discussion_thread_activityFindFirstArgs>(args?: SelectSubset<T, mv_discussion_thread_activityFindFirstArgs<ExtArgs>>): Prisma__mv_discussion_thread_activityClient<$Result.GetResult<Prisma.$mv_discussion_thread_activityPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Mv_discussion_thread_activity that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {mv_discussion_thread_activityFindFirstOrThrowArgs} args - Arguments to find a Mv_discussion_thread_activity\n     * @example\n     * // Get one Mv_discussion_thread_activity\n     * const mv_discussion_thread_activity = await prisma.mv_discussion_thread_activity.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends mv_discussion_thread_activityFindFirstOrThrowArgs>(args?: SelectSubset<T, mv_discussion_thread_activityFindFirstOrThrowArgs<ExtArgs>>): Prisma__mv_discussion_thread_activityClient<$Result.GetResult<Prisma.$mv_discussion_thread_activityPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Mv_discussion_thread_activities that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {mv_discussion_thread_activityFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Mv_discussion_thread_activities\n     * const mv_discussion_thread_activities = await prisma.mv_discussion_thread_activity.findMany()\n     * \n     * // Get first 10 Mv_discussion_thread_activities\n     * const mv_discussion_thread_activities = await prisma.mv_discussion_thread_activity.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const mv_discussion_thread_activityWithIdOnly = await prisma.mv_discussion_thread_activity.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends mv_discussion_thread_activityFindManyArgs>(args?: SelectSubset<T, mv_discussion_thread_activityFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mv_discussion_thread_activityPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Mv_discussion_thread_activity.\n     * @param {mv_discussion_thread_activityCreateArgs} args - Arguments to create a Mv_discussion_thread_activity.\n     * @example\n     * // Create one Mv_discussion_thread_activity\n     * const Mv_discussion_thread_activity = await prisma.mv_discussion_thread_activity.create({\n     *   data: {\n     *     // ... data to create a Mv_discussion_thread_activity\n     *   }\n     * })\n     * \n     */\n    create<T extends mv_discussion_thread_activityCreateArgs>(args: SelectSubset<T, mv_discussion_thread_activityCreateArgs<ExtArgs>>): Prisma__mv_discussion_thread_activityClient<$Result.GetResult<Prisma.$mv_discussion_thread_activityPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Mv_discussion_thread_activities.\n     * @param {mv_discussion_thread_activityCreateManyArgs} args - Arguments to create many Mv_discussion_thread_activities.\n     * @example\n     * // Create many Mv_discussion_thread_activities\n     * const mv_discussion_thread_activity = await prisma.mv_discussion_thread_activity.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends mv_discussion_thread_activityCreateManyArgs>(args?: SelectSubset<T, mv_discussion_thread_activityCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Mv_discussion_thread_activities and returns the data saved in the database.\n     * @param {mv_discussion_thread_activityCreateManyAndReturnArgs} args - Arguments to create many Mv_discussion_thread_activities.\n     * @example\n     * // Create many Mv_discussion_thread_activities\n     * const mv_discussion_thread_activity = await prisma.mv_discussion_thread_activity.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Mv_discussion_thread_activities and only return the `id`\n     * const mv_discussion_thread_activityWithIdOnly = await prisma.mv_discussion_thread_activity.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends mv_discussion_thread_activityCreateManyAndReturnArgs>(args?: SelectSubset<T, mv_discussion_thread_activityCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mv_discussion_thread_activityPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Mv_discussion_thread_activity.\n     * @param {mv_discussion_thread_activityDeleteArgs} args - Arguments to delete one Mv_discussion_thread_activity.\n     * @example\n     * // Delete one Mv_discussion_thread_activity\n     * const Mv_discussion_thread_activity = await prisma.mv_discussion_thread_activity.delete({\n     *   where: {\n     *     // ... filter to delete one Mv_discussion_thread_activity\n     *   }\n     * })\n     * \n     */\n    delete<T extends mv_discussion_thread_activityDeleteArgs>(args: SelectSubset<T, mv_discussion_thread_activityDeleteArgs<ExtArgs>>): Prisma__mv_discussion_thread_activityClient<$Result.GetResult<Prisma.$mv_discussion_thread_activityPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Mv_discussion_thread_activity.\n     * @param {mv_discussion_thread_activityUpdateArgs} args - Arguments to update one Mv_discussion_thread_activity.\n     * @example\n     * // Update one Mv_discussion_thread_activity\n     * const mv_discussion_thread_activity = await prisma.mv_discussion_thread_activity.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends mv_discussion_thread_activityUpdateArgs>(args: SelectSubset<T, mv_discussion_thread_activityUpdateArgs<ExtArgs>>): Prisma__mv_discussion_thread_activityClient<$Result.GetResult<Prisma.$mv_discussion_thread_activityPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Mv_discussion_thread_activities.\n     * @param {mv_discussion_thread_activityDeleteManyArgs} args - Arguments to filter Mv_discussion_thread_activities to delete.\n     * @example\n     * // Delete a few Mv_discussion_thread_activities\n     * const { count } = await prisma.mv_discussion_thread_activity.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends mv_discussion_thread_activityDeleteManyArgs>(args?: SelectSubset<T, mv_discussion_thread_activityDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Mv_discussion_thread_activities.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {mv_discussion_thread_activityUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Mv_discussion_thread_activities\n     * const mv_discussion_thread_activity = await prisma.mv_discussion_thread_activity.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends mv_discussion_thread_activityUpdateManyArgs>(args: SelectSubset<T, mv_discussion_thread_activityUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Mv_discussion_thread_activities and returns the data updated in the database.\n     * @param {mv_discussion_thread_activityUpdateManyAndReturnArgs} args - Arguments to update many Mv_discussion_thread_activities.\n     * @example\n     * // Update many Mv_discussion_thread_activities\n     * const mv_discussion_thread_activity = await prisma.mv_discussion_thread_activity.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Mv_discussion_thread_activities and only return the `id`\n     * const mv_discussion_thread_activityWithIdOnly = await prisma.mv_discussion_thread_activity.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends mv_discussion_thread_activityUpdateManyAndReturnArgs>(args: SelectSubset<T, mv_discussion_thread_activityUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mv_discussion_thread_activityPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Mv_discussion_thread_activity.\n     * @param {mv_discussion_thread_activityUpsertArgs} args - Arguments to update or create a Mv_discussion_thread_activity.\n     * @example\n     * // Update or create a Mv_discussion_thread_activity\n     * const mv_discussion_thread_activity = await prisma.mv_discussion_thread_activity.upsert({\n     *   create: {\n     *     // ... data to create a Mv_discussion_thread_activity\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Mv_discussion_thread_activity we want to update\n     *   }\n     * })\n     */\n    upsert<T extends mv_discussion_thread_activityUpsertArgs>(args: SelectSubset<T, mv_discussion_thread_activityUpsertArgs<ExtArgs>>): Prisma__mv_discussion_thread_activityClient<$Result.GetResult<Prisma.$mv_discussion_thread_activityPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Mv_discussion_thread_activities.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {mv_discussion_thread_activityCountArgs} args - Arguments to filter Mv_discussion_thread_activities to count.\n     * @example\n     * // Count the number of Mv_discussion_thread_activities\n     * const count = await prisma.mv_discussion_thread_activity.count({\n     *   where: {\n     *     // ... the filter for the Mv_discussion_thread_activities we want to count\n     *   }\n     * })\n    **/\n    count<T extends mv_discussion_thread_activityCountArgs>(\n      args?: Subset<T, mv_discussion_thread_activityCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Mv_discussion_thread_activityCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Mv_discussion_thread_activity.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Mv_discussion_thread_activityAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Mv_discussion_thread_activityAggregateArgs>(args: Subset<T, Mv_discussion_thread_activityAggregateArgs>): Prisma.PrismaPromise<GetMv_discussion_thread_activityAggregateType<T>>\n\n    /**\n     * Group by Mv_discussion_thread_activity.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {mv_discussion_thread_activityGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends mv_discussion_thread_activityGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: mv_discussion_thread_activityGroupByArgs['orderBy'] }\n        : { orderBy?: mv_discussion_thread_activityGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, mv_discussion_thread_activityGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMv_discussion_thread_activityGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the mv_discussion_thread_activity model\n   */\n  readonly fields: mv_discussion_thread_activityFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for mv_discussion_thread_activity.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__mv_discussion_thread_activityClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    thread<T extends discussion_board_threadDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_threadDefaultArgs<ExtArgs>>): Prisma__discussion_board_threadClient<$Result.GetResult<Prisma.$discussion_board_threadPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the mv_discussion_thread_activity model\n   */\n  interface mv_discussion_thread_activityFieldRefs {\n    readonly id: FieldRef<\"mv_discussion_thread_activity\", 'String'>\n    readonly thread_id: FieldRef<\"mv_discussion_thread_activity\", 'String'>\n    readonly reply_count: FieldRef<\"mv_discussion_thread_activity\", 'Int'>\n    readonly last_posted_at: FieldRef<\"mv_discussion_thread_activity\", 'DateTime'>\n    readonly participant_user_ids: FieldRef<\"mv_discussion_thread_activity\", 'String'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * mv_discussion_thread_activity findUnique\n   */\n  export type mv_discussion_thread_activityFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the mv_discussion_thread_activity\n     */\n    select?: mv_discussion_thread_activitySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the mv_discussion_thread_activity\n     */\n    omit?: mv_discussion_thread_activityOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: mv_discussion_thread_activityInclude<ExtArgs> | null\n    /**\n     * Filter, which mv_discussion_thread_activity to fetch.\n     */\n    where: mv_discussion_thread_activityWhereUniqueInput\n  }\n\n  /**\n   * mv_discussion_thread_activity findUniqueOrThrow\n   */\n  export type mv_discussion_thread_activityFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the mv_discussion_thread_activity\n     */\n    select?: mv_discussion_thread_activitySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the mv_discussion_thread_activity\n     */\n    omit?: mv_discussion_thread_activityOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: mv_discussion_thread_activityInclude<ExtArgs> | null\n    /**\n     * Filter, which mv_discussion_thread_activity to fetch.\n     */\n    where: mv_discussion_thread_activityWhereUniqueInput\n  }\n\n  /**\n   * mv_discussion_thread_activity findFirst\n   */\n  export type mv_discussion_thread_activityFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the mv_discussion_thread_activity\n     */\n    select?: mv_discussion_thread_activitySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the mv_discussion_thread_activity\n     */\n    omit?: mv_discussion_thread_activityOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: mv_discussion_thread_activityInclude<ExtArgs> | null\n    /**\n     * Filter, which mv_discussion_thread_activity to fetch.\n     */\n    where?: mv_discussion_thread_activityWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of mv_discussion_thread_activities to fetch.\n     */\n    orderBy?: mv_discussion_thread_activityOrderByWithRelationInput | mv_discussion_thread_activityOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for mv_discussion_thread_activities.\n     */\n    cursor?: mv_discussion_thread_activityWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` mv_discussion_thread_activities from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` mv_discussion_thread_activities.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of mv_discussion_thread_activities.\n     */\n    distinct?: Mv_discussion_thread_activityScalarFieldEnum | Mv_discussion_thread_activityScalarFieldEnum[]\n  }\n\n  /**\n   * mv_discussion_thread_activity findFirstOrThrow\n   */\n  export type mv_discussion_thread_activityFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the mv_discussion_thread_activity\n     */\n    select?: mv_discussion_thread_activitySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the mv_discussion_thread_activity\n     */\n    omit?: mv_discussion_thread_activityOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: mv_discussion_thread_activityInclude<ExtArgs> | null\n    /**\n     * Filter, which mv_discussion_thread_activity to fetch.\n     */\n    where?: mv_discussion_thread_activityWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of mv_discussion_thread_activities to fetch.\n     */\n    orderBy?: mv_discussion_thread_activityOrderByWithRelationInput | mv_discussion_thread_activityOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for mv_discussion_thread_activities.\n     */\n    cursor?: mv_discussion_thread_activityWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` mv_discussion_thread_activities from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` mv_discussion_thread_activities.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of mv_discussion_thread_activities.\n     */\n    distinct?: Mv_discussion_thread_activityScalarFieldEnum | Mv_discussion_thread_activityScalarFieldEnum[]\n  }\n\n  /**\n   * mv_discussion_thread_activity findMany\n   */\n  export type mv_discussion_thread_activityFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the mv_discussion_thread_activity\n     */\n    select?: mv_discussion_thread_activitySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the mv_discussion_thread_activity\n     */\n    omit?: mv_discussion_thread_activityOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: mv_discussion_thread_activityInclude<ExtArgs> | null\n    /**\n     * Filter, which mv_discussion_thread_activities to fetch.\n     */\n    where?: mv_discussion_thread_activityWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of mv_discussion_thread_activities to fetch.\n     */\n    orderBy?: mv_discussion_thread_activityOrderByWithRelationInput | mv_discussion_thread_activityOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing mv_discussion_thread_activities.\n     */\n    cursor?: mv_discussion_thread_activityWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` mv_discussion_thread_activities from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` mv_discussion_thread_activities.\n     */\n    skip?: number\n    distinct?: Mv_discussion_thread_activityScalarFieldEnum | Mv_discussion_thread_activityScalarFieldEnum[]\n  }\n\n  /**\n   * mv_discussion_thread_activity create\n   */\n  export type mv_discussion_thread_activityCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the mv_discussion_thread_activity\n     */\n    select?: mv_discussion_thread_activitySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the mv_discussion_thread_activity\n     */\n    omit?: mv_discussion_thread_activityOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: mv_discussion_thread_activityInclude<ExtArgs> | null\n    /**\n     * The data needed to create a mv_discussion_thread_activity.\n     */\n    data: XOR<mv_discussion_thread_activityCreateInput, mv_discussion_thread_activityUncheckedCreateInput>\n  }\n\n  /**\n   * mv_discussion_thread_activity createMany\n   */\n  export type mv_discussion_thread_activityCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many mv_discussion_thread_activities.\n     */\n    data: mv_discussion_thread_activityCreateManyInput | mv_discussion_thread_activityCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * mv_discussion_thread_activity createManyAndReturn\n   */\n  export type mv_discussion_thread_activityCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the mv_discussion_thread_activity\n     */\n    select?: mv_discussion_thread_activitySelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the mv_discussion_thread_activity\n     */\n    omit?: mv_discussion_thread_activityOmit<ExtArgs> | null\n    /**\n     * The data used to create many mv_discussion_thread_activities.\n     */\n    data: mv_discussion_thread_activityCreateManyInput | mv_discussion_thread_activityCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: mv_discussion_thread_activityIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * mv_discussion_thread_activity update\n   */\n  export type mv_discussion_thread_activityUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the mv_discussion_thread_activity\n     */\n    select?: mv_discussion_thread_activitySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the mv_discussion_thread_activity\n     */\n    omit?: mv_discussion_thread_activityOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: mv_discussion_thread_activityInclude<ExtArgs> | null\n    /**\n     * The data needed to update a mv_discussion_thread_activity.\n     */\n    data: XOR<mv_discussion_thread_activityUpdateInput, mv_discussion_thread_activityUncheckedUpdateInput>\n    /**\n     * Choose, which mv_discussion_thread_activity to update.\n     */\n    where: mv_discussion_thread_activityWhereUniqueInput\n  }\n\n  /**\n   * mv_discussion_thread_activity updateMany\n   */\n  export type mv_discussion_thread_activityUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update mv_discussion_thread_activities.\n     */\n    data: XOR<mv_discussion_thread_activityUpdateManyMutationInput, mv_discussion_thread_activityUncheckedUpdateManyInput>\n    /**\n     * Filter which mv_discussion_thread_activities to update\n     */\n    where?: mv_discussion_thread_activityWhereInput\n    /**\n     * Limit how many mv_discussion_thread_activities to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * mv_discussion_thread_activity updateManyAndReturn\n   */\n  export type mv_discussion_thread_activityUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the mv_discussion_thread_activity\n     */\n    select?: mv_discussion_thread_activitySelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the mv_discussion_thread_activity\n     */\n    omit?: mv_discussion_thread_activityOmit<ExtArgs> | null\n    /**\n     * The data used to update mv_discussion_thread_activities.\n     */\n    data: XOR<mv_discussion_thread_activityUpdateManyMutationInput, mv_discussion_thread_activityUncheckedUpdateManyInput>\n    /**\n     * Filter which mv_discussion_thread_activities to update\n     */\n    where?: mv_discussion_thread_activityWhereInput\n    /**\n     * Limit how many mv_discussion_thread_activities to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: mv_discussion_thread_activityIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * mv_discussion_thread_activity upsert\n   */\n  export type mv_discussion_thread_activityUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the mv_discussion_thread_activity\n     */\n    select?: mv_discussion_thread_activitySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the mv_discussion_thread_activity\n     */\n    omit?: mv_discussion_thread_activityOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: mv_discussion_thread_activityInclude<ExtArgs> | null\n    /**\n     * The filter to search for the mv_discussion_thread_activity to update in case it exists.\n     */\n    where: mv_discussion_thread_activityWhereUniqueInput\n    /**\n     * In case the mv_discussion_thread_activity found by the `where` argument doesn't exist, create a new mv_discussion_thread_activity with this data.\n     */\n    create: XOR<mv_discussion_thread_activityCreateInput, mv_discussion_thread_activityUncheckedCreateInput>\n    /**\n     * In case the mv_discussion_thread_activity was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<mv_discussion_thread_activityUpdateInput, mv_discussion_thread_activityUncheckedUpdateInput>\n  }\n\n  /**\n   * mv_discussion_thread_activity delete\n   */\n  export type mv_discussion_thread_activityDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the mv_discussion_thread_activity\n     */\n    select?: mv_discussion_thread_activitySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the mv_discussion_thread_activity\n     */\n    omit?: mv_discussion_thread_activityOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: mv_discussion_thread_activityInclude<ExtArgs> | null\n    /**\n     * Filter which mv_discussion_thread_activity to delete.\n     */\n    where: mv_discussion_thread_activityWhereUniqueInput\n  }\n\n  /**\n   * mv_discussion_thread_activity deleteMany\n   */\n  export type mv_discussion_thread_activityDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which mv_discussion_thread_activities to delete\n     */\n    where?: mv_discussion_thread_activityWhereInput\n    /**\n     * Limit how many mv_discussion_thread_activities to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * mv_discussion_thread_activity without action\n   */\n  export type mv_discussion_thread_activityDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the mv_discussion_thread_activity\n     */\n    select?: mv_discussion_thread_activitySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the mv_discussion_thread_activity\n     */\n    omit?: mv_discussion_thread_activityOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: mv_discussion_thread_activityInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussion_board_vote\n   */\n\n  export type AggregateDiscussion_board_vote = {\n    _count: Discussion_board_voteCountAggregateOutputType | null\n    _min: Discussion_board_voteMinAggregateOutputType | null\n    _max: Discussion_board_voteMaxAggregateOutputType | null\n  }\n\n  export type Discussion_board_voteMinAggregateOutputType = {\n    id: string | null\n    user_id: string | null\n    thread_id: string | null\n    post_id: string | null\n    comment_id: string | null\n    direction: string | null\n    created_at: Date | null\n  }\n\n  export type Discussion_board_voteMaxAggregateOutputType = {\n    id: string | null\n    user_id: string | null\n    thread_id: string | null\n    post_id: string | null\n    comment_id: string | null\n    direction: string | null\n    created_at: Date | null\n  }\n\n  export type Discussion_board_voteCountAggregateOutputType = {\n    id: number\n    user_id: number\n    thread_id: number\n    post_id: number\n    comment_id: number\n    direction: number\n    created_at: number\n    _all: number\n  }\n\n\n  export type Discussion_board_voteMinAggregateInputType = {\n    id?: true\n    user_id?: true\n    thread_id?: true\n    post_id?: true\n    comment_id?: true\n    direction?: true\n    created_at?: true\n  }\n\n  export type Discussion_board_voteMaxAggregateInputType = {\n    id?: true\n    user_id?: true\n    thread_id?: true\n    post_id?: true\n    comment_id?: true\n    direction?: true\n    created_at?: true\n  }\n\n  export type Discussion_board_voteCountAggregateInputType = {\n    id?: true\n    user_id?: true\n    thread_id?: true\n    post_id?: true\n    comment_id?: true\n    direction?: true\n    created_at?: true\n    _all?: true\n  }\n\n  export type Discussion_board_voteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_vote to aggregate.\n     */\n    where?: discussion_board_voteWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_votes to fetch.\n     */\n    orderBy?: discussion_board_voteOrderByWithRelationInput | discussion_board_voteOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussion_board_voteWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_votes from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_votes.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussion_board_votes\n    **/\n    _count?: true | Discussion_board_voteCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussion_board_voteMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussion_board_voteMaxAggregateInputType\n  }\n\n  export type GetDiscussion_board_voteAggregateType<T extends Discussion_board_voteAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussion_board_vote]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussion_board_vote[P]>\n      : GetScalarType<T[P], AggregateDiscussion_board_vote[P]>\n  }\n\n\n\n\n  export type discussion_board_voteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_voteWhereInput\n    orderBy?: discussion_board_voteOrderByWithAggregationInput | discussion_board_voteOrderByWithAggregationInput[]\n    by: Discussion_board_voteScalarFieldEnum[] | Discussion_board_voteScalarFieldEnum\n    having?: discussion_board_voteScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussion_board_voteCountAggregateInputType | true\n    _min?: Discussion_board_voteMinAggregateInputType\n    _max?: Discussion_board_voteMaxAggregateInputType\n  }\n\n  export type Discussion_board_voteGroupByOutputType = {\n    id: string\n    user_id: string\n    thread_id: string | null\n    post_id: string | null\n    comment_id: string | null\n    direction: string\n    created_at: Date\n    _count: Discussion_board_voteCountAggregateOutputType | null\n    _min: Discussion_board_voteMinAggregateOutputType | null\n    _max: Discussion_board_voteMaxAggregateOutputType | null\n  }\n\n  type GetDiscussion_board_voteGroupByPayload<T extends discussion_board_voteGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussion_board_voteGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussion_board_voteGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussion_board_voteGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussion_board_voteGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussion_board_voteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    thread_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    direction?: boolean\n    created_at?: boolean\n    user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_vote$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_vote$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_vote$commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_vote\"]>\n\n  export type discussion_board_voteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    thread_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    direction?: boolean\n    created_at?: boolean\n    user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_vote$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_vote$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_vote$commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_vote\"]>\n\n  export type discussion_board_voteSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    thread_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    direction?: boolean\n    created_at?: boolean\n    user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_vote$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_vote$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_vote$commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_vote\"]>\n\n  export type discussion_board_voteSelectScalar = {\n    id?: boolean\n    user_id?: boolean\n    thread_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    direction?: boolean\n    created_at?: boolean\n  }\n\n  export type discussion_board_voteOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"user_id\" | \"thread_id\" | \"post_id\" | \"comment_id\" | \"direction\" | \"created_at\", ExtArgs[\"result\"][\"discussion_board_vote\"]>\n  export type discussion_board_voteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_vote$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_vote$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_vote$commentArgs<ExtArgs>\n  }\n  export type discussion_board_voteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_vote$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_vote$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_vote$commentArgs<ExtArgs>\n  }\n  export type discussion_board_voteIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_vote$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_vote$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_vote$commentArgs<ExtArgs>\n  }\n\n  export type $discussion_board_votePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussion_board_vote\"\n    objects: {\n      user: Prisma.$discussion_board_usersPayload<ExtArgs>\n      thread: Prisma.$discussion_board_threadPayload<ExtArgs> | null\n      post: Prisma.$discussion_board_postPayload<ExtArgs> | null\n      comment: Prisma.$discussion_board_commentPayload<ExtArgs> | null\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * [Vote Record Primary Key] - Implements unique identification of every vote operation as required for audit and traceability. This value ensures all vote records remain unique and supports direct lookups. This is fully normalized as it supplies no additional information beside entity identity.\n       */\n      id: string\n      /**\n       * [Voting User] - References the user performing the vote according to requirements for audit and user-based tracking. This field allows for querying all votes cast by a particular user and is always required for normalization and referential integrity. For example, counting all upvotes by a user. Not nullable.\n       */\n      user_id: string\n      /**\n       * [Thread Target] - Refers to the thread being voted on, if applicable, aligning with the need for thread upvote/downvote as in core feature requirements. Enables normalized storage without duplication. Nullable to permit post/comment targets instead.\n       */\n      thread_id: string | null\n      /**\n       * [Post Target] - Refers to a specific post receiving a vote, only set if the target is a post. Implements normalization by storing the reference atomically. Nullable for other vote types.\n       */\n      post_id: string | null\n      /**\n       * [Comment Target] - References a comment being voted on, per threaded/nested commentary needs. Only set if the vote applies to a comment. Ensures 3NF by isolating relationships. Nullable for other target types.\n       */\n      comment_id: string | null\n      /**\n       * [Vote Direction] - Implements voting direction per 'upvote/downvote' usage. Accepts only 'up' or 'down' as valid values, reflecting the feature requirement. Maintains normalization by storing only atomic values. Used for aggregating vote totals efficiently.\n       */\n      direction: string\n      /**\n       * [Vote Timestamp] - Records when the vote operation took place in accordance with audit and analytics tracking. Fully normalized, supports temporal queries and audit. For example, to track voting frequency or trends over time.\n       */\n      created_at: Date\n    }, ExtArgs[\"result\"][\"discussion_board_vote\"]>\n    composites: {}\n  }\n\n  type discussion_board_voteGetPayload<S extends boolean | null | undefined | discussion_board_voteDefaultArgs> = $Result.GetResult<Prisma.$discussion_board_votePayload, S>\n\n  type discussion_board_voteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussion_board_voteFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussion_board_voteCountAggregateInputType | true\n    }\n\n  export interface discussion_board_voteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussion_board_vote'], meta: { name: 'discussion_board_vote' } }\n    /**\n     * Find zero or one Discussion_board_vote that matches the filter.\n     * @param {discussion_board_voteFindUniqueArgs} args - Arguments to find a Discussion_board_vote\n     * @example\n     * // Get one Discussion_board_vote\n     * const discussion_board_vote = await prisma.discussion_board_vote.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussion_board_voteFindUniqueArgs>(args: SelectSubset<T, discussion_board_voteFindUniqueArgs<ExtArgs>>): Prisma__discussion_board_voteClient<$Result.GetResult<Prisma.$discussion_board_votePayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussion_board_vote that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussion_board_voteFindUniqueOrThrowArgs} args - Arguments to find a Discussion_board_vote\n     * @example\n     * // Get one Discussion_board_vote\n     * const discussion_board_vote = await prisma.discussion_board_vote.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussion_board_voteFindUniqueOrThrowArgs>(args: SelectSubset<T, discussion_board_voteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussion_board_voteClient<$Result.GetResult<Prisma.$discussion_board_votePayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_vote that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_voteFindFirstArgs} args - Arguments to find a Discussion_board_vote\n     * @example\n     * // Get one Discussion_board_vote\n     * const discussion_board_vote = await prisma.discussion_board_vote.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussion_board_voteFindFirstArgs>(args?: SelectSubset<T, discussion_board_voteFindFirstArgs<ExtArgs>>): Prisma__discussion_board_voteClient<$Result.GetResult<Prisma.$discussion_board_votePayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_vote that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_voteFindFirstOrThrowArgs} args - Arguments to find a Discussion_board_vote\n     * @example\n     * // Get one Discussion_board_vote\n     * const discussion_board_vote = await prisma.discussion_board_vote.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussion_board_voteFindFirstOrThrowArgs>(args?: SelectSubset<T, discussion_board_voteFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussion_board_voteClient<$Result.GetResult<Prisma.$discussion_board_votePayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussion_board_votes that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_voteFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussion_board_votes\n     * const discussion_board_votes = await prisma.discussion_board_vote.findMany()\n     * \n     * // Get first 10 Discussion_board_votes\n     * const discussion_board_votes = await prisma.discussion_board_vote.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussion_board_voteWithIdOnly = await prisma.discussion_board_vote.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussion_board_voteFindManyArgs>(args?: SelectSubset<T, discussion_board_voteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_votePayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussion_board_vote.\n     * @param {discussion_board_voteCreateArgs} args - Arguments to create a Discussion_board_vote.\n     * @example\n     * // Create one Discussion_board_vote\n     * const Discussion_board_vote = await prisma.discussion_board_vote.create({\n     *   data: {\n     *     // ... data to create a Discussion_board_vote\n     *   }\n     * })\n     * \n     */\n    create<T extends discussion_board_voteCreateArgs>(args: SelectSubset<T, discussion_board_voteCreateArgs<ExtArgs>>): Prisma__discussion_board_voteClient<$Result.GetResult<Prisma.$discussion_board_votePayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussion_board_votes.\n     * @param {discussion_board_voteCreateManyArgs} args - Arguments to create many Discussion_board_votes.\n     * @example\n     * // Create many Discussion_board_votes\n     * const discussion_board_vote = await prisma.discussion_board_vote.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussion_board_voteCreateManyArgs>(args?: SelectSubset<T, discussion_board_voteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussion_board_votes and returns the data saved in the database.\n     * @param {discussion_board_voteCreateManyAndReturnArgs} args - Arguments to create many Discussion_board_votes.\n     * @example\n     * // Create many Discussion_board_votes\n     * const discussion_board_vote = await prisma.discussion_board_vote.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussion_board_votes and only return the `id`\n     * const discussion_board_voteWithIdOnly = await prisma.discussion_board_vote.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussion_board_voteCreateManyAndReturnArgs>(args?: SelectSubset<T, discussion_board_voteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_votePayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussion_board_vote.\n     * @param {discussion_board_voteDeleteArgs} args - Arguments to delete one Discussion_board_vote.\n     * @example\n     * // Delete one Discussion_board_vote\n     * const Discussion_board_vote = await prisma.discussion_board_vote.delete({\n     *   where: {\n     *     // ... filter to delete one Discussion_board_vote\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussion_board_voteDeleteArgs>(args: SelectSubset<T, discussion_board_voteDeleteArgs<ExtArgs>>): Prisma__discussion_board_voteClient<$Result.GetResult<Prisma.$discussion_board_votePayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussion_board_vote.\n     * @param {discussion_board_voteUpdateArgs} args - Arguments to update one Discussion_board_vote.\n     * @example\n     * // Update one Discussion_board_vote\n     * const discussion_board_vote = await prisma.discussion_board_vote.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussion_board_voteUpdateArgs>(args: SelectSubset<T, discussion_board_voteUpdateArgs<ExtArgs>>): Prisma__discussion_board_voteClient<$Result.GetResult<Prisma.$discussion_board_votePayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussion_board_votes.\n     * @param {discussion_board_voteDeleteManyArgs} args - Arguments to filter Discussion_board_votes to delete.\n     * @example\n     * // Delete a few Discussion_board_votes\n     * const { count } = await prisma.discussion_board_vote.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussion_board_voteDeleteManyArgs>(args?: SelectSubset<T, discussion_board_voteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_votes.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_voteUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussion_board_votes\n     * const discussion_board_vote = await prisma.discussion_board_vote.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussion_board_voteUpdateManyArgs>(args: SelectSubset<T, discussion_board_voteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_votes and returns the data updated in the database.\n     * @param {discussion_board_voteUpdateManyAndReturnArgs} args - Arguments to update many Discussion_board_votes.\n     * @example\n     * // Update many Discussion_board_votes\n     * const discussion_board_vote = await prisma.discussion_board_vote.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussion_board_votes and only return the `id`\n     * const discussion_board_voteWithIdOnly = await prisma.discussion_board_vote.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussion_board_voteUpdateManyAndReturnArgs>(args: SelectSubset<T, discussion_board_voteUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_votePayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussion_board_vote.\n     * @param {discussion_board_voteUpsertArgs} args - Arguments to update or create a Discussion_board_vote.\n     * @example\n     * // Update or create a Discussion_board_vote\n     * const discussion_board_vote = await prisma.discussion_board_vote.upsert({\n     *   create: {\n     *     // ... data to create a Discussion_board_vote\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussion_board_vote we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussion_board_voteUpsertArgs>(args: SelectSubset<T, discussion_board_voteUpsertArgs<ExtArgs>>): Prisma__discussion_board_voteClient<$Result.GetResult<Prisma.$discussion_board_votePayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussion_board_votes.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_voteCountArgs} args - Arguments to filter Discussion_board_votes to count.\n     * @example\n     * // Count the number of Discussion_board_votes\n     * const count = await prisma.discussion_board_vote.count({\n     *   where: {\n     *     // ... the filter for the Discussion_board_votes we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussion_board_voteCountArgs>(\n      args?: Subset<T, discussion_board_voteCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussion_board_voteCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussion_board_vote.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussion_board_voteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussion_board_voteAggregateArgs>(args: Subset<T, Discussion_board_voteAggregateArgs>): Prisma.PrismaPromise<GetDiscussion_board_voteAggregateType<T>>\n\n    /**\n     * Group by Discussion_board_vote.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_voteGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussion_board_voteGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussion_board_voteGroupByArgs['orderBy'] }\n        : { orderBy?: discussion_board_voteGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussion_board_voteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussion_board_voteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussion_board_vote model\n   */\n  readonly fields: discussion_board_voteFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussion_board_vote.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussion_board_voteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    user<T extends discussion_board_usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_usersDefaultArgs<ExtArgs>>): Prisma__discussion_board_usersClient<$Result.GetResult<Prisma.$discussion_board_usersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    thread<T extends discussion_board_vote$threadArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_vote$threadArgs<ExtArgs>>): Prisma__discussion_board_threadClient<$Result.GetResult<Prisma.$discussion_board_threadPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    post<T extends discussion_board_vote$postArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_vote$postArgs<ExtArgs>>): Prisma__discussion_board_postClient<$Result.GetResult<Prisma.$discussion_board_postPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    comment<T extends discussion_board_vote$commentArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_vote$commentArgs<ExtArgs>>): Prisma__discussion_board_commentClient<$Result.GetResult<Prisma.$discussion_board_commentPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussion_board_vote model\n   */\n  interface discussion_board_voteFieldRefs {\n    readonly id: FieldRef<\"discussion_board_vote\", 'String'>\n    readonly user_id: FieldRef<\"discussion_board_vote\", 'String'>\n    readonly thread_id: FieldRef<\"discussion_board_vote\", 'String'>\n    readonly post_id: FieldRef<\"discussion_board_vote\", 'String'>\n    readonly comment_id: FieldRef<\"discussion_board_vote\", 'String'>\n    readonly direction: FieldRef<\"discussion_board_vote\", 'String'>\n    readonly created_at: FieldRef<\"discussion_board_vote\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussion_board_vote findUnique\n   */\n  export type discussion_board_voteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_vote\n     */\n    select?: discussion_board_voteSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_vote\n     */\n    omit?: discussion_board_voteOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_voteInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_vote to fetch.\n     */\n    where: discussion_board_voteWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_vote findUniqueOrThrow\n   */\n  export type discussion_board_voteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_vote\n     */\n    select?: discussion_board_voteSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_vote\n     */\n    omit?: discussion_board_voteOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_voteInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_vote to fetch.\n     */\n    where: discussion_board_voteWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_vote findFirst\n   */\n  export type discussion_board_voteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_vote\n     */\n    select?: discussion_board_voteSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_vote\n     */\n    omit?: discussion_board_voteOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_voteInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_vote to fetch.\n     */\n    where?: discussion_board_voteWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_votes to fetch.\n     */\n    orderBy?: discussion_board_voteOrderByWithRelationInput | discussion_board_voteOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_votes.\n     */\n    cursor?: discussion_board_voteWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_votes from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_votes.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_votes.\n     */\n    distinct?: Discussion_board_voteScalarFieldEnum | Discussion_board_voteScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_vote findFirstOrThrow\n   */\n  export type discussion_board_voteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_vote\n     */\n    select?: discussion_board_voteSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_vote\n     */\n    omit?: discussion_board_voteOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_voteInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_vote to fetch.\n     */\n    where?: discussion_board_voteWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_votes to fetch.\n     */\n    orderBy?: discussion_board_voteOrderByWithRelationInput | discussion_board_voteOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_votes.\n     */\n    cursor?: discussion_board_voteWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_votes from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_votes.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_votes.\n     */\n    distinct?: Discussion_board_voteScalarFieldEnum | Discussion_board_voteScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_vote findMany\n   */\n  export type discussion_board_voteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_vote\n     */\n    select?: discussion_board_voteSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_vote\n     */\n    omit?: discussion_board_voteOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_voteInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_votes to fetch.\n     */\n    where?: discussion_board_voteWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_votes to fetch.\n     */\n    orderBy?: discussion_board_voteOrderByWithRelationInput | discussion_board_voteOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussion_board_votes.\n     */\n    cursor?: discussion_board_voteWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_votes from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_votes.\n     */\n    skip?: number\n    distinct?: Discussion_board_voteScalarFieldEnum | Discussion_board_voteScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_vote create\n   */\n  export type discussion_board_voteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_vote\n     */\n    select?: discussion_board_voteSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_vote\n     */\n    omit?: discussion_board_voteOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_voteInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussion_board_vote.\n     */\n    data: XOR<discussion_board_voteCreateInput, discussion_board_voteUncheckedCreateInput>\n  }\n\n  /**\n   * discussion_board_vote createMany\n   */\n  export type discussion_board_voteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussion_board_votes.\n     */\n    data: discussion_board_voteCreateManyInput | discussion_board_voteCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussion_board_vote createManyAndReturn\n   */\n  export type discussion_board_voteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_vote\n     */\n    select?: discussion_board_voteSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_vote\n     */\n    omit?: discussion_board_voteOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussion_board_votes.\n     */\n    data: discussion_board_voteCreateManyInput | discussion_board_voteCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_voteIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_vote update\n   */\n  export type discussion_board_voteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_vote\n     */\n    select?: discussion_board_voteSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_vote\n     */\n    omit?: discussion_board_voteOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_voteInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussion_board_vote.\n     */\n    data: XOR<discussion_board_voteUpdateInput, discussion_board_voteUncheckedUpdateInput>\n    /**\n     * Choose, which discussion_board_vote to update.\n     */\n    where: discussion_board_voteWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_vote updateMany\n   */\n  export type discussion_board_voteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussion_board_votes.\n     */\n    data: XOR<discussion_board_voteUpdateManyMutationInput, discussion_board_voteUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_votes to update\n     */\n    where?: discussion_board_voteWhereInput\n    /**\n     * Limit how many discussion_board_votes to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_vote updateManyAndReturn\n   */\n  export type discussion_board_voteUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_vote\n     */\n    select?: discussion_board_voteSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_vote\n     */\n    omit?: discussion_board_voteOmit<ExtArgs> | null\n    /**\n     * The data used to update discussion_board_votes.\n     */\n    data: XOR<discussion_board_voteUpdateManyMutationInput, discussion_board_voteUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_votes to update\n     */\n    where?: discussion_board_voteWhereInput\n    /**\n     * Limit how many discussion_board_votes to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_voteIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_vote upsert\n   */\n  export type discussion_board_voteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_vote\n     */\n    select?: discussion_board_voteSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_vote\n     */\n    omit?: discussion_board_voteOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_voteInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussion_board_vote to update in case it exists.\n     */\n    where: discussion_board_voteWhereUniqueInput\n    /**\n     * In case the discussion_board_vote found by the `where` argument doesn't exist, create a new discussion_board_vote with this data.\n     */\n    create: XOR<discussion_board_voteCreateInput, discussion_board_voteUncheckedCreateInput>\n    /**\n     * In case the discussion_board_vote was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussion_board_voteUpdateInput, discussion_board_voteUncheckedUpdateInput>\n  }\n\n  /**\n   * discussion_board_vote delete\n   */\n  export type discussion_board_voteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_vote\n     */\n    select?: discussion_board_voteSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_vote\n     */\n    omit?: discussion_board_voteOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_voteInclude<ExtArgs> | null\n    /**\n     * Filter which discussion_board_vote to delete.\n     */\n    where: discussion_board_voteWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_vote deleteMany\n   */\n  export type discussion_board_voteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_votes to delete\n     */\n    where?: discussion_board_voteWhereInput\n    /**\n     * Limit how many discussion_board_votes to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_vote.thread\n   */\n  export type discussion_board_vote$threadArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread\n     */\n    select?: discussion_board_threadSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread\n     */\n    omit?: discussion_board_threadOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_threadInclude<ExtArgs> | null\n    where?: discussion_board_threadWhereInput\n  }\n\n  /**\n   * discussion_board_vote.post\n   */\n  export type discussion_board_vote$postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_post\n     */\n    select?: discussion_board_postSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_post\n     */\n    omit?: discussion_board_postOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_postInclude<ExtArgs> | null\n    where?: discussion_board_postWhereInput\n  }\n\n  /**\n   * discussion_board_vote.comment\n   */\n  export type discussion_board_vote$commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_comment\n     */\n    select?: discussion_board_commentSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_comment\n     */\n    omit?: discussion_board_commentOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_commentInclude<ExtArgs> | null\n    where?: discussion_board_commentWhereInput\n  }\n\n  /**\n   * discussion_board_vote without action\n   */\n  export type discussion_board_voteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_vote\n     */\n    select?: discussion_board_voteSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_vote\n     */\n    omit?: discussion_board_voteOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_voteInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussion_board_reaction\n   */\n\n  export type AggregateDiscussion_board_reaction = {\n    _count: Discussion_board_reactionCountAggregateOutputType | null\n    _min: Discussion_board_reactionMinAggregateOutputType | null\n    _max: Discussion_board_reactionMaxAggregateOutputType | null\n  }\n\n  export type Discussion_board_reactionMinAggregateOutputType = {\n    id: string | null\n    user_id: string | null\n    thread_id: string | null\n    post_id: string | null\n    comment_id: string | null\n    reaction_type: string | null\n    created_at: Date | null\n  }\n\n  export type Discussion_board_reactionMaxAggregateOutputType = {\n    id: string | null\n    user_id: string | null\n    thread_id: string | null\n    post_id: string | null\n    comment_id: string | null\n    reaction_type: string | null\n    created_at: Date | null\n  }\n\n  export type Discussion_board_reactionCountAggregateOutputType = {\n    id: number\n    user_id: number\n    thread_id: number\n    post_id: number\n    comment_id: number\n    reaction_type: number\n    created_at: number\n    _all: number\n  }\n\n\n  export type Discussion_board_reactionMinAggregateInputType = {\n    id?: true\n    user_id?: true\n    thread_id?: true\n    post_id?: true\n    comment_id?: true\n    reaction_type?: true\n    created_at?: true\n  }\n\n  export type Discussion_board_reactionMaxAggregateInputType = {\n    id?: true\n    user_id?: true\n    thread_id?: true\n    post_id?: true\n    comment_id?: true\n    reaction_type?: true\n    created_at?: true\n  }\n\n  export type Discussion_board_reactionCountAggregateInputType = {\n    id?: true\n    user_id?: true\n    thread_id?: true\n    post_id?: true\n    comment_id?: true\n    reaction_type?: true\n    created_at?: true\n    _all?: true\n  }\n\n  export type Discussion_board_reactionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_reaction to aggregate.\n     */\n    where?: discussion_board_reactionWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_reactions to fetch.\n     */\n    orderBy?: discussion_board_reactionOrderByWithRelationInput | discussion_board_reactionOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussion_board_reactionWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_reactions from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_reactions.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussion_board_reactions\n    **/\n    _count?: true | Discussion_board_reactionCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussion_board_reactionMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussion_board_reactionMaxAggregateInputType\n  }\n\n  export type GetDiscussion_board_reactionAggregateType<T extends Discussion_board_reactionAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussion_board_reaction]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussion_board_reaction[P]>\n      : GetScalarType<T[P], AggregateDiscussion_board_reaction[P]>\n  }\n\n\n\n\n  export type discussion_board_reactionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_reactionWhereInput\n    orderBy?: discussion_board_reactionOrderByWithAggregationInput | discussion_board_reactionOrderByWithAggregationInput[]\n    by: Discussion_board_reactionScalarFieldEnum[] | Discussion_board_reactionScalarFieldEnum\n    having?: discussion_board_reactionScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussion_board_reactionCountAggregateInputType | true\n    _min?: Discussion_board_reactionMinAggregateInputType\n    _max?: Discussion_board_reactionMaxAggregateInputType\n  }\n\n  export type Discussion_board_reactionGroupByOutputType = {\n    id: string\n    user_id: string\n    thread_id: string | null\n    post_id: string | null\n    comment_id: string | null\n    reaction_type: string\n    created_at: Date\n    _count: Discussion_board_reactionCountAggregateOutputType | null\n    _min: Discussion_board_reactionMinAggregateOutputType | null\n    _max: Discussion_board_reactionMaxAggregateOutputType | null\n  }\n\n  type GetDiscussion_board_reactionGroupByPayload<T extends discussion_board_reactionGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussion_board_reactionGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussion_board_reactionGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussion_board_reactionGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussion_board_reactionGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussion_board_reactionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    thread_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    reaction_type?: boolean\n    created_at?: boolean\n    user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_reaction$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_reaction$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_reaction$commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_reaction\"]>\n\n  export type discussion_board_reactionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    thread_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    reaction_type?: boolean\n    created_at?: boolean\n    user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_reaction$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_reaction$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_reaction$commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_reaction\"]>\n\n  export type discussion_board_reactionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    thread_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    reaction_type?: boolean\n    created_at?: boolean\n    user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_reaction$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_reaction$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_reaction$commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_reaction\"]>\n\n  export type discussion_board_reactionSelectScalar = {\n    id?: boolean\n    user_id?: boolean\n    thread_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    reaction_type?: boolean\n    created_at?: boolean\n  }\n\n  export type discussion_board_reactionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"user_id\" | \"thread_id\" | \"post_id\" | \"comment_id\" | \"reaction_type\" | \"created_at\", ExtArgs[\"result\"][\"discussion_board_reaction\"]>\n  export type discussion_board_reactionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_reaction$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_reaction$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_reaction$commentArgs<ExtArgs>\n  }\n  export type discussion_board_reactionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_reaction$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_reaction$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_reaction$commentArgs<ExtArgs>\n  }\n  export type discussion_board_reactionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_reaction$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_reaction$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_reaction$commentArgs<ExtArgs>\n  }\n\n  export type $discussion_board_reactionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussion_board_reaction\"\n    objects: {\n      user: Prisma.$discussion_board_usersPayload<ExtArgs>\n      thread: Prisma.$discussion_board_threadPayload<ExtArgs> | null\n      post: Prisma.$discussion_board_postPayload<ExtArgs> | null\n      comment: Prisma.$discussion_board_commentPayload<ExtArgs> | null\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * [Reaction Primary Key] - Unique identifier for each atomic reaction event. Complies with full normalization principles and supports efficient lookups and audit trails.\n       */\n      id: string\n      /**\n       * [Reacting User] - References user account providing the reaction. Required for tracking and personalization. Not nullable for auditability and user-specific features.\n       */\n      user_id: string\n      /**\n       * [Thread Target] - References target thread if response is at thread level. Nullable if the reaction applies to post or comment.\n       */\n      thread_id: string | null\n      /**\n       * [Post Target] - References post receiving reaction, following atomicity principles. Nullable for thread/comment targets.\n       */\n      post_id: string | null\n      /**\n       * [Comment Target] - Used for reactions attached to a comment. Respects normalized data modeling through nullable field.\n       */\n      comment_id: string | null\n      /**\n       * [Reaction Type] - Captures the symbolic meaning of the user reaction (e.g., 'like', 'laugh', 'disagree', emoji code). Implements the UI/business requirements for expressive reactions and enables normalized lookup tables in future. For example, records 'like' or 'sad'. Restricts values to atomic symbols only. Not nullable.\n       */\n      reaction_type: string\n      /**\n       * [Reaction Timestamp] - Records exact time of reaction, enabling both audit/compliance and analytics functions. Fully normalized field supporting sort and filter operations.\n       */\n      created_at: Date\n    }, ExtArgs[\"result\"][\"discussion_board_reaction\"]>\n    composites: {}\n  }\n\n  type discussion_board_reactionGetPayload<S extends boolean | null | undefined | discussion_board_reactionDefaultArgs> = $Result.GetResult<Prisma.$discussion_board_reactionPayload, S>\n\n  type discussion_board_reactionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussion_board_reactionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussion_board_reactionCountAggregateInputType | true\n    }\n\n  export interface discussion_board_reactionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussion_board_reaction'], meta: { name: 'discussion_board_reaction' } }\n    /**\n     * Find zero or one Discussion_board_reaction that matches the filter.\n     * @param {discussion_board_reactionFindUniqueArgs} args - Arguments to find a Discussion_board_reaction\n     * @example\n     * // Get one Discussion_board_reaction\n     * const discussion_board_reaction = await prisma.discussion_board_reaction.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussion_board_reactionFindUniqueArgs>(args: SelectSubset<T, discussion_board_reactionFindUniqueArgs<ExtArgs>>): Prisma__discussion_board_reactionClient<$Result.GetResult<Prisma.$discussion_board_reactionPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussion_board_reaction that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussion_board_reactionFindUniqueOrThrowArgs} args - Arguments to find a Discussion_board_reaction\n     * @example\n     * // Get one Discussion_board_reaction\n     * const discussion_board_reaction = await prisma.discussion_board_reaction.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussion_board_reactionFindUniqueOrThrowArgs>(args: SelectSubset<T, discussion_board_reactionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussion_board_reactionClient<$Result.GetResult<Prisma.$discussion_board_reactionPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_reaction that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_reactionFindFirstArgs} args - Arguments to find a Discussion_board_reaction\n     * @example\n     * // Get one Discussion_board_reaction\n     * const discussion_board_reaction = await prisma.discussion_board_reaction.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussion_board_reactionFindFirstArgs>(args?: SelectSubset<T, discussion_board_reactionFindFirstArgs<ExtArgs>>): Prisma__discussion_board_reactionClient<$Result.GetResult<Prisma.$discussion_board_reactionPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_reaction that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_reactionFindFirstOrThrowArgs} args - Arguments to find a Discussion_board_reaction\n     * @example\n     * // Get one Discussion_board_reaction\n     * const discussion_board_reaction = await prisma.discussion_board_reaction.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussion_board_reactionFindFirstOrThrowArgs>(args?: SelectSubset<T, discussion_board_reactionFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussion_board_reactionClient<$Result.GetResult<Prisma.$discussion_board_reactionPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussion_board_reactions that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_reactionFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussion_board_reactions\n     * const discussion_board_reactions = await prisma.discussion_board_reaction.findMany()\n     * \n     * // Get first 10 Discussion_board_reactions\n     * const discussion_board_reactions = await prisma.discussion_board_reaction.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussion_board_reactionWithIdOnly = await prisma.discussion_board_reaction.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussion_board_reactionFindManyArgs>(args?: SelectSubset<T, discussion_board_reactionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_reactionPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussion_board_reaction.\n     * @param {discussion_board_reactionCreateArgs} args - Arguments to create a Discussion_board_reaction.\n     * @example\n     * // Create one Discussion_board_reaction\n     * const Discussion_board_reaction = await prisma.discussion_board_reaction.create({\n     *   data: {\n     *     // ... data to create a Discussion_board_reaction\n     *   }\n     * })\n     * \n     */\n    create<T extends discussion_board_reactionCreateArgs>(args: SelectSubset<T, discussion_board_reactionCreateArgs<ExtArgs>>): Prisma__discussion_board_reactionClient<$Result.GetResult<Prisma.$discussion_board_reactionPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussion_board_reactions.\n     * @param {discussion_board_reactionCreateManyArgs} args - Arguments to create many Discussion_board_reactions.\n     * @example\n     * // Create many Discussion_board_reactions\n     * const discussion_board_reaction = await prisma.discussion_board_reaction.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussion_board_reactionCreateManyArgs>(args?: SelectSubset<T, discussion_board_reactionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussion_board_reactions and returns the data saved in the database.\n     * @param {discussion_board_reactionCreateManyAndReturnArgs} args - Arguments to create many Discussion_board_reactions.\n     * @example\n     * // Create many Discussion_board_reactions\n     * const discussion_board_reaction = await prisma.discussion_board_reaction.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussion_board_reactions and only return the `id`\n     * const discussion_board_reactionWithIdOnly = await prisma.discussion_board_reaction.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussion_board_reactionCreateManyAndReturnArgs>(args?: SelectSubset<T, discussion_board_reactionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_reactionPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussion_board_reaction.\n     * @param {discussion_board_reactionDeleteArgs} args - Arguments to delete one Discussion_board_reaction.\n     * @example\n     * // Delete one Discussion_board_reaction\n     * const Discussion_board_reaction = await prisma.discussion_board_reaction.delete({\n     *   where: {\n     *     // ... filter to delete one Discussion_board_reaction\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussion_board_reactionDeleteArgs>(args: SelectSubset<T, discussion_board_reactionDeleteArgs<ExtArgs>>): Prisma__discussion_board_reactionClient<$Result.GetResult<Prisma.$discussion_board_reactionPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussion_board_reaction.\n     * @param {discussion_board_reactionUpdateArgs} args - Arguments to update one Discussion_board_reaction.\n     * @example\n     * // Update one Discussion_board_reaction\n     * const discussion_board_reaction = await prisma.discussion_board_reaction.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussion_board_reactionUpdateArgs>(args: SelectSubset<T, discussion_board_reactionUpdateArgs<ExtArgs>>): Prisma__discussion_board_reactionClient<$Result.GetResult<Prisma.$discussion_board_reactionPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussion_board_reactions.\n     * @param {discussion_board_reactionDeleteManyArgs} args - Arguments to filter Discussion_board_reactions to delete.\n     * @example\n     * // Delete a few Discussion_board_reactions\n     * const { count } = await prisma.discussion_board_reaction.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussion_board_reactionDeleteManyArgs>(args?: SelectSubset<T, discussion_board_reactionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_reactions.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_reactionUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussion_board_reactions\n     * const discussion_board_reaction = await prisma.discussion_board_reaction.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussion_board_reactionUpdateManyArgs>(args: SelectSubset<T, discussion_board_reactionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_reactions and returns the data updated in the database.\n     * @param {discussion_board_reactionUpdateManyAndReturnArgs} args - Arguments to update many Discussion_board_reactions.\n     * @example\n     * // Update many Discussion_board_reactions\n     * const discussion_board_reaction = await prisma.discussion_board_reaction.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussion_board_reactions and only return the `id`\n     * const discussion_board_reactionWithIdOnly = await prisma.discussion_board_reaction.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussion_board_reactionUpdateManyAndReturnArgs>(args: SelectSubset<T, discussion_board_reactionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_reactionPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussion_board_reaction.\n     * @param {discussion_board_reactionUpsertArgs} args - Arguments to update or create a Discussion_board_reaction.\n     * @example\n     * // Update or create a Discussion_board_reaction\n     * const discussion_board_reaction = await prisma.discussion_board_reaction.upsert({\n     *   create: {\n     *     // ... data to create a Discussion_board_reaction\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussion_board_reaction we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussion_board_reactionUpsertArgs>(args: SelectSubset<T, discussion_board_reactionUpsertArgs<ExtArgs>>): Prisma__discussion_board_reactionClient<$Result.GetResult<Prisma.$discussion_board_reactionPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussion_board_reactions.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_reactionCountArgs} args - Arguments to filter Discussion_board_reactions to count.\n     * @example\n     * // Count the number of Discussion_board_reactions\n     * const count = await prisma.discussion_board_reaction.count({\n     *   where: {\n     *     // ... the filter for the Discussion_board_reactions we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussion_board_reactionCountArgs>(\n      args?: Subset<T, discussion_board_reactionCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussion_board_reactionCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussion_board_reaction.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussion_board_reactionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussion_board_reactionAggregateArgs>(args: Subset<T, Discussion_board_reactionAggregateArgs>): Prisma.PrismaPromise<GetDiscussion_board_reactionAggregateType<T>>\n\n    /**\n     * Group by Discussion_board_reaction.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_reactionGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussion_board_reactionGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussion_board_reactionGroupByArgs['orderBy'] }\n        : { orderBy?: discussion_board_reactionGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussion_board_reactionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussion_board_reactionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussion_board_reaction model\n   */\n  readonly fields: discussion_board_reactionFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussion_board_reaction.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussion_board_reactionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    user<T extends discussion_board_usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_usersDefaultArgs<ExtArgs>>): Prisma__discussion_board_usersClient<$Result.GetResult<Prisma.$discussion_board_usersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    thread<T extends discussion_board_reaction$threadArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_reaction$threadArgs<ExtArgs>>): Prisma__discussion_board_threadClient<$Result.GetResult<Prisma.$discussion_board_threadPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    post<T extends discussion_board_reaction$postArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_reaction$postArgs<ExtArgs>>): Prisma__discussion_board_postClient<$Result.GetResult<Prisma.$discussion_board_postPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    comment<T extends discussion_board_reaction$commentArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_reaction$commentArgs<ExtArgs>>): Prisma__discussion_board_commentClient<$Result.GetResult<Prisma.$discussion_board_commentPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussion_board_reaction model\n   */\n  interface discussion_board_reactionFieldRefs {\n    readonly id: FieldRef<\"discussion_board_reaction\", 'String'>\n    readonly user_id: FieldRef<\"discussion_board_reaction\", 'String'>\n    readonly thread_id: FieldRef<\"discussion_board_reaction\", 'String'>\n    readonly post_id: FieldRef<\"discussion_board_reaction\", 'String'>\n    readonly comment_id: FieldRef<\"discussion_board_reaction\", 'String'>\n    readonly reaction_type: FieldRef<\"discussion_board_reaction\", 'String'>\n    readonly created_at: FieldRef<\"discussion_board_reaction\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussion_board_reaction findUnique\n   */\n  export type discussion_board_reactionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_reaction\n     */\n    select?: discussion_board_reactionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_reaction\n     */\n    omit?: discussion_board_reactionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_reactionInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_reaction to fetch.\n     */\n    where: discussion_board_reactionWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_reaction findUniqueOrThrow\n   */\n  export type discussion_board_reactionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_reaction\n     */\n    select?: discussion_board_reactionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_reaction\n     */\n    omit?: discussion_board_reactionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_reactionInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_reaction to fetch.\n     */\n    where: discussion_board_reactionWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_reaction findFirst\n   */\n  export type discussion_board_reactionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_reaction\n     */\n    select?: discussion_board_reactionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_reaction\n     */\n    omit?: discussion_board_reactionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_reactionInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_reaction to fetch.\n     */\n    where?: discussion_board_reactionWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_reactions to fetch.\n     */\n    orderBy?: discussion_board_reactionOrderByWithRelationInput | discussion_board_reactionOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_reactions.\n     */\n    cursor?: discussion_board_reactionWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_reactions from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_reactions.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_reactions.\n     */\n    distinct?: Discussion_board_reactionScalarFieldEnum | Discussion_board_reactionScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_reaction findFirstOrThrow\n   */\n  export type discussion_board_reactionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_reaction\n     */\n    select?: discussion_board_reactionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_reaction\n     */\n    omit?: discussion_board_reactionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_reactionInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_reaction to fetch.\n     */\n    where?: discussion_board_reactionWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_reactions to fetch.\n     */\n    orderBy?: discussion_board_reactionOrderByWithRelationInput | discussion_board_reactionOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_reactions.\n     */\n    cursor?: discussion_board_reactionWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_reactions from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_reactions.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_reactions.\n     */\n    distinct?: Discussion_board_reactionScalarFieldEnum | Discussion_board_reactionScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_reaction findMany\n   */\n  export type discussion_board_reactionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_reaction\n     */\n    select?: discussion_board_reactionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_reaction\n     */\n    omit?: discussion_board_reactionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_reactionInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_reactions to fetch.\n     */\n    where?: discussion_board_reactionWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_reactions to fetch.\n     */\n    orderBy?: discussion_board_reactionOrderByWithRelationInput | discussion_board_reactionOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussion_board_reactions.\n     */\n    cursor?: discussion_board_reactionWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_reactions from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_reactions.\n     */\n    skip?: number\n    distinct?: Discussion_board_reactionScalarFieldEnum | Discussion_board_reactionScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_reaction create\n   */\n  export type discussion_board_reactionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_reaction\n     */\n    select?: discussion_board_reactionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_reaction\n     */\n    omit?: discussion_board_reactionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_reactionInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussion_board_reaction.\n     */\n    data: XOR<discussion_board_reactionCreateInput, discussion_board_reactionUncheckedCreateInput>\n  }\n\n  /**\n   * discussion_board_reaction createMany\n   */\n  export type discussion_board_reactionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussion_board_reactions.\n     */\n    data: discussion_board_reactionCreateManyInput | discussion_board_reactionCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussion_board_reaction createManyAndReturn\n   */\n  export type discussion_board_reactionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_reaction\n     */\n    select?: discussion_board_reactionSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_reaction\n     */\n    omit?: discussion_board_reactionOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussion_board_reactions.\n     */\n    data: discussion_board_reactionCreateManyInput | discussion_board_reactionCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_reactionIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_reaction update\n   */\n  export type discussion_board_reactionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_reaction\n     */\n    select?: discussion_board_reactionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_reaction\n     */\n    omit?: discussion_board_reactionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_reactionInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussion_board_reaction.\n     */\n    data: XOR<discussion_board_reactionUpdateInput, discussion_board_reactionUncheckedUpdateInput>\n    /**\n     * Choose, which discussion_board_reaction to update.\n     */\n    where: discussion_board_reactionWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_reaction updateMany\n   */\n  export type discussion_board_reactionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussion_board_reactions.\n     */\n    data: XOR<discussion_board_reactionUpdateManyMutationInput, discussion_board_reactionUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_reactions to update\n     */\n    where?: discussion_board_reactionWhereInput\n    /**\n     * Limit how many discussion_board_reactions to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_reaction updateManyAndReturn\n   */\n  export type discussion_board_reactionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_reaction\n     */\n    select?: discussion_board_reactionSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_reaction\n     */\n    omit?: discussion_board_reactionOmit<ExtArgs> | null\n    /**\n     * The data used to update discussion_board_reactions.\n     */\n    data: XOR<discussion_board_reactionUpdateManyMutationInput, discussion_board_reactionUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_reactions to update\n     */\n    where?: discussion_board_reactionWhereInput\n    /**\n     * Limit how many discussion_board_reactions to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_reactionIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_reaction upsert\n   */\n  export type discussion_board_reactionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_reaction\n     */\n    select?: discussion_board_reactionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_reaction\n     */\n    omit?: discussion_board_reactionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_reactionInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussion_board_reaction to update in case it exists.\n     */\n    where: discussion_board_reactionWhereUniqueInput\n    /**\n     * In case the discussion_board_reaction found by the `where` argument doesn't exist, create a new discussion_board_reaction with this data.\n     */\n    create: XOR<discussion_board_reactionCreateInput, discussion_board_reactionUncheckedCreateInput>\n    /**\n     * In case the discussion_board_reaction was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussion_board_reactionUpdateInput, discussion_board_reactionUncheckedUpdateInput>\n  }\n\n  /**\n   * discussion_board_reaction delete\n   */\n  export type discussion_board_reactionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_reaction\n     */\n    select?: discussion_board_reactionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_reaction\n     */\n    omit?: discussion_board_reactionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_reactionInclude<ExtArgs> | null\n    /**\n     * Filter which discussion_board_reaction to delete.\n     */\n    where: discussion_board_reactionWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_reaction deleteMany\n   */\n  export type discussion_board_reactionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_reactions to delete\n     */\n    where?: discussion_board_reactionWhereInput\n    /**\n     * Limit how many discussion_board_reactions to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_reaction.thread\n   */\n  export type discussion_board_reaction$threadArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread\n     */\n    select?: discussion_board_threadSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread\n     */\n    omit?: discussion_board_threadOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_threadInclude<ExtArgs> | null\n    where?: discussion_board_threadWhereInput\n  }\n\n  /**\n   * discussion_board_reaction.post\n   */\n  export type discussion_board_reaction$postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_post\n     */\n    select?: discussion_board_postSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_post\n     */\n    omit?: discussion_board_postOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_postInclude<ExtArgs> | null\n    where?: discussion_board_postWhereInput\n  }\n\n  /**\n   * discussion_board_reaction.comment\n   */\n  export type discussion_board_reaction$commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_comment\n     */\n    select?: discussion_board_commentSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_comment\n     */\n    omit?: discussion_board_commentOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_commentInclude<ExtArgs> | null\n    where?: discussion_board_commentWhereInput\n  }\n\n  /**\n   * discussion_board_reaction without action\n   */\n  export type discussion_board_reactionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_reaction\n     */\n    select?: discussion_board_reactionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_reaction\n     */\n    omit?: discussion_board_reactionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_reactionInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussion_board_bookmark\n   */\n\n  export type AggregateDiscussion_board_bookmark = {\n    _count: Discussion_board_bookmarkCountAggregateOutputType | null\n    _min: Discussion_board_bookmarkMinAggregateOutputType | null\n    _max: Discussion_board_bookmarkMaxAggregateOutputType | null\n  }\n\n  export type Discussion_board_bookmarkMinAggregateOutputType = {\n    id: string | null\n    user_id: string | null\n    thread_id: string | null\n    post_id: string | null\n    comment_id: string | null\n    created_at: Date | null\n  }\n\n  export type Discussion_board_bookmarkMaxAggregateOutputType = {\n    id: string | null\n    user_id: string | null\n    thread_id: string | null\n    post_id: string | null\n    comment_id: string | null\n    created_at: Date | null\n  }\n\n  export type Discussion_board_bookmarkCountAggregateOutputType = {\n    id: number\n    user_id: number\n    thread_id: number\n    post_id: number\n    comment_id: number\n    created_at: number\n    _all: number\n  }\n\n\n  export type Discussion_board_bookmarkMinAggregateInputType = {\n    id?: true\n    user_id?: true\n    thread_id?: true\n    post_id?: true\n    comment_id?: true\n    created_at?: true\n  }\n\n  export type Discussion_board_bookmarkMaxAggregateInputType = {\n    id?: true\n    user_id?: true\n    thread_id?: true\n    post_id?: true\n    comment_id?: true\n    created_at?: true\n  }\n\n  export type Discussion_board_bookmarkCountAggregateInputType = {\n    id?: true\n    user_id?: true\n    thread_id?: true\n    post_id?: true\n    comment_id?: true\n    created_at?: true\n    _all?: true\n  }\n\n  export type Discussion_board_bookmarkAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_bookmark to aggregate.\n     */\n    where?: discussion_board_bookmarkWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_bookmarks to fetch.\n     */\n    orderBy?: discussion_board_bookmarkOrderByWithRelationInput | discussion_board_bookmarkOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussion_board_bookmarkWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_bookmarks from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_bookmarks.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussion_board_bookmarks\n    **/\n    _count?: true | Discussion_board_bookmarkCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussion_board_bookmarkMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussion_board_bookmarkMaxAggregateInputType\n  }\n\n  export type GetDiscussion_board_bookmarkAggregateType<T extends Discussion_board_bookmarkAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussion_board_bookmark]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussion_board_bookmark[P]>\n      : GetScalarType<T[P], AggregateDiscussion_board_bookmark[P]>\n  }\n\n\n\n\n  export type discussion_board_bookmarkGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_bookmarkWhereInput\n    orderBy?: discussion_board_bookmarkOrderByWithAggregationInput | discussion_board_bookmarkOrderByWithAggregationInput[]\n    by: Discussion_board_bookmarkScalarFieldEnum[] | Discussion_board_bookmarkScalarFieldEnum\n    having?: discussion_board_bookmarkScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussion_board_bookmarkCountAggregateInputType | true\n    _min?: Discussion_board_bookmarkMinAggregateInputType\n    _max?: Discussion_board_bookmarkMaxAggregateInputType\n  }\n\n  export type Discussion_board_bookmarkGroupByOutputType = {\n    id: string\n    user_id: string\n    thread_id: string | null\n    post_id: string | null\n    comment_id: string | null\n    created_at: Date\n    _count: Discussion_board_bookmarkCountAggregateOutputType | null\n    _min: Discussion_board_bookmarkMinAggregateOutputType | null\n    _max: Discussion_board_bookmarkMaxAggregateOutputType | null\n  }\n\n  type GetDiscussion_board_bookmarkGroupByPayload<T extends discussion_board_bookmarkGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussion_board_bookmarkGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussion_board_bookmarkGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussion_board_bookmarkGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussion_board_bookmarkGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussion_board_bookmarkSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    thread_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    created_at?: boolean\n    user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_bookmark$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_bookmark$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_bookmark$commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_bookmark\"]>\n\n  export type discussion_board_bookmarkSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    thread_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    created_at?: boolean\n    user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_bookmark$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_bookmark$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_bookmark$commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_bookmark\"]>\n\n  export type discussion_board_bookmarkSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    thread_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    created_at?: boolean\n    user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_bookmark$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_bookmark$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_bookmark$commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_bookmark\"]>\n\n  export type discussion_board_bookmarkSelectScalar = {\n    id?: boolean\n    user_id?: boolean\n    thread_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    created_at?: boolean\n  }\n\n  export type discussion_board_bookmarkOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"user_id\" | \"thread_id\" | \"post_id\" | \"comment_id\" | \"created_at\", ExtArgs[\"result\"][\"discussion_board_bookmark\"]>\n  export type discussion_board_bookmarkInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_bookmark$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_bookmark$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_bookmark$commentArgs<ExtArgs>\n  }\n  export type discussion_board_bookmarkIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_bookmark$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_bookmark$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_bookmark$commentArgs<ExtArgs>\n  }\n  export type discussion_board_bookmarkIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_bookmark$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_bookmark$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_bookmark$commentArgs<ExtArgs>\n  }\n\n  export type $discussion_board_bookmarkPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussion_board_bookmark\"\n    objects: {\n      user: Prisma.$discussion_board_usersPayload<ExtArgs>\n      thread: Prisma.$discussion_board_threadPayload<ExtArgs> | null\n      post: Prisma.$discussion_board_postPayload<ExtArgs> | null\n      comment: Prisma.$discussion_board_commentPayload<ExtArgs> | null\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * [Bookmark Primary Key] - Unique per bookmark, with no derived fields, enabling robust tracking and audit.\n       */\n      id: string\n      /**\n       * [Bookmarking User] - The user making the bookmark. Not nullable, as bookmarks must be attributable to a user per requirements.\n       */\n      user_id: string\n      /**\n       * [Thread Target] - Refers to thread when bookmark targets a whole thread discussion. Nullable for post/comment targeting.\n       */\n      thread_id: string | null\n      /**\n       * [Post Target] - Refers to specific post for more granular bookmarking. Nullable, enabling flexibility in target types.\n       */\n      post_id: string | null\n      /**\n       * [Comment Target] - Allows comments as bookmark targets, covering use cases such as referencing a key point. Nullable for thread/post bookmarks.\n       */\n      comment_id: string | null\n      /**\n       * [Bookmark Timestamp] - Stores creation time to provide temporal analytics, audit trails, and personalized bookmark ordering. Atomic field following normalization principles.\n       */\n      created_at: Date\n    }, ExtArgs[\"result\"][\"discussion_board_bookmark\"]>\n    composites: {}\n  }\n\n  type discussion_board_bookmarkGetPayload<S extends boolean | null | undefined | discussion_board_bookmarkDefaultArgs> = $Result.GetResult<Prisma.$discussion_board_bookmarkPayload, S>\n\n  type discussion_board_bookmarkCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussion_board_bookmarkFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussion_board_bookmarkCountAggregateInputType | true\n    }\n\n  export interface discussion_board_bookmarkDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussion_board_bookmark'], meta: { name: 'discussion_board_bookmark' } }\n    /**\n     * Find zero or one Discussion_board_bookmark that matches the filter.\n     * @param {discussion_board_bookmarkFindUniqueArgs} args - Arguments to find a Discussion_board_bookmark\n     * @example\n     * // Get one Discussion_board_bookmark\n     * const discussion_board_bookmark = await prisma.discussion_board_bookmark.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussion_board_bookmarkFindUniqueArgs>(args: SelectSubset<T, discussion_board_bookmarkFindUniqueArgs<ExtArgs>>): Prisma__discussion_board_bookmarkClient<$Result.GetResult<Prisma.$discussion_board_bookmarkPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussion_board_bookmark that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussion_board_bookmarkFindUniqueOrThrowArgs} args - Arguments to find a Discussion_board_bookmark\n     * @example\n     * // Get one Discussion_board_bookmark\n     * const discussion_board_bookmark = await prisma.discussion_board_bookmark.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussion_board_bookmarkFindUniqueOrThrowArgs>(args: SelectSubset<T, discussion_board_bookmarkFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussion_board_bookmarkClient<$Result.GetResult<Prisma.$discussion_board_bookmarkPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_bookmark that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_bookmarkFindFirstArgs} args - Arguments to find a Discussion_board_bookmark\n     * @example\n     * // Get one Discussion_board_bookmark\n     * const discussion_board_bookmark = await prisma.discussion_board_bookmark.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussion_board_bookmarkFindFirstArgs>(args?: SelectSubset<T, discussion_board_bookmarkFindFirstArgs<ExtArgs>>): Prisma__discussion_board_bookmarkClient<$Result.GetResult<Prisma.$discussion_board_bookmarkPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_bookmark that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_bookmarkFindFirstOrThrowArgs} args - Arguments to find a Discussion_board_bookmark\n     * @example\n     * // Get one Discussion_board_bookmark\n     * const discussion_board_bookmark = await prisma.discussion_board_bookmark.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussion_board_bookmarkFindFirstOrThrowArgs>(args?: SelectSubset<T, discussion_board_bookmarkFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussion_board_bookmarkClient<$Result.GetResult<Prisma.$discussion_board_bookmarkPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussion_board_bookmarks that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_bookmarkFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussion_board_bookmarks\n     * const discussion_board_bookmarks = await prisma.discussion_board_bookmark.findMany()\n     * \n     * // Get first 10 Discussion_board_bookmarks\n     * const discussion_board_bookmarks = await prisma.discussion_board_bookmark.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussion_board_bookmarkWithIdOnly = await prisma.discussion_board_bookmark.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussion_board_bookmarkFindManyArgs>(args?: SelectSubset<T, discussion_board_bookmarkFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_bookmarkPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussion_board_bookmark.\n     * @param {discussion_board_bookmarkCreateArgs} args - Arguments to create a Discussion_board_bookmark.\n     * @example\n     * // Create one Discussion_board_bookmark\n     * const Discussion_board_bookmark = await prisma.discussion_board_bookmark.create({\n     *   data: {\n     *     // ... data to create a Discussion_board_bookmark\n     *   }\n     * })\n     * \n     */\n    create<T extends discussion_board_bookmarkCreateArgs>(args: SelectSubset<T, discussion_board_bookmarkCreateArgs<ExtArgs>>): Prisma__discussion_board_bookmarkClient<$Result.GetResult<Prisma.$discussion_board_bookmarkPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussion_board_bookmarks.\n     * @param {discussion_board_bookmarkCreateManyArgs} args - Arguments to create many Discussion_board_bookmarks.\n     * @example\n     * // Create many Discussion_board_bookmarks\n     * const discussion_board_bookmark = await prisma.discussion_board_bookmark.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussion_board_bookmarkCreateManyArgs>(args?: SelectSubset<T, discussion_board_bookmarkCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussion_board_bookmarks and returns the data saved in the database.\n     * @param {discussion_board_bookmarkCreateManyAndReturnArgs} args - Arguments to create many Discussion_board_bookmarks.\n     * @example\n     * // Create many Discussion_board_bookmarks\n     * const discussion_board_bookmark = await prisma.discussion_board_bookmark.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussion_board_bookmarks and only return the `id`\n     * const discussion_board_bookmarkWithIdOnly = await prisma.discussion_board_bookmark.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussion_board_bookmarkCreateManyAndReturnArgs>(args?: SelectSubset<T, discussion_board_bookmarkCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_bookmarkPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussion_board_bookmark.\n     * @param {discussion_board_bookmarkDeleteArgs} args - Arguments to delete one Discussion_board_bookmark.\n     * @example\n     * // Delete one Discussion_board_bookmark\n     * const Discussion_board_bookmark = await prisma.discussion_board_bookmark.delete({\n     *   where: {\n     *     // ... filter to delete one Discussion_board_bookmark\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussion_board_bookmarkDeleteArgs>(args: SelectSubset<T, discussion_board_bookmarkDeleteArgs<ExtArgs>>): Prisma__discussion_board_bookmarkClient<$Result.GetResult<Prisma.$discussion_board_bookmarkPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussion_board_bookmark.\n     * @param {discussion_board_bookmarkUpdateArgs} args - Arguments to update one Discussion_board_bookmark.\n     * @example\n     * // Update one Discussion_board_bookmark\n     * const discussion_board_bookmark = await prisma.discussion_board_bookmark.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussion_board_bookmarkUpdateArgs>(args: SelectSubset<T, discussion_board_bookmarkUpdateArgs<ExtArgs>>): Prisma__discussion_board_bookmarkClient<$Result.GetResult<Prisma.$discussion_board_bookmarkPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussion_board_bookmarks.\n     * @param {discussion_board_bookmarkDeleteManyArgs} args - Arguments to filter Discussion_board_bookmarks to delete.\n     * @example\n     * // Delete a few Discussion_board_bookmarks\n     * const { count } = await prisma.discussion_board_bookmark.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussion_board_bookmarkDeleteManyArgs>(args?: SelectSubset<T, discussion_board_bookmarkDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_bookmarks.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_bookmarkUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussion_board_bookmarks\n     * const discussion_board_bookmark = await prisma.discussion_board_bookmark.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussion_board_bookmarkUpdateManyArgs>(args: SelectSubset<T, discussion_board_bookmarkUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_bookmarks and returns the data updated in the database.\n     * @param {discussion_board_bookmarkUpdateManyAndReturnArgs} args - Arguments to update many Discussion_board_bookmarks.\n     * @example\n     * // Update many Discussion_board_bookmarks\n     * const discussion_board_bookmark = await prisma.discussion_board_bookmark.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussion_board_bookmarks and only return the `id`\n     * const discussion_board_bookmarkWithIdOnly = await prisma.discussion_board_bookmark.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussion_board_bookmarkUpdateManyAndReturnArgs>(args: SelectSubset<T, discussion_board_bookmarkUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_bookmarkPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussion_board_bookmark.\n     * @param {discussion_board_bookmarkUpsertArgs} args - Arguments to update or create a Discussion_board_bookmark.\n     * @example\n     * // Update or create a Discussion_board_bookmark\n     * const discussion_board_bookmark = await prisma.discussion_board_bookmark.upsert({\n     *   create: {\n     *     // ... data to create a Discussion_board_bookmark\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussion_board_bookmark we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussion_board_bookmarkUpsertArgs>(args: SelectSubset<T, discussion_board_bookmarkUpsertArgs<ExtArgs>>): Prisma__discussion_board_bookmarkClient<$Result.GetResult<Prisma.$discussion_board_bookmarkPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussion_board_bookmarks.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_bookmarkCountArgs} args - Arguments to filter Discussion_board_bookmarks to count.\n     * @example\n     * // Count the number of Discussion_board_bookmarks\n     * const count = await prisma.discussion_board_bookmark.count({\n     *   where: {\n     *     // ... the filter for the Discussion_board_bookmarks we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussion_board_bookmarkCountArgs>(\n      args?: Subset<T, discussion_board_bookmarkCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussion_board_bookmarkCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussion_board_bookmark.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussion_board_bookmarkAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussion_board_bookmarkAggregateArgs>(args: Subset<T, Discussion_board_bookmarkAggregateArgs>): Prisma.PrismaPromise<GetDiscussion_board_bookmarkAggregateType<T>>\n\n    /**\n     * Group by Discussion_board_bookmark.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_bookmarkGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussion_board_bookmarkGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussion_board_bookmarkGroupByArgs['orderBy'] }\n        : { orderBy?: discussion_board_bookmarkGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussion_board_bookmarkGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussion_board_bookmarkGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussion_board_bookmark model\n   */\n  readonly fields: discussion_board_bookmarkFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussion_board_bookmark.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussion_board_bookmarkClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    user<T extends discussion_board_usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_usersDefaultArgs<ExtArgs>>): Prisma__discussion_board_usersClient<$Result.GetResult<Prisma.$discussion_board_usersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    thread<T extends discussion_board_bookmark$threadArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_bookmark$threadArgs<ExtArgs>>): Prisma__discussion_board_threadClient<$Result.GetResult<Prisma.$discussion_board_threadPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    post<T extends discussion_board_bookmark$postArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_bookmark$postArgs<ExtArgs>>): Prisma__discussion_board_postClient<$Result.GetResult<Prisma.$discussion_board_postPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    comment<T extends discussion_board_bookmark$commentArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_bookmark$commentArgs<ExtArgs>>): Prisma__discussion_board_commentClient<$Result.GetResult<Prisma.$discussion_board_commentPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussion_board_bookmark model\n   */\n  interface discussion_board_bookmarkFieldRefs {\n    readonly id: FieldRef<\"discussion_board_bookmark\", 'String'>\n    readonly user_id: FieldRef<\"discussion_board_bookmark\", 'String'>\n    readonly thread_id: FieldRef<\"discussion_board_bookmark\", 'String'>\n    readonly post_id: FieldRef<\"discussion_board_bookmark\", 'String'>\n    readonly comment_id: FieldRef<\"discussion_board_bookmark\", 'String'>\n    readonly created_at: FieldRef<\"discussion_board_bookmark\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussion_board_bookmark findUnique\n   */\n  export type discussion_board_bookmarkFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_bookmark\n     */\n    select?: discussion_board_bookmarkSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_bookmark\n     */\n    omit?: discussion_board_bookmarkOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_bookmarkInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_bookmark to fetch.\n     */\n    where: discussion_board_bookmarkWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_bookmark findUniqueOrThrow\n   */\n  export type discussion_board_bookmarkFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_bookmark\n     */\n    select?: discussion_board_bookmarkSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_bookmark\n     */\n    omit?: discussion_board_bookmarkOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_bookmarkInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_bookmark to fetch.\n     */\n    where: discussion_board_bookmarkWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_bookmark findFirst\n   */\n  export type discussion_board_bookmarkFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_bookmark\n     */\n    select?: discussion_board_bookmarkSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_bookmark\n     */\n    omit?: discussion_board_bookmarkOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_bookmarkInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_bookmark to fetch.\n     */\n    where?: discussion_board_bookmarkWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_bookmarks to fetch.\n     */\n    orderBy?: discussion_board_bookmarkOrderByWithRelationInput | discussion_board_bookmarkOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_bookmarks.\n     */\n    cursor?: discussion_board_bookmarkWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_bookmarks from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_bookmarks.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_bookmarks.\n     */\n    distinct?: Discussion_board_bookmarkScalarFieldEnum | Discussion_board_bookmarkScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_bookmark findFirstOrThrow\n   */\n  export type discussion_board_bookmarkFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_bookmark\n     */\n    select?: discussion_board_bookmarkSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_bookmark\n     */\n    omit?: discussion_board_bookmarkOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_bookmarkInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_bookmark to fetch.\n     */\n    where?: discussion_board_bookmarkWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_bookmarks to fetch.\n     */\n    orderBy?: discussion_board_bookmarkOrderByWithRelationInput | discussion_board_bookmarkOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_bookmarks.\n     */\n    cursor?: discussion_board_bookmarkWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_bookmarks from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_bookmarks.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_bookmarks.\n     */\n    distinct?: Discussion_board_bookmarkScalarFieldEnum | Discussion_board_bookmarkScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_bookmark findMany\n   */\n  export type discussion_board_bookmarkFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_bookmark\n     */\n    select?: discussion_board_bookmarkSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_bookmark\n     */\n    omit?: discussion_board_bookmarkOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_bookmarkInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_bookmarks to fetch.\n     */\n    where?: discussion_board_bookmarkWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_bookmarks to fetch.\n     */\n    orderBy?: discussion_board_bookmarkOrderByWithRelationInput | discussion_board_bookmarkOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussion_board_bookmarks.\n     */\n    cursor?: discussion_board_bookmarkWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_bookmarks from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_bookmarks.\n     */\n    skip?: number\n    distinct?: Discussion_board_bookmarkScalarFieldEnum | Discussion_board_bookmarkScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_bookmark create\n   */\n  export type discussion_board_bookmarkCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_bookmark\n     */\n    select?: discussion_board_bookmarkSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_bookmark\n     */\n    omit?: discussion_board_bookmarkOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_bookmarkInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussion_board_bookmark.\n     */\n    data: XOR<discussion_board_bookmarkCreateInput, discussion_board_bookmarkUncheckedCreateInput>\n  }\n\n  /**\n   * discussion_board_bookmark createMany\n   */\n  export type discussion_board_bookmarkCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussion_board_bookmarks.\n     */\n    data: discussion_board_bookmarkCreateManyInput | discussion_board_bookmarkCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussion_board_bookmark createManyAndReturn\n   */\n  export type discussion_board_bookmarkCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_bookmark\n     */\n    select?: discussion_board_bookmarkSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_bookmark\n     */\n    omit?: discussion_board_bookmarkOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussion_board_bookmarks.\n     */\n    data: discussion_board_bookmarkCreateManyInput | discussion_board_bookmarkCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_bookmarkIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_bookmark update\n   */\n  export type discussion_board_bookmarkUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_bookmark\n     */\n    select?: discussion_board_bookmarkSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_bookmark\n     */\n    omit?: discussion_board_bookmarkOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_bookmarkInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussion_board_bookmark.\n     */\n    data: XOR<discussion_board_bookmarkUpdateInput, discussion_board_bookmarkUncheckedUpdateInput>\n    /**\n     * Choose, which discussion_board_bookmark to update.\n     */\n    where: discussion_board_bookmarkWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_bookmark updateMany\n   */\n  export type discussion_board_bookmarkUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussion_board_bookmarks.\n     */\n    data: XOR<discussion_board_bookmarkUpdateManyMutationInput, discussion_board_bookmarkUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_bookmarks to update\n     */\n    where?: discussion_board_bookmarkWhereInput\n    /**\n     * Limit how many discussion_board_bookmarks to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_bookmark updateManyAndReturn\n   */\n  export type discussion_board_bookmarkUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_bookmark\n     */\n    select?: discussion_board_bookmarkSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_bookmark\n     */\n    omit?: discussion_board_bookmarkOmit<ExtArgs> | null\n    /**\n     * The data used to update discussion_board_bookmarks.\n     */\n    data: XOR<discussion_board_bookmarkUpdateManyMutationInput, discussion_board_bookmarkUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_bookmarks to update\n     */\n    where?: discussion_board_bookmarkWhereInput\n    /**\n     * Limit how many discussion_board_bookmarks to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_bookmarkIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_bookmark upsert\n   */\n  export type discussion_board_bookmarkUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_bookmark\n     */\n    select?: discussion_board_bookmarkSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_bookmark\n     */\n    omit?: discussion_board_bookmarkOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_bookmarkInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussion_board_bookmark to update in case it exists.\n     */\n    where: discussion_board_bookmarkWhereUniqueInput\n    /**\n     * In case the discussion_board_bookmark found by the `where` argument doesn't exist, create a new discussion_board_bookmark with this data.\n     */\n    create: XOR<discussion_board_bookmarkCreateInput, discussion_board_bookmarkUncheckedCreateInput>\n    /**\n     * In case the discussion_board_bookmark was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussion_board_bookmarkUpdateInput, discussion_board_bookmarkUncheckedUpdateInput>\n  }\n\n  /**\n   * discussion_board_bookmark delete\n   */\n  export type discussion_board_bookmarkDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_bookmark\n     */\n    select?: discussion_board_bookmarkSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_bookmark\n     */\n    omit?: discussion_board_bookmarkOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_bookmarkInclude<ExtArgs> | null\n    /**\n     * Filter which discussion_board_bookmark to delete.\n     */\n    where: discussion_board_bookmarkWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_bookmark deleteMany\n   */\n  export type discussion_board_bookmarkDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_bookmarks to delete\n     */\n    where?: discussion_board_bookmarkWhereInput\n    /**\n     * Limit how many discussion_board_bookmarks to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_bookmark.thread\n   */\n  export type discussion_board_bookmark$threadArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread\n     */\n    select?: discussion_board_threadSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread\n     */\n    omit?: discussion_board_threadOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_threadInclude<ExtArgs> | null\n    where?: discussion_board_threadWhereInput\n  }\n\n  /**\n   * discussion_board_bookmark.post\n   */\n  export type discussion_board_bookmark$postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_post\n     */\n    select?: discussion_board_postSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_post\n     */\n    omit?: discussion_board_postOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_postInclude<ExtArgs> | null\n    where?: discussion_board_postWhereInput\n  }\n\n  /**\n   * discussion_board_bookmark.comment\n   */\n  export type discussion_board_bookmark$commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_comment\n     */\n    select?: discussion_board_commentSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_comment\n     */\n    omit?: discussion_board_commentOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_commentInclude<ExtArgs> | null\n    where?: discussion_board_commentWhereInput\n  }\n\n  /**\n   * discussion_board_bookmark without action\n   */\n  export type discussion_board_bookmarkDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_bookmark\n     */\n    select?: discussion_board_bookmarkSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_bookmark\n     */\n    omit?: discussion_board_bookmarkOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_bookmarkInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussion_board_notification\n   */\n\n  export type AggregateDiscussion_board_notification = {\n    _count: Discussion_board_notificationCountAggregateOutputType | null\n    _min: Discussion_board_notificationMinAggregateOutputType | null\n    _max: Discussion_board_notificationMaxAggregateOutputType | null\n  }\n\n  export type Discussion_board_notificationMinAggregateOutputType = {\n    id: string | null\n    recipient_user_id: string | null\n    thread_id: string | null\n    post_id: string | null\n    comment_id: string | null\n    notification_type: string | null\n    is_read: boolean | null\n    channel: string | null\n    created_at: Date | null\n    delivered_at: Date | null\n  }\n\n  export type Discussion_board_notificationMaxAggregateOutputType = {\n    id: string | null\n    recipient_user_id: string | null\n    thread_id: string | null\n    post_id: string | null\n    comment_id: string | null\n    notification_type: string | null\n    is_read: boolean | null\n    channel: string | null\n    created_at: Date | null\n    delivered_at: Date | null\n  }\n\n  export type Discussion_board_notificationCountAggregateOutputType = {\n    id: number\n    recipient_user_id: number\n    thread_id: number\n    post_id: number\n    comment_id: number\n    notification_type: number\n    is_read: number\n    channel: number\n    created_at: number\n    delivered_at: number\n    _all: number\n  }\n\n\n  export type Discussion_board_notificationMinAggregateInputType = {\n    id?: true\n    recipient_user_id?: true\n    thread_id?: true\n    post_id?: true\n    comment_id?: true\n    notification_type?: true\n    is_read?: true\n    channel?: true\n    created_at?: true\n    delivered_at?: true\n  }\n\n  export type Discussion_board_notificationMaxAggregateInputType = {\n    id?: true\n    recipient_user_id?: true\n    thread_id?: true\n    post_id?: true\n    comment_id?: true\n    notification_type?: true\n    is_read?: true\n    channel?: true\n    created_at?: true\n    delivered_at?: true\n  }\n\n  export type Discussion_board_notificationCountAggregateInputType = {\n    id?: true\n    recipient_user_id?: true\n    thread_id?: true\n    post_id?: true\n    comment_id?: true\n    notification_type?: true\n    is_read?: true\n    channel?: true\n    created_at?: true\n    delivered_at?: true\n    _all?: true\n  }\n\n  export type Discussion_board_notificationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_notification to aggregate.\n     */\n    where?: discussion_board_notificationWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_notifications to fetch.\n     */\n    orderBy?: discussion_board_notificationOrderByWithRelationInput | discussion_board_notificationOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussion_board_notificationWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_notifications from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_notifications.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussion_board_notifications\n    **/\n    _count?: true | Discussion_board_notificationCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussion_board_notificationMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussion_board_notificationMaxAggregateInputType\n  }\n\n  export type GetDiscussion_board_notificationAggregateType<T extends Discussion_board_notificationAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussion_board_notification]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussion_board_notification[P]>\n      : GetScalarType<T[P], AggregateDiscussion_board_notification[P]>\n  }\n\n\n\n\n  export type discussion_board_notificationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_notificationWhereInput\n    orderBy?: discussion_board_notificationOrderByWithAggregationInput | discussion_board_notificationOrderByWithAggregationInput[]\n    by: Discussion_board_notificationScalarFieldEnum[] | Discussion_board_notificationScalarFieldEnum\n    having?: discussion_board_notificationScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussion_board_notificationCountAggregateInputType | true\n    _min?: Discussion_board_notificationMinAggregateInputType\n    _max?: Discussion_board_notificationMaxAggregateInputType\n  }\n\n  export type Discussion_board_notificationGroupByOutputType = {\n    id: string\n    recipient_user_id: string\n    thread_id: string | null\n    post_id: string | null\n    comment_id: string | null\n    notification_type: string\n    is_read: boolean\n    channel: string\n    created_at: Date\n    delivered_at: Date | null\n    _count: Discussion_board_notificationCountAggregateOutputType | null\n    _min: Discussion_board_notificationMinAggregateOutputType | null\n    _max: Discussion_board_notificationMaxAggregateOutputType | null\n  }\n\n  type GetDiscussion_board_notificationGroupByPayload<T extends discussion_board_notificationGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussion_board_notificationGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussion_board_notificationGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussion_board_notificationGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussion_board_notificationGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussion_board_notificationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    recipient_user_id?: boolean\n    thread_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    notification_type?: boolean\n    is_read?: boolean\n    channel?: boolean\n    created_at?: boolean\n    delivered_at?: boolean\n    recipient_user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_notification$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_notification$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_notification$commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_notification\"]>\n\n  export type discussion_board_notificationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    recipient_user_id?: boolean\n    thread_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    notification_type?: boolean\n    is_read?: boolean\n    channel?: boolean\n    created_at?: boolean\n    delivered_at?: boolean\n    recipient_user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_notification$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_notification$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_notification$commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_notification\"]>\n\n  export type discussion_board_notificationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    recipient_user_id?: boolean\n    thread_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    notification_type?: boolean\n    is_read?: boolean\n    channel?: boolean\n    created_at?: boolean\n    delivered_at?: boolean\n    recipient_user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_notification$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_notification$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_notification$commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_notification\"]>\n\n  export type discussion_board_notificationSelectScalar = {\n    id?: boolean\n    recipient_user_id?: boolean\n    thread_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    notification_type?: boolean\n    is_read?: boolean\n    channel?: boolean\n    created_at?: boolean\n    delivered_at?: boolean\n  }\n\n  export type discussion_board_notificationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"recipient_user_id\" | \"thread_id\" | \"post_id\" | \"comment_id\" | \"notification_type\" | \"is_read\" | \"channel\" | \"created_at\" | \"delivered_at\", ExtArgs[\"result\"][\"discussion_board_notification\"]>\n  export type discussion_board_notificationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    recipient_user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_notification$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_notification$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_notification$commentArgs<ExtArgs>\n  }\n  export type discussion_board_notificationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    recipient_user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_notification$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_notification$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_notification$commentArgs<ExtArgs>\n  }\n  export type discussion_board_notificationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    recipient_user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_notification$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_notification$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_notification$commentArgs<ExtArgs>\n  }\n\n  export type $discussion_board_notificationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussion_board_notification\"\n    objects: {\n      recipient_user: Prisma.$discussion_board_usersPayload<ExtArgs>\n      thread: Prisma.$discussion_board_threadPayload<ExtArgs> | null\n      post: Prisma.$discussion_board_postPayload<ExtArgs> | null\n      comment: Prisma.$discussion_board_commentPayload<ExtArgs> | null\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * [Notification Primary Key] - Atomic identifier supporting notification history, compliance, and lookup. Fulfills normalization requirement for entity-identity separation.\n       */\n      id: string\n      /**\n       * [Recipient User] - Points to the user receiving the notification. Not nullable per notification and user personalization requirements.\n       */\n      recipient_user_id: string\n      /**\n       * [Thread Trigger] - If notification triggered by a thread (e.g., being mentioned, thread activity), link to it. Nullable to generalize for other sources.\n       */\n      thread_id: string | null\n      /**\n       * [Post Trigger] - Refers to originating post if present. Nullable for generic notifications.\n       */\n      post_id: string | null\n      /**\n       * [Comment Trigger] - Optionally references comments that triggered notification. Nullable, supporting flexible notification types.\n       */\n      comment_id: string | null\n      /**\n       * [Notification Type] - Specifies nature of notification (e.g., reply, mention, moderator_action, subscription_digest, etc.), per business requirements. Fully atomic and normalized to allow status/analytics grouping. Not nullable.\n       */\n      notification_type: string\n      /**\n       * [Read Status] - Flags whether notification has been acknowledged. Implements user experience requirement for notification badge counts/read indicators. Fully normalized, as only true/false is stored.\n       */\n      is_read: boolean\n      /**\n       * [Notification Channel] - Delivery channel (e.g., 'in_app', 'email'), mapping to platform business logic. Fully normalized and nullable to allow new channel types in future.\n       */\n      channel: string\n      /**\n       * [Creation Timestamp] - Captures temporal analytics and enables notification sorting; supports full normalization by separating time from any derived status.\n       */\n      created_at: Date\n      /**\n       * [Delivery Timestamp] - When notification was sent via the chosen channel. Null if not yet delivered (i.e., queue pending). Fully normalized, non-derived field.\n       */\n      delivered_at: Date | null\n    }, ExtArgs[\"result\"][\"discussion_board_notification\"]>\n    composites: {}\n  }\n\n  type discussion_board_notificationGetPayload<S extends boolean | null | undefined | discussion_board_notificationDefaultArgs> = $Result.GetResult<Prisma.$discussion_board_notificationPayload, S>\n\n  type discussion_board_notificationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussion_board_notificationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussion_board_notificationCountAggregateInputType | true\n    }\n\n  export interface discussion_board_notificationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussion_board_notification'], meta: { name: 'discussion_board_notification' } }\n    /**\n     * Find zero or one Discussion_board_notification that matches the filter.\n     * @param {discussion_board_notificationFindUniqueArgs} args - Arguments to find a Discussion_board_notification\n     * @example\n     * // Get one Discussion_board_notification\n     * const discussion_board_notification = await prisma.discussion_board_notification.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussion_board_notificationFindUniqueArgs>(args: SelectSubset<T, discussion_board_notificationFindUniqueArgs<ExtArgs>>): Prisma__discussion_board_notificationClient<$Result.GetResult<Prisma.$discussion_board_notificationPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussion_board_notification that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussion_board_notificationFindUniqueOrThrowArgs} args - Arguments to find a Discussion_board_notification\n     * @example\n     * // Get one Discussion_board_notification\n     * const discussion_board_notification = await prisma.discussion_board_notification.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussion_board_notificationFindUniqueOrThrowArgs>(args: SelectSubset<T, discussion_board_notificationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussion_board_notificationClient<$Result.GetResult<Prisma.$discussion_board_notificationPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_notification that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_notificationFindFirstArgs} args - Arguments to find a Discussion_board_notification\n     * @example\n     * // Get one Discussion_board_notification\n     * const discussion_board_notification = await prisma.discussion_board_notification.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussion_board_notificationFindFirstArgs>(args?: SelectSubset<T, discussion_board_notificationFindFirstArgs<ExtArgs>>): Prisma__discussion_board_notificationClient<$Result.GetResult<Prisma.$discussion_board_notificationPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_notification that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_notificationFindFirstOrThrowArgs} args - Arguments to find a Discussion_board_notification\n     * @example\n     * // Get one Discussion_board_notification\n     * const discussion_board_notification = await prisma.discussion_board_notification.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussion_board_notificationFindFirstOrThrowArgs>(args?: SelectSubset<T, discussion_board_notificationFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussion_board_notificationClient<$Result.GetResult<Prisma.$discussion_board_notificationPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussion_board_notifications that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_notificationFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussion_board_notifications\n     * const discussion_board_notifications = await prisma.discussion_board_notification.findMany()\n     * \n     * // Get first 10 Discussion_board_notifications\n     * const discussion_board_notifications = await prisma.discussion_board_notification.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussion_board_notificationWithIdOnly = await prisma.discussion_board_notification.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussion_board_notificationFindManyArgs>(args?: SelectSubset<T, discussion_board_notificationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_notificationPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussion_board_notification.\n     * @param {discussion_board_notificationCreateArgs} args - Arguments to create a Discussion_board_notification.\n     * @example\n     * // Create one Discussion_board_notification\n     * const Discussion_board_notification = await prisma.discussion_board_notification.create({\n     *   data: {\n     *     // ... data to create a Discussion_board_notification\n     *   }\n     * })\n     * \n     */\n    create<T extends discussion_board_notificationCreateArgs>(args: SelectSubset<T, discussion_board_notificationCreateArgs<ExtArgs>>): Prisma__discussion_board_notificationClient<$Result.GetResult<Prisma.$discussion_board_notificationPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussion_board_notifications.\n     * @param {discussion_board_notificationCreateManyArgs} args - Arguments to create many Discussion_board_notifications.\n     * @example\n     * // Create many Discussion_board_notifications\n     * const discussion_board_notification = await prisma.discussion_board_notification.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussion_board_notificationCreateManyArgs>(args?: SelectSubset<T, discussion_board_notificationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussion_board_notifications and returns the data saved in the database.\n     * @param {discussion_board_notificationCreateManyAndReturnArgs} args - Arguments to create many Discussion_board_notifications.\n     * @example\n     * // Create many Discussion_board_notifications\n     * const discussion_board_notification = await prisma.discussion_board_notification.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussion_board_notifications and only return the `id`\n     * const discussion_board_notificationWithIdOnly = await prisma.discussion_board_notification.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussion_board_notificationCreateManyAndReturnArgs>(args?: SelectSubset<T, discussion_board_notificationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_notificationPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussion_board_notification.\n     * @param {discussion_board_notificationDeleteArgs} args - Arguments to delete one Discussion_board_notification.\n     * @example\n     * // Delete one Discussion_board_notification\n     * const Discussion_board_notification = await prisma.discussion_board_notification.delete({\n     *   where: {\n     *     // ... filter to delete one Discussion_board_notification\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussion_board_notificationDeleteArgs>(args: SelectSubset<T, discussion_board_notificationDeleteArgs<ExtArgs>>): Prisma__discussion_board_notificationClient<$Result.GetResult<Prisma.$discussion_board_notificationPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussion_board_notification.\n     * @param {discussion_board_notificationUpdateArgs} args - Arguments to update one Discussion_board_notification.\n     * @example\n     * // Update one Discussion_board_notification\n     * const discussion_board_notification = await prisma.discussion_board_notification.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussion_board_notificationUpdateArgs>(args: SelectSubset<T, discussion_board_notificationUpdateArgs<ExtArgs>>): Prisma__discussion_board_notificationClient<$Result.GetResult<Prisma.$discussion_board_notificationPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussion_board_notifications.\n     * @param {discussion_board_notificationDeleteManyArgs} args - Arguments to filter Discussion_board_notifications to delete.\n     * @example\n     * // Delete a few Discussion_board_notifications\n     * const { count } = await prisma.discussion_board_notification.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussion_board_notificationDeleteManyArgs>(args?: SelectSubset<T, discussion_board_notificationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_notifications.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_notificationUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussion_board_notifications\n     * const discussion_board_notification = await prisma.discussion_board_notification.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussion_board_notificationUpdateManyArgs>(args: SelectSubset<T, discussion_board_notificationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_notifications and returns the data updated in the database.\n     * @param {discussion_board_notificationUpdateManyAndReturnArgs} args - Arguments to update many Discussion_board_notifications.\n     * @example\n     * // Update many Discussion_board_notifications\n     * const discussion_board_notification = await prisma.discussion_board_notification.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussion_board_notifications and only return the `id`\n     * const discussion_board_notificationWithIdOnly = await prisma.discussion_board_notification.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussion_board_notificationUpdateManyAndReturnArgs>(args: SelectSubset<T, discussion_board_notificationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_notificationPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussion_board_notification.\n     * @param {discussion_board_notificationUpsertArgs} args - Arguments to update or create a Discussion_board_notification.\n     * @example\n     * // Update or create a Discussion_board_notification\n     * const discussion_board_notification = await prisma.discussion_board_notification.upsert({\n     *   create: {\n     *     // ... data to create a Discussion_board_notification\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussion_board_notification we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussion_board_notificationUpsertArgs>(args: SelectSubset<T, discussion_board_notificationUpsertArgs<ExtArgs>>): Prisma__discussion_board_notificationClient<$Result.GetResult<Prisma.$discussion_board_notificationPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussion_board_notifications.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_notificationCountArgs} args - Arguments to filter Discussion_board_notifications to count.\n     * @example\n     * // Count the number of Discussion_board_notifications\n     * const count = await prisma.discussion_board_notification.count({\n     *   where: {\n     *     // ... the filter for the Discussion_board_notifications we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussion_board_notificationCountArgs>(\n      args?: Subset<T, discussion_board_notificationCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussion_board_notificationCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussion_board_notification.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussion_board_notificationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussion_board_notificationAggregateArgs>(args: Subset<T, Discussion_board_notificationAggregateArgs>): Prisma.PrismaPromise<GetDiscussion_board_notificationAggregateType<T>>\n\n    /**\n     * Group by Discussion_board_notification.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_notificationGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussion_board_notificationGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussion_board_notificationGroupByArgs['orderBy'] }\n        : { orderBy?: discussion_board_notificationGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussion_board_notificationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussion_board_notificationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussion_board_notification model\n   */\n  readonly fields: discussion_board_notificationFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussion_board_notification.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussion_board_notificationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    recipient_user<T extends discussion_board_usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_usersDefaultArgs<ExtArgs>>): Prisma__discussion_board_usersClient<$Result.GetResult<Prisma.$discussion_board_usersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    thread<T extends discussion_board_notification$threadArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_notification$threadArgs<ExtArgs>>): Prisma__discussion_board_threadClient<$Result.GetResult<Prisma.$discussion_board_threadPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    post<T extends discussion_board_notification$postArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_notification$postArgs<ExtArgs>>): Prisma__discussion_board_postClient<$Result.GetResult<Prisma.$discussion_board_postPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    comment<T extends discussion_board_notification$commentArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_notification$commentArgs<ExtArgs>>): Prisma__discussion_board_commentClient<$Result.GetResult<Prisma.$discussion_board_commentPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussion_board_notification model\n   */\n  interface discussion_board_notificationFieldRefs {\n    readonly id: FieldRef<\"discussion_board_notification\", 'String'>\n    readonly recipient_user_id: FieldRef<\"discussion_board_notification\", 'String'>\n    readonly thread_id: FieldRef<\"discussion_board_notification\", 'String'>\n    readonly post_id: FieldRef<\"discussion_board_notification\", 'String'>\n    readonly comment_id: FieldRef<\"discussion_board_notification\", 'String'>\n    readonly notification_type: FieldRef<\"discussion_board_notification\", 'String'>\n    readonly is_read: FieldRef<\"discussion_board_notification\", 'Boolean'>\n    readonly channel: FieldRef<\"discussion_board_notification\", 'String'>\n    readonly created_at: FieldRef<\"discussion_board_notification\", 'DateTime'>\n    readonly delivered_at: FieldRef<\"discussion_board_notification\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussion_board_notification findUnique\n   */\n  export type discussion_board_notificationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_notification\n     */\n    select?: discussion_board_notificationSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_notification\n     */\n    omit?: discussion_board_notificationOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_notificationInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_notification to fetch.\n     */\n    where: discussion_board_notificationWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_notification findUniqueOrThrow\n   */\n  export type discussion_board_notificationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_notification\n     */\n    select?: discussion_board_notificationSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_notification\n     */\n    omit?: discussion_board_notificationOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_notificationInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_notification to fetch.\n     */\n    where: discussion_board_notificationWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_notification findFirst\n   */\n  export type discussion_board_notificationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_notification\n     */\n    select?: discussion_board_notificationSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_notification\n     */\n    omit?: discussion_board_notificationOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_notificationInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_notification to fetch.\n     */\n    where?: discussion_board_notificationWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_notifications to fetch.\n     */\n    orderBy?: discussion_board_notificationOrderByWithRelationInput | discussion_board_notificationOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_notifications.\n     */\n    cursor?: discussion_board_notificationWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_notifications from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_notifications.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_notifications.\n     */\n    distinct?: Discussion_board_notificationScalarFieldEnum | Discussion_board_notificationScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_notification findFirstOrThrow\n   */\n  export type discussion_board_notificationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_notification\n     */\n    select?: discussion_board_notificationSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_notification\n     */\n    omit?: discussion_board_notificationOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_notificationInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_notification to fetch.\n     */\n    where?: discussion_board_notificationWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_notifications to fetch.\n     */\n    orderBy?: discussion_board_notificationOrderByWithRelationInput | discussion_board_notificationOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_notifications.\n     */\n    cursor?: discussion_board_notificationWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_notifications from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_notifications.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_notifications.\n     */\n    distinct?: Discussion_board_notificationScalarFieldEnum | Discussion_board_notificationScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_notification findMany\n   */\n  export type discussion_board_notificationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_notification\n     */\n    select?: discussion_board_notificationSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_notification\n     */\n    omit?: discussion_board_notificationOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_notificationInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_notifications to fetch.\n     */\n    where?: discussion_board_notificationWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_notifications to fetch.\n     */\n    orderBy?: discussion_board_notificationOrderByWithRelationInput | discussion_board_notificationOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussion_board_notifications.\n     */\n    cursor?: discussion_board_notificationWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_notifications from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_notifications.\n     */\n    skip?: number\n    distinct?: Discussion_board_notificationScalarFieldEnum | Discussion_board_notificationScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_notification create\n   */\n  export type discussion_board_notificationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_notification\n     */\n    select?: discussion_board_notificationSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_notification\n     */\n    omit?: discussion_board_notificationOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_notificationInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussion_board_notification.\n     */\n    data: XOR<discussion_board_notificationCreateInput, discussion_board_notificationUncheckedCreateInput>\n  }\n\n  /**\n   * discussion_board_notification createMany\n   */\n  export type discussion_board_notificationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussion_board_notifications.\n     */\n    data: discussion_board_notificationCreateManyInput | discussion_board_notificationCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussion_board_notification createManyAndReturn\n   */\n  export type discussion_board_notificationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_notification\n     */\n    select?: discussion_board_notificationSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_notification\n     */\n    omit?: discussion_board_notificationOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussion_board_notifications.\n     */\n    data: discussion_board_notificationCreateManyInput | discussion_board_notificationCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_notificationIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_notification update\n   */\n  export type discussion_board_notificationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_notification\n     */\n    select?: discussion_board_notificationSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_notification\n     */\n    omit?: discussion_board_notificationOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_notificationInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussion_board_notification.\n     */\n    data: XOR<discussion_board_notificationUpdateInput, discussion_board_notificationUncheckedUpdateInput>\n    /**\n     * Choose, which discussion_board_notification to update.\n     */\n    where: discussion_board_notificationWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_notification updateMany\n   */\n  export type discussion_board_notificationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussion_board_notifications.\n     */\n    data: XOR<discussion_board_notificationUpdateManyMutationInput, discussion_board_notificationUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_notifications to update\n     */\n    where?: discussion_board_notificationWhereInput\n    /**\n     * Limit how many discussion_board_notifications to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_notification updateManyAndReturn\n   */\n  export type discussion_board_notificationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_notification\n     */\n    select?: discussion_board_notificationSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_notification\n     */\n    omit?: discussion_board_notificationOmit<ExtArgs> | null\n    /**\n     * The data used to update discussion_board_notifications.\n     */\n    data: XOR<discussion_board_notificationUpdateManyMutationInput, discussion_board_notificationUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_notifications to update\n     */\n    where?: discussion_board_notificationWhereInput\n    /**\n     * Limit how many discussion_board_notifications to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_notificationIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_notification upsert\n   */\n  export type discussion_board_notificationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_notification\n     */\n    select?: discussion_board_notificationSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_notification\n     */\n    omit?: discussion_board_notificationOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_notificationInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussion_board_notification to update in case it exists.\n     */\n    where: discussion_board_notificationWhereUniqueInput\n    /**\n     * In case the discussion_board_notification found by the `where` argument doesn't exist, create a new discussion_board_notification with this data.\n     */\n    create: XOR<discussion_board_notificationCreateInput, discussion_board_notificationUncheckedCreateInput>\n    /**\n     * In case the discussion_board_notification was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussion_board_notificationUpdateInput, discussion_board_notificationUncheckedUpdateInput>\n  }\n\n  /**\n   * discussion_board_notification delete\n   */\n  export type discussion_board_notificationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_notification\n     */\n    select?: discussion_board_notificationSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_notification\n     */\n    omit?: discussion_board_notificationOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_notificationInclude<ExtArgs> | null\n    /**\n     * Filter which discussion_board_notification to delete.\n     */\n    where: discussion_board_notificationWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_notification deleteMany\n   */\n  export type discussion_board_notificationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_notifications to delete\n     */\n    where?: discussion_board_notificationWhereInput\n    /**\n     * Limit how many discussion_board_notifications to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_notification.thread\n   */\n  export type discussion_board_notification$threadArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread\n     */\n    select?: discussion_board_threadSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread\n     */\n    omit?: discussion_board_threadOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_threadInclude<ExtArgs> | null\n    where?: discussion_board_threadWhereInput\n  }\n\n  /**\n   * discussion_board_notification.post\n   */\n  export type discussion_board_notification$postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_post\n     */\n    select?: discussion_board_postSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_post\n     */\n    omit?: discussion_board_postOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_postInclude<ExtArgs> | null\n    where?: discussion_board_postWhereInput\n  }\n\n  /**\n   * discussion_board_notification.comment\n   */\n  export type discussion_board_notification$commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_comment\n     */\n    select?: discussion_board_commentSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_comment\n     */\n    omit?: discussion_board_commentOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_commentInclude<ExtArgs> | null\n    where?: discussion_board_commentWhereInput\n  }\n\n  /**\n   * discussion_board_notification without action\n   */\n  export type discussion_board_notificationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_notification\n     */\n    select?: discussion_board_notificationSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_notification\n     */\n    omit?: discussion_board_notificationOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_notificationInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussion_board_subscription\n   */\n\n  export type AggregateDiscussion_board_subscription = {\n    _count: Discussion_board_subscriptionCountAggregateOutputType | null\n    _min: Discussion_board_subscriptionMinAggregateOutputType | null\n    _max: Discussion_board_subscriptionMaxAggregateOutputType | null\n  }\n\n  export type Discussion_board_subscriptionMinAggregateOutputType = {\n    id: string | null\n    user_id: string | null\n    thread_id: string | null\n    tag_id: string | null\n    post_id: string | null\n    comment_id: string | null\n    channel: string | null\n    created_at: Date | null\n    expires_at: Date | null\n  }\n\n  export type Discussion_board_subscriptionMaxAggregateOutputType = {\n    id: string | null\n    user_id: string | null\n    thread_id: string | null\n    tag_id: string | null\n    post_id: string | null\n    comment_id: string | null\n    channel: string | null\n    created_at: Date | null\n    expires_at: Date | null\n  }\n\n  export type Discussion_board_subscriptionCountAggregateOutputType = {\n    id: number\n    user_id: number\n    thread_id: number\n    tag_id: number\n    post_id: number\n    comment_id: number\n    channel: number\n    created_at: number\n    expires_at: number\n    _all: number\n  }\n\n\n  export type Discussion_board_subscriptionMinAggregateInputType = {\n    id?: true\n    user_id?: true\n    thread_id?: true\n    tag_id?: true\n    post_id?: true\n    comment_id?: true\n    channel?: true\n    created_at?: true\n    expires_at?: true\n  }\n\n  export type Discussion_board_subscriptionMaxAggregateInputType = {\n    id?: true\n    user_id?: true\n    thread_id?: true\n    tag_id?: true\n    post_id?: true\n    comment_id?: true\n    channel?: true\n    created_at?: true\n    expires_at?: true\n  }\n\n  export type Discussion_board_subscriptionCountAggregateInputType = {\n    id?: true\n    user_id?: true\n    thread_id?: true\n    tag_id?: true\n    post_id?: true\n    comment_id?: true\n    channel?: true\n    created_at?: true\n    expires_at?: true\n    _all?: true\n  }\n\n  export type Discussion_board_subscriptionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_subscription to aggregate.\n     */\n    where?: discussion_board_subscriptionWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_subscriptions to fetch.\n     */\n    orderBy?: discussion_board_subscriptionOrderByWithRelationInput | discussion_board_subscriptionOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussion_board_subscriptionWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_subscriptions from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_subscriptions.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussion_board_subscriptions\n    **/\n    _count?: true | Discussion_board_subscriptionCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussion_board_subscriptionMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussion_board_subscriptionMaxAggregateInputType\n  }\n\n  export type GetDiscussion_board_subscriptionAggregateType<T extends Discussion_board_subscriptionAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussion_board_subscription]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussion_board_subscription[P]>\n      : GetScalarType<T[P], AggregateDiscussion_board_subscription[P]>\n  }\n\n\n\n\n  export type discussion_board_subscriptionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_subscriptionWhereInput\n    orderBy?: discussion_board_subscriptionOrderByWithAggregationInput | discussion_board_subscriptionOrderByWithAggregationInput[]\n    by: Discussion_board_subscriptionScalarFieldEnum[] | Discussion_board_subscriptionScalarFieldEnum\n    having?: discussion_board_subscriptionScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussion_board_subscriptionCountAggregateInputType | true\n    _min?: Discussion_board_subscriptionMinAggregateInputType\n    _max?: Discussion_board_subscriptionMaxAggregateInputType\n  }\n\n  export type Discussion_board_subscriptionGroupByOutputType = {\n    id: string\n    user_id: string\n    thread_id: string | null\n    tag_id: string | null\n    post_id: string | null\n    comment_id: string | null\n    channel: string\n    created_at: Date\n    expires_at: Date | null\n    _count: Discussion_board_subscriptionCountAggregateOutputType | null\n    _min: Discussion_board_subscriptionMinAggregateOutputType | null\n    _max: Discussion_board_subscriptionMaxAggregateOutputType | null\n  }\n\n  type GetDiscussion_board_subscriptionGroupByPayload<T extends discussion_board_subscriptionGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussion_board_subscriptionGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussion_board_subscriptionGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussion_board_subscriptionGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussion_board_subscriptionGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussion_board_subscriptionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    thread_id?: boolean\n    tag_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    channel?: boolean\n    created_at?: boolean\n    expires_at?: boolean\n    user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_subscription$threadArgs<ExtArgs>\n    tag?: boolean | discussion_board_subscription$tagArgs<ExtArgs>\n    post?: boolean | discussion_board_subscription$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_subscription$commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_subscription\"]>\n\n  export type discussion_board_subscriptionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    thread_id?: boolean\n    tag_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    channel?: boolean\n    created_at?: boolean\n    expires_at?: boolean\n    user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_subscription$threadArgs<ExtArgs>\n    tag?: boolean | discussion_board_subscription$tagArgs<ExtArgs>\n    post?: boolean | discussion_board_subscription$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_subscription$commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_subscription\"]>\n\n  export type discussion_board_subscriptionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    thread_id?: boolean\n    tag_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    channel?: boolean\n    created_at?: boolean\n    expires_at?: boolean\n    user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_subscription$threadArgs<ExtArgs>\n    tag?: boolean | discussion_board_subscription$tagArgs<ExtArgs>\n    post?: boolean | discussion_board_subscription$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_subscription$commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_subscription\"]>\n\n  export type discussion_board_subscriptionSelectScalar = {\n    id?: boolean\n    user_id?: boolean\n    thread_id?: boolean\n    tag_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    channel?: boolean\n    created_at?: boolean\n    expires_at?: boolean\n  }\n\n  export type discussion_board_subscriptionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"user_id\" | \"thread_id\" | \"tag_id\" | \"post_id\" | \"comment_id\" | \"channel\" | \"created_at\" | \"expires_at\", ExtArgs[\"result\"][\"discussion_board_subscription\"]>\n  export type discussion_board_subscriptionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_subscription$threadArgs<ExtArgs>\n    tag?: boolean | discussion_board_subscription$tagArgs<ExtArgs>\n    post?: boolean | discussion_board_subscription$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_subscription$commentArgs<ExtArgs>\n  }\n  export type discussion_board_subscriptionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_subscription$threadArgs<ExtArgs>\n    tag?: boolean | discussion_board_subscription$tagArgs<ExtArgs>\n    post?: boolean | discussion_board_subscription$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_subscription$commentArgs<ExtArgs>\n  }\n  export type discussion_board_subscriptionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_subscription$threadArgs<ExtArgs>\n    tag?: boolean | discussion_board_subscription$tagArgs<ExtArgs>\n    post?: boolean | discussion_board_subscription$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_subscription$commentArgs<ExtArgs>\n  }\n\n  export type $discussion_board_subscriptionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussion_board_subscription\"\n    objects: {\n      user: Prisma.$discussion_board_usersPayload<ExtArgs>\n      thread: Prisma.$discussion_board_threadPayload<ExtArgs> | null\n      tag: Prisma.$discussion_board_thread_tagPayload<ExtArgs> | null\n      post: Prisma.$discussion_board_postPayload<ExtArgs> | null\n      comment: Prisma.$discussion_board_commentPayload<ExtArgs> | null\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * [Subscription Primary Key] - Core unique identifier for tracking a single user/content/channel subscription. Enables efficient lookup and opt-in/out management.\n       */\n      id: string\n      /**\n       * [Subscriber] - User who wants to receive notifications about a content/topic. Not nullable as individual opt-in is a requirement; supports user-specific notification feeds.\n       */\n      user_id: string\n      /**\n       * [Target Thread] - Subscribes to thread-specific notifications. Nullable to allow for tag or post-based subscriptions per requirements.\n       */\n      thread_id: string | null\n      /**\n       * [Target Tag/Topic] - Allows subscribing to all threads tagged with particular tag. Nullable to support thread or post direct subscription.\n       */\n      tag_id: string | null\n      /**\n       * [Target Post] - For fine-grained notification preference, e.g., replies to a specific post. Nullable for more general subscriptions.\n       */\n      post_id: string | null\n      /**\n       * [Target Comment] - For per-comment subscription, supporting granular, event-based notification delivery. Nullable.\n       */\n      comment_id: string | null\n      /**\n       * [Subscription Channel] - Indicates chosen notification channel for subscription (e.g., 'in_app', 'email'). Fully normalized as it accommodates one value per field. Not nullable for clarity of delivery logic.\n       */\n      channel: string\n      /**\n       * [Subscription Creation Timestamp] - Records when subscription was created, supporting analytics, compliance review, and auditing needs. Atomic field, fully normalized.\n       */\n      created_at: Date\n      /**\n       * [Subscription Expiry] - Optional expiry for time-bound subscriptions (e.g., temporary election thread). Nullable for permanent subscriptions. Fully normalized, adhering to business rules.\n       */\n      expires_at: Date | null\n    }, ExtArgs[\"result\"][\"discussion_board_subscription\"]>\n    composites: {}\n  }\n\n  type discussion_board_subscriptionGetPayload<S extends boolean | null | undefined | discussion_board_subscriptionDefaultArgs> = $Result.GetResult<Prisma.$discussion_board_subscriptionPayload, S>\n\n  type discussion_board_subscriptionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussion_board_subscriptionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussion_board_subscriptionCountAggregateInputType | true\n    }\n\n  export interface discussion_board_subscriptionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussion_board_subscription'], meta: { name: 'discussion_board_subscription' } }\n    /**\n     * Find zero or one Discussion_board_subscription that matches the filter.\n     * @param {discussion_board_subscriptionFindUniqueArgs} args - Arguments to find a Discussion_board_subscription\n     * @example\n     * // Get one Discussion_board_subscription\n     * const discussion_board_subscription = await prisma.discussion_board_subscription.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussion_board_subscriptionFindUniqueArgs>(args: SelectSubset<T, discussion_board_subscriptionFindUniqueArgs<ExtArgs>>): Prisma__discussion_board_subscriptionClient<$Result.GetResult<Prisma.$discussion_board_subscriptionPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussion_board_subscription that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussion_board_subscriptionFindUniqueOrThrowArgs} args - Arguments to find a Discussion_board_subscription\n     * @example\n     * // Get one Discussion_board_subscription\n     * const discussion_board_subscription = await prisma.discussion_board_subscription.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussion_board_subscriptionFindUniqueOrThrowArgs>(args: SelectSubset<T, discussion_board_subscriptionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussion_board_subscriptionClient<$Result.GetResult<Prisma.$discussion_board_subscriptionPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_subscription that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_subscriptionFindFirstArgs} args - Arguments to find a Discussion_board_subscription\n     * @example\n     * // Get one Discussion_board_subscription\n     * const discussion_board_subscription = await prisma.discussion_board_subscription.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussion_board_subscriptionFindFirstArgs>(args?: SelectSubset<T, discussion_board_subscriptionFindFirstArgs<ExtArgs>>): Prisma__discussion_board_subscriptionClient<$Result.GetResult<Prisma.$discussion_board_subscriptionPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_subscription that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_subscriptionFindFirstOrThrowArgs} args - Arguments to find a Discussion_board_subscription\n     * @example\n     * // Get one Discussion_board_subscription\n     * const discussion_board_subscription = await prisma.discussion_board_subscription.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussion_board_subscriptionFindFirstOrThrowArgs>(args?: SelectSubset<T, discussion_board_subscriptionFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussion_board_subscriptionClient<$Result.GetResult<Prisma.$discussion_board_subscriptionPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussion_board_subscriptions that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_subscriptionFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussion_board_subscriptions\n     * const discussion_board_subscriptions = await prisma.discussion_board_subscription.findMany()\n     * \n     * // Get first 10 Discussion_board_subscriptions\n     * const discussion_board_subscriptions = await prisma.discussion_board_subscription.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussion_board_subscriptionWithIdOnly = await prisma.discussion_board_subscription.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussion_board_subscriptionFindManyArgs>(args?: SelectSubset<T, discussion_board_subscriptionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_subscriptionPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussion_board_subscription.\n     * @param {discussion_board_subscriptionCreateArgs} args - Arguments to create a Discussion_board_subscription.\n     * @example\n     * // Create one Discussion_board_subscription\n     * const Discussion_board_subscription = await prisma.discussion_board_subscription.create({\n     *   data: {\n     *     // ... data to create a Discussion_board_subscription\n     *   }\n     * })\n     * \n     */\n    create<T extends discussion_board_subscriptionCreateArgs>(args: SelectSubset<T, discussion_board_subscriptionCreateArgs<ExtArgs>>): Prisma__discussion_board_subscriptionClient<$Result.GetResult<Prisma.$discussion_board_subscriptionPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussion_board_subscriptions.\n     * @param {discussion_board_subscriptionCreateManyArgs} args - Arguments to create many Discussion_board_subscriptions.\n     * @example\n     * // Create many Discussion_board_subscriptions\n     * const discussion_board_subscription = await prisma.discussion_board_subscription.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussion_board_subscriptionCreateManyArgs>(args?: SelectSubset<T, discussion_board_subscriptionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussion_board_subscriptions and returns the data saved in the database.\n     * @param {discussion_board_subscriptionCreateManyAndReturnArgs} args - Arguments to create many Discussion_board_subscriptions.\n     * @example\n     * // Create many Discussion_board_subscriptions\n     * const discussion_board_subscription = await prisma.discussion_board_subscription.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussion_board_subscriptions and only return the `id`\n     * const discussion_board_subscriptionWithIdOnly = await prisma.discussion_board_subscription.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussion_board_subscriptionCreateManyAndReturnArgs>(args?: SelectSubset<T, discussion_board_subscriptionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_subscriptionPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussion_board_subscription.\n     * @param {discussion_board_subscriptionDeleteArgs} args - Arguments to delete one Discussion_board_subscription.\n     * @example\n     * // Delete one Discussion_board_subscription\n     * const Discussion_board_subscription = await prisma.discussion_board_subscription.delete({\n     *   where: {\n     *     // ... filter to delete one Discussion_board_subscription\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussion_board_subscriptionDeleteArgs>(args: SelectSubset<T, discussion_board_subscriptionDeleteArgs<ExtArgs>>): Prisma__discussion_board_subscriptionClient<$Result.GetResult<Prisma.$discussion_board_subscriptionPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussion_board_subscription.\n     * @param {discussion_board_subscriptionUpdateArgs} args - Arguments to update one Discussion_board_subscription.\n     * @example\n     * // Update one Discussion_board_subscription\n     * const discussion_board_subscription = await prisma.discussion_board_subscription.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussion_board_subscriptionUpdateArgs>(args: SelectSubset<T, discussion_board_subscriptionUpdateArgs<ExtArgs>>): Prisma__discussion_board_subscriptionClient<$Result.GetResult<Prisma.$discussion_board_subscriptionPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussion_board_subscriptions.\n     * @param {discussion_board_subscriptionDeleteManyArgs} args - Arguments to filter Discussion_board_subscriptions to delete.\n     * @example\n     * // Delete a few Discussion_board_subscriptions\n     * const { count } = await prisma.discussion_board_subscription.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussion_board_subscriptionDeleteManyArgs>(args?: SelectSubset<T, discussion_board_subscriptionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_subscriptions.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_subscriptionUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussion_board_subscriptions\n     * const discussion_board_subscription = await prisma.discussion_board_subscription.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussion_board_subscriptionUpdateManyArgs>(args: SelectSubset<T, discussion_board_subscriptionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_subscriptions and returns the data updated in the database.\n     * @param {discussion_board_subscriptionUpdateManyAndReturnArgs} args - Arguments to update many Discussion_board_subscriptions.\n     * @example\n     * // Update many Discussion_board_subscriptions\n     * const discussion_board_subscription = await prisma.discussion_board_subscription.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussion_board_subscriptions and only return the `id`\n     * const discussion_board_subscriptionWithIdOnly = await prisma.discussion_board_subscription.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussion_board_subscriptionUpdateManyAndReturnArgs>(args: SelectSubset<T, discussion_board_subscriptionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_subscriptionPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussion_board_subscription.\n     * @param {discussion_board_subscriptionUpsertArgs} args - Arguments to update or create a Discussion_board_subscription.\n     * @example\n     * // Update or create a Discussion_board_subscription\n     * const discussion_board_subscription = await prisma.discussion_board_subscription.upsert({\n     *   create: {\n     *     // ... data to create a Discussion_board_subscription\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussion_board_subscription we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussion_board_subscriptionUpsertArgs>(args: SelectSubset<T, discussion_board_subscriptionUpsertArgs<ExtArgs>>): Prisma__discussion_board_subscriptionClient<$Result.GetResult<Prisma.$discussion_board_subscriptionPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussion_board_subscriptions.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_subscriptionCountArgs} args - Arguments to filter Discussion_board_subscriptions to count.\n     * @example\n     * // Count the number of Discussion_board_subscriptions\n     * const count = await prisma.discussion_board_subscription.count({\n     *   where: {\n     *     // ... the filter for the Discussion_board_subscriptions we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussion_board_subscriptionCountArgs>(\n      args?: Subset<T, discussion_board_subscriptionCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussion_board_subscriptionCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussion_board_subscription.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussion_board_subscriptionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussion_board_subscriptionAggregateArgs>(args: Subset<T, Discussion_board_subscriptionAggregateArgs>): Prisma.PrismaPromise<GetDiscussion_board_subscriptionAggregateType<T>>\n\n    /**\n     * Group by Discussion_board_subscription.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_subscriptionGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussion_board_subscriptionGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussion_board_subscriptionGroupByArgs['orderBy'] }\n        : { orderBy?: discussion_board_subscriptionGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussion_board_subscriptionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussion_board_subscriptionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussion_board_subscription model\n   */\n  readonly fields: discussion_board_subscriptionFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussion_board_subscription.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussion_board_subscriptionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    user<T extends discussion_board_usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_usersDefaultArgs<ExtArgs>>): Prisma__discussion_board_usersClient<$Result.GetResult<Prisma.$discussion_board_usersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    thread<T extends discussion_board_subscription$threadArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_subscription$threadArgs<ExtArgs>>): Prisma__discussion_board_threadClient<$Result.GetResult<Prisma.$discussion_board_threadPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    tag<T extends discussion_board_subscription$tagArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_subscription$tagArgs<ExtArgs>>): Prisma__discussion_board_thread_tagClient<$Result.GetResult<Prisma.$discussion_board_thread_tagPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    post<T extends discussion_board_subscription$postArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_subscription$postArgs<ExtArgs>>): Prisma__discussion_board_postClient<$Result.GetResult<Prisma.$discussion_board_postPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    comment<T extends discussion_board_subscription$commentArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_subscription$commentArgs<ExtArgs>>): Prisma__discussion_board_commentClient<$Result.GetResult<Prisma.$discussion_board_commentPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussion_board_subscription model\n   */\n  interface discussion_board_subscriptionFieldRefs {\n    readonly id: FieldRef<\"discussion_board_subscription\", 'String'>\n    readonly user_id: FieldRef<\"discussion_board_subscription\", 'String'>\n    readonly thread_id: FieldRef<\"discussion_board_subscription\", 'String'>\n    readonly tag_id: FieldRef<\"discussion_board_subscription\", 'String'>\n    readonly post_id: FieldRef<\"discussion_board_subscription\", 'String'>\n    readonly comment_id: FieldRef<\"discussion_board_subscription\", 'String'>\n    readonly channel: FieldRef<\"discussion_board_subscription\", 'String'>\n    readonly created_at: FieldRef<\"discussion_board_subscription\", 'DateTime'>\n    readonly expires_at: FieldRef<\"discussion_board_subscription\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussion_board_subscription findUnique\n   */\n  export type discussion_board_subscriptionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_subscription\n     */\n    select?: discussion_board_subscriptionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_subscription\n     */\n    omit?: discussion_board_subscriptionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_subscriptionInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_subscription to fetch.\n     */\n    where: discussion_board_subscriptionWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_subscription findUniqueOrThrow\n   */\n  export type discussion_board_subscriptionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_subscription\n     */\n    select?: discussion_board_subscriptionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_subscription\n     */\n    omit?: discussion_board_subscriptionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_subscriptionInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_subscription to fetch.\n     */\n    where: discussion_board_subscriptionWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_subscription findFirst\n   */\n  export type discussion_board_subscriptionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_subscription\n     */\n    select?: discussion_board_subscriptionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_subscription\n     */\n    omit?: discussion_board_subscriptionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_subscriptionInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_subscription to fetch.\n     */\n    where?: discussion_board_subscriptionWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_subscriptions to fetch.\n     */\n    orderBy?: discussion_board_subscriptionOrderByWithRelationInput | discussion_board_subscriptionOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_subscriptions.\n     */\n    cursor?: discussion_board_subscriptionWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_subscriptions from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_subscriptions.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_subscriptions.\n     */\n    distinct?: Discussion_board_subscriptionScalarFieldEnum | Discussion_board_subscriptionScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_subscription findFirstOrThrow\n   */\n  export type discussion_board_subscriptionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_subscription\n     */\n    select?: discussion_board_subscriptionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_subscription\n     */\n    omit?: discussion_board_subscriptionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_subscriptionInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_subscription to fetch.\n     */\n    where?: discussion_board_subscriptionWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_subscriptions to fetch.\n     */\n    orderBy?: discussion_board_subscriptionOrderByWithRelationInput | discussion_board_subscriptionOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_subscriptions.\n     */\n    cursor?: discussion_board_subscriptionWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_subscriptions from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_subscriptions.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_subscriptions.\n     */\n    distinct?: Discussion_board_subscriptionScalarFieldEnum | Discussion_board_subscriptionScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_subscription findMany\n   */\n  export type discussion_board_subscriptionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_subscription\n     */\n    select?: discussion_board_subscriptionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_subscription\n     */\n    omit?: discussion_board_subscriptionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_subscriptionInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_subscriptions to fetch.\n     */\n    where?: discussion_board_subscriptionWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_subscriptions to fetch.\n     */\n    orderBy?: discussion_board_subscriptionOrderByWithRelationInput | discussion_board_subscriptionOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussion_board_subscriptions.\n     */\n    cursor?: discussion_board_subscriptionWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_subscriptions from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_subscriptions.\n     */\n    skip?: number\n    distinct?: Discussion_board_subscriptionScalarFieldEnum | Discussion_board_subscriptionScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_subscription create\n   */\n  export type discussion_board_subscriptionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_subscription\n     */\n    select?: discussion_board_subscriptionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_subscription\n     */\n    omit?: discussion_board_subscriptionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_subscriptionInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussion_board_subscription.\n     */\n    data: XOR<discussion_board_subscriptionCreateInput, discussion_board_subscriptionUncheckedCreateInput>\n  }\n\n  /**\n   * discussion_board_subscription createMany\n   */\n  export type discussion_board_subscriptionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussion_board_subscriptions.\n     */\n    data: discussion_board_subscriptionCreateManyInput | discussion_board_subscriptionCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussion_board_subscription createManyAndReturn\n   */\n  export type discussion_board_subscriptionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_subscription\n     */\n    select?: discussion_board_subscriptionSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_subscription\n     */\n    omit?: discussion_board_subscriptionOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussion_board_subscriptions.\n     */\n    data: discussion_board_subscriptionCreateManyInput | discussion_board_subscriptionCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_subscriptionIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_subscription update\n   */\n  export type discussion_board_subscriptionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_subscription\n     */\n    select?: discussion_board_subscriptionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_subscription\n     */\n    omit?: discussion_board_subscriptionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_subscriptionInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussion_board_subscription.\n     */\n    data: XOR<discussion_board_subscriptionUpdateInput, discussion_board_subscriptionUncheckedUpdateInput>\n    /**\n     * Choose, which discussion_board_subscription to update.\n     */\n    where: discussion_board_subscriptionWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_subscription updateMany\n   */\n  export type discussion_board_subscriptionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussion_board_subscriptions.\n     */\n    data: XOR<discussion_board_subscriptionUpdateManyMutationInput, discussion_board_subscriptionUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_subscriptions to update\n     */\n    where?: discussion_board_subscriptionWhereInput\n    /**\n     * Limit how many discussion_board_subscriptions to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_subscription updateManyAndReturn\n   */\n  export type discussion_board_subscriptionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_subscription\n     */\n    select?: discussion_board_subscriptionSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_subscription\n     */\n    omit?: discussion_board_subscriptionOmit<ExtArgs> | null\n    /**\n     * The data used to update discussion_board_subscriptions.\n     */\n    data: XOR<discussion_board_subscriptionUpdateManyMutationInput, discussion_board_subscriptionUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_subscriptions to update\n     */\n    where?: discussion_board_subscriptionWhereInput\n    /**\n     * Limit how many discussion_board_subscriptions to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_subscriptionIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_subscription upsert\n   */\n  export type discussion_board_subscriptionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_subscription\n     */\n    select?: discussion_board_subscriptionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_subscription\n     */\n    omit?: discussion_board_subscriptionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_subscriptionInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussion_board_subscription to update in case it exists.\n     */\n    where: discussion_board_subscriptionWhereUniqueInput\n    /**\n     * In case the discussion_board_subscription found by the `where` argument doesn't exist, create a new discussion_board_subscription with this data.\n     */\n    create: XOR<discussion_board_subscriptionCreateInput, discussion_board_subscriptionUncheckedCreateInput>\n    /**\n     * In case the discussion_board_subscription was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussion_board_subscriptionUpdateInput, discussion_board_subscriptionUncheckedUpdateInput>\n  }\n\n  /**\n   * discussion_board_subscription delete\n   */\n  export type discussion_board_subscriptionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_subscription\n     */\n    select?: discussion_board_subscriptionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_subscription\n     */\n    omit?: discussion_board_subscriptionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_subscriptionInclude<ExtArgs> | null\n    /**\n     * Filter which discussion_board_subscription to delete.\n     */\n    where: discussion_board_subscriptionWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_subscription deleteMany\n   */\n  export type discussion_board_subscriptionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_subscriptions to delete\n     */\n    where?: discussion_board_subscriptionWhereInput\n    /**\n     * Limit how many discussion_board_subscriptions to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_subscription.thread\n   */\n  export type discussion_board_subscription$threadArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread\n     */\n    select?: discussion_board_threadSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread\n     */\n    omit?: discussion_board_threadOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_threadInclude<ExtArgs> | null\n    where?: discussion_board_threadWhereInput\n  }\n\n  /**\n   * discussion_board_subscription.tag\n   */\n  export type discussion_board_subscription$tagArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread_tag\n     */\n    select?: discussion_board_thread_tagSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread_tag\n     */\n    omit?: discussion_board_thread_tagOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_thread_tagInclude<ExtArgs> | null\n    where?: discussion_board_thread_tagWhereInput\n  }\n\n  /**\n   * discussion_board_subscription.post\n   */\n  export type discussion_board_subscription$postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_post\n     */\n    select?: discussion_board_postSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_post\n     */\n    omit?: discussion_board_postOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_postInclude<ExtArgs> | null\n    where?: discussion_board_postWhereInput\n  }\n\n  /**\n   * discussion_board_subscription.comment\n   */\n  export type discussion_board_subscription$commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_comment\n     */\n    select?: discussion_board_commentSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_comment\n     */\n    omit?: discussion_board_commentOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_commentInclude<ExtArgs> | null\n    where?: discussion_board_commentWhereInput\n  }\n\n  /**\n   * discussion_board_subscription without action\n   */\n  export type discussion_board_subscriptionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_subscription\n     */\n    select?: discussion_board_subscriptionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_subscription\n     */\n    omit?: discussion_board_subscriptionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_subscriptionInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussion_board_report\n   */\n\n  export type AggregateDiscussion_board_report = {\n    _count: Discussion_board_reportCountAggregateOutputType | null\n    _min: Discussion_board_reportMinAggregateOutputType | null\n    _max: Discussion_board_reportMaxAggregateOutputType | null\n  }\n\n  export type Discussion_board_reportMinAggregateOutputType = {\n    id: string | null\n    reported_user_id: string | null\n    reporting_user_id: string | null\n    thread_id: string | null\n    post_id: string | null\n    comment_id: string | null\n    status: string | null\n    category: string | null\n    submitted_at: Date | null\n    resolved_at: Date | null\n    details: string | null\n  }\n\n  export type Discussion_board_reportMaxAggregateOutputType = {\n    id: string | null\n    reported_user_id: string | null\n    reporting_user_id: string | null\n    thread_id: string | null\n    post_id: string | null\n    comment_id: string | null\n    status: string | null\n    category: string | null\n    submitted_at: Date | null\n    resolved_at: Date | null\n    details: string | null\n  }\n\n  export type Discussion_board_reportCountAggregateOutputType = {\n    id: number\n    reported_user_id: number\n    reporting_user_id: number\n    thread_id: number\n    post_id: number\n    comment_id: number\n    status: number\n    category: number\n    submitted_at: number\n    resolved_at: number\n    details: number\n    _all: number\n  }\n\n\n  export type Discussion_board_reportMinAggregateInputType = {\n    id?: true\n    reported_user_id?: true\n    reporting_user_id?: true\n    thread_id?: true\n    post_id?: true\n    comment_id?: true\n    status?: true\n    category?: true\n    submitted_at?: true\n    resolved_at?: true\n    details?: true\n  }\n\n  export type Discussion_board_reportMaxAggregateInputType = {\n    id?: true\n    reported_user_id?: true\n    reporting_user_id?: true\n    thread_id?: true\n    post_id?: true\n    comment_id?: true\n    status?: true\n    category?: true\n    submitted_at?: true\n    resolved_at?: true\n    details?: true\n  }\n\n  export type Discussion_board_reportCountAggregateInputType = {\n    id?: true\n    reported_user_id?: true\n    reporting_user_id?: true\n    thread_id?: true\n    post_id?: true\n    comment_id?: true\n    status?: true\n    category?: true\n    submitted_at?: true\n    resolved_at?: true\n    details?: true\n    _all?: true\n  }\n\n  export type Discussion_board_reportAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_report to aggregate.\n     */\n    where?: discussion_board_reportWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_reports to fetch.\n     */\n    orderBy?: discussion_board_reportOrderByWithRelationInput | discussion_board_reportOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussion_board_reportWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_reports from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_reports.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussion_board_reports\n    **/\n    _count?: true | Discussion_board_reportCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussion_board_reportMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussion_board_reportMaxAggregateInputType\n  }\n\n  export type GetDiscussion_board_reportAggregateType<T extends Discussion_board_reportAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussion_board_report]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussion_board_report[P]>\n      : GetScalarType<T[P], AggregateDiscussion_board_report[P]>\n  }\n\n\n\n\n  export type discussion_board_reportGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_reportWhereInput\n    orderBy?: discussion_board_reportOrderByWithAggregationInput | discussion_board_reportOrderByWithAggregationInput[]\n    by: Discussion_board_reportScalarFieldEnum[] | Discussion_board_reportScalarFieldEnum\n    having?: discussion_board_reportScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussion_board_reportCountAggregateInputType | true\n    _min?: Discussion_board_reportMinAggregateInputType\n    _max?: Discussion_board_reportMaxAggregateInputType\n  }\n\n  export type Discussion_board_reportGroupByOutputType = {\n    id: string\n    reported_user_id: string | null\n    reporting_user_id: string\n    thread_id: string | null\n    post_id: string | null\n    comment_id: string | null\n    status: string\n    category: string\n    submitted_at: Date\n    resolved_at: Date | null\n    details: string\n    _count: Discussion_board_reportCountAggregateOutputType | null\n    _min: Discussion_board_reportMinAggregateOutputType | null\n    _max: Discussion_board_reportMaxAggregateOutputType | null\n  }\n\n  type GetDiscussion_board_reportGroupByPayload<T extends discussion_board_reportGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussion_board_reportGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussion_board_reportGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussion_board_reportGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussion_board_reportGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussion_board_reportSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    reported_user_id?: boolean\n    reporting_user_id?: boolean\n    thread_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    status?: boolean\n    category?: boolean\n    submitted_at?: boolean\n    resolved_at?: boolean\n    details?: boolean\n    reported_user?: boolean | discussion_board_report$reported_userArgs<ExtArgs>\n    reporting_user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_report$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_report$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_report$commentArgs<ExtArgs>\n    discussion_board_moderator_action?: boolean | discussion_board_report$discussion_board_moderator_actionArgs<ExtArgs>\n    discussion_board_ban?: boolean | discussion_board_report$discussion_board_banArgs<ExtArgs>\n    _count?: boolean | Discussion_board_reportCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_report\"]>\n\n  export type discussion_board_reportSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    reported_user_id?: boolean\n    reporting_user_id?: boolean\n    thread_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    status?: boolean\n    category?: boolean\n    submitted_at?: boolean\n    resolved_at?: boolean\n    details?: boolean\n    reported_user?: boolean | discussion_board_report$reported_userArgs<ExtArgs>\n    reporting_user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_report$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_report$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_report$commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_report\"]>\n\n  export type discussion_board_reportSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    reported_user_id?: boolean\n    reporting_user_id?: boolean\n    thread_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    status?: boolean\n    category?: boolean\n    submitted_at?: boolean\n    resolved_at?: boolean\n    details?: boolean\n    reported_user?: boolean | discussion_board_report$reported_userArgs<ExtArgs>\n    reporting_user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_report$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_report$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_report$commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_report\"]>\n\n  export type discussion_board_reportSelectScalar = {\n    id?: boolean\n    reported_user_id?: boolean\n    reporting_user_id?: boolean\n    thread_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    status?: boolean\n    category?: boolean\n    submitted_at?: boolean\n    resolved_at?: boolean\n    details?: boolean\n  }\n\n  export type discussion_board_reportOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"reported_user_id\" | \"reporting_user_id\" | \"thread_id\" | \"post_id\" | \"comment_id\" | \"status\" | \"category\" | \"submitted_at\" | \"resolved_at\" | \"details\", ExtArgs[\"result\"][\"discussion_board_report\"]>\n  export type discussion_board_reportInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    reported_user?: boolean | discussion_board_report$reported_userArgs<ExtArgs>\n    reporting_user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_report$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_report$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_report$commentArgs<ExtArgs>\n    discussion_board_moderator_action?: boolean | discussion_board_report$discussion_board_moderator_actionArgs<ExtArgs>\n    discussion_board_ban?: boolean | discussion_board_report$discussion_board_banArgs<ExtArgs>\n    _count?: boolean | Discussion_board_reportCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type discussion_board_reportIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    reported_user?: boolean | discussion_board_report$reported_userArgs<ExtArgs>\n    reporting_user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_report$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_report$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_report$commentArgs<ExtArgs>\n  }\n  export type discussion_board_reportIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    reported_user?: boolean | discussion_board_report$reported_userArgs<ExtArgs>\n    reporting_user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_report$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_report$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_report$commentArgs<ExtArgs>\n  }\n\n  export type $discussion_board_reportPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussion_board_report\"\n    objects: {\n      reported_user: Prisma.$discussion_board_usersPayload<ExtArgs> | null\n      reporting_user: Prisma.$discussion_board_usersPayload<ExtArgs>\n      thread: Prisma.$discussion_board_threadPayload<ExtArgs> | null\n      post: Prisma.$discussion_board_postPayload<ExtArgs> | null\n      comment: Prisma.$discussion_board_commentPayload<ExtArgs> | null\n      discussion_board_moderator_action: Prisma.$discussion_board_moderator_actionPayload<ExtArgs>[]\n      discussion_board_ban: Prisma.$discussion_board_banPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * [Primary Key] - Unique identifier for each report. Implements the entity's uniqueness requirement. Standard UUID, ensures normalization. For example, used as reference in moderation actions.\n       */\n      id: string\n      /**\n       * [Offending User FK] - The user reported for abusive content. Enables targeted moderation and disciplinary action. Maintains 3NF by only storing the user reference. For example, a spammer being reported on a post. Nullable for content without registered user (e.g., deleted).\n       */\n      reported_user_id: string | null\n      /**\n       * [Reporting User FK] - The user generating the report. Tracks abuse sources and enables accountability. Maintains 3NF as a direct reference. For example, the victim or witness reporting the abuse. Not nullable.\n       */\n      reporting_user_id: string\n      /**\n       * [Thread FK] - Thread being reported, for thread-level abuse. Null for post/comment-level reports. Maintains normalization by referencing rather than duplicating content.\n       */\n      thread_id: string | null\n      /**\n       * [Post FK] - Post being reported, for post-level abuse. Null for thread/comment-level reports. Keeps schema normalized.\n       */\n      post_id: string | null\n      /**\n       * [Comment FK] - Comment being reported. Null for thread/post-level reports. Maintains field-level normalization.\n       */\n      comment_id: string | null\n      /**\n       * [Report Status] - Implements workflow state tracking from moderation requirements. Indicates if a report is 'pending', 'resolved', or 'dismissed'. Normalized (atomic, not derived). For example, status transitions after moderator review. Enum expected in application logic.\n       */\n      status: string\n      /**\n       * [Report Category] - Abuse type such as 'spam', 'harassment', 'off-topic'. Enables analytical grouping and moderator prioritization. Maintains normalization by not repeating explanations—only concise tags. For example, allows dashboard filtering of spam vs. harassment.\n       */\n      category: string\n      /**\n       * [Report Timestamp] - When abuse was reported. Auditable, normalized, atomic. Used to measure compliance with response time targets.\n       */\n      submitted_at: Date\n      /**\n       * [Resolution Timestamp] - When a moderator resolved the report. Atomic, nullable (unresolved when null), keeps schema normalized.\n       */\n      resolved_at: Date | null\n      /**\n       * [Report Details] - Freeform explanation from reporter. Fully normalized, as each instance is atomic. For example, a user's description of incident.\n       */\n      details: string\n    }, ExtArgs[\"result\"][\"discussion_board_report\"]>\n    composites: {}\n  }\n\n  type discussion_board_reportGetPayload<S extends boolean | null | undefined | discussion_board_reportDefaultArgs> = $Result.GetResult<Prisma.$discussion_board_reportPayload, S>\n\n  type discussion_board_reportCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussion_board_reportFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussion_board_reportCountAggregateInputType | true\n    }\n\n  export interface discussion_board_reportDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussion_board_report'], meta: { name: 'discussion_board_report' } }\n    /**\n     * Find zero or one Discussion_board_report that matches the filter.\n     * @param {discussion_board_reportFindUniqueArgs} args - Arguments to find a Discussion_board_report\n     * @example\n     * // Get one Discussion_board_report\n     * const discussion_board_report = await prisma.discussion_board_report.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussion_board_reportFindUniqueArgs>(args: SelectSubset<T, discussion_board_reportFindUniqueArgs<ExtArgs>>): Prisma__discussion_board_reportClient<$Result.GetResult<Prisma.$discussion_board_reportPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussion_board_report that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussion_board_reportFindUniqueOrThrowArgs} args - Arguments to find a Discussion_board_report\n     * @example\n     * // Get one Discussion_board_report\n     * const discussion_board_report = await prisma.discussion_board_report.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussion_board_reportFindUniqueOrThrowArgs>(args: SelectSubset<T, discussion_board_reportFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussion_board_reportClient<$Result.GetResult<Prisma.$discussion_board_reportPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_report that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_reportFindFirstArgs} args - Arguments to find a Discussion_board_report\n     * @example\n     * // Get one Discussion_board_report\n     * const discussion_board_report = await prisma.discussion_board_report.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussion_board_reportFindFirstArgs>(args?: SelectSubset<T, discussion_board_reportFindFirstArgs<ExtArgs>>): Prisma__discussion_board_reportClient<$Result.GetResult<Prisma.$discussion_board_reportPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_report that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_reportFindFirstOrThrowArgs} args - Arguments to find a Discussion_board_report\n     * @example\n     * // Get one Discussion_board_report\n     * const discussion_board_report = await prisma.discussion_board_report.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussion_board_reportFindFirstOrThrowArgs>(args?: SelectSubset<T, discussion_board_reportFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussion_board_reportClient<$Result.GetResult<Prisma.$discussion_board_reportPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussion_board_reports that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_reportFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussion_board_reports\n     * const discussion_board_reports = await prisma.discussion_board_report.findMany()\n     * \n     * // Get first 10 Discussion_board_reports\n     * const discussion_board_reports = await prisma.discussion_board_report.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussion_board_reportWithIdOnly = await prisma.discussion_board_report.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussion_board_reportFindManyArgs>(args?: SelectSubset<T, discussion_board_reportFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_reportPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussion_board_report.\n     * @param {discussion_board_reportCreateArgs} args - Arguments to create a Discussion_board_report.\n     * @example\n     * // Create one Discussion_board_report\n     * const Discussion_board_report = await prisma.discussion_board_report.create({\n     *   data: {\n     *     // ... data to create a Discussion_board_report\n     *   }\n     * })\n     * \n     */\n    create<T extends discussion_board_reportCreateArgs>(args: SelectSubset<T, discussion_board_reportCreateArgs<ExtArgs>>): Prisma__discussion_board_reportClient<$Result.GetResult<Prisma.$discussion_board_reportPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussion_board_reports.\n     * @param {discussion_board_reportCreateManyArgs} args - Arguments to create many Discussion_board_reports.\n     * @example\n     * // Create many Discussion_board_reports\n     * const discussion_board_report = await prisma.discussion_board_report.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussion_board_reportCreateManyArgs>(args?: SelectSubset<T, discussion_board_reportCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussion_board_reports and returns the data saved in the database.\n     * @param {discussion_board_reportCreateManyAndReturnArgs} args - Arguments to create many Discussion_board_reports.\n     * @example\n     * // Create many Discussion_board_reports\n     * const discussion_board_report = await prisma.discussion_board_report.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussion_board_reports and only return the `id`\n     * const discussion_board_reportWithIdOnly = await prisma.discussion_board_report.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussion_board_reportCreateManyAndReturnArgs>(args?: SelectSubset<T, discussion_board_reportCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_reportPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussion_board_report.\n     * @param {discussion_board_reportDeleteArgs} args - Arguments to delete one Discussion_board_report.\n     * @example\n     * // Delete one Discussion_board_report\n     * const Discussion_board_report = await prisma.discussion_board_report.delete({\n     *   where: {\n     *     // ... filter to delete one Discussion_board_report\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussion_board_reportDeleteArgs>(args: SelectSubset<T, discussion_board_reportDeleteArgs<ExtArgs>>): Prisma__discussion_board_reportClient<$Result.GetResult<Prisma.$discussion_board_reportPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussion_board_report.\n     * @param {discussion_board_reportUpdateArgs} args - Arguments to update one Discussion_board_report.\n     * @example\n     * // Update one Discussion_board_report\n     * const discussion_board_report = await prisma.discussion_board_report.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussion_board_reportUpdateArgs>(args: SelectSubset<T, discussion_board_reportUpdateArgs<ExtArgs>>): Prisma__discussion_board_reportClient<$Result.GetResult<Prisma.$discussion_board_reportPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussion_board_reports.\n     * @param {discussion_board_reportDeleteManyArgs} args - Arguments to filter Discussion_board_reports to delete.\n     * @example\n     * // Delete a few Discussion_board_reports\n     * const { count } = await prisma.discussion_board_report.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussion_board_reportDeleteManyArgs>(args?: SelectSubset<T, discussion_board_reportDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_reports.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_reportUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussion_board_reports\n     * const discussion_board_report = await prisma.discussion_board_report.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussion_board_reportUpdateManyArgs>(args: SelectSubset<T, discussion_board_reportUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_reports and returns the data updated in the database.\n     * @param {discussion_board_reportUpdateManyAndReturnArgs} args - Arguments to update many Discussion_board_reports.\n     * @example\n     * // Update many Discussion_board_reports\n     * const discussion_board_report = await prisma.discussion_board_report.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussion_board_reports and only return the `id`\n     * const discussion_board_reportWithIdOnly = await prisma.discussion_board_report.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussion_board_reportUpdateManyAndReturnArgs>(args: SelectSubset<T, discussion_board_reportUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_reportPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussion_board_report.\n     * @param {discussion_board_reportUpsertArgs} args - Arguments to update or create a Discussion_board_report.\n     * @example\n     * // Update or create a Discussion_board_report\n     * const discussion_board_report = await prisma.discussion_board_report.upsert({\n     *   create: {\n     *     // ... data to create a Discussion_board_report\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussion_board_report we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussion_board_reportUpsertArgs>(args: SelectSubset<T, discussion_board_reportUpsertArgs<ExtArgs>>): Prisma__discussion_board_reportClient<$Result.GetResult<Prisma.$discussion_board_reportPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussion_board_reports.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_reportCountArgs} args - Arguments to filter Discussion_board_reports to count.\n     * @example\n     * // Count the number of Discussion_board_reports\n     * const count = await prisma.discussion_board_report.count({\n     *   where: {\n     *     // ... the filter for the Discussion_board_reports we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussion_board_reportCountArgs>(\n      args?: Subset<T, discussion_board_reportCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussion_board_reportCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussion_board_report.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussion_board_reportAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussion_board_reportAggregateArgs>(args: Subset<T, Discussion_board_reportAggregateArgs>): Prisma.PrismaPromise<GetDiscussion_board_reportAggregateType<T>>\n\n    /**\n     * Group by Discussion_board_report.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_reportGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussion_board_reportGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussion_board_reportGroupByArgs['orderBy'] }\n        : { orderBy?: discussion_board_reportGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussion_board_reportGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussion_board_reportGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussion_board_report model\n   */\n  readonly fields: discussion_board_reportFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussion_board_report.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussion_board_reportClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    reported_user<T extends discussion_board_report$reported_userArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_report$reported_userArgs<ExtArgs>>): Prisma__discussion_board_usersClient<$Result.GetResult<Prisma.$discussion_board_usersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    reporting_user<T extends discussion_board_usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_usersDefaultArgs<ExtArgs>>): Prisma__discussion_board_usersClient<$Result.GetResult<Prisma.$discussion_board_usersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    thread<T extends discussion_board_report$threadArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_report$threadArgs<ExtArgs>>): Prisma__discussion_board_threadClient<$Result.GetResult<Prisma.$discussion_board_threadPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    post<T extends discussion_board_report$postArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_report$postArgs<ExtArgs>>): Prisma__discussion_board_postClient<$Result.GetResult<Prisma.$discussion_board_postPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    comment<T extends discussion_board_report$commentArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_report$commentArgs<ExtArgs>>): Prisma__discussion_board_commentClient<$Result.GetResult<Prisma.$discussion_board_commentPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    discussion_board_moderator_action<T extends discussion_board_report$discussion_board_moderator_actionArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_report$discussion_board_moderator_actionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_moderator_actionPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussion_board_ban<T extends discussion_board_report$discussion_board_banArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_report$discussion_board_banArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_banPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussion_board_report model\n   */\n  interface discussion_board_reportFieldRefs {\n    readonly id: FieldRef<\"discussion_board_report\", 'String'>\n    readonly reported_user_id: FieldRef<\"discussion_board_report\", 'String'>\n    readonly reporting_user_id: FieldRef<\"discussion_board_report\", 'String'>\n    readonly thread_id: FieldRef<\"discussion_board_report\", 'String'>\n    readonly post_id: FieldRef<\"discussion_board_report\", 'String'>\n    readonly comment_id: FieldRef<\"discussion_board_report\", 'String'>\n    readonly status: FieldRef<\"discussion_board_report\", 'String'>\n    readonly category: FieldRef<\"discussion_board_report\", 'String'>\n    readonly submitted_at: FieldRef<\"discussion_board_report\", 'DateTime'>\n    readonly resolved_at: FieldRef<\"discussion_board_report\", 'DateTime'>\n    readonly details: FieldRef<\"discussion_board_report\", 'String'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussion_board_report findUnique\n   */\n  export type discussion_board_reportFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_report\n     */\n    select?: discussion_board_reportSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_report\n     */\n    omit?: discussion_board_reportOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_reportInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_report to fetch.\n     */\n    where: discussion_board_reportWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_report findUniqueOrThrow\n   */\n  export type discussion_board_reportFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_report\n     */\n    select?: discussion_board_reportSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_report\n     */\n    omit?: discussion_board_reportOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_reportInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_report to fetch.\n     */\n    where: discussion_board_reportWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_report findFirst\n   */\n  export type discussion_board_reportFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_report\n     */\n    select?: discussion_board_reportSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_report\n     */\n    omit?: discussion_board_reportOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_reportInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_report to fetch.\n     */\n    where?: discussion_board_reportWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_reports to fetch.\n     */\n    orderBy?: discussion_board_reportOrderByWithRelationInput | discussion_board_reportOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_reports.\n     */\n    cursor?: discussion_board_reportWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_reports from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_reports.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_reports.\n     */\n    distinct?: Discussion_board_reportScalarFieldEnum | Discussion_board_reportScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_report findFirstOrThrow\n   */\n  export type discussion_board_reportFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_report\n     */\n    select?: discussion_board_reportSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_report\n     */\n    omit?: discussion_board_reportOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_reportInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_report to fetch.\n     */\n    where?: discussion_board_reportWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_reports to fetch.\n     */\n    orderBy?: discussion_board_reportOrderByWithRelationInput | discussion_board_reportOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_reports.\n     */\n    cursor?: discussion_board_reportWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_reports from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_reports.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_reports.\n     */\n    distinct?: Discussion_board_reportScalarFieldEnum | Discussion_board_reportScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_report findMany\n   */\n  export type discussion_board_reportFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_report\n     */\n    select?: discussion_board_reportSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_report\n     */\n    omit?: discussion_board_reportOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_reportInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_reports to fetch.\n     */\n    where?: discussion_board_reportWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_reports to fetch.\n     */\n    orderBy?: discussion_board_reportOrderByWithRelationInput | discussion_board_reportOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussion_board_reports.\n     */\n    cursor?: discussion_board_reportWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_reports from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_reports.\n     */\n    skip?: number\n    distinct?: Discussion_board_reportScalarFieldEnum | Discussion_board_reportScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_report create\n   */\n  export type discussion_board_reportCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_report\n     */\n    select?: discussion_board_reportSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_report\n     */\n    omit?: discussion_board_reportOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_reportInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussion_board_report.\n     */\n    data: XOR<discussion_board_reportCreateInput, discussion_board_reportUncheckedCreateInput>\n  }\n\n  /**\n   * discussion_board_report createMany\n   */\n  export type discussion_board_reportCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussion_board_reports.\n     */\n    data: discussion_board_reportCreateManyInput | discussion_board_reportCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussion_board_report createManyAndReturn\n   */\n  export type discussion_board_reportCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_report\n     */\n    select?: discussion_board_reportSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_report\n     */\n    omit?: discussion_board_reportOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussion_board_reports.\n     */\n    data: discussion_board_reportCreateManyInput | discussion_board_reportCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_reportIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_report update\n   */\n  export type discussion_board_reportUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_report\n     */\n    select?: discussion_board_reportSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_report\n     */\n    omit?: discussion_board_reportOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_reportInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussion_board_report.\n     */\n    data: XOR<discussion_board_reportUpdateInput, discussion_board_reportUncheckedUpdateInput>\n    /**\n     * Choose, which discussion_board_report to update.\n     */\n    where: discussion_board_reportWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_report updateMany\n   */\n  export type discussion_board_reportUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussion_board_reports.\n     */\n    data: XOR<discussion_board_reportUpdateManyMutationInput, discussion_board_reportUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_reports to update\n     */\n    where?: discussion_board_reportWhereInput\n    /**\n     * Limit how many discussion_board_reports to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_report updateManyAndReturn\n   */\n  export type discussion_board_reportUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_report\n     */\n    select?: discussion_board_reportSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_report\n     */\n    omit?: discussion_board_reportOmit<ExtArgs> | null\n    /**\n     * The data used to update discussion_board_reports.\n     */\n    data: XOR<discussion_board_reportUpdateManyMutationInput, discussion_board_reportUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_reports to update\n     */\n    where?: discussion_board_reportWhereInput\n    /**\n     * Limit how many discussion_board_reports to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_reportIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_report upsert\n   */\n  export type discussion_board_reportUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_report\n     */\n    select?: discussion_board_reportSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_report\n     */\n    omit?: discussion_board_reportOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_reportInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussion_board_report to update in case it exists.\n     */\n    where: discussion_board_reportWhereUniqueInput\n    /**\n     * In case the discussion_board_report found by the `where` argument doesn't exist, create a new discussion_board_report with this data.\n     */\n    create: XOR<discussion_board_reportCreateInput, discussion_board_reportUncheckedCreateInput>\n    /**\n     * In case the discussion_board_report was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussion_board_reportUpdateInput, discussion_board_reportUncheckedUpdateInput>\n  }\n\n  /**\n   * discussion_board_report delete\n   */\n  export type discussion_board_reportDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_report\n     */\n    select?: discussion_board_reportSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_report\n     */\n    omit?: discussion_board_reportOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_reportInclude<ExtArgs> | null\n    /**\n     * Filter which discussion_board_report to delete.\n     */\n    where: discussion_board_reportWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_report deleteMany\n   */\n  export type discussion_board_reportDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_reports to delete\n     */\n    where?: discussion_board_reportWhereInput\n    /**\n     * Limit how many discussion_board_reports to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_report.reported_user\n   */\n  export type discussion_board_report$reported_userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_users\n     */\n    select?: discussion_board_usersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_users\n     */\n    omit?: discussion_board_usersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_usersInclude<ExtArgs> | null\n    where?: discussion_board_usersWhereInput\n  }\n\n  /**\n   * discussion_board_report.thread\n   */\n  export type discussion_board_report$threadArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread\n     */\n    select?: discussion_board_threadSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread\n     */\n    omit?: discussion_board_threadOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_threadInclude<ExtArgs> | null\n    where?: discussion_board_threadWhereInput\n  }\n\n  /**\n   * discussion_board_report.post\n   */\n  export type discussion_board_report$postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_post\n     */\n    select?: discussion_board_postSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_post\n     */\n    omit?: discussion_board_postOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_postInclude<ExtArgs> | null\n    where?: discussion_board_postWhereInput\n  }\n\n  /**\n   * discussion_board_report.comment\n   */\n  export type discussion_board_report$commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_comment\n     */\n    select?: discussion_board_commentSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_comment\n     */\n    omit?: discussion_board_commentOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_commentInclude<ExtArgs> | null\n    where?: discussion_board_commentWhereInput\n  }\n\n  /**\n   * discussion_board_report.discussion_board_moderator_action\n   */\n  export type discussion_board_report$discussion_board_moderator_actionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_moderator_action\n     */\n    select?: discussion_board_moderator_actionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_moderator_action\n     */\n    omit?: discussion_board_moderator_actionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_moderator_actionInclude<ExtArgs> | null\n    where?: discussion_board_moderator_actionWhereInput\n    orderBy?: discussion_board_moderator_actionOrderByWithRelationInput | discussion_board_moderator_actionOrderByWithRelationInput[]\n    cursor?: discussion_board_moderator_actionWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_moderator_actionScalarFieldEnum | Discussion_board_moderator_actionScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_report.discussion_board_ban\n   */\n  export type discussion_board_report$discussion_board_banArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_ban\n     */\n    select?: discussion_board_banSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_ban\n     */\n    omit?: discussion_board_banOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_banInclude<ExtArgs> | null\n    where?: discussion_board_banWhereInput\n    orderBy?: discussion_board_banOrderByWithRelationInput | discussion_board_banOrderByWithRelationInput[]\n    cursor?: discussion_board_banWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_banScalarFieldEnum | Discussion_board_banScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_report without action\n   */\n  export type discussion_board_reportDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_report\n     */\n    select?: discussion_board_reportSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_report\n     */\n    omit?: discussion_board_reportOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_reportInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussion_board_moderator_action\n   */\n\n  export type AggregateDiscussion_board_moderator_action = {\n    _count: Discussion_board_moderator_actionCountAggregateOutputType | null\n    _min: Discussion_board_moderator_actionMinAggregateOutputType | null\n    _max: Discussion_board_moderator_actionMaxAggregateOutputType | null\n  }\n\n  export type Discussion_board_moderator_actionMinAggregateOutputType = {\n    id: string | null\n    moderator_id: string | null\n    user_id: string | null\n    report_id: string | null\n    thread_id: string | null\n    post_id: string | null\n    comment_id: string | null\n    action_type: string | null\n    reason: string | null\n    created_at: Date | null\n  }\n\n  export type Discussion_board_moderator_actionMaxAggregateOutputType = {\n    id: string | null\n    moderator_id: string | null\n    user_id: string | null\n    report_id: string | null\n    thread_id: string | null\n    post_id: string | null\n    comment_id: string | null\n    action_type: string | null\n    reason: string | null\n    created_at: Date | null\n  }\n\n  export type Discussion_board_moderator_actionCountAggregateOutputType = {\n    id: number\n    moderator_id: number\n    user_id: number\n    report_id: number\n    thread_id: number\n    post_id: number\n    comment_id: number\n    action_type: number\n    reason: number\n    created_at: number\n    _all: number\n  }\n\n\n  export type Discussion_board_moderator_actionMinAggregateInputType = {\n    id?: true\n    moderator_id?: true\n    user_id?: true\n    report_id?: true\n    thread_id?: true\n    post_id?: true\n    comment_id?: true\n    action_type?: true\n    reason?: true\n    created_at?: true\n  }\n\n  export type Discussion_board_moderator_actionMaxAggregateInputType = {\n    id?: true\n    moderator_id?: true\n    user_id?: true\n    report_id?: true\n    thread_id?: true\n    post_id?: true\n    comment_id?: true\n    action_type?: true\n    reason?: true\n    created_at?: true\n  }\n\n  export type Discussion_board_moderator_actionCountAggregateInputType = {\n    id?: true\n    moderator_id?: true\n    user_id?: true\n    report_id?: true\n    thread_id?: true\n    post_id?: true\n    comment_id?: true\n    action_type?: true\n    reason?: true\n    created_at?: true\n    _all?: true\n  }\n\n  export type Discussion_board_moderator_actionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_moderator_action to aggregate.\n     */\n    where?: discussion_board_moderator_actionWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_moderator_actions to fetch.\n     */\n    orderBy?: discussion_board_moderator_actionOrderByWithRelationInput | discussion_board_moderator_actionOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussion_board_moderator_actionWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_moderator_actions from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_moderator_actions.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussion_board_moderator_actions\n    **/\n    _count?: true | Discussion_board_moderator_actionCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussion_board_moderator_actionMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussion_board_moderator_actionMaxAggregateInputType\n  }\n\n  export type GetDiscussion_board_moderator_actionAggregateType<T extends Discussion_board_moderator_actionAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussion_board_moderator_action]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussion_board_moderator_action[P]>\n      : GetScalarType<T[P], AggregateDiscussion_board_moderator_action[P]>\n  }\n\n\n\n\n  export type discussion_board_moderator_actionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_moderator_actionWhereInput\n    orderBy?: discussion_board_moderator_actionOrderByWithAggregationInput | discussion_board_moderator_actionOrderByWithAggregationInput[]\n    by: Discussion_board_moderator_actionScalarFieldEnum[] | Discussion_board_moderator_actionScalarFieldEnum\n    having?: discussion_board_moderator_actionScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussion_board_moderator_actionCountAggregateInputType | true\n    _min?: Discussion_board_moderator_actionMinAggregateInputType\n    _max?: Discussion_board_moderator_actionMaxAggregateInputType\n  }\n\n  export type Discussion_board_moderator_actionGroupByOutputType = {\n    id: string\n    moderator_id: string\n    user_id: string | null\n    report_id: string | null\n    thread_id: string | null\n    post_id: string | null\n    comment_id: string | null\n    action_type: string\n    reason: string\n    created_at: Date\n    _count: Discussion_board_moderator_actionCountAggregateOutputType | null\n    _min: Discussion_board_moderator_actionMinAggregateOutputType | null\n    _max: Discussion_board_moderator_actionMaxAggregateOutputType | null\n  }\n\n  type GetDiscussion_board_moderator_actionGroupByPayload<T extends discussion_board_moderator_actionGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussion_board_moderator_actionGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussion_board_moderator_actionGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussion_board_moderator_actionGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussion_board_moderator_actionGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussion_board_moderator_actionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    moderator_id?: boolean\n    user_id?: boolean\n    report_id?: boolean\n    thread_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    action_type?: boolean\n    reason?: boolean\n    created_at?: boolean\n    moderator?: boolean | discussion_board_moderatorsDefaultArgs<ExtArgs>\n    user?: boolean | discussion_board_moderator_action$userArgs<ExtArgs>\n    report?: boolean | discussion_board_moderator_action$reportArgs<ExtArgs>\n    thread?: boolean | discussion_board_moderator_action$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_moderator_action$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_moderator_action$commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_moderator_action\"]>\n\n  export type discussion_board_moderator_actionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    moderator_id?: boolean\n    user_id?: boolean\n    report_id?: boolean\n    thread_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    action_type?: boolean\n    reason?: boolean\n    created_at?: boolean\n    moderator?: boolean | discussion_board_moderatorsDefaultArgs<ExtArgs>\n    user?: boolean | discussion_board_moderator_action$userArgs<ExtArgs>\n    report?: boolean | discussion_board_moderator_action$reportArgs<ExtArgs>\n    thread?: boolean | discussion_board_moderator_action$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_moderator_action$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_moderator_action$commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_moderator_action\"]>\n\n  export type discussion_board_moderator_actionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    moderator_id?: boolean\n    user_id?: boolean\n    report_id?: boolean\n    thread_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    action_type?: boolean\n    reason?: boolean\n    created_at?: boolean\n    moderator?: boolean | discussion_board_moderatorsDefaultArgs<ExtArgs>\n    user?: boolean | discussion_board_moderator_action$userArgs<ExtArgs>\n    report?: boolean | discussion_board_moderator_action$reportArgs<ExtArgs>\n    thread?: boolean | discussion_board_moderator_action$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_moderator_action$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_moderator_action$commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_moderator_action\"]>\n\n  export type discussion_board_moderator_actionSelectScalar = {\n    id?: boolean\n    moderator_id?: boolean\n    user_id?: boolean\n    report_id?: boolean\n    thread_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    action_type?: boolean\n    reason?: boolean\n    created_at?: boolean\n  }\n\n  export type discussion_board_moderator_actionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"moderator_id\" | \"user_id\" | \"report_id\" | \"thread_id\" | \"post_id\" | \"comment_id\" | \"action_type\" | \"reason\" | \"created_at\", ExtArgs[\"result\"][\"discussion_board_moderator_action\"]>\n  export type discussion_board_moderator_actionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    moderator?: boolean | discussion_board_moderatorsDefaultArgs<ExtArgs>\n    user?: boolean | discussion_board_moderator_action$userArgs<ExtArgs>\n    report?: boolean | discussion_board_moderator_action$reportArgs<ExtArgs>\n    thread?: boolean | discussion_board_moderator_action$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_moderator_action$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_moderator_action$commentArgs<ExtArgs>\n  }\n  export type discussion_board_moderator_actionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    moderator?: boolean | discussion_board_moderatorsDefaultArgs<ExtArgs>\n    user?: boolean | discussion_board_moderator_action$userArgs<ExtArgs>\n    report?: boolean | discussion_board_moderator_action$reportArgs<ExtArgs>\n    thread?: boolean | discussion_board_moderator_action$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_moderator_action$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_moderator_action$commentArgs<ExtArgs>\n  }\n  export type discussion_board_moderator_actionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    moderator?: boolean | discussion_board_moderatorsDefaultArgs<ExtArgs>\n    user?: boolean | discussion_board_moderator_action$userArgs<ExtArgs>\n    report?: boolean | discussion_board_moderator_action$reportArgs<ExtArgs>\n    thread?: boolean | discussion_board_moderator_action$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_moderator_action$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_moderator_action$commentArgs<ExtArgs>\n  }\n\n  export type $discussion_board_moderator_actionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussion_board_moderator_action\"\n    objects: {\n      moderator: Prisma.$discussion_board_moderatorsPayload<ExtArgs>\n      user: Prisma.$discussion_board_usersPayload<ExtArgs> | null\n      report: Prisma.$discussion_board_reportPayload<ExtArgs> | null\n      thread: Prisma.$discussion_board_threadPayload<ExtArgs> | null\n      post: Prisma.$discussion_board_postPayload<ExtArgs> | null\n      comment: Prisma.$discussion_board_commentPayload<ExtArgs> | null\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * [Primary Key] - Unique action id for every intervention. Atomic, normalized, for referencing in audits.\n       */\n      id: string\n      /**\n       * [Moderator FK] - The moderator performing the action. Maintains normalized link for accountability and reports. Not nullable.\n       */\n      moderator_id: string\n      /**\n       * [User FK] - User affected by the action (could be warned, banned, post deleted). Maintains normalization and supports analytics (e.g., repeat offenders). Nullable for system-level actions.\n       */\n      user_id: string | null\n      /**\n       * [Report FK] - Direct link to triggering report (if applicable). Enables action-report traceability. Nullable for proactive mod actions (not user-initiated).\n       */\n      report_id: string | null\n      /**\n       * [Thread FK] - Thread affected by this action (optional). Maintains normalized reference.\n       */\n      thread_id: string | null\n      /**\n       * [Post FK] - Post affected. Null unless specifically post-level intervention.\n       */\n      post_id: string | null\n      /**\n       * [Comment FK] - Comment affected. Nullable, for comment-level moderation only.\n       */\n      comment_id: string | null\n      /**\n       * [Action Type] - Enumerates mod actions such as 'deleted', 'locked', 'warned', 'banned', 'approved', etc. Atomic per row. Application logic enforces allowed set. For example, tracks instance when moderator locks a thread.\n       */\n      action_type: string\n      /**\n       * [Moderator Reason] - Justification for action, entered by mod. Fully normalized and atomic per event; clarifies decision context. For example, details why a post was removed.\n       */\n      reason: string\n      /**\n       * [Timestamp] - Date/time when action occurred. Atomic, 3NF, enables time-based analysis.\n       */\n      created_at: Date\n    }, ExtArgs[\"result\"][\"discussion_board_moderator_action\"]>\n    composites: {}\n  }\n\n  type discussion_board_moderator_actionGetPayload<S extends boolean | null | undefined | discussion_board_moderator_actionDefaultArgs> = $Result.GetResult<Prisma.$discussion_board_moderator_actionPayload, S>\n\n  type discussion_board_moderator_actionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussion_board_moderator_actionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussion_board_moderator_actionCountAggregateInputType | true\n    }\n\n  export interface discussion_board_moderator_actionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussion_board_moderator_action'], meta: { name: 'discussion_board_moderator_action' } }\n    /**\n     * Find zero or one Discussion_board_moderator_action that matches the filter.\n     * @param {discussion_board_moderator_actionFindUniqueArgs} args - Arguments to find a Discussion_board_moderator_action\n     * @example\n     * // Get one Discussion_board_moderator_action\n     * const discussion_board_moderator_action = await prisma.discussion_board_moderator_action.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussion_board_moderator_actionFindUniqueArgs>(args: SelectSubset<T, discussion_board_moderator_actionFindUniqueArgs<ExtArgs>>): Prisma__discussion_board_moderator_actionClient<$Result.GetResult<Prisma.$discussion_board_moderator_actionPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussion_board_moderator_action that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussion_board_moderator_actionFindUniqueOrThrowArgs} args - Arguments to find a Discussion_board_moderator_action\n     * @example\n     * // Get one Discussion_board_moderator_action\n     * const discussion_board_moderator_action = await prisma.discussion_board_moderator_action.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussion_board_moderator_actionFindUniqueOrThrowArgs>(args: SelectSubset<T, discussion_board_moderator_actionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussion_board_moderator_actionClient<$Result.GetResult<Prisma.$discussion_board_moderator_actionPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_moderator_action that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_moderator_actionFindFirstArgs} args - Arguments to find a Discussion_board_moderator_action\n     * @example\n     * // Get one Discussion_board_moderator_action\n     * const discussion_board_moderator_action = await prisma.discussion_board_moderator_action.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussion_board_moderator_actionFindFirstArgs>(args?: SelectSubset<T, discussion_board_moderator_actionFindFirstArgs<ExtArgs>>): Prisma__discussion_board_moderator_actionClient<$Result.GetResult<Prisma.$discussion_board_moderator_actionPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_moderator_action that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_moderator_actionFindFirstOrThrowArgs} args - Arguments to find a Discussion_board_moderator_action\n     * @example\n     * // Get one Discussion_board_moderator_action\n     * const discussion_board_moderator_action = await prisma.discussion_board_moderator_action.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussion_board_moderator_actionFindFirstOrThrowArgs>(args?: SelectSubset<T, discussion_board_moderator_actionFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussion_board_moderator_actionClient<$Result.GetResult<Prisma.$discussion_board_moderator_actionPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussion_board_moderator_actions that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_moderator_actionFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussion_board_moderator_actions\n     * const discussion_board_moderator_actions = await prisma.discussion_board_moderator_action.findMany()\n     * \n     * // Get first 10 Discussion_board_moderator_actions\n     * const discussion_board_moderator_actions = await prisma.discussion_board_moderator_action.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussion_board_moderator_actionWithIdOnly = await prisma.discussion_board_moderator_action.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussion_board_moderator_actionFindManyArgs>(args?: SelectSubset<T, discussion_board_moderator_actionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_moderator_actionPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussion_board_moderator_action.\n     * @param {discussion_board_moderator_actionCreateArgs} args - Arguments to create a Discussion_board_moderator_action.\n     * @example\n     * // Create one Discussion_board_moderator_action\n     * const Discussion_board_moderator_action = await prisma.discussion_board_moderator_action.create({\n     *   data: {\n     *     // ... data to create a Discussion_board_moderator_action\n     *   }\n     * })\n     * \n     */\n    create<T extends discussion_board_moderator_actionCreateArgs>(args: SelectSubset<T, discussion_board_moderator_actionCreateArgs<ExtArgs>>): Prisma__discussion_board_moderator_actionClient<$Result.GetResult<Prisma.$discussion_board_moderator_actionPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussion_board_moderator_actions.\n     * @param {discussion_board_moderator_actionCreateManyArgs} args - Arguments to create many Discussion_board_moderator_actions.\n     * @example\n     * // Create many Discussion_board_moderator_actions\n     * const discussion_board_moderator_action = await prisma.discussion_board_moderator_action.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussion_board_moderator_actionCreateManyArgs>(args?: SelectSubset<T, discussion_board_moderator_actionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussion_board_moderator_actions and returns the data saved in the database.\n     * @param {discussion_board_moderator_actionCreateManyAndReturnArgs} args - Arguments to create many Discussion_board_moderator_actions.\n     * @example\n     * // Create many Discussion_board_moderator_actions\n     * const discussion_board_moderator_action = await prisma.discussion_board_moderator_action.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussion_board_moderator_actions and only return the `id`\n     * const discussion_board_moderator_actionWithIdOnly = await prisma.discussion_board_moderator_action.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussion_board_moderator_actionCreateManyAndReturnArgs>(args?: SelectSubset<T, discussion_board_moderator_actionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_moderator_actionPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussion_board_moderator_action.\n     * @param {discussion_board_moderator_actionDeleteArgs} args - Arguments to delete one Discussion_board_moderator_action.\n     * @example\n     * // Delete one Discussion_board_moderator_action\n     * const Discussion_board_moderator_action = await prisma.discussion_board_moderator_action.delete({\n     *   where: {\n     *     // ... filter to delete one Discussion_board_moderator_action\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussion_board_moderator_actionDeleteArgs>(args: SelectSubset<T, discussion_board_moderator_actionDeleteArgs<ExtArgs>>): Prisma__discussion_board_moderator_actionClient<$Result.GetResult<Prisma.$discussion_board_moderator_actionPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussion_board_moderator_action.\n     * @param {discussion_board_moderator_actionUpdateArgs} args - Arguments to update one Discussion_board_moderator_action.\n     * @example\n     * // Update one Discussion_board_moderator_action\n     * const discussion_board_moderator_action = await prisma.discussion_board_moderator_action.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussion_board_moderator_actionUpdateArgs>(args: SelectSubset<T, discussion_board_moderator_actionUpdateArgs<ExtArgs>>): Prisma__discussion_board_moderator_actionClient<$Result.GetResult<Prisma.$discussion_board_moderator_actionPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussion_board_moderator_actions.\n     * @param {discussion_board_moderator_actionDeleteManyArgs} args - Arguments to filter Discussion_board_moderator_actions to delete.\n     * @example\n     * // Delete a few Discussion_board_moderator_actions\n     * const { count } = await prisma.discussion_board_moderator_action.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussion_board_moderator_actionDeleteManyArgs>(args?: SelectSubset<T, discussion_board_moderator_actionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_moderator_actions.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_moderator_actionUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussion_board_moderator_actions\n     * const discussion_board_moderator_action = await prisma.discussion_board_moderator_action.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussion_board_moderator_actionUpdateManyArgs>(args: SelectSubset<T, discussion_board_moderator_actionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_moderator_actions and returns the data updated in the database.\n     * @param {discussion_board_moderator_actionUpdateManyAndReturnArgs} args - Arguments to update many Discussion_board_moderator_actions.\n     * @example\n     * // Update many Discussion_board_moderator_actions\n     * const discussion_board_moderator_action = await prisma.discussion_board_moderator_action.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussion_board_moderator_actions and only return the `id`\n     * const discussion_board_moderator_actionWithIdOnly = await prisma.discussion_board_moderator_action.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussion_board_moderator_actionUpdateManyAndReturnArgs>(args: SelectSubset<T, discussion_board_moderator_actionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_moderator_actionPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussion_board_moderator_action.\n     * @param {discussion_board_moderator_actionUpsertArgs} args - Arguments to update or create a Discussion_board_moderator_action.\n     * @example\n     * // Update or create a Discussion_board_moderator_action\n     * const discussion_board_moderator_action = await prisma.discussion_board_moderator_action.upsert({\n     *   create: {\n     *     // ... data to create a Discussion_board_moderator_action\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussion_board_moderator_action we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussion_board_moderator_actionUpsertArgs>(args: SelectSubset<T, discussion_board_moderator_actionUpsertArgs<ExtArgs>>): Prisma__discussion_board_moderator_actionClient<$Result.GetResult<Prisma.$discussion_board_moderator_actionPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussion_board_moderator_actions.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_moderator_actionCountArgs} args - Arguments to filter Discussion_board_moderator_actions to count.\n     * @example\n     * // Count the number of Discussion_board_moderator_actions\n     * const count = await prisma.discussion_board_moderator_action.count({\n     *   where: {\n     *     // ... the filter for the Discussion_board_moderator_actions we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussion_board_moderator_actionCountArgs>(\n      args?: Subset<T, discussion_board_moderator_actionCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussion_board_moderator_actionCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussion_board_moderator_action.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussion_board_moderator_actionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussion_board_moderator_actionAggregateArgs>(args: Subset<T, Discussion_board_moderator_actionAggregateArgs>): Prisma.PrismaPromise<GetDiscussion_board_moderator_actionAggregateType<T>>\n\n    /**\n     * Group by Discussion_board_moderator_action.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_moderator_actionGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussion_board_moderator_actionGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussion_board_moderator_actionGroupByArgs['orderBy'] }\n        : { orderBy?: discussion_board_moderator_actionGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussion_board_moderator_actionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussion_board_moderator_actionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussion_board_moderator_action model\n   */\n  readonly fields: discussion_board_moderator_actionFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussion_board_moderator_action.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussion_board_moderator_actionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    moderator<T extends discussion_board_moderatorsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_moderatorsDefaultArgs<ExtArgs>>): Prisma__discussion_board_moderatorsClient<$Result.GetResult<Prisma.$discussion_board_moderatorsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    user<T extends discussion_board_moderator_action$userArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_moderator_action$userArgs<ExtArgs>>): Prisma__discussion_board_usersClient<$Result.GetResult<Prisma.$discussion_board_usersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    report<T extends discussion_board_moderator_action$reportArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_moderator_action$reportArgs<ExtArgs>>): Prisma__discussion_board_reportClient<$Result.GetResult<Prisma.$discussion_board_reportPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    thread<T extends discussion_board_moderator_action$threadArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_moderator_action$threadArgs<ExtArgs>>): Prisma__discussion_board_threadClient<$Result.GetResult<Prisma.$discussion_board_threadPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    post<T extends discussion_board_moderator_action$postArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_moderator_action$postArgs<ExtArgs>>): Prisma__discussion_board_postClient<$Result.GetResult<Prisma.$discussion_board_postPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    comment<T extends discussion_board_moderator_action$commentArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_moderator_action$commentArgs<ExtArgs>>): Prisma__discussion_board_commentClient<$Result.GetResult<Prisma.$discussion_board_commentPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussion_board_moderator_action model\n   */\n  interface discussion_board_moderator_actionFieldRefs {\n    readonly id: FieldRef<\"discussion_board_moderator_action\", 'String'>\n    readonly moderator_id: FieldRef<\"discussion_board_moderator_action\", 'String'>\n    readonly user_id: FieldRef<\"discussion_board_moderator_action\", 'String'>\n    readonly report_id: FieldRef<\"discussion_board_moderator_action\", 'String'>\n    readonly thread_id: FieldRef<\"discussion_board_moderator_action\", 'String'>\n    readonly post_id: FieldRef<\"discussion_board_moderator_action\", 'String'>\n    readonly comment_id: FieldRef<\"discussion_board_moderator_action\", 'String'>\n    readonly action_type: FieldRef<\"discussion_board_moderator_action\", 'String'>\n    readonly reason: FieldRef<\"discussion_board_moderator_action\", 'String'>\n    readonly created_at: FieldRef<\"discussion_board_moderator_action\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussion_board_moderator_action findUnique\n   */\n  export type discussion_board_moderator_actionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_moderator_action\n     */\n    select?: discussion_board_moderator_actionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_moderator_action\n     */\n    omit?: discussion_board_moderator_actionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_moderator_actionInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_moderator_action to fetch.\n     */\n    where: discussion_board_moderator_actionWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_moderator_action findUniqueOrThrow\n   */\n  export type discussion_board_moderator_actionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_moderator_action\n     */\n    select?: discussion_board_moderator_actionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_moderator_action\n     */\n    omit?: discussion_board_moderator_actionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_moderator_actionInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_moderator_action to fetch.\n     */\n    where: discussion_board_moderator_actionWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_moderator_action findFirst\n   */\n  export type discussion_board_moderator_actionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_moderator_action\n     */\n    select?: discussion_board_moderator_actionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_moderator_action\n     */\n    omit?: discussion_board_moderator_actionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_moderator_actionInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_moderator_action to fetch.\n     */\n    where?: discussion_board_moderator_actionWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_moderator_actions to fetch.\n     */\n    orderBy?: discussion_board_moderator_actionOrderByWithRelationInput | discussion_board_moderator_actionOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_moderator_actions.\n     */\n    cursor?: discussion_board_moderator_actionWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_moderator_actions from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_moderator_actions.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_moderator_actions.\n     */\n    distinct?: Discussion_board_moderator_actionScalarFieldEnum | Discussion_board_moderator_actionScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_moderator_action findFirstOrThrow\n   */\n  export type discussion_board_moderator_actionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_moderator_action\n     */\n    select?: discussion_board_moderator_actionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_moderator_action\n     */\n    omit?: discussion_board_moderator_actionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_moderator_actionInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_moderator_action to fetch.\n     */\n    where?: discussion_board_moderator_actionWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_moderator_actions to fetch.\n     */\n    orderBy?: discussion_board_moderator_actionOrderByWithRelationInput | discussion_board_moderator_actionOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_moderator_actions.\n     */\n    cursor?: discussion_board_moderator_actionWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_moderator_actions from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_moderator_actions.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_moderator_actions.\n     */\n    distinct?: Discussion_board_moderator_actionScalarFieldEnum | Discussion_board_moderator_actionScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_moderator_action findMany\n   */\n  export type discussion_board_moderator_actionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_moderator_action\n     */\n    select?: discussion_board_moderator_actionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_moderator_action\n     */\n    omit?: discussion_board_moderator_actionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_moderator_actionInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_moderator_actions to fetch.\n     */\n    where?: discussion_board_moderator_actionWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_moderator_actions to fetch.\n     */\n    orderBy?: discussion_board_moderator_actionOrderByWithRelationInput | discussion_board_moderator_actionOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussion_board_moderator_actions.\n     */\n    cursor?: discussion_board_moderator_actionWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_moderator_actions from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_moderator_actions.\n     */\n    skip?: number\n    distinct?: Discussion_board_moderator_actionScalarFieldEnum | Discussion_board_moderator_actionScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_moderator_action create\n   */\n  export type discussion_board_moderator_actionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_moderator_action\n     */\n    select?: discussion_board_moderator_actionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_moderator_action\n     */\n    omit?: discussion_board_moderator_actionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_moderator_actionInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussion_board_moderator_action.\n     */\n    data: XOR<discussion_board_moderator_actionCreateInput, discussion_board_moderator_actionUncheckedCreateInput>\n  }\n\n  /**\n   * discussion_board_moderator_action createMany\n   */\n  export type discussion_board_moderator_actionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussion_board_moderator_actions.\n     */\n    data: discussion_board_moderator_actionCreateManyInput | discussion_board_moderator_actionCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussion_board_moderator_action createManyAndReturn\n   */\n  export type discussion_board_moderator_actionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_moderator_action\n     */\n    select?: discussion_board_moderator_actionSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_moderator_action\n     */\n    omit?: discussion_board_moderator_actionOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussion_board_moderator_actions.\n     */\n    data: discussion_board_moderator_actionCreateManyInput | discussion_board_moderator_actionCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_moderator_actionIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_moderator_action update\n   */\n  export type discussion_board_moderator_actionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_moderator_action\n     */\n    select?: discussion_board_moderator_actionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_moderator_action\n     */\n    omit?: discussion_board_moderator_actionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_moderator_actionInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussion_board_moderator_action.\n     */\n    data: XOR<discussion_board_moderator_actionUpdateInput, discussion_board_moderator_actionUncheckedUpdateInput>\n    /**\n     * Choose, which discussion_board_moderator_action to update.\n     */\n    where: discussion_board_moderator_actionWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_moderator_action updateMany\n   */\n  export type discussion_board_moderator_actionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussion_board_moderator_actions.\n     */\n    data: XOR<discussion_board_moderator_actionUpdateManyMutationInput, discussion_board_moderator_actionUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_moderator_actions to update\n     */\n    where?: discussion_board_moderator_actionWhereInput\n    /**\n     * Limit how many discussion_board_moderator_actions to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_moderator_action updateManyAndReturn\n   */\n  export type discussion_board_moderator_actionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_moderator_action\n     */\n    select?: discussion_board_moderator_actionSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_moderator_action\n     */\n    omit?: discussion_board_moderator_actionOmit<ExtArgs> | null\n    /**\n     * The data used to update discussion_board_moderator_actions.\n     */\n    data: XOR<discussion_board_moderator_actionUpdateManyMutationInput, discussion_board_moderator_actionUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_moderator_actions to update\n     */\n    where?: discussion_board_moderator_actionWhereInput\n    /**\n     * Limit how many discussion_board_moderator_actions to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_moderator_actionIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_moderator_action upsert\n   */\n  export type discussion_board_moderator_actionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_moderator_action\n     */\n    select?: discussion_board_moderator_actionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_moderator_action\n     */\n    omit?: discussion_board_moderator_actionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_moderator_actionInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussion_board_moderator_action to update in case it exists.\n     */\n    where: discussion_board_moderator_actionWhereUniqueInput\n    /**\n     * In case the discussion_board_moderator_action found by the `where` argument doesn't exist, create a new discussion_board_moderator_action with this data.\n     */\n    create: XOR<discussion_board_moderator_actionCreateInput, discussion_board_moderator_actionUncheckedCreateInput>\n    /**\n     * In case the discussion_board_moderator_action was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussion_board_moderator_actionUpdateInput, discussion_board_moderator_actionUncheckedUpdateInput>\n  }\n\n  /**\n   * discussion_board_moderator_action delete\n   */\n  export type discussion_board_moderator_actionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_moderator_action\n     */\n    select?: discussion_board_moderator_actionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_moderator_action\n     */\n    omit?: discussion_board_moderator_actionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_moderator_actionInclude<ExtArgs> | null\n    /**\n     * Filter which discussion_board_moderator_action to delete.\n     */\n    where: discussion_board_moderator_actionWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_moderator_action deleteMany\n   */\n  export type discussion_board_moderator_actionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_moderator_actions to delete\n     */\n    where?: discussion_board_moderator_actionWhereInput\n    /**\n     * Limit how many discussion_board_moderator_actions to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_moderator_action.user\n   */\n  export type discussion_board_moderator_action$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_users\n     */\n    select?: discussion_board_usersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_users\n     */\n    omit?: discussion_board_usersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_usersInclude<ExtArgs> | null\n    where?: discussion_board_usersWhereInput\n  }\n\n  /**\n   * discussion_board_moderator_action.report\n   */\n  export type discussion_board_moderator_action$reportArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_report\n     */\n    select?: discussion_board_reportSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_report\n     */\n    omit?: discussion_board_reportOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_reportInclude<ExtArgs> | null\n    where?: discussion_board_reportWhereInput\n  }\n\n  /**\n   * discussion_board_moderator_action.thread\n   */\n  export type discussion_board_moderator_action$threadArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread\n     */\n    select?: discussion_board_threadSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread\n     */\n    omit?: discussion_board_threadOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_threadInclude<ExtArgs> | null\n    where?: discussion_board_threadWhereInput\n  }\n\n  /**\n   * discussion_board_moderator_action.post\n   */\n  export type discussion_board_moderator_action$postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_post\n     */\n    select?: discussion_board_postSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_post\n     */\n    omit?: discussion_board_postOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_postInclude<ExtArgs> | null\n    where?: discussion_board_postWhereInput\n  }\n\n  /**\n   * discussion_board_moderator_action.comment\n   */\n  export type discussion_board_moderator_action$commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_comment\n     */\n    select?: discussion_board_commentSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_comment\n     */\n    omit?: discussion_board_commentOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_commentInclude<ExtArgs> | null\n    where?: discussion_board_commentWhereInput\n  }\n\n  /**\n   * discussion_board_moderator_action without action\n   */\n  export type discussion_board_moderator_actionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_moderator_action\n     */\n    select?: discussion_board_moderator_actionSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_moderator_action\n     */\n    omit?: discussion_board_moderator_actionOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_moderator_actionInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussion_board_audit_log\n   */\n\n  export type AggregateDiscussion_board_audit_log = {\n    _count: Discussion_board_audit_logCountAggregateOutputType | null\n    _min: Discussion_board_audit_logMinAggregateOutputType | null\n    _max: Discussion_board_audit_logMaxAggregateOutputType | null\n  }\n\n  export type Discussion_board_audit_logMinAggregateOutputType = {\n    id: string | null\n    actor_id: string | null\n    affected_user_id: string | null\n    entity_type: string | null\n    entity_id: string | null\n    action: string | null\n    details: string | null\n    created_at: Date | null\n  }\n\n  export type Discussion_board_audit_logMaxAggregateOutputType = {\n    id: string | null\n    actor_id: string | null\n    affected_user_id: string | null\n    entity_type: string | null\n    entity_id: string | null\n    action: string | null\n    details: string | null\n    created_at: Date | null\n  }\n\n  export type Discussion_board_audit_logCountAggregateOutputType = {\n    id: number\n    actor_id: number\n    affected_user_id: number\n    entity_type: number\n    entity_id: number\n    action: number\n    details: number\n    created_at: number\n    _all: number\n  }\n\n\n  export type Discussion_board_audit_logMinAggregateInputType = {\n    id?: true\n    actor_id?: true\n    affected_user_id?: true\n    entity_type?: true\n    entity_id?: true\n    action?: true\n    details?: true\n    created_at?: true\n  }\n\n  export type Discussion_board_audit_logMaxAggregateInputType = {\n    id?: true\n    actor_id?: true\n    affected_user_id?: true\n    entity_type?: true\n    entity_id?: true\n    action?: true\n    details?: true\n    created_at?: true\n  }\n\n  export type Discussion_board_audit_logCountAggregateInputType = {\n    id?: true\n    actor_id?: true\n    affected_user_id?: true\n    entity_type?: true\n    entity_id?: true\n    action?: true\n    details?: true\n    created_at?: true\n    _all?: true\n  }\n\n  export type Discussion_board_audit_logAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_audit_log to aggregate.\n     */\n    where?: discussion_board_audit_logWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_audit_logs to fetch.\n     */\n    orderBy?: discussion_board_audit_logOrderByWithRelationInput | discussion_board_audit_logOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussion_board_audit_logWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_audit_logs from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_audit_logs.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussion_board_audit_logs\n    **/\n    _count?: true | Discussion_board_audit_logCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussion_board_audit_logMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussion_board_audit_logMaxAggregateInputType\n  }\n\n  export type GetDiscussion_board_audit_logAggregateType<T extends Discussion_board_audit_logAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussion_board_audit_log]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussion_board_audit_log[P]>\n      : GetScalarType<T[P], AggregateDiscussion_board_audit_log[P]>\n  }\n\n\n\n\n  export type discussion_board_audit_logGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_audit_logWhereInput\n    orderBy?: discussion_board_audit_logOrderByWithAggregationInput | discussion_board_audit_logOrderByWithAggregationInput[]\n    by: Discussion_board_audit_logScalarFieldEnum[] | Discussion_board_audit_logScalarFieldEnum\n    having?: discussion_board_audit_logScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussion_board_audit_logCountAggregateInputType | true\n    _min?: Discussion_board_audit_logMinAggregateInputType\n    _max?: Discussion_board_audit_logMaxAggregateInputType\n  }\n\n  export type Discussion_board_audit_logGroupByOutputType = {\n    id: string\n    actor_id: string\n    affected_user_id: string | null\n    entity_type: string\n    entity_id: string\n    action: string\n    details: string\n    created_at: Date\n    _count: Discussion_board_audit_logCountAggregateOutputType | null\n    _min: Discussion_board_audit_logMinAggregateOutputType | null\n    _max: Discussion_board_audit_logMaxAggregateOutputType | null\n  }\n\n  type GetDiscussion_board_audit_logGroupByPayload<T extends discussion_board_audit_logGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussion_board_audit_logGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussion_board_audit_logGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussion_board_audit_logGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussion_board_audit_logGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussion_board_audit_logSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    actor_id?: boolean\n    affected_user_id?: boolean\n    entity_type?: boolean\n    entity_id?: boolean\n    action?: boolean\n    details?: boolean\n    created_at?: boolean\n    actor?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    affected_user?: boolean | discussion_board_audit_log$affected_userArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_audit_log\"]>\n\n  export type discussion_board_audit_logSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    actor_id?: boolean\n    affected_user_id?: boolean\n    entity_type?: boolean\n    entity_id?: boolean\n    action?: boolean\n    details?: boolean\n    created_at?: boolean\n    actor?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    affected_user?: boolean | discussion_board_audit_log$affected_userArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_audit_log\"]>\n\n  export type discussion_board_audit_logSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    actor_id?: boolean\n    affected_user_id?: boolean\n    entity_type?: boolean\n    entity_id?: boolean\n    action?: boolean\n    details?: boolean\n    created_at?: boolean\n    actor?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    affected_user?: boolean | discussion_board_audit_log$affected_userArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_audit_log\"]>\n\n  export type discussion_board_audit_logSelectScalar = {\n    id?: boolean\n    actor_id?: boolean\n    affected_user_id?: boolean\n    entity_type?: boolean\n    entity_id?: boolean\n    action?: boolean\n    details?: boolean\n    created_at?: boolean\n  }\n\n  export type discussion_board_audit_logOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"actor_id\" | \"affected_user_id\" | \"entity_type\" | \"entity_id\" | \"action\" | \"details\" | \"created_at\", ExtArgs[\"result\"][\"discussion_board_audit_log\"]>\n  export type discussion_board_audit_logInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    actor?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    affected_user?: boolean | discussion_board_audit_log$affected_userArgs<ExtArgs>\n  }\n  export type discussion_board_audit_logIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    actor?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    affected_user?: boolean | discussion_board_audit_log$affected_userArgs<ExtArgs>\n  }\n  export type discussion_board_audit_logIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    actor?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    affected_user?: boolean | discussion_board_audit_log$affected_userArgs<ExtArgs>\n  }\n\n  export type $discussion_board_audit_logPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussion_board_audit_log\"\n    objects: {\n      actor: Prisma.$discussion_board_usersPayload<ExtArgs>\n      affected_user: Prisma.$discussion_board_usersPayload<ExtArgs> | null\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * [Primary Key] - Unique audit entry. Holds atomic record reference. Used for compliance reviews and investigations.\n       */\n      id: string\n      /**\n       * [Actor FK] - User/mod/admin responsible for action. Direct accountability for each logged event. Always populated.\n       */\n      actor_id: string\n      /**\n       * [Affected User FK] - User affected by event, if applicable (nullable for system actions). Keeps 3NF, as atomic ref.\n       */\n      affected_user_id: string | null\n      /**\n       * [Entity Type] - Indicates what was affected: 'user', 'setting', 'thread', etc. Atomic per log entry. Maintains normalization by not including redundant fields.\n       */\n      entity_type: string\n      /**\n       * [Entity ID] - Universal ID to pair with entity_type for object lookup. Atomic, normalized reference for all logged object types.\n       */\n      entity_id: string\n      /**\n       * [Action] - Verb describing event: 'ban', 'unban', 'setting_change', 'delete', etc. 3NF compliance, only single type per row.\n       */\n      action: string\n      /**\n       * [Details] - Optional, atomic, freeform field allowing extra commentary for audits. Example: rationale behind a setting change.\n       */\n      details: string\n      /**\n       * [Timestamp] - When audit entry recorded. Atomic, supports time-based filtering.\n       */\n      created_at: Date\n    }, ExtArgs[\"result\"][\"discussion_board_audit_log\"]>\n    composites: {}\n  }\n\n  type discussion_board_audit_logGetPayload<S extends boolean | null | undefined | discussion_board_audit_logDefaultArgs> = $Result.GetResult<Prisma.$discussion_board_audit_logPayload, S>\n\n  type discussion_board_audit_logCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussion_board_audit_logFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussion_board_audit_logCountAggregateInputType | true\n    }\n\n  export interface discussion_board_audit_logDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussion_board_audit_log'], meta: { name: 'discussion_board_audit_log' } }\n    /**\n     * Find zero or one Discussion_board_audit_log that matches the filter.\n     * @param {discussion_board_audit_logFindUniqueArgs} args - Arguments to find a Discussion_board_audit_log\n     * @example\n     * // Get one Discussion_board_audit_log\n     * const discussion_board_audit_log = await prisma.discussion_board_audit_log.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussion_board_audit_logFindUniqueArgs>(args: SelectSubset<T, discussion_board_audit_logFindUniqueArgs<ExtArgs>>): Prisma__discussion_board_audit_logClient<$Result.GetResult<Prisma.$discussion_board_audit_logPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussion_board_audit_log that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussion_board_audit_logFindUniqueOrThrowArgs} args - Arguments to find a Discussion_board_audit_log\n     * @example\n     * // Get one Discussion_board_audit_log\n     * const discussion_board_audit_log = await prisma.discussion_board_audit_log.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussion_board_audit_logFindUniqueOrThrowArgs>(args: SelectSubset<T, discussion_board_audit_logFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussion_board_audit_logClient<$Result.GetResult<Prisma.$discussion_board_audit_logPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_audit_log that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_audit_logFindFirstArgs} args - Arguments to find a Discussion_board_audit_log\n     * @example\n     * // Get one Discussion_board_audit_log\n     * const discussion_board_audit_log = await prisma.discussion_board_audit_log.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussion_board_audit_logFindFirstArgs>(args?: SelectSubset<T, discussion_board_audit_logFindFirstArgs<ExtArgs>>): Prisma__discussion_board_audit_logClient<$Result.GetResult<Prisma.$discussion_board_audit_logPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_audit_log that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_audit_logFindFirstOrThrowArgs} args - Arguments to find a Discussion_board_audit_log\n     * @example\n     * // Get one Discussion_board_audit_log\n     * const discussion_board_audit_log = await prisma.discussion_board_audit_log.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussion_board_audit_logFindFirstOrThrowArgs>(args?: SelectSubset<T, discussion_board_audit_logFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussion_board_audit_logClient<$Result.GetResult<Prisma.$discussion_board_audit_logPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussion_board_audit_logs that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_audit_logFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussion_board_audit_logs\n     * const discussion_board_audit_logs = await prisma.discussion_board_audit_log.findMany()\n     * \n     * // Get first 10 Discussion_board_audit_logs\n     * const discussion_board_audit_logs = await prisma.discussion_board_audit_log.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussion_board_audit_logWithIdOnly = await prisma.discussion_board_audit_log.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussion_board_audit_logFindManyArgs>(args?: SelectSubset<T, discussion_board_audit_logFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_audit_logPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussion_board_audit_log.\n     * @param {discussion_board_audit_logCreateArgs} args - Arguments to create a Discussion_board_audit_log.\n     * @example\n     * // Create one Discussion_board_audit_log\n     * const Discussion_board_audit_log = await prisma.discussion_board_audit_log.create({\n     *   data: {\n     *     // ... data to create a Discussion_board_audit_log\n     *   }\n     * })\n     * \n     */\n    create<T extends discussion_board_audit_logCreateArgs>(args: SelectSubset<T, discussion_board_audit_logCreateArgs<ExtArgs>>): Prisma__discussion_board_audit_logClient<$Result.GetResult<Prisma.$discussion_board_audit_logPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussion_board_audit_logs.\n     * @param {discussion_board_audit_logCreateManyArgs} args - Arguments to create many Discussion_board_audit_logs.\n     * @example\n     * // Create many Discussion_board_audit_logs\n     * const discussion_board_audit_log = await prisma.discussion_board_audit_log.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussion_board_audit_logCreateManyArgs>(args?: SelectSubset<T, discussion_board_audit_logCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussion_board_audit_logs and returns the data saved in the database.\n     * @param {discussion_board_audit_logCreateManyAndReturnArgs} args - Arguments to create many Discussion_board_audit_logs.\n     * @example\n     * // Create many Discussion_board_audit_logs\n     * const discussion_board_audit_log = await prisma.discussion_board_audit_log.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussion_board_audit_logs and only return the `id`\n     * const discussion_board_audit_logWithIdOnly = await prisma.discussion_board_audit_log.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussion_board_audit_logCreateManyAndReturnArgs>(args?: SelectSubset<T, discussion_board_audit_logCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_audit_logPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussion_board_audit_log.\n     * @param {discussion_board_audit_logDeleteArgs} args - Arguments to delete one Discussion_board_audit_log.\n     * @example\n     * // Delete one Discussion_board_audit_log\n     * const Discussion_board_audit_log = await prisma.discussion_board_audit_log.delete({\n     *   where: {\n     *     // ... filter to delete one Discussion_board_audit_log\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussion_board_audit_logDeleteArgs>(args: SelectSubset<T, discussion_board_audit_logDeleteArgs<ExtArgs>>): Prisma__discussion_board_audit_logClient<$Result.GetResult<Prisma.$discussion_board_audit_logPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussion_board_audit_log.\n     * @param {discussion_board_audit_logUpdateArgs} args - Arguments to update one Discussion_board_audit_log.\n     * @example\n     * // Update one Discussion_board_audit_log\n     * const discussion_board_audit_log = await prisma.discussion_board_audit_log.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussion_board_audit_logUpdateArgs>(args: SelectSubset<T, discussion_board_audit_logUpdateArgs<ExtArgs>>): Prisma__discussion_board_audit_logClient<$Result.GetResult<Prisma.$discussion_board_audit_logPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussion_board_audit_logs.\n     * @param {discussion_board_audit_logDeleteManyArgs} args - Arguments to filter Discussion_board_audit_logs to delete.\n     * @example\n     * // Delete a few Discussion_board_audit_logs\n     * const { count } = await prisma.discussion_board_audit_log.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussion_board_audit_logDeleteManyArgs>(args?: SelectSubset<T, discussion_board_audit_logDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_audit_logs.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_audit_logUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussion_board_audit_logs\n     * const discussion_board_audit_log = await prisma.discussion_board_audit_log.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussion_board_audit_logUpdateManyArgs>(args: SelectSubset<T, discussion_board_audit_logUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_audit_logs and returns the data updated in the database.\n     * @param {discussion_board_audit_logUpdateManyAndReturnArgs} args - Arguments to update many Discussion_board_audit_logs.\n     * @example\n     * // Update many Discussion_board_audit_logs\n     * const discussion_board_audit_log = await prisma.discussion_board_audit_log.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussion_board_audit_logs and only return the `id`\n     * const discussion_board_audit_logWithIdOnly = await prisma.discussion_board_audit_log.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussion_board_audit_logUpdateManyAndReturnArgs>(args: SelectSubset<T, discussion_board_audit_logUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_audit_logPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussion_board_audit_log.\n     * @param {discussion_board_audit_logUpsertArgs} args - Arguments to update or create a Discussion_board_audit_log.\n     * @example\n     * // Update or create a Discussion_board_audit_log\n     * const discussion_board_audit_log = await prisma.discussion_board_audit_log.upsert({\n     *   create: {\n     *     // ... data to create a Discussion_board_audit_log\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussion_board_audit_log we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussion_board_audit_logUpsertArgs>(args: SelectSubset<T, discussion_board_audit_logUpsertArgs<ExtArgs>>): Prisma__discussion_board_audit_logClient<$Result.GetResult<Prisma.$discussion_board_audit_logPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussion_board_audit_logs.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_audit_logCountArgs} args - Arguments to filter Discussion_board_audit_logs to count.\n     * @example\n     * // Count the number of Discussion_board_audit_logs\n     * const count = await prisma.discussion_board_audit_log.count({\n     *   where: {\n     *     // ... the filter for the Discussion_board_audit_logs we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussion_board_audit_logCountArgs>(\n      args?: Subset<T, discussion_board_audit_logCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussion_board_audit_logCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussion_board_audit_log.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussion_board_audit_logAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussion_board_audit_logAggregateArgs>(args: Subset<T, Discussion_board_audit_logAggregateArgs>): Prisma.PrismaPromise<GetDiscussion_board_audit_logAggregateType<T>>\n\n    /**\n     * Group by Discussion_board_audit_log.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_audit_logGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussion_board_audit_logGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussion_board_audit_logGroupByArgs['orderBy'] }\n        : { orderBy?: discussion_board_audit_logGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussion_board_audit_logGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussion_board_audit_logGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussion_board_audit_log model\n   */\n  readonly fields: discussion_board_audit_logFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussion_board_audit_log.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussion_board_audit_logClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    actor<T extends discussion_board_usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_usersDefaultArgs<ExtArgs>>): Prisma__discussion_board_usersClient<$Result.GetResult<Prisma.$discussion_board_usersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    affected_user<T extends discussion_board_audit_log$affected_userArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_audit_log$affected_userArgs<ExtArgs>>): Prisma__discussion_board_usersClient<$Result.GetResult<Prisma.$discussion_board_usersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussion_board_audit_log model\n   */\n  interface discussion_board_audit_logFieldRefs {\n    readonly id: FieldRef<\"discussion_board_audit_log\", 'String'>\n    readonly actor_id: FieldRef<\"discussion_board_audit_log\", 'String'>\n    readonly affected_user_id: FieldRef<\"discussion_board_audit_log\", 'String'>\n    readonly entity_type: FieldRef<\"discussion_board_audit_log\", 'String'>\n    readonly entity_id: FieldRef<\"discussion_board_audit_log\", 'String'>\n    readonly action: FieldRef<\"discussion_board_audit_log\", 'String'>\n    readonly details: FieldRef<\"discussion_board_audit_log\", 'String'>\n    readonly created_at: FieldRef<\"discussion_board_audit_log\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussion_board_audit_log findUnique\n   */\n  export type discussion_board_audit_logFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_audit_log\n     */\n    select?: discussion_board_audit_logSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_audit_log\n     */\n    omit?: discussion_board_audit_logOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_audit_logInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_audit_log to fetch.\n     */\n    where: discussion_board_audit_logWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_audit_log findUniqueOrThrow\n   */\n  export type discussion_board_audit_logFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_audit_log\n     */\n    select?: discussion_board_audit_logSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_audit_log\n     */\n    omit?: discussion_board_audit_logOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_audit_logInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_audit_log to fetch.\n     */\n    where: discussion_board_audit_logWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_audit_log findFirst\n   */\n  export type discussion_board_audit_logFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_audit_log\n     */\n    select?: discussion_board_audit_logSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_audit_log\n     */\n    omit?: discussion_board_audit_logOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_audit_logInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_audit_log to fetch.\n     */\n    where?: discussion_board_audit_logWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_audit_logs to fetch.\n     */\n    orderBy?: discussion_board_audit_logOrderByWithRelationInput | discussion_board_audit_logOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_audit_logs.\n     */\n    cursor?: discussion_board_audit_logWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_audit_logs from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_audit_logs.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_audit_logs.\n     */\n    distinct?: Discussion_board_audit_logScalarFieldEnum | Discussion_board_audit_logScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_audit_log findFirstOrThrow\n   */\n  export type discussion_board_audit_logFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_audit_log\n     */\n    select?: discussion_board_audit_logSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_audit_log\n     */\n    omit?: discussion_board_audit_logOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_audit_logInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_audit_log to fetch.\n     */\n    where?: discussion_board_audit_logWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_audit_logs to fetch.\n     */\n    orderBy?: discussion_board_audit_logOrderByWithRelationInput | discussion_board_audit_logOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_audit_logs.\n     */\n    cursor?: discussion_board_audit_logWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_audit_logs from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_audit_logs.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_audit_logs.\n     */\n    distinct?: Discussion_board_audit_logScalarFieldEnum | Discussion_board_audit_logScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_audit_log findMany\n   */\n  export type discussion_board_audit_logFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_audit_log\n     */\n    select?: discussion_board_audit_logSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_audit_log\n     */\n    omit?: discussion_board_audit_logOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_audit_logInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_audit_logs to fetch.\n     */\n    where?: discussion_board_audit_logWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_audit_logs to fetch.\n     */\n    orderBy?: discussion_board_audit_logOrderByWithRelationInput | discussion_board_audit_logOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussion_board_audit_logs.\n     */\n    cursor?: discussion_board_audit_logWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_audit_logs from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_audit_logs.\n     */\n    skip?: number\n    distinct?: Discussion_board_audit_logScalarFieldEnum | Discussion_board_audit_logScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_audit_log create\n   */\n  export type discussion_board_audit_logCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_audit_log\n     */\n    select?: discussion_board_audit_logSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_audit_log\n     */\n    omit?: discussion_board_audit_logOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_audit_logInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussion_board_audit_log.\n     */\n    data: XOR<discussion_board_audit_logCreateInput, discussion_board_audit_logUncheckedCreateInput>\n  }\n\n  /**\n   * discussion_board_audit_log createMany\n   */\n  export type discussion_board_audit_logCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussion_board_audit_logs.\n     */\n    data: discussion_board_audit_logCreateManyInput | discussion_board_audit_logCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussion_board_audit_log createManyAndReturn\n   */\n  export type discussion_board_audit_logCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_audit_log\n     */\n    select?: discussion_board_audit_logSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_audit_log\n     */\n    omit?: discussion_board_audit_logOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussion_board_audit_logs.\n     */\n    data: discussion_board_audit_logCreateManyInput | discussion_board_audit_logCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_audit_logIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_audit_log update\n   */\n  export type discussion_board_audit_logUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_audit_log\n     */\n    select?: discussion_board_audit_logSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_audit_log\n     */\n    omit?: discussion_board_audit_logOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_audit_logInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussion_board_audit_log.\n     */\n    data: XOR<discussion_board_audit_logUpdateInput, discussion_board_audit_logUncheckedUpdateInput>\n    /**\n     * Choose, which discussion_board_audit_log to update.\n     */\n    where: discussion_board_audit_logWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_audit_log updateMany\n   */\n  export type discussion_board_audit_logUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussion_board_audit_logs.\n     */\n    data: XOR<discussion_board_audit_logUpdateManyMutationInput, discussion_board_audit_logUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_audit_logs to update\n     */\n    where?: discussion_board_audit_logWhereInput\n    /**\n     * Limit how many discussion_board_audit_logs to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_audit_log updateManyAndReturn\n   */\n  export type discussion_board_audit_logUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_audit_log\n     */\n    select?: discussion_board_audit_logSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_audit_log\n     */\n    omit?: discussion_board_audit_logOmit<ExtArgs> | null\n    /**\n     * The data used to update discussion_board_audit_logs.\n     */\n    data: XOR<discussion_board_audit_logUpdateManyMutationInput, discussion_board_audit_logUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_audit_logs to update\n     */\n    where?: discussion_board_audit_logWhereInput\n    /**\n     * Limit how many discussion_board_audit_logs to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_audit_logIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_audit_log upsert\n   */\n  export type discussion_board_audit_logUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_audit_log\n     */\n    select?: discussion_board_audit_logSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_audit_log\n     */\n    omit?: discussion_board_audit_logOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_audit_logInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussion_board_audit_log to update in case it exists.\n     */\n    where: discussion_board_audit_logWhereUniqueInput\n    /**\n     * In case the discussion_board_audit_log found by the `where` argument doesn't exist, create a new discussion_board_audit_log with this data.\n     */\n    create: XOR<discussion_board_audit_logCreateInput, discussion_board_audit_logUncheckedCreateInput>\n    /**\n     * In case the discussion_board_audit_log was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussion_board_audit_logUpdateInput, discussion_board_audit_logUncheckedUpdateInput>\n  }\n\n  /**\n   * discussion_board_audit_log delete\n   */\n  export type discussion_board_audit_logDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_audit_log\n     */\n    select?: discussion_board_audit_logSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_audit_log\n     */\n    omit?: discussion_board_audit_logOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_audit_logInclude<ExtArgs> | null\n    /**\n     * Filter which discussion_board_audit_log to delete.\n     */\n    where: discussion_board_audit_logWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_audit_log deleteMany\n   */\n  export type discussion_board_audit_logDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_audit_logs to delete\n     */\n    where?: discussion_board_audit_logWhereInput\n    /**\n     * Limit how many discussion_board_audit_logs to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_audit_log.affected_user\n   */\n  export type discussion_board_audit_log$affected_userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_users\n     */\n    select?: discussion_board_usersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_users\n     */\n    omit?: discussion_board_usersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_usersInclude<ExtArgs> | null\n    where?: discussion_board_usersWhereInput\n  }\n\n  /**\n   * discussion_board_audit_log without action\n   */\n  export type discussion_board_audit_logDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_audit_log\n     */\n    select?: discussion_board_audit_logSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_audit_log\n     */\n    omit?: discussion_board_audit_logOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_audit_logInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussion_board_warning\n   */\n\n  export type AggregateDiscussion_board_warning = {\n    _count: Discussion_board_warningCountAggregateOutputType | null\n    _min: Discussion_board_warningMinAggregateOutputType | null\n    _max: Discussion_board_warningMaxAggregateOutputType | null\n  }\n\n  export type Discussion_board_warningMinAggregateOutputType = {\n    id: string | null\n    user_id: string | null\n    moderator_id: string | null\n    thread_id: string | null\n    post_id: string | null\n    comment_id: string | null\n    reason: string | null\n    issued_at: Date | null\n  }\n\n  export type Discussion_board_warningMaxAggregateOutputType = {\n    id: string | null\n    user_id: string | null\n    moderator_id: string | null\n    thread_id: string | null\n    post_id: string | null\n    comment_id: string | null\n    reason: string | null\n    issued_at: Date | null\n  }\n\n  export type Discussion_board_warningCountAggregateOutputType = {\n    id: number\n    user_id: number\n    moderator_id: number\n    thread_id: number\n    post_id: number\n    comment_id: number\n    reason: number\n    issued_at: number\n    _all: number\n  }\n\n\n  export type Discussion_board_warningMinAggregateInputType = {\n    id?: true\n    user_id?: true\n    moderator_id?: true\n    thread_id?: true\n    post_id?: true\n    comment_id?: true\n    reason?: true\n    issued_at?: true\n  }\n\n  export type Discussion_board_warningMaxAggregateInputType = {\n    id?: true\n    user_id?: true\n    moderator_id?: true\n    thread_id?: true\n    post_id?: true\n    comment_id?: true\n    reason?: true\n    issued_at?: true\n  }\n\n  export type Discussion_board_warningCountAggregateInputType = {\n    id?: true\n    user_id?: true\n    moderator_id?: true\n    thread_id?: true\n    post_id?: true\n    comment_id?: true\n    reason?: true\n    issued_at?: true\n    _all?: true\n  }\n\n  export type Discussion_board_warningAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_warning to aggregate.\n     */\n    where?: discussion_board_warningWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_warnings to fetch.\n     */\n    orderBy?: discussion_board_warningOrderByWithRelationInput | discussion_board_warningOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussion_board_warningWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_warnings from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_warnings.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussion_board_warnings\n    **/\n    _count?: true | Discussion_board_warningCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussion_board_warningMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussion_board_warningMaxAggregateInputType\n  }\n\n  export type GetDiscussion_board_warningAggregateType<T extends Discussion_board_warningAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussion_board_warning]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussion_board_warning[P]>\n      : GetScalarType<T[P], AggregateDiscussion_board_warning[P]>\n  }\n\n\n\n\n  export type discussion_board_warningGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_warningWhereInput\n    orderBy?: discussion_board_warningOrderByWithAggregationInput | discussion_board_warningOrderByWithAggregationInput[]\n    by: Discussion_board_warningScalarFieldEnum[] | Discussion_board_warningScalarFieldEnum\n    having?: discussion_board_warningScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussion_board_warningCountAggregateInputType | true\n    _min?: Discussion_board_warningMinAggregateInputType\n    _max?: Discussion_board_warningMaxAggregateInputType\n  }\n\n  export type Discussion_board_warningGroupByOutputType = {\n    id: string\n    user_id: string\n    moderator_id: string\n    thread_id: string | null\n    post_id: string | null\n    comment_id: string | null\n    reason: string\n    issued_at: Date\n    _count: Discussion_board_warningCountAggregateOutputType | null\n    _min: Discussion_board_warningMinAggregateOutputType | null\n    _max: Discussion_board_warningMaxAggregateOutputType | null\n  }\n\n  type GetDiscussion_board_warningGroupByPayload<T extends discussion_board_warningGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussion_board_warningGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussion_board_warningGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussion_board_warningGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussion_board_warningGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussion_board_warningSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    moderator_id?: boolean\n    thread_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    reason?: boolean\n    issued_at?: boolean\n    user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    moderator?: boolean | discussion_board_moderatorsDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_warning$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_warning$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_warning$commentArgs<ExtArgs>\n    discussion_board_ban?: boolean | discussion_board_warning$discussion_board_banArgs<ExtArgs>\n    _count?: boolean | Discussion_board_warningCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_warning\"]>\n\n  export type discussion_board_warningSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    moderator_id?: boolean\n    thread_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    reason?: boolean\n    issued_at?: boolean\n    user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    moderator?: boolean | discussion_board_moderatorsDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_warning$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_warning$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_warning$commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_warning\"]>\n\n  export type discussion_board_warningSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    moderator_id?: boolean\n    thread_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    reason?: boolean\n    issued_at?: boolean\n    user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    moderator?: boolean | discussion_board_moderatorsDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_warning$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_warning$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_warning$commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_warning\"]>\n\n  export type discussion_board_warningSelectScalar = {\n    id?: boolean\n    user_id?: boolean\n    moderator_id?: boolean\n    thread_id?: boolean\n    post_id?: boolean\n    comment_id?: boolean\n    reason?: boolean\n    issued_at?: boolean\n  }\n\n  export type discussion_board_warningOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"user_id\" | \"moderator_id\" | \"thread_id\" | \"post_id\" | \"comment_id\" | \"reason\" | \"issued_at\", ExtArgs[\"result\"][\"discussion_board_warning\"]>\n  export type discussion_board_warningInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    moderator?: boolean | discussion_board_moderatorsDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_warning$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_warning$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_warning$commentArgs<ExtArgs>\n    discussion_board_ban?: boolean | discussion_board_warning$discussion_board_banArgs<ExtArgs>\n    _count?: boolean | Discussion_board_warningCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type discussion_board_warningIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    moderator?: boolean | discussion_board_moderatorsDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_warning$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_warning$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_warning$commentArgs<ExtArgs>\n  }\n  export type discussion_board_warningIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    moderator?: boolean | discussion_board_moderatorsDefaultArgs<ExtArgs>\n    thread?: boolean | discussion_board_warning$threadArgs<ExtArgs>\n    post?: boolean | discussion_board_warning$postArgs<ExtArgs>\n    comment?: boolean | discussion_board_warning$commentArgs<ExtArgs>\n  }\n\n  export type $discussion_board_warningPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussion_board_warning\"\n    objects: {\n      user: Prisma.$discussion_board_usersPayload<ExtArgs>\n      moderator: Prisma.$discussion_board_moderatorsPayload<ExtArgs>\n      thread: Prisma.$discussion_board_threadPayload<ExtArgs> | null\n      post: Prisma.$discussion_board_postPayload<ExtArgs> | null\n      comment: Prisma.$discussion_board_commentPayload<ExtArgs> | null\n      discussion_board_ban: Prisma.$discussion_board_banPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * [Primary Key] - Unique id per warning. Enables audit traceability, atomic field. Used to reference a particular warning for bans/escalation.\n       */\n      id: string\n      /**\n       * [User FK] - The warned user. Maintains normalization by referencing only. For example, a user accumulating multiple warnings.\n       */\n      user_id: string\n      /**\n       * [Moderator FK] - Mod issuing warning, ensures accountability and supports progressive discipline audit. Not nullable.\n       */\n      moderator_id: string\n      /**\n       * [Thread FK] - The thread which triggered the warning (if relevant). Normalized, optional.\n       */\n      thread_id: string | null\n      /**\n       * [Post FK] - The post triggering the warning, if relevant. Maintained as atomic/optional.\n       */\n      post_id: string | null\n      /**\n       * [Comment FK] - Focused on content-related warnings. Maintains normalization, optional.\n       */\n      comment_id: string | null\n      /**\n       * [Warning Reason] - Moderator-issued specific reason. 3NF compliance, atomic string. E.g., citing violation category.\n       */\n      reason: string\n      /**\n       * [Issued Timestamp] - When warning was given. Enables time-based moderation analytics and is normalized per event.\n       */\n      issued_at: Date\n    }, ExtArgs[\"result\"][\"discussion_board_warning\"]>\n    composites: {}\n  }\n\n  type discussion_board_warningGetPayload<S extends boolean | null | undefined | discussion_board_warningDefaultArgs> = $Result.GetResult<Prisma.$discussion_board_warningPayload, S>\n\n  type discussion_board_warningCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussion_board_warningFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussion_board_warningCountAggregateInputType | true\n    }\n\n  export interface discussion_board_warningDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussion_board_warning'], meta: { name: 'discussion_board_warning' } }\n    /**\n     * Find zero or one Discussion_board_warning that matches the filter.\n     * @param {discussion_board_warningFindUniqueArgs} args - Arguments to find a Discussion_board_warning\n     * @example\n     * // Get one Discussion_board_warning\n     * const discussion_board_warning = await prisma.discussion_board_warning.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussion_board_warningFindUniqueArgs>(args: SelectSubset<T, discussion_board_warningFindUniqueArgs<ExtArgs>>): Prisma__discussion_board_warningClient<$Result.GetResult<Prisma.$discussion_board_warningPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussion_board_warning that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussion_board_warningFindUniqueOrThrowArgs} args - Arguments to find a Discussion_board_warning\n     * @example\n     * // Get one Discussion_board_warning\n     * const discussion_board_warning = await prisma.discussion_board_warning.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussion_board_warningFindUniqueOrThrowArgs>(args: SelectSubset<T, discussion_board_warningFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussion_board_warningClient<$Result.GetResult<Prisma.$discussion_board_warningPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_warning that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_warningFindFirstArgs} args - Arguments to find a Discussion_board_warning\n     * @example\n     * // Get one Discussion_board_warning\n     * const discussion_board_warning = await prisma.discussion_board_warning.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussion_board_warningFindFirstArgs>(args?: SelectSubset<T, discussion_board_warningFindFirstArgs<ExtArgs>>): Prisma__discussion_board_warningClient<$Result.GetResult<Prisma.$discussion_board_warningPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_warning that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_warningFindFirstOrThrowArgs} args - Arguments to find a Discussion_board_warning\n     * @example\n     * // Get one Discussion_board_warning\n     * const discussion_board_warning = await prisma.discussion_board_warning.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussion_board_warningFindFirstOrThrowArgs>(args?: SelectSubset<T, discussion_board_warningFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussion_board_warningClient<$Result.GetResult<Prisma.$discussion_board_warningPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussion_board_warnings that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_warningFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussion_board_warnings\n     * const discussion_board_warnings = await prisma.discussion_board_warning.findMany()\n     * \n     * // Get first 10 Discussion_board_warnings\n     * const discussion_board_warnings = await prisma.discussion_board_warning.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussion_board_warningWithIdOnly = await prisma.discussion_board_warning.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussion_board_warningFindManyArgs>(args?: SelectSubset<T, discussion_board_warningFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_warningPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussion_board_warning.\n     * @param {discussion_board_warningCreateArgs} args - Arguments to create a Discussion_board_warning.\n     * @example\n     * // Create one Discussion_board_warning\n     * const Discussion_board_warning = await prisma.discussion_board_warning.create({\n     *   data: {\n     *     // ... data to create a Discussion_board_warning\n     *   }\n     * })\n     * \n     */\n    create<T extends discussion_board_warningCreateArgs>(args: SelectSubset<T, discussion_board_warningCreateArgs<ExtArgs>>): Prisma__discussion_board_warningClient<$Result.GetResult<Prisma.$discussion_board_warningPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussion_board_warnings.\n     * @param {discussion_board_warningCreateManyArgs} args - Arguments to create many Discussion_board_warnings.\n     * @example\n     * // Create many Discussion_board_warnings\n     * const discussion_board_warning = await prisma.discussion_board_warning.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussion_board_warningCreateManyArgs>(args?: SelectSubset<T, discussion_board_warningCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussion_board_warnings and returns the data saved in the database.\n     * @param {discussion_board_warningCreateManyAndReturnArgs} args - Arguments to create many Discussion_board_warnings.\n     * @example\n     * // Create many Discussion_board_warnings\n     * const discussion_board_warning = await prisma.discussion_board_warning.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussion_board_warnings and only return the `id`\n     * const discussion_board_warningWithIdOnly = await prisma.discussion_board_warning.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussion_board_warningCreateManyAndReturnArgs>(args?: SelectSubset<T, discussion_board_warningCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_warningPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussion_board_warning.\n     * @param {discussion_board_warningDeleteArgs} args - Arguments to delete one Discussion_board_warning.\n     * @example\n     * // Delete one Discussion_board_warning\n     * const Discussion_board_warning = await prisma.discussion_board_warning.delete({\n     *   where: {\n     *     // ... filter to delete one Discussion_board_warning\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussion_board_warningDeleteArgs>(args: SelectSubset<T, discussion_board_warningDeleteArgs<ExtArgs>>): Prisma__discussion_board_warningClient<$Result.GetResult<Prisma.$discussion_board_warningPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussion_board_warning.\n     * @param {discussion_board_warningUpdateArgs} args - Arguments to update one Discussion_board_warning.\n     * @example\n     * // Update one Discussion_board_warning\n     * const discussion_board_warning = await prisma.discussion_board_warning.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussion_board_warningUpdateArgs>(args: SelectSubset<T, discussion_board_warningUpdateArgs<ExtArgs>>): Prisma__discussion_board_warningClient<$Result.GetResult<Prisma.$discussion_board_warningPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussion_board_warnings.\n     * @param {discussion_board_warningDeleteManyArgs} args - Arguments to filter Discussion_board_warnings to delete.\n     * @example\n     * // Delete a few Discussion_board_warnings\n     * const { count } = await prisma.discussion_board_warning.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussion_board_warningDeleteManyArgs>(args?: SelectSubset<T, discussion_board_warningDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_warnings.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_warningUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussion_board_warnings\n     * const discussion_board_warning = await prisma.discussion_board_warning.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussion_board_warningUpdateManyArgs>(args: SelectSubset<T, discussion_board_warningUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_warnings and returns the data updated in the database.\n     * @param {discussion_board_warningUpdateManyAndReturnArgs} args - Arguments to update many Discussion_board_warnings.\n     * @example\n     * // Update many Discussion_board_warnings\n     * const discussion_board_warning = await prisma.discussion_board_warning.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussion_board_warnings and only return the `id`\n     * const discussion_board_warningWithIdOnly = await prisma.discussion_board_warning.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussion_board_warningUpdateManyAndReturnArgs>(args: SelectSubset<T, discussion_board_warningUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_warningPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussion_board_warning.\n     * @param {discussion_board_warningUpsertArgs} args - Arguments to update or create a Discussion_board_warning.\n     * @example\n     * // Update or create a Discussion_board_warning\n     * const discussion_board_warning = await prisma.discussion_board_warning.upsert({\n     *   create: {\n     *     // ... data to create a Discussion_board_warning\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussion_board_warning we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussion_board_warningUpsertArgs>(args: SelectSubset<T, discussion_board_warningUpsertArgs<ExtArgs>>): Prisma__discussion_board_warningClient<$Result.GetResult<Prisma.$discussion_board_warningPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussion_board_warnings.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_warningCountArgs} args - Arguments to filter Discussion_board_warnings to count.\n     * @example\n     * // Count the number of Discussion_board_warnings\n     * const count = await prisma.discussion_board_warning.count({\n     *   where: {\n     *     // ... the filter for the Discussion_board_warnings we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussion_board_warningCountArgs>(\n      args?: Subset<T, discussion_board_warningCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussion_board_warningCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussion_board_warning.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussion_board_warningAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussion_board_warningAggregateArgs>(args: Subset<T, Discussion_board_warningAggregateArgs>): Prisma.PrismaPromise<GetDiscussion_board_warningAggregateType<T>>\n\n    /**\n     * Group by Discussion_board_warning.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_warningGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussion_board_warningGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussion_board_warningGroupByArgs['orderBy'] }\n        : { orderBy?: discussion_board_warningGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussion_board_warningGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussion_board_warningGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussion_board_warning model\n   */\n  readonly fields: discussion_board_warningFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussion_board_warning.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussion_board_warningClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    user<T extends discussion_board_usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_usersDefaultArgs<ExtArgs>>): Prisma__discussion_board_usersClient<$Result.GetResult<Prisma.$discussion_board_usersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    moderator<T extends discussion_board_moderatorsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_moderatorsDefaultArgs<ExtArgs>>): Prisma__discussion_board_moderatorsClient<$Result.GetResult<Prisma.$discussion_board_moderatorsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    thread<T extends discussion_board_warning$threadArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_warning$threadArgs<ExtArgs>>): Prisma__discussion_board_threadClient<$Result.GetResult<Prisma.$discussion_board_threadPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    post<T extends discussion_board_warning$postArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_warning$postArgs<ExtArgs>>): Prisma__discussion_board_postClient<$Result.GetResult<Prisma.$discussion_board_postPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    comment<T extends discussion_board_warning$commentArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_warning$commentArgs<ExtArgs>>): Prisma__discussion_board_commentClient<$Result.GetResult<Prisma.$discussion_board_commentPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    discussion_board_ban<T extends discussion_board_warning$discussion_board_banArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_warning$discussion_board_banArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_banPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussion_board_warning model\n   */\n  interface discussion_board_warningFieldRefs {\n    readonly id: FieldRef<\"discussion_board_warning\", 'String'>\n    readonly user_id: FieldRef<\"discussion_board_warning\", 'String'>\n    readonly moderator_id: FieldRef<\"discussion_board_warning\", 'String'>\n    readonly thread_id: FieldRef<\"discussion_board_warning\", 'String'>\n    readonly post_id: FieldRef<\"discussion_board_warning\", 'String'>\n    readonly comment_id: FieldRef<\"discussion_board_warning\", 'String'>\n    readonly reason: FieldRef<\"discussion_board_warning\", 'String'>\n    readonly issued_at: FieldRef<\"discussion_board_warning\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussion_board_warning findUnique\n   */\n  export type discussion_board_warningFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_warning\n     */\n    select?: discussion_board_warningSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_warning\n     */\n    omit?: discussion_board_warningOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_warningInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_warning to fetch.\n     */\n    where: discussion_board_warningWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_warning findUniqueOrThrow\n   */\n  export type discussion_board_warningFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_warning\n     */\n    select?: discussion_board_warningSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_warning\n     */\n    omit?: discussion_board_warningOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_warningInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_warning to fetch.\n     */\n    where: discussion_board_warningWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_warning findFirst\n   */\n  export type discussion_board_warningFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_warning\n     */\n    select?: discussion_board_warningSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_warning\n     */\n    omit?: discussion_board_warningOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_warningInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_warning to fetch.\n     */\n    where?: discussion_board_warningWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_warnings to fetch.\n     */\n    orderBy?: discussion_board_warningOrderByWithRelationInput | discussion_board_warningOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_warnings.\n     */\n    cursor?: discussion_board_warningWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_warnings from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_warnings.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_warnings.\n     */\n    distinct?: Discussion_board_warningScalarFieldEnum | Discussion_board_warningScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_warning findFirstOrThrow\n   */\n  export type discussion_board_warningFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_warning\n     */\n    select?: discussion_board_warningSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_warning\n     */\n    omit?: discussion_board_warningOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_warningInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_warning to fetch.\n     */\n    where?: discussion_board_warningWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_warnings to fetch.\n     */\n    orderBy?: discussion_board_warningOrderByWithRelationInput | discussion_board_warningOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_warnings.\n     */\n    cursor?: discussion_board_warningWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_warnings from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_warnings.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_warnings.\n     */\n    distinct?: Discussion_board_warningScalarFieldEnum | Discussion_board_warningScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_warning findMany\n   */\n  export type discussion_board_warningFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_warning\n     */\n    select?: discussion_board_warningSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_warning\n     */\n    omit?: discussion_board_warningOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_warningInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_warnings to fetch.\n     */\n    where?: discussion_board_warningWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_warnings to fetch.\n     */\n    orderBy?: discussion_board_warningOrderByWithRelationInput | discussion_board_warningOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussion_board_warnings.\n     */\n    cursor?: discussion_board_warningWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_warnings from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_warnings.\n     */\n    skip?: number\n    distinct?: Discussion_board_warningScalarFieldEnum | Discussion_board_warningScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_warning create\n   */\n  export type discussion_board_warningCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_warning\n     */\n    select?: discussion_board_warningSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_warning\n     */\n    omit?: discussion_board_warningOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_warningInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussion_board_warning.\n     */\n    data: XOR<discussion_board_warningCreateInput, discussion_board_warningUncheckedCreateInput>\n  }\n\n  /**\n   * discussion_board_warning createMany\n   */\n  export type discussion_board_warningCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussion_board_warnings.\n     */\n    data: discussion_board_warningCreateManyInput | discussion_board_warningCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussion_board_warning createManyAndReturn\n   */\n  export type discussion_board_warningCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_warning\n     */\n    select?: discussion_board_warningSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_warning\n     */\n    omit?: discussion_board_warningOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussion_board_warnings.\n     */\n    data: discussion_board_warningCreateManyInput | discussion_board_warningCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_warningIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_warning update\n   */\n  export type discussion_board_warningUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_warning\n     */\n    select?: discussion_board_warningSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_warning\n     */\n    omit?: discussion_board_warningOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_warningInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussion_board_warning.\n     */\n    data: XOR<discussion_board_warningUpdateInput, discussion_board_warningUncheckedUpdateInput>\n    /**\n     * Choose, which discussion_board_warning to update.\n     */\n    where: discussion_board_warningWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_warning updateMany\n   */\n  export type discussion_board_warningUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussion_board_warnings.\n     */\n    data: XOR<discussion_board_warningUpdateManyMutationInput, discussion_board_warningUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_warnings to update\n     */\n    where?: discussion_board_warningWhereInput\n    /**\n     * Limit how many discussion_board_warnings to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_warning updateManyAndReturn\n   */\n  export type discussion_board_warningUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_warning\n     */\n    select?: discussion_board_warningSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_warning\n     */\n    omit?: discussion_board_warningOmit<ExtArgs> | null\n    /**\n     * The data used to update discussion_board_warnings.\n     */\n    data: XOR<discussion_board_warningUpdateManyMutationInput, discussion_board_warningUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_warnings to update\n     */\n    where?: discussion_board_warningWhereInput\n    /**\n     * Limit how many discussion_board_warnings to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_warningIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_warning upsert\n   */\n  export type discussion_board_warningUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_warning\n     */\n    select?: discussion_board_warningSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_warning\n     */\n    omit?: discussion_board_warningOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_warningInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussion_board_warning to update in case it exists.\n     */\n    where: discussion_board_warningWhereUniqueInput\n    /**\n     * In case the discussion_board_warning found by the `where` argument doesn't exist, create a new discussion_board_warning with this data.\n     */\n    create: XOR<discussion_board_warningCreateInput, discussion_board_warningUncheckedCreateInput>\n    /**\n     * In case the discussion_board_warning was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussion_board_warningUpdateInput, discussion_board_warningUncheckedUpdateInput>\n  }\n\n  /**\n   * discussion_board_warning delete\n   */\n  export type discussion_board_warningDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_warning\n     */\n    select?: discussion_board_warningSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_warning\n     */\n    omit?: discussion_board_warningOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_warningInclude<ExtArgs> | null\n    /**\n     * Filter which discussion_board_warning to delete.\n     */\n    where: discussion_board_warningWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_warning deleteMany\n   */\n  export type discussion_board_warningDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_warnings to delete\n     */\n    where?: discussion_board_warningWhereInput\n    /**\n     * Limit how many discussion_board_warnings to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_warning.thread\n   */\n  export type discussion_board_warning$threadArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread\n     */\n    select?: discussion_board_threadSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread\n     */\n    omit?: discussion_board_threadOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_threadInclude<ExtArgs> | null\n    where?: discussion_board_threadWhereInput\n  }\n\n  /**\n   * discussion_board_warning.post\n   */\n  export type discussion_board_warning$postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_post\n     */\n    select?: discussion_board_postSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_post\n     */\n    omit?: discussion_board_postOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_postInclude<ExtArgs> | null\n    where?: discussion_board_postWhereInput\n  }\n\n  /**\n   * discussion_board_warning.comment\n   */\n  export type discussion_board_warning$commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_comment\n     */\n    select?: discussion_board_commentSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_comment\n     */\n    omit?: discussion_board_commentOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_commentInclude<ExtArgs> | null\n    where?: discussion_board_commentWhereInput\n  }\n\n  /**\n   * discussion_board_warning.discussion_board_ban\n   */\n  export type discussion_board_warning$discussion_board_banArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_ban\n     */\n    select?: discussion_board_banSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_ban\n     */\n    omit?: discussion_board_banOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_banInclude<ExtArgs> | null\n    where?: discussion_board_banWhereInput\n    orderBy?: discussion_board_banOrderByWithRelationInput | discussion_board_banOrderByWithRelationInput[]\n    cursor?: discussion_board_banWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussion_board_banScalarFieldEnum | Discussion_board_banScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_warning without action\n   */\n  export type discussion_board_warningDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_warning\n     */\n    select?: discussion_board_warningSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_warning\n     */\n    omit?: discussion_board_warningOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_warningInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussion_board_ban\n   */\n\n  export type AggregateDiscussion_board_ban = {\n    _count: Discussion_board_banCountAggregateOutputType | null\n    _min: Discussion_board_banMinAggregateOutputType | null\n    _max: Discussion_board_banMaxAggregateOutputType | null\n  }\n\n  export type Discussion_board_banMinAggregateOutputType = {\n    id: string | null\n    user_id: string | null\n    moderator_id: string | null\n    warning_id: string | null\n    report_id: string | null\n    ban_type: string | null\n    reason: string | null\n    banned_at: Date | null\n    expires_at: Date | null\n  }\n\n  export type Discussion_board_banMaxAggregateOutputType = {\n    id: string | null\n    user_id: string | null\n    moderator_id: string | null\n    warning_id: string | null\n    report_id: string | null\n    ban_type: string | null\n    reason: string | null\n    banned_at: Date | null\n    expires_at: Date | null\n  }\n\n  export type Discussion_board_banCountAggregateOutputType = {\n    id: number\n    user_id: number\n    moderator_id: number\n    warning_id: number\n    report_id: number\n    ban_type: number\n    reason: number\n    banned_at: number\n    expires_at: number\n    _all: number\n  }\n\n\n  export type Discussion_board_banMinAggregateInputType = {\n    id?: true\n    user_id?: true\n    moderator_id?: true\n    warning_id?: true\n    report_id?: true\n    ban_type?: true\n    reason?: true\n    banned_at?: true\n    expires_at?: true\n  }\n\n  export type Discussion_board_banMaxAggregateInputType = {\n    id?: true\n    user_id?: true\n    moderator_id?: true\n    warning_id?: true\n    report_id?: true\n    ban_type?: true\n    reason?: true\n    banned_at?: true\n    expires_at?: true\n  }\n\n  export type Discussion_board_banCountAggregateInputType = {\n    id?: true\n    user_id?: true\n    moderator_id?: true\n    warning_id?: true\n    report_id?: true\n    ban_type?: true\n    reason?: true\n    banned_at?: true\n    expires_at?: true\n    _all?: true\n  }\n\n  export type Discussion_board_banAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_ban to aggregate.\n     */\n    where?: discussion_board_banWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_bans to fetch.\n     */\n    orderBy?: discussion_board_banOrderByWithRelationInput | discussion_board_banOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussion_board_banWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_bans from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_bans.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussion_board_bans\n    **/\n    _count?: true | Discussion_board_banCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussion_board_banMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussion_board_banMaxAggregateInputType\n  }\n\n  export type GetDiscussion_board_banAggregateType<T extends Discussion_board_banAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussion_board_ban]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussion_board_ban[P]>\n      : GetScalarType<T[P], AggregateDiscussion_board_ban[P]>\n  }\n\n\n\n\n  export type discussion_board_banGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_banWhereInput\n    orderBy?: discussion_board_banOrderByWithAggregationInput | discussion_board_banOrderByWithAggregationInput[]\n    by: Discussion_board_banScalarFieldEnum[] | Discussion_board_banScalarFieldEnum\n    having?: discussion_board_banScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussion_board_banCountAggregateInputType | true\n    _min?: Discussion_board_banMinAggregateInputType\n    _max?: Discussion_board_banMaxAggregateInputType\n  }\n\n  export type Discussion_board_banGroupByOutputType = {\n    id: string\n    user_id: string\n    moderator_id: string\n    warning_id: string | null\n    report_id: string | null\n    ban_type: string\n    reason: string\n    banned_at: Date\n    expires_at: Date | null\n    _count: Discussion_board_banCountAggregateOutputType | null\n    _min: Discussion_board_banMinAggregateOutputType | null\n    _max: Discussion_board_banMaxAggregateOutputType | null\n  }\n\n  type GetDiscussion_board_banGroupByPayload<T extends discussion_board_banGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussion_board_banGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussion_board_banGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussion_board_banGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussion_board_banGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussion_board_banSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    moderator_id?: boolean\n    warning_id?: boolean\n    report_id?: boolean\n    ban_type?: boolean\n    reason?: boolean\n    banned_at?: boolean\n    expires_at?: boolean\n    user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    moderator?: boolean | discussion_board_moderatorsDefaultArgs<ExtArgs>\n    warning?: boolean | discussion_board_ban$warningArgs<ExtArgs>\n    report?: boolean | discussion_board_ban$reportArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_ban\"]>\n\n  export type discussion_board_banSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    moderator_id?: boolean\n    warning_id?: boolean\n    report_id?: boolean\n    ban_type?: boolean\n    reason?: boolean\n    banned_at?: boolean\n    expires_at?: boolean\n    user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    moderator?: boolean | discussion_board_moderatorsDefaultArgs<ExtArgs>\n    warning?: boolean | discussion_board_ban$warningArgs<ExtArgs>\n    report?: boolean | discussion_board_ban$reportArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_ban\"]>\n\n  export type discussion_board_banSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    user_id?: boolean\n    moderator_id?: boolean\n    warning_id?: boolean\n    report_id?: boolean\n    ban_type?: boolean\n    reason?: boolean\n    banned_at?: boolean\n    expires_at?: boolean\n    user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    moderator?: boolean | discussion_board_moderatorsDefaultArgs<ExtArgs>\n    warning?: boolean | discussion_board_ban$warningArgs<ExtArgs>\n    report?: boolean | discussion_board_ban$reportArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_ban\"]>\n\n  export type discussion_board_banSelectScalar = {\n    id?: boolean\n    user_id?: boolean\n    moderator_id?: boolean\n    warning_id?: boolean\n    report_id?: boolean\n    ban_type?: boolean\n    reason?: boolean\n    banned_at?: boolean\n    expires_at?: boolean\n  }\n\n  export type discussion_board_banOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"user_id\" | \"moderator_id\" | \"warning_id\" | \"report_id\" | \"ban_type\" | \"reason\" | \"banned_at\" | \"expires_at\", ExtArgs[\"result\"][\"discussion_board_ban\"]>\n  export type discussion_board_banInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    moderator?: boolean | discussion_board_moderatorsDefaultArgs<ExtArgs>\n    warning?: boolean | discussion_board_ban$warningArgs<ExtArgs>\n    report?: boolean | discussion_board_ban$reportArgs<ExtArgs>\n  }\n  export type discussion_board_banIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    moderator?: boolean | discussion_board_moderatorsDefaultArgs<ExtArgs>\n    warning?: boolean | discussion_board_ban$warningArgs<ExtArgs>\n    report?: boolean | discussion_board_ban$reportArgs<ExtArgs>\n  }\n  export type discussion_board_banIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n    moderator?: boolean | discussion_board_moderatorsDefaultArgs<ExtArgs>\n    warning?: boolean | discussion_board_ban$warningArgs<ExtArgs>\n    report?: boolean | discussion_board_ban$reportArgs<ExtArgs>\n  }\n\n  export type $discussion_board_banPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussion_board_ban\"\n    objects: {\n      user: Prisma.$discussion_board_usersPayload<ExtArgs>\n      moderator: Prisma.$discussion_board_moderatorsPayload<ExtArgs>\n      warning: Prisma.$discussion_board_warningPayload<ExtArgs> | null\n      report: Prisma.$discussion_board_reportPayload<ExtArgs> | null\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * [Primary Key] - Unique ban record. Used for referencing in audit logs and reversals. Normalization: one row per ban event.\n       */\n      id: string\n      /**\n       * [User FK] - Banned user. Normalization: ensures canonical reference; never duplicated user information.\n       */\n      user_id: string\n      /**\n       * [Moderator FK] - Moderator responsible for ban/termination. Only references, never duplicates mod identity.\n       */\n      moderator_id: string\n      /**\n       * [Warning FK] - Warning event that triggered this ban (if relevant). Null unless escalation. Maintains normalization.\n       */\n      warning_id: string | null\n      /**\n       * [Report FK] - Abuse report that resulted in ban (if relevant). Provides direct traceability and keeps schema normalized.\n       */\n      report_id: string | null\n      /**\n       * [Ban Type] - 'temporary' or 'permanent'. Application logic defines allowed enum. Keeps atomic, normalized per ban row.\n       */\n      ban_type: string\n      /**\n       * [Ban Reason] - Atomic string detailing moderator justification for ban.\n       */\n      reason: string\n      /**\n       * [Ban Start] - When ban was applied. For ongoing compliance and system checks.\n       */\n      banned_at: Date\n      /**\n       * [Ban Expiry] - Ban end (null if permanent). Keeps type atomic and supports dynamic unbanning.\n       */\n      expires_at: Date | null\n    }, ExtArgs[\"result\"][\"discussion_board_ban\"]>\n    composites: {}\n  }\n\n  type discussion_board_banGetPayload<S extends boolean | null | undefined | discussion_board_banDefaultArgs> = $Result.GetResult<Prisma.$discussion_board_banPayload, S>\n\n  type discussion_board_banCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussion_board_banFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussion_board_banCountAggregateInputType | true\n    }\n\n  export interface discussion_board_banDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussion_board_ban'], meta: { name: 'discussion_board_ban' } }\n    /**\n     * Find zero or one Discussion_board_ban that matches the filter.\n     * @param {discussion_board_banFindUniqueArgs} args - Arguments to find a Discussion_board_ban\n     * @example\n     * // Get one Discussion_board_ban\n     * const discussion_board_ban = await prisma.discussion_board_ban.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussion_board_banFindUniqueArgs>(args: SelectSubset<T, discussion_board_banFindUniqueArgs<ExtArgs>>): Prisma__discussion_board_banClient<$Result.GetResult<Prisma.$discussion_board_banPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussion_board_ban that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussion_board_banFindUniqueOrThrowArgs} args - Arguments to find a Discussion_board_ban\n     * @example\n     * // Get one Discussion_board_ban\n     * const discussion_board_ban = await prisma.discussion_board_ban.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussion_board_banFindUniqueOrThrowArgs>(args: SelectSubset<T, discussion_board_banFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussion_board_banClient<$Result.GetResult<Prisma.$discussion_board_banPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_ban that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_banFindFirstArgs} args - Arguments to find a Discussion_board_ban\n     * @example\n     * // Get one Discussion_board_ban\n     * const discussion_board_ban = await prisma.discussion_board_ban.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussion_board_banFindFirstArgs>(args?: SelectSubset<T, discussion_board_banFindFirstArgs<ExtArgs>>): Prisma__discussion_board_banClient<$Result.GetResult<Prisma.$discussion_board_banPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_ban that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_banFindFirstOrThrowArgs} args - Arguments to find a Discussion_board_ban\n     * @example\n     * // Get one Discussion_board_ban\n     * const discussion_board_ban = await prisma.discussion_board_ban.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussion_board_banFindFirstOrThrowArgs>(args?: SelectSubset<T, discussion_board_banFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussion_board_banClient<$Result.GetResult<Prisma.$discussion_board_banPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussion_board_bans that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_banFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussion_board_bans\n     * const discussion_board_bans = await prisma.discussion_board_ban.findMany()\n     * \n     * // Get first 10 Discussion_board_bans\n     * const discussion_board_bans = await prisma.discussion_board_ban.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussion_board_banWithIdOnly = await prisma.discussion_board_ban.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussion_board_banFindManyArgs>(args?: SelectSubset<T, discussion_board_banFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_banPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussion_board_ban.\n     * @param {discussion_board_banCreateArgs} args - Arguments to create a Discussion_board_ban.\n     * @example\n     * // Create one Discussion_board_ban\n     * const Discussion_board_ban = await prisma.discussion_board_ban.create({\n     *   data: {\n     *     // ... data to create a Discussion_board_ban\n     *   }\n     * })\n     * \n     */\n    create<T extends discussion_board_banCreateArgs>(args: SelectSubset<T, discussion_board_banCreateArgs<ExtArgs>>): Prisma__discussion_board_banClient<$Result.GetResult<Prisma.$discussion_board_banPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussion_board_bans.\n     * @param {discussion_board_banCreateManyArgs} args - Arguments to create many Discussion_board_bans.\n     * @example\n     * // Create many Discussion_board_bans\n     * const discussion_board_ban = await prisma.discussion_board_ban.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussion_board_banCreateManyArgs>(args?: SelectSubset<T, discussion_board_banCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussion_board_bans and returns the data saved in the database.\n     * @param {discussion_board_banCreateManyAndReturnArgs} args - Arguments to create many Discussion_board_bans.\n     * @example\n     * // Create many Discussion_board_bans\n     * const discussion_board_ban = await prisma.discussion_board_ban.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussion_board_bans and only return the `id`\n     * const discussion_board_banWithIdOnly = await prisma.discussion_board_ban.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussion_board_banCreateManyAndReturnArgs>(args?: SelectSubset<T, discussion_board_banCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_banPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussion_board_ban.\n     * @param {discussion_board_banDeleteArgs} args - Arguments to delete one Discussion_board_ban.\n     * @example\n     * // Delete one Discussion_board_ban\n     * const Discussion_board_ban = await prisma.discussion_board_ban.delete({\n     *   where: {\n     *     // ... filter to delete one Discussion_board_ban\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussion_board_banDeleteArgs>(args: SelectSubset<T, discussion_board_banDeleteArgs<ExtArgs>>): Prisma__discussion_board_banClient<$Result.GetResult<Prisma.$discussion_board_banPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussion_board_ban.\n     * @param {discussion_board_banUpdateArgs} args - Arguments to update one Discussion_board_ban.\n     * @example\n     * // Update one Discussion_board_ban\n     * const discussion_board_ban = await prisma.discussion_board_ban.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussion_board_banUpdateArgs>(args: SelectSubset<T, discussion_board_banUpdateArgs<ExtArgs>>): Prisma__discussion_board_banClient<$Result.GetResult<Prisma.$discussion_board_banPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussion_board_bans.\n     * @param {discussion_board_banDeleteManyArgs} args - Arguments to filter Discussion_board_bans to delete.\n     * @example\n     * // Delete a few Discussion_board_bans\n     * const { count } = await prisma.discussion_board_ban.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussion_board_banDeleteManyArgs>(args?: SelectSubset<T, discussion_board_banDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_bans.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_banUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussion_board_bans\n     * const discussion_board_ban = await prisma.discussion_board_ban.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussion_board_banUpdateManyArgs>(args: SelectSubset<T, discussion_board_banUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_bans and returns the data updated in the database.\n     * @param {discussion_board_banUpdateManyAndReturnArgs} args - Arguments to update many Discussion_board_bans.\n     * @example\n     * // Update many Discussion_board_bans\n     * const discussion_board_ban = await prisma.discussion_board_ban.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussion_board_bans and only return the `id`\n     * const discussion_board_banWithIdOnly = await prisma.discussion_board_ban.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussion_board_banUpdateManyAndReturnArgs>(args: SelectSubset<T, discussion_board_banUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_banPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussion_board_ban.\n     * @param {discussion_board_banUpsertArgs} args - Arguments to update or create a Discussion_board_ban.\n     * @example\n     * // Update or create a Discussion_board_ban\n     * const discussion_board_ban = await prisma.discussion_board_ban.upsert({\n     *   create: {\n     *     // ... data to create a Discussion_board_ban\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussion_board_ban we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussion_board_banUpsertArgs>(args: SelectSubset<T, discussion_board_banUpsertArgs<ExtArgs>>): Prisma__discussion_board_banClient<$Result.GetResult<Prisma.$discussion_board_banPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussion_board_bans.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_banCountArgs} args - Arguments to filter Discussion_board_bans to count.\n     * @example\n     * // Count the number of Discussion_board_bans\n     * const count = await prisma.discussion_board_ban.count({\n     *   where: {\n     *     // ... the filter for the Discussion_board_bans we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussion_board_banCountArgs>(\n      args?: Subset<T, discussion_board_banCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussion_board_banCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussion_board_ban.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussion_board_banAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussion_board_banAggregateArgs>(args: Subset<T, Discussion_board_banAggregateArgs>): Prisma.PrismaPromise<GetDiscussion_board_banAggregateType<T>>\n\n    /**\n     * Group by Discussion_board_ban.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_banGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussion_board_banGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussion_board_banGroupByArgs['orderBy'] }\n        : { orderBy?: discussion_board_banGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussion_board_banGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussion_board_banGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussion_board_ban model\n   */\n  readonly fields: discussion_board_banFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussion_board_ban.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussion_board_banClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    user<T extends discussion_board_usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_usersDefaultArgs<ExtArgs>>): Prisma__discussion_board_usersClient<$Result.GetResult<Prisma.$discussion_board_usersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    moderator<T extends discussion_board_moderatorsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_moderatorsDefaultArgs<ExtArgs>>): Prisma__discussion_board_moderatorsClient<$Result.GetResult<Prisma.$discussion_board_moderatorsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    warning<T extends discussion_board_ban$warningArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_ban$warningArgs<ExtArgs>>): Prisma__discussion_board_warningClient<$Result.GetResult<Prisma.$discussion_board_warningPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    report<T extends discussion_board_ban$reportArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_ban$reportArgs<ExtArgs>>): Prisma__discussion_board_reportClient<$Result.GetResult<Prisma.$discussion_board_reportPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussion_board_ban model\n   */\n  interface discussion_board_banFieldRefs {\n    readonly id: FieldRef<\"discussion_board_ban\", 'String'>\n    readonly user_id: FieldRef<\"discussion_board_ban\", 'String'>\n    readonly moderator_id: FieldRef<\"discussion_board_ban\", 'String'>\n    readonly warning_id: FieldRef<\"discussion_board_ban\", 'String'>\n    readonly report_id: FieldRef<\"discussion_board_ban\", 'String'>\n    readonly ban_type: FieldRef<\"discussion_board_ban\", 'String'>\n    readonly reason: FieldRef<\"discussion_board_ban\", 'String'>\n    readonly banned_at: FieldRef<\"discussion_board_ban\", 'DateTime'>\n    readonly expires_at: FieldRef<\"discussion_board_ban\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussion_board_ban findUnique\n   */\n  export type discussion_board_banFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_ban\n     */\n    select?: discussion_board_banSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_ban\n     */\n    omit?: discussion_board_banOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_banInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_ban to fetch.\n     */\n    where: discussion_board_banWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_ban findUniqueOrThrow\n   */\n  export type discussion_board_banFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_ban\n     */\n    select?: discussion_board_banSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_ban\n     */\n    omit?: discussion_board_banOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_banInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_ban to fetch.\n     */\n    where: discussion_board_banWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_ban findFirst\n   */\n  export type discussion_board_banFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_ban\n     */\n    select?: discussion_board_banSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_ban\n     */\n    omit?: discussion_board_banOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_banInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_ban to fetch.\n     */\n    where?: discussion_board_banWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_bans to fetch.\n     */\n    orderBy?: discussion_board_banOrderByWithRelationInput | discussion_board_banOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_bans.\n     */\n    cursor?: discussion_board_banWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_bans from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_bans.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_bans.\n     */\n    distinct?: Discussion_board_banScalarFieldEnum | Discussion_board_banScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_ban findFirstOrThrow\n   */\n  export type discussion_board_banFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_ban\n     */\n    select?: discussion_board_banSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_ban\n     */\n    omit?: discussion_board_banOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_banInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_ban to fetch.\n     */\n    where?: discussion_board_banWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_bans to fetch.\n     */\n    orderBy?: discussion_board_banOrderByWithRelationInput | discussion_board_banOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_bans.\n     */\n    cursor?: discussion_board_banWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_bans from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_bans.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_bans.\n     */\n    distinct?: Discussion_board_banScalarFieldEnum | Discussion_board_banScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_ban findMany\n   */\n  export type discussion_board_banFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_ban\n     */\n    select?: discussion_board_banSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_ban\n     */\n    omit?: discussion_board_banOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_banInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_bans to fetch.\n     */\n    where?: discussion_board_banWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_bans to fetch.\n     */\n    orderBy?: discussion_board_banOrderByWithRelationInput | discussion_board_banOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussion_board_bans.\n     */\n    cursor?: discussion_board_banWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_bans from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_bans.\n     */\n    skip?: number\n    distinct?: Discussion_board_banScalarFieldEnum | Discussion_board_banScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_ban create\n   */\n  export type discussion_board_banCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_ban\n     */\n    select?: discussion_board_banSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_ban\n     */\n    omit?: discussion_board_banOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_banInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussion_board_ban.\n     */\n    data: XOR<discussion_board_banCreateInput, discussion_board_banUncheckedCreateInput>\n  }\n\n  /**\n   * discussion_board_ban createMany\n   */\n  export type discussion_board_banCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussion_board_bans.\n     */\n    data: discussion_board_banCreateManyInput | discussion_board_banCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussion_board_ban createManyAndReturn\n   */\n  export type discussion_board_banCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_ban\n     */\n    select?: discussion_board_banSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_ban\n     */\n    omit?: discussion_board_banOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussion_board_bans.\n     */\n    data: discussion_board_banCreateManyInput | discussion_board_banCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_banIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_ban update\n   */\n  export type discussion_board_banUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_ban\n     */\n    select?: discussion_board_banSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_ban\n     */\n    omit?: discussion_board_banOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_banInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussion_board_ban.\n     */\n    data: XOR<discussion_board_banUpdateInput, discussion_board_banUncheckedUpdateInput>\n    /**\n     * Choose, which discussion_board_ban to update.\n     */\n    where: discussion_board_banWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_ban updateMany\n   */\n  export type discussion_board_banUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussion_board_bans.\n     */\n    data: XOR<discussion_board_banUpdateManyMutationInput, discussion_board_banUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_bans to update\n     */\n    where?: discussion_board_banWhereInput\n    /**\n     * Limit how many discussion_board_bans to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_ban updateManyAndReturn\n   */\n  export type discussion_board_banUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_ban\n     */\n    select?: discussion_board_banSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_ban\n     */\n    omit?: discussion_board_banOmit<ExtArgs> | null\n    /**\n     * The data used to update discussion_board_bans.\n     */\n    data: XOR<discussion_board_banUpdateManyMutationInput, discussion_board_banUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_bans to update\n     */\n    where?: discussion_board_banWhereInput\n    /**\n     * Limit how many discussion_board_bans to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_banIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_ban upsert\n   */\n  export type discussion_board_banUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_ban\n     */\n    select?: discussion_board_banSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_ban\n     */\n    omit?: discussion_board_banOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_banInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussion_board_ban to update in case it exists.\n     */\n    where: discussion_board_banWhereUniqueInput\n    /**\n     * In case the discussion_board_ban found by the `where` argument doesn't exist, create a new discussion_board_ban with this data.\n     */\n    create: XOR<discussion_board_banCreateInput, discussion_board_banUncheckedCreateInput>\n    /**\n     * In case the discussion_board_ban was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussion_board_banUpdateInput, discussion_board_banUncheckedUpdateInput>\n  }\n\n  /**\n   * discussion_board_ban delete\n   */\n  export type discussion_board_banDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_ban\n     */\n    select?: discussion_board_banSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_ban\n     */\n    omit?: discussion_board_banOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_banInclude<ExtArgs> | null\n    /**\n     * Filter which discussion_board_ban to delete.\n     */\n    where: discussion_board_banWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_ban deleteMany\n   */\n  export type discussion_board_banDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_bans to delete\n     */\n    where?: discussion_board_banWhereInput\n    /**\n     * Limit how many discussion_board_bans to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_ban.warning\n   */\n  export type discussion_board_ban$warningArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_warning\n     */\n    select?: discussion_board_warningSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_warning\n     */\n    omit?: discussion_board_warningOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_warningInclude<ExtArgs> | null\n    where?: discussion_board_warningWhereInput\n  }\n\n  /**\n   * discussion_board_ban.report\n   */\n  export type discussion_board_ban$reportArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_report\n     */\n    select?: discussion_board_reportSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_report\n     */\n    omit?: discussion_board_reportOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_reportInclude<ExtArgs> | null\n    where?: discussion_board_reportWhereInput\n  }\n\n  /**\n   * discussion_board_ban without action\n   */\n  export type discussion_board_banDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_ban\n     */\n    select?: discussion_board_banSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_ban\n     */\n    omit?: discussion_board_banOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_banInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussion_board_thread_stats\n   */\n\n  export type AggregateDiscussion_board_thread_stats = {\n    _count: Discussion_board_thread_statsCountAggregateOutputType | null\n    _avg: Discussion_board_thread_statsAvgAggregateOutputType | null\n    _sum: Discussion_board_thread_statsSumAggregateOutputType | null\n    _min: Discussion_board_thread_statsMinAggregateOutputType | null\n    _max: Discussion_board_thread_statsMaxAggregateOutputType | null\n  }\n\n  export type Discussion_board_thread_statsAvgAggregateOutputType = {\n    post_count: number | null\n    comment_count: number | null\n    upvote_count: number | null\n    downvote_count: number | null\n    bookmark_count: number | null\n    abuse_report_count: number | null\n  }\n\n  export type Discussion_board_thread_statsSumAggregateOutputType = {\n    post_count: number | null\n    comment_count: number | null\n    upvote_count: number | null\n    downvote_count: number | null\n    bookmark_count: number | null\n    abuse_report_count: number | null\n  }\n\n  export type Discussion_board_thread_statsMinAggregateOutputType = {\n    id: string | null\n    discussion_board_thread_id: string | null\n    post_count: number | null\n    comment_count: number | null\n    upvote_count: number | null\n    downvote_count: number | null\n    bookmark_count: number | null\n    abuse_report_count: number | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Discussion_board_thread_statsMaxAggregateOutputType = {\n    id: string | null\n    discussion_board_thread_id: string | null\n    post_count: number | null\n    comment_count: number | null\n    upvote_count: number | null\n    downvote_count: number | null\n    bookmark_count: number | null\n    abuse_report_count: number | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Discussion_board_thread_statsCountAggregateOutputType = {\n    id: number\n    discussion_board_thread_id: number\n    post_count: number\n    comment_count: number\n    upvote_count: number\n    downvote_count: number\n    bookmark_count: number\n    abuse_report_count: number\n    created_at: number\n    updated_at: number\n    _all: number\n  }\n\n\n  export type Discussion_board_thread_statsAvgAggregateInputType = {\n    post_count?: true\n    comment_count?: true\n    upvote_count?: true\n    downvote_count?: true\n    bookmark_count?: true\n    abuse_report_count?: true\n  }\n\n  export type Discussion_board_thread_statsSumAggregateInputType = {\n    post_count?: true\n    comment_count?: true\n    upvote_count?: true\n    downvote_count?: true\n    bookmark_count?: true\n    abuse_report_count?: true\n  }\n\n  export type Discussion_board_thread_statsMinAggregateInputType = {\n    id?: true\n    discussion_board_thread_id?: true\n    post_count?: true\n    comment_count?: true\n    upvote_count?: true\n    downvote_count?: true\n    bookmark_count?: true\n    abuse_report_count?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Discussion_board_thread_statsMaxAggregateInputType = {\n    id?: true\n    discussion_board_thread_id?: true\n    post_count?: true\n    comment_count?: true\n    upvote_count?: true\n    downvote_count?: true\n    bookmark_count?: true\n    abuse_report_count?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Discussion_board_thread_statsCountAggregateInputType = {\n    id?: true\n    discussion_board_thread_id?: true\n    post_count?: true\n    comment_count?: true\n    upvote_count?: true\n    downvote_count?: true\n    bookmark_count?: true\n    abuse_report_count?: true\n    created_at?: true\n    updated_at?: true\n    _all?: true\n  }\n\n  export type Discussion_board_thread_statsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_thread_stats to aggregate.\n     */\n    where?: discussion_board_thread_statsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_thread_stats to fetch.\n     */\n    orderBy?: discussion_board_thread_statsOrderByWithRelationInput | discussion_board_thread_statsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussion_board_thread_statsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_thread_stats from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_thread_stats.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussion_board_thread_stats\n    **/\n    _count?: true | Discussion_board_thread_statsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to average\n    **/\n    _avg?: Discussion_board_thread_statsAvgAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to sum\n    **/\n    _sum?: Discussion_board_thread_statsSumAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussion_board_thread_statsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussion_board_thread_statsMaxAggregateInputType\n  }\n\n  export type GetDiscussion_board_thread_statsAggregateType<T extends Discussion_board_thread_statsAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussion_board_thread_stats]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussion_board_thread_stats[P]>\n      : GetScalarType<T[P], AggregateDiscussion_board_thread_stats[P]>\n  }\n\n\n\n\n  export type discussion_board_thread_statsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_thread_statsWhereInput\n    orderBy?: discussion_board_thread_statsOrderByWithAggregationInput | discussion_board_thread_statsOrderByWithAggregationInput[]\n    by: Discussion_board_thread_statsScalarFieldEnum[] | Discussion_board_thread_statsScalarFieldEnum\n    having?: discussion_board_thread_statsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussion_board_thread_statsCountAggregateInputType | true\n    _avg?: Discussion_board_thread_statsAvgAggregateInputType\n    _sum?: Discussion_board_thread_statsSumAggregateInputType\n    _min?: Discussion_board_thread_statsMinAggregateInputType\n    _max?: Discussion_board_thread_statsMaxAggregateInputType\n  }\n\n  export type Discussion_board_thread_statsGroupByOutputType = {\n    id: string\n    discussion_board_thread_id: string\n    post_count: number\n    comment_count: number\n    upvote_count: number\n    downvote_count: number\n    bookmark_count: number\n    abuse_report_count: number\n    created_at: Date\n    updated_at: Date\n    _count: Discussion_board_thread_statsCountAggregateOutputType | null\n    _avg: Discussion_board_thread_statsAvgAggregateOutputType | null\n    _sum: Discussion_board_thread_statsSumAggregateOutputType | null\n    _min: Discussion_board_thread_statsMinAggregateOutputType | null\n    _max: Discussion_board_thread_statsMaxAggregateOutputType | null\n  }\n\n  type GetDiscussion_board_thread_statsGroupByPayload<T extends discussion_board_thread_statsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussion_board_thread_statsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussion_board_thread_statsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussion_board_thread_statsGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussion_board_thread_statsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussion_board_thread_statsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussion_board_thread_id?: boolean\n    post_count?: boolean\n    comment_count?: boolean\n    upvote_count?: boolean\n    downvote_count?: boolean\n    bookmark_count?: boolean\n    abuse_report_count?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    discussion_board_thread?: boolean | discussion_board_threadDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_thread_stats\"]>\n\n  export type discussion_board_thread_statsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussion_board_thread_id?: boolean\n    post_count?: boolean\n    comment_count?: boolean\n    upvote_count?: boolean\n    downvote_count?: boolean\n    bookmark_count?: boolean\n    abuse_report_count?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    discussion_board_thread?: boolean | discussion_board_threadDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_thread_stats\"]>\n\n  export type discussion_board_thread_statsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussion_board_thread_id?: boolean\n    post_count?: boolean\n    comment_count?: boolean\n    upvote_count?: boolean\n    downvote_count?: boolean\n    bookmark_count?: boolean\n    abuse_report_count?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    discussion_board_thread?: boolean | discussion_board_threadDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_thread_stats\"]>\n\n  export type discussion_board_thread_statsSelectScalar = {\n    id?: boolean\n    discussion_board_thread_id?: boolean\n    post_count?: boolean\n    comment_count?: boolean\n    upvote_count?: boolean\n    downvote_count?: boolean\n    bookmark_count?: boolean\n    abuse_report_count?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }\n\n  export type discussion_board_thread_statsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"discussion_board_thread_id\" | \"post_count\" | \"comment_count\" | \"upvote_count\" | \"downvote_count\" | \"bookmark_count\" | \"abuse_report_count\" | \"created_at\" | \"updated_at\", ExtArgs[\"result\"][\"discussion_board_thread_stats\"]>\n  export type discussion_board_thread_statsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussion_board_thread?: boolean | discussion_board_threadDefaultArgs<ExtArgs>\n  }\n  export type discussion_board_thread_statsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussion_board_thread?: boolean | discussion_board_threadDefaultArgs<ExtArgs>\n  }\n  export type discussion_board_thread_statsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussion_board_thread?: boolean | discussion_board_threadDefaultArgs<ExtArgs>\n  }\n\n  export type $discussion_board_thread_statsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussion_board_thread_stats\"\n    objects: {\n      discussion_board_thread: Prisma.$discussion_board_threadPayload<ExtArgs>\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key - Implements unique, stable identification for each thread statistics record.\n       * \n       * Uniquely identifies statistics per thread. Ensures normalization as the single-row-per-thread record anchor. Example: Used as the foreign key reference from other analytic or reporting systems.\n       */\n      id: string\n      /**\n       * Thread Reference - Implements the mapping from statistics to the corresponding thread.\n       * \n       * Connects per-thread statistics to its primary discussion thread. Enforces normalization and referential integrity: every set of stats must belong to a valid thread. Example: When calculating trending topics, stats are filtered/grouped by this association. Constraint: Unique per thread.\n       */\n      discussion_board_thread_id: string\n      /**\n       * Post Count - Implements tracking of total posts per thread.\n       * \n       * Atomic and normalized: not derived, just incremented via logic. Example: Used for ranking or showing thread activity level.\n       */\n      post_count: number\n      /**\n       * Comment Count - Implements tracking of comment volume per thread.\n       * \n       * Normalized, not computed from joins—only incremented or decremented on comment add/delete. For example, used to quickly filter threads with high participation.\n       */\n      comment_count: number\n      /**\n       * Upvote Count - Implements part of engagement analytics per thread.\n       * \n       * Atomic, directly updated, not derived from votes table. Used for popularity display and filters. Normalized and non-redundant.\n       */\n      upvote_count: number\n      /**\n       * Downvote Count - Complements engagement analytics, enables controversial thread detection.\n       * \n       * Atomic field, directly maintained—not computed on the fly or denormalized from votes. Used in sort/filter, supports normalization by not including aggregate scores elsewhere.\n       */\n      downvote_count: number\n      /**\n       * Bookmark Count - Tracks unique user bookmarks for this thread.\n       * \n       * Atomic integer, normalized: no redundant storage in user or thread tables. Helps power user feed and favorites lists.\n       */\n      bookmark_count: number\n      /**\n       * Abuse Report Count - Implements monitoring/reporting for moderation triggers.\n       * \n       * Atomic, not computed; updated as users report content. For example, threads hitting a certain threshold show up in moderation dashboards. Supports auditing and quality control without polluting main business records.\n       */\n      abuse_report_count: number\n      /**\n       * Created At Timestamp - Implements record origination tracking.\n       * \n       * Atomic timestamp, supports audit, migration, and compliance. Example: Used by analytics for time-based trends.\n       */\n      created_at: Date\n      /**\n       * Updated At Timestamp - Implements update tracking for stats changes.\n       * \n       * Ensures all stats edits are tracked and assists with synchronization/auditing. Required for compliant analytics and consistent service behavior.\n       */\n      updated_at: Date\n    }, ExtArgs[\"result\"][\"discussion_board_thread_stats\"]>\n    composites: {}\n  }\n\n  type discussion_board_thread_statsGetPayload<S extends boolean | null | undefined | discussion_board_thread_statsDefaultArgs> = $Result.GetResult<Prisma.$discussion_board_thread_statsPayload, S>\n\n  type discussion_board_thread_statsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussion_board_thread_statsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussion_board_thread_statsCountAggregateInputType | true\n    }\n\n  export interface discussion_board_thread_statsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussion_board_thread_stats'], meta: { name: 'discussion_board_thread_stats' } }\n    /**\n     * Find zero or one Discussion_board_thread_stats that matches the filter.\n     * @param {discussion_board_thread_statsFindUniqueArgs} args - Arguments to find a Discussion_board_thread_stats\n     * @example\n     * // Get one Discussion_board_thread_stats\n     * const discussion_board_thread_stats = await prisma.discussion_board_thread_stats.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussion_board_thread_statsFindUniqueArgs>(args: SelectSubset<T, discussion_board_thread_statsFindUniqueArgs<ExtArgs>>): Prisma__discussion_board_thread_statsClient<$Result.GetResult<Prisma.$discussion_board_thread_statsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussion_board_thread_stats that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussion_board_thread_statsFindUniqueOrThrowArgs} args - Arguments to find a Discussion_board_thread_stats\n     * @example\n     * // Get one Discussion_board_thread_stats\n     * const discussion_board_thread_stats = await prisma.discussion_board_thread_stats.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussion_board_thread_statsFindUniqueOrThrowArgs>(args: SelectSubset<T, discussion_board_thread_statsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussion_board_thread_statsClient<$Result.GetResult<Prisma.$discussion_board_thread_statsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_thread_stats that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_thread_statsFindFirstArgs} args - Arguments to find a Discussion_board_thread_stats\n     * @example\n     * // Get one Discussion_board_thread_stats\n     * const discussion_board_thread_stats = await prisma.discussion_board_thread_stats.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussion_board_thread_statsFindFirstArgs>(args?: SelectSubset<T, discussion_board_thread_statsFindFirstArgs<ExtArgs>>): Prisma__discussion_board_thread_statsClient<$Result.GetResult<Prisma.$discussion_board_thread_statsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_thread_stats that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_thread_statsFindFirstOrThrowArgs} args - Arguments to find a Discussion_board_thread_stats\n     * @example\n     * // Get one Discussion_board_thread_stats\n     * const discussion_board_thread_stats = await prisma.discussion_board_thread_stats.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussion_board_thread_statsFindFirstOrThrowArgs>(args?: SelectSubset<T, discussion_board_thread_statsFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussion_board_thread_statsClient<$Result.GetResult<Prisma.$discussion_board_thread_statsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussion_board_thread_stats that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_thread_statsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussion_board_thread_stats\n     * const discussion_board_thread_stats = await prisma.discussion_board_thread_stats.findMany()\n     * \n     * // Get first 10 Discussion_board_thread_stats\n     * const discussion_board_thread_stats = await prisma.discussion_board_thread_stats.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussion_board_thread_statsWithIdOnly = await prisma.discussion_board_thread_stats.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussion_board_thread_statsFindManyArgs>(args?: SelectSubset<T, discussion_board_thread_statsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_thread_statsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussion_board_thread_stats.\n     * @param {discussion_board_thread_statsCreateArgs} args - Arguments to create a Discussion_board_thread_stats.\n     * @example\n     * // Create one Discussion_board_thread_stats\n     * const Discussion_board_thread_stats = await prisma.discussion_board_thread_stats.create({\n     *   data: {\n     *     // ... data to create a Discussion_board_thread_stats\n     *   }\n     * })\n     * \n     */\n    create<T extends discussion_board_thread_statsCreateArgs>(args: SelectSubset<T, discussion_board_thread_statsCreateArgs<ExtArgs>>): Prisma__discussion_board_thread_statsClient<$Result.GetResult<Prisma.$discussion_board_thread_statsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussion_board_thread_stats.\n     * @param {discussion_board_thread_statsCreateManyArgs} args - Arguments to create many Discussion_board_thread_stats.\n     * @example\n     * // Create many Discussion_board_thread_stats\n     * const discussion_board_thread_stats = await prisma.discussion_board_thread_stats.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussion_board_thread_statsCreateManyArgs>(args?: SelectSubset<T, discussion_board_thread_statsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussion_board_thread_stats and returns the data saved in the database.\n     * @param {discussion_board_thread_statsCreateManyAndReturnArgs} args - Arguments to create many Discussion_board_thread_stats.\n     * @example\n     * // Create many Discussion_board_thread_stats\n     * const discussion_board_thread_stats = await prisma.discussion_board_thread_stats.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussion_board_thread_stats and only return the `id`\n     * const discussion_board_thread_statsWithIdOnly = await prisma.discussion_board_thread_stats.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussion_board_thread_statsCreateManyAndReturnArgs>(args?: SelectSubset<T, discussion_board_thread_statsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_thread_statsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussion_board_thread_stats.\n     * @param {discussion_board_thread_statsDeleteArgs} args - Arguments to delete one Discussion_board_thread_stats.\n     * @example\n     * // Delete one Discussion_board_thread_stats\n     * const Discussion_board_thread_stats = await prisma.discussion_board_thread_stats.delete({\n     *   where: {\n     *     // ... filter to delete one Discussion_board_thread_stats\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussion_board_thread_statsDeleteArgs>(args: SelectSubset<T, discussion_board_thread_statsDeleteArgs<ExtArgs>>): Prisma__discussion_board_thread_statsClient<$Result.GetResult<Prisma.$discussion_board_thread_statsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussion_board_thread_stats.\n     * @param {discussion_board_thread_statsUpdateArgs} args - Arguments to update one Discussion_board_thread_stats.\n     * @example\n     * // Update one Discussion_board_thread_stats\n     * const discussion_board_thread_stats = await prisma.discussion_board_thread_stats.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussion_board_thread_statsUpdateArgs>(args: SelectSubset<T, discussion_board_thread_statsUpdateArgs<ExtArgs>>): Prisma__discussion_board_thread_statsClient<$Result.GetResult<Prisma.$discussion_board_thread_statsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussion_board_thread_stats.\n     * @param {discussion_board_thread_statsDeleteManyArgs} args - Arguments to filter Discussion_board_thread_stats to delete.\n     * @example\n     * // Delete a few Discussion_board_thread_stats\n     * const { count } = await prisma.discussion_board_thread_stats.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussion_board_thread_statsDeleteManyArgs>(args?: SelectSubset<T, discussion_board_thread_statsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_thread_stats.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_thread_statsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussion_board_thread_stats\n     * const discussion_board_thread_stats = await prisma.discussion_board_thread_stats.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussion_board_thread_statsUpdateManyArgs>(args: SelectSubset<T, discussion_board_thread_statsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_thread_stats and returns the data updated in the database.\n     * @param {discussion_board_thread_statsUpdateManyAndReturnArgs} args - Arguments to update many Discussion_board_thread_stats.\n     * @example\n     * // Update many Discussion_board_thread_stats\n     * const discussion_board_thread_stats = await prisma.discussion_board_thread_stats.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussion_board_thread_stats and only return the `id`\n     * const discussion_board_thread_statsWithIdOnly = await prisma.discussion_board_thread_stats.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussion_board_thread_statsUpdateManyAndReturnArgs>(args: SelectSubset<T, discussion_board_thread_statsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_thread_statsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussion_board_thread_stats.\n     * @param {discussion_board_thread_statsUpsertArgs} args - Arguments to update or create a Discussion_board_thread_stats.\n     * @example\n     * // Update or create a Discussion_board_thread_stats\n     * const discussion_board_thread_stats = await prisma.discussion_board_thread_stats.upsert({\n     *   create: {\n     *     // ... data to create a Discussion_board_thread_stats\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussion_board_thread_stats we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussion_board_thread_statsUpsertArgs>(args: SelectSubset<T, discussion_board_thread_statsUpsertArgs<ExtArgs>>): Prisma__discussion_board_thread_statsClient<$Result.GetResult<Prisma.$discussion_board_thread_statsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussion_board_thread_stats.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_thread_statsCountArgs} args - Arguments to filter Discussion_board_thread_stats to count.\n     * @example\n     * // Count the number of Discussion_board_thread_stats\n     * const count = await prisma.discussion_board_thread_stats.count({\n     *   where: {\n     *     // ... the filter for the Discussion_board_thread_stats we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussion_board_thread_statsCountArgs>(\n      args?: Subset<T, discussion_board_thread_statsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussion_board_thread_statsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussion_board_thread_stats.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussion_board_thread_statsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussion_board_thread_statsAggregateArgs>(args: Subset<T, Discussion_board_thread_statsAggregateArgs>): Prisma.PrismaPromise<GetDiscussion_board_thread_statsAggregateType<T>>\n\n    /**\n     * Group by Discussion_board_thread_stats.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_thread_statsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussion_board_thread_statsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussion_board_thread_statsGroupByArgs['orderBy'] }\n        : { orderBy?: discussion_board_thread_statsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussion_board_thread_statsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussion_board_thread_statsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussion_board_thread_stats model\n   */\n  readonly fields: discussion_board_thread_statsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussion_board_thread_stats.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussion_board_thread_statsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    discussion_board_thread<T extends discussion_board_threadDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_threadDefaultArgs<ExtArgs>>): Prisma__discussion_board_threadClient<$Result.GetResult<Prisma.$discussion_board_threadPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussion_board_thread_stats model\n   */\n  interface discussion_board_thread_statsFieldRefs {\n    readonly id: FieldRef<\"discussion_board_thread_stats\", 'String'>\n    readonly discussion_board_thread_id: FieldRef<\"discussion_board_thread_stats\", 'String'>\n    readonly post_count: FieldRef<\"discussion_board_thread_stats\", 'Int'>\n    readonly comment_count: FieldRef<\"discussion_board_thread_stats\", 'Int'>\n    readonly upvote_count: FieldRef<\"discussion_board_thread_stats\", 'Int'>\n    readonly downvote_count: FieldRef<\"discussion_board_thread_stats\", 'Int'>\n    readonly bookmark_count: FieldRef<\"discussion_board_thread_stats\", 'Int'>\n    readonly abuse_report_count: FieldRef<\"discussion_board_thread_stats\", 'Int'>\n    readonly created_at: FieldRef<\"discussion_board_thread_stats\", 'DateTime'>\n    readonly updated_at: FieldRef<\"discussion_board_thread_stats\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussion_board_thread_stats findUnique\n   */\n  export type discussion_board_thread_statsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread_stats\n     */\n    select?: discussion_board_thread_statsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread_stats\n     */\n    omit?: discussion_board_thread_statsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_thread_statsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_thread_stats to fetch.\n     */\n    where: discussion_board_thread_statsWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_thread_stats findUniqueOrThrow\n   */\n  export type discussion_board_thread_statsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread_stats\n     */\n    select?: discussion_board_thread_statsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread_stats\n     */\n    omit?: discussion_board_thread_statsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_thread_statsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_thread_stats to fetch.\n     */\n    where: discussion_board_thread_statsWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_thread_stats findFirst\n   */\n  export type discussion_board_thread_statsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread_stats\n     */\n    select?: discussion_board_thread_statsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread_stats\n     */\n    omit?: discussion_board_thread_statsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_thread_statsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_thread_stats to fetch.\n     */\n    where?: discussion_board_thread_statsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_thread_stats to fetch.\n     */\n    orderBy?: discussion_board_thread_statsOrderByWithRelationInput | discussion_board_thread_statsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_thread_stats.\n     */\n    cursor?: discussion_board_thread_statsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_thread_stats from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_thread_stats.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_thread_stats.\n     */\n    distinct?: Discussion_board_thread_statsScalarFieldEnum | Discussion_board_thread_statsScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_thread_stats findFirstOrThrow\n   */\n  export type discussion_board_thread_statsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread_stats\n     */\n    select?: discussion_board_thread_statsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread_stats\n     */\n    omit?: discussion_board_thread_statsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_thread_statsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_thread_stats to fetch.\n     */\n    where?: discussion_board_thread_statsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_thread_stats to fetch.\n     */\n    orderBy?: discussion_board_thread_statsOrderByWithRelationInput | discussion_board_thread_statsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_thread_stats.\n     */\n    cursor?: discussion_board_thread_statsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_thread_stats from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_thread_stats.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_thread_stats.\n     */\n    distinct?: Discussion_board_thread_statsScalarFieldEnum | Discussion_board_thread_statsScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_thread_stats findMany\n   */\n  export type discussion_board_thread_statsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread_stats\n     */\n    select?: discussion_board_thread_statsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread_stats\n     */\n    omit?: discussion_board_thread_statsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_thread_statsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_thread_stats to fetch.\n     */\n    where?: discussion_board_thread_statsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_thread_stats to fetch.\n     */\n    orderBy?: discussion_board_thread_statsOrderByWithRelationInput | discussion_board_thread_statsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussion_board_thread_stats.\n     */\n    cursor?: discussion_board_thread_statsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_thread_stats from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_thread_stats.\n     */\n    skip?: number\n    distinct?: Discussion_board_thread_statsScalarFieldEnum | Discussion_board_thread_statsScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_thread_stats create\n   */\n  export type discussion_board_thread_statsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread_stats\n     */\n    select?: discussion_board_thread_statsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread_stats\n     */\n    omit?: discussion_board_thread_statsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_thread_statsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussion_board_thread_stats.\n     */\n    data: XOR<discussion_board_thread_statsCreateInput, discussion_board_thread_statsUncheckedCreateInput>\n  }\n\n  /**\n   * discussion_board_thread_stats createMany\n   */\n  export type discussion_board_thread_statsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussion_board_thread_stats.\n     */\n    data: discussion_board_thread_statsCreateManyInput | discussion_board_thread_statsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussion_board_thread_stats createManyAndReturn\n   */\n  export type discussion_board_thread_statsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread_stats\n     */\n    select?: discussion_board_thread_statsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread_stats\n     */\n    omit?: discussion_board_thread_statsOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussion_board_thread_stats.\n     */\n    data: discussion_board_thread_statsCreateManyInput | discussion_board_thread_statsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_thread_statsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_thread_stats update\n   */\n  export type discussion_board_thread_statsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread_stats\n     */\n    select?: discussion_board_thread_statsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread_stats\n     */\n    omit?: discussion_board_thread_statsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_thread_statsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussion_board_thread_stats.\n     */\n    data: XOR<discussion_board_thread_statsUpdateInput, discussion_board_thread_statsUncheckedUpdateInput>\n    /**\n     * Choose, which discussion_board_thread_stats to update.\n     */\n    where: discussion_board_thread_statsWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_thread_stats updateMany\n   */\n  export type discussion_board_thread_statsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussion_board_thread_stats.\n     */\n    data: XOR<discussion_board_thread_statsUpdateManyMutationInput, discussion_board_thread_statsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_thread_stats to update\n     */\n    where?: discussion_board_thread_statsWhereInput\n    /**\n     * Limit how many discussion_board_thread_stats to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_thread_stats updateManyAndReturn\n   */\n  export type discussion_board_thread_statsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread_stats\n     */\n    select?: discussion_board_thread_statsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread_stats\n     */\n    omit?: discussion_board_thread_statsOmit<ExtArgs> | null\n    /**\n     * The data used to update discussion_board_thread_stats.\n     */\n    data: XOR<discussion_board_thread_statsUpdateManyMutationInput, discussion_board_thread_statsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_thread_stats to update\n     */\n    where?: discussion_board_thread_statsWhereInput\n    /**\n     * Limit how many discussion_board_thread_stats to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_thread_statsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_thread_stats upsert\n   */\n  export type discussion_board_thread_statsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread_stats\n     */\n    select?: discussion_board_thread_statsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread_stats\n     */\n    omit?: discussion_board_thread_statsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_thread_statsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussion_board_thread_stats to update in case it exists.\n     */\n    where: discussion_board_thread_statsWhereUniqueInput\n    /**\n     * In case the discussion_board_thread_stats found by the `where` argument doesn't exist, create a new discussion_board_thread_stats with this data.\n     */\n    create: XOR<discussion_board_thread_statsCreateInput, discussion_board_thread_statsUncheckedCreateInput>\n    /**\n     * In case the discussion_board_thread_stats was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussion_board_thread_statsUpdateInput, discussion_board_thread_statsUncheckedUpdateInput>\n  }\n\n  /**\n   * discussion_board_thread_stats delete\n   */\n  export type discussion_board_thread_statsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread_stats\n     */\n    select?: discussion_board_thread_statsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread_stats\n     */\n    omit?: discussion_board_thread_statsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_thread_statsInclude<ExtArgs> | null\n    /**\n     * Filter which discussion_board_thread_stats to delete.\n     */\n    where: discussion_board_thread_statsWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_thread_stats deleteMany\n   */\n  export type discussion_board_thread_statsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_thread_stats to delete\n     */\n    where?: discussion_board_thread_statsWhereInput\n    /**\n     * Limit how many discussion_board_thread_stats to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_thread_stats without action\n   */\n  export type discussion_board_thread_statsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_thread_stats\n     */\n    select?: discussion_board_thread_statsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_thread_stats\n     */\n    omit?: discussion_board_thread_statsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_thread_statsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussion_board_user_activity\n   */\n\n  export type AggregateDiscussion_board_user_activity = {\n    _count: Discussion_board_user_activityCountAggregateOutputType | null\n    _avg: Discussion_board_user_activityAvgAggregateOutputType | null\n    _sum: Discussion_board_user_activitySumAggregateOutputType | null\n    _min: Discussion_board_user_activityMinAggregateOutputType | null\n    _max: Discussion_board_user_activityMaxAggregateOutputType | null\n  }\n\n  export type Discussion_board_user_activityAvgAggregateOutputType = {\n    threads_authored: number | null\n    posts_authored: number | null\n    comments_authored: number | null\n    upvotes_given: number | null\n    downvotes_given: number | null\n    reports_made: number | null\n    bookmarks_created: number | null\n  }\n\n  export type Discussion_board_user_activitySumAggregateOutputType = {\n    threads_authored: number | null\n    posts_authored: number | null\n    comments_authored: number | null\n    upvotes_given: number | null\n    downvotes_given: number | null\n    reports_made: number | null\n    bookmarks_created: number | null\n  }\n\n  export type Discussion_board_user_activityMinAggregateOutputType = {\n    id: string | null\n    discussion_board_user_id: string | null\n    threads_authored: number | null\n    posts_authored: number | null\n    comments_authored: number | null\n    upvotes_given: number | null\n    downvotes_given: number | null\n    reports_made: number | null\n    bookmarks_created: number | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Discussion_board_user_activityMaxAggregateOutputType = {\n    id: string | null\n    discussion_board_user_id: string | null\n    threads_authored: number | null\n    posts_authored: number | null\n    comments_authored: number | null\n    upvotes_given: number | null\n    downvotes_given: number | null\n    reports_made: number | null\n    bookmarks_created: number | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Discussion_board_user_activityCountAggregateOutputType = {\n    id: number\n    discussion_board_user_id: number\n    threads_authored: number\n    posts_authored: number\n    comments_authored: number\n    upvotes_given: number\n    downvotes_given: number\n    reports_made: number\n    bookmarks_created: number\n    created_at: number\n    updated_at: number\n    _all: number\n  }\n\n\n  export type Discussion_board_user_activityAvgAggregateInputType = {\n    threads_authored?: true\n    posts_authored?: true\n    comments_authored?: true\n    upvotes_given?: true\n    downvotes_given?: true\n    reports_made?: true\n    bookmarks_created?: true\n  }\n\n  export type Discussion_board_user_activitySumAggregateInputType = {\n    threads_authored?: true\n    posts_authored?: true\n    comments_authored?: true\n    upvotes_given?: true\n    downvotes_given?: true\n    reports_made?: true\n    bookmarks_created?: true\n  }\n\n  export type Discussion_board_user_activityMinAggregateInputType = {\n    id?: true\n    discussion_board_user_id?: true\n    threads_authored?: true\n    posts_authored?: true\n    comments_authored?: true\n    upvotes_given?: true\n    downvotes_given?: true\n    reports_made?: true\n    bookmarks_created?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Discussion_board_user_activityMaxAggregateInputType = {\n    id?: true\n    discussion_board_user_id?: true\n    threads_authored?: true\n    posts_authored?: true\n    comments_authored?: true\n    upvotes_given?: true\n    downvotes_given?: true\n    reports_made?: true\n    bookmarks_created?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Discussion_board_user_activityCountAggregateInputType = {\n    id?: true\n    discussion_board_user_id?: true\n    threads_authored?: true\n    posts_authored?: true\n    comments_authored?: true\n    upvotes_given?: true\n    downvotes_given?: true\n    reports_made?: true\n    bookmarks_created?: true\n    created_at?: true\n    updated_at?: true\n    _all?: true\n  }\n\n  export type Discussion_board_user_activityAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_user_activity to aggregate.\n     */\n    where?: discussion_board_user_activityWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_user_activities to fetch.\n     */\n    orderBy?: discussion_board_user_activityOrderByWithRelationInput | discussion_board_user_activityOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussion_board_user_activityWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_user_activities from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_user_activities.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussion_board_user_activities\n    **/\n    _count?: true | Discussion_board_user_activityCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to average\n    **/\n    _avg?: Discussion_board_user_activityAvgAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to sum\n    **/\n    _sum?: Discussion_board_user_activitySumAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussion_board_user_activityMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussion_board_user_activityMaxAggregateInputType\n  }\n\n  export type GetDiscussion_board_user_activityAggregateType<T extends Discussion_board_user_activityAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussion_board_user_activity]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussion_board_user_activity[P]>\n      : GetScalarType<T[P], AggregateDiscussion_board_user_activity[P]>\n  }\n\n\n\n\n  export type discussion_board_user_activityGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_user_activityWhereInput\n    orderBy?: discussion_board_user_activityOrderByWithAggregationInput | discussion_board_user_activityOrderByWithAggregationInput[]\n    by: Discussion_board_user_activityScalarFieldEnum[] | Discussion_board_user_activityScalarFieldEnum\n    having?: discussion_board_user_activityScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussion_board_user_activityCountAggregateInputType | true\n    _avg?: Discussion_board_user_activityAvgAggregateInputType\n    _sum?: Discussion_board_user_activitySumAggregateInputType\n    _min?: Discussion_board_user_activityMinAggregateInputType\n    _max?: Discussion_board_user_activityMaxAggregateInputType\n  }\n\n  export type Discussion_board_user_activityGroupByOutputType = {\n    id: string\n    discussion_board_user_id: string\n    threads_authored: number\n    posts_authored: number\n    comments_authored: number\n    upvotes_given: number\n    downvotes_given: number\n    reports_made: number\n    bookmarks_created: number\n    created_at: Date\n    updated_at: Date\n    _count: Discussion_board_user_activityCountAggregateOutputType | null\n    _avg: Discussion_board_user_activityAvgAggregateOutputType | null\n    _sum: Discussion_board_user_activitySumAggregateOutputType | null\n    _min: Discussion_board_user_activityMinAggregateOutputType | null\n    _max: Discussion_board_user_activityMaxAggregateOutputType | null\n  }\n\n  type GetDiscussion_board_user_activityGroupByPayload<T extends discussion_board_user_activityGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussion_board_user_activityGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussion_board_user_activityGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussion_board_user_activityGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussion_board_user_activityGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussion_board_user_activitySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussion_board_user_id?: boolean\n    threads_authored?: boolean\n    posts_authored?: boolean\n    comments_authored?: boolean\n    upvotes_given?: boolean\n    downvotes_given?: boolean\n    reports_made?: boolean\n    bookmarks_created?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    discussion_board_user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_user_activity\"]>\n\n  export type discussion_board_user_activitySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussion_board_user_id?: boolean\n    threads_authored?: boolean\n    posts_authored?: boolean\n    comments_authored?: boolean\n    upvotes_given?: boolean\n    downvotes_given?: boolean\n    reports_made?: boolean\n    bookmarks_created?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    discussion_board_user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_user_activity\"]>\n\n  export type discussion_board_user_activitySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussion_board_user_id?: boolean\n    threads_authored?: boolean\n    posts_authored?: boolean\n    comments_authored?: boolean\n    upvotes_given?: boolean\n    downvotes_given?: boolean\n    reports_made?: boolean\n    bookmarks_created?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    discussion_board_user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_user_activity\"]>\n\n  export type discussion_board_user_activitySelectScalar = {\n    id?: boolean\n    discussion_board_user_id?: boolean\n    threads_authored?: boolean\n    posts_authored?: boolean\n    comments_authored?: boolean\n    upvotes_given?: boolean\n    downvotes_given?: boolean\n    reports_made?: boolean\n    bookmarks_created?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }\n\n  export type discussion_board_user_activityOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"discussion_board_user_id\" | \"threads_authored\" | \"posts_authored\" | \"comments_authored\" | \"upvotes_given\" | \"downvotes_given\" | \"reports_made\" | \"bookmarks_created\" | \"created_at\" | \"updated_at\", ExtArgs[\"result\"][\"discussion_board_user_activity\"]>\n  export type discussion_board_user_activityInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussion_board_user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n  }\n  export type discussion_board_user_activityIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussion_board_user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n  }\n  export type discussion_board_user_activityIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussion_board_user?: boolean | discussion_board_usersDefaultArgs<ExtArgs>\n  }\n\n  export type $discussion_board_user_activityPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussion_board_user_activity\"\n    objects: {\n      discussion_board_user: Prisma.$discussion_board_usersPayload<ExtArgs>\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key - Uniquely identifies each user activity metrics record.\n       * \n       * Guarantees one-to-one mapping with user entity for their aggregated metrics. 3NF: no derived data here—core activity metrics only.\n       */\n      id: string\n      /**\n       * User Reference - Links metrics to an individual user account.\n       * \n       * Supports referential integrity and 3NF: all metrics are for a real, valid user only. Example: Used when building profile dashboards or leaderboard features.\n       */\n      discussion_board_user_id: string\n      /**\n       * Threads Authored - Counts threads created by this user.\n       * \n       * Atomic, not derived elsewhere. Used in calculating engagement or reputation features.\n       */\n      threads_authored: number\n      /**\n       * Posts Authored - Number of initial posts (not comments) started by the user.\n       * \n       * Maintains normalization—no redundancy with thread or post tables.\n       */\n      posts_authored: number\n      /**\n       * Comments Authored - Tracks comment participation for this user.\n       * \n       * Atomic value, 3NF compliant. Used in moderation, reputation calculations, and personalized analytics.\n       */\n      comments_authored: number\n      /**\n       * Upvotes Given - Number of times the user upvoted a thread or comment.\n       * \n       * Normalization: never derived, direct update only. Enables analysis of engagement and supports anti-abuse monitoring.\n       */\n      upvotes_given: number\n      /**\n       * Downvotes Given - Number of downvote actions performed by user.\n       * \n       * Atomic and non-redundant. Used for abuse pattern analysis and community flavor metrics.\n       */\n      downvotes_given: number\n      /**\n       * Reports Made - Total reports submitted by user for abusive/inappropriate content.\n       * \n       * Enables anti-abuse metrics, moderation insights, and potential restrictions for frequent false reporters. 3NF: only original counts are stored.\n       */\n      reports_made: number\n      /**\n       * Bookmarks Created - Tracks count of bookmarks a user has made.\n       * \n       * Atomic field for UX features like favorites. Complies with normalization—bookmarks data not duplicated here.\n       */\n      bookmarks_created: number\n      /**\n       * Created At Timestamp - When the activity metrics record was created.\n       * \n       * Supports audit and traceability for compliance and analytics.\n       */\n      created_at: Date\n      /**\n       * Updated At Timestamp - Last time user metrics were updated.\n       * \n       * Required for synchronization, analytics workflows, and audit trail features.\n       */\n      updated_at: Date\n    }, ExtArgs[\"result\"][\"discussion_board_user_activity\"]>\n    composites: {}\n  }\n\n  type discussion_board_user_activityGetPayload<S extends boolean | null | undefined | discussion_board_user_activityDefaultArgs> = $Result.GetResult<Prisma.$discussion_board_user_activityPayload, S>\n\n  type discussion_board_user_activityCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussion_board_user_activityFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussion_board_user_activityCountAggregateInputType | true\n    }\n\n  export interface discussion_board_user_activityDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussion_board_user_activity'], meta: { name: 'discussion_board_user_activity' } }\n    /**\n     * Find zero or one Discussion_board_user_activity that matches the filter.\n     * @param {discussion_board_user_activityFindUniqueArgs} args - Arguments to find a Discussion_board_user_activity\n     * @example\n     * // Get one Discussion_board_user_activity\n     * const discussion_board_user_activity = await prisma.discussion_board_user_activity.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussion_board_user_activityFindUniqueArgs>(args: SelectSubset<T, discussion_board_user_activityFindUniqueArgs<ExtArgs>>): Prisma__discussion_board_user_activityClient<$Result.GetResult<Prisma.$discussion_board_user_activityPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussion_board_user_activity that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussion_board_user_activityFindUniqueOrThrowArgs} args - Arguments to find a Discussion_board_user_activity\n     * @example\n     * // Get one Discussion_board_user_activity\n     * const discussion_board_user_activity = await prisma.discussion_board_user_activity.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussion_board_user_activityFindUniqueOrThrowArgs>(args: SelectSubset<T, discussion_board_user_activityFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussion_board_user_activityClient<$Result.GetResult<Prisma.$discussion_board_user_activityPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_user_activity that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_user_activityFindFirstArgs} args - Arguments to find a Discussion_board_user_activity\n     * @example\n     * // Get one Discussion_board_user_activity\n     * const discussion_board_user_activity = await prisma.discussion_board_user_activity.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussion_board_user_activityFindFirstArgs>(args?: SelectSubset<T, discussion_board_user_activityFindFirstArgs<ExtArgs>>): Prisma__discussion_board_user_activityClient<$Result.GetResult<Prisma.$discussion_board_user_activityPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_user_activity that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_user_activityFindFirstOrThrowArgs} args - Arguments to find a Discussion_board_user_activity\n     * @example\n     * // Get one Discussion_board_user_activity\n     * const discussion_board_user_activity = await prisma.discussion_board_user_activity.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussion_board_user_activityFindFirstOrThrowArgs>(args?: SelectSubset<T, discussion_board_user_activityFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussion_board_user_activityClient<$Result.GetResult<Prisma.$discussion_board_user_activityPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussion_board_user_activities that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_user_activityFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussion_board_user_activities\n     * const discussion_board_user_activities = await prisma.discussion_board_user_activity.findMany()\n     * \n     * // Get first 10 Discussion_board_user_activities\n     * const discussion_board_user_activities = await prisma.discussion_board_user_activity.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussion_board_user_activityWithIdOnly = await prisma.discussion_board_user_activity.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussion_board_user_activityFindManyArgs>(args?: SelectSubset<T, discussion_board_user_activityFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_user_activityPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussion_board_user_activity.\n     * @param {discussion_board_user_activityCreateArgs} args - Arguments to create a Discussion_board_user_activity.\n     * @example\n     * // Create one Discussion_board_user_activity\n     * const Discussion_board_user_activity = await prisma.discussion_board_user_activity.create({\n     *   data: {\n     *     // ... data to create a Discussion_board_user_activity\n     *   }\n     * })\n     * \n     */\n    create<T extends discussion_board_user_activityCreateArgs>(args: SelectSubset<T, discussion_board_user_activityCreateArgs<ExtArgs>>): Prisma__discussion_board_user_activityClient<$Result.GetResult<Prisma.$discussion_board_user_activityPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussion_board_user_activities.\n     * @param {discussion_board_user_activityCreateManyArgs} args - Arguments to create many Discussion_board_user_activities.\n     * @example\n     * // Create many Discussion_board_user_activities\n     * const discussion_board_user_activity = await prisma.discussion_board_user_activity.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussion_board_user_activityCreateManyArgs>(args?: SelectSubset<T, discussion_board_user_activityCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussion_board_user_activities and returns the data saved in the database.\n     * @param {discussion_board_user_activityCreateManyAndReturnArgs} args - Arguments to create many Discussion_board_user_activities.\n     * @example\n     * // Create many Discussion_board_user_activities\n     * const discussion_board_user_activity = await prisma.discussion_board_user_activity.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussion_board_user_activities and only return the `id`\n     * const discussion_board_user_activityWithIdOnly = await prisma.discussion_board_user_activity.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussion_board_user_activityCreateManyAndReturnArgs>(args?: SelectSubset<T, discussion_board_user_activityCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_user_activityPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussion_board_user_activity.\n     * @param {discussion_board_user_activityDeleteArgs} args - Arguments to delete one Discussion_board_user_activity.\n     * @example\n     * // Delete one Discussion_board_user_activity\n     * const Discussion_board_user_activity = await prisma.discussion_board_user_activity.delete({\n     *   where: {\n     *     // ... filter to delete one Discussion_board_user_activity\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussion_board_user_activityDeleteArgs>(args: SelectSubset<T, discussion_board_user_activityDeleteArgs<ExtArgs>>): Prisma__discussion_board_user_activityClient<$Result.GetResult<Prisma.$discussion_board_user_activityPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussion_board_user_activity.\n     * @param {discussion_board_user_activityUpdateArgs} args - Arguments to update one Discussion_board_user_activity.\n     * @example\n     * // Update one Discussion_board_user_activity\n     * const discussion_board_user_activity = await prisma.discussion_board_user_activity.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussion_board_user_activityUpdateArgs>(args: SelectSubset<T, discussion_board_user_activityUpdateArgs<ExtArgs>>): Prisma__discussion_board_user_activityClient<$Result.GetResult<Prisma.$discussion_board_user_activityPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussion_board_user_activities.\n     * @param {discussion_board_user_activityDeleteManyArgs} args - Arguments to filter Discussion_board_user_activities to delete.\n     * @example\n     * // Delete a few Discussion_board_user_activities\n     * const { count } = await prisma.discussion_board_user_activity.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussion_board_user_activityDeleteManyArgs>(args?: SelectSubset<T, discussion_board_user_activityDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_user_activities.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_user_activityUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussion_board_user_activities\n     * const discussion_board_user_activity = await prisma.discussion_board_user_activity.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussion_board_user_activityUpdateManyArgs>(args: SelectSubset<T, discussion_board_user_activityUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_user_activities and returns the data updated in the database.\n     * @param {discussion_board_user_activityUpdateManyAndReturnArgs} args - Arguments to update many Discussion_board_user_activities.\n     * @example\n     * // Update many Discussion_board_user_activities\n     * const discussion_board_user_activity = await prisma.discussion_board_user_activity.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussion_board_user_activities and only return the `id`\n     * const discussion_board_user_activityWithIdOnly = await prisma.discussion_board_user_activity.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussion_board_user_activityUpdateManyAndReturnArgs>(args: SelectSubset<T, discussion_board_user_activityUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_user_activityPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussion_board_user_activity.\n     * @param {discussion_board_user_activityUpsertArgs} args - Arguments to update or create a Discussion_board_user_activity.\n     * @example\n     * // Update or create a Discussion_board_user_activity\n     * const discussion_board_user_activity = await prisma.discussion_board_user_activity.upsert({\n     *   create: {\n     *     // ... data to create a Discussion_board_user_activity\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussion_board_user_activity we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussion_board_user_activityUpsertArgs>(args: SelectSubset<T, discussion_board_user_activityUpsertArgs<ExtArgs>>): Prisma__discussion_board_user_activityClient<$Result.GetResult<Prisma.$discussion_board_user_activityPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussion_board_user_activities.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_user_activityCountArgs} args - Arguments to filter Discussion_board_user_activities to count.\n     * @example\n     * // Count the number of Discussion_board_user_activities\n     * const count = await prisma.discussion_board_user_activity.count({\n     *   where: {\n     *     // ... the filter for the Discussion_board_user_activities we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussion_board_user_activityCountArgs>(\n      args?: Subset<T, discussion_board_user_activityCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussion_board_user_activityCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussion_board_user_activity.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussion_board_user_activityAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussion_board_user_activityAggregateArgs>(args: Subset<T, Discussion_board_user_activityAggregateArgs>): Prisma.PrismaPromise<GetDiscussion_board_user_activityAggregateType<T>>\n\n    /**\n     * Group by Discussion_board_user_activity.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_user_activityGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussion_board_user_activityGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussion_board_user_activityGroupByArgs['orderBy'] }\n        : { orderBy?: discussion_board_user_activityGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussion_board_user_activityGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussion_board_user_activityGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussion_board_user_activity model\n   */\n  readonly fields: discussion_board_user_activityFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussion_board_user_activity.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussion_board_user_activityClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    discussion_board_user<T extends discussion_board_usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_usersDefaultArgs<ExtArgs>>): Prisma__discussion_board_usersClient<$Result.GetResult<Prisma.$discussion_board_usersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussion_board_user_activity model\n   */\n  interface discussion_board_user_activityFieldRefs {\n    readonly id: FieldRef<\"discussion_board_user_activity\", 'String'>\n    readonly discussion_board_user_id: FieldRef<\"discussion_board_user_activity\", 'String'>\n    readonly threads_authored: FieldRef<\"discussion_board_user_activity\", 'Int'>\n    readonly posts_authored: FieldRef<\"discussion_board_user_activity\", 'Int'>\n    readonly comments_authored: FieldRef<\"discussion_board_user_activity\", 'Int'>\n    readonly upvotes_given: FieldRef<\"discussion_board_user_activity\", 'Int'>\n    readonly downvotes_given: FieldRef<\"discussion_board_user_activity\", 'Int'>\n    readonly reports_made: FieldRef<\"discussion_board_user_activity\", 'Int'>\n    readonly bookmarks_created: FieldRef<\"discussion_board_user_activity\", 'Int'>\n    readonly created_at: FieldRef<\"discussion_board_user_activity\", 'DateTime'>\n    readonly updated_at: FieldRef<\"discussion_board_user_activity\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussion_board_user_activity findUnique\n   */\n  export type discussion_board_user_activityFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_user_activity\n     */\n    select?: discussion_board_user_activitySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_user_activity\n     */\n    omit?: discussion_board_user_activityOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_user_activityInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_user_activity to fetch.\n     */\n    where: discussion_board_user_activityWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_user_activity findUniqueOrThrow\n   */\n  export type discussion_board_user_activityFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_user_activity\n     */\n    select?: discussion_board_user_activitySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_user_activity\n     */\n    omit?: discussion_board_user_activityOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_user_activityInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_user_activity to fetch.\n     */\n    where: discussion_board_user_activityWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_user_activity findFirst\n   */\n  export type discussion_board_user_activityFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_user_activity\n     */\n    select?: discussion_board_user_activitySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_user_activity\n     */\n    omit?: discussion_board_user_activityOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_user_activityInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_user_activity to fetch.\n     */\n    where?: discussion_board_user_activityWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_user_activities to fetch.\n     */\n    orderBy?: discussion_board_user_activityOrderByWithRelationInput | discussion_board_user_activityOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_user_activities.\n     */\n    cursor?: discussion_board_user_activityWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_user_activities from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_user_activities.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_user_activities.\n     */\n    distinct?: Discussion_board_user_activityScalarFieldEnum | Discussion_board_user_activityScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_user_activity findFirstOrThrow\n   */\n  export type discussion_board_user_activityFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_user_activity\n     */\n    select?: discussion_board_user_activitySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_user_activity\n     */\n    omit?: discussion_board_user_activityOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_user_activityInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_user_activity to fetch.\n     */\n    where?: discussion_board_user_activityWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_user_activities to fetch.\n     */\n    orderBy?: discussion_board_user_activityOrderByWithRelationInput | discussion_board_user_activityOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_user_activities.\n     */\n    cursor?: discussion_board_user_activityWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_user_activities from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_user_activities.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_user_activities.\n     */\n    distinct?: Discussion_board_user_activityScalarFieldEnum | Discussion_board_user_activityScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_user_activity findMany\n   */\n  export type discussion_board_user_activityFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_user_activity\n     */\n    select?: discussion_board_user_activitySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_user_activity\n     */\n    omit?: discussion_board_user_activityOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_user_activityInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_user_activities to fetch.\n     */\n    where?: discussion_board_user_activityWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_user_activities to fetch.\n     */\n    orderBy?: discussion_board_user_activityOrderByWithRelationInput | discussion_board_user_activityOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussion_board_user_activities.\n     */\n    cursor?: discussion_board_user_activityWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_user_activities from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_user_activities.\n     */\n    skip?: number\n    distinct?: Discussion_board_user_activityScalarFieldEnum | Discussion_board_user_activityScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_user_activity create\n   */\n  export type discussion_board_user_activityCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_user_activity\n     */\n    select?: discussion_board_user_activitySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_user_activity\n     */\n    omit?: discussion_board_user_activityOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_user_activityInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussion_board_user_activity.\n     */\n    data: XOR<discussion_board_user_activityCreateInput, discussion_board_user_activityUncheckedCreateInput>\n  }\n\n  /**\n   * discussion_board_user_activity createMany\n   */\n  export type discussion_board_user_activityCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussion_board_user_activities.\n     */\n    data: discussion_board_user_activityCreateManyInput | discussion_board_user_activityCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussion_board_user_activity createManyAndReturn\n   */\n  export type discussion_board_user_activityCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_user_activity\n     */\n    select?: discussion_board_user_activitySelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_user_activity\n     */\n    omit?: discussion_board_user_activityOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussion_board_user_activities.\n     */\n    data: discussion_board_user_activityCreateManyInput | discussion_board_user_activityCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_user_activityIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_user_activity update\n   */\n  export type discussion_board_user_activityUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_user_activity\n     */\n    select?: discussion_board_user_activitySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_user_activity\n     */\n    omit?: discussion_board_user_activityOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_user_activityInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussion_board_user_activity.\n     */\n    data: XOR<discussion_board_user_activityUpdateInput, discussion_board_user_activityUncheckedUpdateInput>\n    /**\n     * Choose, which discussion_board_user_activity to update.\n     */\n    where: discussion_board_user_activityWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_user_activity updateMany\n   */\n  export type discussion_board_user_activityUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussion_board_user_activities.\n     */\n    data: XOR<discussion_board_user_activityUpdateManyMutationInput, discussion_board_user_activityUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_user_activities to update\n     */\n    where?: discussion_board_user_activityWhereInput\n    /**\n     * Limit how many discussion_board_user_activities to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_user_activity updateManyAndReturn\n   */\n  export type discussion_board_user_activityUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_user_activity\n     */\n    select?: discussion_board_user_activitySelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_user_activity\n     */\n    omit?: discussion_board_user_activityOmit<ExtArgs> | null\n    /**\n     * The data used to update discussion_board_user_activities.\n     */\n    data: XOR<discussion_board_user_activityUpdateManyMutationInput, discussion_board_user_activityUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_user_activities to update\n     */\n    where?: discussion_board_user_activityWhereInput\n    /**\n     * Limit how many discussion_board_user_activities to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_user_activityIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_user_activity upsert\n   */\n  export type discussion_board_user_activityUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_user_activity\n     */\n    select?: discussion_board_user_activitySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_user_activity\n     */\n    omit?: discussion_board_user_activityOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_user_activityInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussion_board_user_activity to update in case it exists.\n     */\n    where: discussion_board_user_activityWhereUniqueInput\n    /**\n     * In case the discussion_board_user_activity found by the `where` argument doesn't exist, create a new discussion_board_user_activity with this data.\n     */\n    create: XOR<discussion_board_user_activityCreateInput, discussion_board_user_activityUncheckedCreateInput>\n    /**\n     * In case the discussion_board_user_activity was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussion_board_user_activityUpdateInput, discussion_board_user_activityUncheckedUpdateInput>\n  }\n\n  /**\n   * discussion_board_user_activity delete\n   */\n  export type discussion_board_user_activityDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_user_activity\n     */\n    select?: discussion_board_user_activitySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_user_activity\n     */\n    omit?: discussion_board_user_activityOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_user_activityInclude<ExtArgs> | null\n    /**\n     * Filter which discussion_board_user_activity to delete.\n     */\n    where: discussion_board_user_activityWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_user_activity deleteMany\n   */\n  export type discussion_board_user_activityDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_user_activities to delete\n     */\n    where?: discussion_board_user_activityWhereInput\n    /**\n     * Limit how many discussion_board_user_activities to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_user_activity without action\n   */\n  export type discussion_board_user_activityDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_user_activity\n     */\n    select?: discussion_board_user_activitySelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_user_activity\n     */\n    omit?: discussion_board_user_activityOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_user_activityInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussion_board_content_abuse_metric\n   */\n\n  export type AggregateDiscussion_board_content_abuse_metric = {\n    _count: Discussion_board_content_abuse_metricCountAggregateOutputType | null\n    _avg: Discussion_board_content_abuse_metricAvgAggregateOutputType | null\n    _sum: Discussion_board_content_abuse_metricSumAggregateOutputType | null\n    _min: Discussion_board_content_abuse_metricMinAggregateOutputType | null\n    _max: Discussion_board_content_abuse_metricMaxAggregateOutputType | null\n  }\n\n  export type Discussion_board_content_abuse_metricAvgAggregateOutputType = {\n    flagged_count: number | null\n    auto_hidden_count: number | null\n    escalation_count: number | null\n    false_positive_count: number | null\n    avg_resolution_time_minutes: number | null\n  }\n\n  export type Discussion_board_content_abuse_metricSumAggregateOutputType = {\n    flagged_count: number | null\n    auto_hidden_count: number | null\n    escalation_count: number | null\n    false_positive_count: number | null\n    avg_resolution_time_minutes: number | null\n  }\n\n  export type Discussion_board_content_abuse_metricMinAggregateOutputType = {\n    id: string | null\n    moderator_id: string | null\n    date: string | null\n    abuse_type: string | null\n    flagged_count: number | null\n    auto_hidden_count: number | null\n    escalation_count: number | null\n    false_positive_count: number | null\n    avg_resolution_time_minutes: number | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Discussion_board_content_abuse_metricMaxAggregateOutputType = {\n    id: string | null\n    moderator_id: string | null\n    date: string | null\n    abuse_type: string | null\n    flagged_count: number | null\n    auto_hidden_count: number | null\n    escalation_count: number | null\n    false_positive_count: number | null\n    avg_resolution_time_minutes: number | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Discussion_board_content_abuse_metricCountAggregateOutputType = {\n    id: number\n    moderator_id: number\n    date: number\n    abuse_type: number\n    flagged_count: number\n    auto_hidden_count: number\n    escalation_count: number\n    false_positive_count: number\n    avg_resolution_time_minutes: number\n    created_at: number\n    updated_at: number\n    _all: number\n  }\n\n\n  export type Discussion_board_content_abuse_metricAvgAggregateInputType = {\n    flagged_count?: true\n    auto_hidden_count?: true\n    escalation_count?: true\n    false_positive_count?: true\n    avg_resolution_time_minutes?: true\n  }\n\n  export type Discussion_board_content_abuse_metricSumAggregateInputType = {\n    flagged_count?: true\n    auto_hidden_count?: true\n    escalation_count?: true\n    false_positive_count?: true\n    avg_resolution_time_minutes?: true\n  }\n\n  export type Discussion_board_content_abuse_metricMinAggregateInputType = {\n    id?: true\n    moderator_id?: true\n    date?: true\n    abuse_type?: true\n    flagged_count?: true\n    auto_hidden_count?: true\n    escalation_count?: true\n    false_positive_count?: true\n    avg_resolution_time_minutes?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Discussion_board_content_abuse_metricMaxAggregateInputType = {\n    id?: true\n    moderator_id?: true\n    date?: true\n    abuse_type?: true\n    flagged_count?: true\n    auto_hidden_count?: true\n    escalation_count?: true\n    false_positive_count?: true\n    avg_resolution_time_minutes?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Discussion_board_content_abuse_metricCountAggregateInputType = {\n    id?: true\n    moderator_id?: true\n    date?: true\n    abuse_type?: true\n    flagged_count?: true\n    auto_hidden_count?: true\n    escalation_count?: true\n    false_positive_count?: true\n    avg_resolution_time_minutes?: true\n    created_at?: true\n    updated_at?: true\n    _all?: true\n  }\n\n  export type Discussion_board_content_abuse_metricAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_content_abuse_metric to aggregate.\n     */\n    where?: discussion_board_content_abuse_metricWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_content_abuse_metrics to fetch.\n     */\n    orderBy?: discussion_board_content_abuse_metricOrderByWithRelationInput | discussion_board_content_abuse_metricOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussion_board_content_abuse_metricWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_content_abuse_metrics from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_content_abuse_metrics.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussion_board_content_abuse_metrics\n    **/\n    _count?: true | Discussion_board_content_abuse_metricCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to average\n    **/\n    _avg?: Discussion_board_content_abuse_metricAvgAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to sum\n    **/\n    _sum?: Discussion_board_content_abuse_metricSumAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussion_board_content_abuse_metricMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussion_board_content_abuse_metricMaxAggregateInputType\n  }\n\n  export type GetDiscussion_board_content_abuse_metricAggregateType<T extends Discussion_board_content_abuse_metricAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussion_board_content_abuse_metric]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussion_board_content_abuse_metric[P]>\n      : GetScalarType<T[P], AggregateDiscussion_board_content_abuse_metric[P]>\n  }\n\n\n\n\n  export type discussion_board_content_abuse_metricGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_content_abuse_metricWhereInput\n    orderBy?: discussion_board_content_abuse_metricOrderByWithAggregationInput | discussion_board_content_abuse_metricOrderByWithAggregationInput[]\n    by: Discussion_board_content_abuse_metricScalarFieldEnum[] | Discussion_board_content_abuse_metricScalarFieldEnum\n    having?: discussion_board_content_abuse_metricScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussion_board_content_abuse_metricCountAggregateInputType | true\n    _avg?: Discussion_board_content_abuse_metricAvgAggregateInputType\n    _sum?: Discussion_board_content_abuse_metricSumAggregateInputType\n    _min?: Discussion_board_content_abuse_metricMinAggregateInputType\n    _max?: Discussion_board_content_abuse_metricMaxAggregateInputType\n  }\n\n  export type Discussion_board_content_abuse_metricGroupByOutputType = {\n    id: string\n    moderator_id: string | null\n    date: string\n    abuse_type: string\n    flagged_count: number\n    auto_hidden_count: number\n    escalation_count: number\n    false_positive_count: number\n    avg_resolution_time_minutes: number\n    created_at: Date\n    updated_at: Date\n    _count: Discussion_board_content_abuse_metricCountAggregateOutputType | null\n    _avg: Discussion_board_content_abuse_metricAvgAggregateOutputType | null\n    _sum: Discussion_board_content_abuse_metricSumAggregateOutputType | null\n    _min: Discussion_board_content_abuse_metricMinAggregateOutputType | null\n    _max: Discussion_board_content_abuse_metricMaxAggregateOutputType | null\n  }\n\n  type GetDiscussion_board_content_abuse_metricGroupByPayload<T extends discussion_board_content_abuse_metricGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussion_board_content_abuse_metricGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussion_board_content_abuse_metricGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussion_board_content_abuse_metricGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussion_board_content_abuse_metricGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussion_board_content_abuse_metricSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    moderator_id?: boolean\n    date?: boolean\n    abuse_type?: boolean\n    flagged_count?: boolean\n    auto_hidden_count?: boolean\n    escalation_count?: boolean\n    false_positive_count?: boolean\n    avg_resolution_time_minutes?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    discussion_board_moderator?: boolean | discussion_board_content_abuse_metric$discussion_board_moderatorArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_content_abuse_metric\"]>\n\n  export type discussion_board_content_abuse_metricSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    moderator_id?: boolean\n    date?: boolean\n    abuse_type?: boolean\n    flagged_count?: boolean\n    auto_hidden_count?: boolean\n    escalation_count?: boolean\n    false_positive_count?: boolean\n    avg_resolution_time_minutes?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    discussion_board_moderator?: boolean | discussion_board_content_abuse_metric$discussion_board_moderatorArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_content_abuse_metric\"]>\n\n  export type discussion_board_content_abuse_metricSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    moderator_id?: boolean\n    date?: boolean\n    abuse_type?: boolean\n    flagged_count?: boolean\n    auto_hidden_count?: boolean\n    escalation_count?: boolean\n    false_positive_count?: boolean\n    avg_resolution_time_minutes?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    discussion_board_moderator?: boolean | discussion_board_content_abuse_metric$discussion_board_moderatorArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussion_board_content_abuse_metric\"]>\n\n  export type discussion_board_content_abuse_metricSelectScalar = {\n    id?: boolean\n    moderator_id?: boolean\n    date?: boolean\n    abuse_type?: boolean\n    flagged_count?: boolean\n    auto_hidden_count?: boolean\n    escalation_count?: boolean\n    false_positive_count?: boolean\n    avg_resolution_time_minutes?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }\n\n  export type discussion_board_content_abuse_metricOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"moderator_id\" | \"date\" | \"abuse_type\" | \"flagged_count\" | \"auto_hidden_count\" | \"escalation_count\" | \"false_positive_count\" | \"avg_resolution_time_minutes\" | \"created_at\" | \"updated_at\", ExtArgs[\"result\"][\"discussion_board_content_abuse_metric\"]>\n  export type discussion_board_content_abuse_metricInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussion_board_moderator?: boolean | discussion_board_content_abuse_metric$discussion_board_moderatorArgs<ExtArgs>\n  }\n  export type discussion_board_content_abuse_metricIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussion_board_moderator?: boolean | discussion_board_content_abuse_metric$discussion_board_moderatorArgs<ExtArgs>\n  }\n  export type discussion_board_content_abuse_metricIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussion_board_moderator?: boolean | discussion_board_content_abuse_metric$discussion_board_moderatorArgs<ExtArgs>\n  }\n\n  export type $discussion_board_content_abuse_metricPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussion_board_content_abuse_metric\"\n    objects: {\n      discussion_board_moderator: Prisma.$discussion_board_moderatorsPayload<ExtArgs> | null\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key - Unique identifier for each metric record, one per day+category.\n       * \n       * Ensures uniqueness for each set of abuse metrics tracked, supporting 3NF and compliance.\n       */\n      id: string\n      /**\n       * Moderator Reference - If applicable, links the metrics to a specific moderator for escalation/resolution mapping.\n       * \n       * 3NF: Foreign key nullable—some metrics may not involve a moderator (e.g., automated actions).\n       */\n      moderator_id: string | null\n      /**\n       * Metric Date - Calendar day for which these metrics are tracked. Stored as ISO date string in yyyy-mm-dd format due to Prisma/JSON schema type constraints.\n       * \n       * Helps enforce normalized per-day storage. Example usage: plotting abuse events over time.\n       */\n      date: string\n      /**\n       * Abuse Type - String field categorizing abuse/spam type for the metric row (e.g., spam, hate_speech, offensive_language, off_topic, etc.).\n       * \n       * Maintains atomic (non-derived) data, supports normalization. Later analytics may perform grouping or pivoting on this field.\n       */\n      abuse_type: string\n      /**\n       * Flagged Count - Number of posts/comments flagged as abusive for this type/date.\n       * \n       * Atomic, not calculated. Example: Input into moderation alerts, compliance or escalation triggers.\n       */\n      flagged_count: number\n      /**\n       * Auto Hidden Count - Number of posts/comments that were auto-hidden by policy on this date/type.\n       * \n       * Enables monitoring of automated moderation effectiveness and supports normalization by centralizing such stats here only.\n       */\n      auto_hidden_count: number\n      /**\n       * Escalation Count - Metric for abuse events escalated to a moderator or admin.\n       */\n      escalation_count: number\n      /**\n       * False Positive Count - Number of flagged events later cleared as false positives.\n       * \n       * Atomic and normalized; only tracked here, not in user or content tables. For example, helps track the impact of moderation improvements or AI upgrades.\n       */\n      false_positive_count: number\n      /**\n       * Average Resolution Time (Minutes) - Time spent (mean) to resolve, measured in minutes.\n       * \n       * Atomic metric, supports moderation workflow optimization. Normalized: full timestamps elsewhere, metric-only here. Used in dashboard averages and efficiency reports.\n       */\n      avg_resolution_time_minutes: number\n      /**\n       * Created At Timestamp - Origination time of this metric record.\n       * \n       * Ensures compliance, allows for backfill/audit. Supports time-based analytics for abuse detection improvements.\n       */\n      created_at: Date\n      /**\n       * Updated At Timestamp - When this record was last updated.\n       * \n       * Used for auditing statistics and ETL workflows in analytics pipelines.\n       */\n      updated_at: Date\n    }, ExtArgs[\"result\"][\"discussion_board_content_abuse_metric\"]>\n    composites: {}\n  }\n\n  type discussion_board_content_abuse_metricGetPayload<S extends boolean | null | undefined | discussion_board_content_abuse_metricDefaultArgs> = $Result.GetResult<Prisma.$discussion_board_content_abuse_metricPayload, S>\n\n  type discussion_board_content_abuse_metricCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussion_board_content_abuse_metricFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussion_board_content_abuse_metricCountAggregateInputType | true\n    }\n\n  export interface discussion_board_content_abuse_metricDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussion_board_content_abuse_metric'], meta: { name: 'discussion_board_content_abuse_metric' } }\n    /**\n     * Find zero or one Discussion_board_content_abuse_metric that matches the filter.\n     * @param {discussion_board_content_abuse_metricFindUniqueArgs} args - Arguments to find a Discussion_board_content_abuse_metric\n     * @example\n     * // Get one Discussion_board_content_abuse_metric\n     * const discussion_board_content_abuse_metric = await prisma.discussion_board_content_abuse_metric.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussion_board_content_abuse_metricFindUniqueArgs>(args: SelectSubset<T, discussion_board_content_abuse_metricFindUniqueArgs<ExtArgs>>): Prisma__discussion_board_content_abuse_metricClient<$Result.GetResult<Prisma.$discussion_board_content_abuse_metricPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussion_board_content_abuse_metric that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussion_board_content_abuse_metricFindUniqueOrThrowArgs} args - Arguments to find a Discussion_board_content_abuse_metric\n     * @example\n     * // Get one Discussion_board_content_abuse_metric\n     * const discussion_board_content_abuse_metric = await prisma.discussion_board_content_abuse_metric.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussion_board_content_abuse_metricFindUniqueOrThrowArgs>(args: SelectSubset<T, discussion_board_content_abuse_metricFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussion_board_content_abuse_metricClient<$Result.GetResult<Prisma.$discussion_board_content_abuse_metricPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_content_abuse_metric that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_content_abuse_metricFindFirstArgs} args - Arguments to find a Discussion_board_content_abuse_metric\n     * @example\n     * // Get one Discussion_board_content_abuse_metric\n     * const discussion_board_content_abuse_metric = await prisma.discussion_board_content_abuse_metric.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussion_board_content_abuse_metricFindFirstArgs>(args?: SelectSubset<T, discussion_board_content_abuse_metricFindFirstArgs<ExtArgs>>): Prisma__discussion_board_content_abuse_metricClient<$Result.GetResult<Prisma.$discussion_board_content_abuse_metricPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_content_abuse_metric that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_content_abuse_metricFindFirstOrThrowArgs} args - Arguments to find a Discussion_board_content_abuse_metric\n     * @example\n     * // Get one Discussion_board_content_abuse_metric\n     * const discussion_board_content_abuse_metric = await prisma.discussion_board_content_abuse_metric.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussion_board_content_abuse_metricFindFirstOrThrowArgs>(args?: SelectSubset<T, discussion_board_content_abuse_metricFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussion_board_content_abuse_metricClient<$Result.GetResult<Prisma.$discussion_board_content_abuse_metricPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussion_board_content_abuse_metrics that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_content_abuse_metricFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussion_board_content_abuse_metrics\n     * const discussion_board_content_abuse_metrics = await prisma.discussion_board_content_abuse_metric.findMany()\n     * \n     * // Get first 10 Discussion_board_content_abuse_metrics\n     * const discussion_board_content_abuse_metrics = await prisma.discussion_board_content_abuse_metric.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussion_board_content_abuse_metricWithIdOnly = await prisma.discussion_board_content_abuse_metric.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussion_board_content_abuse_metricFindManyArgs>(args?: SelectSubset<T, discussion_board_content_abuse_metricFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_content_abuse_metricPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussion_board_content_abuse_metric.\n     * @param {discussion_board_content_abuse_metricCreateArgs} args - Arguments to create a Discussion_board_content_abuse_metric.\n     * @example\n     * // Create one Discussion_board_content_abuse_metric\n     * const Discussion_board_content_abuse_metric = await prisma.discussion_board_content_abuse_metric.create({\n     *   data: {\n     *     // ... data to create a Discussion_board_content_abuse_metric\n     *   }\n     * })\n     * \n     */\n    create<T extends discussion_board_content_abuse_metricCreateArgs>(args: SelectSubset<T, discussion_board_content_abuse_metricCreateArgs<ExtArgs>>): Prisma__discussion_board_content_abuse_metricClient<$Result.GetResult<Prisma.$discussion_board_content_abuse_metricPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussion_board_content_abuse_metrics.\n     * @param {discussion_board_content_abuse_metricCreateManyArgs} args - Arguments to create many Discussion_board_content_abuse_metrics.\n     * @example\n     * // Create many Discussion_board_content_abuse_metrics\n     * const discussion_board_content_abuse_metric = await prisma.discussion_board_content_abuse_metric.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussion_board_content_abuse_metricCreateManyArgs>(args?: SelectSubset<T, discussion_board_content_abuse_metricCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussion_board_content_abuse_metrics and returns the data saved in the database.\n     * @param {discussion_board_content_abuse_metricCreateManyAndReturnArgs} args - Arguments to create many Discussion_board_content_abuse_metrics.\n     * @example\n     * // Create many Discussion_board_content_abuse_metrics\n     * const discussion_board_content_abuse_metric = await prisma.discussion_board_content_abuse_metric.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussion_board_content_abuse_metrics and only return the `id`\n     * const discussion_board_content_abuse_metricWithIdOnly = await prisma.discussion_board_content_abuse_metric.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussion_board_content_abuse_metricCreateManyAndReturnArgs>(args?: SelectSubset<T, discussion_board_content_abuse_metricCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_content_abuse_metricPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussion_board_content_abuse_metric.\n     * @param {discussion_board_content_abuse_metricDeleteArgs} args - Arguments to delete one Discussion_board_content_abuse_metric.\n     * @example\n     * // Delete one Discussion_board_content_abuse_metric\n     * const Discussion_board_content_abuse_metric = await prisma.discussion_board_content_abuse_metric.delete({\n     *   where: {\n     *     // ... filter to delete one Discussion_board_content_abuse_metric\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussion_board_content_abuse_metricDeleteArgs>(args: SelectSubset<T, discussion_board_content_abuse_metricDeleteArgs<ExtArgs>>): Prisma__discussion_board_content_abuse_metricClient<$Result.GetResult<Prisma.$discussion_board_content_abuse_metricPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussion_board_content_abuse_metric.\n     * @param {discussion_board_content_abuse_metricUpdateArgs} args - Arguments to update one Discussion_board_content_abuse_metric.\n     * @example\n     * // Update one Discussion_board_content_abuse_metric\n     * const discussion_board_content_abuse_metric = await prisma.discussion_board_content_abuse_metric.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussion_board_content_abuse_metricUpdateArgs>(args: SelectSubset<T, discussion_board_content_abuse_metricUpdateArgs<ExtArgs>>): Prisma__discussion_board_content_abuse_metricClient<$Result.GetResult<Prisma.$discussion_board_content_abuse_metricPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussion_board_content_abuse_metrics.\n     * @param {discussion_board_content_abuse_metricDeleteManyArgs} args - Arguments to filter Discussion_board_content_abuse_metrics to delete.\n     * @example\n     * // Delete a few Discussion_board_content_abuse_metrics\n     * const { count } = await prisma.discussion_board_content_abuse_metric.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussion_board_content_abuse_metricDeleteManyArgs>(args?: SelectSubset<T, discussion_board_content_abuse_metricDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_content_abuse_metrics.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_content_abuse_metricUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussion_board_content_abuse_metrics\n     * const discussion_board_content_abuse_metric = await prisma.discussion_board_content_abuse_metric.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussion_board_content_abuse_metricUpdateManyArgs>(args: SelectSubset<T, discussion_board_content_abuse_metricUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_content_abuse_metrics and returns the data updated in the database.\n     * @param {discussion_board_content_abuse_metricUpdateManyAndReturnArgs} args - Arguments to update many Discussion_board_content_abuse_metrics.\n     * @example\n     * // Update many Discussion_board_content_abuse_metrics\n     * const discussion_board_content_abuse_metric = await prisma.discussion_board_content_abuse_metric.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussion_board_content_abuse_metrics and only return the `id`\n     * const discussion_board_content_abuse_metricWithIdOnly = await prisma.discussion_board_content_abuse_metric.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussion_board_content_abuse_metricUpdateManyAndReturnArgs>(args: SelectSubset<T, discussion_board_content_abuse_metricUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_content_abuse_metricPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussion_board_content_abuse_metric.\n     * @param {discussion_board_content_abuse_metricUpsertArgs} args - Arguments to update or create a Discussion_board_content_abuse_metric.\n     * @example\n     * // Update or create a Discussion_board_content_abuse_metric\n     * const discussion_board_content_abuse_metric = await prisma.discussion_board_content_abuse_metric.upsert({\n     *   create: {\n     *     // ... data to create a Discussion_board_content_abuse_metric\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussion_board_content_abuse_metric we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussion_board_content_abuse_metricUpsertArgs>(args: SelectSubset<T, discussion_board_content_abuse_metricUpsertArgs<ExtArgs>>): Prisma__discussion_board_content_abuse_metricClient<$Result.GetResult<Prisma.$discussion_board_content_abuse_metricPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussion_board_content_abuse_metrics.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_content_abuse_metricCountArgs} args - Arguments to filter Discussion_board_content_abuse_metrics to count.\n     * @example\n     * // Count the number of Discussion_board_content_abuse_metrics\n     * const count = await prisma.discussion_board_content_abuse_metric.count({\n     *   where: {\n     *     // ... the filter for the Discussion_board_content_abuse_metrics we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussion_board_content_abuse_metricCountArgs>(\n      args?: Subset<T, discussion_board_content_abuse_metricCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussion_board_content_abuse_metricCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussion_board_content_abuse_metric.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussion_board_content_abuse_metricAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussion_board_content_abuse_metricAggregateArgs>(args: Subset<T, Discussion_board_content_abuse_metricAggregateArgs>): Prisma.PrismaPromise<GetDiscussion_board_content_abuse_metricAggregateType<T>>\n\n    /**\n     * Group by Discussion_board_content_abuse_metric.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_content_abuse_metricGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussion_board_content_abuse_metricGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussion_board_content_abuse_metricGroupByArgs['orderBy'] }\n        : { orderBy?: discussion_board_content_abuse_metricGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussion_board_content_abuse_metricGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussion_board_content_abuse_metricGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussion_board_content_abuse_metric model\n   */\n  readonly fields: discussion_board_content_abuse_metricFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussion_board_content_abuse_metric.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussion_board_content_abuse_metricClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    discussion_board_moderator<T extends discussion_board_content_abuse_metric$discussion_board_moderatorArgs<ExtArgs> = {}>(args?: Subset<T, discussion_board_content_abuse_metric$discussion_board_moderatorArgs<ExtArgs>>): Prisma__discussion_board_moderatorsClient<$Result.GetResult<Prisma.$discussion_board_moderatorsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussion_board_content_abuse_metric model\n   */\n  interface discussion_board_content_abuse_metricFieldRefs {\n    readonly id: FieldRef<\"discussion_board_content_abuse_metric\", 'String'>\n    readonly moderator_id: FieldRef<\"discussion_board_content_abuse_metric\", 'String'>\n    readonly date: FieldRef<\"discussion_board_content_abuse_metric\", 'String'>\n    readonly abuse_type: FieldRef<\"discussion_board_content_abuse_metric\", 'String'>\n    readonly flagged_count: FieldRef<\"discussion_board_content_abuse_metric\", 'Int'>\n    readonly auto_hidden_count: FieldRef<\"discussion_board_content_abuse_metric\", 'Int'>\n    readonly escalation_count: FieldRef<\"discussion_board_content_abuse_metric\", 'Int'>\n    readonly false_positive_count: FieldRef<\"discussion_board_content_abuse_metric\", 'Int'>\n    readonly avg_resolution_time_minutes: FieldRef<\"discussion_board_content_abuse_metric\", 'Int'>\n    readonly created_at: FieldRef<\"discussion_board_content_abuse_metric\", 'DateTime'>\n    readonly updated_at: FieldRef<\"discussion_board_content_abuse_metric\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussion_board_content_abuse_metric findUnique\n   */\n  export type discussion_board_content_abuse_metricFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_content_abuse_metric\n     */\n    select?: discussion_board_content_abuse_metricSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_content_abuse_metric\n     */\n    omit?: discussion_board_content_abuse_metricOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_content_abuse_metricInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_content_abuse_metric to fetch.\n     */\n    where: discussion_board_content_abuse_metricWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_content_abuse_metric findUniqueOrThrow\n   */\n  export type discussion_board_content_abuse_metricFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_content_abuse_metric\n     */\n    select?: discussion_board_content_abuse_metricSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_content_abuse_metric\n     */\n    omit?: discussion_board_content_abuse_metricOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_content_abuse_metricInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_content_abuse_metric to fetch.\n     */\n    where: discussion_board_content_abuse_metricWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_content_abuse_metric findFirst\n   */\n  export type discussion_board_content_abuse_metricFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_content_abuse_metric\n     */\n    select?: discussion_board_content_abuse_metricSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_content_abuse_metric\n     */\n    omit?: discussion_board_content_abuse_metricOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_content_abuse_metricInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_content_abuse_metric to fetch.\n     */\n    where?: discussion_board_content_abuse_metricWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_content_abuse_metrics to fetch.\n     */\n    orderBy?: discussion_board_content_abuse_metricOrderByWithRelationInput | discussion_board_content_abuse_metricOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_content_abuse_metrics.\n     */\n    cursor?: discussion_board_content_abuse_metricWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_content_abuse_metrics from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_content_abuse_metrics.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_content_abuse_metrics.\n     */\n    distinct?: Discussion_board_content_abuse_metricScalarFieldEnum | Discussion_board_content_abuse_metricScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_content_abuse_metric findFirstOrThrow\n   */\n  export type discussion_board_content_abuse_metricFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_content_abuse_metric\n     */\n    select?: discussion_board_content_abuse_metricSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_content_abuse_metric\n     */\n    omit?: discussion_board_content_abuse_metricOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_content_abuse_metricInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_content_abuse_metric to fetch.\n     */\n    where?: discussion_board_content_abuse_metricWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_content_abuse_metrics to fetch.\n     */\n    orderBy?: discussion_board_content_abuse_metricOrderByWithRelationInput | discussion_board_content_abuse_metricOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_content_abuse_metrics.\n     */\n    cursor?: discussion_board_content_abuse_metricWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_content_abuse_metrics from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_content_abuse_metrics.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_content_abuse_metrics.\n     */\n    distinct?: Discussion_board_content_abuse_metricScalarFieldEnum | Discussion_board_content_abuse_metricScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_content_abuse_metric findMany\n   */\n  export type discussion_board_content_abuse_metricFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_content_abuse_metric\n     */\n    select?: discussion_board_content_abuse_metricSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_content_abuse_metric\n     */\n    omit?: discussion_board_content_abuse_metricOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_content_abuse_metricInclude<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_content_abuse_metrics to fetch.\n     */\n    where?: discussion_board_content_abuse_metricWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_content_abuse_metrics to fetch.\n     */\n    orderBy?: discussion_board_content_abuse_metricOrderByWithRelationInput | discussion_board_content_abuse_metricOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussion_board_content_abuse_metrics.\n     */\n    cursor?: discussion_board_content_abuse_metricWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_content_abuse_metrics from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_content_abuse_metrics.\n     */\n    skip?: number\n    distinct?: Discussion_board_content_abuse_metricScalarFieldEnum | Discussion_board_content_abuse_metricScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_content_abuse_metric create\n   */\n  export type discussion_board_content_abuse_metricCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_content_abuse_metric\n     */\n    select?: discussion_board_content_abuse_metricSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_content_abuse_metric\n     */\n    omit?: discussion_board_content_abuse_metricOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_content_abuse_metricInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussion_board_content_abuse_metric.\n     */\n    data: XOR<discussion_board_content_abuse_metricCreateInput, discussion_board_content_abuse_metricUncheckedCreateInput>\n  }\n\n  /**\n   * discussion_board_content_abuse_metric createMany\n   */\n  export type discussion_board_content_abuse_metricCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussion_board_content_abuse_metrics.\n     */\n    data: discussion_board_content_abuse_metricCreateManyInput | discussion_board_content_abuse_metricCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussion_board_content_abuse_metric createManyAndReturn\n   */\n  export type discussion_board_content_abuse_metricCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_content_abuse_metric\n     */\n    select?: discussion_board_content_abuse_metricSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_content_abuse_metric\n     */\n    omit?: discussion_board_content_abuse_metricOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussion_board_content_abuse_metrics.\n     */\n    data: discussion_board_content_abuse_metricCreateManyInput | discussion_board_content_abuse_metricCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_content_abuse_metricIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_content_abuse_metric update\n   */\n  export type discussion_board_content_abuse_metricUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_content_abuse_metric\n     */\n    select?: discussion_board_content_abuse_metricSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_content_abuse_metric\n     */\n    omit?: discussion_board_content_abuse_metricOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_content_abuse_metricInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussion_board_content_abuse_metric.\n     */\n    data: XOR<discussion_board_content_abuse_metricUpdateInput, discussion_board_content_abuse_metricUncheckedUpdateInput>\n    /**\n     * Choose, which discussion_board_content_abuse_metric to update.\n     */\n    where: discussion_board_content_abuse_metricWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_content_abuse_metric updateMany\n   */\n  export type discussion_board_content_abuse_metricUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussion_board_content_abuse_metrics.\n     */\n    data: XOR<discussion_board_content_abuse_metricUpdateManyMutationInput, discussion_board_content_abuse_metricUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_content_abuse_metrics to update\n     */\n    where?: discussion_board_content_abuse_metricWhereInput\n    /**\n     * Limit how many discussion_board_content_abuse_metrics to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_content_abuse_metric updateManyAndReturn\n   */\n  export type discussion_board_content_abuse_metricUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_content_abuse_metric\n     */\n    select?: discussion_board_content_abuse_metricSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_content_abuse_metric\n     */\n    omit?: discussion_board_content_abuse_metricOmit<ExtArgs> | null\n    /**\n     * The data used to update discussion_board_content_abuse_metrics.\n     */\n    data: XOR<discussion_board_content_abuse_metricUpdateManyMutationInput, discussion_board_content_abuse_metricUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_content_abuse_metrics to update\n     */\n    where?: discussion_board_content_abuse_metricWhereInput\n    /**\n     * Limit how many discussion_board_content_abuse_metrics to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_content_abuse_metricIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussion_board_content_abuse_metric upsert\n   */\n  export type discussion_board_content_abuse_metricUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_content_abuse_metric\n     */\n    select?: discussion_board_content_abuse_metricSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_content_abuse_metric\n     */\n    omit?: discussion_board_content_abuse_metricOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_content_abuse_metricInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussion_board_content_abuse_metric to update in case it exists.\n     */\n    where: discussion_board_content_abuse_metricWhereUniqueInput\n    /**\n     * In case the discussion_board_content_abuse_metric found by the `where` argument doesn't exist, create a new discussion_board_content_abuse_metric with this data.\n     */\n    create: XOR<discussion_board_content_abuse_metricCreateInput, discussion_board_content_abuse_metricUncheckedCreateInput>\n    /**\n     * In case the discussion_board_content_abuse_metric was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussion_board_content_abuse_metricUpdateInput, discussion_board_content_abuse_metricUncheckedUpdateInput>\n  }\n\n  /**\n   * discussion_board_content_abuse_metric delete\n   */\n  export type discussion_board_content_abuse_metricDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_content_abuse_metric\n     */\n    select?: discussion_board_content_abuse_metricSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_content_abuse_metric\n     */\n    omit?: discussion_board_content_abuse_metricOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_content_abuse_metricInclude<ExtArgs> | null\n    /**\n     * Filter which discussion_board_content_abuse_metric to delete.\n     */\n    where: discussion_board_content_abuse_metricWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_content_abuse_metric deleteMany\n   */\n  export type discussion_board_content_abuse_metricDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_content_abuse_metrics to delete\n     */\n    where?: discussion_board_content_abuse_metricWhereInput\n    /**\n     * Limit how many discussion_board_content_abuse_metrics to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_content_abuse_metric.discussion_board_moderator\n   */\n  export type discussion_board_content_abuse_metric$discussion_board_moderatorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_moderators\n     */\n    select?: discussion_board_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_moderators\n     */\n    omit?: discussion_board_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_moderatorsInclude<ExtArgs> | null\n    where?: discussion_board_moderatorsWhereInput\n  }\n\n  /**\n   * discussion_board_content_abuse_metric without action\n   */\n  export type discussion_board_content_abuse_metricDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_content_abuse_metric\n     */\n    select?: discussion_board_content_abuse_metricSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_content_abuse_metric\n     */\n    omit?: discussion_board_content_abuse_metricOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussion_board_content_abuse_metricInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussion_board_setting\n   */\n\n  export type AggregateDiscussion_board_setting = {\n    _count: Discussion_board_settingCountAggregateOutputType | null\n    _min: Discussion_board_settingMinAggregateOutputType | null\n    _max: Discussion_board_settingMaxAggregateOutputType | null\n  }\n\n  export type Discussion_board_settingMinAggregateOutputType = {\n    id: string | null\n    key: string | null\n    value: string | null\n    description: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Discussion_board_settingMaxAggregateOutputType = {\n    id: string | null\n    key: string | null\n    value: string | null\n    description: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Discussion_board_settingCountAggregateOutputType = {\n    id: number\n    key: number\n    value: number\n    description: number\n    created_at: number\n    updated_at: number\n    deleted_at: number\n    _all: number\n  }\n\n\n  export type Discussion_board_settingMinAggregateInputType = {\n    id?: true\n    key?: true\n    value?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Discussion_board_settingMaxAggregateInputType = {\n    id?: true\n    key?: true\n    value?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Discussion_board_settingCountAggregateInputType = {\n    id?: true\n    key?: true\n    value?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n    _all?: true\n  }\n\n  export type Discussion_board_settingAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_setting to aggregate.\n     */\n    where?: discussion_board_settingWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_settings to fetch.\n     */\n    orderBy?: discussion_board_settingOrderByWithRelationInput | discussion_board_settingOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussion_board_settingWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_settings from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_settings.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussion_board_settings\n    **/\n    _count?: true | Discussion_board_settingCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussion_board_settingMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussion_board_settingMaxAggregateInputType\n  }\n\n  export type GetDiscussion_board_settingAggregateType<T extends Discussion_board_settingAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussion_board_setting]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussion_board_setting[P]>\n      : GetScalarType<T[P], AggregateDiscussion_board_setting[P]>\n  }\n\n\n\n\n  export type discussion_board_settingGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_settingWhereInput\n    orderBy?: discussion_board_settingOrderByWithAggregationInput | discussion_board_settingOrderByWithAggregationInput[]\n    by: Discussion_board_settingScalarFieldEnum[] | Discussion_board_settingScalarFieldEnum\n    having?: discussion_board_settingScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussion_board_settingCountAggregateInputType | true\n    _min?: Discussion_board_settingMinAggregateInputType\n    _max?: Discussion_board_settingMaxAggregateInputType\n  }\n\n  export type Discussion_board_settingGroupByOutputType = {\n    id: string\n    key: string\n    value: string\n    description: string | null\n    created_at: Date\n    updated_at: Date\n    deleted_at: Date | null\n    _count: Discussion_board_settingCountAggregateOutputType | null\n    _min: Discussion_board_settingMinAggregateOutputType | null\n    _max: Discussion_board_settingMaxAggregateOutputType | null\n  }\n\n  type GetDiscussion_board_settingGroupByPayload<T extends discussion_board_settingGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussion_board_settingGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussion_board_settingGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussion_board_settingGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussion_board_settingGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussion_board_settingSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    key?: boolean\n    value?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }, ExtArgs[\"result\"][\"discussion_board_setting\"]>\n\n  export type discussion_board_settingSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    key?: boolean\n    value?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }, ExtArgs[\"result\"][\"discussion_board_setting\"]>\n\n  export type discussion_board_settingSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    key?: boolean\n    value?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }, ExtArgs[\"result\"][\"discussion_board_setting\"]>\n\n  export type discussion_board_settingSelectScalar = {\n    id?: boolean\n    key?: boolean\n    value?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }\n\n  export type discussion_board_settingOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"key\" | \"value\" | \"description\" | \"created_at\" | \"updated_at\" | \"deleted_at\", ExtArgs[\"result\"][\"discussion_board_setting\"]>\n\n  export type $discussion_board_settingPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussion_board_setting\"\n    objects: {}\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * [Unique Setting Key] - Implements the unique identification requirement for persistent board settings.\n       * Business meaning: Each setting must be addressable, auditable and updatable atomically. Ensures normalization by using a UUID-based identifier, aligning with best practices for distributed systems.\n       * For example, to update the 'default_thread_sort' behavior, the corresponding setting row is addressed via this field.\n       */\n      id: string\n      /**\n       * [Setting Key] - Implements symbolic addressing of each configuration aspect as required for modularity and feature toggling (see system configuration requirements).\n       * Business meaning: Allows individual settings (like 'allow_file_uploads', 'enable_external_login') to be toggled/queried atomically. Ensures strict normalization as each entry is uniquely keyed and non-redundant. For example, 'require_email_verification' represents the signup policy toggle.\n       */\n      key: string\n      /**\n       * [Atomic Value] - Stores the configuration value as required for runtime lookups and mutation.\n       * Business meaning: Enables flexible value types (as string), supporting boolean, number, JSON-stringified objects where needed. Remains normalized as all values are atomic and not derived; interpretation is handled in business logic. Example usage: 'false' for 'require_thread_approval' disables moderation queue for threads.\n       */\n      value: string\n      /**\n       * [Human-Readable Description] - Implements administrator tooling and auditability requirements. \n       * Business meaning: Provides context about the setting’s effect and usage, supporting maintainability and transparency. For example, \"If true, moderators must approve every new thread.\" This is atomic and ensures no duplicated documentation.\n       * Nullable, as not all settings require verbose descriptions.\n       */\n      description: string | null\n      /**\n       * [Creation Timestamp] - Supports audit trail, compliance, and troubleshooting workflows (03_discussion_board_nonfunctional_and_operational_requirements.md).\n       * Business meaning: Allows admins to audit when this setting was introduced. Ensures normalization as the timestamp is intrinsic to the row, not derived. Example: Used in audit reporting to trace config changes over time.\n       */\n      created_at: Date\n      /**\n       * [Last Update Timestamp] - Tracks when the setting was modified, supporting audit logs and compliance.\n       * Business meaning: Used to verify when a given setting was last changed, e.g. for privacy compliance or rollback. Maintains normalization as this field is not computed from others.\n       * Example: On toggling 'allow_external_sharing', this gets refreshed automatically.\n       */\n      updated_at: Date\n      /**\n       * [Soft-Delete Marker] - Implements the logical deletion audit and recovery requirement (nonfunctional section on compliance, disaster recovery).\n       * Business meaning: Marks a setting as inactive rather than physically deleting, supporting rollback and postmortem.\n       * Ensures normalization by storing row state atomically. Example: Disabled settings can be referenced for rollback or audit purposes.\n       */\n      deleted_at: Date | null\n    }, ExtArgs[\"result\"][\"discussion_board_setting\"]>\n    composites: {}\n  }\n\n  type discussion_board_settingGetPayload<S extends boolean | null | undefined | discussion_board_settingDefaultArgs> = $Result.GetResult<Prisma.$discussion_board_settingPayload, S>\n\n  type discussion_board_settingCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussion_board_settingFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussion_board_settingCountAggregateInputType | true\n    }\n\n  export interface discussion_board_settingDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussion_board_setting'], meta: { name: 'discussion_board_setting' } }\n    /**\n     * Find zero or one Discussion_board_setting that matches the filter.\n     * @param {discussion_board_settingFindUniqueArgs} args - Arguments to find a Discussion_board_setting\n     * @example\n     * // Get one Discussion_board_setting\n     * const discussion_board_setting = await prisma.discussion_board_setting.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussion_board_settingFindUniqueArgs>(args: SelectSubset<T, discussion_board_settingFindUniqueArgs<ExtArgs>>): Prisma__discussion_board_settingClient<$Result.GetResult<Prisma.$discussion_board_settingPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussion_board_setting that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussion_board_settingFindUniqueOrThrowArgs} args - Arguments to find a Discussion_board_setting\n     * @example\n     * // Get one Discussion_board_setting\n     * const discussion_board_setting = await prisma.discussion_board_setting.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussion_board_settingFindUniqueOrThrowArgs>(args: SelectSubset<T, discussion_board_settingFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussion_board_settingClient<$Result.GetResult<Prisma.$discussion_board_settingPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_setting that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_settingFindFirstArgs} args - Arguments to find a Discussion_board_setting\n     * @example\n     * // Get one Discussion_board_setting\n     * const discussion_board_setting = await prisma.discussion_board_setting.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussion_board_settingFindFirstArgs>(args?: SelectSubset<T, discussion_board_settingFindFirstArgs<ExtArgs>>): Prisma__discussion_board_settingClient<$Result.GetResult<Prisma.$discussion_board_settingPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_setting that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_settingFindFirstOrThrowArgs} args - Arguments to find a Discussion_board_setting\n     * @example\n     * // Get one Discussion_board_setting\n     * const discussion_board_setting = await prisma.discussion_board_setting.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussion_board_settingFindFirstOrThrowArgs>(args?: SelectSubset<T, discussion_board_settingFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussion_board_settingClient<$Result.GetResult<Prisma.$discussion_board_settingPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussion_board_settings that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_settingFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussion_board_settings\n     * const discussion_board_settings = await prisma.discussion_board_setting.findMany()\n     * \n     * // Get first 10 Discussion_board_settings\n     * const discussion_board_settings = await prisma.discussion_board_setting.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussion_board_settingWithIdOnly = await prisma.discussion_board_setting.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussion_board_settingFindManyArgs>(args?: SelectSubset<T, discussion_board_settingFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_settingPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussion_board_setting.\n     * @param {discussion_board_settingCreateArgs} args - Arguments to create a Discussion_board_setting.\n     * @example\n     * // Create one Discussion_board_setting\n     * const Discussion_board_setting = await prisma.discussion_board_setting.create({\n     *   data: {\n     *     // ... data to create a Discussion_board_setting\n     *   }\n     * })\n     * \n     */\n    create<T extends discussion_board_settingCreateArgs>(args: SelectSubset<T, discussion_board_settingCreateArgs<ExtArgs>>): Prisma__discussion_board_settingClient<$Result.GetResult<Prisma.$discussion_board_settingPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussion_board_settings.\n     * @param {discussion_board_settingCreateManyArgs} args - Arguments to create many Discussion_board_settings.\n     * @example\n     * // Create many Discussion_board_settings\n     * const discussion_board_setting = await prisma.discussion_board_setting.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussion_board_settingCreateManyArgs>(args?: SelectSubset<T, discussion_board_settingCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussion_board_settings and returns the data saved in the database.\n     * @param {discussion_board_settingCreateManyAndReturnArgs} args - Arguments to create many Discussion_board_settings.\n     * @example\n     * // Create many Discussion_board_settings\n     * const discussion_board_setting = await prisma.discussion_board_setting.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussion_board_settings and only return the `id`\n     * const discussion_board_settingWithIdOnly = await prisma.discussion_board_setting.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussion_board_settingCreateManyAndReturnArgs>(args?: SelectSubset<T, discussion_board_settingCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_settingPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussion_board_setting.\n     * @param {discussion_board_settingDeleteArgs} args - Arguments to delete one Discussion_board_setting.\n     * @example\n     * // Delete one Discussion_board_setting\n     * const Discussion_board_setting = await prisma.discussion_board_setting.delete({\n     *   where: {\n     *     // ... filter to delete one Discussion_board_setting\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussion_board_settingDeleteArgs>(args: SelectSubset<T, discussion_board_settingDeleteArgs<ExtArgs>>): Prisma__discussion_board_settingClient<$Result.GetResult<Prisma.$discussion_board_settingPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussion_board_setting.\n     * @param {discussion_board_settingUpdateArgs} args - Arguments to update one Discussion_board_setting.\n     * @example\n     * // Update one Discussion_board_setting\n     * const discussion_board_setting = await prisma.discussion_board_setting.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussion_board_settingUpdateArgs>(args: SelectSubset<T, discussion_board_settingUpdateArgs<ExtArgs>>): Prisma__discussion_board_settingClient<$Result.GetResult<Prisma.$discussion_board_settingPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussion_board_settings.\n     * @param {discussion_board_settingDeleteManyArgs} args - Arguments to filter Discussion_board_settings to delete.\n     * @example\n     * // Delete a few Discussion_board_settings\n     * const { count } = await prisma.discussion_board_setting.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussion_board_settingDeleteManyArgs>(args?: SelectSubset<T, discussion_board_settingDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_settings.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_settingUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussion_board_settings\n     * const discussion_board_setting = await prisma.discussion_board_setting.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussion_board_settingUpdateManyArgs>(args: SelectSubset<T, discussion_board_settingUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_settings and returns the data updated in the database.\n     * @param {discussion_board_settingUpdateManyAndReturnArgs} args - Arguments to update many Discussion_board_settings.\n     * @example\n     * // Update many Discussion_board_settings\n     * const discussion_board_setting = await prisma.discussion_board_setting.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussion_board_settings and only return the `id`\n     * const discussion_board_settingWithIdOnly = await prisma.discussion_board_setting.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussion_board_settingUpdateManyAndReturnArgs>(args: SelectSubset<T, discussion_board_settingUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_settingPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussion_board_setting.\n     * @param {discussion_board_settingUpsertArgs} args - Arguments to update or create a Discussion_board_setting.\n     * @example\n     * // Update or create a Discussion_board_setting\n     * const discussion_board_setting = await prisma.discussion_board_setting.upsert({\n     *   create: {\n     *     // ... data to create a Discussion_board_setting\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussion_board_setting we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussion_board_settingUpsertArgs>(args: SelectSubset<T, discussion_board_settingUpsertArgs<ExtArgs>>): Prisma__discussion_board_settingClient<$Result.GetResult<Prisma.$discussion_board_settingPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussion_board_settings.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_settingCountArgs} args - Arguments to filter Discussion_board_settings to count.\n     * @example\n     * // Count the number of Discussion_board_settings\n     * const count = await prisma.discussion_board_setting.count({\n     *   where: {\n     *     // ... the filter for the Discussion_board_settings we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussion_board_settingCountArgs>(\n      args?: Subset<T, discussion_board_settingCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussion_board_settingCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussion_board_setting.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussion_board_settingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussion_board_settingAggregateArgs>(args: Subset<T, Discussion_board_settingAggregateArgs>): Prisma.PrismaPromise<GetDiscussion_board_settingAggregateType<T>>\n\n    /**\n     * Group by Discussion_board_setting.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_settingGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussion_board_settingGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussion_board_settingGroupByArgs['orderBy'] }\n        : { orderBy?: discussion_board_settingGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussion_board_settingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussion_board_settingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussion_board_setting model\n   */\n  readonly fields: discussion_board_settingFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussion_board_setting.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussion_board_settingClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussion_board_setting model\n   */\n  interface discussion_board_settingFieldRefs {\n    readonly id: FieldRef<\"discussion_board_setting\", 'String'>\n    readonly key: FieldRef<\"discussion_board_setting\", 'String'>\n    readonly value: FieldRef<\"discussion_board_setting\", 'String'>\n    readonly description: FieldRef<\"discussion_board_setting\", 'String'>\n    readonly created_at: FieldRef<\"discussion_board_setting\", 'DateTime'>\n    readonly updated_at: FieldRef<\"discussion_board_setting\", 'DateTime'>\n    readonly deleted_at: FieldRef<\"discussion_board_setting\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussion_board_setting findUnique\n   */\n  export type discussion_board_settingFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_setting\n     */\n    select?: discussion_board_settingSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_setting\n     */\n    omit?: discussion_board_settingOmit<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_setting to fetch.\n     */\n    where: discussion_board_settingWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_setting findUniqueOrThrow\n   */\n  export type discussion_board_settingFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_setting\n     */\n    select?: discussion_board_settingSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_setting\n     */\n    omit?: discussion_board_settingOmit<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_setting to fetch.\n     */\n    where: discussion_board_settingWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_setting findFirst\n   */\n  export type discussion_board_settingFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_setting\n     */\n    select?: discussion_board_settingSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_setting\n     */\n    omit?: discussion_board_settingOmit<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_setting to fetch.\n     */\n    where?: discussion_board_settingWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_settings to fetch.\n     */\n    orderBy?: discussion_board_settingOrderByWithRelationInput | discussion_board_settingOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_settings.\n     */\n    cursor?: discussion_board_settingWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_settings from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_settings.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_settings.\n     */\n    distinct?: Discussion_board_settingScalarFieldEnum | Discussion_board_settingScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_setting findFirstOrThrow\n   */\n  export type discussion_board_settingFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_setting\n     */\n    select?: discussion_board_settingSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_setting\n     */\n    omit?: discussion_board_settingOmit<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_setting to fetch.\n     */\n    where?: discussion_board_settingWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_settings to fetch.\n     */\n    orderBy?: discussion_board_settingOrderByWithRelationInput | discussion_board_settingOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_settings.\n     */\n    cursor?: discussion_board_settingWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_settings from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_settings.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_settings.\n     */\n    distinct?: Discussion_board_settingScalarFieldEnum | Discussion_board_settingScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_setting findMany\n   */\n  export type discussion_board_settingFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_setting\n     */\n    select?: discussion_board_settingSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_setting\n     */\n    omit?: discussion_board_settingOmit<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_settings to fetch.\n     */\n    where?: discussion_board_settingWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_settings to fetch.\n     */\n    orderBy?: discussion_board_settingOrderByWithRelationInput | discussion_board_settingOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussion_board_settings.\n     */\n    cursor?: discussion_board_settingWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_settings from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_settings.\n     */\n    skip?: number\n    distinct?: Discussion_board_settingScalarFieldEnum | Discussion_board_settingScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_setting create\n   */\n  export type discussion_board_settingCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_setting\n     */\n    select?: discussion_board_settingSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_setting\n     */\n    omit?: discussion_board_settingOmit<ExtArgs> | null\n    /**\n     * The data needed to create a discussion_board_setting.\n     */\n    data: XOR<discussion_board_settingCreateInput, discussion_board_settingUncheckedCreateInput>\n  }\n\n  /**\n   * discussion_board_setting createMany\n   */\n  export type discussion_board_settingCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussion_board_settings.\n     */\n    data: discussion_board_settingCreateManyInput | discussion_board_settingCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussion_board_setting createManyAndReturn\n   */\n  export type discussion_board_settingCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_setting\n     */\n    select?: discussion_board_settingSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_setting\n     */\n    omit?: discussion_board_settingOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussion_board_settings.\n     */\n    data: discussion_board_settingCreateManyInput | discussion_board_settingCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussion_board_setting update\n   */\n  export type discussion_board_settingUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_setting\n     */\n    select?: discussion_board_settingSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_setting\n     */\n    omit?: discussion_board_settingOmit<ExtArgs> | null\n    /**\n     * The data needed to update a discussion_board_setting.\n     */\n    data: XOR<discussion_board_settingUpdateInput, discussion_board_settingUncheckedUpdateInput>\n    /**\n     * Choose, which discussion_board_setting to update.\n     */\n    where: discussion_board_settingWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_setting updateMany\n   */\n  export type discussion_board_settingUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussion_board_settings.\n     */\n    data: XOR<discussion_board_settingUpdateManyMutationInput, discussion_board_settingUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_settings to update\n     */\n    where?: discussion_board_settingWhereInput\n    /**\n     * Limit how many discussion_board_settings to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_setting updateManyAndReturn\n   */\n  export type discussion_board_settingUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_setting\n     */\n    select?: discussion_board_settingSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_setting\n     */\n    omit?: discussion_board_settingOmit<ExtArgs> | null\n    /**\n     * The data used to update discussion_board_settings.\n     */\n    data: XOR<discussion_board_settingUpdateManyMutationInput, discussion_board_settingUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_settings to update\n     */\n    where?: discussion_board_settingWhereInput\n    /**\n     * Limit how many discussion_board_settings to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_setting upsert\n   */\n  export type discussion_board_settingUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_setting\n     */\n    select?: discussion_board_settingSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_setting\n     */\n    omit?: discussion_board_settingOmit<ExtArgs> | null\n    /**\n     * The filter to search for the discussion_board_setting to update in case it exists.\n     */\n    where: discussion_board_settingWhereUniqueInput\n    /**\n     * In case the discussion_board_setting found by the `where` argument doesn't exist, create a new discussion_board_setting with this data.\n     */\n    create: XOR<discussion_board_settingCreateInput, discussion_board_settingUncheckedCreateInput>\n    /**\n     * In case the discussion_board_setting was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussion_board_settingUpdateInput, discussion_board_settingUncheckedUpdateInput>\n  }\n\n  /**\n   * discussion_board_setting delete\n   */\n  export type discussion_board_settingDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_setting\n     */\n    select?: discussion_board_settingSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_setting\n     */\n    omit?: discussion_board_settingOmit<ExtArgs> | null\n    /**\n     * Filter which discussion_board_setting to delete.\n     */\n    where: discussion_board_settingWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_setting deleteMany\n   */\n  export type discussion_board_settingDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_settings to delete\n     */\n    where?: discussion_board_settingWhereInput\n    /**\n     * Limit how many discussion_board_settings to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_setting without action\n   */\n  export type discussion_board_settingDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_setting\n     */\n    select?: discussion_board_settingSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_setting\n     */\n    omit?: discussion_board_settingOmit<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussion_board_system_config\n   */\n\n  export type AggregateDiscussion_board_system_config = {\n    _count: Discussion_board_system_configCountAggregateOutputType | null\n    _min: Discussion_board_system_configMinAggregateOutputType | null\n    _max: Discussion_board_system_configMaxAggregateOutputType | null\n  }\n\n  export type Discussion_board_system_configMinAggregateOutputType = {\n    id: string | null\n    key: string | null\n    value: string | null\n    description: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Discussion_board_system_configMaxAggregateOutputType = {\n    id: string | null\n    key: string | null\n    value: string | null\n    description: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Discussion_board_system_configCountAggregateOutputType = {\n    id: number\n    key: number\n    value: number\n    description: number\n    created_at: number\n    updated_at: number\n    deleted_at: number\n    _all: number\n  }\n\n\n  export type Discussion_board_system_configMinAggregateInputType = {\n    id?: true\n    key?: true\n    value?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Discussion_board_system_configMaxAggregateInputType = {\n    id?: true\n    key?: true\n    value?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Discussion_board_system_configCountAggregateInputType = {\n    id?: true\n    key?: true\n    value?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n    _all?: true\n  }\n\n  export type Discussion_board_system_configAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_system_config to aggregate.\n     */\n    where?: discussion_board_system_configWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_system_configs to fetch.\n     */\n    orderBy?: discussion_board_system_configOrderByWithRelationInput | discussion_board_system_configOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussion_board_system_configWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_system_configs from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_system_configs.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussion_board_system_configs\n    **/\n    _count?: true | Discussion_board_system_configCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussion_board_system_configMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussion_board_system_configMaxAggregateInputType\n  }\n\n  export type GetDiscussion_board_system_configAggregateType<T extends Discussion_board_system_configAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussion_board_system_config]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussion_board_system_config[P]>\n      : GetScalarType<T[P], AggregateDiscussion_board_system_config[P]>\n  }\n\n\n\n\n  export type discussion_board_system_configGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussion_board_system_configWhereInput\n    orderBy?: discussion_board_system_configOrderByWithAggregationInput | discussion_board_system_configOrderByWithAggregationInput[]\n    by: Discussion_board_system_configScalarFieldEnum[] | Discussion_board_system_configScalarFieldEnum\n    having?: discussion_board_system_configScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussion_board_system_configCountAggregateInputType | true\n    _min?: Discussion_board_system_configMinAggregateInputType\n    _max?: Discussion_board_system_configMaxAggregateInputType\n  }\n\n  export type Discussion_board_system_configGroupByOutputType = {\n    id: string\n    key: string\n    value: string\n    description: string | null\n    created_at: Date\n    updated_at: Date\n    deleted_at: Date | null\n    _count: Discussion_board_system_configCountAggregateOutputType | null\n    _min: Discussion_board_system_configMinAggregateOutputType | null\n    _max: Discussion_board_system_configMaxAggregateOutputType | null\n  }\n\n  type GetDiscussion_board_system_configGroupByPayload<T extends discussion_board_system_configGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussion_board_system_configGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussion_board_system_configGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussion_board_system_configGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussion_board_system_configGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussion_board_system_configSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    key?: boolean\n    value?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }, ExtArgs[\"result\"][\"discussion_board_system_config\"]>\n\n  export type discussion_board_system_configSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    key?: boolean\n    value?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }, ExtArgs[\"result\"][\"discussion_board_system_config\"]>\n\n  export type discussion_board_system_configSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    key?: boolean\n    value?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }, ExtArgs[\"result\"][\"discussion_board_system_config\"]>\n\n  export type discussion_board_system_configSelectScalar = {\n    id?: boolean\n    key?: boolean\n    value?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }\n\n  export type discussion_board_system_configOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"key\" | \"value\" | \"description\" | \"created_at\" | \"updated_at\" | \"deleted_at\", ExtArgs[\"result\"][\"discussion_board_system_config\"]>\n\n  export type $discussion_board_system_configPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussion_board_system_config\"\n    objects: {}\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * [System Config Unique ID] - Implements the need for identifying each system-wide configuration set (for versioning, audit, or recovery). \n       * Business meaning: Allows referencing, updating, or rolling back changes atomically. Maintains normalization as an atomic UUID not derived from other fields. For example, on full platform config migration, a new row is inserted and old one marked deleted.\n       */\n      id: string\n      /**\n       * [Configuration Key] - Names the specific configuration point in the system, as per requirement for admin-driven, symbolic settings.\n       * Business meaning: Flexible to store any system-level default (such as 'default_privacy_level' or 'max_upload_size_bytes'). Strict normalization: every configuration item is atomic, logical grouping is by application logic. Example: Setting 'enable_registration' to allow/disallow new accounts.\n       */\n      key: string\n      /**\n       * [Atomic Value] - The actual value for the specified config key. May be used as a string, boolean, numeric, or JSON-stringified object by external logic.\n       * Business meaning: Enables maximum runtime flexibility (see dynamic config requirement) without denormalization—all values stored atomically as string. For example, storing '100' as the default threads-per-page setting.\n       */\n      value: string\n      /**\n       * [Description] - Explains what the configuration controls for admin context, as required for nonfunctional requirements on maintainability and transparency.\n       * Business meaning: Helps admins understand system default values. Nullable (not all settings need documentation). Maintains normalization—each row documents one config point. Example: 'Default limit for file attachment size, in bytes.'\n       */\n      description: string | null\n      /**\n       * [Creation Timestamp] - Records when this configuration entry was created, supporting compliance and configuration audit trails.\n       * Business meaning: Used for recovery and forensic tracking of policy changes. Strictly normalized—atomic to the row. Example: Auditing how system-wide spam filter rules evolved.\n       */\n      created_at: Date\n      /**\n       * [Update Timestamp] - Tracks updates, enabling controlled config changes and auditing (see disaster recovery and compliance requirements).\n       * Business meaning: Ensures that admins can investigate when key system defaults last changed. Not computed/derived from other fields, maintaining strict normalization.\n       */\n      updated_at: Date\n      /**\n       * [Soft-Delete Marker] - Implements requirements for auditability and rollback in global config management.\n       * Business meaning: Instead of being dropped, obsolete configs are softly deleted by setting this field, preserving history for compliance. Nullable for active rows. For example, marking outdated 'default_notification_email_policy'.\n       */\n      deleted_at: Date | null\n    }, ExtArgs[\"result\"][\"discussion_board_system_config\"]>\n    composites: {}\n  }\n\n  type discussion_board_system_configGetPayload<S extends boolean | null | undefined | discussion_board_system_configDefaultArgs> = $Result.GetResult<Prisma.$discussion_board_system_configPayload, S>\n\n  type discussion_board_system_configCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussion_board_system_configFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussion_board_system_configCountAggregateInputType | true\n    }\n\n  export interface discussion_board_system_configDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussion_board_system_config'], meta: { name: 'discussion_board_system_config' } }\n    /**\n     * Find zero or one Discussion_board_system_config that matches the filter.\n     * @param {discussion_board_system_configFindUniqueArgs} args - Arguments to find a Discussion_board_system_config\n     * @example\n     * // Get one Discussion_board_system_config\n     * const discussion_board_system_config = await prisma.discussion_board_system_config.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussion_board_system_configFindUniqueArgs>(args: SelectSubset<T, discussion_board_system_configFindUniqueArgs<ExtArgs>>): Prisma__discussion_board_system_configClient<$Result.GetResult<Prisma.$discussion_board_system_configPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussion_board_system_config that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussion_board_system_configFindUniqueOrThrowArgs} args - Arguments to find a Discussion_board_system_config\n     * @example\n     * // Get one Discussion_board_system_config\n     * const discussion_board_system_config = await prisma.discussion_board_system_config.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussion_board_system_configFindUniqueOrThrowArgs>(args: SelectSubset<T, discussion_board_system_configFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussion_board_system_configClient<$Result.GetResult<Prisma.$discussion_board_system_configPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_system_config that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_system_configFindFirstArgs} args - Arguments to find a Discussion_board_system_config\n     * @example\n     * // Get one Discussion_board_system_config\n     * const discussion_board_system_config = await prisma.discussion_board_system_config.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussion_board_system_configFindFirstArgs>(args?: SelectSubset<T, discussion_board_system_configFindFirstArgs<ExtArgs>>): Prisma__discussion_board_system_configClient<$Result.GetResult<Prisma.$discussion_board_system_configPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussion_board_system_config that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_system_configFindFirstOrThrowArgs} args - Arguments to find a Discussion_board_system_config\n     * @example\n     * // Get one Discussion_board_system_config\n     * const discussion_board_system_config = await prisma.discussion_board_system_config.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussion_board_system_configFindFirstOrThrowArgs>(args?: SelectSubset<T, discussion_board_system_configFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussion_board_system_configClient<$Result.GetResult<Prisma.$discussion_board_system_configPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussion_board_system_configs that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_system_configFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussion_board_system_configs\n     * const discussion_board_system_configs = await prisma.discussion_board_system_config.findMany()\n     * \n     * // Get first 10 Discussion_board_system_configs\n     * const discussion_board_system_configs = await prisma.discussion_board_system_config.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussion_board_system_configWithIdOnly = await prisma.discussion_board_system_config.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussion_board_system_configFindManyArgs>(args?: SelectSubset<T, discussion_board_system_configFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_system_configPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussion_board_system_config.\n     * @param {discussion_board_system_configCreateArgs} args - Arguments to create a Discussion_board_system_config.\n     * @example\n     * // Create one Discussion_board_system_config\n     * const Discussion_board_system_config = await prisma.discussion_board_system_config.create({\n     *   data: {\n     *     // ... data to create a Discussion_board_system_config\n     *   }\n     * })\n     * \n     */\n    create<T extends discussion_board_system_configCreateArgs>(args: SelectSubset<T, discussion_board_system_configCreateArgs<ExtArgs>>): Prisma__discussion_board_system_configClient<$Result.GetResult<Prisma.$discussion_board_system_configPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussion_board_system_configs.\n     * @param {discussion_board_system_configCreateManyArgs} args - Arguments to create many Discussion_board_system_configs.\n     * @example\n     * // Create many Discussion_board_system_configs\n     * const discussion_board_system_config = await prisma.discussion_board_system_config.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussion_board_system_configCreateManyArgs>(args?: SelectSubset<T, discussion_board_system_configCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussion_board_system_configs and returns the data saved in the database.\n     * @param {discussion_board_system_configCreateManyAndReturnArgs} args - Arguments to create many Discussion_board_system_configs.\n     * @example\n     * // Create many Discussion_board_system_configs\n     * const discussion_board_system_config = await prisma.discussion_board_system_config.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussion_board_system_configs and only return the `id`\n     * const discussion_board_system_configWithIdOnly = await prisma.discussion_board_system_config.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussion_board_system_configCreateManyAndReturnArgs>(args?: SelectSubset<T, discussion_board_system_configCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_system_configPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussion_board_system_config.\n     * @param {discussion_board_system_configDeleteArgs} args - Arguments to delete one Discussion_board_system_config.\n     * @example\n     * // Delete one Discussion_board_system_config\n     * const Discussion_board_system_config = await prisma.discussion_board_system_config.delete({\n     *   where: {\n     *     // ... filter to delete one Discussion_board_system_config\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussion_board_system_configDeleteArgs>(args: SelectSubset<T, discussion_board_system_configDeleteArgs<ExtArgs>>): Prisma__discussion_board_system_configClient<$Result.GetResult<Prisma.$discussion_board_system_configPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussion_board_system_config.\n     * @param {discussion_board_system_configUpdateArgs} args - Arguments to update one Discussion_board_system_config.\n     * @example\n     * // Update one Discussion_board_system_config\n     * const discussion_board_system_config = await prisma.discussion_board_system_config.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussion_board_system_configUpdateArgs>(args: SelectSubset<T, discussion_board_system_configUpdateArgs<ExtArgs>>): Prisma__discussion_board_system_configClient<$Result.GetResult<Prisma.$discussion_board_system_configPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussion_board_system_configs.\n     * @param {discussion_board_system_configDeleteManyArgs} args - Arguments to filter Discussion_board_system_configs to delete.\n     * @example\n     * // Delete a few Discussion_board_system_configs\n     * const { count } = await prisma.discussion_board_system_config.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussion_board_system_configDeleteManyArgs>(args?: SelectSubset<T, discussion_board_system_configDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_system_configs.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_system_configUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussion_board_system_configs\n     * const discussion_board_system_config = await prisma.discussion_board_system_config.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussion_board_system_configUpdateManyArgs>(args: SelectSubset<T, discussion_board_system_configUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussion_board_system_configs and returns the data updated in the database.\n     * @param {discussion_board_system_configUpdateManyAndReturnArgs} args - Arguments to update many Discussion_board_system_configs.\n     * @example\n     * // Update many Discussion_board_system_configs\n     * const discussion_board_system_config = await prisma.discussion_board_system_config.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussion_board_system_configs and only return the `id`\n     * const discussion_board_system_configWithIdOnly = await prisma.discussion_board_system_config.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussion_board_system_configUpdateManyAndReturnArgs>(args: SelectSubset<T, discussion_board_system_configUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussion_board_system_configPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussion_board_system_config.\n     * @param {discussion_board_system_configUpsertArgs} args - Arguments to update or create a Discussion_board_system_config.\n     * @example\n     * // Update or create a Discussion_board_system_config\n     * const discussion_board_system_config = await prisma.discussion_board_system_config.upsert({\n     *   create: {\n     *     // ... data to create a Discussion_board_system_config\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussion_board_system_config we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussion_board_system_configUpsertArgs>(args: SelectSubset<T, discussion_board_system_configUpsertArgs<ExtArgs>>): Prisma__discussion_board_system_configClient<$Result.GetResult<Prisma.$discussion_board_system_configPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussion_board_system_configs.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_system_configCountArgs} args - Arguments to filter Discussion_board_system_configs to count.\n     * @example\n     * // Count the number of Discussion_board_system_configs\n     * const count = await prisma.discussion_board_system_config.count({\n     *   where: {\n     *     // ... the filter for the Discussion_board_system_configs we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussion_board_system_configCountArgs>(\n      args?: Subset<T, discussion_board_system_configCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussion_board_system_configCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussion_board_system_config.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussion_board_system_configAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussion_board_system_configAggregateArgs>(args: Subset<T, Discussion_board_system_configAggregateArgs>): Prisma.PrismaPromise<GetDiscussion_board_system_configAggregateType<T>>\n\n    /**\n     * Group by Discussion_board_system_config.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussion_board_system_configGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussion_board_system_configGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussion_board_system_configGroupByArgs['orderBy'] }\n        : { orderBy?: discussion_board_system_configGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussion_board_system_configGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussion_board_system_configGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussion_board_system_config model\n   */\n  readonly fields: discussion_board_system_configFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussion_board_system_config.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussion_board_system_configClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussion_board_system_config model\n   */\n  interface discussion_board_system_configFieldRefs {\n    readonly id: FieldRef<\"discussion_board_system_config\", 'String'>\n    readonly key: FieldRef<\"discussion_board_system_config\", 'String'>\n    readonly value: FieldRef<\"discussion_board_system_config\", 'String'>\n    readonly description: FieldRef<\"discussion_board_system_config\", 'String'>\n    readonly created_at: FieldRef<\"discussion_board_system_config\", 'DateTime'>\n    readonly updated_at: FieldRef<\"discussion_board_system_config\", 'DateTime'>\n    readonly deleted_at: FieldRef<\"discussion_board_system_config\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussion_board_system_config findUnique\n   */\n  export type discussion_board_system_configFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_system_config\n     */\n    select?: discussion_board_system_configSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_system_config\n     */\n    omit?: discussion_board_system_configOmit<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_system_config to fetch.\n     */\n    where: discussion_board_system_configWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_system_config findUniqueOrThrow\n   */\n  export type discussion_board_system_configFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_system_config\n     */\n    select?: discussion_board_system_configSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_system_config\n     */\n    omit?: discussion_board_system_configOmit<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_system_config to fetch.\n     */\n    where: discussion_board_system_configWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_system_config findFirst\n   */\n  export type discussion_board_system_configFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_system_config\n     */\n    select?: discussion_board_system_configSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_system_config\n     */\n    omit?: discussion_board_system_configOmit<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_system_config to fetch.\n     */\n    where?: discussion_board_system_configWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_system_configs to fetch.\n     */\n    orderBy?: discussion_board_system_configOrderByWithRelationInput | discussion_board_system_configOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_system_configs.\n     */\n    cursor?: discussion_board_system_configWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_system_configs from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_system_configs.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_system_configs.\n     */\n    distinct?: Discussion_board_system_configScalarFieldEnum | Discussion_board_system_configScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_system_config findFirstOrThrow\n   */\n  export type discussion_board_system_configFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_system_config\n     */\n    select?: discussion_board_system_configSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_system_config\n     */\n    omit?: discussion_board_system_configOmit<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_system_config to fetch.\n     */\n    where?: discussion_board_system_configWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_system_configs to fetch.\n     */\n    orderBy?: discussion_board_system_configOrderByWithRelationInput | discussion_board_system_configOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussion_board_system_configs.\n     */\n    cursor?: discussion_board_system_configWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_system_configs from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_system_configs.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussion_board_system_configs.\n     */\n    distinct?: Discussion_board_system_configScalarFieldEnum | Discussion_board_system_configScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_system_config findMany\n   */\n  export type discussion_board_system_configFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_system_config\n     */\n    select?: discussion_board_system_configSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_system_config\n     */\n    omit?: discussion_board_system_configOmit<ExtArgs> | null\n    /**\n     * Filter, which discussion_board_system_configs to fetch.\n     */\n    where?: discussion_board_system_configWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussion_board_system_configs to fetch.\n     */\n    orderBy?: discussion_board_system_configOrderByWithRelationInput | discussion_board_system_configOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussion_board_system_configs.\n     */\n    cursor?: discussion_board_system_configWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussion_board_system_configs from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussion_board_system_configs.\n     */\n    skip?: number\n    distinct?: Discussion_board_system_configScalarFieldEnum | Discussion_board_system_configScalarFieldEnum[]\n  }\n\n  /**\n   * discussion_board_system_config create\n   */\n  export type discussion_board_system_configCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_system_config\n     */\n    select?: discussion_board_system_configSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_system_config\n     */\n    omit?: discussion_board_system_configOmit<ExtArgs> | null\n    /**\n     * The data needed to create a discussion_board_system_config.\n     */\n    data: XOR<discussion_board_system_configCreateInput, discussion_board_system_configUncheckedCreateInput>\n  }\n\n  /**\n   * discussion_board_system_config createMany\n   */\n  export type discussion_board_system_configCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussion_board_system_configs.\n     */\n    data: discussion_board_system_configCreateManyInput | discussion_board_system_configCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussion_board_system_config createManyAndReturn\n   */\n  export type discussion_board_system_configCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_system_config\n     */\n    select?: discussion_board_system_configSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_system_config\n     */\n    omit?: discussion_board_system_configOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussion_board_system_configs.\n     */\n    data: discussion_board_system_configCreateManyInput | discussion_board_system_configCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussion_board_system_config update\n   */\n  export type discussion_board_system_configUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_system_config\n     */\n    select?: discussion_board_system_configSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_system_config\n     */\n    omit?: discussion_board_system_configOmit<ExtArgs> | null\n    /**\n     * The data needed to update a discussion_board_system_config.\n     */\n    data: XOR<discussion_board_system_configUpdateInput, discussion_board_system_configUncheckedUpdateInput>\n    /**\n     * Choose, which discussion_board_system_config to update.\n     */\n    where: discussion_board_system_configWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_system_config updateMany\n   */\n  export type discussion_board_system_configUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussion_board_system_configs.\n     */\n    data: XOR<discussion_board_system_configUpdateManyMutationInput, discussion_board_system_configUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_system_configs to update\n     */\n    where?: discussion_board_system_configWhereInput\n    /**\n     * Limit how many discussion_board_system_configs to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_system_config updateManyAndReturn\n   */\n  export type discussion_board_system_configUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_system_config\n     */\n    select?: discussion_board_system_configSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_system_config\n     */\n    omit?: discussion_board_system_configOmit<ExtArgs> | null\n    /**\n     * The data used to update discussion_board_system_configs.\n     */\n    data: XOR<discussion_board_system_configUpdateManyMutationInput, discussion_board_system_configUncheckedUpdateManyInput>\n    /**\n     * Filter which discussion_board_system_configs to update\n     */\n    where?: discussion_board_system_configWhereInput\n    /**\n     * Limit how many discussion_board_system_configs to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_system_config upsert\n   */\n  export type discussion_board_system_configUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_system_config\n     */\n    select?: discussion_board_system_configSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_system_config\n     */\n    omit?: discussion_board_system_configOmit<ExtArgs> | null\n    /**\n     * The filter to search for the discussion_board_system_config to update in case it exists.\n     */\n    where: discussion_board_system_configWhereUniqueInput\n    /**\n     * In case the discussion_board_system_config found by the `where` argument doesn't exist, create a new discussion_board_system_config with this data.\n     */\n    create: XOR<discussion_board_system_configCreateInput, discussion_board_system_configUncheckedCreateInput>\n    /**\n     * In case the discussion_board_system_config was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussion_board_system_configUpdateInput, discussion_board_system_configUncheckedUpdateInput>\n  }\n\n  /**\n   * discussion_board_system_config delete\n   */\n  export type discussion_board_system_configDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_system_config\n     */\n    select?: discussion_board_system_configSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_system_config\n     */\n    omit?: discussion_board_system_configOmit<ExtArgs> | null\n    /**\n     * Filter which discussion_board_system_config to delete.\n     */\n    where: discussion_board_system_configWhereUniqueInput\n  }\n\n  /**\n   * discussion_board_system_config deleteMany\n   */\n  export type discussion_board_system_configDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussion_board_system_configs to delete\n     */\n    where?: discussion_board_system_configWhereInput\n    /**\n     * Limit how many discussion_board_system_configs to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussion_board_system_config without action\n   */\n  export type discussion_board_system_configDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussion_board_system_config\n     */\n    select?: discussion_board_system_configSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussion_board_system_config\n     */\n    omit?: discussion_board_system_configOmit<ExtArgs> | null\n  }\n\n\n  /**\n   * Enums\n   */\n\n  export const TransactionIsolationLevel: {\n    ReadUncommitted: 'ReadUncommitted',\n    ReadCommitted: 'ReadCommitted',\n    RepeatableRead: 'RepeatableRead',\n    Serializable: 'Serializable'\n  };\n\n  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]\n\n\n  export const Discussion_board_usersScalarFieldEnum: {\n    id: 'id',\n    username: 'username',\n    email: 'email',\n    password_hash: 'password_hash',\n    is_active: 'is_active',\n    created_at: 'created_at',\n    updated_at: 'updated_at',\n    deleted_at: 'deleted_at'\n  };\n\n  export type Discussion_board_usersScalarFieldEnum = (typeof Discussion_board_usersScalarFieldEnum)[keyof typeof Discussion_board_usersScalarFieldEnum]\n\n\n  export const Discussion_board_guestsScalarFieldEnum: {\n    id: 'id',\n    session_id: 'session_id',\n    ip_address: 'ip_address',\n    user_agent: 'user_agent',\n    accessed_at: 'accessed_at'\n  };\n\n  export type Discussion_board_guestsScalarFieldEnum = (typeof Discussion_board_guestsScalarFieldEnum)[keyof typeof Discussion_board_guestsScalarFieldEnum]\n\n\n  export const Discussion_board_moderatorsScalarFieldEnum: {\n    id: 'id',\n    user_id: 'user_id',\n    is_active: 'is_active',\n    assigned_at: 'assigned_at',\n    revoked_at: 'revoked_at'\n  };\n\n  export type Discussion_board_moderatorsScalarFieldEnum = (typeof Discussion_board_moderatorsScalarFieldEnum)[keyof typeof Discussion_board_moderatorsScalarFieldEnum]\n\n\n  export const Discussion_board_adminsScalarFieldEnum: {\n    id: 'id',\n    user_id: 'user_id',\n    is_active: 'is_active',\n    assigned_at: 'assigned_at',\n    revoked_at: 'revoked_at'\n  };\n\n  export type Discussion_board_adminsScalarFieldEnum = (typeof Discussion_board_adminsScalarFieldEnum)[keyof typeof Discussion_board_adminsScalarFieldEnum]\n\n\n  export const Discussion_board_user_profilesScalarFieldEnum: {\n    id: 'id',\n    user_id: 'user_id',\n    display_name: 'display_name',\n    avatar_url: 'avatar_url',\n    bio: 'bio',\n    badges: 'badges'\n  };\n\n  export type Discussion_board_user_profilesScalarFieldEnum = (typeof Discussion_board_user_profilesScalarFieldEnum)[keyof typeof Discussion_board_user_profilesScalarFieldEnum]\n\n\n  export const Discussion_board_user_settingsScalarFieldEnum: {\n    id: 'id',\n    user_id: 'user_id',\n    notification_email: 'notification_email',\n    notification_in_app: 'notification_in_app',\n    accessibility_mode: 'accessibility_mode',\n    display_density: 'display_density'\n  };\n\n  export type Discussion_board_user_settingsScalarFieldEnum = (typeof Discussion_board_user_settingsScalarFieldEnum)[keyof typeof Discussion_board_user_settingsScalarFieldEnum]\n\n\n  export const Discussion_board_threadScalarFieldEnum: {\n    id: 'id',\n    creator_user_id: 'creator_user_id',\n    category_id: 'category_id',\n    title: 'title',\n    body: 'body',\n    is_locked: 'is_locked',\n    is_pinned: 'is_pinned',\n    created_at: 'created_at',\n    updated_at: 'updated_at',\n    deleted_at: 'deleted_at'\n  };\n\n  export type Discussion_board_threadScalarFieldEnum = (typeof Discussion_board_threadScalarFieldEnum)[keyof typeof Discussion_board_threadScalarFieldEnum]\n\n\n  export const Discussion_board_postScalarFieldEnum: {\n    id: 'id',\n    thread_id: 'thread_id',\n    author_user_id: 'author_user_id',\n    parent_post_id: 'parent_post_id',\n    body: 'body',\n    created_at: 'created_at',\n    updated_at: 'updated_at',\n    deleted_at: 'deleted_at'\n  };\n\n  export type Discussion_board_postScalarFieldEnum = (typeof Discussion_board_postScalarFieldEnum)[keyof typeof Discussion_board_postScalarFieldEnum]\n\n\n  export const Discussion_board_commentScalarFieldEnum: {\n    id: 'id',\n    post_id: 'post_id',\n    author_user_id: 'author_user_id',\n    parent_comment_id: 'parent_comment_id',\n    body: 'body',\n    created_at: 'created_at',\n    updated_at: 'updated_at',\n    deleted_at: 'deleted_at'\n  };\n\n  export type Discussion_board_commentScalarFieldEnum = (typeof Discussion_board_commentScalarFieldEnum)[keyof typeof Discussion_board_commentScalarFieldEnum]\n\n\n  export const Discussion_board_thread_tagScalarFieldEnum: {\n    id: 'id',\n    thread_id: 'thread_id',\n    tag_id: 'tag_id',\n    created_at: 'created_at'\n  };\n\n  export type Discussion_board_thread_tagScalarFieldEnum = (typeof Discussion_board_thread_tagScalarFieldEnum)[keyof typeof Discussion_board_thread_tagScalarFieldEnum]\n\n\n  export const Discussion_board_thread_categoryScalarFieldEnum: {\n    id: 'id',\n    code: 'code',\n    name: 'name',\n    description: 'description',\n    created_at: 'created_at',\n    updated_at: 'updated_at'\n  };\n\n  export type Discussion_board_thread_categoryScalarFieldEnum = (typeof Discussion_board_thread_categoryScalarFieldEnum)[keyof typeof Discussion_board_thread_categoryScalarFieldEnum]\n\n\n  export const Discussion_board_tag_categoryScalarFieldEnum: {\n    id: 'id',\n    code: 'code',\n    name: 'name',\n    description: 'description',\n    created_at: 'created_at',\n    updated_at: 'updated_at'\n  };\n\n  export type Discussion_board_tag_categoryScalarFieldEnum = (typeof Discussion_board_tag_categoryScalarFieldEnum)[keyof typeof Discussion_board_tag_categoryScalarFieldEnum]\n\n\n  export const Mv_discussion_thread_activityScalarFieldEnum: {\n    id: 'id',\n    thread_id: 'thread_id',\n    reply_count: 'reply_count',\n    last_posted_at: 'last_posted_at',\n    participant_user_ids: 'participant_user_ids'\n  };\n\n  export type Mv_discussion_thread_activityScalarFieldEnum = (typeof Mv_discussion_thread_activityScalarFieldEnum)[keyof typeof Mv_discussion_thread_activityScalarFieldEnum]\n\n\n  export const Discussion_board_voteScalarFieldEnum: {\n    id: 'id',\n    user_id: 'user_id',\n    thread_id: 'thread_id',\n    post_id: 'post_id',\n    comment_id: 'comment_id',\n    direction: 'direction',\n    created_at: 'created_at'\n  };\n\n  export type Discussion_board_voteScalarFieldEnum = (typeof Discussion_board_voteScalarFieldEnum)[keyof typeof Discussion_board_voteScalarFieldEnum]\n\n\n  export const Discussion_board_reactionScalarFieldEnum: {\n    id: 'id',\n    user_id: 'user_id',\n    thread_id: 'thread_id',\n    post_id: 'post_id',\n    comment_id: 'comment_id',\n    reaction_type: 'reaction_type',\n    created_at: 'created_at'\n  };\n\n  export type Discussion_board_reactionScalarFieldEnum = (typeof Discussion_board_reactionScalarFieldEnum)[keyof typeof Discussion_board_reactionScalarFieldEnum]\n\n\n  export const Discussion_board_bookmarkScalarFieldEnum: {\n    id: 'id',\n    user_id: 'user_id',\n    thread_id: 'thread_id',\n    post_id: 'post_id',\n    comment_id: 'comment_id',\n    created_at: 'created_at'\n  };\n\n  export type Discussion_board_bookmarkScalarFieldEnum = (typeof Discussion_board_bookmarkScalarFieldEnum)[keyof typeof Discussion_board_bookmarkScalarFieldEnum]\n\n\n  export const Discussion_board_notificationScalarFieldEnum: {\n    id: 'id',\n    recipient_user_id: 'recipient_user_id',\n    thread_id: 'thread_id',\n    post_id: 'post_id',\n    comment_id: 'comment_id',\n    notification_type: 'notification_type',\n    is_read: 'is_read',\n    channel: 'channel',\n    created_at: 'created_at',\n    delivered_at: 'delivered_at'\n  };\n\n  export type Discussion_board_notificationScalarFieldEnum = (typeof Discussion_board_notificationScalarFieldEnum)[keyof typeof Discussion_board_notificationScalarFieldEnum]\n\n\n  export const Discussion_board_subscriptionScalarFieldEnum: {\n    id: 'id',\n    user_id: 'user_id',\n    thread_id: 'thread_id',\n    tag_id: 'tag_id',\n    post_id: 'post_id',\n    comment_id: 'comment_id',\n    channel: 'channel',\n    created_at: 'created_at',\n    expires_at: 'expires_at'\n  };\n\n  export type Discussion_board_subscriptionScalarFieldEnum = (typeof Discussion_board_subscriptionScalarFieldEnum)[keyof typeof Discussion_board_subscriptionScalarFieldEnum]\n\n\n  export const Discussion_board_reportScalarFieldEnum: {\n    id: 'id',\n    reported_user_id: 'reported_user_id',\n    reporting_user_id: 'reporting_user_id',\n    thread_id: 'thread_id',\n    post_id: 'post_id',\n    comment_id: 'comment_id',\n    status: 'status',\n    category: 'category',\n    submitted_at: 'submitted_at',\n    resolved_at: 'resolved_at',\n    details: 'details'\n  };\n\n  export type Discussion_board_reportScalarFieldEnum = (typeof Discussion_board_reportScalarFieldEnum)[keyof typeof Discussion_board_reportScalarFieldEnum]\n\n\n  export const Discussion_board_moderator_actionScalarFieldEnum: {\n    id: 'id',\n    moderator_id: 'moderator_id',\n    user_id: 'user_id',\n    report_id: 'report_id',\n    thread_id: 'thread_id',\n    post_id: 'post_id',\n    comment_id: 'comment_id',\n    action_type: 'action_type',\n    reason: 'reason',\n    created_at: 'created_at'\n  };\n\n  export type Discussion_board_moderator_actionScalarFieldEnum = (typeof Discussion_board_moderator_actionScalarFieldEnum)[keyof typeof Discussion_board_moderator_actionScalarFieldEnum]\n\n\n  export const Discussion_board_audit_logScalarFieldEnum: {\n    id: 'id',\n    actor_id: 'actor_id',\n    affected_user_id: 'affected_user_id',\n    entity_type: 'entity_type',\n    entity_id: 'entity_id',\n    action: 'action',\n    details: 'details',\n    created_at: 'created_at'\n  };\n\n  export type Discussion_board_audit_logScalarFieldEnum = (typeof Discussion_board_audit_logScalarFieldEnum)[keyof typeof Discussion_board_audit_logScalarFieldEnum]\n\n\n  export const Discussion_board_warningScalarFieldEnum: {\n    id: 'id',\n    user_id: 'user_id',\n    moderator_id: 'moderator_id',\n    thread_id: 'thread_id',\n    post_id: 'post_id',\n    comment_id: 'comment_id',\n    reason: 'reason',\n    issued_at: 'issued_at'\n  };\n\n  export type Discussion_board_warningScalarFieldEnum = (typeof Discussion_board_warningScalarFieldEnum)[keyof typeof Discussion_board_warningScalarFieldEnum]\n\n\n  export const Discussion_board_banScalarFieldEnum: {\n    id: 'id',\n    user_id: 'user_id',\n    moderator_id: 'moderator_id',\n    warning_id: 'warning_id',\n    report_id: 'report_id',\n    ban_type: 'ban_type',\n    reason: 'reason',\n    banned_at: 'banned_at',\n    expires_at: 'expires_at'\n  };\n\n  export type Discussion_board_banScalarFieldEnum = (typeof Discussion_board_banScalarFieldEnum)[keyof typeof Discussion_board_banScalarFieldEnum]\n\n\n  export const Discussion_board_thread_statsScalarFieldEnum: {\n    id: 'id',\n    discussion_board_thread_id: 'discussion_board_thread_id',\n    post_count: 'post_count',\n    comment_count: 'comment_count',\n    upvote_count: 'upvote_count',\n    downvote_count: 'downvote_count',\n    bookmark_count: 'bookmark_count',\n    abuse_report_count: 'abuse_report_count',\n    created_at: 'created_at',\n    updated_at: 'updated_at'\n  };\n\n  export type Discussion_board_thread_statsScalarFieldEnum = (typeof Discussion_board_thread_statsScalarFieldEnum)[keyof typeof Discussion_board_thread_statsScalarFieldEnum]\n\n\n  export const Discussion_board_user_activityScalarFieldEnum: {\n    id: 'id',\n    discussion_board_user_id: 'discussion_board_user_id',\n    threads_authored: 'threads_authored',\n    posts_authored: 'posts_authored',\n    comments_authored: 'comments_authored',\n    upvotes_given: 'upvotes_given',\n    downvotes_given: 'downvotes_given',\n    reports_made: 'reports_made',\n    bookmarks_created: 'bookmarks_created',\n    created_at: 'created_at',\n    updated_at: 'updated_at'\n  };\n\n  export type Discussion_board_user_activityScalarFieldEnum = (typeof Discussion_board_user_activityScalarFieldEnum)[keyof typeof Discussion_board_user_activityScalarFieldEnum]\n\n\n  export const Discussion_board_content_abuse_metricScalarFieldEnum: {\n    id: 'id',\n    moderator_id: 'moderator_id',\n    date: 'date',\n    abuse_type: 'abuse_type',\n    flagged_count: 'flagged_count',\n    auto_hidden_count: 'auto_hidden_count',\n    escalation_count: 'escalation_count',\n    false_positive_count: 'false_positive_count',\n    avg_resolution_time_minutes: 'avg_resolution_time_minutes',\n    created_at: 'created_at',\n    updated_at: 'updated_at'\n  };\n\n  export type Discussion_board_content_abuse_metricScalarFieldEnum = (typeof Discussion_board_content_abuse_metricScalarFieldEnum)[keyof typeof Discussion_board_content_abuse_metricScalarFieldEnum]\n\n\n  export const Discussion_board_settingScalarFieldEnum: {\n    id: 'id',\n    key: 'key',\n    value: 'value',\n    description: 'description',\n    created_at: 'created_at',\n    updated_at: 'updated_at',\n    deleted_at: 'deleted_at'\n  };\n\n  export type Discussion_board_settingScalarFieldEnum = (typeof Discussion_board_settingScalarFieldEnum)[keyof typeof Discussion_board_settingScalarFieldEnum]\n\n\n  export const Discussion_board_system_configScalarFieldEnum: {\n    id: 'id',\n    key: 'key',\n    value: 'value',\n    description: 'description',\n    created_at: 'created_at',\n    updated_at: 'updated_at',\n    deleted_at: 'deleted_at'\n  };\n\n  export type Discussion_board_system_configScalarFieldEnum = (typeof Discussion_board_system_configScalarFieldEnum)[keyof typeof Discussion_board_system_configScalarFieldEnum]\n\n\n  export const SortOrder: {\n    asc: 'asc',\n    desc: 'desc'\n  };\n\n  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]\n\n\n  export const QueryMode: {\n    default: 'default',\n    insensitive: 'insensitive'\n  };\n\n  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]\n\n\n  export const NullsOrder: {\n    first: 'first',\n    last: 'last'\n  };\n\n  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]\n\n\n  /**\n   * Field references\n   */\n\n\n  /**\n   * Reference to a field of type 'String'\n   */\n  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>\n    \n\n\n  /**\n   * Reference to a field of type 'String[]'\n   */\n  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>\n    \n\n\n  /**\n   * Reference to a field of type 'Boolean'\n   */\n  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>\n    \n\n\n  /**\n   * Reference to a field of type 'DateTime'\n   */\n  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>\n    \n\n\n  /**\n   * Reference to a field of type 'DateTime[]'\n   */\n  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>\n    \n\n\n  /**\n   * Reference to a field of type 'Int'\n   */\n  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>\n    \n\n\n  /**\n   * Reference to a field of type 'Int[]'\n   */\n  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>\n    \n\n\n  /**\n   * Reference to a field of type 'Float'\n   */\n  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>\n    \n\n\n  /**\n   * Reference to a field of type 'Float[]'\n   */\n  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>\n    \n  /**\n   * Deep Input Types\n   */\n\n\n  export type discussion_board_usersWhereInput = {\n    AND?: discussion_board_usersWhereInput | discussion_board_usersWhereInput[]\n    OR?: discussion_board_usersWhereInput[]\n    NOT?: discussion_board_usersWhereInput | discussion_board_usersWhereInput[]\n    id?: UuidFilter<\"discussion_board_users\"> | string\n    username?: StringFilter<\"discussion_board_users\"> | string\n    email?: StringFilter<\"discussion_board_users\"> | string\n    password_hash?: StringFilter<\"discussion_board_users\"> | string\n    is_active?: BoolFilter<\"discussion_board_users\"> | boolean\n    created_at?: DateTimeFilter<\"discussion_board_users\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussion_board_users\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"discussion_board_users\"> | Date | string | null\n    discussion_board_moderators?: XOR<Discussion_board_moderatorsNullableScalarRelationFilter, discussion_board_moderatorsWhereInput> | null\n    discussion_board_admins?: XOR<Discussion_board_adminsNullableScalarRelationFilter, discussion_board_adminsWhereInput> | null\n    discussion_board_user_profiles?: XOR<Discussion_board_user_profilesNullableScalarRelationFilter, discussion_board_user_profilesWhereInput> | null\n    discussion_board_user_settings?: XOR<Discussion_board_user_settingsNullableScalarRelationFilter, discussion_board_user_settingsWhereInput> | null\n    discussion_board_thread?: Discussion_board_threadListRelationFilter\n    discussion_board_post?: Discussion_board_postListRelationFilter\n    discussion_board_comment?: Discussion_board_commentListRelationFilter\n    discussion_board_vote?: Discussion_board_voteListRelationFilter\n    discussion_board_reaction?: Discussion_board_reactionListRelationFilter\n    discussion_board_bookmark?: Discussion_board_bookmarkListRelationFilter\n    discussion_board_notification?: Discussion_board_notificationListRelationFilter\n    discussion_board_subscription?: Discussion_board_subscriptionListRelationFilter\n    discussion_board_report_of_reported_user_id?: Discussion_board_reportListRelationFilter\n    discussion_board_report_of_reporting_user_id?: Discussion_board_reportListRelationFilter\n    discussion_board_moderator_action?: Discussion_board_moderator_actionListRelationFilter\n    discussion_board_audit_log_of_actor_id?: Discussion_board_audit_logListRelationFilter\n    discussion_board_audit_log_of_affected_user_id?: Discussion_board_audit_logListRelationFilter\n    discussion_board_warning?: Discussion_board_warningListRelationFilter\n    discussion_board_ban?: Discussion_board_banListRelationFilter\n    discussion_board_user_activity?: XOR<Discussion_board_user_activityNullableScalarRelationFilter, discussion_board_user_activityWhereInput> | null\n  }\n\n  export type discussion_board_usersOrderByWithRelationInput = {\n    id?: SortOrder\n    username?: SortOrder\n    email?: SortOrder\n    password_hash?: SortOrder\n    is_active?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    discussion_board_moderators?: discussion_board_moderatorsOrderByWithRelationInput\n    discussion_board_admins?: discussion_board_adminsOrderByWithRelationInput\n    discussion_board_user_profiles?: discussion_board_user_profilesOrderByWithRelationInput\n    discussion_board_user_settings?: discussion_board_user_settingsOrderByWithRelationInput\n    discussion_board_thread?: discussion_board_threadOrderByRelationAggregateInput\n    discussion_board_post?: discussion_board_postOrderByRelationAggregateInput\n    discussion_board_comment?: discussion_board_commentOrderByRelationAggregateInput\n    discussion_board_vote?: discussion_board_voteOrderByRelationAggregateInput\n    discussion_board_reaction?: discussion_board_reactionOrderByRelationAggregateInput\n    discussion_board_bookmark?: discussion_board_bookmarkOrderByRelationAggregateInput\n    discussion_board_notification?: discussion_board_notificationOrderByRelationAggregateInput\n    discussion_board_subscription?: discussion_board_subscriptionOrderByRelationAggregateInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportOrderByRelationAggregateInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportOrderByRelationAggregateInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionOrderByRelationAggregateInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logOrderByRelationAggregateInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logOrderByRelationAggregateInput\n    discussion_board_warning?: discussion_board_warningOrderByRelationAggregateInput\n    discussion_board_ban?: discussion_board_banOrderByRelationAggregateInput\n    discussion_board_user_activity?: discussion_board_user_activityOrderByWithRelationInput\n  }\n\n  export type discussion_board_usersWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    username?: string\n    email?: string\n    AND?: discussion_board_usersWhereInput | discussion_board_usersWhereInput[]\n    OR?: discussion_board_usersWhereInput[]\n    NOT?: discussion_board_usersWhereInput | discussion_board_usersWhereInput[]\n    password_hash?: StringFilter<\"discussion_board_users\"> | string\n    is_active?: BoolFilter<\"discussion_board_users\"> | boolean\n    created_at?: DateTimeFilter<\"discussion_board_users\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussion_board_users\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"discussion_board_users\"> | Date | string | null\n    discussion_board_moderators?: XOR<Discussion_board_moderatorsNullableScalarRelationFilter, discussion_board_moderatorsWhereInput> | null\n    discussion_board_admins?: XOR<Discussion_board_adminsNullableScalarRelationFilter, discussion_board_adminsWhereInput> | null\n    discussion_board_user_profiles?: XOR<Discussion_board_user_profilesNullableScalarRelationFilter, discussion_board_user_profilesWhereInput> | null\n    discussion_board_user_settings?: XOR<Discussion_board_user_settingsNullableScalarRelationFilter, discussion_board_user_settingsWhereInput> | null\n    discussion_board_thread?: Discussion_board_threadListRelationFilter\n    discussion_board_post?: Discussion_board_postListRelationFilter\n    discussion_board_comment?: Discussion_board_commentListRelationFilter\n    discussion_board_vote?: Discussion_board_voteListRelationFilter\n    discussion_board_reaction?: Discussion_board_reactionListRelationFilter\n    discussion_board_bookmark?: Discussion_board_bookmarkListRelationFilter\n    discussion_board_notification?: Discussion_board_notificationListRelationFilter\n    discussion_board_subscription?: Discussion_board_subscriptionListRelationFilter\n    discussion_board_report_of_reported_user_id?: Discussion_board_reportListRelationFilter\n    discussion_board_report_of_reporting_user_id?: Discussion_board_reportListRelationFilter\n    discussion_board_moderator_action?: Discussion_board_moderator_actionListRelationFilter\n    discussion_board_audit_log_of_actor_id?: Discussion_board_audit_logListRelationFilter\n    discussion_board_audit_log_of_affected_user_id?: Discussion_board_audit_logListRelationFilter\n    discussion_board_warning?: Discussion_board_warningListRelationFilter\n    discussion_board_ban?: Discussion_board_banListRelationFilter\n    discussion_board_user_activity?: XOR<Discussion_board_user_activityNullableScalarRelationFilter, discussion_board_user_activityWhereInput> | null\n  }, \"id\" | \"username\" | \"email\">\n\n  export type discussion_board_usersOrderByWithAggregationInput = {\n    id?: SortOrder\n    username?: SortOrder\n    email?: SortOrder\n    password_hash?: SortOrder\n    is_active?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    _count?: discussion_board_usersCountOrderByAggregateInput\n    _max?: discussion_board_usersMaxOrderByAggregateInput\n    _min?: discussion_board_usersMinOrderByAggregateInput\n  }\n\n  export type discussion_board_usersScalarWhereWithAggregatesInput = {\n    AND?: discussion_board_usersScalarWhereWithAggregatesInput | discussion_board_usersScalarWhereWithAggregatesInput[]\n    OR?: discussion_board_usersScalarWhereWithAggregatesInput[]\n    NOT?: discussion_board_usersScalarWhereWithAggregatesInput | discussion_board_usersScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussion_board_users\"> | string\n    username?: StringWithAggregatesFilter<\"discussion_board_users\"> | string\n    email?: StringWithAggregatesFilter<\"discussion_board_users\"> | string\n    password_hash?: StringWithAggregatesFilter<\"discussion_board_users\"> | string\n    is_active?: BoolWithAggregatesFilter<\"discussion_board_users\"> | boolean\n    created_at?: DateTimeWithAggregatesFilter<\"discussion_board_users\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"discussion_board_users\"> | Date | string\n    deleted_at?: DateTimeNullableWithAggregatesFilter<\"discussion_board_users\"> | Date | string | null\n  }\n\n  export type discussion_board_guestsWhereInput = {\n    AND?: discussion_board_guestsWhereInput | discussion_board_guestsWhereInput[]\n    OR?: discussion_board_guestsWhereInput[]\n    NOT?: discussion_board_guestsWhereInput | discussion_board_guestsWhereInput[]\n    id?: UuidFilter<\"discussion_board_guests\"> | string\n    session_id?: StringFilter<\"discussion_board_guests\"> | string\n    ip_address?: StringFilter<\"discussion_board_guests\"> | string\n    user_agent?: StringNullableFilter<\"discussion_board_guests\"> | string | null\n    accessed_at?: DateTimeFilter<\"discussion_board_guests\"> | Date | string\n  }\n\n  export type discussion_board_guestsOrderByWithRelationInput = {\n    id?: SortOrder\n    session_id?: SortOrder\n    ip_address?: SortOrder\n    user_agent?: SortOrderInput | SortOrder\n    accessed_at?: SortOrder\n  }\n\n  export type discussion_board_guestsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: discussion_board_guestsWhereInput | discussion_board_guestsWhereInput[]\n    OR?: discussion_board_guestsWhereInput[]\n    NOT?: discussion_board_guestsWhereInput | discussion_board_guestsWhereInput[]\n    session_id?: StringFilter<\"discussion_board_guests\"> | string\n    ip_address?: StringFilter<\"discussion_board_guests\"> | string\n    user_agent?: StringNullableFilter<\"discussion_board_guests\"> | string | null\n    accessed_at?: DateTimeFilter<\"discussion_board_guests\"> | Date | string\n  }, \"id\">\n\n  export type discussion_board_guestsOrderByWithAggregationInput = {\n    id?: SortOrder\n    session_id?: SortOrder\n    ip_address?: SortOrder\n    user_agent?: SortOrderInput | SortOrder\n    accessed_at?: SortOrder\n    _count?: discussion_board_guestsCountOrderByAggregateInput\n    _max?: discussion_board_guestsMaxOrderByAggregateInput\n    _min?: discussion_board_guestsMinOrderByAggregateInput\n  }\n\n  export type discussion_board_guestsScalarWhereWithAggregatesInput = {\n    AND?: discussion_board_guestsScalarWhereWithAggregatesInput | discussion_board_guestsScalarWhereWithAggregatesInput[]\n    OR?: discussion_board_guestsScalarWhereWithAggregatesInput[]\n    NOT?: discussion_board_guestsScalarWhereWithAggregatesInput | discussion_board_guestsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussion_board_guests\"> | string\n    session_id?: StringWithAggregatesFilter<\"discussion_board_guests\"> | string\n    ip_address?: StringWithAggregatesFilter<\"discussion_board_guests\"> | string\n    user_agent?: StringNullableWithAggregatesFilter<\"discussion_board_guests\"> | string | null\n    accessed_at?: DateTimeWithAggregatesFilter<\"discussion_board_guests\"> | Date | string\n  }\n\n  export type discussion_board_moderatorsWhereInput = {\n    AND?: discussion_board_moderatorsWhereInput | discussion_board_moderatorsWhereInput[]\n    OR?: discussion_board_moderatorsWhereInput[]\n    NOT?: discussion_board_moderatorsWhereInput | discussion_board_moderatorsWhereInput[]\n    id?: UuidFilter<\"discussion_board_moderators\"> | string\n    user_id?: UuidFilter<\"discussion_board_moderators\"> | string\n    is_active?: BoolFilter<\"discussion_board_moderators\"> | boolean\n    assigned_at?: DateTimeFilter<\"discussion_board_moderators\"> | Date | string\n    revoked_at?: DateTimeNullableFilter<\"discussion_board_moderators\"> | Date | string | null\n    fk_discussion_board_moderators_user_id_discussion_board_users_id?: XOR<Discussion_board_usersScalarRelationFilter, discussion_board_usersWhereInput>\n    discussion_board_moderator_action?: Discussion_board_moderator_actionListRelationFilter\n    discussion_board_warning?: Discussion_board_warningListRelationFilter\n    discussion_board_ban?: Discussion_board_banListRelationFilter\n    discussion_board_content_abuse_metric?: Discussion_board_content_abuse_metricListRelationFilter\n  }\n\n  export type discussion_board_moderatorsOrderByWithRelationInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    is_active?: SortOrder\n    assigned_at?: SortOrder\n    revoked_at?: SortOrderInput | SortOrder\n    fk_discussion_board_moderators_user_id_discussion_board_users_id?: discussion_board_usersOrderByWithRelationInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionOrderByRelationAggregateInput\n    discussion_board_warning?: discussion_board_warningOrderByRelationAggregateInput\n    discussion_board_ban?: discussion_board_banOrderByRelationAggregateInput\n    discussion_board_content_abuse_metric?: discussion_board_content_abuse_metricOrderByRelationAggregateInput\n  }\n\n  export type discussion_board_moderatorsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    user_id?: string\n    AND?: discussion_board_moderatorsWhereInput | discussion_board_moderatorsWhereInput[]\n    OR?: discussion_board_moderatorsWhereInput[]\n    NOT?: discussion_board_moderatorsWhereInput | discussion_board_moderatorsWhereInput[]\n    is_active?: BoolFilter<\"discussion_board_moderators\"> | boolean\n    assigned_at?: DateTimeFilter<\"discussion_board_moderators\"> | Date | string\n    revoked_at?: DateTimeNullableFilter<\"discussion_board_moderators\"> | Date | string | null\n    fk_discussion_board_moderators_user_id_discussion_board_users_id?: XOR<Discussion_board_usersScalarRelationFilter, discussion_board_usersWhereInput>\n    discussion_board_moderator_action?: Discussion_board_moderator_actionListRelationFilter\n    discussion_board_warning?: Discussion_board_warningListRelationFilter\n    discussion_board_ban?: Discussion_board_banListRelationFilter\n    discussion_board_content_abuse_metric?: Discussion_board_content_abuse_metricListRelationFilter\n  }, \"id\" | \"user_id\">\n\n  export type discussion_board_moderatorsOrderByWithAggregationInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    is_active?: SortOrder\n    assigned_at?: SortOrder\n    revoked_at?: SortOrderInput | SortOrder\n    _count?: discussion_board_moderatorsCountOrderByAggregateInput\n    _max?: discussion_board_moderatorsMaxOrderByAggregateInput\n    _min?: discussion_board_moderatorsMinOrderByAggregateInput\n  }\n\n  export type discussion_board_moderatorsScalarWhereWithAggregatesInput = {\n    AND?: discussion_board_moderatorsScalarWhereWithAggregatesInput | discussion_board_moderatorsScalarWhereWithAggregatesInput[]\n    OR?: discussion_board_moderatorsScalarWhereWithAggregatesInput[]\n    NOT?: discussion_board_moderatorsScalarWhereWithAggregatesInput | discussion_board_moderatorsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussion_board_moderators\"> | string\n    user_id?: UuidWithAggregatesFilter<\"discussion_board_moderators\"> | string\n    is_active?: BoolWithAggregatesFilter<\"discussion_board_moderators\"> | boolean\n    assigned_at?: DateTimeWithAggregatesFilter<\"discussion_board_moderators\"> | Date | string\n    revoked_at?: DateTimeNullableWithAggregatesFilter<\"discussion_board_moderators\"> | Date | string | null\n  }\n\n  export type discussion_board_adminsWhereInput = {\n    AND?: discussion_board_adminsWhereInput | discussion_board_adminsWhereInput[]\n    OR?: discussion_board_adminsWhereInput[]\n    NOT?: discussion_board_adminsWhereInput | discussion_board_adminsWhereInput[]\n    id?: UuidFilter<\"discussion_board_admins\"> | string\n    user_id?: UuidFilter<\"discussion_board_admins\"> | string\n    is_active?: BoolFilter<\"discussion_board_admins\"> | boolean\n    assigned_at?: DateTimeFilter<\"discussion_board_admins\"> | Date | string\n    revoked_at?: DateTimeNullableFilter<\"discussion_board_admins\"> | Date | string | null\n    fk_discussion_board_admins_user_id_discussion_board_users_id?: XOR<Discussion_board_usersScalarRelationFilter, discussion_board_usersWhereInput>\n  }\n\n  export type discussion_board_adminsOrderByWithRelationInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    is_active?: SortOrder\n    assigned_at?: SortOrder\n    revoked_at?: SortOrderInput | SortOrder\n    fk_discussion_board_admins_user_id_discussion_board_users_id?: discussion_board_usersOrderByWithRelationInput\n  }\n\n  export type discussion_board_adminsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    user_id?: string\n    AND?: discussion_board_adminsWhereInput | discussion_board_adminsWhereInput[]\n    OR?: discussion_board_adminsWhereInput[]\n    NOT?: discussion_board_adminsWhereInput | discussion_board_adminsWhereInput[]\n    is_active?: BoolFilter<\"discussion_board_admins\"> | boolean\n    assigned_at?: DateTimeFilter<\"discussion_board_admins\"> | Date | string\n    revoked_at?: DateTimeNullableFilter<\"discussion_board_admins\"> | Date | string | null\n    fk_discussion_board_admins_user_id_discussion_board_users_id?: XOR<Discussion_board_usersScalarRelationFilter, discussion_board_usersWhereInput>\n  }, \"id\" | \"user_id\">\n\n  export type discussion_board_adminsOrderByWithAggregationInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    is_active?: SortOrder\n    assigned_at?: SortOrder\n    revoked_at?: SortOrderInput | SortOrder\n    _count?: discussion_board_adminsCountOrderByAggregateInput\n    _max?: discussion_board_adminsMaxOrderByAggregateInput\n    _min?: discussion_board_adminsMinOrderByAggregateInput\n  }\n\n  export type discussion_board_adminsScalarWhereWithAggregatesInput = {\n    AND?: discussion_board_adminsScalarWhereWithAggregatesInput | discussion_board_adminsScalarWhereWithAggregatesInput[]\n    OR?: discussion_board_adminsScalarWhereWithAggregatesInput[]\n    NOT?: discussion_board_adminsScalarWhereWithAggregatesInput | discussion_board_adminsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussion_board_admins\"> | string\n    user_id?: UuidWithAggregatesFilter<\"discussion_board_admins\"> | string\n    is_active?: BoolWithAggregatesFilter<\"discussion_board_admins\"> | boolean\n    assigned_at?: DateTimeWithAggregatesFilter<\"discussion_board_admins\"> | Date | string\n    revoked_at?: DateTimeNullableWithAggregatesFilter<\"discussion_board_admins\"> | Date | string | null\n  }\n\n  export type discussion_board_user_profilesWhereInput = {\n    AND?: discussion_board_user_profilesWhereInput | discussion_board_user_profilesWhereInput[]\n    OR?: discussion_board_user_profilesWhereInput[]\n    NOT?: discussion_board_user_profilesWhereInput | discussion_board_user_profilesWhereInput[]\n    id?: UuidFilter<\"discussion_board_user_profiles\"> | string\n    user_id?: UuidFilter<\"discussion_board_user_profiles\"> | string\n    display_name?: StringNullableFilter<\"discussion_board_user_profiles\"> | string | null\n    avatar_url?: StringNullableFilter<\"discussion_board_user_profiles\"> | string | null\n    bio?: StringNullableFilter<\"discussion_board_user_profiles\"> | string | null\n    badges?: StringNullableFilter<\"discussion_board_user_profiles\"> | string | null\n    fk_discussion_board_user_profiles_user_id_discussion_board_users_id?: XOR<Discussion_board_usersScalarRelationFilter, discussion_board_usersWhereInput>\n  }\n\n  export type discussion_board_user_profilesOrderByWithRelationInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    display_name?: SortOrderInput | SortOrder\n    avatar_url?: SortOrderInput | SortOrder\n    bio?: SortOrderInput | SortOrder\n    badges?: SortOrderInput | SortOrder\n    fk_discussion_board_user_profiles_user_id_discussion_board_users_id?: discussion_board_usersOrderByWithRelationInput\n  }\n\n  export type discussion_board_user_profilesWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    user_id?: string\n    AND?: discussion_board_user_profilesWhereInput | discussion_board_user_profilesWhereInput[]\n    OR?: discussion_board_user_profilesWhereInput[]\n    NOT?: discussion_board_user_profilesWhereInput | discussion_board_user_profilesWhereInput[]\n    display_name?: StringNullableFilter<\"discussion_board_user_profiles\"> | string | null\n    avatar_url?: StringNullableFilter<\"discussion_board_user_profiles\"> | string | null\n    bio?: StringNullableFilter<\"discussion_board_user_profiles\"> | string | null\n    badges?: StringNullableFilter<\"discussion_board_user_profiles\"> | string | null\n    fk_discussion_board_user_profiles_user_id_discussion_board_users_id?: XOR<Discussion_board_usersScalarRelationFilter, discussion_board_usersWhereInput>\n  }, \"id\" | \"user_id\">\n\n  export type discussion_board_user_profilesOrderByWithAggregationInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    display_name?: SortOrderInput | SortOrder\n    avatar_url?: SortOrderInput | SortOrder\n    bio?: SortOrderInput | SortOrder\n    badges?: SortOrderInput | SortOrder\n    _count?: discussion_board_user_profilesCountOrderByAggregateInput\n    _max?: discussion_board_user_profilesMaxOrderByAggregateInput\n    _min?: discussion_board_user_profilesMinOrderByAggregateInput\n  }\n\n  export type discussion_board_user_profilesScalarWhereWithAggregatesInput = {\n    AND?: discussion_board_user_profilesScalarWhereWithAggregatesInput | discussion_board_user_profilesScalarWhereWithAggregatesInput[]\n    OR?: discussion_board_user_profilesScalarWhereWithAggregatesInput[]\n    NOT?: discussion_board_user_profilesScalarWhereWithAggregatesInput | discussion_board_user_profilesScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussion_board_user_profiles\"> | string\n    user_id?: UuidWithAggregatesFilter<\"discussion_board_user_profiles\"> | string\n    display_name?: StringNullableWithAggregatesFilter<\"discussion_board_user_profiles\"> | string | null\n    avatar_url?: StringNullableWithAggregatesFilter<\"discussion_board_user_profiles\"> | string | null\n    bio?: StringNullableWithAggregatesFilter<\"discussion_board_user_profiles\"> | string | null\n    badges?: StringNullableWithAggregatesFilter<\"discussion_board_user_profiles\"> | string | null\n  }\n\n  export type discussion_board_user_settingsWhereInput = {\n    AND?: discussion_board_user_settingsWhereInput | discussion_board_user_settingsWhereInput[]\n    OR?: discussion_board_user_settingsWhereInput[]\n    NOT?: discussion_board_user_settingsWhereInput | discussion_board_user_settingsWhereInput[]\n    id?: UuidFilter<\"discussion_board_user_settings\"> | string\n    user_id?: UuidFilter<\"discussion_board_user_settings\"> | string\n    notification_email?: BoolFilter<\"discussion_board_user_settings\"> | boolean\n    notification_in_app?: BoolFilter<\"discussion_board_user_settings\"> | boolean\n    accessibility_mode?: StringNullableFilter<\"discussion_board_user_settings\"> | string | null\n    display_density?: StringNullableFilter<\"discussion_board_user_settings\"> | string | null\n    fk_discussion_board_user_settings_user_id_discussion_board_users_id?: XOR<Discussion_board_usersScalarRelationFilter, discussion_board_usersWhereInput>\n  }\n\n  export type discussion_board_user_settingsOrderByWithRelationInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    notification_email?: SortOrder\n    notification_in_app?: SortOrder\n    accessibility_mode?: SortOrderInput | SortOrder\n    display_density?: SortOrderInput | SortOrder\n    fk_discussion_board_user_settings_user_id_discussion_board_users_id?: discussion_board_usersOrderByWithRelationInput\n  }\n\n  export type discussion_board_user_settingsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    user_id?: string\n    AND?: discussion_board_user_settingsWhereInput | discussion_board_user_settingsWhereInput[]\n    OR?: discussion_board_user_settingsWhereInput[]\n    NOT?: discussion_board_user_settingsWhereInput | discussion_board_user_settingsWhereInput[]\n    notification_email?: BoolFilter<\"discussion_board_user_settings\"> | boolean\n    notification_in_app?: BoolFilter<\"discussion_board_user_settings\"> | boolean\n    accessibility_mode?: StringNullableFilter<\"discussion_board_user_settings\"> | string | null\n    display_density?: StringNullableFilter<\"discussion_board_user_settings\"> | string | null\n    fk_discussion_board_user_settings_user_id_discussion_board_users_id?: XOR<Discussion_board_usersScalarRelationFilter, discussion_board_usersWhereInput>\n  }, \"id\" | \"user_id\">\n\n  export type discussion_board_user_settingsOrderByWithAggregationInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    notification_email?: SortOrder\n    notification_in_app?: SortOrder\n    accessibility_mode?: SortOrderInput | SortOrder\n    display_density?: SortOrderInput | SortOrder\n    _count?: discussion_board_user_settingsCountOrderByAggregateInput\n    _max?: discussion_board_user_settingsMaxOrderByAggregateInput\n    _min?: discussion_board_user_settingsMinOrderByAggregateInput\n  }\n\n  export type discussion_board_user_settingsScalarWhereWithAggregatesInput = {\n    AND?: discussion_board_user_settingsScalarWhereWithAggregatesInput | discussion_board_user_settingsScalarWhereWithAggregatesInput[]\n    OR?: discussion_board_user_settingsScalarWhereWithAggregatesInput[]\n    NOT?: discussion_board_user_settingsScalarWhereWithAggregatesInput | discussion_board_user_settingsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussion_board_user_settings\"> | string\n    user_id?: UuidWithAggregatesFilter<\"discussion_board_user_settings\"> | string\n    notification_email?: BoolWithAggregatesFilter<\"discussion_board_user_settings\"> | boolean\n    notification_in_app?: BoolWithAggregatesFilter<\"discussion_board_user_settings\"> | boolean\n    accessibility_mode?: StringNullableWithAggregatesFilter<\"discussion_board_user_settings\"> | string | null\n    display_density?: StringNullableWithAggregatesFilter<\"discussion_board_user_settings\"> | string | null\n  }\n\n  export type discussion_board_threadWhereInput = {\n    AND?: discussion_board_threadWhereInput | discussion_board_threadWhereInput[]\n    OR?: discussion_board_threadWhereInput[]\n    NOT?: discussion_board_threadWhereInput | discussion_board_threadWhereInput[]\n    id?: UuidFilter<\"discussion_board_thread\"> | string\n    creator_user_id?: UuidFilter<\"discussion_board_thread\"> | string\n    category_id?: UuidFilter<\"discussion_board_thread\"> | string\n    title?: StringFilter<\"discussion_board_thread\"> | string\n    body?: StringFilter<\"discussion_board_thread\"> | string\n    is_locked?: BoolFilter<\"discussion_board_thread\"> | boolean\n    is_pinned?: BoolFilter<\"discussion_board_thread\"> | boolean\n    created_at?: DateTimeFilter<\"discussion_board_thread\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussion_board_thread\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"discussion_board_thread\"> | Date | string | null\n    creator_user?: XOR<Discussion_board_usersScalarRelationFilter, discussion_board_usersWhereInput>\n    category?: XOR<Discussion_board_thread_categoryScalarRelationFilter, discussion_board_thread_categoryWhereInput>\n    discussion_board_post?: Discussion_board_postListRelationFilter\n    discussion_board_thread_tag?: Discussion_board_thread_tagListRelationFilter\n    mv_discussion_thread_activity?: XOR<Mv_discussion_thread_activityNullableScalarRelationFilter, mv_discussion_thread_activityWhereInput> | null\n    discussion_board_vote?: Discussion_board_voteListRelationFilter\n    discussion_board_reaction?: Discussion_board_reactionListRelationFilter\n    discussion_board_bookmark?: Discussion_board_bookmarkListRelationFilter\n    discussion_board_notification?: Discussion_board_notificationListRelationFilter\n    discussion_board_subscription?: Discussion_board_subscriptionListRelationFilter\n    discussion_board_report?: Discussion_board_reportListRelationFilter\n    discussion_board_moderator_action?: Discussion_board_moderator_actionListRelationFilter\n    discussion_board_warning?: Discussion_board_warningListRelationFilter\n    discussion_board_thread_stats?: XOR<Discussion_board_thread_statsNullableScalarRelationFilter, discussion_board_thread_statsWhereInput> | null\n  }\n\n  export type discussion_board_threadOrderByWithRelationInput = {\n    id?: SortOrder\n    creator_user_id?: SortOrder\n    category_id?: SortOrder\n    title?: SortOrder\n    body?: SortOrder\n    is_locked?: SortOrder\n    is_pinned?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    creator_user?: discussion_board_usersOrderByWithRelationInput\n    category?: discussion_board_thread_categoryOrderByWithRelationInput\n    discussion_board_post?: discussion_board_postOrderByRelationAggregateInput\n    discussion_board_thread_tag?: discussion_board_thread_tagOrderByRelationAggregateInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityOrderByWithRelationInput\n    discussion_board_vote?: discussion_board_voteOrderByRelationAggregateInput\n    discussion_board_reaction?: discussion_board_reactionOrderByRelationAggregateInput\n    discussion_board_bookmark?: discussion_board_bookmarkOrderByRelationAggregateInput\n    discussion_board_notification?: discussion_board_notificationOrderByRelationAggregateInput\n    discussion_board_subscription?: discussion_board_subscriptionOrderByRelationAggregateInput\n    discussion_board_report?: discussion_board_reportOrderByRelationAggregateInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionOrderByRelationAggregateInput\n    discussion_board_warning?: discussion_board_warningOrderByRelationAggregateInput\n    discussion_board_thread_stats?: discussion_board_thread_statsOrderByWithRelationInput\n  }\n\n  export type discussion_board_threadWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    title_category_id?: discussion_board_threadTitleCategory_idCompoundUniqueInput\n    AND?: discussion_board_threadWhereInput | discussion_board_threadWhereInput[]\n    OR?: discussion_board_threadWhereInput[]\n    NOT?: discussion_board_threadWhereInput | discussion_board_threadWhereInput[]\n    creator_user_id?: UuidFilter<\"discussion_board_thread\"> | string\n    category_id?: UuidFilter<\"discussion_board_thread\"> | string\n    title?: StringFilter<\"discussion_board_thread\"> | string\n    body?: StringFilter<\"discussion_board_thread\"> | string\n    is_locked?: BoolFilter<\"discussion_board_thread\"> | boolean\n    is_pinned?: BoolFilter<\"discussion_board_thread\"> | boolean\n    created_at?: DateTimeFilter<\"discussion_board_thread\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussion_board_thread\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"discussion_board_thread\"> | Date | string | null\n    creator_user?: XOR<Discussion_board_usersScalarRelationFilter, discussion_board_usersWhereInput>\n    category?: XOR<Discussion_board_thread_categoryScalarRelationFilter, discussion_board_thread_categoryWhereInput>\n    discussion_board_post?: Discussion_board_postListRelationFilter\n    discussion_board_thread_tag?: Discussion_board_thread_tagListRelationFilter\n    mv_discussion_thread_activity?: XOR<Mv_discussion_thread_activityNullableScalarRelationFilter, mv_discussion_thread_activityWhereInput> | null\n    discussion_board_vote?: Discussion_board_voteListRelationFilter\n    discussion_board_reaction?: Discussion_board_reactionListRelationFilter\n    discussion_board_bookmark?: Discussion_board_bookmarkListRelationFilter\n    discussion_board_notification?: Discussion_board_notificationListRelationFilter\n    discussion_board_subscription?: Discussion_board_subscriptionListRelationFilter\n    discussion_board_report?: Discussion_board_reportListRelationFilter\n    discussion_board_moderator_action?: Discussion_board_moderator_actionListRelationFilter\n    discussion_board_warning?: Discussion_board_warningListRelationFilter\n    discussion_board_thread_stats?: XOR<Discussion_board_thread_statsNullableScalarRelationFilter, discussion_board_thread_statsWhereInput> | null\n  }, \"id\" | \"title_category_id\">\n\n  export type discussion_board_threadOrderByWithAggregationInput = {\n    id?: SortOrder\n    creator_user_id?: SortOrder\n    category_id?: SortOrder\n    title?: SortOrder\n    body?: SortOrder\n    is_locked?: SortOrder\n    is_pinned?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    _count?: discussion_board_threadCountOrderByAggregateInput\n    _max?: discussion_board_threadMaxOrderByAggregateInput\n    _min?: discussion_board_threadMinOrderByAggregateInput\n  }\n\n  export type discussion_board_threadScalarWhereWithAggregatesInput = {\n    AND?: discussion_board_threadScalarWhereWithAggregatesInput | discussion_board_threadScalarWhereWithAggregatesInput[]\n    OR?: discussion_board_threadScalarWhereWithAggregatesInput[]\n    NOT?: discussion_board_threadScalarWhereWithAggregatesInput | discussion_board_threadScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussion_board_thread\"> | string\n    creator_user_id?: UuidWithAggregatesFilter<\"discussion_board_thread\"> | string\n    category_id?: UuidWithAggregatesFilter<\"discussion_board_thread\"> | string\n    title?: StringWithAggregatesFilter<\"discussion_board_thread\"> | string\n    body?: StringWithAggregatesFilter<\"discussion_board_thread\"> | string\n    is_locked?: BoolWithAggregatesFilter<\"discussion_board_thread\"> | boolean\n    is_pinned?: BoolWithAggregatesFilter<\"discussion_board_thread\"> | boolean\n    created_at?: DateTimeWithAggregatesFilter<\"discussion_board_thread\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"discussion_board_thread\"> | Date | string\n    deleted_at?: DateTimeNullableWithAggregatesFilter<\"discussion_board_thread\"> | Date | string | null\n  }\n\n  export type discussion_board_postWhereInput = {\n    AND?: discussion_board_postWhereInput | discussion_board_postWhereInput[]\n    OR?: discussion_board_postWhereInput[]\n    NOT?: discussion_board_postWhereInput | discussion_board_postWhereInput[]\n    id?: UuidFilter<\"discussion_board_post\"> | string\n    thread_id?: UuidFilter<\"discussion_board_post\"> | string\n    author_user_id?: UuidFilter<\"discussion_board_post\"> | string\n    parent_post_id?: UuidNullableFilter<\"discussion_board_post\"> | string | null\n    body?: StringFilter<\"discussion_board_post\"> | string\n    created_at?: DateTimeFilter<\"discussion_board_post\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussion_board_post\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"discussion_board_post\"> | Date | string | null\n    thread?: XOR<Discussion_board_threadScalarRelationFilter, discussion_board_threadWhereInput>\n    author_user?: XOR<Discussion_board_usersScalarRelationFilter, discussion_board_usersWhereInput>\n    parent_post?: XOR<Discussion_board_postNullableScalarRelationFilter, discussion_board_postWhereInput> | null\n    recursive?: Discussion_board_postListRelationFilter\n    discussion_board_comment?: Discussion_board_commentListRelationFilter\n    discussion_board_vote?: Discussion_board_voteListRelationFilter\n    discussion_board_reaction?: Discussion_board_reactionListRelationFilter\n    discussion_board_bookmark?: Discussion_board_bookmarkListRelationFilter\n    discussion_board_notification?: Discussion_board_notificationListRelationFilter\n    discussion_board_subscription?: Discussion_board_subscriptionListRelationFilter\n    discussion_board_report?: Discussion_board_reportListRelationFilter\n    discussion_board_moderator_action?: Discussion_board_moderator_actionListRelationFilter\n    discussion_board_warning?: Discussion_board_warningListRelationFilter\n  }\n\n  export type discussion_board_postOrderByWithRelationInput = {\n    id?: SortOrder\n    thread_id?: SortOrder\n    author_user_id?: SortOrder\n    parent_post_id?: SortOrderInput | SortOrder\n    body?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    thread?: discussion_board_threadOrderByWithRelationInput\n    author_user?: discussion_board_usersOrderByWithRelationInput\n    parent_post?: discussion_board_postOrderByWithRelationInput\n    recursive?: discussion_board_postOrderByRelationAggregateInput\n    discussion_board_comment?: discussion_board_commentOrderByRelationAggregateInput\n    discussion_board_vote?: discussion_board_voteOrderByRelationAggregateInput\n    discussion_board_reaction?: discussion_board_reactionOrderByRelationAggregateInput\n    discussion_board_bookmark?: discussion_board_bookmarkOrderByRelationAggregateInput\n    discussion_board_notification?: discussion_board_notificationOrderByRelationAggregateInput\n    discussion_board_subscription?: discussion_board_subscriptionOrderByRelationAggregateInput\n    discussion_board_report?: discussion_board_reportOrderByRelationAggregateInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionOrderByRelationAggregateInput\n    discussion_board_warning?: discussion_board_warningOrderByRelationAggregateInput\n  }\n\n  export type discussion_board_postWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: discussion_board_postWhereInput | discussion_board_postWhereInput[]\n    OR?: discussion_board_postWhereInput[]\n    NOT?: discussion_board_postWhereInput | discussion_board_postWhereInput[]\n    thread_id?: UuidFilter<\"discussion_board_post\"> | string\n    author_user_id?: UuidFilter<\"discussion_board_post\"> | string\n    parent_post_id?: UuidNullableFilter<\"discussion_board_post\"> | string | null\n    body?: StringFilter<\"discussion_board_post\"> | string\n    created_at?: DateTimeFilter<\"discussion_board_post\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussion_board_post\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"discussion_board_post\"> | Date | string | null\n    thread?: XOR<Discussion_board_threadScalarRelationFilter, discussion_board_threadWhereInput>\n    author_user?: XOR<Discussion_board_usersScalarRelationFilter, discussion_board_usersWhereInput>\n    parent_post?: XOR<Discussion_board_postNullableScalarRelationFilter, discussion_board_postWhereInput> | null\n    recursive?: Discussion_board_postListRelationFilter\n    discussion_board_comment?: Discussion_board_commentListRelationFilter\n    discussion_board_vote?: Discussion_board_voteListRelationFilter\n    discussion_board_reaction?: Discussion_board_reactionListRelationFilter\n    discussion_board_bookmark?: Discussion_board_bookmarkListRelationFilter\n    discussion_board_notification?: Discussion_board_notificationListRelationFilter\n    discussion_board_subscription?: Discussion_board_subscriptionListRelationFilter\n    discussion_board_report?: Discussion_board_reportListRelationFilter\n    discussion_board_moderator_action?: Discussion_board_moderator_actionListRelationFilter\n    discussion_board_warning?: Discussion_board_warningListRelationFilter\n  }, \"id\">\n\n  export type discussion_board_postOrderByWithAggregationInput = {\n    id?: SortOrder\n    thread_id?: SortOrder\n    author_user_id?: SortOrder\n    parent_post_id?: SortOrderInput | SortOrder\n    body?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    _count?: discussion_board_postCountOrderByAggregateInput\n    _max?: discussion_board_postMaxOrderByAggregateInput\n    _min?: discussion_board_postMinOrderByAggregateInput\n  }\n\n  export type discussion_board_postScalarWhereWithAggregatesInput = {\n    AND?: discussion_board_postScalarWhereWithAggregatesInput | discussion_board_postScalarWhereWithAggregatesInput[]\n    OR?: discussion_board_postScalarWhereWithAggregatesInput[]\n    NOT?: discussion_board_postScalarWhereWithAggregatesInput | discussion_board_postScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussion_board_post\"> | string\n    thread_id?: UuidWithAggregatesFilter<\"discussion_board_post\"> | string\n    author_user_id?: UuidWithAggregatesFilter<\"discussion_board_post\"> | string\n    parent_post_id?: UuidNullableWithAggregatesFilter<\"discussion_board_post\"> | string | null\n    body?: StringWithAggregatesFilter<\"discussion_board_post\"> | string\n    created_at?: DateTimeWithAggregatesFilter<\"discussion_board_post\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"discussion_board_post\"> | Date | string\n    deleted_at?: DateTimeNullableWithAggregatesFilter<\"discussion_board_post\"> | Date | string | null\n  }\n\n  export type discussion_board_commentWhereInput = {\n    AND?: discussion_board_commentWhereInput | discussion_board_commentWhereInput[]\n    OR?: discussion_board_commentWhereInput[]\n    NOT?: discussion_board_commentWhereInput | discussion_board_commentWhereInput[]\n    id?: UuidFilter<\"discussion_board_comment\"> | string\n    post_id?: UuidFilter<\"discussion_board_comment\"> | string\n    author_user_id?: UuidFilter<\"discussion_board_comment\"> | string\n    parent_comment_id?: UuidNullableFilter<\"discussion_board_comment\"> | string | null\n    body?: StringFilter<\"discussion_board_comment\"> | string\n    created_at?: DateTimeFilter<\"discussion_board_comment\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussion_board_comment\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"discussion_board_comment\"> | Date | string | null\n    post?: XOR<Discussion_board_postScalarRelationFilter, discussion_board_postWhereInput>\n    author_user?: XOR<Discussion_board_usersScalarRelationFilter, discussion_board_usersWhereInput>\n    parent_comment?: XOR<Discussion_board_commentNullableScalarRelationFilter, discussion_board_commentWhereInput> | null\n    recursive?: Discussion_board_commentListRelationFilter\n    discussion_board_vote?: Discussion_board_voteListRelationFilter\n    discussion_board_reaction?: Discussion_board_reactionListRelationFilter\n    discussion_board_bookmark?: Discussion_board_bookmarkListRelationFilter\n    discussion_board_notification?: Discussion_board_notificationListRelationFilter\n    discussion_board_subscription?: Discussion_board_subscriptionListRelationFilter\n    discussion_board_report?: Discussion_board_reportListRelationFilter\n    discussion_board_moderator_action?: Discussion_board_moderator_actionListRelationFilter\n    discussion_board_warning?: Discussion_board_warningListRelationFilter\n  }\n\n  export type discussion_board_commentOrderByWithRelationInput = {\n    id?: SortOrder\n    post_id?: SortOrder\n    author_user_id?: SortOrder\n    parent_comment_id?: SortOrderInput | SortOrder\n    body?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    post?: discussion_board_postOrderByWithRelationInput\n    author_user?: discussion_board_usersOrderByWithRelationInput\n    parent_comment?: discussion_board_commentOrderByWithRelationInput\n    recursive?: discussion_board_commentOrderByRelationAggregateInput\n    discussion_board_vote?: discussion_board_voteOrderByRelationAggregateInput\n    discussion_board_reaction?: discussion_board_reactionOrderByRelationAggregateInput\n    discussion_board_bookmark?: discussion_board_bookmarkOrderByRelationAggregateInput\n    discussion_board_notification?: discussion_board_notificationOrderByRelationAggregateInput\n    discussion_board_subscription?: discussion_board_subscriptionOrderByRelationAggregateInput\n    discussion_board_report?: discussion_board_reportOrderByRelationAggregateInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionOrderByRelationAggregateInput\n    discussion_board_warning?: discussion_board_warningOrderByRelationAggregateInput\n  }\n\n  export type discussion_board_commentWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: discussion_board_commentWhereInput | discussion_board_commentWhereInput[]\n    OR?: discussion_board_commentWhereInput[]\n    NOT?: discussion_board_commentWhereInput | discussion_board_commentWhereInput[]\n    post_id?: UuidFilter<\"discussion_board_comment\"> | string\n    author_user_id?: UuidFilter<\"discussion_board_comment\"> | string\n    parent_comment_id?: UuidNullableFilter<\"discussion_board_comment\"> | string | null\n    body?: StringFilter<\"discussion_board_comment\"> | string\n    created_at?: DateTimeFilter<\"discussion_board_comment\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussion_board_comment\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"discussion_board_comment\"> | Date | string | null\n    post?: XOR<Discussion_board_postScalarRelationFilter, discussion_board_postWhereInput>\n    author_user?: XOR<Discussion_board_usersScalarRelationFilter, discussion_board_usersWhereInput>\n    parent_comment?: XOR<Discussion_board_commentNullableScalarRelationFilter, discussion_board_commentWhereInput> | null\n    recursive?: Discussion_board_commentListRelationFilter\n    discussion_board_vote?: Discussion_board_voteListRelationFilter\n    discussion_board_reaction?: Discussion_board_reactionListRelationFilter\n    discussion_board_bookmark?: Discussion_board_bookmarkListRelationFilter\n    discussion_board_notification?: Discussion_board_notificationListRelationFilter\n    discussion_board_subscription?: Discussion_board_subscriptionListRelationFilter\n    discussion_board_report?: Discussion_board_reportListRelationFilter\n    discussion_board_moderator_action?: Discussion_board_moderator_actionListRelationFilter\n    discussion_board_warning?: Discussion_board_warningListRelationFilter\n  }, \"id\">\n\n  export type discussion_board_commentOrderByWithAggregationInput = {\n    id?: SortOrder\n    post_id?: SortOrder\n    author_user_id?: SortOrder\n    parent_comment_id?: SortOrderInput | SortOrder\n    body?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    _count?: discussion_board_commentCountOrderByAggregateInput\n    _max?: discussion_board_commentMaxOrderByAggregateInput\n    _min?: discussion_board_commentMinOrderByAggregateInput\n  }\n\n  export type discussion_board_commentScalarWhereWithAggregatesInput = {\n    AND?: discussion_board_commentScalarWhereWithAggregatesInput | discussion_board_commentScalarWhereWithAggregatesInput[]\n    OR?: discussion_board_commentScalarWhereWithAggregatesInput[]\n    NOT?: discussion_board_commentScalarWhereWithAggregatesInput | discussion_board_commentScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussion_board_comment\"> | string\n    post_id?: UuidWithAggregatesFilter<\"discussion_board_comment\"> | string\n    author_user_id?: UuidWithAggregatesFilter<\"discussion_board_comment\"> | string\n    parent_comment_id?: UuidNullableWithAggregatesFilter<\"discussion_board_comment\"> | string | null\n    body?: StringWithAggregatesFilter<\"discussion_board_comment\"> | string\n    created_at?: DateTimeWithAggregatesFilter<\"discussion_board_comment\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"discussion_board_comment\"> | Date | string\n    deleted_at?: DateTimeNullableWithAggregatesFilter<\"discussion_board_comment\"> | Date | string | null\n  }\n\n  export type discussion_board_thread_tagWhereInput = {\n    AND?: discussion_board_thread_tagWhereInput | discussion_board_thread_tagWhereInput[]\n    OR?: discussion_board_thread_tagWhereInput[]\n    NOT?: discussion_board_thread_tagWhereInput | discussion_board_thread_tagWhereInput[]\n    id?: UuidFilter<\"discussion_board_thread_tag\"> | string\n    thread_id?: UuidFilter<\"discussion_board_thread_tag\"> | string\n    tag_id?: UuidFilter<\"discussion_board_thread_tag\"> | string\n    created_at?: DateTimeFilter<\"discussion_board_thread_tag\"> | Date | string\n    thread?: XOR<Discussion_board_threadScalarRelationFilter, discussion_board_threadWhereInput>\n    tag_category?: XOR<Discussion_board_tag_categoryScalarRelationFilter, discussion_board_tag_categoryWhereInput>\n    discussion_board_subscription?: Discussion_board_subscriptionListRelationFilter\n  }\n\n  export type discussion_board_thread_tagOrderByWithRelationInput = {\n    id?: SortOrder\n    thread_id?: SortOrder\n    tag_id?: SortOrder\n    created_at?: SortOrder\n    thread?: discussion_board_threadOrderByWithRelationInput\n    tag_category?: discussion_board_tag_categoryOrderByWithRelationInput\n    discussion_board_subscription?: discussion_board_subscriptionOrderByRelationAggregateInput\n  }\n\n  export type discussion_board_thread_tagWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    thread_id_tag_id?: discussion_board_thread_tagThread_idTag_idCompoundUniqueInput\n    AND?: discussion_board_thread_tagWhereInput | discussion_board_thread_tagWhereInput[]\n    OR?: discussion_board_thread_tagWhereInput[]\n    NOT?: discussion_board_thread_tagWhereInput | discussion_board_thread_tagWhereInput[]\n    thread_id?: UuidFilter<\"discussion_board_thread_tag\"> | string\n    tag_id?: UuidFilter<\"discussion_board_thread_tag\"> | string\n    created_at?: DateTimeFilter<\"discussion_board_thread_tag\"> | Date | string\n    thread?: XOR<Discussion_board_threadScalarRelationFilter, discussion_board_threadWhereInput>\n    tag_category?: XOR<Discussion_board_tag_categoryScalarRelationFilter, discussion_board_tag_categoryWhereInput>\n    discussion_board_subscription?: Discussion_board_subscriptionListRelationFilter\n  }, \"id\" | \"thread_id_tag_id\">\n\n  export type discussion_board_thread_tagOrderByWithAggregationInput = {\n    id?: SortOrder\n    thread_id?: SortOrder\n    tag_id?: SortOrder\n    created_at?: SortOrder\n    _count?: discussion_board_thread_tagCountOrderByAggregateInput\n    _max?: discussion_board_thread_tagMaxOrderByAggregateInput\n    _min?: discussion_board_thread_tagMinOrderByAggregateInput\n  }\n\n  export type discussion_board_thread_tagScalarWhereWithAggregatesInput = {\n    AND?: discussion_board_thread_tagScalarWhereWithAggregatesInput | discussion_board_thread_tagScalarWhereWithAggregatesInput[]\n    OR?: discussion_board_thread_tagScalarWhereWithAggregatesInput[]\n    NOT?: discussion_board_thread_tagScalarWhereWithAggregatesInput | discussion_board_thread_tagScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussion_board_thread_tag\"> | string\n    thread_id?: UuidWithAggregatesFilter<\"discussion_board_thread_tag\"> | string\n    tag_id?: UuidWithAggregatesFilter<\"discussion_board_thread_tag\"> | string\n    created_at?: DateTimeWithAggregatesFilter<\"discussion_board_thread_tag\"> | Date | string\n  }\n\n  export type discussion_board_thread_categoryWhereInput = {\n    AND?: discussion_board_thread_categoryWhereInput | discussion_board_thread_categoryWhereInput[]\n    OR?: discussion_board_thread_categoryWhereInput[]\n    NOT?: discussion_board_thread_categoryWhereInput | discussion_board_thread_categoryWhereInput[]\n    id?: UuidFilter<\"discussion_board_thread_category\"> | string\n    code?: StringFilter<\"discussion_board_thread_category\"> | string\n    name?: StringFilter<\"discussion_board_thread_category\"> | string\n    description?: StringNullableFilter<\"discussion_board_thread_category\"> | string | null\n    created_at?: DateTimeFilter<\"discussion_board_thread_category\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussion_board_thread_category\"> | Date | string\n    discussion_board_thread?: Discussion_board_threadListRelationFilter\n  }\n\n  export type discussion_board_thread_categoryOrderByWithRelationInput = {\n    id?: SortOrder\n    code?: SortOrder\n    name?: SortOrder\n    description?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    discussion_board_thread?: discussion_board_threadOrderByRelationAggregateInput\n  }\n\n  export type discussion_board_thread_categoryWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    code?: string\n    name?: string\n    AND?: discussion_board_thread_categoryWhereInput | discussion_board_thread_categoryWhereInput[]\n    OR?: discussion_board_thread_categoryWhereInput[]\n    NOT?: discussion_board_thread_categoryWhereInput | discussion_board_thread_categoryWhereInput[]\n    description?: StringNullableFilter<\"discussion_board_thread_category\"> | string | null\n    created_at?: DateTimeFilter<\"discussion_board_thread_category\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussion_board_thread_category\"> | Date | string\n    discussion_board_thread?: Discussion_board_threadListRelationFilter\n  }, \"id\" | \"code\" | \"name\">\n\n  export type discussion_board_thread_categoryOrderByWithAggregationInput = {\n    id?: SortOrder\n    code?: SortOrder\n    name?: SortOrder\n    description?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    _count?: discussion_board_thread_categoryCountOrderByAggregateInput\n    _max?: discussion_board_thread_categoryMaxOrderByAggregateInput\n    _min?: discussion_board_thread_categoryMinOrderByAggregateInput\n  }\n\n  export type discussion_board_thread_categoryScalarWhereWithAggregatesInput = {\n    AND?: discussion_board_thread_categoryScalarWhereWithAggregatesInput | discussion_board_thread_categoryScalarWhereWithAggregatesInput[]\n    OR?: discussion_board_thread_categoryScalarWhereWithAggregatesInput[]\n    NOT?: discussion_board_thread_categoryScalarWhereWithAggregatesInput | discussion_board_thread_categoryScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussion_board_thread_category\"> | string\n    code?: StringWithAggregatesFilter<\"discussion_board_thread_category\"> | string\n    name?: StringWithAggregatesFilter<\"discussion_board_thread_category\"> | string\n    description?: StringNullableWithAggregatesFilter<\"discussion_board_thread_category\"> | string | null\n    created_at?: DateTimeWithAggregatesFilter<\"discussion_board_thread_category\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"discussion_board_thread_category\"> | Date | string\n  }\n\n  export type discussion_board_tag_categoryWhereInput = {\n    AND?: discussion_board_tag_categoryWhereInput | discussion_board_tag_categoryWhereInput[]\n    OR?: discussion_board_tag_categoryWhereInput[]\n    NOT?: discussion_board_tag_categoryWhereInput | discussion_board_tag_categoryWhereInput[]\n    id?: UuidFilter<\"discussion_board_tag_category\"> | string\n    code?: StringFilter<\"discussion_board_tag_category\"> | string\n    name?: StringFilter<\"discussion_board_tag_category\"> | string\n    description?: StringNullableFilter<\"discussion_board_tag_category\"> | string | null\n    created_at?: DateTimeFilter<\"discussion_board_tag_category\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussion_board_tag_category\"> | Date | string\n    discussion_board_thread_tag?: Discussion_board_thread_tagListRelationFilter\n  }\n\n  export type discussion_board_tag_categoryOrderByWithRelationInput = {\n    id?: SortOrder\n    code?: SortOrder\n    name?: SortOrder\n    description?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    discussion_board_thread_tag?: discussion_board_thread_tagOrderByRelationAggregateInput\n  }\n\n  export type discussion_board_tag_categoryWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    code?: string\n    name?: string\n    AND?: discussion_board_tag_categoryWhereInput | discussion_board_tag_categoryWhereInput[]\n    OR?: discussion_board_tag_categoryWhereInput[]\n    NOT?: discussion_board_tag_categoryWhereInput | discussion_board_tag_categoryWhereInput[]\n    description?: StringNullableFilter<\"discussion_board_tag_category\"> | string | null\n    created_at?: DateTimeFilter<\"discussion_board_tag_category\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussion_board_tag_category\"> | Date | string\n    discussion_board_thread_tag?: Discussion_board_thread_tagListRelationFilter\n  }, \"id\" | \"code\" | \"name\">\n\n  export type discussion_board_tag_categoryOrderByWithAggregationInput = {\n    id?: SortOrder\n    code?: SortOrder\n    name?: SortOrder\n    description?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    _count?: discussion_board_tag_categoryCountOrderByAggregateInput\n    _max?: discussion_board_tag_categoryMaxOrderByAggregateInput\n    _min?: discussion_board_tag_categoryMinOrderByAggregateInput\n  }\n\n  export type discussion_board_tag_categoryScalarWhereWithAggregatesInput = {\n    AND?: discussion_board_tag_categoryScalarWhereWithAggregatesInput | discussion_board_tag_categoryScalarWhereWithAggregatesInput[]\n    OR?: discussion_board_tag_categoryScalarWhereWithAggregatesInput[]\n    NOT?: discussion_board_tag_categoryScalarWhereWithAggregatesInput | discussion_board_tag_categoryScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussion_board_tag_category\"> | string\n    code?: StringWithAggregatesFilter<\"discussion_board_tag_category\"> | string\n    name?: StringWithAggregatesFilter<\"discussion_board_tag_category\"> | string\n    description?: StringNullableWithAggregatesFilter<\"discussion_board_tag_category\"> | string | null\n    created_at?: DateTimeWithAggregatesFilter<\"discussion_board_tag_category\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"discussion_board_tag_category\"> | Date | string\n  }\n\n  export type mv_discussion_thread_activityWhereInput = {\n    AND?: mv_discussion_thread_activityWhereInput | mv_discussion_thread_activityWhereInput[]\n    OR?: mv_discussion_thread_activityWhereInput[]\n    NOT?: mv_discussion_thread_activityWhereInput | mv_discussion_thread_activityWhereInput[]\n    id?: UuidFilter<\"mv_discussion_thread_activity\"> | string\n    thread_id?: UuidFilter<\"mv_discussion_thread_activity\"> | string\n    reply_count?: IntFilter<\"mv_discussion_thread_activity\"> | number\n    last_posted_at?: DateTimeNullableFilter<\"mv_discussion_thread_activity\"> | Date | string | null\n    participant_user_ids?: StringNullableFilter<\"mv_discussion_thread_activity\"> | string | null\n    thread?: XOR<Discussion_board_threadScalarRelationFilter, discussion_board_threadWhereInput>\n  }\n\n  export type mv_discussion_thread_activityOrderByWithRelationInput = {\n    id?: SortOrder\n    thread_id?: SortOrder\n    reply_count?: SortOrder\n    last_posted_at?: SortOrderInput | SortOrder\n    participant_user_ids?: SortOrderInput | SortOrder\n    thread?: discussion_board_threadOrderByWithRelationInput\n  }\n\n  export type mv_discussion_thread_activityWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    thread_id?: string\n    AND?: mv_discussion_thread_activityWhereInput | mv_discussion_thread_activityWhereInput[]\n    OR?: mv_discussion_thread_activityWhereInput[]\n    NOT?: mv_discussion_thread_activityWhereInput | mv_discussion_thread_activityWhereInput[]\n    reply_count?: IntFilter<\"mv_discussion_thread_activity\"> | number\n    last_posted_at?: DateTimeNullableFilter<\"mv_discussion_thread_activity\"> | Date | string | null\n    participant_user_ids?: StringNullableFilter<\"mv_discussion_thread_activity\"> | string | null\n    thread?: XOR<Discussion_board_threadScalarRelationFilter, discussion_board_threadWhereInput>\n  }, \"id\" | \"thread_id\">\n\n  export type mv_discussion_thread_activityOrderByWithAggregationInput = {\n    id?: SortOrder\n    thread_id?: SortOrder\n    reply_count?: SortOrder\n    last_posted_at?: SortOrderInput | SortOrder\n    participant_user_ids?: SortOrderInput | SortOrder\n    _count?: mv_discussion_thread_activityCountOrderByAggregateInput\n    _avg?: mv_discussion_thread_activityAvgOrderByAggregateInput\n    _max?: mv_discussion_thread_activityMaxOrderByAggregateInput\n    _min?: mv_discussion_thread_activityMinOrderByAggregateInput\n    _sum?: mv_discussion_thread_activitySumOrderByAggregateInput\n  }\n\n  export type mv_discussion_thread_activityScalarWhereWithAggregatesInput = {\n    AND?: mv_discussion_thread_activityScalarWhereWithAggregatesInput | mv_discussion_thread_activityScalarWhereWithAggregatesInput[]\n    OR?: mv_discussion_thread_activityScalarWhereWithAggregatesInput[]\n    NOT?: mv_discussion_thread_activityScalarWhereWithAggregatesInput | mv_discussion_thread_activityScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"mv_discussion_thread_activity\"> | string\n    thread_id?: UuidWithAggregatesFilter<\"mv_discussion_thread_activity\"> | string\n    reply_count?: IntWithAggregatesFilter<\"mv_discussion_thread_activity\"> | number\n    last_posted_at?: DateTimeNullableWithAggregatesFilter<\"mv_discussion_thread_activity\"> | Date | string | null\n    participant_user_ids?: StringNullableWithAggregatesFilter<\"mv_discussion_thread_activity\"> | string | null\n  }\n\n  export type discussion_board_voteWhereInput = {\n    AND?: discussion_board_voteWhereInput | discussion_board_voteWhereInput[]\n    OR?: discussion_board_voteWhereInput[]\n    NOT?: discussion_board_voteWhereInput | discussion_board_voteWhereInput[]\n    id?: UuidFilter<\"discussion_board_vote\"> | string\n    user_id?: UuidFilter<\"discussion_board_vote\"> | string\n    thread_id?: UuidNullableFilter<\"discussion_board_vote\"> | string | null\n    post_id?: UuidNullableFilter<\"discussion_board_vote\"> | string | null\n    comment_id?: UuidNullableFilter<\"discussion_board_vote\"> | string | null\n    direction?: StringFilter<\"discussion_board_vote\"> | string\n    created_at?: DateTimeFilter<\"discussion_board_vote\"> | Date | string\n    user?: XOR<Discussion_board_usersScalarRelationFilter, discussion_board_usersWhereInput>\n    thread?: XOR<Discussion_board_threadNullableScalarRelationFilter, discussion_board_threadWhereInput> | null\n    post?: XOR<Discussion_board_postNullableScalarRelationFilter, discussion_board_postWhereInput> | null\n    comment?: XOR<Discussion_board_commentNullableScalarRelationFilter, discussion_board_commentWhereInput> | null\n  }\n\n  export type discussion_board_voteOrderByWithRelationInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    thread_id?: SortOrderInput | SortOrder\n    post_id?: SortOrderInput | SortOrder\n    comment_id?: SortOrderInput | SortOrder\n    direction?: SortOrder\n    created_at?: SortOrder\n    user?: discussion_board_usersOrderByWithRelationInput\n    thread?: discussion_board_threadOrderByWithRelationInput\n    post?: discussion_board_postOrderByWithRelationInput\n    comment?: discussion_board_commentOrderByWithRelationInput\n  }\n\n  export type discussion_board_voteWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    user_id_thread_id_post_id_comment_id?: discussion_board_voteUser_idThread_idPost_idComment_idCompoundUniqueInput\n    AND?: discussion_board_voteWhereInput | discussion_board_voteWhereInput[]\n    OR?: discussion_board_voteWhereInput[]\n    NOT?: discussion_board_voteWhereInput | discussion_board_voteWhereInput[]\n    user_id?: UuidFilter<\"discussion_board_vote\"> | string\n    thread_id?: UuidNullableFilter<\"discussion_board_vote\"> | string | null\n    post_id?: UuidNullableFilter<\"discussion_board_vote\"> | string | null\n    comment_id?: UuidNullableFilter<\"discussion_board_vote\"> | string | null\n    direction?: StringFilter<\"discussion_board_vote\"> | string\n    created_at?: DateTimeFilter<\"discussion_board_vote\"> | Date | string\n    user?: XOR<Discussion_board_usersScalarRelationFilter, discussion_board_usersWhereInput>\n    thread?: XOR<Discussion_board_threadNullableScalarRelationFilter, discussion_board_threadWhereInput> | null\n    post?: XOR<Discussion_board_postNullableScalarRelationFilter, discussion_board_postWhereInput> | null\n    comment?: XOR<Discussion_board_commentNullableScalarRelationFilter, discussion_board_commentWhereInput> | null\n  }, \"id\" | \"user_id_thread_id_post_id_comment_id\">\n\n  export type discussion_board_voteOrderByWithAggregationInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    thread_id?: SortOrderInput | SortOrder\n    post_id?: SortOrderInput | SortOrder\n    comment_id?: SortOrderInput | SortOrder\n    direction?: SortOrder\n    created_at?: SortOrder\n    _count?: discussion_board_voteCountOrderByAggregateInput\n    _max?: discussion_board_voteMaxOrderByAggregateInput\n    _min?: discussion_board_voteMinOrderByAggregateInput\n  }\n\n  export type discussion_board_voteScalarWhereWithAggregatesInput = {\n    AND?: discussion_board_voteScalarWhereWithAggregatesInput | discussion_board_voteScalarWhereWithAggregatesInput[]\n    OR?: discussion_board_voteScalarWhereWithAggregatesInput[]\n    NOT?: discussion_board_voteScalarWhereWithAggregatesInput | discussion_board_voteScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussion_board_vote\"> | string\n    user_id?: UuidWithAggregatesFilter<\"discussion_board_vote\"> | string\n    thread_id?: UuidNullableWithAggregatesFilter<\"discussion_board_vote\"> | string | null\n    post_id?: UuidNullableWithAggregatesFilter<\"discussion_board_vote\"> | string | null\n    comment_id?: UuidNullableWithAggregatesFilter<\"discussion_board_vote\"> | string | null\n    direction?: StringWithAggregatesFilter<\"discussion_board_vote\"> | string\n    created_at?: DateTimeWithAggregatesFilter<\"discussion_board_vote\"> | Date | string\n  }\n\n  export type discussion_board_reactionWhereInput = {\n    AND?: discussion_board_reactionWhereInput | discussion_board_reactionWhereInput[]\n    OR?: discussion_board_reactionWhereInput[]\n    NOT?: discussion_board_reactionWhereInput | discussion_board_reactionWhereInput[]\n    id?: UuidFilter<\"discussion_board_reaction\"> | string\n    user_id?: UuidFilter<\"discussion_board_reaction\"> | string\n    thread_id?: UuidNullableFilter<\"discussion_board_reaction\"> | string | null\n    post_id?: UuidNullableFilter<\"discussion_board_reaction\"> | string | null\n    comment_id?: UuidNullableFilter<\"discussion_board_reaction\"> | string | null\n    reaction_type?: StringFilter<\"discussion_board_reaction\"> | string\n    created_at?: DateTimeFilter<\"discussion_board_reaction\"> | Date | string\n    user?: XOR<Discussion_board_usersScalarRelationFilter, discussion_board_usersWhereInput>\n    thread?: XOR<Discussion_board_threadNullableScalarRelationFilter, discussion_board_threadWhereInput> | null\n    post?: XOR<Discussion_board_postNullableScalarRelationFilter, discussion_board_postWhereInput> | null\n    comment?: XOR<Discussion_board_commentNullableScalarRelationFilter, discussion_board_commentWhereInput> | null\n  }\n\n  export type discussion_board_reactionOrderByWithRelationInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    thread_id?: SortOrderInput | SortOrder\n    post_id?: SortOrderInput | SortOrder\n    comment_id?: SortOrderInput | SortOrder\n    reaction_type?: SortOrder\n    created_at?: SortOrder\n    user?: discussion_board_usersOrderByWithRelationInput\n    thread?: discussion_board_threadOrderByWithRelationInput\n    post?: discussion_board_postOrderByWithRelationInput\n    comment?: discussion_board_commentOrderByWithRelationInput\n  }\n\n  export type discussion_board_reactionWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    user_id_thread_id_post_id_comment_id_reaction_type?: discussion_board_reactionUser_idThread_idPost_idComment_idReaction_typeCompoundUniqueInput\n    AND?: discussion_board_reactionWhereInput | discussion_board_reactionWhereInput[]\n    OR?: discussion_board_reactionWhereInput[]\n    NOT?: discussion_board_reactionWhereInput | discussion_board_reactionWhereInput[]\n    user_id?: UuidFilter<\"discussion_board_reaction\"> | string\n    thread_id?: UuidNullableFilter<\"discussion_board_reaction\"> | string | null\n    post_id?: UuidNullableFilter<\"discussion_board_reaction\"> | string | null\n    comment_id?: UuidNullableFilter<\"discussion_board_reaction\"> | string | null\n    reaction_type?: StringFilter<\"discussion_board_reaction\"> | string\n    created_at?: DateTimeFilter<\"discussion_board_reaction\"> | Date | string\n    user?: XOR<Discussion_board_usersScalarRelationFilter, discussion_board_usersWhereInput>\n    thread?: XOR<Discussion_board_threadNullableScalarRelationFilter, discussion_board_threadWhereInput> | null\n    post?: XOR<Discussion_board_postNullableScalarRelationFilter, discussion_board_postWhereInput> | null\n    comment?: XOR<Discussion_board_commentNullableScalarRelationFilter, discussion_board_commentWhereInput> | null\n  }, \"id\" | \"user_id_thread_id_post_id_comment_id_reaction_type\">\n\n  export type discussion_board_reactionOrderByWithAggregationInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    thread_id?: SortOrderInput | SortOrder\n    post_id?: SortOrderInput | SortOrder\n    comment_id?: SortOrderInput | SortOrder\n    reaction_type?: SortOrder\n    created_at?: SortOrder\n    _count?: discussion_board_reactionCountOrderByAggregateInput\n    _max?: discussion_board_reactionMaxOrderByAggregateInput\n    _min?: discussion_board_reactionMinOrderByAggregateInput\n  }\n\n  export type discussion_board_reactionScalarWhereWithAggregatesInput = {\n    AND?: discussion_board_reactionScalarWhereWithAggregatesInput | discussion_board_reactionScalarWhereWithAggregatesInput[]\n    OR?: discussion_board_reactionScalarWhereWithAggregatesInput[]\n    NOT?: discussion_board_reactionScalarWhereWithAggregatesInput | discussion_board_reactionScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussion_board_reaction\"> | string\n    user_id?: UuidWithAggregatesFilter<\"discussion_board_reaction\"> | string\n    thread_id?: UuidNullableWithAggregatesFilter<\"discussion_board_reaction\"> | string | null\n    post_id?: UuidNullableWithAggregatesFilter<\"discussion_board_reaction\"> | string | null\n    comment_id?: UuidNullableWithAggregatesFilter<\"discussion_board_reaction\"> | string | null\n    reaction_type?: StringWithAggregatesFilter<\"discussion_board_reaction\"> | string\n    created_at?: DateTimeWithAggregatesFilter<\"discussion_board_reaction\"> | Date | string\n  }\n\n  export type discussion_board_bookmarkWhereInput = {\n    AND?: discussion_board_bookmarkWhereInput | discussion_board_bookmarkWhereInput[]\n    OR?: discussion_board_bookmarkWhereInput[]\n    NOT?: discussion_board_bookmarkWhereInput | discussion_board_bookmarkWhereInput[]\n    id?: UuidFilter<\"discussion_board_bookmark\"> | string\n    user_id?: UuidFilter<\"discussion_board_bookmark\"> | string\n    thread_id?: UuidNullableFilter<\"discussion_board_bookmark\"> | string | null\n    post_id?: UuidNullableFilter<\"discussion_board_bookmark\"> | string | null\n    comment_id?: UuidNullableFilter<\"discussion_board_bookmark\"> | string | null\n    created_at?: DateTimeFilter<\"discussion_board_bookmark\"> | Date | string\n    user?: XOR<Discussion_board_usersScalarRelationFilter, discussion_board_usersWhereInput>\n    thread?: XOR<Discussion_board_threadNullableScalarRelationFilter, discussion_board_threadWhereInput> | null\n    post?: XOR<Discussion_board_postNullableScalarRelationFilter, discussion_board_postWhereInput> | null\n    comment?: XOR<Discussion_board_commentNullableScalarRelationFilter, discussion_board_commentWhereInput> | null\n  }\n\n  export type discussion_board_bookmarkOrderByWithRelationInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    thread_id?: SortOrderInput | SortOrder\n    post_id?: SortOrderInput | SortOrder\n    comment_id?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    user?: discussion_board_usersOrderByWithRelationInput\n    thread?: discussion_board_threadOrderByWithRelationInput\n    post?: discussion_board_postOrderByWithRelationInput\n    comment?: discussion_board_commentOrderByWithRelationInput\n  }\n\n  export type discussion_board_bookmarkWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    user_id_thread_id_post_id_comment_id?: discussion_board_bookmarkUser_idThread_idPost_idComment_idCompoundUniqueInput\n    AND?: discussion_board_bookmarkWhereInput | discussion_board_bookmarkWhereInput[]\n    OR?: discussion_board_bookmarkWhereInput[]\n    NOT?: discussion_board_bookmarkWhereInput | discussion_board_bookmarkWhereInput[]\n    user_id?: UuidFilter<\"discussion_board_bookmark\"> | string\n    thread_id?: UuidNullableFilter<\"discussion_board_bookmark\"> | string | null\n    post_id?: UuidNullableFilter<\"discussion_board_bookmark\"> | string | null\n    comment_id?: UuidNullableFilter<\"discussion_board_bookmark\"> | string | null\n    created_at?: DateTimeFilter<\"discussion_board_bookmark\"> | Date | string\n    user?: XOR<Discussion_board_usersScalarRelationFilter, discussion_board_usersWhereInput>\n    thread?: XOR<Discussion_board_threadNullableScalarRelationFilter, discussion_board_threadWhereInput> | null\n    post?: XOR<Discussion_board_postNullableScalarRelationFilter, discussion_board_postWhereInput> | null\n    comment?: XOR<Discussion_board_commentNullableScalarRelationFilter, discussion_board_commentWhereInput> | null\n  }, \"id\" | \"user_id_thread_id_post_id_comment_id\">\n\n  export type discussion_board_bookmarkOrderByWithAggregationInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    thread_id?: SortOrderInput | SortOrder\n    post_id?: SortOrderInput | SortOrder\n    comment_id?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    _count?: discussion_board_bookmarkCountOrderByAggregateInput\n    _max?: discussion_board_bookmarkMaxOrderByAggregateInput\n    _min?: discussion_board_bookmarkMinOrderByAggregateInput\n  }\n\n  export type discussion_board_bookmarkScalarWhereWithAggregatesInput = {\n    AND?: discussion_board_bookmarkScalarWhereWithAggregatesInput | discussion_board_bookmarkScalarWhereWithAggregatesInput[]\n    OR?: discussion_board_bookmarkScalarWhereWithAggregatesInput[]\n    NOT?: discussion_board_bookmarkScalarWhereWithAggregatesInput | discussion_board_bookmarkScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussion_board_bookmark\"> | string\n    user_id?: UuidWithAggregatesFilter<\"discussion_board_bookmark\"> | string\n    thread_id?: UuidNullableWithAggregatesFilter<\"discussion_board_bookmark\"> | string | null\n    post_id?: UuidNullableWithAggregatesFilter<\"discussion_board_bookmark\"> | string | null\n    comment_id?: UuidNullableWithAggregatesFilter<\"discussion_board_bookmark\"> | string | null\n    created_at?: DateTimeWithAggregatesFilter<\"discussion_board_bookmark\"> | Date | string\n  }\n\n  export type discussion_board_notificationWhereInput = {\n    AND?: discussion_board_notificationWhereInput | discussion_board_notificationWhereInput[]\n    OR?: discussion_board_notificationWhereInput[]\n    NOT?: discussion_board_notificationWhereInput | discussion_board_notificationWhereInput[]\n    id?: UuidFilter<\"discussion_board_notification\"> | string\n    recipient_user_id?: UuidFilter<\"discussion_board_notification\"> | string\n    thread_id?: UuidNullableFilter<\"discussion_board_notification\"> | string | null\n    post_id?: UuidNullableFilter<\"discussion_board_notification\"> | string | null\n    comment_id?: UuidNullableFilter<\"discussion_board_notification\"> | string | null\n    notification_type?: StringFilter<\"discussion_board_notification\"> | string\n    is_read?: BoolFilter<\"discussion_board_notification\"> | boolean\n    channel?: StringFilter<\"discussion_board_notification\"> | string\n    created_at?: DateTimeFilter<\"discussion_board_notification\"> | Date | string\n    delivered_at?: DateTimeNullableFilter<\"discussion_board_notification\"> | Date | string | null\n    recipient_user?: XOR<Discussion_board_usersScalarRelationFilter, discussion_board_usersWhereInput>\n    thread?: XOR<Discussion_board_threadNullableScalarRelationFilter, discussion_board_threadWhereInput> | null\n    post?: XOR<Discussion_board_postNullableScalarRelationFilter, discussion_board_postWhereInput> | null\n    comment?: XOR<Discussion_board_commentNullableScalarRelationFilter, discussion_board_commentWhereInput> | null\n  }\n\n  export type discussion_board_notificationOrderByWithRelationInput = {\n    id?: SortOrder\n    recipient_user_id?: SortOrder\n    thread_id?: SortOrderInput | SortOrder\n    post_id?: SortOrderInput | SortOrder\n    comment_id?: SortOrderInput | SortOrder\n    notification_type?: SortOrder\n    is_read?: SortOrder\n    channel?: SortOrder\n    created_at?: SortOrder\n    delivered_at?: SortOrderInput | SortOrder\n    recipient_user?: discussion_board_usersOrderByWithRelationInput\n    thread?: discussion_board_threadOrderByWithRelationInput\n    post?: discussion_board_postOrderByWithRelationInput\n    comment?: discussion_board_commentOrderByWithRelationInput\n  }\n\n  export type discussion_board_notificationWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: discussion_board_notificationWhereInput | discussion_board_notificationWhereInput[]\n    OR?: discussion_board_notificationWhereInput[]\n    NOT?: discussion_board_notificationWhereInput | discussion_board_notificationWhereInput[]\n    recipient_user_id?: UuidFilter<\"discussion_board_notification\"> | string\n    thread_id?: UuidNullableFilter<\"discussion_board_notification\"> | string | null\n    post_id?: UuidNullableFilter<\"discussion_board_notification\"> | string | null\n    comment_id?: UuidNullableFilter<\"discussion_board_notification\"> | string | null\n    notification_type?: StringFilter<\"discussion_board_notification\"> | string\n    is_read?: BoolFilter<\"discussion_board_notification\"> | boolean\n    channel?: StringFilter<\"discussion_board_notification\"> | string\n    created_at?: DateTimeFilter<\"discussion_board_notification\"> | Date | string\n    delivered_at?: DateTimeNullableFilter<\"discussion_board_notification\"> | Date | string | null\n    recipient_user?: XOR<Discussion_board_usersScalarRelationFilter, discussion_board_usersWhereInput>\n    thread?: XOR<Discussion_board_threadNullableScalarRelationFilter, discussion_board_threadWhereInput> | null\n    post?: XOR<Discussion_board_postNullableScalarRelationFilter, discussion_board_postWhereInput> | null\n    comment?: XOR<Discussion_board_commentNullableScalarRelationFilter, discussion_board_commentWhereInput> | null\n  }, \"id\">\n\n  export type discussion_board_notificationOrderByWithAggregationInput = {\n    id?: SortOrder\n    recipient_user_id?: SortOrder\n    thread_id?: SortOrderInput | SortOrder\n    post_id?: SortOrderInput | SortOrder\n    comment_id?: SortOrderInput | SortOrder\n    notification_type?: SortOrder\n    is_read?: SortOrder\n    channel?: SortOrder\n    created_at?: SortOrder\n    delivered_at?: SortOrderInput | SortOrder\n    _count?: discussion_board_notificationCountOrderByAggregateInput\n    _max?: discussion_board_notificationMaxOrderByAggregateInput\n    _min?: discussion_board_notificationMinOrderByAggregateInput\n  }\n\n  export type discussion_board_notificationScalarWhereWithAggregatesInput = {\n    AND?: discussion_board_notificationScalarWhereWithAggregatesInput | discussion_board_notificationScalarWhereWithAggregatesInput[]\n    OR?: discussion_board_notificationScalarWhereWithAggregatesInput[]\n    NOT?: discussion_board_notificationScalarWhereWithAggregatesInput | discussion_board_notificationScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussion_board_notification\"> | string\n    recipient_user_id?: UuidWithAggregatesFilter<\"discussion_board_notification\"> | string\n    thread_id?: UuidNullableWithAggregatesFilter<\"discussion_board_notification\"> | string | null\n    post_id?: UuidNullableWithAggregatesFilter<\"discussion_board_notification\"> | string | null\n    comment_id?: UuidNullableWithAggregatesFilter<\"discussion_board_notification\"> | string | null\n    notification_type?: StringWithAggregatesFilter<\"discussion_board_notification\"> | string\n    is_read?: BoolWithAggregatesFilter<\"discussion_board_notification\"> | boolean\n    channel?: StringWithAggregatesFilter<\"discussion_board_notification\"> | string\n    created_at?: DateTimeWithAggregatesFilter<\"discussion_board_notification\"> | Date | string\n    delivered_at?: DateTimeNullableWithAggregatesFilter<\"discussion_board_notification\"> | Date | string | null\n  }\n\n  export type discussion_board_subscriptionWhereInput = {\n    AND?: discussion_board_subscriptionWhereInput | discussion_board_subscriptionWhereInput[]\n    OR?: discussion_board_subscriptionWhereInput[]\n    NOT?: discussion_board_subscriptionWhereInput | discussion_board_subscriptionWhereInput[]\n    id?: UuidFilter<\"discussion_board_subscription\"> | string\n    user_id?: UuidFilter<\"discussion_board_subscription\"> | string\n    thread_id?: UuidNullableFilter<\"discussion_board_subscription\"> | string | null\n    tag_id?: UuidNullableFilter<\"discussion_board_subscription\"> | string | null\n    post_id?: UuidNullableFilter<\"discussion_board_subscription\"> | string | null\n    comment_id?: UuidNullableFilter<\"discussion_board_subscription\"> | string | null\n    channel?: StringFilter<\"discussion_board_subscription\"> | string\n    created_at?: DateTimeFilter<\"discussion_board_subscription\"> | Date | string\n    expires_at?: DateTimeNullableFilter<\"discussion_board_subscription\"> | Date | string | null\n    user?: XOR<Discussion_board_usersScalarRelationFilter, discussion_board_usersWhereInput>\n    thread?: XOR<Discussion_board_threadNullableScalarRelationFilter, discussion_board_threadWhereInput> | null\n    tag?: XOR<Discussion_board_thread_tagNullableScalarRelationFilter, discussion_board_thread_tagWhereInput> | null\n    post?: XOR<Discussion_board_postNullableScalarRelationFilter, discussion_board_postWhereInput> | null\n    comment?: XOR<Discussion_board_commentNullableScalarRelationFilter, discussion_board_commentWhereInput> | null\n  }\n\n  export type discussion_board_subscriptionOrderByWithRelationInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    thread_id?: SortOrderInput | SortOrder\n    tag_id?: SortOrderInput | SortOrder\n    post_id?: SortOrderInput | SortOrder\n    comment_id?: SortOrderInput | SortOrder\n    channel?: SortOrder\n    created_at?: SortOrder\n    expires_at?: SortOrderInput | SortOrder\n    user?: discussion_board_usersOrderByWithRelationInput\n    thread?: discussion_board_threadOrderByWithRelationInput\n    tag?: discussion_board_thread_tagOrderByWithRelationInput\n    post?: discussion_board_postOrderByWithRelationInput\n    comment?: discussion_board_commentOrderByWithRelationInput\n  }\n\n  export type discussion_board_subscriptionWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    user_id_thread_id_tag_id_post_id_comment_id_channel?: discussion_board_subscriptionUser_idThread_idTag_idPost_idComment_idChannelCompoundUniqueInput\n    AND?: discussion_board_subscriptionWhereInput | discussion_board_subscriptionWhereInput[]\n    OR?: discussion_board_subscriptionWhereInput[]\n    NOT?: discussion_board_subscriptionWhereInput | discussion_board_subscriptionWhereInput[]\n    user_id?: UuidFilter<\"discussion_board_subscription\"> | string\n    thread_id?: UuidNullableFilter<\"discussion_board_subscription\"> | string | null\n    tag_id?: UuidNullableFilter<\"discussion_board_subscription\"> | string | null\n    post_id?: UuidNullableFilter<\"discussion_board_subscription\"> | string | null\n    comment_id?: UuidNullableFilter<\"discussion_board_subscription\"> | string | null\n    channel?: StringFilter<\"discussion_board_subscription\"> | string\n    created_at?: DateTimeFilter<\"discussion_board_subscription\"> | Date | string\n    expires_at?: DateTimeNullableFilter<\"discussion_board_subscription\"> | Date | string | null\n    user?: XOR<Discussion_board_usersScalarRelationFilter, discussion_board_usersWhereInput>\n    thread?: XOR<Discussion_board_threadNullableScalarRelationFilter, discussion_board_threadWhereInput> | null\n    tag?: XOR<Discussion_board_thread_tagNullableScalarRelationFilter, discussion_board_thread_tagWhereInput> | null\n    post?: XOR<Discussion_board_postNullableScalarRelationFilter, discussion_board_postWhereInput> | null\n    comment?: XOR<Discussion_board_commentNullableScalarRelationFilter, discussion_board_commentWhereInput> | null\n  }, \"id\" | \"user_id_thread_id_tag_id_post_id_comment_id_channel\">\n\n  export type discussion_board_subscriptionOrderByWithAggregationInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    thread_id?: SortOrderInput | SortOrder\n    tag_id?: SortOrderInput | SortOrder\n    post_id?: SortOrderInput | SortOrder\n    comment_id?: SortOrderInput | SortOrder\n    channel?: SortOrder\n    created_at?: SortOrder\n    expires_at?: SortOrderInput | SortOrder\n    _count?: discussion_board_subscriptionCountOrderByAggregateInput\n    _max?: discussion_board_subscriptionMaxOrderByAggregateInput\n    _min?: discussion_board_subscriptionMinOrderByAggregateInput\n  }\n\n  export type discussion_board_subscriptionScalarWhereWithAggregatesInput = {\n    AND?: discussion_board_subscriptionScalarWhereWithAggregatesInput | discussion_board_subscriptionScalarWhereWithAggregatesInput[]\n    OR?: discussion_board_subscriptionScalarWhereWithAggregatesInput[]\n    NOT?: discussion_board_subscriptionScalarWhereWithAggregatesInput | discussion_board_subscriptionScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussion_board_subscription\"> | string\n    user_id?: UuidWithAggregatesFilter<\"discussion_board_subscription\"> | string\n    thread_id?: UuidNullableWithAggregatesFilter<\"discussion_board_subscription\"> | string | null\n    tag_id?: UuidNullableWithAggregatesFilter<\"discussion_board_subscription\"> | string | null\n    post_id?: UuidNullableWithAggregatesFilter<\"discussion_board_subscription\"> | string | null\n    comment_id?: UuidNullableWithAggregatesFilter<\"discussion_board_subscription\"> | string | null\n    channel?: StringWithAggregatesFilter<\"discussion_board_subscription\"> | string\n    created_at?: DateTimeWithAggregatesFilter<\"discussion_board_subscription\"> | Date | string\n    expires_at?: DateTimeNullableWithAggregatesFilter<\"discussion_board_subscription\"> | Date | string | null\n  }\n\n  export type discussion_board_reportWhereInput = {\n    AND?: discussion_board_reportWhereInput | discussion_board_reportWhereInput[]\n    OR?: discussion_board_reportWhereInput[]\n    NOT?: discussion_board_reportWhereInput | discussion_board_reportWhereInput[]\n    id?: UuidFilter<\"discussion_board_report\"> | string\n    reported_user_id?: UuidNullableFilter<\"discussion_board_report\"> | string | null\n    reporting_user_id?: UuidFilter<\"discussion_board_report\"> | string\n    thread_id?: UuidNullableFilter<\"discussion_board_report\"> | string | null\n    post_id?: UuidNullableFilter<\"discussion_board_report\"> | string | null\n    comment_id?: UuidNullableFilter<\"discussion_board_report\"> | string | null\n    status?: StringFilter<\"discussion_board_report\"> | string\n    category?: StringFilter<\"discussion_board_report\"> | string\n    submitted_at?: DateTimeFilter<\"discussion_board_report\"> | Date | string\n    resolved_at?: DateTimeNullableFilter<\"discussion_board_report\"> | Date | string | null\n    details?: StringFilter<\"discussion_board_report\"> | string\n    reported_user?: XOR<Discussion_board_usersNullableScalarRelationFilter, discussion_board_usersWhereInput> | null\n    reporting_user?: XOR<Discussion_board_usersScalarRelationFilter, discussion_board_usersWhereInput>\n    thread?: XOR<Discussion_board_threadNullableScalarRelationFilter, discussion_board_threadWhereInput> | null\n    post?: XOR<Discussion_board_postNullableScalarRelationFilter, discussion_board_postWhereInput> | null\n    comment?: XOR<Discussion_board_commentNullableScalarRelationFilter, discussion_board_commentWhereInput> | null\n    discussion_board_moderator_action?: Discussion_board_moderator_actionListRelationFilter\n    discussion_board_ban?: Discussion_board_banListRelationFilter\n  }\n\n  export type discussion_board_reportOrderByWithRelationInput = {\n    id?: SortOrder\n    reported_user_id?: SortOrderInput | SortOrder\n    reporting_user_id?: SortOrder\n    thread_id?: SortOrderInput | SortOrder\n    post_id?: SortOrderInput | SortOrder\n    comment_id?: SortOrderInput | SortOrder\n    status?: SortOrder\n    category?: SortOrder\n    submitted_at?: SortOrder\n    resolved_at?: SortOrderInput | SortOrder\n    details?: SortOrder\n    reported_user?: discussion_board_usersOrderByWithRelationInput\n    reporting_user?: discussion_board_usersOrderByWithRelationInput\n    thread?: discussion_board_threadOrderByWithRelationInput\n    post?: discussion_board_postOrderByWithRelationInput\n    comment?: discussion_board_commentOrderByWithRelationInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionOrderByRelationAggregateInput\n    discussion_board_ban?: discussion_board_banOrderByRelationAggregateInput\n  }\n\n  export type discussion_board_reportWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    reporting_user_id_thread_id_post_id_comment_id?: discussion_board_reportReporting_user_idThread_idPost_idComment_idCompoundUniqueInput\n    AND?: discussion_board_reportWhereInput | discussion_board_reportWhereInput[]\n    OR?: discussion_board_reportWhereInput[]\n    NOT?: discussion_board_reportWhereInput | discussion_board_reportWhereInput[]\n    reported_user_id?: UuidNullableFilter<\"discussion_board_report\"> | string | null\n    reporting_user_id?: UuidFilter<\"discussion_board_report\"> | string\n    thread_id?: UuidNullableFilter<\"discussion_board_report\"> | string | null\n    post_id?: UuidNullableFilter<\"discussion_board_report\"> | string | null\n    comment_id?: UuidNullableFilter<\"discussion_board_report\"> | string | null\n    status?: StringFilter<\"discussion_board_report\"> | string\n    category?: StringFilter<\"discussion_board_report\"> | string\n    submitted_at?: DateTimeFilter<\"discussion_board_report\"> | Date | string\n    resolved_at?: DateTimeNullableFilter<\"discussion_board_report\"> | Date | string | null\n    details?: StringFilter<\"discussion_board_report\"> | string\n    reported_user?: XOR<Discussion_board_usersNullableScalarRelationFilter, discussion_board_usersWhereInput> | null\n    reporting_user?: XOR<Discussion_board_usersScalarRelationFilter, discussion_board_usersWhereInput>\n    thread?: XOR<Discussion_board_threadNullableScalarRelationFilter, discussion_board_threadWhereInput> | null\n    post?: XOR<Discussion_board_postNullableScalarRelationFilter, discussion_board_postWhereInput> | null\n    comment?: XOR<Discussion_board_commentNullableScalarRelationFilter, discussion_board_commentWhereInput> | null\n    discussion_board_moderator_action?: Discussion_board_moderator_actionListRelationFilter\n    discussion_board_ban?: Discussion_board_banListRelationFilter\n  }, \"id\" | \"reporting_user_id_thread_id_post_id_comment_id\">\n\n  export type discussion_board_reportOrderByWithAggregationInput = {\n    id?: SortOrder\n    reported_user_id?: SortOrderInput | SortOrder\n    reporting_user_id?: SortOrder\n    thread_id?: SortOrderInput | SortOrder\n    post_id?: SortOrderInput | SortOrder\n    comment_id?: SortOrderInput | SortOrder\n    status?: SortOrder\n    category?: SortOrder\n    submitted_at?: SortOrder\n    resolved_at?: SortOrderInput | SortOrder\n    details?: SortOrder\n    _count?: discussion_board_reportCountOrderByAggregateInput\n    _max?: discussion_board_reportMaxOrderByAggregateInput\n    _min?: discussion_board_reportMinOrderByAggregateInput\n  }\n\n  export type discussion_board_reportScalarWhereWithAggregatesInput = {\n    AND?: discussion_board_reportScalarWhereWithAggregatesInput | discussion_board_reportScalarWhereWithAggregatesInput[]\n    OR?: discussion_board_reportScalarWhereWithAggregatesInput[]\n    NOT?: discussion_board_reportScalarWhereWithAggregatesInput | discussion_board_reportScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussion_board_report\"> | string\n    reported_user_id?: UuidNullableWithAggregatesFilter<\"discussion_board_report\"> | string | null\n    reporting_user_id?: UuidWithAggregatesFilter<\"discussion_board_report\"> | string\n    thread_id?: UuidNullableWithAggregatesFilter<\"discussion_board_report\"> | string | null\n    post_id?: UuidNullableWithAggregatesFilter<\"discussion_board_report\"> | string | null\n    comment_id?: UuidNullableWithAggregatesFilter<\"discussion_board_report\"> | string | null\n    status?: StringWithAggregatesFilter<\"discussion_board_report\"> | string\n    category?: StringWithAggregatesFilter<\"discussion_board_report\"> | string\n    submitted_at?: DateTimeWithAggregatesFilter<\"discussion_board_report\"> | Date | string\n    resolved_at?: DateTimeNullableWithAggregatesFilter<\"discussion_board_report\"> | Date | string | null\n    details?: StringWithAggregatesFilter<\"discussion_board_report\"> | string\n  }\n\n  export type discussion_board_moderator_actionWhereInput = {\n    AND?: discussion_board_moderator_actionWhereInput | discussion_board_moderator_actionWhereInput[]\n    OR?: discussion_board_moderator_actionWhereInput[]\n    NOT?: discussion_board_moderator_actionWhereInput | discussion_board_moderator_actionWhereInput[]\n    id?: UuidFilter<\"discussion_board_moderator_action\"> | string\n    moderator_id?: UuidFilter<\"discussion_board_moderator_action\"> | string\n    user_id?: UuidNullableFilter<\"discussion_board_moderator_action\"> | string | null\n    report_id?: UuidNullableFilter<\"discussion_board_moderator_action\"> | string | null\n    thread_id?: UuidNullableFilter<\"discussion_board_moderator_action\"> | string | null\n    post_id?: UuidNullableFilter<\"discussion_board_moderator_action\"> | string | null\n    comment_id?: UuidNullableFilter<\"discussion_board_moderator_action\"> | string | null\n    action_type?: StringFilter<\"discussion_board_moderator_action\"> | string\n    reason?: StringFilter<\"discussion_board_moderator_action\"> | string\n    created_at?: DateTimeFilter<\"discussion_board_moderator_action\"> | Date | string\n    moderator?: XOR<Discussion_board_moderatorsScalarRelationFilter, discussion_board_moderatorsWhereInput>\n    user?: XOR<Discussion_board_usersNullableScalarRelationFilter, discussion_board_usersWhereInput> | null\n    report?: XOR<Discussion_board_reportNullableScalarRelationFilter, discussion_board_reportWhereInput> | null\n    thread?: XOR<Discussion_board_threadNullableScalarRelationFilter, discussion_board_threadWhereInput> | null\n    post?: XOR<Discussion_board_postNullableScalarRelationFilter, discussion_board_postWhereInput> | null\n    comment?: XOR<Discussion_board_commentNullableScalarRelationFilter, discussion_board_commentWhereInput> | null\n  }\n\n  export type discussion_board_moderator_actionOrderByWithRelationInput = {\n    id?: SortOrder\n    moderator_id?: SortOrder\n    user_id?: SortOrderInput | SortOrder\n    report_id?: SortOrderInput | SortOrder\n    thread_id?: SortOrderInput | SortOrder\n    post_id?: SortOrderInput | SortOrder\n    comment_id?: SortOrderInput | SortOrder\n    action_type?: SortOrder\n    reason?: SortOrder\n    created_at?: SortOrder\n    moderator?: discussion_board_moderatorsOrderByWithRelationInput\n    user?: discussion_board_usersOrderByWithRelationInput\n    report?: discussion_board_reportOrderByWithRelationInput\n    thread?: discussion_board_threadOrderByWithRelationInput\n    post?: discussion_board_postOrderByWithRelationInput\n    comment?: discussion_board_commentOrderByWithRelationInput\n  }\n\n  export type discussion_board_moderator_actionWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: discussion_board_moderator_actionWhereInput | discussion_board_moderator_actionWhereInput[]\n    OR?: discussion_board_moderator_actionWhereInput[]\n    NOT?: discussion_board_moderator_actionWhereInput | discussion_board_moderator_actionWhereInput[]\n    moderator_id?: UuidFilter<\"discussion_board_moderator_action\"> | string\n    user_id?: UuidNullableFilter<\"discussion_board_moderator_action\"> | string | null\n    report_id?: UuidNullableFilter<\"discussion_board_moderator_action\"> | string | null\n    thread_id?: UuidNullableFilter<\"discussion_board_moderator_action\"> | string | null\n    post_id?: UuidNullableFilter<\"discussion_board_moderator_action\"> | string | null\n    comment_id?: UuidNullableFilter<\"discussion_board_moderator_action\"> | string | null\n    action_type?: StringFilter<\"discussion_board_moderator_action\"> | string\n    reason?: StringFilter<\"discussion_board_moderator_action\"> | string\n    created_at?: DateTimeFilter<\"discussion_board_moderator_action\"> | Date | string\n    moderator?: XOR<Discussion_board_moderatorsScalarRelationFilter, discussion_board_moderatorsWhereInput>\n    user?: XOR<Discussion_board_usersNullableScalarRelationFilter, discussion_board_usersWhereInput> | null\n    report?: XOR<Discussion_board_reportNullableScalarRelationFilter, discussion_board_reportWhereInput> | null\n    thread?: XOR<Discussion_board_threadNullableScalarRelationFilter, discussion_board_threadWhereInput> | null\n    post?: XOR<Discussion_board_postNullableScalarRelationFilter, discussion_board_postWhereInput> | null\n    comment?: XOR<Discussion_board_commentNullableScalarRelationFilter, discussion_board_commentWhereInput> | null\n  }, \"id\">\n\n  export type discussion_board_moderator_actionOrderByWithAggregationInput = {\n    id?: SortOrder\n    moderator_id?: SortOrder\n    user_id?: SortOrderInput | SortOrder\n    report_id?: SortOrderInput | SortOrder\n    thread_id?: SortOrderInput | SortOrder\n    post_id?: SortOrderInput | SortOrder\n    comment_id?: SortOrderInput | SortOrder\n    action_type?: SortOrder\n    reason?: SortOrder\n    created_at?: SortOrder\n    _count?: discussion_board_moderator_actionCountOrderByAggregateInput\n    _max?: discussion_board_moderator_actionMaxOrderByAggregateInput\n    _min?: discussion_board_moderator_actionMinOrderByAggregateInput\n  }\n\n  export type discussion_board_moderator_actionScalarWhereWithAggregatesInput = {\n    AND?: discussion_board_moderator_actionScalarWhereWithAggregatesInput | discussion_board_moderator_actionScalarWhereWithAggregatesInput[]\n    OR?: discussion_board_moderator_actionScalarWhereWithAggregatesInput[]\n    NOT?: discussion_board_moderator_actionScalarWhereWithAggregatesInput | discussion_board_moderator_actionScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussion_board_moderator_action\"> | string\n    moderator_id?: UuidWithAggregatesFilter<\"discussion_board_moderator_action\"> | string\n    user_id?: UuidNullableWithAggregatesFilter<\"discussion_board_moderator_action\"> | string | null\n    report_id?: UuidNullableWithAggregatesFilter<\"discussion_board_moderator_action\"> | string | null\n    thread_id?: UuidNullableWithAggregatesFilter<\"discussion_board_moderator_action\"> | string | null\n    post_id?: UuidNullableWithAggregatesFilter<\"discussion_board_moderator_action\"> | string | null\n    comment_id?: UuidNullableWithAggregatesFilter<\"discussion_board_moderator_action\"> | string | null\n    action_type?: StringWithAggregatesFilter<\"discussion_board_moderator_action\"> | string\n    reason?: StringWithAggregatesFilter<\"discussion_board_moderator_action\"> | string\n    created_at?: DateTimeWithAggregatesFilter<\"discussion_board_moderator_action\"> | Date | string\n  }\n\n  export type discussion_board_audit_logWhereInput = {\n    AND?: discussion_board_audit_logWhereInput | discussion_board_audit_logWhereInput[]\n    OR?: discussion_board_audit_logWhereInput[]\n    NOT?: discussion_board_audit_logWhereInput | discussion_board_audit_logWhereInput[]\n    id?: UuidFilter<\"discussion_board_audit_log\"> | string\n    actor_id?: UuidFilter<\"discussion_board_audit_log\"> | string\n    affected_user_id?: UuidNullableFilter<\"discussion_board_audit_log\"> | string | null\n    entity_type?: StringFilter<\"discussion_board_audit_log\"> | string\n    entity_id?: UuidFilter<\"discussion_board_audit_log\"> | string\n    action?: StringFilter<\"discussion_board_audit_log\"> | string\n    details?: StringFilter<\"discussion_board_audit_log\"> | string\n    created_at?: DateTimeFilter<\"discussion_board_audit_log\"> | Date | string\n    actor?: XOR<Discussion_board_usersScalarRelationFilter, discussion_board_usersWhereInput>\n    affected_user?: XOR<Discussion_board_usersNullableScalarRelationFilter, discussion_board_usersWhereInput> | null\n  }\n\n  export type discussion_board_audit_logOrderByWithRelationInput = {\n    id?: SortOrder\n    actor_id?: SortOrder\n    affected_user_id?: SortOrderInput | SortOrder\n    entity_type?: SortOrder\n    entity_id?: SortOrder\n    action?: SortOrder\n    details?: SortOrder\n    created_at?: SortOrder\n    actor?: discussion_board_usersOrderByWithRelationInput\n    affected_user?: discussion_board_usersOrderByWithRelationInput\n  }\n\n  export type discussion_board_audit_logWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: discussion_board_audit_logWhereInput | discussion_board_audit_logWhereInput[]\n    OR?: discussion_board_audit_logWhereInput[]\n    NOT?: discussion_board_audit_logWhereInput | discussion_board_audit_logWhereInput[]\n    actor_id?: UuidFilter<\"discussion_board_audit_log\"> | string\n    affected_user_id?: UuidNullableFilter<\"discussion_board_audit_log\"> | string | null\n    entity_type?: StringFilter<\"discussion_board_audit_log\"> | string\n    entity_id?: UuidFilter<\"discussion_board_audit_log\"> | string\n    action?: StringFilter<\"discussion_board_audit_log\"> | string\n    details?: StringFilter<\"discussion_board_audit_log\"> | string\n    created_at?: DateTimeFilter<\"discussion_board_audit_log\"> | Date | string\n    actor?: XOR<Discussion_board_usersScalarRelationFilter, discussion_board_usersWhereInput>\n    affected_user?: XOR<Discussion_board_usersNullableScalarRelationFilter, discussion_board_usersWhereInput> | null\n  }, \"id\">\n\n  export type discussion_board_audit_logOrderByWithAggregationInput = {\n    id?: SortOrder\n    actor_id?: SortOrder\n    affected_user_id?: SortOrderInput | SortOrder\n    entity_type?: SortOrder\n    entity_id?: SortOrder\n    action?: SortOrder\n    details?: SortOrder\n    created_at?: SortOrder\n    _count?: discussion_board_audit_logCountOrderByAggregateInput\n    _max?: discussion_board_audit_logMaxOrderByAggregateInput\n    _min?: discussion_board_audit_logMinOrderByAggregateInput\n  }\n\n  export type discussion_board_audit_logScalarWhereWithAggregatesInput = {\n    AND?: discussion_board_audit_logScalarWhereWithAggregatesInput | discussion_board_audit_logScalarWhereWithAggregatesInput[]\n    OR?: discussion_board_audit_logScalarWhereWithAggregatesInput[]\n    NOT?: discussion_board_audit_logScalarWhereWithAggregatesInput | discussion_board_audit_logScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussion_board_audit_log\"> | string\n    actor_id?: UuidWithAggregatesFilter<\"discussion_board_audit_log\"> | string\n    affected_user_id?: UuidNullableWithAggregatesFilter<\"discussion_board_audit_log\"> | string | null\n    entity_type?: StringWithAggregatesFilter<\"discussion_board_audit_log\"> | string\n    entity_id?: UuidWithAggregatesFilter<\"discussion_board_audit_log\"> | string\n    action?: StringWithAggregatesFilter<\"discussion_board_audit_log\"> | string\n    details?: StringWithAggregatesFilter<\"discussion_board_audit_log\"> | string\n    created_at?: DateTimeWithAggregatesFilter<\"discussion_board_audit_log\"> | Date | string\n  }\n\n  export type discussion_board_warningWhereInput = {\n    AND?: discussion_board_warningWhereInput | discussion_board_warningWhereInput[]\n    OR?: discussion_board_warningWhereInput[]\n    NOT?: discussion_board_warningWhereInput | discussion_board_warningWhereInput[]\n    id?: UuidFilter<\"discussion_board_warning\"> | string\n    user_id?: UuidFilter<\"discussion_board_warning\"> | string\n    moderator_id?: UuidFilter<\"discussion_board_warning\"> | string\n    thread_id?: UuidNullableFilter<\"discussion_board_warning\"> | string | null\n    post_id?: UuidNullableFilter<\"discussion_board_warning\"> | string | null\n    comment_id?: UuidNullableFilter<\"discussion_board_warning\"> | string | null\n    reason?: StringFilter<\"discussion_board_warning\"> | string\n    issued_at?: DateTimeFilter<\"discussion_board_warning\"> | Date | string\n    user?: XOR<Discussion_board_usersScalarRelationFilter, discussion_board_usersWhereInput>\n    moderator?: XOR<Discussion_board_moderatorsScalarRelationFilter, discussion_board_moderatorsWhereInput>\n    thread?: XOR<Discussion_board_threadNullableScalarRelationFilter, discussion_board_threadWhereInput> | null\n    post?: XOR<Discussion_board_postNullableScalarRelationFilter, discussion_board_postWhereInput> | null\n    comment?: XOR<Discussion_board_commentNullableScalarRelationFilter, discussion_board_commentWhereInput> | null\n    discussion_board_ban?: Discussion_board_banListRelationFilter\n  }\n\n  export type discussion_board_warningOrderByWithRelationInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    moderator_id?: SortOrder\n    thread_id?: SortOrderInput | SortOrder\n    post_id?: SortOrderInput | SortOrder\n    comment_id?: SortOrderInput | SortOrder\n    reason?: SortOrder\n    issued_at?: SortOrder\n    user?: discussion_board_usersOrderByWithRelationInput\n    moderator?: discussion_board_moderatorsOrderByWithRelationInput\n    thread?: discussion_board_threadOrderByWithRelationInput\n    post?: discussion_board_postOrderByWithRelationInput\n    comment?: discussion_board_commentOrderByWithRelationInput\n    discussion_board_ban?: discussion_board_banOrderByRelationAggregateInput\n  }\n\n  export type discussion_board_warningWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: discussion_board_warningWhereInput | discussion_board_warningWhereInput[]\n    OR?: discussion_board_warningWhereInput[]\n    NOT?: discussion_board_warningWhereInput | discussion_board_warningWhereInput[]\n    user_id?: UuidFilter<\"discussion_board_warning\"> | string\n    moderator_id?: UuidFilter<\"discussion_board_warning\"> | string\n    thread_id?: UuidNullableFilter<\"discussion_board_warning\"> | string | null\n    post_id?: UuidNullableFilter<\"discussion_board_warning\"> | string | null\n    comment_id?: UuidNullableFilter<\"discussion_board_warning\"> | string | null\n    reason?: StringFilter<\"discussion_board_warning\"> | string\n    issued_at?: DateTimeFilter<\"discussion_board_warning\"> | Date | string\n    user?: XOR<Discussion_board_usersScalarRelationFilter, discussion_board_usersWhereInput>\n    moderator?: XOR<Discussion_board_moderatorsScalarRelationFilter, discussion_board_moderatorsWhereInput>\n    thread?: XOR<Discussion_board_threadNullableScalarRelationFilter, discussion_board_threadWhereInput> | null\n    post?: XOR<Discussion_board_postNullableScalarRelationFilter, discussion_board_postWhereInput> | null\n    comment?: XOR<Discussion_board_commentNullableScalarRelationFilter, discussion_board_commentWhereInput> | null\n    discussion_board_ban?: Discussion_board_banListRelationFilter\n  }, \"id\">\n\n  export type discussion_board_warningOrderByWithAggregationInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    moderator_id?: SortOrder\n    thread_id?: SortOrderInput | SortOrder\n    post_id?: SortOrderInput | SortOrder\n    comment_id?: SortOrderInput | SortOrder\n    reason?: SortOrder\n    issued_at?: SortOrder\n    _count?: discussion_board_warningCountOrderByAggregateInput\n    _max?: discussion_board_warningMaxOrderByAggregateInput\n    _min?: discussion_board_warningMinOrderByAggregateInput\n  }\n\n  export type discussion_board_warningScalarWhereWithAggregatesInput = {\n    AND?: discussion_board_warningScalarWhereWithAggregatesInput | discussion_board_warningScalarWhereWithAggregatesInput[]\n    OR?: discussion_board_warningScalarWhereWithAggregatesInput[]\n    NOT?: discussion_board_warningScalarWhereWithAggregatesInput | discussion_board_warningScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussion_board_warning\"> | string\n    user_id?: UuidWithAggregatesFilter<\"discussion_board_warning\"> | string\n    moderator_id?: UuidWithAggregatesFilter<\"discussion_board_warning\"> | string\n    thread_id?: UuidNullableWithAggregatesFilter<\"discussion_board_warning\"> | string | null\n    post_id?: UuidNullableWithAggregatesFilter<\"discussion_board_warning\"> | string | null\n    comment_id?: UuidNullableWithAggregatesFilter<\"discussion_board_warning\"> | string | null\n    reason?: StringWithAggregatesFilter<\"discussion_board_warning\"> | string\n    issued_at?: DateTimeWithAggregatesFilter<\"discussion_board_warning\"> | Date | string\n  }\n\n  export type discussion_board_banWhereInput = {\n    AND?: discussion_board_banWhereInput | discussion_board_banWhereInput[]\n    OR?: discussion_board_banWhereInput[]\n    NOT?: discussion_board_banWhereInput | discussion_board_banWhereInput[]\n    id?: UuidFilter<\"discussion_board_ban\"> | string\n    user_id?: UuidFilter<\"discussion_board_ban\"> | string\n    moderator_id?: UuidFilter<\"discussion_board_ban\"> | string\n    warning_id?: UuidNullableFilter<\"discussion_board_ban\"> | string | null\n    report_id?: UuidNullableFilter<\"discussion_board_ban\"> | string | null\n    ban_type?: StringFilter<\"discussion_board_ban\"> | string\n    reason?: StringFilter<\"discussion_board_ban\"> | string\n    banned_at?: DateTimeFilter<\"discussion_board_ban\"> | Date | string\n    expires_at?: DateTimeNullableFilter<\"discussion_board_ban\"> | Date | string | null\n    user?: XOR<Discussion_board_usersScalarRelationFilter, discussion_board_usersWhereInput>\n    moderator?: XOR<Discussion_board_moderatorsScalarRelationFilter, discussion_board_moderatorsWhereInput>\n    warning?: XOR<Discussion_board_warningNullableScalarRelationFilter, discussion_board_warningWhereInput> | null\n    report?: XOR<Discussion_board_reportNullableScalarRelationFilter, discussion_board_reportWhereInput> | null\n  }\n\n  export type discussion_board_banOrderByWithRelationInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    moderator_id?: SortOrder\n    warning_id?: SortOrderInput | SortOrder\n    report_id?: SortOrderInput | SortOrder\n    ban_type?: SortOrder\n    reason?: SortOrder\n    banned_at?: SortOrder\n    expires_at?: SortOrderInput | SortOrder\n    user?: discussion_board_usersOrderByWithRelationInput\n    moderator?: discussion_board_moderatorsOrderByWithRelationInput\n    warning?: discussion_board_warningOrderByWithRelationInput\n    report?: discussion_board_reportOrderByWithRelationInput\n  }\n\n  export type discussion_board_banWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: discussion_board_banWhereInput | discussion_board_banWhereInput[]\n    OR?: discussion_board_banWhereInput[]\n    NOT?: discussion_board_banWhereInput | discussion_board_banWhereInput[]\n    user_id?: UuidFilter<\"discussion_board_ban\"> | string\n    moderator_id?: UuidFilter<\"discussion_board_ban\"> | string\n    warning_id?: UuidNullableFilter<\"discussion_board_ban\"> | string | null\n    report_id?: UuidNullableFilter<\"discussion_board_ban\"> | string | null\n    ban_type?: StringFilter<\"discussion_board_ban\"> | string\n    reason?: StringFilter<\"discussion_board_ban\"> | string\n    banned_at?: DateTimeFilter<\"discussion_board_ban\"> | Date | string\n    expires_at?: DateTimeNullableFilter<\"discussion_board_ban\"> | Date | string | null\n    user?: XOR<Discussion_board_usersScalarRelationFilter, discussion_board_usersWhereInput>\n    moderator?: XOR<Discussion_board_moderatorsScalarRelationFilter, discussion_board_moderatorsWhereInput>\n    warning?: XOR<Discussion_board_warningNullableScalarRelationFilter, discussion_board_warningWhereInput> | null\n    report?: XOR<Discussion_board_reportNullableScalarRelationFilter, discussion_board_reportWhereInput> | null\n  }, \"id\">\n\n  export type discussion_board_banOrderByWithAggregationInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    moderator_id?: SortOrder\n    warning_id?: SortOrderInput | SortOrder\n    report_id?: SortOrderInput | SortOrder\n    ban_type?: SortOrder\n    reason?: SortOrder\n    banned_at?: SortOrder\n    expires_at?: SortOrderInput | SortOrder\n    _count?: discussion_board_banCountOrderByAggregateInput\n    _max?: discussion_board_banMaxOrderByAggregateInput\n    _min?: discussion_board_banMinOrderByAggregateInput\n  }\n\n  export type discussion_board_banScalarWhereWithAggregatesInput = {\n    AND?: discussion_board_banScalarWhereWithAggregatesInput | discussion_board_banScalarWhereWithAggregatesInput[]\n    OR?: discussion_board_banScalarWhereWithAggregatesInput[]\n    NOT?: discussion_board_banScalarWhereWithAggregatesInput | discussion_board_banScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussion_board_ban\"> | string\n    user_id?: UuidWithAggregatesFilter<\"discussion_board_ban\"> | string\n    moderator_id?: UuidWithAggregatesFilter<\"discussion_board_ban\"> | string\n    warning_id?: UuidNullableWithAggregatesFilter<\"discussion_board_ban\"> | string | null\n    report_id?: UuidNullableWithAggregatesFilter<\"discussion_board_ban\"> | string | null\n    ban_type?: StringWithAggregatesFilter<\"discussion_board_ban\"> | string\n    reason?: StringWithAggregatesFilter<\"discussion_board_ban\"> | string\n    banned_at?: DateTimeWithAggregatesFilter<\"discussion_board_ban\"> | Date | string\n    expires_at?: DateTimeNullableWithAggregatesFilter<\"discussion_board_ban\"> | Date | string | null\n  }\n\n  export type discussion_board_thread_statsWhereInput = {\n    AND?: discussion_board_thread_statsWhereInput | discussion_board_thread_statsWhereInput[]\n    OR?: discussion_board_thread_statsWhereInput[]\n    NOT?: discussion_board_thread_statsWhereInput | discussion_board_thread_statsWhereInput[]\n    id?: UuidFilter<\"discussion_board_thread_stats\"> | string\n    discussion_board_thread_id?: UuidFilter<\"discussion_board_thread_stats\"> | string\n    post_count?: IntFilter<\"discussion_board_thread_stats\"> | number\n    comment_count?: IntFilter<\"discussion_board_thread_stats\"> | number\n    upvote_count?: IntFilter<\"discussion_board_thread_stats\"> | number\n    downvote_count?: IntFilter<\"discussion_board_thread_stats\"> | number\n    bookmark_count?: IntFilter<\"discussion_board_thread_stats\"> | number\n    abuse_report_count?: IntFilter<\"discussion_board_thread_stats\"> | number\n    created_at?: DateTimeFilter<\"discussion_board_thread_stats\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussion_board_thread_stats\"> | Date | string\n    discussion_board_thread?: XOR<Discussion_board_threadScalarRelationFilter, discussion_board_threadWhereInput>\n  }\n\n  export type discussion_board_thread_statsOrderByWithRelationInput = {\n    id?: SortOrder\n    discussion_board_thread_id?: SortOrder\n    post_count?: SortOrder\n    comment_count?: SortOrder\n    upvote_count?: SortOrder\n    downvote_count?: SortOrder\n    bookmark_count?: SortOrder\n    abuse_report_count?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    discussion_board_thread?: discussion_board_threadOrderByWithRelationInput\n  }\n\n  export type discussion_board_thread_statsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    discussion_board_thread_id?: string\n    AND?: discussion_board_thread_statsWhereInput | discussion_board_thread_statsWhereInput[]\n    OR?: discussion_board_thread_statsWhereInput[]\n    NOT?: discussion_board_thread_statsWhereInput | discussion_board_thread_statsWhereInput[]\n    post_count?: IntFilter<\"discussion_board_thread_stats\"> | number\n    comment_count?: IntFilter<\"discussion_board_thread_stats\"> | number\n    upvote_count?: IntFilter<\"discussion_board_thread_stats\"> | number\n    downvote_count?: IntFilter<\"discussion_board_thread_stats\"> | number\n    bookmark_count?: IntFilter<\"discussion_board_thread_stats\"> | number\n    abuse_report_count?: IntFilter<\"discussion_board_thread_stats\"> | number\n    created_at?: DateTimeFilter<\"discussion_board_thread_stats\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussion_board_thread_stats\"> | Date | string\n    discussion_board_thread?: XOR<Discussion_board_threadScalarRelationFilter, discussion_board_threadWhereInput>\n  }, \"id\" | \"discussion_board_thread_id\">\n\n  export type discussion_board_thread_statsOrderByWithAggregationInput = {\n    id?: SortOrder\n    discussion_board_thread_id?: SortOrder\n    post_count?: SortOrder\n    comment_count?: SortOrder\n    upvote_count?: SortOrder\n    downvote_count?: SortOrder\n    bookmark_count?: SortOrder\n    abuse_report_count?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    _count?: discussion_board_thread_statsCountOrderByAggregateInput\n    _avg?: discussion_board_thread_statsAvgOrderByAggregateInput\n    _max?: discussion_board_thread_statsMaxOrderByAggregateInput\n    _min?: discussion_board_thread_statsMinOrderByAggregateInput\n    _sum?: discussion_board_thread_statsSumOrderByAggregateInput\n  }\n\n  export type discussion_board_thread_statsScalarWhereWithAggregatesInput = {\n    AND?: discussion_board_thread_statsScalarWhereWithAggregatesInput | discussion_board_thread_statsScalarWhereWithAggregatesInput[]\n    OR?: discussion_board_thread_statsScalarWhereWithAggregatesInput[]\n    NOT?: discussion_board_thread_statsScalarWhereWithAggregatesInput | discussion_board_thread_statsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussion_board_thread_stats\"> | string\n    discussion_board_thread_id?: UuidWithAggregatesFilter<\"discussion_board_thread_stats\"> | string\n    post_count?: IntWithAggregatesFilter<\"discussion_board_thread_stats\"> | number\n    comment_count?: IntWithAggregatesFilter<\"discussion_board_thread_stats\"> | number\n    upvote_count?: IntWithAggregatesFilter<\"discussion_board_thread_stats\"> | number\n    downvote_count?: IntWithAggregatesFilter<\"discussion_board_thread_stats\"> | number\n    bookmark_count?: IntWithAggregatesFilter<\"discussion_board_thread_stats\"> | number\n    abuse_report_count?: IntWithAggregatesFilter<\"discussion_board_thread_stats\"> | number\n    created_at?: DateTimeWithAggregatesFilter<\"discussion_board_thread_stats\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"discussion_board_thread_stats\"> | Date | string\n  }\n\n  export type discussion_board_user_activityWhereInput = {\n    AND?: discussion_board_user_activityWhereInput | discussion_board_user_activityWhereInput[]\n    OR?: discussion_board_user_activityWhereInput[]\n    NOT?: discussion_board_user_activityWhereInput | discussion_board_user_activityWhereInput[]\n    id?: UuidFilter<\"discussion_board_user_activity\"> | string\n    discussion_board_user_id?: UuidFilter<\"discussion_board_user_activity\"> | string\n    threads_authored?: IntFilter<\"discussion_board_user_activity\"> | number\n    posts_authored?: IntFilter<\"discussion_board_user_activity\"> | number\n    comments_authored?: IntFilter<\"discussion_board_user_activity\"> | number\n    upvotes_given?: IntFilter<\"discussion_board_user_activity\"> | number\n    downvotes_given?: IntFilter<\"discussion_board_user_activity\"> | number\n    reports_made?: IntFilter<\"discussion_board_user_activity\"> | number\n    bookmarks_created?: IntFilter<\"discussion_board_user_activity\"> | number\n    created_at?: DateTimeFilter<\"discussion_board_user_activity\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussion_board_user_activity\"> | Date | string\n    discussion_board_user?: XOR<Discussion_board_usersScalarRelationFilter, discussion_board_usersWhereInput>\n  }\n\n  export type discussion_board_user_activityOrderByWithRelationInput = {\n    id?: SortOrder\n    discussion_board_user_id?: SortOrder\n    threads_authored?: SortOrder\n    posts_authored?: SortOrder\n    comments_authored?: SortOrder\n    upvotes_given?: SortOrder\n    downvotes_given?: SortOrder\n    reports_made?: SortOrder\n    bookmarks_created?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    discussion_board_user?: discussion_board_usersOrderByWithRelationInput\n  }\n\n  export type discussion_board_user_activityWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    discussion_board_user_id?: string\n    AND?: discussion_board_user_activityWhereInput | discussion_board_user_activityWhereInput[]\n    OR?: discussion_board_user_activityWhereInput[]\n    NOT?: discussion_board_user_activityWhereInput | discussion_board_user_activityWhereInput[]\n    threads_authored?: IntFilter<\"discussion_board_user_activity\"> | number\n    posts_authored?: IntFilter<\"discussion_board_user_activity\"> | number\n    comments_authored?: IntFilter<\"discussion_board_user_activity\"> | number\n    upvotes_given?: IntFilter<\"discussion_board_user_activity\"> | number\n    downvotes_given?: IntFilter<\"discussion_board_user_activity\"> | number\n    reports_made?: IntFilter<\"discussion_board_user_activity\"> | number\n    bookmarks_created?: IntFilter<\"discussion_board_user_activity\"> | number\n    created_at?: DateTimeFilter<\"discussion_board_user_activity\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussion_board_user_activity\"> | Date | string\n    discussion_board_user?: XOR<Discussion_board_usersScalarRelationFilter, discussion_board_usersWhereInput>\n  }, \"id\" | \"discussion_board_user_id\">\n\n  export type discussion_board_user_activityOrderByWithAggregationInput = {\n    id?: SortOrder\n    discussion_board_user_id?: SortOrder\n    threads_authored?: SortOrder\n    posts_authored?: SortOrder\n    comments_authored?: SortOrder\n    upvotes_given?: SortOrder\n    downvotes_given?: SortOrder\n    reports_made?: SortOrder\n    bookmarks_created?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    _count?: discussion_board_user_activityCountOrderByAggregateInput\n    _avg?: discussion_board_user_activityAvgOrderByAggregateInput\n    _max?: discussion_board_user_activityMaxOrderByAggregateInput\n    _min?: discussion_board_user_activityMinOrderByAggregateInput\n    _sum?: discussion_board_user_activitySumOrderByAggregateInput\n  }\n\n  export type discussion_board_user_activityScalarWhereWithAggregatesInput = {\n    AND?: discussion_board_user_activityScalarWhereWithAggregatesInput | discussion_board_user_activityScalarWhereWithAggregatesInput[]\n    OR?: discussion_board_user_activityScalarWhereWithAggregatesInput[]\n    NOT?: discussion_board_user_activityScalarWhereWithAggregatesInput | discussion_board_user_activityScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussion_board_user_activity\"> | string\n    discussion_board_user_id?: UuidWithAggregatesFilter<\"discussion_board_user_activity\"> | string\n    threads_authored?: IntWithAggregatesFilter<\"discussion_board_user_activity\"> | number\n    posts_authored?: IntWithAggregatesFilter<\"discussion_board_user_activity\"> | number\n    comments_authored?: IntWithAggregatesFilter<\"discussion_board_user_activity\"> | number\n    upvotes_given?: IntWithAggregatesFilter<\"discussion_board_user_activity\"> | number\n    downvotes_given?: IntWithAggregatesFilter<\"discussion_board_user_activity\"> | number\n    reports_made?: IntWithAggregatesFilter<\"discussion_board_user_activity\"> | number\n    bookmarks_created?: IntWithAggregatesFilter<\"discussion_board_user_activity\"> | number\n    created_at?: DateTimeWithAggregatesFilter<\"discussion_board_user_activity\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"discussion_board_user_activity\"> | Date | string\n  }\n\n  export type discussion_board_content_abuse_metricWhereInput = {\n    AND?: discussion_board_content_abuse_metricWhereInput | discussion_board_content_abuse_metricWhereInput[]\n    OR?: discussion_board_content_abuse_metricWhereInput[]\n    NOT?: discussion_board_content_abuse_metricWhereInput | discussion_board_content_abuse_metricWhereInput[]\n    id?: UuidFilter<\"discussion_board_content_abuse_metric\"> | string\n    moderator_id?: UuidNullableFilter<\"discussion_board_content_abuse_metric\"> | string | null\n    date?: StringFilter<\"discussion_board_content_abuse_metric\"> | string\n    abuse_type?: StringFilter<\"discussion_board_content_abuse_metric\"> | string\n    flagged_count?: IntFilter<\"discussion_board_content_abuse_metric\"> | number\n    auto_hidden_count?: IntFilter<\"discussion_board_content_abuse_metric\"> | number\n    escalation_count?: IntFilter<\"discussion_board_content_abuse_metric\"> | number\n    false_positive_count?: IntFilter<\"discussion_board_content_abuse_metric\"> | number\n    avg_resolution_time_minutes?: IntFilter<\"discussion_board_content_abuse_metric\"> | number\n    created_at?: DateTimeFilter<\"discussion_board_content_abuse_metric\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussion_board_content_abuse_metric\"> | Date | string\n    discussion_board_moderator?: XOR<Discussion_board_moderatorsNullableScalarRelationFilter, discussion_board_moderatorsWhereInput> | null\n  }\n\n  export type discussion_board_content_abuse_metricOrderByWithRelationInput = {\n    id?: SortOrder\n    moderator_id?: SortOrderInput | SortOrder\n    date?: SortOrder\n    abuse_type?: SortOrder\n    flagged_count?: SortOrder\n    auto_hidden_count?: SortOrder\n    escalation_count?: SortOrder\n    false_positive_count?: SortOrder\n    avg_resolution_time_minutes?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    discussion_board_moderator?: discussion_board_moderatorsOrderByWithRelationInput\n  }\n\n  export type discussion_board_content_abuse_metricWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    date_abuse_type?: discussion_board_content_abuse_metricDateAbuse_typeCompoundUniqueInput\n    AND?: discussion_board_content_abuse_metricWhereInput | discussion_board_content_abuse_metricWhereInput[]\n    OR?: discussion_board_content_abuse_metricWhereInput[]\n    NOT?: discussion_board_content_abuse_metricWhereInput | discussion_board_content_abuse_metricWhereInput[]\n    moderator_id?: UuidNullableFilter<\"discussion_board_content_abuse_metric\"> | string | null\n    date?: StringFilter<\"discussion_board_content_abuse_metric\"> | string\n    abuse_type?: StringFilter<\"discussion_board_content_abuse_metric\"> | string\n    flagged_count?: IntFilter<\"discussion_board_content_abuse_metric\"> | number\n    auto_hidden_count?: IntFilter<\"discussion_board_content_abuse_metric\"> | number\n    escalation_count?: IntFilter<\"discussion_board_content_abuse_metric\"> | number\n    false_positive_count?: IntFilter<\"discussion_board_content_abuse_metric\"> | number\n    avg_resolution_time_minutes?: IntFilter<\"discussion_board_content_abuse_metric\"> | number\n    created_at?: DateTimeFilter<\"discussion_board_content_abuse_metric\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussion_board_content_abuse_metric\"> | Date | string\n    discussion_board_moderator?: XOR<Discussion_board_moderatorsNullableScalarRelationFilter, discussion_board_moderatorsWhereInput> | null\n  }, \"id\" | \"date_abuse_type\">\n\n  export type discussion_board_content_abuse_metricOrderByWithAggregationInput = {\n    id?: SortOrder\n    moderator_id?: SortOrderInput | SortOrder\n    date?: SortOrder\n    abuse_type?: SortOrder\n    flagged_count?: SortOrder\n    auto_hidden_count?: SortOrder\n    escalation_count?: SortOrder\n    false_positive_count?: SortOrder\n    avg_resolution_time_minutes?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    _count?: discussion_board_content_abuse_metricCountOrderByAggregateInput\n    _avg?: discussion_board_content_abuse_metricAvgOrderByAggregateInput\n    _max?: discussion_board_content_abuse_metricMaxOrderByAggregateInput\n    _min?: discussion_board_content_abuse_metricMinOrderByAggregateInput\n    _sum?: discussion_board_content_abuse_metricSumOrderByAggregateInput\n  }\n\n  export type discussion_board_content_abuse_metricScalarWhereWithAggregatesInput = {\n    AND?: discussion_board_content_abuse_metricScalarWhereWithAggregatesInput | discussion_board_content_abuse_metricScalarWhereWithAggregatesInput[]\n    OR?: discussion_board_content_abuse_metricScalarWhereWithAggregatesInput[]\n    NOT?: discussion_board_content_abuse_metricScalarWhereWithAggregatesInput | discussion_board_content_abuse_metricScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussion_board_content_abuse_metric\"> | string\n    moderator_id?: UuidNullableWithAggregatesFilter<\"discussion_board_content_abuse_metric\"> | string | null\n    date?: StringWithAggregatesFilter<\"discussion_board_content_abuse_metric\"> | string\n    abuse_type?: StringWithAggregatesFilter<\"discussion_board_content_abuse_metric\"> | string\n    flagged_count?: IntWithAggregatesFilter<\"discussion_board_content_abuse_metric\"> | number\n    auto_hidden_count?: IntWithAggregatesFilter<\"discussion_board_content_abuse_metric\"> | number\n    escalation_count?: IntWithAggregatesFilter<\"discussion_board_content_abuse_metric\"> | number\n    false_positive_count?: IntWithAggregatesFilter<\"discussion_board_content_abuse_metric\"> | number\n    avg_resolution_time_minutes?: IntWithAggregatesFilter<\"discussion_board_content_abuse_metric\"> | number\n    created_at?: DateTimeWithAggregatesFilter<\"discussion_board_content_abuse_metric\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"discussion_board_content_abuse_metric\"> | Date | string\n  }\n\n  export type discussion_board_settingWhereInput = {\n    AND?: discussion_board_settingWhereInput | discussion_board_settingWhereInput[]\n    OR?: discussion_board_settingWhereInput[]\n    NOT?: discussion_board_settingWhereInput | discussion_board_settingWhereInput[]\n    id?: UuidFilter<\"discussion_board_setting\"> | string\n    key?: StringFilter<\"discussion_board_setting\"> | string\n    value?: StringFilter<\"discussion_board_setting\"> | string\n    description?: StringNullableFilter<\"discussion_board_setting\"> | string | null\n    created_at?: DateTimeFilter<\"discussion_board_setting\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussion_board_setting\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"discussion_board_setting\"> | Date | string | null\n  }\n\n  export type discussion_board_settingOrderByWithRelationInput = {\n    id?: SortOrder\n    key?: SortOrder\n    value?: SortOrder\n    description?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n  }\n\n  export type discussion_board_settingWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    key?: string\n    AND?: discussion_board_settingWhereInput | discussion_board_settingWhereInput[]\n    OR?: discussion_board_settingWhereInput[]\n    NOT?: discussion_board_settingWhereInput | discussion_board_settingWhereInput[]\n    value?: StringFilter<\"discussion_board_setting\"> | string\n    description?: StringNullableFilter<\"discussion_board_setting\"> | string | null\n    created_at?: DateTimeFilter<\"discussion_board_setting\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussion_board_setting\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"discussion_board_setting\"> | Date | string | null\n  }, \"id\" | \"key\">\n\n  export type discussion_board_settingOrderByWithAggregationInput = {\n    id?: SortOrder\n    key?: SortOrder\n    value?: SortOrder\n    description?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    _count?: discussion_board_settingCountOrderByAggregateInput\n    _max?: discussion_board_settingMaxOrderByAggregateInput\n    _min?: discussion_board_settingMinOrderByAggregateInput\n  }\n\n  export type discussion_board_settingScalarWhereWithAggregatesInput = {\n    AND?: discussion_board_settingScalarWhereWithAggregatesInput | discussion_board_settingScalarWhereWithAggregatesInput[]\n    OR?: discussion_board_settingScalarWhereWithAggregatesInput[]\n    NOT?: discussion_board_settingScalarWhereWithAggregatesInput | discussion_board_settingScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussion_board_setting\"> | string\n    key?: StringWithAggregatesFilter<\"discussion_board_setting\"> | string\n    value?: StringWithAggregatesFilter<\"discussion_board_setting\"> | string\n    description?: StringNullableWithAggregatesFilter<\"discussion_board_setting\"> | string | null\n    created_at?: DateTimeWithAggregatesFilter<\"discussion_board_setting\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"discussion_board_setting\"> | Date | string\n    deleted_at?: DateTimeNullableWithAggregatesFilter<\"discussion_board_setting\"> | Date | string | null\n  }\n\n  export type discussion_board_system_configWhereInput = {\n    AND?: discussion_board_system_configWhereInput | discussion_board_system_configWhereInput[]\n    OR?: discussion_board_system_configWhereInput[]\n    NOT?: discussion_board_system_configWhereInput | discussion_board_system_configWhereInput[]\n    id?: UuidFilter<\"discussion_board_system_config\"> | string\n    key?: StringFilter<\"discussion_board_system_config\"> | string\n    value?: StringFilter<\"discussion_board_system_config\"> | string\n    description?: StringNullableFilter<\"discussion_board_system_config\"> | string | null\n    created_at?: DateTimeFilter<\"discussion_board_system_config\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussion_board_system_config\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"discussion_board_system_config\"> | Date | string | null\n  }\n\n  export type discussion_board_system_configOrderByWithRelationInput = {\n    id?: SortOrder\n    key?: SortOrder\n    value?: SortOrder\n    description?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n  }\n\n  export type discussion_board_system_configWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: discussion_board_system_configWhereInput | discussion_board_system_configWhereInput[]\n    OR?: discussion_board_system_configWhereInput[]\n    NOT?: discussion_board_system_configWhereInput | discussion_board_system_configWhereInput[]\n    key?: StringFilter<\"discussion_board_system_config\"> | string\n    value?: StringFilter<\"discussion_board_system_config\"> | string\n    description?: StringNullableFilter<\"discussion_board_system_config\"> | string | null\n    created_at?: DateTimeFilter<\"discussion_board_system_config\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussion_board_system_config\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"discussion_board_system_config\"> | Date | string | null\n  }, \"id\">\n\n  export type discussion_board_system_configOrderByWithAggregationInput = {\n    id?: SortOrder\n    key?: SortOrder\n    value?: SortOrder\n    description?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    _count?: discussion_board_system_configCountOrderByAggregateInput\n    _max?: discussion_board_system_configMaxOrderByAggregateInput\n    _min?: discussion_board_system_configMinOrderByAggregateInput\n  }\n\n  export type discussion_board_system_configScalarWhereWithAggregatesInput = {\n    AND?: discussion_board_system_configScalarWhereWithAggregatesInput | discussion_board_system_configScalarWhereWithAggregatesInput[]\n    OR?: discussion_board_system_configScalarWhereWithAggregatesInput[]\n    NOT?: discussion_board_system_configScalarWhereWithAggregatesInput | discussion_board_system_configScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussion_board_system_config\"> | string\n    key?: StringWithAggregatesFilter<\"discussion_board_system_config\"> | string\n    value?: StringWithAggregatesFilter<\"discussion_board_system_config\"> | string\n    description?: StringNullableWithAggregatesFilter<\"discussion_board_system_config\"> | string | null\n    created_at?: DateTimeWithAggregatesFilter<\"discussion_board_system_config\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"discussion_board_system_config\"> | Date | string\n    deleted_at?: DateTimeNullableWithAggregatesFilter<\"discussion_board_system_config\"> | Date | string | null\n  }\n\n  export type discussion_board_usersCreateInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    discussion_board_admins?: discussion_board_adminsCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    discussion_board_user_profiles?: discussion_board_user_profilesCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    discussion_board_user_settings?: discussion_board_user_settingsCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    discussion_board_thread?: discussion_board_threadCreateNestedManyWithoutCreator_userInput\n    discussion_board_post?: discussion_board_postCreateNestedManyWithoutAuthor_userInput\n    discussion_board_comment?: discussion_board_commentCreateNestedManyWithoutAuthor_userInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutUserInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutUserInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutUserInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutRecipient_userInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutUserInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportCreateNestedManyWithoutReported_userInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportCreateNestedManyWithoutReporting_userInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutUserInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logCreateNestedManyWithoutActorInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logCreateNestedManyWithoutAffected_userInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutUserInput\n    discussion_board_ban?: discussion_board_banCreateNestedManyWithoutUserInput\n    discussion_board_user_activity?: discussion_board_user_activityCreateNestedOneWithoutDiscussion_board_userInput\n  }\n\n  export type discussion_board_usersUncheckedCreateInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUncheckedCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    discussion_board_admins?: discussion_board_adminsUncheckedCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUncheckedCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    discussion_board_user_settings?: discussion_board_user_settingsUncheckedCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    discussion_board_thread?: discussion_board_threadUncheckedCreateNestedManyWithoutCreator_userInput\n    discussion_board_post?: discussion_board_postUncheckedCreateNestedManyWithoutAuthor_userInput\n    discussion_board_comment?: discussion_board_commentUncheckedCreateNestedManyWithoutAuthor_userInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutRecipient_userInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUncheckedCreateNestedManyWithoutReported_userInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUncheckedCreateNestedManyWithoutReporting_userInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUncheckedCreateNestedManyWithoutActorInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUncheckedCreateNestedManyWithoutAffected_userInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_ban?: discussion_board_banUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_user_activity?: discussion_board_user_activityUncheckedCreateNestedOneWithoutDiscussion_board_userInput\n  }\n\n  export type discussion_board_usersUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput\n    discussion_board_admins?: discussion_board_adminsUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_settings?: discussion_board_user_settingsUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput\n    discussion_board_thread?: discussion_board_threadUpdateManyWithoutCreator_userNestedInput\n    discussion_board_post?: discussion_board_postUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_comment?: discussion_board_commentUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutUserNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutUserNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutUserNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutRecipient_userNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutUserNestedInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUpdateManyWithoutReported_userNestedInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUpdateManyWithoutReporting_userNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutUserNestedInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUpdateManyWithoutActorNestedInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUpdateManyWithoutAffected_userNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutUserNestedInput\n    discussion_board_ban?: discussion_board_banUpdateManyWithoutUserNestedInput\n    discussion_board_user_activity?: discussion_board_user_activityUpdateOneWithoutDiscussion_board_userNestedInput\n  }\n\n  export type discussion_board_usersUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUncheckedUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput\n    discussion_board_admins?: discussion_board_adminsUncheckedUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUncheckedUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_settings?: discussion_board_user_settingsUncheckedUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput\n    discussion_board_thread?: discussion_board_threadUncheckedUpdateManyWithoutCreator_userNestedInput\n    discussion_board_post?: discussion_board_postUncheckedUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_comment?: discussion_board_commentUncheckedUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutRecipient_userNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUncheckedUpdateManyWithoutReported_userNestedInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUncheckedUpdateManyWithoutReporting_userNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUncheckedUpdateManyWithoutActorNestedInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUncheckedUpdateManyWithoutAffected_userNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_ban?: discussion_board_banUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_user_activity?: discussion_board_user_activityUncheckedUpdateOneWithoutDiscussion_board_userNestedInput\n  }\n\n  export type discussion_board_usersCreateManyInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type discussion_board_usersUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_usersUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_guestsCreateInput = {\n    id: string\n    session_id: string\n    ip_address: string\n    user_agent?: string | null\n    accessed_at: Date | string\n  }\n\n  export type discussion_board_guestsUncheckedCreateInput = {\n    id: string\n    session_id: string\n    ip_address: string\n    user_agent?: string | null\n    accessed_at: Date | string\n  }\n\n  export type discussion_board_guestsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    session_id?: StringFieldUpdateOperationsInput | string\n    ip_address?: StringFieldUpdateOperationsInput | string\n    user_agent?: NullableStringFieldUpdateOperationsInput | string | null\n    accessed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_guestsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    session_id?: StringFieldUpdateOperationsInput | string\n    ip_address?: StringFieldUpdateOperationsInput | string\n    user_agent?: NullableStringFieldUpdateOperationsInput | string | null\n    accessed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_guestsCreateManyInput = {\n    id: string\n    session_id: string\n    ip_address: string\n    user_agent?: string | null\n    accessed_at: Date | string\n  }\n\n  export type discussion_board_guestsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    session_id?: StringFieldUpdateOperationsInput | string\n    ip_address?: StringFieldUpdateOperationsInput | string\n    user_agent?: NullableStringFieldUpdateOperationsInput | string | null\n    accessed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_guestsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    session_id?: StringFieldUpdateOperationsInput | string\n    ip_address?: StringFieldUpdateOperationsInput | string\n    user_agent?: NullableStringFieldUpdateOperationsInput | string | null\n    accessed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_moderatorsCreateInput = {\n    id: string\n    is_active: boolean\n    assigned_at: Date | string\n    revoked_at?: Date | string | null\n    fk_discussion_board_moderators_user_id_discussion_board_users_id: discussion_board_usersCreateNestedOneWithoutDiscussion_board_moderatorsInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutModeratorInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutModeratorInput\n    discussion_board_ban?: discussion_board_banCreateNestedManyWithoutModeratorInput\n    discussion_board_content_abuse_metric?: discussion_board_content_abuse_metricCreateNestedManyWithoutDiscussion_board_moderatorInput\n  }\n\n  export type discussion_board_moderatorsUncheckedCreateInput = {\n    id: string\n    user_id: string\n    is_active: boolean\n    assigned_at: Date | string\n    revoked_at?: Date | string | null\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutModeratorInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutModeratorInput\n    discussion_board_ban?: discussion_board_banUncheckedCreateNestedManyWithoutModeratorInput\n    discussion_board_content_abuse_metric?: discussion_board_content_abuse_metricUncheckedCreateNestedManyWithoutDiscussion_board_moderatorInput\n  }\n\n  export type discussion_board_moderatorsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    fk_discussion_board_moderators_user_id_discussion_board_users_id?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_moderatorsNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutModeratorNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutModeratorNestedInput\n    discussion_board_ban?: discussion_board_banUpdateManyWithoutModeratorNestedInput\n    discussion_board_content_abuse_metric?: discussion_board_content_abuse_metricUpdateManyWithoutDiscussion_board_moderatorNestedInput\n  }\n\n  export type discussion_board_moderatorsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutModeratorNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutModeratorNestedInput\n    discussion_board_ban?: discussion_board_banUncheckedUpdateManyWithoutModeratorNestedInput\n    discussion_board_content_abuse_metric?: discussion_board_content_abuse_metricUncheckedUpdateManyWithoutDiscussion_board_moderatorNestedInput\n  }\n\n  export type discussion_board_moderatorsCreateManyInput = {\n    id: string\n    user_id: string\n    is_active: boolean\n    assigned_at: Date | string\n    revoked_at?: Date | string | null\n  }\n\n  export type discussion_board_moderatorsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_moderatorsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_adminsCreateInput = {\n    id: string\n    is_active: boolean\n    assigned_at: Date | string\n    revoked_at?: Date | string | null\n    fk_discussion_board_admins_user_id_discussion_board_users_id: discussion_board_usersCreateNestedOneWithoutDiscussion_board_adminsInput\n  }\n\n  export type discussion_board_adminsUncheckedCreateInput = {\n    id: string\n    user_id: string\n    is_active: boolean\n    assigned_at: Date | string\n    revoked_at?: Date | string | null\n  }\n\n  export type discussion_board_adminsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    fk_discussion_board_admins_user_id_discussion_board_users_id?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_adminsNestedInput\n  }\n\n  export type discussion_board_adminsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_adminsCreateManyInput = {\n    id: string\n    user_id: string\n    is_active: boolean\n    assigned_at: Date | string\n    revoked_at?: Date | string | null\n  }\n\n  export type discussion_board_adminsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_adminsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_user_profilesCreateInput = {\n    id: string\n    display_name?: string | null\n    avatar_url?: string | null\n    bio?: string | null\n    badges?: string | null\n    fk_discussion_board_user_profiles_user_id_discussion_board_users_id: discussion_board_usersCreateNestedOneWithoutDiscussion_board_user_profilesInput\n  }\n\n  export type discussion_board_user_profilesUncheckedCreateInput = {\n    id: string\n    user_id: string\n    display_name?: string | null\n    avatar_url?: string | null\n    bio?: string | null\n    badges?: string | null\n  }\n\n  export type discussion_board_user_profilesUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    display_name?: NullableStringFieldUpdateOperationsInput | string | null\n    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null\n    bio?: NullableStringFieldUpdateOperationsInput | string | null\n    badges?: NullableStringFieldUpdateOperationsInput | string | null\n    fk_discussion_board_user_profiles_user_id_discussion_board_users_id?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_user_profilesNestedInput\n  }\n\n  export type discussion_board_user_profilesUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    display_name?: NullableStringFieldUpdateOperationsInput | string | null\n    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null\n    bio?: NullableStringFieldUpdateOperationsInput | string | null\n    badges?: NullableStringFieldUpdateOperationsInput | string | null\n  }\n\n  export type discussion_board_user_profilesCreateManyInput = {\n    id: string\n    user_id: string\n    display_name?: string | null\n    avatar_url?: string | null\n    bio?: string | null\n    badges?: string | null\n  }\n\n  export type discussion_board_user_profilesUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    display_name?: NullableStringFieldUpdateOperationsInput | string | null\n    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null\n    bio?: NullableStringFieldUpdateOperationsInput | string | null\n    badges?: NullableStringFieldUpdateOperationsInput | string | null\n  }\n\n  export type discussion_board_user_profilesUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    display_name?: NullableStringFieldUpdateOperationsInput | string | null\n    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null\n    bio?: NullableStringFieldUpdateOperationsInput | string | null\n    badges?: NullableStringFieldUpdateOperationsInput | string | null\n  }\n\n  export type discussion_board_user_settingsCreateInput = {\n    id: string\n    notification_email: boolean\n    notification_in_app: boolean\n    accessibility_mode?: string | null\n    display_density?: string | null\n    fk_discussion_board_user_settings_user_id_discussion_board_users_id: discussion_board_usersCreateNestedOneWithoutDiscussion_board_user_settingsInput\n  }\n\n  export type discussion_board_user_settingsUncheckedCreateInput = {\n    id: string\n    user_id: string\n    notification_email: boolean\n    notification_in_app: boolean\n    accessibility_mode?: string | null\n    display_density?: string | null\n  }\n\n  export type discussion_board_user_settingsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    notification_email?: BoolFieldUpdateOperationsInput | boolean\n    notification_in_app?: BoolFieldUpdateOperationsInput | boolean\n    accessibility_mode?: NullableStringFieldUpdateOperationsInput | string | null\n    display_density?: NullableStringFieldUpdateOperationsInput | string | null\n    fk_discussion_board_user_settings_user_id_discussion_board_users_id?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_user_settingsNestedInput\n  }\n\n  export type discussion_board_user_settingsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    notification_email?: BoolFieldUpdateOperationsInput | boolean\n    notification_in_app?: BoolFieldUpdateOperationsInput | boolean\n    accessibility_mode?: NullableStringFieldUpdateOperationsInput | string | null\n    display_density?: NullableStringFieldUpdateOperationsInput | string | null\n  }\n\n  export type discussion_board_user_settingsCreateManyInput = {\n    id: string\n    user_id: string\n    notification_email: boolean\n    notification_in_app: boolean\n    accessibility_mode?: string | null\n    display_density?: string | null\n  }\n\n  export type discussion_board_user_settingsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    notification_email?: BoolFieldUpdateOperationsInput | boolean\n    notification_in_app?: BoolFieldUpdateOperationsInput | boolean\n    accessibility_mode?: NullableStringFieldUpdateOperationsInput | string | null\n    display_density?: NullableStringFieldUpdateOperationsInput | string | null\n  }\n\n  export type discussion_board_user_settingsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    notification_email?: BoolFieldUpdateOperationsInput | boolean\n    notification_in_app?: BoolFieldUpdateOperationsInput | boolean\n    accessibility_mode?: NullableStringFieldUpdateOperationsInput | string | null\n    display_density?: NullableStringFieldUpdateOperationsInput | string | null\n  }\n\n  export type discussion_board_threadCreateInput = {\n    id: string\n    title: string\n    body: string\n    is_locked: boolean\n    is_pinned: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    creator_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_threadInput\n    category: discussion_board_thread_categoryCreateNestedOneWithoutDiscussion_board_threadInput\n    discussion_board_post?: discussion_board_postCreateNestedManyWithoutThreadInput\n    discussion_board_thread_tag?: discussion_board_thread_tagCreateNestedManyWithoutThreadInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityCreateNestedOneWithoutThreadInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutThreadInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutThreadInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutThreadInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutThreadInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutThreadInput\n    discussion_board_report?: discussion_board_reportCreateNestedManyWithoutThreadInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutThreadInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutThreadInput\n    discussion_board_thread_stats?: discussion_board_thread_statsCreateNestedOneWithoutDiscussion_board_threadInput\n  }\n\n  export type discussion_board_threadUncheckedCreateInput = {\n    id: string\n    creator_user_id: string\n    category_id: string\n    title: string\n    body: string\n    is_locked: boolean\n    is_pinned: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_post?: discussion_board_postUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_thread_tag?: discussion_board_thread_tagUncheckedCreateNestedManyWithoutThreadInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUncheckedCreateNestedOneWithoutThreadInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_report?: discussion_board_reportUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUncheckedCreateNestedOneWithoutDiscussion_board_threadInput\n  }\n\n  export type discussion_board_threadUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    is_locked?: BoolFieldUpdateOperationsInput | boolean\n    is_pinned?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    creator_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_threadNestedInput\n    category?: discussion_board_thread_categoryUpdateOneRequiredWithoutDiscussion_board_threadNestedInput\n    discussion_board_post?: discussion_board_postUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_tag?: discussion_board_thread_tagUpdateManyWithoutThreadNestedInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUpdateOneWithoutThreadNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutThreadNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutThreadNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutThreadNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutThreadNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutThreadNestedInput\n    discussion_board_report?: discussion_board_reportUpdateManyWithoutThreadNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutThreadNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUpdateOneWithoutDiscussion_board_threadNestedInput\n  }\n\n  export type discussion_board_threadUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    creator_user_id?: StringFieldUpdateOperationsInput | string\n    category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    is_locked?: BoolFieldUpdateOperationsInput | boolean\n    is_pinned?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_post?: discussion_board_postUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_tag?: discussion_board_thread_tagUncheckedUpdateManyWithoutThreadNestedInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUncheckedUpdateOneWithoutThreadNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_report?: discussion_board_reportUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUncheckedUpdateOneWithoutDiscussion_board_threadNestedInput\n  }\n\n  export type discussion_board_threadCreateManyInput = {\n    id: string\n    creator_user_id: string\n    category_id: string\n    title: string\n    body: string\n    is_locked: boolean\n    is_pinned: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type discussion_board_threadUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    is_locked?: BoolFieldUpdateOperationsInput | boolean\n    is_pinned?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_threadUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    creator_user_id?: StringFieldUpdateOperationsInput | string\n    category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    is_locked?: BoolFieldUpdateOperationsInput | boolean\n    is_pinned?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_postCreateInput = {\n    id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    thread: discussion_board_threadCreateNestedOneWithoutDiscussion_board_postInput\n    author_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_postInput\n    parent_post?: discussion_board_postCreateNestedOneWithoutRecursiveInput\n    recursive?: discussion_board_postCreateNestedManyWithoutParent_postInput\n    discussion_board_comment?: discussion_board_commentCreateNestedManyWithoutPostInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutPostInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutPostInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutPostInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutPostInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutPostInput\n    discussion_board_report?: discussion_board_reportCreateNestedManyWithoutPostInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutPostInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutPostInput\n  }\n\n  export type discussion_board_postUncheckedCreateInput = {\n    id: string\n    thread_id: string\n    author_user_id: string\n    parent_post_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    recursive?: discussion_board_postUncheckedCreateNestedManyWithoutParent_postInput\n    discussion_board_comment?: discussion_board_commentUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_report?: discussion_board_reportUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutPostInput\n  }\n\n  export type discussion_board_postUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    thread?: discussion_board_threadUpdateOneRequiredWithoutDiscussion_board_postNestedInput\n    author_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_postNestedInput\n    parent_post?: discussion_board_postUpdateOneWithoutRecursiveNestedInput\n    recursive?: discussion_board_postUpdateManyWithoutParent_postNestedInput\n    discussion_board_comment?: discussion_board_commentUpdateManyWithoutPostNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutPostNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutPostNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutPostNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutPostNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutPostNestedInput\n    discussion_board_report?: discussion_board_reportUpdateManyWithoutPostNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutPostNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutPostNestedInput\n  }\n\n  export type discussion_board_postUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    thread_id?: StringFieldUpdateOperationsInput | string\n    author_user_id?: StringFieldUpdateOperationsInput | string\n    parent_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recursive?: discussion_board_postUncheckedUpdateManyWithoutParent_postNestedInput\n    discussion_board_comment?: discussion_board_commentUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_report?: discussion_board_reportUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutPostNestedInput\n  }\n\n  export type discussion_board_postCreateManyInput = {\n    id: string\n    thread_id: string\n    author_user_id: string\n    parent_post_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type discussion_board_postUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_postUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    thread_id?: StringFieldUpdateOperationsInput | string\n    author_user_id?: StringFieldUpdateOperationsInput | string\n    parent_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_commentCreateInput = {\n    id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    post: discussion_board_postCreateNestedOneWithoutDiscussion_board_commentInput\n    author_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_commentInput\n    parent_comment?: discussion_board_commentCreateNestedOneWithoutRecursiveInput\n    recursive?: discussion_board_commentCreateNestedManyWithoutParent_commentInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutCommentInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutCommentInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutCommentInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutCommentInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutCommentInput\n    discussion_board_report?: discussion_board_reportCreateNestedManyWithoutCommentInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutCommentInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutCommentInput\n  }\n\n  export type discussion_board_commentUncheckedCreateInput = {\n    id: string\n    post_id: string\n    author_user_id: string\n    parent_comment_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    recursive?: discussion_board_commentUncheckedCreateNestedManyWithoutParent_commentInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_report?: discussion_board_reportUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutCommentInput\n  }\n\n  export type discussion_board_commentUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    post?: discussion_board_postUpdateOneRequiredWithoutDiscussion_board_commentNestedInput\n    author_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_commentNestedInput\n    parent_comment?: discussion_board_commentUpdateOneWithoutRecursiveNestedInput\n    recursive?: discussion_board_commentUpdateManyWithoutParent_commentNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutCommentNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutCommentNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutCommentNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutCommentNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutCommentNestedInput\n    discussion_board_report?: discussion_board_reportUpdateManyWithoutCommentNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutCommentNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutCommentNestedInput\n  }\n\n  export type discussion_board_commentUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    author_user_id?: StringFieldUpdateOperationsInput | string\n    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recursive?: discussion_board_commentUncheckedUpdateManyWithoutParent_commentNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_report?: discussion_board_reportUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutCommentNestedInput\n  }\n\n  export type discussion_board_commentCreateManyInput = {\n    id: string\n    post_id: string\n    author_user_id: string\n    parent_comment_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type discussion_board_commentUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_commentUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    author_user_id?: StringFieldUpdateOperationsInput | string\n    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_thread_tagCreateInput = {\n    id: string\n    created_at: Date | string\n    thread: discussion_board_threadCreateNestedOneWithoutDiscussion_board_thread_tagInput\n    tag_category: discussion_board_tag_categoryCreateNestedOneWithoutDiscussion_board_thread_tagInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutTagInput\n  }\n\n  export type discussion_board_thread_tagUncheckedCreateInput = {\n    id: string\n    thread_id: string\n    tag_id: string\n    created_at: Date | string\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutTagInput\n  }\n\n  export type discussion_board_thread_tagUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    thread?: discussion_board_threadUpdateOneRequiredWithoutDiscussion_board_thread_tagNestedInput\n    tag_category?: discussion_board_tag_categoryUpdateOneRequiredWithoutDiscussion_board_thread_tagNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutTagNestedInput\n  }\n\n  export type discussion_board_thread_tagUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    thread_id?: StringFieldUpdateOperationsInput | string\n    tag_id?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutTagNestedInput\n  }\n\n  export type discussion_board_thread_tagCreateManyInput = {\n    id: string\n    thread_id: string\n    tag_id: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_thread_tagUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_thread_tagUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    thread_id?: StringFieldUpdateOperationsInput | string\n    tag_id?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_thread_categoryCreateInput = {\n    id: string\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    discussion_board_thread?: discussion_board_threadCreateNestedManyWithoutCategoryInput\n  }\n\n  export type discussion_board_thread_categoryUncheckedCreateInput = {\n    id: string\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    discussion_board_thread?: discussion_board_threadUncheckedCreateNestedManyWithoutCategoryInput\n  }\n\n  export type discussion_board_thread_categoryUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussion_board_thread?: discussion_board_threadUpdateManyWithoutCategoryNestedInput\n  }\n\n  export type discussion_board_thread_categoryUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussion_board_thread?: discussion_board_threadUncheckedUpdateManyWithoutCategoryNestedInput\n  }\n\n  export type discussion_board_thread_categoryCreateManyInput = {\n    id: string\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussion_board_thread_categoryUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_thread_categoryUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_tag_categoryCreateInput = {\n    id: string\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    discussion_board_thread_tag?: discussion_board_thread_tagCreateNestedManyWithoutTag_categoryInput\n  }\n\n  export type discussion_board_tag_categoryUncheckedCreateInput = {\n    id: string\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    discussion_board_thread_tag?: discussion_board_thread_tagUncheckedCreateNestedManyWithoutTag_categoryInput\n  }\n\n  export type discussion_board_tag_categoryUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussion_board_thread_tag?: discussion_board_thread_tagUpdateManyWithoutTag_categoryNestedInput\n  }\n\n  export type discussion_board_tag_categoryUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussion_board_thread_tag?: discussion_board_thread_tagUncheckedUpdateManyWithoutTag_categoryNestedInput\n  }\n\n  export type discussion_board_tag_categoryCreateManyInput = {\n    id: string\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussion_board_tag_categoryUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_tag_categoryUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type mv_discussion_thread_activityCreateInput = {\n    id: string\n    reply_count: number\n    last_posted_at?: Date | string | null\n    participant_user_ids?: string | null\n    thread: discussion_board_threadCreateNestedOneWithoutMv_discussion_thread_activityInput\n  }\n\n  export type mv_discussion_thread_activityUncheckedCreateInput = {\n    id: string\n    thread_id: string\n    reply_count: number\n    last_posted_at?: Date | string | null\n    participant_user_ids?: string | null\n  }\n\n  export type mv_discussion_thread_activityUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reply_count?: IntFieldUpdateOperationsInput | number\n    last_posted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    participant_user_ids?: NullableStringFieldUpdateOperationsInput | string | null\n    thread?: discussion_board_threadUpdateOneRequiredWithoutMv_discussion_thread_activityNestedInput\n  }\n\n  export type mv_discussion_thread_activityUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    thread_id?: StringFieldUpdateOperationsInput | string\n    reply_count?: IntFieldUpdateOperationsInput | number\n    last_posted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    participant_user_ids?: NullableStringFieldUpdateOperationsInput | string | null\n  }\n\n  export type mv_discussion_thread_activityCreateManyInput = {\n    id: string\n    thread_id: string\n    reply_count: number\n    last_posted_at?: Date | string | null\n    participant_user_ids?: string | null\n  }\n\n  export type mv_discussion_thread_activityUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reply_count?: IntFieldUpdateOperationsInput | number\n    last_posted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    participant_user_ids?: NullableStringFieldUpdateOperationsInput | string | null\n  }\n\n  export type mv_discussion_thread_activityUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    thread_id?: StringFieldUpdateOperationsInput | string\n    reply_count?: IntFieldUpdateOperationsInput | number\n    last_posted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    participant_user_ids?: NullableStringFieldUpdateOperationsInput | string | null\n  }\n\n  export type discussion_board_voteCreateInput = {\n    id: string\n    direction: string\n    created_at: Date | string\n    user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_voteInput\n    thread?: discussion_board_threadCreateNestedOneWithoutDiscussion_board_voteInput\n    post?: discussion_board_postCreateNestedOneWithoutDiscussion_board_voteInput\n    comment?: discussion_board_commentCreateNestedOneWithoutDiscussion_board_voteInput\n  }\n\n  export type discussion_board_voteUncheckedCreateInput = {\n    id: string\n    user_id: string\n    thread_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    direction: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_voteUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    direction?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_voteNestedInput\n    thread?: discussion_board_threadUpdateOneWithoutDiscussion_board_voteNestedInput\n    post?: discussion_board_postUpdateOneWithoutDiscussion_board_voteNestedInput\n    comment?: discussion_board_commentUpdateOneWithoutDiscussion_board_voteNestedInput\n  }\n\n  export type discussion_board_voteUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    direction?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_voteCreateManyInput = {\n    id: string\n    user_id: string\n    thread_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    direction: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_voteUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    direction?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_voteUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    direction?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_reactionCreateInput = {\n    id: string\n    reaction_type: string\n    created_at: Date | string\n    user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_reactionInput\n    thread?: discussion_board_threadCreateNestedOneWithoutDiscussion_board_reactionInput\n    post?: discussion_board_postCreateNestedOneWithoutDiscussion_board_reactionInput\n    comment?: discussion_board_commentCreateNestedOneWithoutDiscussion_board_reactionInput\n  }\n\n  export type discussion_board_reactionUncheckedCreateInput = {\n    id: string\n    user_id: string\n    thread_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    reaction_type: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_reactionUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reaction_type?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_reactionNestedInput\n    thread?: discussion_board_threadUpdateOneWithoutDiscussion_board_reactionNestedInput\n    post?: discussion_board_postUpdateOneWithoutDiscussion_board_reactionNestedInput\n    comment?: discussion_board_commentUpdateOneWithoutDiscussion_board_reactionNestedInput\n  }\n\n  export type discussion_board_reactionUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reaction_type?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_reactionCreateManyInput = {\n    id: string\n    user_id: string\n    thread_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    reaction_type: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_reactionUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reaction_type?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_reactionUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reaction_type?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_bookmarkCreateInput = {\n    id: string\n    created_at: Date | string\n    user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_bookmarkInput\n    thread?: discussion_board_threadCreateNestedOneWithoutDiscussion_board_bookmarkInput\n    post?: discussion_board_postCreateNestedOneWithoutDiscussion_board_bookmarkInput\n    comment?: discussion_board_commentCreateNestedOneWithoutDiscussion_board_bookmarkInput\n  }\n\n  export type discussion_board_bookmarkUncheckedCreateInput = {\n    id: string\n    user_id: string\n    thread_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    created_at: Date | string\n  }\n\n  export type discussion_board_bookmarkUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_bookmarkNestedInput\n    thread?: discussion_board_threadUpdateOneWithoutDiscussion_board_bookmarkNestedInput\n    post?: discussion_board_postUpdateOneWithoutDiscussion_board_bookmarkNestedInput\n    comment?: discussion_board_commentUpdateOneWithoutDiscussion_board_bookmarkNestedInput\n  }\n\n  export type discussion_board_bookmarkUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_bookmarkCreateManyInput = {\n    id: string\n    user_id: string\n    thread_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    created_at: Date | string\n  }\n\n  export type discussion_board_bookmarkUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_bookmarkUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_notificationCreateInput = {\n    id: string\n    notification_type: string\n    is_read: boolean\n    channel: string\n    created_at: Date | string\n    delivered_at?: Date | string | null\n    recipient_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_notificationInput\n    thread?: discussion_board_threadCreateNestedOneWithoutDiscussion_board_notificationInput\n    post?: discussion_board_postCreateNestedOneWithoutDiscussion_board_notificationInput\n    comment?: discussion_board_commentCreateNestedOneWithoutDiscussion_board_notificationInput\n  }\n\n  export type discussion_board_notificationUncheckedCreateInput = {\n    id: string\n    recipient_user_id: string\n    thread_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    notification_type: string\n    is_read: boolean\n    channel: string\n    created_at: Date | string\n    delivered_at?: Date | string | null\n  }\n\n  export type discussion_board_notificationUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    notification_type?: StringFieldUpdateOperationsInput | string\n    is_read?: BoolFieldUpdateOperationsInput | boolean\n    channel?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    delivered_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recipient_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_notificationNestedInput\n    thread?: discussion_board_threadUpdateOneWithoutDiscussion_board_notificationNestedInput\n    post?: discussion_board_postUpdateOneWithoutDiscussion_board_notificationNestedInput\n    comment?: discussion_board_commentUpdateOneWithoutDiscussion_board_notificationNestedInput\n  }\n\n  export type discussion_board_notificationUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    recipient_user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    notification_type?: StringFieldUpdateOperationsInput | string\n    is_read?: BoolFieldUpdateOperationsInput | boolean\n    channel?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    delivered_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_notificationCreateManyInput = {\n    id: string\n    recipient_user_id: string\n    thread_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    notification_type: string\n    is_read: boolean\n    channel: string\n    created_at: Date | string\n    delivered_at?: Date | string | null\n  }\n\n  export type discussion_board_notificationUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    notification_type?: StringFieldUpdateOperationsInput | string\n    is_read?: BoolFieldUpdateOperationsInput | boolean\n    channel?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    delivered_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_notificationUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    recipient_user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    notification_type?: StringFieldUpdateOperationsInput | string\n    is_read?: BoolFieldUpdateOperationsInput | boolean\n    channel?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    delivered_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_subscriptionCreateInput = {\n    id: string\n    channel: string\n    created_at: Date | string\n    expires_at?: Date | string | null\n    user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_subscriptionInput\n    thread?: discussion_board_threadCreateNestedOneWithoutDiscussion_board_subscriptionInput\n    tag?: discussion_board_thread_tagCreateNestedOneWithoutDiscussion_board_subscriptionInput\n    post?: discussion_board_postCreateNestedOneWithoutDiscussion_board_subscriptionInput\n    comment?: discussion_board_commentCreateNestedOneWithoutDiscussion_board_subscriptionInput\n  }\n\n  export type discussion_board_subscriptionUncheckedCreateInput = {\n    id: string\n    user_id: string\n    thread_id?: string | null\n    tag_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    channel: string\n    created_at: Date | string\n    expires_at?: Date | string | null\n  }\n\n  export type discussion_board_subscriptionUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    channel?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_subscriptionNestedInput\n    thread?: discussion_board_threadUpdateOneWithoutDiscussion_board_subscriptionNestedInput\n    tag?: discussion_board_thread_tagUpdateOneWithoutDiscussion_board_subscriptionNestedInput\n    post?: discussion_board_postUpdateOneWithoutDiscussion_board_subscriptionNestedInput\n    comment?: discussion_board_commentUpdateOneWithoutDiscussion_board_subscriptionNestedInput\n  }\n\n  export type discussion_board_subscriptionUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    tag_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    channel?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_subscriptionCreateManyInput = {\n    id: string\n    user_id: string\n    thread_id?: string | null\n    tag_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    channel: string\n    created_at: Date | string\n    expires_at?: Date | string | null\n  }\n\n  export type discussion_board_subscriptionUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    channel?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_subscriptionUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    tag_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    channel?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_reportCreateInput = {\n    id: string\n    status: string\n    category: string\n    submitted_at: Date | string\n    resolved_at?: Date | string | null\n    details: string\n    reported_user?: discussion_board_usersCreateNestedOneWithoutDiscussion_board_report_of_reported_user_idInput\n    reporting_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_report_of_reporting_user_idInput\n    thread?: discussion_board_threadCreateNestedOneWithoutDiscussion_board_reportInput\n    post?: discussion_board_postCreateNestedOneWithoutDiscussion_board_reportInput\n    comment?: discussion_board_commentCreateNestedOneWithoutDiscussion_board_reportInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutReportInput\n    discussion_board_ban?: discussion_board_banCreateNestedManyWithoutReportInput\n  }\n\n  export type discussion_board_reportUncheckedCreateInput = {\n    id: string\n    reported_user_id?: string | null\n    reporting_user_id: string\n    thread_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    status: string\n    category: string\n    submitted_at: Date | string\n    resolved_at?: Date | string | null\n    details: string\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutReportInput\n    discussion_board_ban?: discussion_board_banUncheckedCreateNestedManyWithoutReportInput\n  }\n\n  export type discussion_board_reportUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    category?: StringFieldUpdateOperationsInput | string\n    submitted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    details?: StringFieldUpdateOperationsInput | string\n    reported_user?: discussion_board_usersUpdateOneWithoutDiscussion_board_report_of_reported_user_idNestedInput\n    reporting_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_report_of_reporting_user_idNestedInput\n    thread?: discussion_board_threadUpdateOneWithoutDiscussion_board_reportNestedInput\n    post?: discussion_board_postUpdateOneWithoutDiscussion_board_reportNestedInput\n    comment?: discussion_board_commentUpdateOneWithoutDiscussion_board_reportNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutReportNestedInput\n    discussion_board_ban?: discussion_board_banUpdateManyWithoutReportNestedInput\n  }\n\n  export type discussion_board_reportUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reported_user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reporting_user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    category?: StringFieldUpdateOperationsInput | string\n    submitted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    details?: StringFieldUpdateOperationsInput | string\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutReportNestedInput\n    discussion_board_ban?: discussion_board_banUncheckedUpdateManyWithoutReportNestedInput\n  }\n\n  export type discussion_board_reportCreateManyInput = {\n    id: string\n    reported_user_id?: string | null\n    reporting_user_id: string\n    thread_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    status: string\n    category: string\n    submitted_at: Date | string\n    resolved_at?: Date | string | null\n    details: string\n  }\n\n  export type discussion_board_reportUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    category?: StringFieldUpdateOperationsInput | string\n    submitted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    details?: StringFieldUpdateOperationsInput | string\n  }\n\n  export type discussion_board_reportUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reported_user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reporting_user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    category?: StringFieldUpdateOperationsInput | string\n    submitted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    details?: StringFieldUpdateOperationsInput | string\n  }\n\n  export type discussion_board_moderator_actionCreateInput = {\n    id: string\n    action_type: string\n    reason: string\n    created_at: Date | string\n    moderator: discussion_board_moderatorsCreateNestedOneWithoutDiscussion_board_moderator_actionInput\n    user?: discussion_board_usersCreateNestedOneWithoutDiscussion_board_moderator_actionInput\n    report?: discussion_board_reportCreateNestedOneWithoutDiscussion_board_moderator_actionInput\n    thread?: discussion_board_threadCreateNestedOneWithoutDiscussion_board_moderator_actionInput\n    post?: discussion_board_postCreateNestedOneWithoutDiscussion_board_moderator_actionInput\n    comment?: discussion_board_commentCreateNestedOneWithoutDiscussion_board_moderator_actionInput\n  }\n\n  export type discussion_board_moderator_actionUncheckedCreateInput = {\n    id: string\n    moderator_id: string\n    user_id?: string | null\n    report_id?: string | null\n    thread_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    action_type: string\n    reason: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_moderator_actionUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    action_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    moderator?: discussion_board_moderatorsUpdateOneRequiredWithoutDiscussion_board_moderator_actionNestedInput\n    user?: discussion_board_usersUpdateOneWithoutDiscussion_board_moderator_actionNestedInput\n    report?: discussion_board_reportUpdateOneWithoutDiscussion_board_moderator_actionNestedInput\n    thread?: discussion_board_threadUpdateOneWithoutDiscussion_board_moderator_actionNestedInput\n    post?: discussion_board_postUpdateOneWithoutDiscussion_board_moderator_actionNestedInput\n    comment?: discussion_board_commentUpdateOneWithoutDiscussion_board_moderator_actionNestedInput\n  }\n\n  export type discussion_board_moderator_actionUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    moderator_id?: StringFieldUpdateOperationsInput | string\n    user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_moderator_actionCreateManyInput = {\n    id: string\n    moderator_id: string\n    user_id?: string | null\n    report_id?: string | null\n    thread_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    action_type: string\n    reason: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_moderator_actionUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    action_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_moderator_actionUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    moderator_id?: StringFieldUpdateOperationsInput | string\n    user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_audit_logCreateInput = {\n    id: string\n    entity_type: string\n    entity_id: string\n    action: string\n    details: string\n    created_at: Date | string\n    actor: discussion_board_usersCreateNestedOneWithoutDiscussion_board_audit_log_of_actor_idInput\n    affected_user?: discussion_board_usersCreateNestedOneWithoutDiscussion_board_audit_log_of_affected_user_idInput\n  }\n\n  export type discussion_board_audit_logUncheckedCreateInput = {\n    id: string\n    actor_id: string\n    affected_user_id?: string | null\n    entity_type: string\n    entity_id: string\n    action: string\n    details: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_audit_logUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    entity_type?: StringFieldUpdateOperationsInput | string\n    entity_id?: StringFieldUpdateOperationsInput | string\n    action?: StringFieldUpdateOperationsInput | string\n    details?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    actor?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_audit_log_of_actor_idNestedInput\n    affected_user?: discussion_board_usersUpdateOneWithoutDiscussion_board_audit_log_of_affected_user_idNestedInput\n  }\n\n  export type discussion_board_audit_logUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_id?: StringFieldUpdateOperationsInput | string\n    affected_user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    entity_type?: StringFieldUpdateOperationsInput | string\n    entity_id?: StringFieldUpdateOperationsInput | string\n    action?: StringFieldUpdateOperationsInput | string\n    details?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_audit_logCreateManyInput = {\n    id: string\n    actor_id: string\n    affected_user_id?: string | null\n    entity_type: string\n    entity_id: string\n    action: string\n    details: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_audit_logUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    entity_type?: StringFieldUpdateOperationsInput | string\n    entity_id?: StringFieldUpdateOperationsInput | string\n    action?: StringFieldUpdateOperationsInput | string\n    details?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_audit_logUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_id?: StringFieldUpdateOperationsInput | string\n    affected_user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    entity_type?: StringFieldUpdateOperationsInput | string\n    entity_id?: StringFieldUpdateOperationsInput | string\n    action?: StringFieldUpdateOperationsInput | string\n    details?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_warningCreateInput = {\n    id: string\n    reason: string\n    issued_at: Date | string\n    user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_warningInput\n    moderator: discussion_board_moderatorsCreateNestedOneWithoutDiscussion_board_warningInput\n    thread?: discussion_board_threadCreateNestedOneWithoutDiscussion_board_warningInput\n    post?: discussion_board_postCreateNestedOneWithoutDiscussion_board_warningInput\n    comment?: discussion_board_commentCreateNestedOneWithoutDiscussion_board_warningInput\n    discussion_board_ban?: discussion_board_banCreateNestedManyWithoutWarningInput\n  }\n\n  export type discussion_board_warningUncheckedCreateInput = {\n    id: string\n    user_id: string\n    moderator_id: string\n    thread_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    reason: string\n    issued_at: Date | string\n    discussion_board_ban?: discussion_board_banUncheckedCreateNestedManyWithoutWarningInput\n  }\n\n  export type discussion_board_warningUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_warningNestedInput\n    moderator?: discussion_board_moderatorsUpdateOneRequiredWithoutDiscussion_board_warningNestedInput\n    thread?: discussion_board_threadUpdateOneWithoutDiscussion_board_warningNestedInput\n    post?: discussion_board_postUpdateOneWithoutDiscussion_board_warningNestedInput\n    comment?: discussion_board_commentUpdateOneWithoutDiscussion_board_warningNestedInput\n    discussion_board_ban?: discussion_board_banUpdateManyWithoutWarningNestedInput\n  }\n\n  export type discussion_board_warningUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    moderator_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussion_board_ban?: discussion_board_banUncheckedUpdateManyWithoutWarningNestedInput\n  }\n\n  export type discussion_board_warningCreateManyInput = {\n    id: string\n    user_id: string\n    moderator_id: string\n    thread_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    reason: string\n    issued_at: Date | string\n  }\n\n  export type discussion_board_warningUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_warningUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    moderator_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_banCreateInput = {\n    id: string\n    ban_type: string\n    reason: string\n    banned_at: Date | string\n    expires_at?: Date | string | null\n    user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_banInput\n    moderator: discussion_board_moderatorsCreateNestedOneWithoutDiscussion_board_banInput\n    warning?: discussion_board_warningCreateNestedOneWithoutDiscussion_board_banInput\n    report?: discussion_board_reportCreateNestedOneWithoutDiscussion_board_banInput\n  }\n\n  export type discussion_board_banUncheckedCreateInput = {\n    id: string\n    user_id: string\n    moderator_id: string\n    warning_id?: string | null\n    report_id?: string | null\n    ban_type: string\n    reason: string\n    banned_at: Date | string\n    expires_at?: Date | string | null\n  }\n\n  export type discussion_board_banUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    ban_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    banned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_banNestedInput\n    moderator?: discussion_board_moderatorsUpdateOneRequiredWithoutDiscussion_board_banNestedInput\n    warning?: discussion_board_warningUpdateOneWithoutDiscussion_board_banNestedInput\n    report?: discussion_board_reportUpdateOneWithoutDiscussion_board_banNestedInput\n  }\n\n  export type discussion_board_banUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    moderator_id?: StringFieldUpdateOperationsInput | string\n    warning_id?: NullableStringFieldUpdateOperationsInput | string | null\n    report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    ban_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    banned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_banCreateManyInput = {\n    id: string\n    user_id: string\n    moderator_id: string\n    warning_id?: string | null\n    report_id?: string | null\n    ban_type: string\n    reason: string\n    banned_at: Date | string\n    expires_at?: Date | string | null\n  }\n\n  export type discussion_board_banUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    ban_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    banned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_banUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    moderator_id?: StringFieldUpdateOperationsInput | string\n    warning_id?: NullableStringFieldUpdateOperationsInput | string | null\n    report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    ban_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    banned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_thread_statsCreateInput = {\n    id: string\n    post_count: number\n    comment_count: number\n    upvote_count: number\n    downvote_count: number\n    bookmark_count: number\n    abuse_report_count: number\n    created_at: Date | string\n    updated_at: Date | string\n    discussion_board_thread: discussion_board_threadCreateNestedOneWithoutDiscussion_board_thread_statsInput\n  }\n\n  export type discussion_board_thread_statsUncheckedCreateInput = {\n    id: string\n    discussion_board_thread_id: string\n    post_count: number\n    comment_count: number\n    upvote_count: number\n    downvote_count: number\n    bookmark_count: number\n    abuse_report_count: number\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussion_board_thread_statsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_count?: IntFieldUpdateOperationsInput | number\n    comment_count?: IntFieldUpdateOperationsInput | number\n    upvote_count?: IntFieldUpdateOperationsInput | number\n    downvote_count?: IntFieldUpdateOperationsInput | number\n    bookmark_count?: IntFieldUpdateOperationsInput | number\n    abuse_report_count?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussion_board_thread?: discussion_board_threadUpdateOneRequiredWithoutDiscussion_board_thread_statsNestedInput\n  }\n\n  export type discussion_board_thread_statsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussion_board_thread_id?: StringFieldUpdateOperationsInput | string\n    post_count?: IntFieldUpdateOperationsInput | number\n    comment_count?: IntFieldUpdateOperationsInput | number\n    upvote_count?: IntFieldUpdateOperationsInput | number\n    downvote_count?: IntFieldUpdateOperationsInput | number\n    bookmark_count?: IntFieldUpdateOperationsInput | number\n    abuse_report_count?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_thread_statsCreateManyInput = {\n    id: string\n    discussion_board_thread_id: string\n    post_count: number\n    comment_count: number\n    upvote_count: number\n    downvote_count: number\n    bookmark_count: number\n    abuse_report_count: number\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussion_board_thread_statsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_count?: IntFieldUpdateOperationsInput | number\n    comment_count?: IntFieldUpdateOperationsInput | number\n    upvote_count?: IntFieldUpdateOperationsInput | number\n    downvote_count?: IntFieldUpdateOperationsInput | number\n    bookmark_count?: IntFieldUpdateOperationsInput | number\n    abuse_report_count?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_thread_statsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussion_board_thread_id?: StringFieldUpdateOperationsInput | string\n    post_count?: IntFieldUpdateOperationsInput | number\n    comment_count?: IntFieldUpdateOperationsInput | number\n    upvote_count?: IntFieldUpdateOperationsInput | number\n    downvote_count?: IntFieldUpdateOperationsInput | number\n    bookmark_count?: IntFieldUpdateOperationsInput | number\n    abuse_report_count?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_user_activityCreateInput = {\n    id: string\n    threads_authored: number\n    posts_authored: number\n    comments_authored: number\n    upvotes_given: number\n    downvotes_given: number\n    reports_made: number\n    bookmarks_created: number\n    created_at: Date | string\n    updated_at: Date | string\n    discussion_board_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_user_activityInput\n  }\n\n  export type discussion_board_user_activityUncheckedCreateInput = {\n    id: string\n    discussion_board_user_id: string\n    threads_authored: number\n    posts_authored: number\n    comments_authored: number\n    upvotes_given: number\n    downvotes_given: number\n    reports_made: number\n    bookmarks_created: number\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussion_board_user_activityUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    threads_authored?: IntFieldUpdateOperationsInput | number\n    posts_authored?: IntFieldUpdateOperationsInput | number\n    comments_authored?: IntFieldUpdateOperationsInput | number\n    upvotes_given?: IntFieldUpdateOperationsInput | number\n    downvotes_given?: IntFieldUpdateOperationsInput | number\n    reports_made?: IntFieldUpdateOperationsInput | number\n    bookmarks_created?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussion_board_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_user_activityNestedInput\n  }\n\n  export type discussion_board_user_activityUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussion_board_user_id?: StringFieldUpdateOperationsInput | string\n    threads_authored?: IntFieldUpdateOperationsInput | number\n    posts_authored?: IntFieldUpdateOperationsInput | number\n    comments_authored?: IntFieldUpdateOperationsInput | number\n    upvotes_given?: IntFieldUpdateOperationsInput | number\n    downvotes_given?: IntFieldUpdateOperationsInput | number\n    reports_made?: IntFieldUpdateOperationsInput | number\n    bookmarks_created?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_user_activityCreateManyInput = {\n    id: string\n    discussion_board_user_id: string\n    threads_authored: number\n    posts_authored: number\n    comments_authored: number\n    upvotes_given: number\n    downvotes_given: number\n    reports_made: number\n    bookmarks_created: number\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussion_board_user_activityUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    threads_authored?: IntFieldUpdateOperationsInput | number\n    posts_authored?: IntFieldUpdateOperationsInput | number\n    comments_authored?: IntFieldUpdateOperationsInput | number\n    upvotes_given?: IntFieldUpdateOperationsInput | number\n    downvotes_given?: IntFieldUpdateOperationsInput | number\n    reports_made?: IntFieldUpdateOperationsInput | number\n    bookmarks_created?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_user_activityUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussion_board_user_id?: StringFieldUpdateOperationsInput | string\n    threads_authored?: IntFieldUpdateOperationsInput | number\n    posts_authored?: IntFieldUpdateOperationsInput | number\n    comments_authored?: IntFieldUpdateOperationsInput | number\n    upvotes_given?: IntFieldUpdateOperationsInput | number\n    downvotes_given?: IntFieldUpdateOperationsInput | number\n    reports_made?: IntFieldUpdateOperationsInput | number\n    bookmarks_created?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_content_abuse_metricCreateInput = {\n    id: string\n    date: string\n    abuse_type: string\n    flagged_count: number\n    auto_hidden_count: number\n    escalation_count: number\n    false_positive_count: number\n    avg_resolution_time_minutes: number\n    created_at: Date | string\n    updated_at: Date | string\n    discussion_board_moderator?: discussion_board_moderatorsCreateNestedOneWithoutDiscussion_board_content_abuse_metricInput\n  }\n\n  export type discussion_board_content_abuse_metricUncheckedCreateInput = {\n    id: string\n    moderator_id?: string | null\n    date: string\n    abuse_type: string\n    flagged_count: number\n    auto_hidden_count: number\n    escalation_count: number\n    false_positive_count: number\n    avg_resolution_time_minutes: number\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussion_board_content_abuse_metricUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    date?: StringFieldUpdateOperationsInput | string\n    abuse_type?: StringFieldUpdateOperationsInput | string\n    flagged_count?: IntFieldUpdateOperationsInput | number\n    auto_hidden_count?: IntFieldUpdateOperationsInput | number\n    escalation_count?: IntFieldUpdateOperationsInput | number\n    false_positive_count?: IntFieldUpdateOperationsInput | number\n    avg_resolution_time_minutes?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussion_board_moderator?: discussion_board_moderatorsUpdateOneWithoutDiscussion_board_content_abuse_metricNestedInput\n  }\n\n  export type discussion_board_content_abuse_metricUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    date?: StringFieldUpdateOperationsInput | string\n    abuse_type?: StringFieldUpdateOperationsInput | string\n    flagged_count?: IntFieldUpdateOperationsInput | number\n    auto_hidden_count?: IntFieldUpdateOperationsInput | number\n    escalation_count?: IntFieldUpdateOperationsInput | number\n    false_positive_count?: IntFieldUpdateOperationsInput | number\n    avg_resolution_time_minutes?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_content_abuse_metricCreateManyInput = {\n    id: string\n    moderator_id?: string | null\n    date: string\n    abuse_type: string\n    flagged_count: number\n    auto_hidden_count: number\n    escalation_count: number\n    false_positive_count: number\n    avg_resolution_time_minutes: number\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussion_board_content_abuse_metricUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    date?: StringFieldUpdateOperationsInput | string\n    abuse_type?: StringFieldUpdateOperationsInput | string\n    flagged_count?: IntFieldUpdateOperationsInput | number\n    auto_hidden_count?: IntFieldUpdateOperationsInput | number\n    escalation_count?: IntFieldUpdateOperationsInput | number\n    false_positive_count?: IntFieldUpdateOperationsInput | number\n    avg_resolution_time_minutes?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_content_abuse_metricUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    date?: StringFieldUpdateOperationsInput | string\n    abuse_type?: StringFieldUpdateOperationsInput | string\n    flagged_count?: IntFieldUpdateOperationsInput | number\n    auto_hidden_count?: IntFieldUpdateOperationsInput | number\n    escalation_count?: IntFieldUpdateOperationsInput | number\n    false_positive_count?: IntFieldUpdateOperationsInput | number\n    avg_resolution_time_minutes?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_settingCreateInput = {\n    id: string\n    key: string\n    value: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type discussion_board_settingUncheckedCreateInput = {\n    id: string\n    key: string\n    value: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type discussion_board_settingUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    key?: StringFieldUpdateOperationsInput | string\n    value?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_settingUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    key?: StringFieldUpdateOperationsInput | string\n    value?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_settingCreateManyInput = {\n    id: string\n    key: string\n    value: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type discussion_board_settingUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    key?: StringFieldUpdateOperationsInput | string\n    value?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_settingUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    key?: StringFieldUpdateOperationsInput | string\n    value?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_system_configCreateInput = {\n    id: string\n    key: string\n    value: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type discussion_board_system_configUncheckedCreateInput = {\n    id: string\n    key: string\n    value: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type discussion_board_system_configUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    key?: StringFieldUpdateOperationsInput | string\n    value?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_system_configUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    key?: StringFieldUpdateOperationsInput | string\n    value?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_system_configCreateManyInput = {\n    id: string\n    key: string\n    value: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type discussion_board_system_configUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    key?: StringFieldUpdateOperationsInput | string\n    value?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_system_configUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    key?: StringFieldUpdateOperationsInput | string\n    value?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type UuidFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedUuidFilter<$PrismaModel> | string\n  }\n\n  export type StringFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedStringFilter<$PrismaModel> | string\n  }\n\n  export type BoolFilter<$PrismaModel = never> = {\n    equals?: boolean | BooleanFieldRefInput<$PrismaModel>\n    not?: NestedBoolFilter<$PrismaModel> | boolean\n  }\n\n  export type DateTimeFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeFilter<$PrismaModel> | Date | string\n  }\n\n  export type DateTimeNullableFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null\n  }\n\n  export type Discussion_board_moderatorsNullableScalarRelationFilter = {\n    is?: discussion_board_moderatorsWhereInput | null\n    isNot?: discussion_board_moderatorsWhereInput | null\n  }\n\n  export type Discussion_board_adminsNullableScalarRelationFilter = {\n    is?: discussion_board_adminsWhereInput | null\n    isNot?: discussion_board_adminsWhereInput | null\n  }\n\n  export type Discussion_board_user_profilesNullableScalarRelationFilter = {\n    is?: discussion_board_user_profilesWhereInput | null\n    isNot?: discussion_board_user_profilesWhereInput | null\n  }\n\n  export type Discussion_board_user_settingsNullableScalarRelationFilter = {\n    is?: discussion_board_user_settingsWhereInput | null\n    isNot?: discussion_board_user_settingsWhereInput | null\n  }\n\n  export type Discussion_board_threadListRelationFilter = {\n    every?: discussion_board_threadWhereInput\n    some?: discussion_board_threadWhereInput\n    none?: discussion_board_threadWhereInput\n  }\n\n  export type Discussion_board_postListRelationFilter = {\n    every?: discussion_board_postWhereInput\n    some?: discussion_board_postWhereInput\n    none?: discussion_board_postWhereInput\n  }\n\n  export type Discussion_board_commentListRelationFilter = {\n    every?: discussion_board_commentWhereInput\n    some?: discussion_board_commentWhereInput\n    none?: discussion_board_commentWhereInput\n  }\n\n  export type Discussion_board_voteListRelationFilter = {\n    every?: discussion_board_voteWhereInput\n    some?: discussion_board_voteWhereInput\n    none?: discussion_board_voteWhereInput\n  }\n\n  export type Discussion_board_reactionListRelationFilter = {\n    every?: discussion_board_reactionWhereInput\n    some?: discussion_board_reactionWhereInput\n    none?: discussion_board_reactionWhereInput\n  }\n\n  export type Discussion_board_bookmarkListRelationFilter = {\n    every?: discussion_board_bookmarkWhereInput\n    some?: discussion_board_bookmarkWhereInput\n    none?: discussion_board_bookmarkWhereInput\n  }\n\n  export type Discussion_board_notificationListRelationFilter = {\n    every?: discussion_board_notificationWhereInput\n    some?: discussion_board_notificationWhereInput\n    none?: discussion_board_notificationWhereInput\n  }\n\n  export type Discussion_board_subscriptionListRelationFilter = {\n    every?: discussion_board_subscriptionWhereInput\n    some?: discussion_board_subscriptionWhereInput\n    none?: discussion_board_subscriptionWhereInput\n  }\n\n  export type Discussion_board_reportListRelationFilter = {\n    every?: discussion_board_reportWhereInput\n    some?: discussion_board_reportWhereInput\n    none?: discussion_board_reportWhereInput\n  }\n\n  export type Discussion_board_moderator_actionListRelationFilter = {\n    every?: discussion_board_moderator_actionWhereInput\n    some?: discussion_board_moderator_actionWhereInput\n    none?: discussion_board_moderator_actionWhereInput\n  }\n\n  export type Discussion_board_audit_logListRelationFilter = {\n    every?: discussion_board_audit_logWhereInput\n    some?: discussion_board_audit_logWhereInput\n    none?: discussion_board_audit_logWhereInput\n  }\n\n  export type Discussion_board_warningListRelationFilter = {\n    every?: discussion_board_warningWhereInput\n    some?: discussion_board_warningWhereInput\n    none?: discussion_board_warningWhereInput\n  }\n\n  export type Discussion_board_banListRelationFilter = {\n    every?: discussion_board_banWhereInput\n    some?: discussion_board_banWhereInput\n    none?: discussion_board_banWhereInput\n  }\n\n  export type Discussion_board_user_activityNullableScalarRelationFilter = {\n    is?: discussion_board_user_activityWhereInput | null\n    isNot?: discussion_board_user_activityWhereInput | null\n  }\n\n  export type SortOrderInput = {\n    sort: SortOrder\n    nulls?: NullsOrder\n  }\n\n  export type discussion_board_threadOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussion_board_postOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussion_board_commentOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussion_board_voteOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussion_board_reactionOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussion_board_bookmarkOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussion_board_notificationOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussion_board_subscriptionOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussion_board_reportOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussion_board_moderator_actionOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussion_board_audit_logOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussion_board_warningOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussion_board_banOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussion_board_usersCountOrderByAggregateInput = {\n    id?: SortOrder\n    username?: SortOrder\n    email?: SortOrder\n    password_hash?: SortOrder\n    is_active?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type discussion_board_usersMaxOrderByAggregateInput = {\n    id?: SortOrder\n    username?: SortOrder\n    email?: SortOrder\n    password_hash?: SortOrder\n    is_active?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type discussion_board_usersMinOrderByAggregateInput = {\n    id?: SortOrder\n    username?: SortOrder\n    email?: SortOrder\n    password_hash?: SortOrder\n    is_active?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type UuidWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedStringFilter<$PrismaModel>\n    _max?: NestedStringFilter<$PrismaModel>\n  }\n\n  export type StringWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedStringFilter<$PrismaModel>\n    _max?: NestedStringFilter<$PrismaModel>\n  }\n\n  export type BoolWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: boolean | BooleanFieldRefInput<$PrismaModel>\n    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedBoolFilter<$PrismaModel>\n    _max?: NestedBoolFilter<$PrismaModel>\n  }\n\n  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedDateTimeFilter<$PrismaModel>\n    _max?: NestedDateTimeFilter<$PrismaModel>\n  }\n\n  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null\n    _count?: NestedIntNullableFilter<$PrismaModel>\n    _min?: NestedDateTimeNullableFilter<$PrismaModel>\n    _max?: NestedDateTimeNullableFilter<$PrismaModel>\n  }\n\n  export type StringNullableFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedStringNullableFilter<$PrismaModel> | string | null\n  }\n\n  export type discussion_board_guestsCountOrderByAggregateInput = {\n    id?: SortOrder\n    session_id?: SortOrder\n    ip_address?: SortOrder\n    user_agent?: SortOrder\n    accessed_at?: SortOrder\n  }\n\n  export type discussion_board_guestsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    session_id?: SortOrder\n    ip_address?: SortOrder\n    user_agent?: SortOrder\n    accessed_at?: SortOrder\n  }\n\n  export type discussion_board_guestsMinOrderByAggregateInput = {\n    id?: SortOrder\n    session_id?: SortOrder\n    ip_address?: SortOrder\n    user_agent?: SortOrder\n    accessed_at?: SortOrder\n  }\n\n  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null\n    _count?: NestedIntNullableFilter<$PrismaModel>\n    _min?: NestedStringNullableFilter<$PrismaModel>\n    _max?: NestedStringNullableFilter<$PrismaModel>\n  }\n\n  export type Discussion_board_usersScalarRelationFilter = {\n    is?: discussion_board_usersWhereInput\n    isNot?: discussion_board_usersWhereInput\n  }\n\n  export type Discussion_board_content_abuse_metricListRelationFilter = {\n    every?: discussion_board_content_abuse_metricWhereInput\n    some?: discussion_board_content_abuse_metricWhereInput\n    none?: discussion_board_content_abuse_metricWhereInput\n  }\n\n  export type discussion_board_content_abuse_metricOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussion_board_moderatorsCountOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    is_active?: SortOrder\n    assigned_at?: SortOrder\n    revoked_at?: SortOrder\n  }\n\n  export type discussion_board_moderatorsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    is_active?: SortOrder\n    assigned_at?: SortOrder\n    revoked_at?: SortOrder\n  }\n\n  export type discussion_board_moderatorsMinOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    is_active?: SortOrder\n    assigned_at?: SortOrder\n    revoked_at?: SortOrder\n  }\n\n  export type discussion_board_adminsCountOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    is_active?: SortOrder\n    assigned_at?: SortOrder\n    revoked_at?: SortOrder\n  }\n\n  export type discussion_board_adminsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    is_active?: SortOrder\n    assigned_at?: SortOrder\n    revoked_at?: SortOrder\n  }\n\n  export type discussion_board_adminsMinOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    is_active?: SortOrder\n    assigned_at?: SortOrder\n    revoked_at?: SortOrder\n  }\n\n  export type discussion_board_user_profilesCountOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    display_name?: SortOrder\n    avatar_url?: SortOrder\n    bio?: SortOrder\n    badges?: SortOrder\n  }\n\n  export type discussion_board_user_profilesMaxOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    display_name?: SortOrder\n    avatar_url?: SortOrder\n    bio?: SortOrder\n    badges?: SortOrder\n  }\n\n  export type discussion_board_user_profilesMinOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    display_name?: SortOrder\n    avatar_url?: SortOrder\n    bio?: SortOrder\n    badges?: SortOrder\n  }\n\n  export type discussion_board_user_settingsCountOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    notification_email?: SortOrder\n    notification_in_app?: SortOrder\n    accessibility_mode?: SortOrder\n    display_density?: SortOrder\n  }\n\n  export type discussion_board_user_settingsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    notification_email?: SortOrder\n    notification_in_app?: SortOrder\n    accessibility_mode?: SortOrder\n    display_density?: SortOrder\n  }\n\n  export type discussion_board_user_settingsMinOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    notification_email?: SortOrder\n    notification_in_app?: SortOrder\n    accessibility_mode?: SortOrder\n    display_density?: SortOrder\n  }\n\n  export type Discussion_board_thread_categoryScalarRelationFilter = {\n    is?: discussion_board_thread_categoryWhereInput\n    isNot?: discussion_board_thread_categoryWhereInput\n  }\n\n  export type Discussion_board_thread_tagListRelationFilter = {\n    every?: discussion_board_thread_tagWhereInput\n    some?: discussion_board_thread_tagWhereInput\n    none?: discussion_board_thread_tagWhereInput\n  }\n\n  export type Mv_discussion_thread_activityNullableScalarRelationFilter = {\n    is?: mv_discussion_thread_activityWhereInput | null\n    isNot?: mv_discussion_thread_activityWhereInput | null\n  }\n\n  export type Discussion_board_thread_statsNullableScalarRelationFilter = {\n    is?: discussion_board_thread_statsWhereInput | null\n    isNot?: discussion_board_thread_statsWhereInput | null\n  }\n\n  export type discussion_board_thread_tagOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussion_board_threadTitleCategory_idCompoundUniqueInput = {\n    title: string\n    category_id: string\n  }\n\n  export type discussion_board_threadCountOrderByAggregateInput = {\n    id?: SortOrder\n    creator_user_id?: SortOrder\n    category_id?: SortOrder\n    title?: SortOrder\n    body?: SortOrder\n    is_locked?: SortOrder\n    is_pinned?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type discussion_board_threadMaxOrderByAggregateInput = {\n    id?: SortOrder\n    creator_user_id?: SortOrder\n    category_id?: SortOrder\n    title?: SortOrder\n    body?: SortOrder\n    is_locked?: SortOrder\n    is_pinned?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type discussion_board_threadMinOrderByAggregateInput = {\n    id?: SortOrder\n    creator_user_id?: SortOrder\n    category_id?: SortOrder\n    title?: SortOrder\n    body?: SortOrder\n    is_locked?: SortOrder\n    is_pinned?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type UuidNullableFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedUuidNullableFilter<$PrismaModel> | string | null\n  }\n\n  export type Discussion_board_threadScalarRelationFilter = {\n    is?: discussion_board_threadWhereInput\n    isNot?: discussion_board_threadWhereInput\n  }\n\n  export type Discussion_board_postNullableScalarRelationFilter = {\n    is?: discussion_board_postWhereInput | null\n    isNot?: discussion_board_postWhereInput | null\n  }\n\n  export type discussion_board_postCountOrderByAggregateInput = {\n    id?: SortOrder\n    thread_id?: SortOrder\n    author_user_id?: SortOrder\n    parent_post_id?: SortOrder\n    body?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type discussion_board_postMaxOrderByAggregateInput = {\n    id?: SortOrder\n    thread_id?: SortOrder\n    author_user_id?: SortOrder\n    parent_post_id?: SortOrder\n    body?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type discussion_board_postMinOrderByAggregateInput = {\n    id?: SortOrder\n    thread_id?: SortOrder\n    author_user_id?: SortOrder\n    parent_post_id?: SortOrder\n    body?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type UuidNullableWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null\n    _count?: NestedIntNullableFilter<$PrismaModel>\n    _min?: NestedStringNullableFilter<$PrismaModel>\n    _max?: NestedStringNullableFilter<$PrismaModel>\n  }\n\n  export type Discussion_board_postScalarRelationFilter = {\n    is?: discussion_board_postWhereInput\n    isNot?: discussion_board_postWhereInput\n  }\n\n  export type Discussion_board_commentNullableScalarRelationFilter = {\n    is?: discussion_board_commentWhereInput | null\n    isNot?: discussion_board_commentWhereInput | null\n  }\n\n  export type discussion_board_commentCountOrderByAggregateInput = {\n    id?: SortOrder\n    post_id?: SortOrder\n    author_user_id?: SortOrder\n    parent_comment_id?: SortOrder\n    body?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type discussion_board_commentMaxOrderByAggregateInput = {\n    id?: SortOrder\n    post_id?: SortOrder\n    author_user_id?: SortOrder\n    parent_comment_id?: SortOrder\n    body?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type discussion_board_commentMinOrderByAggregateInput = {\n    id?: SortOrder\n    post_id?: SortOrder\n    author_user_id?: SortOrder\n    parent_comment_id?: SortOrder\n    body?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type Discussion_board_tag_categoryScalarRelationFilter = {\n    is?: discussion_board_tag_categoryWhereInput\n    isNot?: discussion_board_tag_categoryWhereInput\n  }\n\n  export type discussion_board_thread_tagThread_idTag_idCompoundUniqueInput = {\n    thread_id: string\n    tag_id: string\n  }\n\n  export type discussion_board_thread_tagCountOrderByAggregateInput = {\n    id?: SortOrder\n    thread_id?: SortOrder\n    tag_id?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussion_board_thread_tagMaxOrderByAggregateInput = {\n    id?: SortOrder\n    thread_id?: SortOrder\n    tag_id?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussion_board_thread_tagMinOrderByAggregateInput = {\n    id?: SortOrder\n    thread_id?: SortOrder\n    tag_id?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussion_board_thread_categoryCountOrderByAggregateInput = {\n    id?: SortOrder\n    code?: SortOrder\n    name?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussion_board_thread_categoryMaxOrderByAggregateInput = {\n    id?: SortOrder\n    code?: SortOrder\n    name?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussion_board_thread_categoryMinOrderByAggregateInput = {\n    id?: SortOrder\n    code?: SortOrder\n    name?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussion_board_tag_categoryCountOrderByAggregateInput = {\n    id?: SortOrder\n    code?: SortOrder\n    name?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussion_board_tag_categoryMaxOrderByAggregateInput = {\n    id?: SortOrder\n    code?: SortOrder\n    name?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussion_board_tag_categoryMinOrderByAggregateInput = {\n    id?: SortOrder\n    code?: SortOrder\n    name?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type IntFilter<$PrismaModel = never> = {\n    equals?: number | IntFieldRefInput<$PrismaModel>\n    in?: number[] | ListIntFieldRefInput<$PrismaModel>\n    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>\n    lt?: number | IntFieldRefInput<$PrismaModel>\n    lte?: number | IntFieldRefInput<$PrismaModel>\n    gt?: number | IntFieldRefInput<$PrismaModel>\n    gte?: number | IntFieldRefInput<$PrismaModel>\n    not?: NestedIntFilter<$PrismaModel> | number\n  }\n\n  export type mv_discussion_thread_activityCountOrderByAggregateInput = {\n    id?: SortOrder\n    thread_id?: SortOrder\n    reply_count?: SortOrder\n    last_posted_at?: SortOrder\n    participant_user_ids?: SortOrder\n  }\n\n  export type mv_discussion_thread_activityAvgOrderByAggregateInput = {\n    reply_count?: SortOrder\n  }\n\n  export type mv_discussion_thread_activityMaxOrderByAggregateInput = {\n    id?: SortOrder\n    thread_id?: SortOrder\n    reply_count?: SortOrder\n    last_posted_at?: SortOrder\n    participant_user_ids?: SortOrder\n  }\n\n  export type mv_discussion_thread_activityMinOrderByAggregateInput = {\n    id?: SortOrder\n    thread_id?: SortOrder\n    reply_count?: SortOrder\n    last_posted_at?: SortOrder\n    participant_user_ids?: SortOrder\n  }\n\n  export type mv_discussion_thread_activitySumOrderByAggregateInput = {\n    reply_count?: SortOrder\n  }\n\n  export type IntWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: number | IntFieldRefInput<$PrismaModel>\n    in?: number[] | ListIntFieldRefInput<$PrismaModel>\n    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>\n    lt?: number | IntFieldRefInput<$PrismaModel>\n    lte?: number | IntFieldRefInput<$PrismaModel>\n    gt?: number | IntFieldRefInput<$PrismaModel>\n    gte?: number | IntFieldRefInput<$PrismaModel>\n    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number\n    _count?: NestedIntFilter<$PrismaModel>\n    _avg?: NestedFloatFilter<$PrismaModel>\n    _sum?: NestedIntFilter<$PrismaModel>\n    _min?: NestedIntFilter<$PrismaModel>\n    _max?: NestedIntFilter<$PrismaModel>\n  }\n\n  export type Discussion_board_threadNullableScalarRelationFilter = {\n    is?: discussion_board_threadWhereInput | null\n    isNot?: discussion_board_threadWhereInput | null\n  }\n\n  export type discussion_board_voteUser_idThread_idPost_idComment_idCompoundUniqueInput = {\n    user_id: string\n    thread_id: string\n    post_id: string\n    comment_id: string\n  }\n\n  export type discussion_board_voteCountOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    thread_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    direction?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussion_board_voteMaxOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    thread_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    direction?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussion_board_voteMinOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    thread_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    direction?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussion_board_reactionUser_idThread_idPost_idComment_idReaction_typeCompoundUniqueInput = {\n    user_id: string\n    thread_id: string\n    post_id: string\n    comment_id: string\n    reaction_type: string\n  }\n\n  export type discussion_board_reactionCountOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    thread_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    reaction_type?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussion_board_reactionMaxOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    thread_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    reaction_type?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussion_board_reactionMinOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    thread_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    reaction_type?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussion_board_bookmarkUser_idThread_idPost_idComment_idCompoundUniqueInput = {\n    user_id: string\n    thread_id: string\n    post_id: string\n    comment_id: string\n  }\n\n  export type discussion_board_bookmarkCountOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    thread_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussion_board_bookmarkMaxOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    thread_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussion_board_bookmarkMinOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    thread_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussion_board_notificationCountOrderByAggregateInput = {\n    id?: SortOrder\n    recipient_user_id?: SortOrder\n    thread_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    notification_type?: SortOrder\n    is_read?: SortOrder\n    channel?: SortOrder\n    created_at?: SortOrder\n    delivered_at?: SortOrder\n  }\n\n  export type discussion_board_notificationMaxOrderByAggregateInput = {\n    id?: SortOrder\n    recipient_user_id?: SortOrder\n    thread_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    notification_type?: SortOrder\n    is_read?: SortOrder\n    channel?: SortOrder\n    created_at?: SortOrder\n    delivered_at?: SortOrder\n  }\n\n  export type discussion_board_notificationMinOrderByAggregateInput = {\n    id?: SortOrder\n    recipient_user_id?: SortOrder\n    thread_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    notification_type?: SortOrder\n    is_read?: SortOrder\n    channel?: SortOrder\n    created_at?: SortOrder\n    delivered_at?: SortOrder\n  }\n\n  export type Discussion_board_thread_tagNullableScalarRelationFilter = {\n    is?: discussion_board_thread_tagWhereInput | null\n    isNot?: discussion_board_thread_tagWhereInput | null\n  }\n\n  export type discussion_board_subscriptionUser_idThread_idTag_idPost_idComment_idChannelCompoundUniqueInput = {\n    user_id: string\n    thread_id: string\n    tag_id: string\n    post_id: string\n    comment_id: string\n    channel: string\n  }\n\n  export type discussion_board_subscriptionCountOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    thread_id?: SortOrder\n    tag_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    channel?: SortOrder\n    created_at?: SortOrder\n    expires_at?: SortOrder\n  }\n\n  export type discussion_board_subscriptionMaxOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    thread_id?: SortOrder\n    tag_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    channel?: SortOrder\n    created_at?: SortOrder\n    expires_at?: SortOrder\n  }\n\n  export type discussion_board_subscriptionMinOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    thread_id?: SortOrder\n    tag_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    channel?: SortOrder\n    created_at?: SortOrder\n    expires_at?: SortOrder\n  }\n\n  export type Discussion_board_usersNullableScalarRelationFilter = {\n    is?: discussion_board_usersWhereInput | null\n    isNot?: discussion_board_usersWhereInput | null\n  }\n\n  export type discussion_board_reportReporting_user_idThread_idPost_idComment_idCompoundUniqueInput = {\n    reporting_user_id: string\n    thread_id: string\n    post_id: string\n    comment_id: string\n  }\n\n  export type discussion_board_reportCountOrderByAggregateInput = {\n    id?: SortOrder\n    reported_user_id?: SortOrder\n    reporting_user_id?: SortOrder\n    thread_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    status?: SortOrder\n    category?: SortOrder\n    submitted_at?: SortOrder\n    resolved_at?: SortOrder\n    details?: SortOrder\n  }\n\n  export type discussion_board_reportMaxOrderByAggregateInput = {\n    id?: SortOrder\n    reported_user_id?: SortOrder\n    reporting_user_id?: SortOrder\n    thread_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    status?: SortOrder\n    category?: SortOrder\n    submitted_at?: SortOrder\n    resolved_at?: SortOrder\n    details?: SortOrder\n  }\n\n  export type discussion_board_reportMinOrderByAggregateInput = {\n    id?: SortOrder\n    reported_user_id?: SortOrder\n    reporting_user_id?: SortOrder\n    thread_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    status?: SortOrder\n    category?: SortOrder\n    submitted_at?: SortOrder\n    resolved_at?: SortOrder\n    details?: SortOrder\n  }\n\n  export type Discussion_board_moderatorsScalarRelationFilter = {\n    is?: discussion_board_moderatorsWhereInput\n    isNot?: discussion_board_moderatorsWhereInput\n  }\n\n  export type Discussion_board_reportNullableScalarRelationFilter = {\n    is?: discussion_board_reportWhereInput | null\n    isNot?: discussion_board_reportWhereInput | null\n  }\n\n  export type discussion_board_moderator_actionCountOrderByAggregateInput = {\n    id?: SortOrder\n    moderator_id?: SortOrder\n    user_id?: SortOrder\n    report_id?: SortOrder\n    thread_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    action_type?: SortOrder\n    reason?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussion_board_moderator_actionMaxOrderByAggregateInput = {\n    id?: SortOrder\n    moderator_id?: SortOrder\n    user_id?: SortOrder\n    report_id?: SortOrder\n    thread_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    action_type?: SortOrder\n    reason?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussion_board_moderator_actionMinOrderByAggregateInput = {\n    id?: SortOrder\n    moderator_id?: SortOrder\n    user_id?: SortOrder\n    report_id?: SortOrder\n    thread_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    action_type?: SortOrder\n    reason?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussion_board_audit_logCountOrderByAggregateInput = {\n    id?: SortOrder\n    actor_id?: SortOrder\n    affected_user_id?: SortOrder\n    entity_type?: SortOrder\n    entity_id?: SortOrder\n    action?: SortOrder\n    details?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussion_board_audit_logMaxOrderByAggregateInput = {\n    id?: SortOrder\n    actor_id?: SortOrder\n    affected_user_id?: SortOrder\n    entity_type?: SortOrder\n    entity_id?: SortOrder\n    action?: SortOrder\n    details?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussion_board_audit_logMinOrderByAggregateInput = {\n    id?: SortOrder\n    actor_id?: SortOrder\n    affected_user_id?: SortOrder\n    entity_type?: SortOrder\n    entity_id?: SortOrder\n    action?: SortOrder\n    details?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussion_board_warningCountOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    moderator_id?: SortOrder\n    thread_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    reason?: SortOrder\n    issued_at?: SortOrder\n  }\n\n  export type discussion_board_warningMaxOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    moderator_id?: SortOrder\n    thread_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    reason?: SortOrder\n    issued_at?: SortOrder\n  }\n\n  export type discussion_board_warningMinOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    moderator_id?: SortOrder\n    thread_id?: SortOrder\n    post_id?: SortOrder\n    comment_id?: SortOrder\n    reason?: SortOrder\n    issued_at?: SortOrder\n  }\n\n  export type Discussion_board_warningNullableScalarRelationFilter = {\n    is?: discussion_board_warningWhereInput | null\n    isNot?: discussion_board_warningWhereInput | null\n  }\n\n  export type discussion_board_banCountOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    moderator_id?: SortOrder\n    warning_id?: SortOrder\n    report_id?: SortOrder\n    ban_type?: SortOrder\n    reason?: SortOrder\n    banned_at?: SortOrder\n    expires_at?: SortOrder\n  }\n\n  export type discussion_board_banMaxOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    moderator_id?: SortOrder\n    warning_id?: SortOrder\n    report_id?: SortOrder\n    ban_type?: SortOrder\n    reason?: SortOrder\n    banned_at?: SortOrder\n    expires_at?: SortOrder\n  }\n\n  export type discussion_board_banMinOrderByAggregateInput = {\n    id?: SortOrder\n    user_id?: SortOrder\n    moderator_id?: SortOrder\n    warning_id?: SortOrder\n    report_id?: SortOrder\n    ban_type?: SortOrder\n    reason?: SortOrder\n    banned_at?: SortOrder\n    expires_at?: SortOrder\n  }\n\n  export type discussion_board_thread_statsCountOrderByAggregateInput = {\n    id?: SortOrder\n    discussion_board_thread_id?: SortOrder\n    post_count?: SortOrder\n    comment_count?: SortOrder\n    upvote_count?: SortOrder\n    downvote_count?: SortOrder\n    bookmark_count?: SortOrder\n    abuse_report_count?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussion_board_thread_statsAvgOrderByAggregateInput = {\n    post_count?: SortOrder\n    comment_count?: SortOrder\n    upvote_count?: SortOrder\n    downvote_count?: SortOrder\n    bookmark_count?: SortOrder\n    abuse_report_count?: SortOrder\n  }\n\n  export type discussion_board_thread_statsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    discussion_board_thread_id?: SortOrder\n    post_count?: SortOrder\n    comment_count?: SortOrder\n    upvote_count?: SortOrder\n    downvote_count?: SortOrder\n    bookmark_count?: SortOrder\n    abuse_report_count?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussion_board_thread_statsMinOrderByAggregateInput = {\n    id?: SortOrder\n    discussion_board_thread_id?: SortOrder\n    post_count?: SortOrder\n    comment_count?: SortOrder\n    upvote_count?: SortOrder\n    downvote_count?: SortOrder\n    bookmark_count?: SortOrder\n    abuse_report_count?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussion_board_thread_statsSumOrderByAggregateInput = {\n    post_count?: SortOrder\n    comment_count?: SortOrder\n    upvote_count?: SortOrder\n    downvote_count?: SortOrder\n    bookmark_count?: SortOrder\n    abuse_report_count?: SortOrder\n  }\n\n  export type discussion_board_user_activityCountOrderByAggregateInput = {\n    id?: SortOrder\n    discussion_board_user_id?: SortOrder\n    threads_authored?: SortOrder\n    posts_authored?: SortOrder\n    comments_authored?: SortOrder\n    upvotes_given?: SortOrder\n    downvotes_given?: SortOrder\n    reports_made?: SortOrder\n    bookmarks_created?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussion_board_user_activityAvgOrderByAggregateInput = {\n    threads_authored?: SortOrder\n    posts_authored?: SortOrder\n    comments_authored?: SortOrder\n    upvotes_given?: SortOrder\n    downvotes_given?: SortOrder\n    reports_made?: SortOrder\n    bookmarks_created?: SortOrder\n  }\n\n  export type discussion_board_user_activityMaxOrderByAggregateInput = {\n    id?: SortOrder\n    discussion_board_user_id?: SortOrder\n    threads_authored?: SortOrder\n    posts_authored?: SortOrder\n    comments_authored?: SortOrder\n    upvotes_given?: SortOrder\n    downvotes_given?: SortOrder\n    reports_made?: SortOrder\n    bookmarks_created?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussion_board_user_activityMinOrderByAggregateInput = {\n    id?: SortOrder\n    discussion_board_user_id?: SortOrder\n    threads_authored?: SortOrder\n    posts_authored?: SortOrder\n    comments_authored?: SortOrder\n    upvotes_given?: SortOrder\n    downvotes_given?: SortOrder\n    reports_made?: SortOrder\n    bookmarks_created?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussion_board_user_activitySumOrderByAggregateInput = {\n    threads_authored?: SortOrder\n    posts_authored?: SortOrder\n    comments_authored?: SortOrder\n    upvotes_given?: SortOrder\n    downvotes_given?: SortOrder\n    reports_made?: SortOrder\n    bookmarks_created?: SortOrder\n  }\n\n  export type discussion_board_content_abuse_metricDateAbuse_typeCompoundUniqueInput = {\n    date: string\n    abuse_type: string\n  }\n\n  export type discussion_board_content_abuse_metricCountOrderByAggregateInput = {\n    id?: SortOrder\n    moderator_id?: SortOrder\n    date?: SortOrder\n    abuse_type?: SortOrder\n    flagged_count?: SortOrder\n    auto_hidden_count?: SortOrder\n    escalation_count?: SortOrder\n    false_positive_count?: SortOrder\n    avg_resolution_time_minutes?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussion_board_content_abuse_metricAvgOrderByAggregateInput = {\n    flagged_count?: SortOrder\n    auto_hidden_count?: SortOrder\n    escalation_count?: SortOrder\n    false_positive_count?: SortOrder\n    avg_resolution_time_minutes?: SortOrder\n  }\n\n  export type discussion_board_content_abuse_metricMaxOrderByAggregateInput = {\n    id?: SortOrder\n    moderator_id?: SortOrder\n    date?: SortOrder\n    abuse_type?: SortOrder\n    flagged_count?: SortOrder\n    auto_hidden_count?: SortOrder\n    escalation_count?: SortOrder\n    false_positive_count?: SortOrder\n    avg_resolution_time_minutes?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussion_board_content_abuse_metricMinOrderByAggregateInput = {\n    id?: SortOrder\n    moderator_id?: SortOrder\n    date?: SortOrder\n    abuse_type?: SortOrder\n    flagged_count?: SortOrder\n    auto_hidden_count?: SortOrder\n    escalation_count?: SortOrder\n    false_positive_count?: SortOrder\n    avg_resolution_time_minutes?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussion_board_content_abuse_metricSumOrderByAggregateInput = {\n    flagged_count?: SortOrder\n    auto_hidden_count?: SortOrder\n    escalation_count?: SortOrder\n    false_positive_count?: SortOrder\n    avg_resolution_time_minutes?: SortOrder\n  }\n\n  export type discussion_board_settingCountOrderByAggregateInput = {\n    id?: SortOrder\n    key?: SortOrder\n    value?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type discussion_board_settingMaxOrderByAggregateInput = {\n    id?: SortOrder\n    key?: SortOrder\n    value?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type discussion_board_settingMinOrderByAggregateInput = {\n    id?: SortOrder\n    key?: SortOrder\n    value?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type discussion_board_system_configCountOrderByAggregateInput = {\n    id?: SortOrder\n    key?: SortOrder\n    value?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type discussion_board_system_configMaxOrderByAggregateInput = {\n    id?: SortOrder\n    key?: SortOrder\n    value?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type discussion_board_system_configMinOrderByAggregateInput = {\n    id?: SortOrder\n    key?: SortOrder\n    value?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type discussion_board_moderatorsCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput = {\n    create?: XOR<discussion_board_moderatorsCreateWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput, discussion_board_moderatorsUncheckedCreateWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput>\n    connectOrCreate?: discussion_board_moderatorsCreateOrConnectWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    connect?: discussion_board_moderatorsWhereUniqueInput\n  }\n\n  export type discussion_board_adminsCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput = {\n    create?: XOR<discussion_board_adminsCreateWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput, discussion_board_adminsUncheckedCreateWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput>\n    connectOrCreate?: discussion_board_adminsCreateOrConnectWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    connect?: discussion_board_adminsWhereUniqueInput\n  }\n\n  export type discussion_board_user_profilesCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput = {\n    create?: XOR<discussion_board_user_profilesCreateWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput, discussion_board_user_profilesUncheckedCreateWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput>\n    connectOrCreate?: discussion_board_user_profilesCreateOrConnectWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    connect?: discussion_board_user_profilesWhereUniqueInput\n  }\n\n  export type discussion_board_user_settingsCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput = {\n    create?: XOR<discussion_board_user_settingsCreateWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput, discussion_board_user_settingsUncheckedCreateWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput>\n    connectOrCreate?: discussion_board_user_settingsCreateOrConnectWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    connect?: discussion_board_user_settingsWhereUniqueInput\n  }\n\n  export type discussion_board_threadCreateNestedManyWithoutCreator_userInput = {\n    create?: XOR<discussion_board_threadCreateWithoutCreator_userInput, discussion_board_threadUncheckedCreateWithoutCreator_userInput> | discussion_board_threadCreateWithoutCreator_userInput[] | discussion_board_threadUncheckedCreateWithoutCreator_userInput[]\n    connectOrCreate?: discussion_board_threadCreateOrConnectWithoutCreator_userInput | discussion_board_threadCreateOrConnectWithoutCreator_userInput[]\n    createMany?: discussion_board_threadCreateManyCreator_userInputEnvelope\n    connect?: discussion_board_threadWhereUniqueInput | discussion_board_threadWhereUniqueInput[]\n  }\n\n  export type discussion_board_postCreateNestedManyWithoutAuthor_userInput = {\n    create?: XOR<discussion_board_postCreateWithoutAuthor_userInput, discussion_board_postUncheckedCreateWithoutAuthor_userInput> | discussion_board_postCreateWithoutAuthor_userInput[] | discussion_board_postUncheckedCreateWithoutAuthor_userInput[]\n    connectOrCreate?: discussion_board_postCreateOrConnectWithoutAuthor_userInput | discussion_board_postCreateOrConnectWithoutAuthor_userInput[]\n    createMany?: discussion_board_postCreateManyAuthor_userInputEnvelope\n    connect?: discussion_board_postWhereUniqueInput | discussion_board_postWhereUniqueInput[]\n  }\n\n  export type discussion_board_commentCreateNestedManyWithoutAuthor_userInput = {\n    create?: XOR<discussion_board_commentCreateWithoutAuthor_userInput, discussion_board_commentUncheckedCreateWithoutAuthor_userInput> | discussion_board_commentCreateWithoutAuthor_userInput[] | discussion_board_commentUncheckedCreateWithoutAuthor_userInput[]\n    connectOrCreate?: discussion_board_commentCreateOrConnectWithoutAuthor_userInput | discussion_board_commentCreateOrConnectWithoutAuthor_userInput[]\n    createMany?: discussion_board_commentCreateManyAuthor_userInputEnvelope\n    connect?: discussion_board_commentWhereUniqueInput | discussion_board_commentWhereUniqueInput[]\n  }\n\n  export type discussion_board_voteCreateNestedManyWithoutUserInput = {\n    create?: XOR<discussion_board_voteCreateWithoutUserInput, discussion_board_voteUncheckedCreateWithoutUserInput> | discussion_board_voteCreateWithoutUserInput[] | discussion_board_voteUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussion_board_voteCreateOrConnectWithoutUserInput | discussion_board_voteCreateOrConnectWithoutUserInput[]\n    createMany?: discussion_board_voteCreateManyUserInputEnvelope\n    connect?: discussion_board_voteWhereUniqueInput | discussion_board_voteWhereUniqueInput[]\n  }\n\n  export type discussion_board_reactionCreateNestedManyWithoutUserInput = {\n    create?: XOR<discussion_board_reactionCreateWithoutUserInput, discussion_board_reactionUncheckedCreateWithoutUserInput> | discussion_board_reactionCreateWithoutUserInput[] | discussion_board_reactionUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussion_board_reactionCreateOrConnectWithoutUserInput | discussion_board_reactionCreateOrConnectWithoutUserInput[]\n    createMany?: discussion_board_reactionCreateManyUserInputEnvelope\n    connect?: discussion_board_reactionWhereUniqueInput | discussion_board_reactionWhereUniqueInput[]\n  }\n\n  export type discussion_board_bookmarkCreateNestedManyWithoutUserInput = {\n    create?: XOR<discussion_board_bookmarkCreateWithoutUserInput, discussion_board_bookmarkUncheckedCreateWithoutUserInput> | discussion_board_bookmarkCreateWithoutUserInput[] | discussion_board_bookmarkUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussion_board_bookmarkCreateOrConnectWithoutUserInput | discussion_board_bookmarkCreateOrConnectWithoutUserInput[]\n    createMany?: discussion_board_bookmarkCreateManyUserInputEnvelope\n    connect?: discussion_board_bookmarkWhereUniqueInput | discussion_board_bookmarkWhereUniqueInput[]\n  }\n\n  export type discussion_board_notificationCreateNestedManyWithoutRecipient_userInput = {\n    create?: XOR<discussion_board_notificationCreateWithoutRecipient_userInput, discussion_board_notificationUncheckedCreateWithoutRecipient_userInput> | discussion_board_notificationCreateWithoutRecipient_userInput[] | discussion_board_notificationUncheckedCreateWithoutRecipient_userInput[]\n    connectOrCreate?: discussion_board_notificationCreateOrConnectWithoutRecipient_userInput | discussion_board_notificationCreateOrConnectWithoutRecipient_userInput[]\n    createMany?: discussion_board_notificationCreateManyRecipient_userInputEnvelope\n    connect?: discussion_board_notificationWhereUniqueInput | discussion_board_notificationWhereUniqueInput[]\n  }\n\n  export type discussion_board_subscriptionCreateNestedManyWithoutUserInput = {\n    create?: XOR<discussion_board_subscriptionCreateWithoutUserInput, discussion_board_subscriptionUncheckedCreateWithoutUserInput> | discussion_board_subscriptionCreateWithoutUserInput[] | discussion_board_subscriptionUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussion_board_subscriptionCreateOrConnectWithoutUserInput | discussion_board_subscriptionCreateOrConnectWithoutUserInput[]\n    createMany?: discussion_board_subscriptionCreateManyUserInputEnvelope\n    connect?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n  }\n\n  export type discussion_board_reportCreateNestedManyWithoutReported_userInput = {\n    create?: XOR<discussion_board_reportCreateWithoutReported_userInput, discussion_board_reportUncheckedCreateWithoutReported_userInput> | discussion_board_reportCreateWithoutReported_userInput[] | discussion_board_reportUncheckedCreateWithoutReported_userInput[]\n    connectOrCreate?: discussion_board_reportCreateOrConnectWithoutReported_userInput | discussion_board_reportCreateOrConnectWithoutReported_userInput[]\n    createMany?: discussion_board_reportCreateManyReported_userInputEnvelope\n    connect?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n  }\n\n  export type discussion_board_reportCreateNestedManyWithoutReporting_userInput = {\n    create?: XOR<discussion_board_reportCreateWithoutReporting_userInput, discussion_board_reportUncheckedCreateWithoutReporting_userInput> | discussion_board_reportCreateWithoutReporting_userInput[] | discussion_board_reportUncheckedCreateWithoutReporting_userInput[]\n    connectOrCreate?: discussion_board_reportCreateOrConnectWithoutReporting_userInput | discussion_board_reportCreateOrConnectWithoutReporting_userInput[]\n    createMany?: discussion_board_reportCreateManyReporting_userInputEnvelope\n    connect?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n  }\n\n  export type discussion_board_moderator_actionCreateNestedManyWithoutUserInput = {\n    create?: XOR<discussion_board_moderator_actionCreateWithoutUserInput, discussion_board_moderator_actionUncheckedCreateWithoutUserInput> | discussion_board_moderator_actionCreateWithoutUserInput[] | discussion_board_moderator_actionUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussion_board_moderator_actionCreateOrConnectWithoutUserInput | discussion_board_moderator_actionCreateOrConnectWithoutUserInput[]\n    createMany?: discussion_board_moderator_actionCreateManyUserInputEnvelope\n    connect?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n  }\n\n  export type discussion_board_audit_logCreateNestedManyWithoutActorInput = {\n    create?: XOR<discussion_board_audit_logCreateWithoutActorInput, discussion_board_audit_logUncheckedCreateWithoutActorInput> | discussion_board_audit_logCreateWithoutActorInput[] | discussion_board_audit_logUncheckedCreateWithoutActorInput[]\n    connectOrCreate?: discussion_board_audit_logCreateOrConnectWithoutActorInput | discussion_board_audit_logCreateOrConnectWithoutActorInput[]\n    createMany?: discussion_board_audit_logCreateManyActorInputEnvelope\n    connect?: discussion_board_audit_logWhereUniqueInput | discussion_board_audit_logWhereUniqueInput[]\n  }\n\n  export type discussion_board_audit_logCreateNestedManyWithoutAffected_userInput = {\n    create?: XOR<discussion_board_audit_logCreateWithoutAffected_userInput, discussion_board_audit_logUncheckedCreateWithoutAffected_userInput> | discussion_board_audit_logCreateWithoutAffected_userInput[] | discussion_board_audit_logUncheckedCreateWithoutAffected_userInput[]\n    connectOrCreate?: discussion_board_audit_logCreateOrConnectWithoutAffected_userInput | discussion_board_audit_logCreateOrConnectWithoutAffected_userInput[]\n    createMany?: discussion_board_audit_logCreateManyAffected_userInputEnvelope\n    connect?: discussion_board_audit_logWhereUniqueInput | discussion_board_audit_logWhereUniqueInput[]\n  }\n\n  export type discussion_board_warningCreateNestedManyWithoutUserInput = {\n    create?: XOR<discussion_board_warningCreateWithoutUserInput, discussion_board_warningUncheckedCreateWithoutUserInput> | discussion_board_warningCreateWithoutUserInput[] | discussion_board_warningUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussion_board_warningCreateOrConnectWithoutUserInput | discussion_board_warningCreateOrConnectWithoutUserInput[]\n    createMany?: discussion_board_warningCreateManyUserInputEnvelope\n    connect?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n  }\n\n  export type discussion_board_banCreateNestedManyWithoutUserInput = {\n    create?: XOR<discussion_board_banCreateWithoutUserInput, discussion_board_banUncheckedCreateWithoutUserInput> | discussion_board_banCreateWithoutUserInput[] | discussion_board_banUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussion_board_banCreateOrConnectWithoutUserInput | discussion_board_banCreateOrConnectWithoutUserInput[]\n    createMany?: discussion_board_banCreateManyUserInputEnvelope\n    connect?: discussion_board_banWhereUniqueInput | discussion_board_banWhereUniqueInput[]\n  }\n\n  export type discussion_board_user_activityCreateNestedOneWithoutDiscussion_board_userInput = {\n    create?: XOR<discussion_board_user_activityCreateWithoutDiscussion_board_userInput, discussion_board_user_activityUncheckedCreateWithoutDiscussion_board_userInput>\n    connectOrCreate?: discussion_board_user_activityCreateOrConnectWithoutDiscussion_board_userInput\n    connect?: discussion_board_user_activityWhereUniqueInput\n  }\n\n  export type discussion_board_moderatorsUncheckedCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput = {\n    create?: XOR<discussion_board_moderatorsCreateWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput, discussion_board_moderatorsUncheckedCreateWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput>\n    connectOrCreate?: discussion_board_moderatorsCreateOrConnectWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    connect?: discussion_board_moderatorsWhereUniqueInput\n  }\n\n  export type discussion_board_adminsUncheckedCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput = {\n    create?: XOR<discussion_board_adminsCreateWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput, discussion_board_adminsUncheckedCreateWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput>\n    connectOrCreate?: discussion_board_adminsCreateOrConnectWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    connect?: discussion_board_adminsWhereUniqueInput\n  }\n\n  export type discussion_board_user_profilesUncheckedCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput = {\n    create?: XOR<discussion_board_user_profilesCreateWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput, discussion_board_user_profilesUncheckedCreateWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput>\n    connectOrCreate?: discussion_board_user_profilesCreateOrConnectWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    connect?: discussion_board_user_profilesWhereUniqueInput\n  }\n\n  export type discussion_board_user_settingsUncheckedCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput = {\n    create?: XOR<discussion_board_user_settingsCreateWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput, discussion_board_user_settingsUncheckedCreateWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput>\n    connectOrCreate?: discussion_board_user_settingsCreateOrConnectWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    connect?: discussion_board_user_settingsWhereUniqueInput\n  }\n\n  export type discussion_board_threadUncheckedCreateNestedManyWithoutCreator_userInput = {\n    create?: XOR<discussion_board_threadCreateWithoutCreator_userInput, discussion_board_threadUncheckedCreateWithoutCreator_userInput> | discussion_board_threadCreateWithoutCreator_userInput[] | discussion_board_threadUncheckedCreateWithoutCreator_userInput[]\n    connectOrCreate?: discussion_board_threadCreateOrConnectWithoutCreator_userInput | discussion_board_threadCreateOrConnectWithoutCreator_userInput[]\n    createMany?: discussion_board_threadCreateManyCreator_userInputEnvelope\n    connect?: discussion_board_threadWhereUniqueInput | discussion_board_threadWhereUniqueInput[]\n  }\n\n  export type discussion_board_postUncheckedCreateNestedManyWithoutAuthor_userInput = {\n    create?: XOR<discussion_board_postCreateWithoutAuthor_userInput, discussion_board_postUncheckedCreateWithoutAuthor_userInput> | discussion_board_postCreateWithoutAuthor_userInput[] | discussion_board_postUncheckedCreateWithoutAuthor_userInput[]\n    connectOrCreate?: discussion_board_postCreateOrConnectWithoutAuthor_userInput | discussion_board_postCreateOrConnectWithoutAuthor_userInput[]\n    createMany?: discussion_board_postCreateManyAuthor_userInputEnvelope\n    connect?: discussion_board_postWhereUniqueInput | discussion_board_postWhereUniqueInput[]\n  }\n\n  export type discussion_board_commentUncheckedCreateNestedManyWithoutAuthor_userInput = {\n    create?: XOR<discussion_board_commentCreateWithoutAuthor_userInput, discussion_board_commentUncheckedCreateWithoutAuthor_userInput> | discussion_board_commentCreateWithoutAuthor_userInput[] | discussion_board_commentUncheckedCreateWithoutAuthor_userInput[]\n    connectOrCreate?: discussion_board_commentCreateOrConnectWithoutAuthor_userInput | discussion_board_commentCreateOrConnectWithoutAuthor_userInput[]\n    createMany?: discussion_board_commentCreateManyAuthor_userInputEnvelope\n    connect?: discussion_board_commentWhereUniqueInput | discussion_board_commentWhereUniqueInput[]\n  }\n\n  export type discussion_board_voteUncheckedCreateNestedManyWithoutUserInput = {\n    create?: XOR<discussion_board_voteCreateWithoutUserInput, discussion_board_voteUncheckedCreateWithoutUserInput> | discussion_board_voteCreateWithoutUserInput[] | discussion_board_voteUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussion_board_voteCreateOrConnectWithoutUserInput | discussion_board_voteCreateOrConnectWithoutUserInput[]\n    createMany?: discussion_board_voteCreateManyUserInputEnvelope\n    connect?: discussion_board_voteWhereUniqueInput | discussion_board_voteWhereUniqueInput[]\n  }\n\n  export type discussion_board_reactionUncheckedCreateNestedManyWithoutUserInput = {\n    create?: XOR<discussion_board_reactionCreateWithoutUserInput, discussion_board_reactionUncheckedCreateWithoutUserInput> | discussion_board_reactionCreateWithoutUserInput[] | discussion_board_reactionUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussion_board_reactionCreateOrConnectWithoutUserInput | discussion_board_reactionCreateOrConnectWithoutUserInput[]\n    createMany?: discussion_board_reactionCreateManyUserInputEnvelope\n    connect?: discussion_board_reactionWhereUniqueInput | discussion_board_reactionWhereUniqueInput[]\n  }\n\n  export type discussion_board_bookmarkUncheckedCreateNestedManyWithoutUserInput = {\n    create?: XOR<discussion_board_bookmarkCreateWithoutUserInput, discussion_board_bookmarkUncheckedCreateWithoutUserInput> | discussion_board_bookmarkCreateWithoutUserInput[] | discussion_board_bookmarkUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussion_board_bookmarkCreateOrConnectWithoutUserInput | discussion_board_bookmarkCreateOrConnectWithoutUserInput[]\n    createMany?: discussion_board_bookmarkCreateManyUserInputEnvelope\n    connect?: discussion_board_bookmarkWhereUniqueInput | discussion_board_bookmarkWhereUniqueInput[]\n  }\n\n  export type discussion_board_notificationUncheckedCreateNestedManyWithoutRecipient_userInput = {\n    create?: XOR<discussion_board_notificationCreateWithoutRecipient_userInput, discussion_board_notificationUncheckedCreateWithoutRecipient_userInput> | discussion_board_notificationCreateWithoutRecipient_userInput[] | discussion_board_notificationUncheckedCreateWithoutRecipient_userInput[]\n    connectOrCreate?: discussion_board_notificationCreateOrConnectWithoutRecipient_userInput | discussion_board_notificationCreateOrConnectWithoutRecipient_userInput[]\n    createMany?: discussion_board_notificationCreateManyRecipient_userInputEnvelope\n    connect?: discussion_board_notificationWhereUniqueInput | discussion_board_notificationWhereUniqueInput[]\n  }\n\n  export type discussion_board_subscriptionUncheckedCreateNestedManyWithoutUserInput = {\n    create?: XOR<discussion_board_subscriptionCreateWithoutUserInput, discussion_board_subscriptionUncheckedCreateWithoutUserInput> | discussion_board_subscriptionCreateWithoutUserInput[] | discussion_board_subscriptionUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussion_board_subscriptionCreateOrConnectWithoutUserInput | discussion_board_subscriptionCreateOrConnectWithoutUserInput[]\n    createMany?: discussion_board_subscriptionCreateManyUserInputEnvelope\n    connect?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n  }\n\n  export type discussion_board_reportUncheckedCreateNestedManyWithoutReported_userInput = {\n    create?: XOR<discussion_board_reportCreateWithoutReported_userInput, discussion_board_reportUncheckedCreateWithoutReported_userInput> | discussion_board_reportCreateWithoutReported_userInput[] | discussion_board_reportUncheckedCreateWithoutReported_userInput[]\n    connectOrCreate?: discussion_board_reportCreateOrConnectWithoutReported_userInput | discussion_board_reportCreateOrConnectWithoutReported_userInput[]\n    createMany?: discussion_board_reportCreateManyReported_userInputEnvelope\n    connect?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n  }\n\n  export type discussion_board_reportUncheckedCreateNestedManyWithoutReporting_userInput = {\n    create?: XOR<discussion_board_reportCreateWithoutReporting_userInput, discussion_board_reportUncheckedCreateWithoutReporting_userInput> | discussion_board_reportCreateWithoutReporting_userInput[] | discussion_board_reportUncheckedCreateWithoutReporting_userInput[]\n    connectOrCreate?: discussion_board_reportCreateOrConnectWithoutReporting_userInput | discussion_board_reportCreateOrConnectWithoutReporting_userInput[]\n    createMany?: discussion_board_reportCreateManyReporting_userInputEnvelope\n    connect?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n  }\n\n  export type discussion_board_moderator_actionUncheckedCreateNestedManyWithoutUserInput = {\n    create?: XOR<discussion_board_moderator_actionCreateWithoutUserInput, discussion_board_moderator_actionUncheckedCreateWithoutUserInput> | discussion_board_moderator_actionCreateWithoutUserInput[] | discussion_board_moderator_actionUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussion_board_moderator_actionCreateOrConnectWithoutUserInput | discussion_board_moderator_actionCreateOrConnectWithoutUserInput[]\n    createMany?: discussion_board_moderator_actionCreateManyUserInputEnvelope\n    connect?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n  }\n\n  export type discussion_board_audit_logUncheckedCreateNestedManyWithoutActorInput = {\n    create?: XOR<discussion_board_audit_logCreateWithoutActorInput, discussion_board_audit_logUncheckedCreateWithoutActorInput> | discussion_board_audit_logCreateWithoutActorInput[] | discussion_board_audit_logUncheckedCreateWithoutActorInput[]\n    connectOrCreate?: discussion_board_audit_logCreateOrConnectWithoutActorInput | discussion_board_audit_logCreateOrConnectWithoutActorInput[]\n    createMany?: discussion_board_audit_logCreateManyActorInputEnvelope\n    connect?: discussion_board_audit_logWhereUniqueInput | discussion_board_audit_logWhereUniqueInput[]\n  }\n\n  export type discussion_board_audit_logUncheckedCreateNestedManyWithoutAffected_userInput = {\n    create?: XOR<discussion_board_audit_logCreateWithoutAffected_userInput, discussion_board_audit_logUncheckedCreateWithoutAffected_userInput> | discussion_board_audit_logCreateWithoutAffected_userInput[] | discussion_board_audit_logUncheckedCreateWithoutAffected_userInput[]\n    connectOrCreate?: discussion_board_audit_logCreateOrConnectWithoutAffected_userInput | discussion_board_audit_logCreateOrConnectWithoutAffected_userInput[]\n    createMany?: discussion_board_audit_logCreateManyAffected_userInputEnvelope\n    connect?: discussion_board_audit_logWhereUniqueInput | discussion_board_audit_logWhereUniqueInput[]\n  }\n\n  export type discussion_board_warningUncheckedCreateNestedManyWithoutUserInput = {\n    create?: XOR<discussion_board_warningCreateWithoutUserInput, discussion_board_warningUncheckedCreateWithoutUserInput> | discussion_board_warningCreateWithoutUserInput[] | discussion_board_warningUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussion_board_warningCreateOrConnectWithoutUserInput | discussion_board_warningCreateOrConnectWithoutUserInput[]\n    createMany?: discussion_board_warningCreateManyUserInputEnvelope\n    connect?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n  }\n\n  export type discussion_board_banUncheckedCreateNestedManyWithoutUserInput = {\n    create?: XOR<discussion_board_banCreateWithoutUserInput, discussion_board_banUncheckedCreateWithoutUserInput> | discussion_board_banCreateWithoutUserInput[] | discussion_board_banUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussion_board_banCreateOrConnectWithoutUserInput | discussion_board_banCreateOrConnectWithoutUserInput[]\n    createMany?: discussion_board_banCreateManyUserInputEnvelope\n    connect?: discussion_board_banWhereUniqueInput | discussion_board_banWhereUniqueInput[]\n  }\n\n  export type discussion_board_user_activityUncheckedCreateNestedOneWithoutDiscussion_board_userInput = {\n    create?: XOR<discussion_board_user_activityCreateWithoutDiscussion_board_userInput, discussion_board_user_activityUncheckedCreateWithoutDiscussion_board_userInput>\n    connectOrCreate?: discussion_board_user_activityCreateOrConnectWithoutDiscussion_board_userInput\n    connect?: discussion_board_user_activityWhereUniqueInput\n  }\n\n  export type StringFieldUpdateOperationsInput = {\n    set?: string\n  }\n\n  export type BoolFieldUpdateOperationsInput = {\n    set?: boolean\n  }\n\n  export type DateTimeFieldUpdateOperationsInput = {\n    set?: Date | string\n  }\n\n  export type NullableDateTimeFieldUpdateOperationsInput = {\n    set?: Date | string | null\n  }\n\n  export type discussion_board_moderatorsUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput = {\n    create?: XOR<discussion_board_moderatorsCreateWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput, discussion_board_moderatorsUncheckedCreateWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput>\n    connectOrCreate?: discussion_board_moderatorsCreateOrConnectWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    upsert?: discussion_board_moderatorsUpsertWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    disconnect?: discussion_board_moderatorsWhereInput | boolean\n    delete?: discussion_board_moderatorsWhereInput | boolean\n    connect?: discussion_board_moderatorsWhereUniqueInput\n    update?: XOR<XOR<discussion_board_moderatorsUpdateToOneWithWhereWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput, discussion_board_moderatorsUpdateWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput>, discussion_board_moderatorsUncheckedUpdateWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput>\n  }\n\n  export type discussion_board_adminsUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput = {\n    create?: XOR<discussion_board_adminsCreateWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput, discussion_board_adminsUncheckedCreateWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput>\n    connectOrCreate?: discussion_board_adminsCreateOrConnectWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    upsert?: discussion_board_adminsUpsertWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    disconnect?: discussion_board_adminsWhereInput | boolean\n    delete?: discussion_board_adminsWhereInput | boolean\n    connect?: discussion_board_adminsWhereUniqueInput\n    update?: XOR<XOR<discussion_board_adminsUpdateToOneWithWhereWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput, discussion_board_adminsUpdateWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput>, discussion_board_adminsUncheckedUpdateWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput>\n  }\n\n  export type discussion_board_user_profilesUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput = {\n    create?: XOR<discussion_board_user_profilesCreateWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput, discussion_board_user_profilesUncheckedCreateWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput>\n    connectOrCreate?: discussion_board_user_profilesCreateOrConnectWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    upsert?: discussion_board_user_profilesUpsertWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    disconnect?: discussion_board_user_profilesWhereInput | boolean\n    delete?: discussion_board_user_profilesWhereInput | boolean\n    connect?: discussion_board_user_profilesWhereUniqueInput\n    update?: XOR<XOR<discussion_board_user_profilesUpdateToOneWithWhereWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput, discussion_board_user_profilesUpdateWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput>, discussion_board_user_profilesUncheckedUpdateWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput>\n  }\n\n  export type discussion_board_user_settingsUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput = {\n    create?: XOR<discussion_board_user_settingsCreateWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput, discussion_board_user_settingsUncheckedCreateWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput>\n    connectOrCreate?: discussion_board_user_settingsCreateOrConnectWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    upsert?: discussion_board_user_settingsUpsertWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    disconnect?: discussion_board_user_settingsWhereInput | boolean\n    delete?: discussion_board_user_settingsWhereInput | boolean\n    connect?: discussion_board_user_settingsWhereUniqueInput\n    update?: XOR<XOR<discussion_board_user_settingsUpdateToOneWithWhereWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput, discussion_board_user_settingsUpdateWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput>, discussion_board_user_settingsUncheckedUpdateWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput>\n  }\n\n  export type discussion_board_threadUpdateManyWithoutCreator_userNestedInput = {\n    create?: XOR<discussion_board_threadCreateWithoutCreator_userInput, discussion_board_threadUncheckedCreateWithoutCreator_userInput> | discussion_board_threadCreateWithoutCreator_userInput[] | discussion_board_threadUncheckedCreateWithoutCreator_userInput[]\n    connectOrCreate?: discussion_board_threadCreateOrConnectWithoutCreator_userInput | discussion_board_threadCreateOrConnectWithoutCreator_userInput[]\n    upsert?: discussion_board_threadUpsertWithWhereUniqueWithoutCreator_userInput | discussion_board_threadUpsertWithWhereUniqueWithoutCreator_userInput[]\n    createMany?: discussion_board_threadCreateManyCreator_userInputEnvelope\n    set?: discussion_board_threadWhereUniqueInput | discussion_board_threadWhereUniqueInput[]\n    disconnect?: discussion_board_threadWhereUniqueInput | discussion_board_threadWhereUniqueInput[]\n    delete?: discussion_board_threadWhereUniqueInput | discussion_board_threadWhereUniqueInput[]\n    connect?: discussion_board_threadWhereUniqueInput | discussion_board_threadWhereUniqueInput[]\n    update?: discussion_board_threadUpdateWithWhereUniqueWithoutCreator_userInput | discussion_board_threadUpdateWithWhereUniqueWithoutCreator_userInput[]\n    updateMany?: discussion_board_threadUpdateManyWithWhereWithoutCreator_userInput | discussion_board_threadUpdateManyWithWhereWithoutCreator_userInput[]\n    deleteMany?: discussion_board_threadScalarWhereInput | discussion_board_threadScalarWhereInput[]\n  }\n\n  export type discussion_board_postUpdateManyWithoutAuthor_userNestedInput = {\n    create?: XOR<discussion_board_postCreateWithoutAuthor_userInput, discussion_board_postUncheckedCreateWithoutAuthor_userInput> | discussion_board_postCreateWithoutAuthor_userInput[] | discussion_board_postUncheckedCreateWithoutAuthor_userInput[]\n    connectOrCreate?: discussion_board_postCreateOrConnectWithoutAuthor_userInput | discussion_board_postCreateOrConnectWithoutAuthor_userInput[]\n    upsert?: discussion_board_postUpsertWithWhereUniqueWithoutAuthor_userInput | discussion_board_postUpsertWithWhereUniqueWithoutAuthor_userInput[]\n    createMany?: discussion_board_postCreateManyAuthor_userInputEnvelope\n    set?: discussion_board_postWhereUniqueInput | discussion_board_postWhereUniqueInput[]\n    disconnect?: discussion_board_postWhereUniqueInput | discussion_board_postWhereUniqueInput[]\n    delete?: discussion_board_postWhereUniqueInput | discussion_board_postWhereUniqueInput[]\n    connect?: discussion_board_postWhereUniqueInput | discussion_board_postWhereUniqueInput[]\n    update?: discussion_board_postUpdateWithWhereUniqueWithoutAuthor_userInput | discussion_board_postUpdateWithWhereUniqueWithoutAuthor_userInput[]\n    updateMany?: discussion_board_postUpdateManyWithWhereWithoutAuthor_userInput | discussion_board_postUpdateManyWithWhereWithoutAuthor_userInput[]\n    deleteMany?: discussion_board_postScalarWhereInput | discussion_board_postScalarWhereInput[]\n  }\n\n  export type discussion_board_commentUpdateManyWithoutAuthor_userNestedInput = {\n    create?: XOR<discussion_board_commentCreateWithoutAuthor_userInput, discussion_board_commentUncheckedCreateWithoutAuthor_userInput> | discussion_board_commentCreateWithoutAuthor_userInput[] | discussion_board_commentUncheckedCreateWithoutAuthor_userInput[]\n    connectOrCreate?: discussion_board_commentCreateOrConnectWithoutAuthor_userInput | discussion_board_commentCreateOrConnectWithoutAuthor_userInput[]\n    upsert?: discussion_board_commentUpsertWithWhereUniqueWithoutAuthor_userInput | discussion_board_commentUpsertWithWhereUniqueWithoutAuthor_userInput[]\n    createMany?: discussion_board_commentCreateManyAuthor_userInputEnvelope\n    set?: discussion_board_commentWhereUniqueInput | discussion_board_commentWhereUniqueInput[]\n    disconnect?: discussion_board_commentWhereUniqueInput | discussion_board_commentWhereUniqueInput[]\n    delete?: discussion_board_commentWhereUniqueInput | discussion_board_commentWhereUniqueInput[]\n    connect?: discussion_board_commentWhereUniqueInput | discussion_board_commentWhereUniqueInput[]\n    update?: discussion_board_commentUpdateWithWhereUniqueWithoutAuthor_userInput | discussion_board_commentUpdateWithWhereUniqueWithoutAuthor_userInput[]\n    updateMany?: discussion_board_commentUpdateManyWithWhereWithoutAuthor_userInput | discussion_board_commentUpdateManyWithWhereWithoutAuthor_userInput[]\n    deleteMany?: discussion_board_commentScalarWhereInput | discussion_board_commentScalarWhereInput[]\n  }\n\n  export type discussion_board_voteUpdateManyWithoutUserNestedInput = {\n    create?: XOR<discussion_board_voteCreateWithoutUserInput, discussion_board_voteUncheckedCreateWithoutUserInput> | discussion_board_voteCreateWithoutUserInput[] | discussion_board_voteUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussion_board_voteCreateOrConnectWithoutUserInput | discussion_board_voteCreateOrConnectWithoutUserInput[]\n    upsert?: discussion_board_voteUpsertWithWhereUniqueWithoutUserInput | discussion_board_voteUpsertWithWhereUniqueWithoutUserInput[]\n    createMany?: discussion_board_voteCreateManyUserInputEnvelope\n    set?: discussion_board_voteWhereUniqueInput | discussion_board_voteWhereUniqueInput[]\n    disconnect?: discussion_board_voteWhereUniqueInput | discussion_board_voteWhereUniqueInput[]\n    delete?: discussion_board_voteWhereUniqueInput | discussion_board_voteWhereUniqueInput[]\n    connect?: discussion_board_voteWhereUniqueInput | discussion_board_voteWhereUniqueInput[]\n    update?: discussion_board_voteUpdateWithWhereUniqueWithoutUserInput | discussion_board_voteUpdateWithWhereUniqueWithoutUserInput[]\n    updateMany?: discussion_board_voteUpdateManyWithWhereWithoutUserInput | discussion_board_voteUpdateManyWithWhereWithoutUserInput[]\n    deleteMany?: discussion_board_voteScalarWhereInput | discussion_board_voteScalarWhereInput[]\n  }\n\n  export type discussion_board_reactionUpdateManyWithoutUserNestedInput = {\n    create?: XOR<discussion_board_reactionCreateWithoutUserInput, discussion_board_reactionUncheckedCreateWithoutUserInput> | discussion_board_reactionCreateWithoutUserInput[] | discussion_board_reactionUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussion_board_reactionCreateOrConnectWithoutUserInput | discussion_board_reactionCreateOrConnectWithoutUserInput[]\n    upsert?: discussion_board_reactionUpsertWithWhereUniqueWithoutUserInput | discussion_board_reactionUpsertWithWhereUniqueWithoutUserInput[]\n    createMany?: discussion_board_reactionCreateManyUserInputEnvelope\n    set?: discussion_board_reactionWhereUniqueInput | discussion_board_reactionWhereUniqueInput[]\n    disconnect?: discussion_board_reactionWhereUniqueInput | discussion_board_reactionWhereUniqueInput[]\n    delete?: discussion_board_reactionWhereUniqueInput | discussion_board_reactionWhereUniqueInput[]\n    connect?: discussion_board_reactionWhereUniqueInput | discussion_board_reactionWhereUniqueInput[]\n    update?: discussion_board_reactionUpdateWithWhereUniqueWithoutUserInput | discussion_board_reactionUpdateWithWhereUniqueWithoutUserInput[]\n    updateMany?: discussion_board_reactionUpdateManyWithWhereWithoutUserInput | discussion_board_reactionUpdateManyWithWhereWithoutUserInput[]\n    deleteMany?: discussion_board_reactionScalarWhereInput | discussion_board_reactionScalarWhereInput[]\n  }\n\n  export type discussion_board_bookmarkUpdateManyWithoutUserNestedInput = {\n    create?: XOR<discussion_board_bookmarkCreateWithoutUserInput, discussion_board_bookmarkUncheckedCreateWithoutUserInput> | discussion_board_bookmarkCreateWithoutUserInput[] | discussion_board_bookmarkUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussion_board_bookmarkCreateOrConnectWithoutUserInput | discussion_board_bookmarkCreateOrConnectWithoutUserInput[]\n    upsert?: discussion_board_bookmarkUpsertWithWhereUniqueWithoutUserInput | discussion_board_bookmarkUpsertWithWhereUniqueWithoutUserInput[]\n    createMany?: discussion_board_bookmarkCreateManyUserInputEnvelope\n    set?: discussion_board_bookmarkWhereUniqueInput | discussion_board_bookmarkWhereUniqueInput[]\n    disconnect?: discussion_board_bookmarkWhereUniqueInput | discussion_board_bookmarkWhereUniqueInput[]\n    delete?: discussion_board_bookmarkWhereUniqueInput | discussion_board_bookmarkWhereUniqueInput[]\n    connect?: discussion_board_bookmarkWhereUniqueInput | discussion_board_bookmarkWhereUniqueInput[]\n    update?: discussion_board_bookmarkUpdateWithWhereUniqueWithoutUserInput | discussion_board_bookmarkUpdateWithWhereUniqueWithoutUserInput[]\n    updateMany?: discussion_board_bookmarkUpdateManyWithWhereWithoutUserInput | discussion_board_bookmarkUpdateManyWithWhereWithoutUserInput[]\n    deleteMany?: discussion_board_bookmarkScalarWhereInput | discussion_board_bookmarkScalarWhereInput[]\n  }\n\n  export type discussion_board_notificationUpdateManyWithoutRecipient_userNestedInput = {\n    create?: XOR<discussion_board_notificationCreateWithoutRecipient_userInput, discussion_board_notificationUncheckedCreateWithoutRecipient_userInput> | discussion_board_notificationCreateWithoutRecipient_userInput[] | discussion_board_notificationUncheckedCreateWithoutRecipient_userInput[]\n    connectOrCreate?: discussion_board_notificationCreateOrConnectWithoutRecipient_userInput | discussion_board_notificationCreateOrConnectWithoutRecipient_userInput[]\n    upsert?: discussion_board_notificationUpsertWithWhereUniqueWithoutRecipient_userInput | discussion_board_notificationUpsertWithWhereUniqueWithoutRecipient_userInput[]\n    createMany?: discussion_board_notificationCreateManyRecipient_userInputEnvelope\n    set?: discussion_board_notificationWhereUniqueInput | discussion_board_notificationWhereUniqueInput[]\n    disconnect?: discussion_board_notificationWhereUniqueInput | discussion_board_notificationWhereUniqueInput[]\n    delete?: discussion_board_notificationWhereUniqueInput | discussion_board_notificationWhereUniqueInput[]\n    connect?: discussion_board_notificationWhereUniqueInput | discussion_board_notificationWhereUniqueInput[]\n    update?: discussion_board_notificationUpdateWithWhereUniqueWithoutRecipient_userInput | discussion_board_notificationUpdateWithWhereUniqueWithoutRecipient_userInput[]\n    updateMany?: discussion_board_notificationUpdateManyWithWhereWithoutRecipient_userInput | discussion_board_notificationUpdateManyWithWhereWithoutRecipient_userInput[]\n    deleteMany?: discussion_board_notificationScalarWhereInput | discussion_board_notificationScalarWhereInput[]\n  }\n\n  export type discussion_board_subscriptionUpdateManyWithoutUserNestedInput = {\n    create?: XOR<discussion_board_subscriptionCreateWithoutUserInput, discussion_board_subscriptionUncheckedCreateWithoutUserInput> | discussion_board_subscriptionCreateWithoutUserInput[] | discussion_board_subscriptionUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussion_board_subscriptionCreateOrConnectWithoutUserInput | discussion_board_subscriptionCreateOrConnectWithoutUserInput[]\n    upsert?: discussion_board_subscriptionUpsertWithWhereUniqueWithoutUserInput | discussion_board_subscriptionUpsertWithWhereUniqueWithoutUserInput[]\n    createMany?: discussion_board_subscriptionCreateManyUserInputEnvelope\n    set?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n    disconnect?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n    delete?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n    connect?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n    update?: discussion_board_subscriptionUpdateWithWhereUniqueWithoutUserInput | discussion_board_subscriptionUpdateWithWhereUniqueWithoutUserInput[]\n    updateMany?: discussion_board_subscriptionUpdateManyWithWhereWithoutUserInput | discussion_board_subscriptionUpdateManyWithWhereWithoutUserInput[]\n    deleteMany?: discussion_board_subscriptionScalarWhereInput | discussion_board_subscriptionScalarWhereInput[]\n  }\n\n  export type discussion_board_reportUpdateManyWithoutReported_userNestedInput = {\n    create?: XOR<discussion_board_reportCreateWithoutReported_userInput, discussion_board_reportUncheckedCreateWithoutReported_userInput> | discussion_board_reportCreateWithoutReported_userInput[] | discussion_board_reportUncheckedCreateWithoutReported_userInput[]\n    connectOrCreate?: discussion_board_reportCreateOrConnectWithoutReported_userInput | discussion_board_reportCreateOrConnectWithoutReported_userInput[]\n    upsert?: discussion_board_reportUpsertWithWhereUniqueWithoutReported_userInput | discussion_board_reportUpsertWithWhereUniqueWithoutReported_userInput[]\n    createMany?: discussion_board_reportCreateManyReported_userInputEnvelope\n    set?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n    disconnect?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n    delete?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n    connect?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n    update?: discussion_board_reportUpdateWithWhereUniqueWithoutReported_userInput | discussion_board_reportUpdateWithWhereUniqueWithoutReported_userInput[]\n    updateMany?: discussion_board_reportUpdateManyWithWhereWithoutReported_userInput | discussion_board_reportUpdateManyWithWhereWithoutReported_userInput[]\n    deleteMany?: discussion_board_reportScalarWhereInput | discussion_board_reportScalarWhereInput[]\n  }\n\n  export type discussion_board_reportUpdateManyWithoutReporting_userNestedInput = {\n    create?: XOR<discussion_board_reportCreateWithoutReporting_userInput, discussion_board_reportUncheckedCreateWithoutReporting_userInput> | discussion_board_reportCreateWithoutReporting_userInput[] | discussion_board_reportUncheckedCreateWithoutReporting_userInput[]\n    connectOrCreate?: discussion_board_reportCreateOrConnectWithoutReporting_userInput | discussion_board_reportCreateOrConnectWithoutReporting_userInput[]\n    upsert?: discussion_board_reportUpsertWithWhereUniqueWithoutReporting_userInput | discussion_board_reportUpsertWithWhereUniqueWithoutReporting_userInput[]\n    createMany?: discussion_board_reportCreateManyReporting_userInputEnvelope\n    set?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n    disconnect?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n    delete?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n    connect?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n    update?: discussion_board_reportUpdateWithWhereUniqueWithoutReporting_userInput | discussion_board_reportUpdateWithWhereUniqueWithoutReporting_userInput[]\n    updateMany?: discussion_board_reportUpdateManyWithWhereWithoutReporting_userInput | discussion_board_reportUpdateManyWithWhereWithoutReporting_userInput[]\n    deleteMany?: discussion_board_reportScalarWhereInput | discussion_board_reportScalarWhereInput[]\n  }\n\n  export type discussion_board_moderator_actionUpdateManyWithoutUserNestedInput = {\n    create?: XOR<discussion_board_moderator_actionCreateWithoutUserInput, discussion_board_moderator_actionUncheckedCreateWithoutUserInput> | discussion_board_moderator_actionCreateWithoutUserInput[] | discussion_board_moderator_actionUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussion_board_moderator_actionCreateOrConnectWithoutUserInput | discussion_board_moderator_actionCreateOrConnectWithoutUserInput[]\n    upsert?: discussion_board_moderator_actionUpsertWithWhereUniqueWithoutUserInput | discussion_board_moderator_actionUpsertWithWhereUniqueWithoutUserInput[]\n    createMany?: discussion_board_moderator_actionCreateManyUserInputEnvelope\n    set?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    disconnect?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    delete?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    connect?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    update?: discussion_board_moderator_actionUpdateWithWhereUniqueWithoutUserInput | discussion_board_moderator_actionUpdateWithWhereUniqueWithoutUserInput[]\n    updateMany?: discussion_board_moderator_actionUpdateManyWithWhereWithoutUserInput | discussion_board_moderator_actionUpdateManyWithWhereWithoutUserInput[]\n    deleteMany?: discussion_board_moderator_actionScalarWhereInput | discussion_board_moderator_actionScalarWhereInput[]\n  }\n\n  export type discussion_board_audit_logUpdateManyWithoutActorNestedInput = {\n    create?: XOR<discussion_board_audit_logCreateWithoutActorInput, discussion_board_audit_logUncheckedCreateWithoutActorInput> | discussion_board_audit_logCreateWithoutActorInput[] | discussion_board_audit_logUncheckedCreateWithoutActorInput[]\n    connectOrCreate?: discussion_board_audit_logCreateOrConnectWithoutActorInput | discussion_board_audit_logCreateOrConnectWithoutActorInput[]\n    upsert?: discussion_board_audit_logUpsertWithWhereUniqueWithoutActorInput | discussion_board_audit_logUpsertWithWhereUniqueWithoutActorInput[]\n    createMany?: discussion_board_audit_logCreateManyActorInputEnvelope\n    set?: discussion_board_audit_logWhereUniqueInput | discussion_board_audit_logWhereUniqueInput[]\n    disconnect?: discussion_board_audit_logWhereUniqueInput | discussion_board_audit_logWhereUniqueInput[]\n    delete?: discussion_board_audit_logWhereUniqueInput | discussion_board_audit_logWhereUniqueInput[]\n    connect?: discussion_board_audit_logWhereUniqueInput | discussion_board_audit_logWhereUniqueInput[]\n    update?: discussion_board_audit_logUpdateWithWhereUniqueWithoutActorInput | discussion_board_audit_logUpdateWithWhereUniqueWithoutActorInput[]\n    updateMany?: discussion_board_audit_logUpdateManyWithWhereWithoutActorInput | discussion_board_audit_logUpdateManyWithWhereWithoutActorInput[]\n    deleteMany?: discussion_board_audit_logScalarWhereInput | discussion_board_audit_logScalarWhereInput[]\n  }\n\n  export type discussion_board_audit_logUpdateManyWithoutAffected_userNestedInput = {\n    create?: XOR<discussion_board_audit_logCreateWithoutAffected_userInput, discussion_board_audit_logUncheckedCreateWithoutAffected_userInput> | discussion_board_audit_logCreateWithoutAffected_userInput[] | discussion_board_audit_logUncheckedCreateWithoutAffected_userInput[]\n    connectOrCreate?: discussion_board_audit_logCreateOrConnectWithoutAffected_userInput | discussion_board_audit_logCreateOrConnectWithoutAffected_userInput[]\n    upsert?: discussion_board_audit_logUpsertWithWhereUniqueWithoutAffected_userInput | discussion_board_audit_logUpsertWithWhereUniqueWithoutAffected_userInput[]\n    createMany?: discussion_board_audit_logCreateManyAffected_userInputEnvelope\n    set?: discussion_board_audit_logWhereUniqueInput | discussion_board_audit_logWhereUniqueInput[]\n    disconnect?: discussion_board_audit_logWhereUniqueInput | discussion_board_audit_logWhereUniqueInput[]\n    delete?: discussion_board_audit_logWhereUniqueInput | discussion_board_audit_logWhereUniqueInput[]\n    connect?: discussion_board_audit_logWhereUniqueInput | discussion_board_audit_logWhereUniqueInput[]\n    update?: discussion_board_audit_logUpdateWithWhereUniqueWithoutAffected_userInput | discussion_board_audit_logUpdateWithWhereUniqueWithoutAffected_userInput[]\n    updateMany?: discussion_board_audit_logUpdateManyWithWhereWithoutAffected_userInput | discussion_board_audit_logUpdateManyWithWhereWithoutAffected_userInput[]\n    deleteMany?: discussion_board_audit_logScalarWhereInput | discussion_board_audit_logScalarWhereInput[]\n  }\n\n  export type discussion_board_warningUpdateManyWithoutUserNestedInput = {\n    create?: XOR<discussion_board_warningCreateWithoutUserInput, discussion_board_warningUncheckedCreateWithoutUserInput> | discussion_board_warningCreateWithoutUserInput[] | discussion_board_warningUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussion_board_warningCreateOrConnectWithoutUserInput | discussion_board_warningCreateOrConnectWithoutUserInput[]\n    upsert?: discussion_board_warningUpsertWithWhereUniqueWithoutUserInput | discussion_board_warningUpsertWithWhereUniqueWithoutUserInput[]\n    createMany?: discussion_board_warningCreateManyUserInputEnvelope\n    set?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n    disconnect?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n    delete?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n    connect?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n    update?: discussion_board_warningUpdateWithWhereUniqueWithoutUserInput | discussion_board_warningUpdateWithWhereUniqueWithoutUserInput[]\n    updateMany?: discussion_board_warningUpdateManyWithWhereWithoutUserInput | discussion_board_warningUpdateManyWithWhereWithoutUserInput[]\n    deleteMany?: discussion_board_warningScalarWhereInput | discussion_board_warningScalarWhereInput[]\n  }\n\n  export type discussion_board_banUpdateManyWithoutUserNestedInput = {\n    create?: XOR<discussion_board_banCreateWithoutUserInput, discussion_board_banUncheckedCreateWithoutUserInput> | discussion_board_banCreateWithoutUserInput[] | discussion_board_banUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussion_board_banCreateOrConnectWithoutUserInput | discussion_board_banCreateOrConnectWithoutUserInput[]\n    upsert?: discussion_board_banUpsertWithWhereUniqueWithoutUserInput | discussion_board_banUpsertWithWhereUniqueWithoutUserInput[]\n    createMany?: discussion_board_banCreateManyUserInputEnvelope\n    set?: discussion_board_banWhereUniqueInput | discussion_board_banWhereUniqueInput[]\n    disconnect?: discussion_board_banWhereUniqueInput | discussion_board_banWhereUniqueInput[]\n    delete?: discussion_board_banWhereUniqueInput | discussion_board_banWhereUniqueInput[]\n    connect?: discussion_board_banWhereUniqueInput | discussion_board_banWhereUniqueInput[]\n    update?: discussion_board_banUpdateWithWhereUniqueWithoutUserInput | discussion_board_banUpdateWithWhereUniqueWithoutUserInput[]\n    updateMany?: discussion_board_banUpdateManyWithWhereWithoutUserInput | discussion_board_banUpdateManyWithWhereWithoutUserInput[]\n    deleteMany?: discussion_board_banScalarWhereInput | discussion_board_banScalarWhereInput[]\n  }\n\n  export type discussion_board_user_activityUpdateOneWithoutDiscussion_board_userNestedInput = {\n    create?: XOR<discussion_board_user_activityCreateWithoutDiscussion_board_userInput, discussion_board_user_activityUncheckedCreateWithoutDiscussion_board_userInput>\n    connectOrCreate?: discussion_board_user_activityCreateOrConnectWithoutDiscussion_board_userInput\n    upsert?: discussion_board_user_activityUpsertWithoutDiscussion_board_userInput\n    disconnect?: discussion_board_user_activityWhereInput | boolean\n    delete?: discussion_board_user_activityWhereInput | boolean\n    connect?: discussion_board_user_activityWhereUniqueInput\n    update?: XOR<XOR<discussion_board_user_activityUpdateToOneWithWhereWithoutDiscussion_board_userInput, discussion_board_user_activityUpdateWithoutDiscussion_board_userInput>, discussion_board_user_activityUncheckedUpdateWithoutDiscussion_board_userInput>\n  }\n\n  export type discussion_board_moderatorsUncheckedUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput = {\n    create?: XOR<discussion_board_moderatorsCreateWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput, discussion_board_moderatorsUncheckedCreateWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput>\n    connectOrCreate?: discussion_board_moderatorsCreateOrConnectWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    upsert?: discussion_board_moderatorsUpsertWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    disconnect?: discussion_board_moderatorsWhereInput | boolean\n    delete?: discussion_board_moderatorsWhereInput | boolean\n    connect?: discussion_board_moderatorsWhereUniqueInput\n    update?: XOR<XOR<discussion_board_moderatorsUpdateToOneWithWhereWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput, discussion_board_moderatorsUpdateWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput>, discussion_board_moderatorsUncheckedUpdateWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput>\n  }\n\n  export type discussion_board_adminsUncheckedUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput = {\n    create?: XOR<discussion_board_adminsCreateWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput, discussion_board_adminsUncheckedCreateWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput>\n    connectOrCreate?: discussion_board_adminsCreateOrConnectWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    upsert?: discussion_board_adminsUpsertWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    disconnect?: discussion_board_adminsWhereInput | boolean\n    delete?: discussion_board_adminsWhereInput | boolean\n    connect?: discussion_board_adminsWhereUniqueInput\n    update?: XOR<XOR<discussion_board_adminsUpdateToOneWithWhereWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput, discussion_board_adminsUpdateWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput>, discussion_board_adminsUncheckedUpdateWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput>\n  }\n\n  export type discussion_board_user_profilesUncheckedUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput = {\n    create?: XOR<discussion_board_user_profilesCreateWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput, discussion_board_user_profilesUncheckedCreateWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput>\n    connectOrCreate?: discussion_board_user_profilesCreateOrConnectWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    upsert?: discussion_board_user_profilesUpsertWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    disconnect?: discussion_board_user_profilesWhereInput | boolean\n    delete?: discussion_board_user_profilesWhereInput | boolean\n    connect?: discussion_board_user_profilesWhereUniqueInput\n    update?: XOR<XOR<discussion_board_user_profilesUpdateToOneWithWhereWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput, discussion_board_user_profilesUpdateWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput>, discussion_board_user_profilesUncheckedUpdateWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput>\n  }\n\n  export type discussion_board_user_settingsUncheckedUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput = {\n    create?: XOR<discussion_board_user_settingsCreateWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput, discussion_board_user_settingsUncheckedCreateWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput>\n    connectOrCreate?: discussion_board_user_settingsCreateOrConnectWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    upsert?: discussion_board_user_settingsUpsertWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    disconnect?: discussion_board_user_settingsWhereInput | boolean\n    delete?: discussion_board_user_settingsWhereInput | boolean\n    connect?: discussion_board_user_settingsWhereUniqueInput\n    update?: XOR<XOR<discussion_board_user_settingsUpdateToOneWithWhereWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput, discussion_board_user_settingsUpdateWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput>, discussion_board_user_settingsUncheckedUpdateWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput>\n  }\n\n  export type discussion_board_threadUncheckedUpdateManyWithoutCreator_userNestedInput = {\n    create?: XOR<discussion_board_threadCreateWithoutCreator_userInput, discussion_board_threadUncheckedCreateWithoutCreator_userInput> | discussion_board_threadCreateWithoutCreator_userInput[] | discussion_board_threadUncheckedCreateWithoutCreator_userInput[]\n    connectOrCreate?: discussion_board_threadCreateOrConnectWithoutCreator_userInput | discussion_board_threadCreateOrConnectWithoutCreator_userInput[]\n    upsert?: discussion_board_threadUpsertWithWhereUniqueWithoutCreator_userInput | discussion_board_threadUpsertWithWhereUniqueWithoutCreator_userInput[]\n    createMany?: discussion_board_threadCreateManyCreator_userInputEnvelope\n    set?: discussion_board_threadWhereUniqueInput | discussion_board_threadWhereUniqueInput[]\n    disconnect?: discussion_board_threadWhereUniqueInput | discussion_board_threadWhereUniqueInput[]\n    delete?: discussion_board_threadWhereUniqueInput | discussion_board_threadWhereUniqueInput[]\n    connect?: discussion_board_threadWhereUniqueInput | discussion_board_threadWhereUniqueInput[]\n    update?: discussion_board_threadUpdateWithWhereUniqueWithoutCreator_userInput | discussion_board_threadUpdateWithWhereUniqueWithoutCreator_userInput[]\n    updateMany?: discussion_board_threadUpdateManyWithWhereWithoutCreator_userInput | discussion_board_threadUpdateManyWithWhereWithoutCreator_userInput[]\n    deleteMany?: discussion_board_threadScalarWhereInput | discussion_board_threadScalarWhereInput[]\n  }\n\n  export type discussion_board_postUncheckedUpdateManyWithoutAuthor_userNestedInput = {\n    create?: XOR<discussion_board_postCreateWithoutAuthor_userInput, discussion_board_postUncheckedCreateWithoutAuthor_userInput> | discussion_board_postCreateWithoutAuthor_userInput[] | discussion_board_postUncheckedCreateWithoutAuthor_userInput[]\n    connectOrCreate?: discussion_board_postCreateOrConnectWithoutAuthor_userInput | discussion_board_postCreateOrConnectWithoutAuthor_userInput[]\n    upsert?: discussion_board_postUpsertWithWhereUniqueWithoutAuthor_userInput | discussion_board_postUpsertWithWhereUniqueWithoutAuthor_userInput[]\n    createMany?: discussion_board_postCreateManyAuthor_userInputEnvelope\n    set?: discussion_board_postWhereUniqueInput | discussion_board_postWhereUniqueInput[]\n    disconnect?: discussion_board_postWhereUniqueInput | discussion_board_postWhereUniqueInput[]\n    delete?: discussion_board_postWhereUniqueInput | discussion_board_postWhereUniqueInput[]\n    connect?: discussion_board_postWhereUniqueInput | discussion_board_postWhereUniqueInput[]\n    update?: discussion_board_postUpdateWithWhereUniqueWithoutAuthor_userInput | discussion_board_postUpdateWithWhereUniqueWithoutAuthor_userInput[]\n    updateMany?: discussion_board_postUpdateManyWithWhereWithoutAuthor_userInput | discussion_board_postUpdateManyWithWhereWithoutAuthor_userInput[]\n    deleteMany?: discussion_board_postScalarWhereInput | discussion_board_postScalarWhereInput[]\n  }\n\n  export type discussion_board_commentUncheckedUpdateManyWithoutAuthor_userNestedInput = {\n    create?: XOR<discussion_board_commentCreateWithoutAuthor_userInput, discussion_board_commentUncheckedCreateWithoutAuthor_userInput> | discussion_board_commentCreateWithoutAuthor_userInput[] | discussion_board_commentUncheckedCreateWithoutAuthor_userInput[]\n    connectOrCreate?: discussion_board_commentCreateOrConnectWithoutAuthor_userInput | discussion_board_commentCreateOrConnectWithoutAuthor_userInput[]\n    upsert?: discussion_board_commentUpsertWithWhereUniqueWithoutAuthor_userInput | discussion_board_commentUpsertWithWhereUniqueWithoutAuthor_userInput[]\n    createMany?: discussion_board_commentCreateManyAuthor_userInputEnvelope\n    set?: discussion_board_commentWhereUniqueInput | discussion_board_commentWhereUniqueInput[]\n    disconnect?: discussion_board_commentWhereUniqueInput | discussion_board_commentWhereUniqueInput[]\n    delete?: discussion_board_commentWhereUniqueInput | discussion_board_commentWhereUniqueInput[]\n    connect?: discussion_board_commentWhereUniqueInput | discussion_board_commentWhereUniqueInput[]\n    update?: discussion_board_commentUpdateWithWhereUniqueWithoutAuthor_userInput | discussion_board_commentUpdateWithWhereUniqueWithoutAuthor_userInput[]\n    updateMany?: discussion_board_commentUpdateManyWithWhereWithoutAuthor_userInput | discussion_board_commentUpdateManyWithWhereWithoutAuthor_userInput[]\n    deleteMany?: discussion_board_commentScalarWhereInput | discussion_board_commentScalarWhereInput[]\n  }\n\n  export type discussion_board_voteUncheckedUpdateManyWithoutUserNestedInput = {\n    create?: XOR<discussion_board_voteCreateWithoutUserInput, discussion_board_voteUncheckedCreateWithoutUserInput> | discussion_board_voteCreateWithoutUserInput[] | discussion_board_voteUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussion_board_voteCreateOrConnectWithoutUserInput | discussion_board_voteCreateOrConnectWithoutUserInput[]\n    upsert?: discussion_board_voteUpsertWithWhereUniqueWithoutUserInput | discussion_board_voteUpsertWithWhereUniqueWithoutUserInput[]\n    createMany?: discussion_board_voteCreateManyUserInputEnvelope\n    set?: discussion_board_voteWhereUniqueInput | discussion_board_voteWhereUniqueInput[]\n    disconnect?: discussion_board_voteWhereUniqueInput | discussion_board_voteWhereUniqueInput[]\n    delete?: discussion_board_voteWhereUniqueInput | discussion_board_voteWhereUniqueInput[]\n    connect?: discussion_board_voteWhereUniqueInput | discussion_board_voteWhereUniqueInput[]\n    update?: discussion_board_voteUpdateWithWhereUniqueWithoutUserInput | discussion_board_voteUpdateWithWhereUniqueWithoutUserInput[]\n    updateMany?: discussion_board_voteUpdateManyWithWhereWithoutUserInput | discussion_board_voteUpdateManyWithWhereWithoutUserInput[]\n    deleteMany?: discussion_board_voteScalarWhereInput | discussion_board_voteScalarWhereInput[]\n  }\n\n  export type discussion_board_reactionUncheckedUpdateManyWithoutUserNestedInput = {\n    create?: XOR<discussion_board_reactionCreateWithoutUserInput, discussion_board_reactionUncheckedCreateWithoutUserInput> | discussion_board_reactionCreateWithoutUserInput[] | discussion_board_reactionUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussion_board_reactionCreateOrConnectWithoutUserInput | discussion_board_reactionCreateOrConnectWithoutUserInput[]\n    upsert?: discussion_board_reactionUpsertWithWhereUniqueWithoutUserInput | discussion_board_reactionUpsertWithWhereUniqueWithoutUserInput[]\n    createMany?: discussion_board_reactionCreateManyUserInputEnvelope\n    set?: discussion_board_reactionWhereUniqueInput | discussion_board_reactionWhereUniqueInput[]\n    disconnect?: discussion_board_reactionWhereUniqueInput | discussion_board_reactionWhereUniqueInput[]\n    delete?: discussion_board_reactionWhereUniqueInput | discussion_board_reactionWhereUniqueInput[]\n    connect?: discussion_board_reactionWhereUniqueInput | discussion_board_reactionWhereUniqueInput[]\n    update?: discussion_board_reactionUpdateWithWhereUniqueWithoutUserInput | discussion_board_reactionUpdateWithWhereUniqueWithoutUserInput[]\n    updateMany?: discussion_board_reactionUpdateManyWithWhereWithoutUserInput | discussion_board_reactionUpdateManyWithWhereWithoutUserInput[]\n    deleteMany?: discussion_board_reactionScalarWhereInput | discussion_board_reactionScalarWhereInput[]\n  }\n\n  export type discussion_board_bookmarkUncheckedUpdateManyWithoutUserNestedInput = {\n    create?: XOR<discussion_board_bookmarkCreateWithoutUserInput, discussion_board_bookmarkUncheckedCreateWithoutUserInput> | discussion_board_bookmarkCreateWithoutUserInput[] | discussion_board_bookmarkUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussion_board_bookmarkCreateOrConnectWithoutUserInput | discussion_board_bookmarkCreateOrConnectWithoutUserInput[]\n    upsert?: discussion_board_bookmarkUpsertWithWhereUniqueWithoutUserInput | discussion_board_bookmarkUpsertWithWhereUniqueWithoutUserInput[]\n    createMany?: discussion_board_bookmarkCreateManyUserInputEnvelope\n    set?: discussion_board_bookmarkWhereUniqueInput | discussion_board_bookmarkWhereUniqueInput[]\n    disconnect?: discussion_board_bookmarkWhereUniqueInput | discussion_board_bookmarkWhereUniqueInput[]\n    delete?: discussion_board_bookmarkWhereUniqueInput | discussion_board_bookmarkWhereUniqueInput[]\n    connect?: discussion_board_bookmarkWhereUniqueInput | discussion_board_bookmarkWhereUniqueInput[]\n    update?: discussion_board_bookmarkUpdateWithWhereUniqueWithoutUserInput | discussion_board_bookmarkUpdateWithWhereUniqueWithoutUserInput[]\n    updateMany?: discussion_board_bookmarkUpdateManyWithWhereWithoutUserInput | discussion_board_bookmarkUpdateManyWithWhereWithoutUserInput[]\n    deleteMany?: discussion_board_bookmarkScalarWhereInput | discussion_board_bookmarkScalarWhereInput[]\n  }\n\n  export type discussion_board_notificationUncheckedUpdateManyWithoutRecipient_userNestedInput = {\n    create?: XOR<discussion_board_notificationCreateWithoutRecipient_userInput, discussion_board_notificationUncheckedCreateWithoutRecipient_userInput> | discussion_board_notificationCreateWithoutRecipient_userInput[] | discussion_board_notificationUncheckedCreateWithoutRecipient_userInput[]\n    connectOrCreate?: discussion_board_notificationCreateOrConnectWithoutRecipient_userInput | discussion_board_notificationCreateOrConnectWithoutRecipient_userInput[]\n    upsert?: discussion_board_notificationUpsertWithWhereUniqueWithoutRecipient_userInput | discussion_board_notificationUpsertWithWhereUniqueWithoutRecipient_userInput[]\n    createMany?: discussion_board_notificationCreateManyRecipient_userInputEnvelope\n    set?: discussion_board_notificationWhereUniqueInput | discussion_board_notificationWhereUniqueInput[]\n    disconnect?: discussion_board_notificationWhereUniqueInput | discussion_board_notificationWhereUniqueInput[]\n    delete?: discussion_board_notificationWhereUniqueInput | discussion_board_notificationWhereUniqueInput[]\n    connect?: discussion_board_notificationWhereUniqueInput | discussion_board_notificationWhereUniqueInput[]\n    update?: discussion_board_notificationUpdateWithWhereUniqueWithoutRecipient_userInput | discussion_board_notificationUpdateWithWhereUniqueWithoutRecipient_userInput[]\n    updateMany?: discussion_board_notificationUpdateManyWithWhereWithoutRecipient_userInput | discussion_board_notificationUpdateManyWithWhereWithoutRecipient_userInput[]\n    deleteMany?: discussion_board_notificationScalarWhereInput | discussion_board_notificationScalarWhereInput[]\n  }\n\n  export type discussion_board_subscriptionUncheckedUpdateManyWithoutUserNestedInput = {\n    create?: XOR<discussion_board_subscriptionCreateWithoutUserInput, discussion_board_subscriptionUncheckedCreateWithoutUserInput> | discussion_board_subscriptionCreateWithoutUserInput[] | discussion_board_subscriptionUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussion_board_subscriptionCreateOrConnectWithoutUserInput | discussion_board_subscriptionCreateOrConnectWithoutUserInput[]\n    upsert?: discussion_board_subscriptionUpsertWithWhereUniqueWithoutUserInput | discussion_board_subscriptionUpsertWithWhereUniqueWithoutUserInput[]\n    createMany?: discussion_board_subscriptionCreateManyUserInputEnvelope\n    set?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n    disconnect?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n    delete?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n    connect?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n    update?: discussion_board_subscriptionUpdateWithWhereUniqueWithoutUserInput | discussion_board_subscriptionUpdateWithWhereUniqueWithoutUserInput[]\n    updateMany?: discussion_board_subscriptionUpdateManyWithWhereWithoutUserInput | discussion_board_subscriptionUpdateManyWithWhereWithoutUserInput[]\n    deleteMany?: discussion_board_subscriptionScalarWhereInput | discussion_board_subscriptionScalarWhereInput[]\n  }\n\n  export type discussion_board_reportUncheckedUpdateManyWithoutReported_userNestedInput = {\n    create?: XOR<discussion_board_reportCreateWithoutReported_userInput, discussion_board_reportUncheckedCreateWithoutReported_userInput> | discussion_board_reportCreateWithoutReported_userInput[] | discussion_board_reportUncheckedCreateWithoutReported_userInput[]\n    connectOrCreate?: discussion_board_reportCreateOrConnectWithoutReported_userInput | discussion_board_reportCreateOrConnectWithoutReported_userInput[]\n    upsert?: discussion_board_reportUpsertWithWhereUniqueWithoutReported_userInput | discussion_board_reportUpsertWithWhereUniqueWithoutReported_userInput[]\n    createMany?: discussion_board_reportCreateManyReported_userInputEnvelope\n    set?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n    disconnect?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n    delete?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n    connect?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n    update?: discussion_board_reportUpdateWithWhereUniqueWithoutReported_userInput | discussion_board_reportUpdateWithWhereUniqueWithoutReported_userInput[]\n    updateMany?: discussion_board_reportUpdateManyWithWhereWithoutReported_userInput | discussion_board_reportUpdateManyWithWhereWithoutReported_userInput[]\n    deleteMany?: discussion_board_reportScalarWhereInput | discussion_board_reportScalarWhereInput[]\n  }\n\n  export type discussion_board_reportUncheckedUpdateManyWithoutReporting_userNestedInput = {\n    create?: XOR<discussion_board_reportCreateWithoutReporting_userInput, discussion_board_reportUncheckedCreateWithoutReporting_userInput> | discussion_board_reportCreateWithoutReporting_userInput[] | discussion_board_reportUncheckedCreateWithoutReporting_userInput[]\n    connectOrCreate?: discussion_board_reportCreateOrConnectWithoutReporting_userInput | discussion_board_reportCreateOrConnectWithoutReporting_userInput[]\n    upsert?: discussion_board_reportUpsertWithWhereUniqueWithoutReporting_userInput | discussion_board_reportUpsertWithWhereUniqueWithoutReporting_userInput[]\n    createMany?: discussion_board_reportCreateManyReporting_userInputEnvelope\n    set?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n    disconnect?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n    delete?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n    connect?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n    update?: discussion_board_reportUpdateWithWhereUniqueWithoutReporting_userInput | discussion_board_reportUpdateWithWhereUniqueWithoutReporting_userInput[]\n    updateMany?: discussion_board_reportUpdateManyWithWhereWithoutReporting_userInput | discussion_board_reportUpdateManyWithWhereWithoutReporting_userInput[]\n    deleteMany?: discussion_board_reportScalarWhereInput | discussion_board_reportScalarWhereInput[]\n  }\n\n  export type discussion_board_moderator_actionUncheckedUpdateManyWithoutUserNestedInput = {\n    create?: XOR<discussion_board_moderator_actionCreateWithoutUserInput, discussion_board_moderator_actionUncheckedCreateWithoutUserInput> | discussion_board_moderator_actionCreateWithoutUserInput[] | discussion_board_moderator_actionUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussion_board_moderator_actionCreateOrConnectWithoutUserInput | discussion_board_moderator_actionCreateOrConnectWithoutUserInput[]\n    upsert?: discussion_board_moderator_actionUpsertWithWhereUniqueWithoutUserInput | discussion_board_moderator_actionUpsertWithWhereUniqueWithoutUserInput[]\n    createMany?: discussion_board_moderator_actionCreateManyUserInputEnvelope\n    set?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    disconnect?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    delete?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    connect?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    update?: discussion_board_moderator_actionUpdateWithWhereUniqueWithoutUserInput | discussion_board_moderator_actionUpdateWithWhereUniqueWithoutUserInput[]\n    updateMany?: discussion_board_moderator_actionUpdateManyWithWhereWithoutUserInput | discussion_board_moderator_actionUpdateManyWithWhereWithoutUserInput[]\n    deleteMany?: discussion_board_moderator_actionScalarWhereInput | discussion_board_moderator_actionScalarWhereInput[]\n  }\n\n  export type discussion_board_audit_logUncheckedUpdateManyWithoutActorNestedInput = {\n    create?: XOR<discussion_board_audit_logCreateWithoutActorInput, discussion_board_audit_logUncheckedCreateWithoutActorInput> | discussion_board_audit_logCreateWithoutActorInput[] | discussion_board_audit_logUncheckedCreateWithoutActorInput[]\n    connectOrCreate?: discussion_board_audit_logCreateOrConnectWithoutActorInput | discussion_board_audit_logCreateOrConnectWithoutActorInput[]\n    upsert?: discussion_board_audit_logUpsertWithWhereUniqueWithoutActorInput | discussion_board_audit_logUpsertWithWhereUniqueWithoutActorInput[]\n    createMany?: discussion_board_audit_logCreateManyActorInputEnvelope\n    set?: discussion_board_audit_logWhereUniqueInput | discussion_board_audit_logWhereUniqueInput[]\n    disconnect?: discussion_board_audit_logWhereUniqueInput | discussion_board_audit_logWhereUniqueInput[]\n    delete?: discussion_board_audit_logWhereUniqueInput | discussion_board_audit_logWhereUniqueInput[]\n    connect?: discussion_board_audit_logWhereUniqueInput | discussion_board_audit_logWhereUniqueInput[]\n    update?: discussion_board_audit_logUpdateWithWhereUniqueWithoutActorInput | discussion_board_audit_logUpdateWithWhereUniqueWithoutActorInput[]\n    updateMany?: discussion_board_audit_logUpdateManyWithWhereWithoutActorInput | discussion_board_audit_logUpdateManyWithWhereWithoutActorInput[]\n    deleteMany?: discussion_board_audit_logScalarWhereInput | discussion_board_audit_logScalarWhereInput[]\n  }\n\n  export type discussion_board_audit_logUncheckedUpdateManyWithoutAffected_userNestedInput = {\n    create?: XOR<discussion_board_audit_logCreateWithoutAffected_userInput, discussion_board_audit_logUncheckedCreateWithoutAffected_userInput> | discussion_board_audit_logCreateWithoutAffected_userInput[] | discussion_board_audit_logUncheckedCreateWithoutAffected_userInput[]\n    connectOrCreate?: discussion_board_audit_logCreateOrConnectWithoutAffected_userInput | discussion_board_audit_logCreateOrConnectWithoutAffected_userInput[]\n    upsert?: discussion_board_audit_logUpsertWithWhereUniqueWithoutAffected_userInput | discussion_board_audit_logUpsertWithWhereUniqueWithoutAffected_userInput[]\n    createMany?: discussion_board_audit_logCreateManyAffected_userInputEnvelope\n    set?: discussion_board_audit_logWhereUniqueInput | discussion_board_audit_logWhereUniqueInput[]\n    disconnect?: discussion_board_audit_logWhereUniqueInput | discussion_board_audit_logWhereUniqueInput[]\n    delete?: discussion_board_audit_logWhereUniqueInput | discussion_board_audit_logWhereUniqueInput[]\n    connect?: discussion_board_audit_logWhereUniqueInput | discussion_board_audit_logWhereUniqueInput[]\n    update?: discussion_board_audit_logUpdateWithWhereUniqueWithoutAffected_userInput | discussion_board_audit_logUpdateWithWhereUniqueWithoutAffected_userInput[]\n    updateMany?: discussion_board_audit_logUpdateManyWithWhereWithoutAffected_userInput | discussion_board_audit_logUpdateManyWithWhereWithoutAffected_userInput[]\n    deleteMany?: discussion_board_audit_logScalarWhereInput | discussion_board_audit_logScalarWhereInput[]\n  }\n\n  export type discussion_board_warningUncheckedUpdateManyWithoutUserNestedInput = {\n    create?: XOR<discussion_board_warningCreateWithoutUserInput, discussion_board_warningUncheckedCreateWithoutUserInput> | discussion_board_warningCreateWithoutUserInput[] | discussion_board_warningUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussion_board_warningCreateOrConnectWithoutUserInput | discussion_board_warningCreateOrConnectWithoutUserInput[]\n    upsert?: discussion_board_warningUpsertWithWhereUniqueWithoutUserInput | discussion_board_warningUpsertWithWhereUniqueWithoutUserInput[]\n    createMany?: discussion_board_warningCreateManyUserInputEnvelope\n    set?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n    disconnect?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n    delete?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n    connect?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n    update?: discussion_board_warningUpdateWithWhereUniqueWithoutUserInput | discussion_board_warningUpdateWithWhereUniqueWithoutUserInput[]\n    updateMany?: discussion_board_warningUpdateManyWithWhereWithoutUserInput | discussion_board_warningUpdateManyWithWhereWithoutUserInput[]\n    deleteMany?: discussion_board_warningScalarWhereInput | discussion_board_warningScalarWhereInput[]\n  }\n\n  export type discussion_board_banUncheckedUpdateManyWithoutUserNestedInput = {\n    create?: XOR<discussion_board_banCreateWithoutUserInput, discussion_board_banUncheckedCreateWithoutUserInput> | discussion_board_banCreateWithoutUserInput[] | discussion_board_banUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussion_board_banCreateOrConnectWithoutUserInput | discussion_board_banCreateOrConnectWithoutUserInput[]\n    upsert?: discussion_board_banUpsertWithWhereUniqueWithoutUserInput | discussion_board_banUpsertWithWhereUniqueWithoutUserInput[]\n    createMany?: discussion_board_banCreateManyUserInputEnvelope\n    set?: discussion_board_banWhereUniqueInput | discussion_board_banWhereUniqueInput[]\n    disconnect?: discussion_board_banWhereUniqueInput | discussion_board_banWhereUniqueInput[]\n    delete?: discussion_board_banWhereUniqueInput | discussion_board_banWhereUniqueInput[]\n    connect?: discussion_board_banWhereUniqueInput | discussion_board_banWhereUniqueInput[]\n    update?: discussion_board_banUpdateWithWhereUniqueWithoutUserInput | discussion_board_banUpdateWithWhereUniqueWithoutUserInput[]\n    updateMany?: discussion_board_banUpdateManyWithWhereWithoutUserInput | discussion_board_banUpdateManyWithWhereWithoutUserInput[]\n    deleteMany?: discussion_board_banScalarWhereInput | discussion_board_banScalarWhereInput[]\n  }\n\n  export type discussion_board_user_activityUncheckedUpdateOneWithoutDiscussion_board_userNestedInput = {\n    create?: XOR<discussion_board_user_activityCreateWithoutDiscussion_board_userInput, discussion_board_user_activityUncheckedCreateWithoutDiscussion_board_userInput>\n    connectOrCreate?: discussion_board_user_activityCreateOrConnectWithoutDiscussion_board_userInput\n    upsert?: discussion_board_user_activityUpsertWithoutDiscussion_board_userInput\n    disconnect?: discussion_board_user_activityWhereInput | boolean\n    delete?: discussion_board_user_activityWhereInput | boolean\n    connect?: discussion_board_user_activityWhereUniqueInput\n    update?: XOR<XOR<discussion_board_user_activityUpdateToOneWithWhereWithoutDiscussion_board_userInput, discussion_board_user_activityUpdateWithoutDiscussion_board_userInput>, discussion_board_user_activityUncheckedUpdateWithoutDiscussion_board_userInput>\n  }\n\n  export type NullableStringFieldUpdateOperationsInput = {\n    set?: string | null\n  }\n\n  export type discussion_board_usersCreateNestedOneWithoutDiscussion_board_moderatorsInput = {\n    create?: XOR<discussion_board_usersCreateWithoutDiscussion_board_moderatorsInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_moderatorsInput>\n    connectOrCreate?: discussion_board_usersCreateOrConnectWithoutDiscussion_board_moderatorsInput\n    connect?: discussion_board_usersWhereUniqueInput\n  }\n\n  export type discussion_board_moderator_actionCreateNestedManyWithoutModeratorInput = {\n    create?: XOR<discussion_board_moderator_actionCreateWithoutModeratorInput, discussion_board_moderator_actionUncheckedCreateWithoutModeratorInput> | discussion_board_moderator_actionCreateWithoutModeratorInput[] | discussion_board_moderator_actionUncheckedCreateWithoutModeratorInput[]\n    connectOrCreate?: discussion_board_moderator_actionCreateOrConnectWithoutModeratorInput | discussion_board_moderator_actionCreateOrConnectWithoutModeratorInput[]\n    createMany?: discussion_board_moderator_actionCreateManyModeratorInputEnvelope\n    connect?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n  }\n\n  export type discussion_board_warningCreateNestedManyWithoutModeratorInput = {\n    create?: XOR<discussion_board_warningCreateWithoutModeratorInput, discussion_board_warningUncheckedCreateWithoutModeratorInput> | discussion_board_warningCreateWithoutModeratorInput[] | discussion_board_warningUncheckedCreateWithoutModeratorInput[]\n    connectOrCreate?: discussion_board_warningCreateOrConnectWithoutModeratorInput | discussion_board_warningCreateOrConnectWithoutModeratorInput[]\n    createMany?: discussion_board_warningCreateManyModeratorInputEnvelope\n    connect?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n  }\n\n  export type discussion_board_banCreateNestedManyWithoutModeratorInput = {\n    create?: XOR<discussion_board_banCreateWithoutModeratorInput, discussion_board_banUncheckedCreateWithoutModeratorInput> | discussion_board_banCreateWithoutModeratorInput[] | discussion_board_banUncheckedCreateWithoutModeratorInput[]\n    connectOrCreate?: discussion_board_banCreateOrConnectWithoutModeratorInput | discussion_board_banCreateOrConnectWithoutModeratorInput[]\n    createMany?: discussion_board_banCreateManyModeratorInputEnvelope\n    connect?: discussion_board_banWhereUniqueInput | discussion_board_banWhereUniqueInput[]\n  }\n\n  export type discussion_board_content_abuse_metricCreateNestedManyWithoutDiscussion_board_moderatorInput = {\n    create?: XOR<discussion_board_content_abuse_metricCreateWithoutDiscussion_board_moderatorInput, discussion_board_content_abuse_metricUncheckedCreateWithoutDiscussion_board_moderatorInput> | discussion_board_content_abuse_metricCreateWithoutDiscussion_board_moderatorInput[] | discussion_board_content_abuse_metricUncheckedCreateWithoutDiscussion_board_moderatorInput[]\n    connectOrCreate?: discussion_board_content_abuse_metricCreateOrConnectWithoutDiscussion_board_moderatorInput | discussion_board_content_abuse_metricCreateOrConnectWithoutDiscussion_board_moderatorInput[]\n    createMany?: discussion_board_content_abuse_metricCreateManyDiscussion_board_moderatorInputEnvelope\n    connect?: discussion_board_content_abuse_metricWhereUniqueInput | discussion_board_content_abuse_metricWhereUniqueInput[]\n  }\n\n  export type discussion_board_moderator_actionUncheckedCreateNestedManyWithoutModeratorInput = {\n    create?: XOR<discussion_board_moderator_actionCreateWithoutModeratorInput, discussion_board_moderator_actionUncheckedCreateWithoutModeratorInput> | discussion_board_moderator_actionCreateWithoutModeratorInput[] | discussion_board_moderator_actionUncheckedCreateWithoutModeratorInput[]\n    connectOrCreate?: discussion_board_moderator_actionCreateOrConnectWithoutModeratorInput | discussion_board_moderator_actionCreateOrConnectWithoutModeratorInput[]\n    createMany?: discussion_board_moderator_actionCreateManyModeratorInputEnvelope\n    connect?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n  }\n\n  export type discussion_board_warningUncheckedCreateNestedManyWithoutModeratorInput = {\n    create?: XOR<discussion_board_warningCreateWithoutModeratorInput, discussion_board_warningUncheckedCreateWithoutModeratorInput> | discussion_board_warningCreateWithoutModeratorInput[] | discussion_board_warningUncheckedCreateWithoutModeratorInput[]\n    connectOrCreate?: discussion_board_warningCreateOrConnectWithoutModeratorInput | discussion_board_warningCreateOrConnectWithoutModeratorInput[]\n    createMany?: discussion_board_warningCreateManyModeratorInputEnvelope\n    connect?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n  }\n\n  export type discussion_board_banUncheckedCreateNestedManyWithoutModeratorInput = {\n    create?: XOR<discussion_board_banCreateWithoutModeratorInput, discussion_board_banUncheckedCreateWithoutModeratorInput> | discussion_board_banCreateWithoutModeratorInput[] | discussion_board_banUncheckedCreateWithoutModeratorInput[]\n    connectOrCreate?: discussion_board_banCreateOrConnectWithoutModeratorInput | discussion_board_banCreateOrConnectWithoutModeratorInput[]\n    createMany?: discussion_board_banCreateManyModeratorInputEnvelope\n    connect?: discussion_board_banWhereUniqueInput | discussion_board_banWhereUniqueInput[]\n  }\n\n  export type discussion_board_content_abuse_metricUncheckedCreateNestedManyWithoutDiscussion_board_moderatorInput = {\n    create?: XOR<discussion_board_content_abuse_metricCreateWithoutDiscussion_board_moderatorInput, discussion_board_content_abuse_metricUncheckedCreateWithoutDiscussion_board_moderatorInput> | discussion_board_content_abuse_metricCreateWithoutDiscussion_board_moderatorInput[] | discussion_board_content_abuse_metricUncheckedCreateWithoutDiscussion_board_moderatorInput[]\n    connectOrCreate?: discussion_board_content_abuse_metricCreateOrConnectWithoutDiscussion_board_moderatorInput | discussion_board_content_abuse_metricCreateOrConnectWithoutDiscussion_board_moderatorInput[]\n    createMany?: discussion_board_content_abuse_metricCreateManyDiscussion_board_moderatorInputEnvelope\n    connect?: discussion_board_content_abuse_metricWhereUniqueInput | discussion_board_content_abuse_metricWhereUniqueInput[]\n  }\n\n  export type discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_moderatorsNestedInput = {\n    create?: XOR<discussion_board_usersCreateWithoutDiscussion_board_moderatorsInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_moderatorsInput>\n    connectOrCreate?: discussion_board_usersCreateOrConnectWithoutDiscussion_board_moderatorsInput\n    upsert?: discussion_board_usersUpsertWithoutDiscussion_board_moderatorsInput\n    connect?: discussion_board_usersWhereUniqueInput\n    update?: XOR<XOR<discussion_board_usersUpdateToOneWithWhereWithoutDiscussion_board_moderatorsInput, discussion_board_usersUpdateWithoutDiscussion_board_moderatorsInput>, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_moderatorsInput>\n  }\n\n  export type discussion_board_moderator_actionUpdateManyWithoutModeratorNestedInput = {\n    create?: XOR<discussion_board_moderator_actionCreateWithoutModeratorInput, discussion_board_moderator_actionUncheckedCreateWithoutModeratorInput> | discussion_board_moderator_actionCreateWithoutModeratorInput[] | discussion_board_moderator_actionUncheckedCreateWithoutModeratorInput[]\n    connectOrCreate?: discussion_board_moderator_actionCreateOrConnectWithoutModeratorInput | discussion_board_moderator_actionCreateOrConnectWithoutModeratorInput[]\n    upsert?: discussion_board_moderator_actionUpsertWithWhereUniqueWithoutModeratorInput | discussion_board_moderator_actionUpsertWithWhereUniqueWithoutModeratorInput[]\n    createMany?: discussion_board_moderator_actionCreateManyModeratorInputEnvelope\n    set?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    disconnect?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    delete?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    connect?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    update?: discussion_board_moderator_actionUpdateWithWhereUniqueWithoutModeratorInput | discussion_board_moderator_actionUpdateWithWhereUniqueWithoutModeratorInput[]\n    updateMany?: discussion_board_moderator_actionUpdateManyWithWhereWithoutModeratorInput | discussion_board_moderator_actionUpdateManyWithWhereWithoutModeratorInput[]\n    deleteMany?: discussion_board_moderator_actionScalarWhereInput | discussion_board_moderator_actionScalarWhereInput[]\n  }\n\n  export type discussion_board_warningUpdateManyWithoutModeratorNestedInput = {\n    create?: XOR<discussion_board_warningCreateWithoutModeratorInput, discussion_board_warningUncheckedCreateWithoutModeratorInput> | discussion_board_warningCreateWithoutModeratorInput[] | discussion_board_warningUncheckedCreateWithoutModeratorInput[]\n    connectOrCreate?: discussion_board_warningCreateOrConnectWithoutModeratorInput | discussion_board_warningCreateOrConnectWithoutModeratorInput[]\n    upsert?: discussion_board_warningUpsertWithWhereUniqueWithoutModeratorInput | discussion_board_warningUpsertWithWhereUniqueWithoutModeratorInput[]\n    createMany?: discussion_board_warningCreateManyModeratorInputEnvelope\n    set?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n    disconnect?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n    delete?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n    connect?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n    update?: discussion_board_warningUpdateWithWhereUniqueWithoutModeratorInput | discussion_board_warningUpdateWithWhereUniqueWithoutModeratorInput[]\n    updateMany?: discussion_board_warningUpdateManyWithWhereWithoutModeratorInput | discussion_board_warningUpdateManyWithWhereWithoutModeratorInput[]\n    deleteMany?: discussion_board_warningScalarWhereInput | discussion_board_warningScalarWhereInput[]\n  }\n\n  export type discussion_board_banUpdateManyWithoutModeratorNestedInput = {\n    create?: XOR<discussion_board_banCreateWithoutModeratorInput, discussion_board_banUncheckedCreateWithoutModeratorInput> | discussion_board_banCreateWithoutModeratorInput[] | discussion_board_banUncheckedCreateWithoutModeratorInput[]\n    connectOrCreate?: discussion_board_banCreateOrConnectWithoutModeratorInput | discussion_board_banCreateOrConnectWithoutModeratorInput[]\n    upsert?: discussion_board_banUpsertWithWhereUniqueWithoutModeratorInput | discussion_board_banUpsertWithWhereUniqueWithoutModeratorInput[]\n    createMany?: discussion_board_banCreateManyModeratorInputEnvelope\n    set?: discussion_board_banWhereUniqueInput | discussion_board_banWhereUniqueInput[]\n    disconnect?: discussion_board_banWhereUniqueInput | discussion_board_banWhereUniqueInput[]\n    delete?: discussion_board_banWhereUniqueInput | discussion_board_banWhereUniqueInput[]\n    connect?: discussion_board_banWhereUniqueInput | discussion_board_banWhereUniqueInput[]\n    update?: discussion_board_banUpdateWithWhereUniqueWithoutModeratorInput | discussion_board_banUpdateWithWhereUniqueWithoutModeratorInput[]\n    updateMany?: discussion_board_banUpdateManyWithWhereWithoutModeratorInput | discussion_board_banUpdateManyWithWhereWithoutModeratorInput[]\n    deleteMany?: discussion_board_banScalarWhereInput | discussion_board_banScalarWhereInput[]\n  }\n\n  export type discussion_board_content_abuse_metricUpdateManyWithoutDiscussion_board_moderatorNestedInput = {\n    create?: XOR<discussion_board_content_abuse_metricCreateWithoutDiscussion_board_moderatorInput, discussion_board_content_abuse_metricUncheckedCreateWithoutDiscussion_board_moderatorInput> | discussion_board_content_abuse_metricCreateWithoutDiscussion_board_moderatorInput[] | discussion_board_content_abuse_metricUncheckedCreateWithoutDiscussion_board_moderatorInput[]\n    connectOrCreate?: discussion_board_content_abuse_metricCreateOrConnectWithoutDiscussion_board_moderatorInput | discussion_board_content_abuse_metricCreateOrConnectWithoutDiscussion_board_moderatorInput[]\n    upsert?: discussion_board_content_abuse_metricUpsertWithWhereUniqueWithoutDiscussion_board_moderatorInput | discussion_board_content_abuse_metricUpsertWithWhereUniqueWithoutDiscussion_board_moderatorInput[]\n    createMany?: discussion_board_content_abuse_metricCreateManyDiscussion_board_moderatorInputEnvelope\n    set?: discussion_board_content_abuse_metricWhereUniqueInput | discussion_board_content_abuse_metricWhereUniqueInput[]\n    disconnect?: discussion_board_content_abuse_metricWhereUniqueInput | discussion_board_content_abuse_metricWhereUniqueInput[]\n    delete?: discussion_board_content_abuse_metricWhereUniqueInput | discussion_board_content_abuse_metricWhereUniqueInput[]\n    connect?: discussion_board_content_abuse_metricWhereUniqueInput | discussion_board_content_abuse_metricWhereUniqueInput[]\n    update?: discussion_board_content_abuse_metricUpdateWithWhereUniqueWithoutDiscussion_board_moderatorInput | discussion_board_content_abuse_metricUpdateWithWhereUniqueWithoutDiscussion_board_moderatorInput[]\n    updateMany?: discussion_board_content_abuse_metricUpdateManyWithWhereWithoutDiscussion_board_moderatorInput | discussion_board_content_abuse_metricUpdateManyWithWhereWithoutDiscussion_board_moderatorInput[]\n    deleteMany?: discussion_board_content_abuse_metricScalarWhereInput | discussion_board_content_abuse_metricScalarWhereInput[]\n  }\n\n  export type discussion_board_moderator_actionUncheckedUpdateManyWithoutModeratorNestedInput = {\n    create?: XOR<discussion_board_moderator_actionCreateWithoutModeratorInput, discussion_board_moderator_actionUncheckedCreateWithoutModeratorInput> | discussion_board_moderator_actionCreateWithoutModeratorInput[] | discussion_board_moderator_actionUncheckedCreateWithoutModeratorInput[]\n    connectOrCreate?: discussion_board_moderator_actionCreateOrConnectWithoutModeratorInput | discussion_board_moderator_actionCreateOrConnectWithoutModeratorInput[]\n    upsert?: discussion_board_moderator_actionUpsertWithWhereUniqueWithoutModeratorInput | discussion_board_moderator_actionUpsertWithWhereUniqueWithoutModeratorInput[]\n    createMany?: discussion_board_moderator_actionCreateManyModeratorInputEnvelope\n    set?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    disconnect?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    delete?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    connect?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    update?: discussion_board_moderator_actionUpdateWithWhereUniqueWithoutModeratorInput | discussion_board_moderator_actionUpdateWithWhereUniqueWithoutModeratorInput[]\n    updateMany?: discussion_board_moderator_actionUpdateManyWithWhereWithoutModeratorInput | discussion_board_moderator_actionUpdateManyWithWhereWithoutModeratorInput[]\n    deleteMany?: discussion_board_moderator_actionScalarWhereInput | discussion_board_moderator_actionScalarWhereInput[]\n  }\n\n  export type discussion_board_warningUncheckedUpdateManyWithoutModeratorNestedInput = {\n    create?: XOR<discussion_board_warningCreateWithoutModeratorInput, discussion_board_warningUncheckedCreateWithoutModeratorInput> | discussion_board_warningCreateWithoutModeratorInput[] | discussion_board_warningUncheckedCreateWithoutModeratorInput[]\n    connectOrCreate?: discussion_board_warningCreateOrConnectWithoutModeratorInput | discussion_board_warningCreateOrConnectWithoutModeratorInput[]\n    upsert?: discussion_board_warningUpsertWithWhereUniqueWithoutModeratorInput | discussion_board_warningUpsertWithWhereUniqueWithoutModeratorInput[]\n    createMany?: discussion_board_warningCreateManyModeratorInputEnvelope\n    set?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n    disconnect?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n    delete?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n    connect?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n    update?: discussion_board_warningUpdateWithWhereUniqueWithoutModeratorInput | discussion_board_warningUpdateWithWhereUniqueWithoutModeratorInput[]\n    updateMany?: discussion_board_warningUpdateManyWithWhereWithoutModeratorInput | discussion_board_warningUpdateManyWithWhereWithoutModeratorInput[]\n    deleteMany?: discussion_board_warningScalarWhereInput | discussion_board_warningScalarWhereInput[]\n  }\n\n  export type discussion_board_banUncheckedUpdateManyWithoutModeratorNestedInput = {\n    create?: XOR<discussion_board_banCreateWithoutModeratorInput, discussion_board_banUncheckedCreateWithoutModeratorInput> | discussion_board_banCreateWithoutModeratorInput[] | discussion_board_banUncheckedCreateWithoutModeratorInput[]\n    connectOrCreate?: discussion_board_banCreateOrConnectWithoutModeratorInput | discussion_board_banCreateOrConnectWithoutModeratorInput[]\n    upsert?: discussion_board_banUpsertWithWhereUniqueWithoutModeratorInput | discussion_board_banUpsertWithWhereUniqueWithoutModeratorInput[]\n    createMany?: discussion_board_banCreateManyModeratorInputEnvelope\n    set?: discussion_board_banWhereUniqueInput | discussion_board_banWhereUniqueInput[]\n    disconnect?: discussion_board_banWhereUniqueInput | discussion_board_banWhereUniqueInput[]\n    delete?: discussion_board_banWhereUniqueInput | discussion_board_banWhereUniqueInput[]\n    connect?: discussion_board_banWhereUniqueInput | discussion_board_banWhereUniqueInput[]\n    update?: discussion_board_banUpdateWithWhereUniqueWithoutModeratorInput | discussion_board_banUpdateWithWhereUniqueWithoutModeratorInput[]\n    updateMany?: discussion_board_banUpdateManyWithWhereWithoutModeratorInput | discussion_board_banUpdateManyWithWhereWithoutModeratorInput[]\n    deleteMany?: discussion_board_banScalarWhereInput | discussion_board_banScalarWhereInput[]\n  }\n\n  export type discussion_board_content_abuse_metricUncheckedUpdateManyWithoutDiscussion_board_moderatorNestedInput = {\n    create?: XOR<discussion_board_content_abuse_metricCreateWithoutDiscussion_board_moderatorInput, discussion_board_content_abuse_metricUncheckedCreateWithoutDiscussion_board_moderatorInput> | discussion_board_content_abuse_metricCreateWithoutDiscussion_board_moderatorInput[] | discussion_board_content_abuse_metricUncheckedCreateWithoutDiscussion_board_moderatorInput[]\n    connectOrCreate?: discussion_board_content_abuse_metricCreateOrConnectWithoutDiscussion_board_moderatorInput | discussion_board_content_abuse_metricCreateOrConnectWithoutDiscussion_board_moderatorInput[]\n    upsert?: discussion_board_content_abuse_metricUpsertWithWhereUniqueWithoutDiscussion_board_moderatorInput | discussion_board_content_abuse_metricUpsertWithWhereUniqueWithoutDiscussion_board_moderatorInput[]\n    createMany?: discussion_board_content_abuse_metricCreateManyDiscussion_board_moderatorInputEnvelope\n    set?: discussion_board_content_abuse_metricWhereUniqueInput | discussion_board_content_abuse_metricWhereUniqueInput[]\n    disconnect?: discussion_board_content_abuse_metricWhereUniqueInput | discussion_board_content_abuse_metricWhereUniqueInput[]\n    delete?: discussion_board_content_abuse_metricWhereUniqueInput | discussion_board_content_abuse_metricWhereUniqueInput[]\n    connect?: discussion_board_content_abuse_metricWhereUniqueInput | discussion_board_content_abuse_metricWhereUniqueInput[]\n    update?: discussion_board_content_abuse_metricUpdateWithWhereUniqueWithoutDiscussion_board_moderatorInput | discussion_board_content_abuse_metricUpdateWithWhereUniqueWithoutDiscussion_board_moderatorInput[]\n    updateMany?: discussion_board_content_abuse_metricUpdateManyWithWhereWithoutDiscussion_board_moderatorInput | discussion_board_content_abuse_metricUpdateManyWithWhereWithoutDiscussion_board_moderatorInput[]\n    deleteMany?: discussion_board_content_abuse_metricScalarWhereInput | discussion_board_content_abuse_metricScalarWhereInput[]\n  }\n\n  export type discussion_board_usersCreateNestedOneWithoutDiscussion_board_adminsInput = {\n    create?: XOR<discussion_board_usersCreateWithoutDiscussion_board_adminsInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_adminsInput>\n    connectOrCreate?: discussion_board_usersCreateOrConnectWithoutDiscussion_board_adminsInput\n    connect?: discussion_board_usersWhereUniqueInput\n  }\n\n  export type discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_adminsNestedInput = {\n    create?: XOR<discussion_board_usersCreateWithoutDiscussion_board_adminsInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_adminsInput>\n    connectOrCreate?: discussion_board_usersCreateOrConnectWithoutDiscussion_board_adminsInput\n    upsert?: discussion_board_usersUpsertWithoutDiscussion_board_adminsInput\n    connect?: discussion_board_usersWhereUniqueInput\n    update?: XOR<XOR<discussion_board_usersUpdateToOneWithWhereWithoutDiscussion_board_adminsInput, discussion_board_usersUpdateWithoutDiscussion_board_adminsInput>, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_adminsInput>\n  }\n\n  export type discussion_board_usersCreateNestedOneWithoutDiscussion_board_user_profilesInput = {\n    create?: XOR<discussion_board_usersCreateWithoutDiscussion_board_user_profilesInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_user_profilesInput>\n    connectOrCreate?: discussion_board_usersCreateOrConnectWithoutDiscussion_board_user_profilesInput\n    connect?: discussion_board_usersWhereUniqueInput\n  }\n\n  export type discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_user_profilesNestedInput = {\n    create?: XOR<discussion_board_usersCreateWithoutDiscussion_board_user_profilesInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_user_profilesInput>\n    connectOrCreate?: discussion_board_usersCreateOrConnectWithoutDiscussion_board_user_profilesInput\n    upsert?: discussion_board_usersUpsertWithoutDiscussion_board_user_profilesInput\n    connect?: discussion_board_usersWhereUniqueInput\n    update?: XOR<XOR<discussion_board_usersUpdateToOneWithWhereWithoutDiscussion_board_user_profilesInput, discussion_board_usersUpdateWithoutDiscussion_board_user_profilesInput>, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_user_profilesInput>\n  }\n\n  export type discussion_board_usersCreateNestedOneWithoutDiscussion_board_user_settingsInput = {\n    create?: XOR<discussion_board_usersCreateWithoutDiscussion_board_user_settingsInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_user_settingsInput>\n    connectOrCreate?: discussion_board_usersCreateOrConnectWithoutDiscussion_board_user_settingsInput\n    connect?: discussion_board_usersWhereUniqueInput\n  }\n\n  export type discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_user_settingsNestedInput = {\n    create?: XOR<discussion_board_usersCreateWithoutDiscussion_board_user_settingsInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_user_settingsInput>\n    connectOrCreate?: discussion_board_usersCreateOrConnectWithoutDiscussion_board_user_settingsInput\n    upsert?: discussion_board_usersUpsertWithoutDiscussion_board_user_settingsInput\n    connect?: discussion_board_usersWhereUniqueInput\n    update?: XOR<XOR<discussion_board_usersUpdateToOneWithWhereWithoutDiscussion_board_user_settingsInput, discussion_board_usersUpdateWithoutDiscussion_board_user_settingsInput>, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_user_settingsInput>\n  }\n\n  export type discussion_board_usersCreateNestedOneWithoutDiscussion_board_threadInput = {\n    create?: XOR<discussion_board_usersCreateWithoutDiscussion_board_threadInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_threadInput>\n    connectOrCreate?: discussion_board_usersCreateOrConnectWithoutDiscussion_board_threadInput\n    connect?: discussion_board_usersWhereUniqueInput\n  }\n\n  export type discussion_board_thread_categoryCreateNestedOneWithoutDiscussion_board_threadInput = {\n    create?: XOR<discussion_board_thread_categoryCreateWithoutDiscussion_board_threadInput, discussion_board_thread_categoryUncheckedCreateWithoutDiscussion_board_threadInput>\n    connectOrCreate?: discussion_board_thread_categoryCreateOrConnectWithoutDiscussion_board_threadInput\n    connect?: discussion_board_thread_categoryWhereUniqueInput\n  }\n\n  export type discussion_board_postCreateNestedManyWithoutThreadInput = {\n    create?: XOR<discussion_board_postCreateWithoutThreadInput, discussion_board_postUncheckedCreateWithoutThreadInput> | discussion_board_postCreateWithoutThreadInput[] | discussion_board_postUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: discussion_board_postCreateOrConnectWithoutThreadInput | discussion_board_postCreateOrConnectWithoutThreadInput[]\n    createMany?: discussion_board_postCreateManyThreadInputEnvelope\n    connect?: discussion_board_postWhereUniqueInput | discussion_board_postWhereUniqueInput[]\n  }\n\n  export type discussion_board_thread_tagCreateNestedManyWithoutThreadInput = {\n    create?: XOR<discussion_board_thread_tagCreateWithoutThreadInput, discussion_board_thread_tagUncheckedCreateWithoutThreadInput> | discussion_board_thread_tagCreateWithoutThreadInput[] | discussion_board_thread_tagUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: discussion_board_thread_tagCreateOrConnectWithoutThreadInput | discussion_board_thread_tagCreateOrConnectWithoutThreadInput[]\n    createMany?: discussion_board_thread_tagCreateManyThreadInputEnvelope\n    connect?: discussion_board_thread_tagWhereUniqueInput | discussion_board_thread_tagWhereUniqueInput[]\n  }\n\n  export type mv_discussion_thread_activityCreateNestedOneWithoutThreadInput = {\n    create?: XOR<mv_discussion_thread_activityCreateWithoutThreadInput, mv_discussion_thread_activityUncheckedCreateWithoutThreadInput>\n    connectOrCreate?: mv_discussion_thread_activityCreateOrConnectWithoutThreadInput\n    connect?: mv_discussion_thread_activityWhereUniqueInput\n  }\n\n  export type discussion_board_voteCreateNestedManyWithoutThreadInput = {\n    create?: XOR<discussion_board_voteCreateWithoutThreadInput, discussion_board_voteUncheckedCreateWithoutThreadInput> | discussion_board_voteCreateWithoutThreadInput[] | discussion_board_voteUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: discussion_board_voteCreateOrConnectWithoutThreadInput | discussion_board_voteCreateOrConnectWithoutThreadInput[]\n    createMany?: discussion_board_voteCreateManyThreadInputEnvelope\n    connect?: discussion_board_voteWhereUniqueInput | discussion_board_voteWhereUniqueInput[]\n  }\n\n  export type discussion_board_reactionCreateNestedManyWithoutThreadInput = {\n    create?: XOR<discussion_board_reactionCreateWithoutThreadInput, discussion_board_reactionUncheckedCreateWithoutThreadInput> | discussion_board_reactionCreateWithoutThreadInput[] | discussion_board_reactionUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: discussion_board_reactionCreateOrConnectWithoutThreadInput | discussion_board_reactionCreateOrConnectWithoutThreadInput[]\n    createMany?: discussion_board_reactionCreateManyThreadInputEnvelope\n    connect?: discussion_board_reactionWhereUniqueInput | discussion_board_reactionWhereUniqueInput[]\n  }\n\n  export type discussion_board_bookmarkCreateNestedManyWithoutThreadInput = {\n    create?: XOR<discussion_board_bookmarkCreateWithoutThreadInput, discussion_board_bookmarkUncheckedCreateWithoutThreadInput> | discussion_board_bookmarkCreateWithoutThreadInput[] | discussion_board_bookmarkUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: discussion_board_bookmarkCreateOrConnectWithoutThreadInput | discussion_board_bookmarkCreateOrConnectWithoutThreadInput[]\n    createMany?: discussion_board_bookmarkCreateManyThreadInputEnvelope\n    connect?: discussion_board_bookmarkWhereUniqueInput | discussion_board_bookmarkWhereUniqueInput[]\n  }\n\n  export type discussion_board_notificationCreateNestedManyWithoutThreadInput = {\n    create?: XOR<discussion_board_notificationCreateWithoutThreadInput, discussion_board_notificationUncheckedCreateWithoutThreadInput> | discussion_board_notificationCreateWithoutThreadInput[] | discussion_board_notificationUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: discussion_board_notificationCreateOrConnectWithoutThreadInput | discussion_board_notificationCreateOrConnectWithoutThreadInput[]\n    createMany?: discussion_board_notificationCreateManyThreadInputEnvelope\n    connect?: discussion_board_notificationWhereUniqueInput | discussion_board_notificationWhereUniqueInput[]\n  }\n\n  export type discussion_board_subscriptionCreateNestedManyWithoutThreadInput = {\n    create?: XOR<discussion_board_subscriptionCreateWithoutThreadInput, discussion_board_subscriptionUncheckedCreateWithoutThreadInput> | discussion_board_subscriptionCreateWithoutThreadInput[] | discussion_board_subscriptionUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: discussion_board_subscriptionCreateOrConnectWithoutThreadInput | discussion_board_subscriptionCreateOrConnectWithoutThreadInput[]\n    createMany?: discussion_board_subscriptionCreateManyThreadInputEnvelope\n    connect?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n  }\n\n  export type discussion_board_reportCreateNestedManyWithoutThreadInput = {\n    create?: XOR<discussion_board_reportCreateWithoutThreadInput, discussion_board_reportUncheckedCreateWithoutThreadInput> | discussion_board_reportCreateWithoutThreadInput[] | discussion_board_reportUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: discussion_board_reportCreateOrConnectWithoutThreadInput | discussion_board_reportCreateOrConnectWithoutThreadInput[]\n    createMany?: discussion_board_reportCreateManyThreadInputEnvelope\n    connect?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n  }\n\n  export type discussion_board_moderator_actionCreateNestedManyWithoutThreadInput = {\n    create?: XOR<discussion_board_moderator_actionCreateWithoutThreadInput, discussion_board_moderator_actionUncheckedCreateWithoutThreadInput> | discussion_board_moderator_actionCreateWithoutThreadInput[] | discussion_board_moderator_actionUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: discussion_board_moderator_actionCreateOrConnectWithoutThreadInput | discussion_board_moderator_actionCreateOrConnectWithoutThreadInput[]\n    createMany?: discussion_board_moderator_actionCreateManyThreadInputEnvelope\n    connect?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n  }\n\n  export type discussion_board_warningCreateNestedManyWithoutThreadInput = {\n    create?: XOR<discussion_board_warningCreateWithoutThreadInput, discussion_board_warningUncheckedCreateWithoutThreadInput> | discussion_board_warningCreateWithoutThreadInput[] | discussion_board_warningUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: discussion_board_warningCreateOrConnectWithoutThreadInput | discussion_board_warningCreateOrConnectWithoutThreadInput[]\n    createMany?: discussion_board_warningCreateManyThreadInputEnvelope\n    connect?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n  }\n\n  export type discussion_board_thread_statsCreateNestedOneWithoutDiscussion_board_threadInput = {\n    create?: XOR<discussion_board_thread_statsCreateWithoutDiscussion_board_threadInput, discussion_board_thread_statsUncheckedCreateWithoutDiscussion_board_threadInput>\n    connectOrCreate?: discussion_board_thread_statsCreateOrConnectWithoutDiscussion_board_threadInput\n    connect?: discussion_board_thread_statsWhereUniqueInput\n  }\n\n  export type discussion_board_postUncheckedCreateNestedManyWithoutThreadInput = {\n    create?: XOR<discussion_board_postCreateWithoutThreadInput, discussion_board_postUncheckedCreateWithoutThreadInput> | discussion_board_postCreateWithoutThreadInput[] | discussion_board_postUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: discussion_board_postCreateOrConnectWithoutThreadInput | discussion_board_postCreateOrConnectWithoutThreadInput[]\n    createMany?: discussion_board_postCreateManyThreadInputEnvelope\n    connect?: discussion_board_postWhereUniqueInput | discussion_board_postWhereUniqueInput[]\n  }\n\n  export type discussion_board_thread_tagUncheckedCreateNestedManyWithoutThreadInput = {\n    create?: XOR<discussion_board_thread_tagCreateWithoutThreadInput, discussion_board_thread_tagUncheckedCreateWithoutThreadInput> | discussion_board_thread_tagCreateWithoutThreadInput[] | discussion_board_thread_tagUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: discussion_board_thread_tagCreateOrConnectWithoutThreadInput | discussion_board_thread_tagCreateOrConnectWithoutThreadInput[]\n    createMany?: discussion_board_thread_tagCreateManyThreadInputEnvelope\n    connect?: discussion_board_thread_tagWhereUniqueInput | discussion_board_thread_tagWhereUniqueInput[]\n  }\n\n  export type mv_discussion_thread_activityUncheckedCreateNestedOneWithoutThreadInput = {\n    create?: XOR<mv_discussion_thread_activityCreateWithoutThreadInput, mv_discussion_thread_activityUncheckedCreateWithoutThreadInput>\n    connectOrCreate?: mv_discussion_thread_activityCreateOrConnectWithoutThreadInput\n    connect?: mv_discussion_thread_activityWhereUniqueInput\n  }\n\n  export type discussion_board_voteUncheckedCreateNestedManyWithoutThreadInput = {\n    create?: XOR<discussion_board_voteCreateWithoutThreadInput, discussion_board_voteUncheckedCreateWithoutThreadInput> | discussion_board_voteCreateWithoutThreadInput[] | discussion_board_voteUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: discussion_board_voteCreateOrConnectWithoutThreadInput | discussion_board_voteCreateOrConnectWithoutThreadInput[]\n    createMany?: discussion_board_voteCreateManyThreadInputEnvelope\n    connect?: discussion_board_voteWhereUniqueInput | discussion_board_voteWhereUniqueInput[]\n  }\n\n  export type discussion_board_reactionUncheckedCreateNestedManyWithoutThreadInput = {\n    create?: XOR<discussion_board_reactionCreateWithoutThreadInput, discussion_board_reactionUncheckedCreateWithoutThreadInput> | discussion_board_reactionCreateWithoutThreadInput[] | discussion_board_reactionUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: discussion_board_reactionCreateOrConnectWithoutThreadInput | discussion_board_reactionCreateOrConnectWithoutThreadInput[]\n    createMany?: discussion_board_reactionCreateManyThreadInputEnvelope\n    connect?: discussion_board_reactionWhereUniqueInput | discussion_board_reactionWhereUniqueInput[]\n  }\n\n  export type discussion_board_bookmarkUncheckedCreateNestedManyWithoutThreadInput = {\n    create?: XOR<discussion_board_bookmarkCreateWithoutThreadInput, discussion_board_bookmarkUncheckedCreateWithoutThreadInput> | discussion_board_bookmarkCreateWithoutThreadInput[] | discussion_board_bookmarkUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: discussion_board_bookmarkCreateOrConnectWithoutThreadInput | discussion_board_bookmarkCreateOrConnectWithoutThreadInput[]\n    createMany?: discussion_board_bookmarkCreateManyThreadInputEnvelope\n    connect?: discussion_board_bookmarkWhereUniqueInput | discussion_board_bookmarkWhereUniqueInput[]\n  }\n\n  export type discussion_board_notificationUncheckedCreateNestedManyWithoutThreadInput = {\n    create?: XOR<discussion_board_notificationCreateWithoutThreadInput, discussion_board_notificationUncheckedCreateWithoutThreadInput> | discussion_board_notificationCreateWithoutThreadInput[] | discussion_board_notificationUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: discussion_board_notificationCreateOrConnectWithoutThreadInput | discussion_board_notificationCreateOrConnectWithoutThreadInput[]\n    createMany?: discussion_board_notificationCreateManyThreadInputEnvelope\n    connect?: discussion_board_notificationWhereUniqueInput | discussion_board_notificationWhereUniqueInput[]\n  }\n\n  export type discussion_board_subscriptionUncheckedCreateNestedManyWithoutThreadInput = {\n    create?: XOR<discussion_board_subscriptionCreateWithoutThreadInput, discussion_board_subscriptionUncheckedCreateWithoutThreadInput> | discussion_board_subscriptionCreateWithoutThreadInput[] | discussion_board_subscriptionUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: discussion_board_subscriptionCreateOrConnectWithoutThreadInput | discussion_board_subscriptionCreateOrConnectWithoutThreadInput[]\n    createMany?: discussion_board_subscriptionCreateManyThreadInputEnvelope\n    connect?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n  }\n\n  export type discussion_board_reportUncheckedCreateNestedManyWithoutThreadInput = {\n    create?: XOR<discussion_board_reportCreateWithoutThreadInput, discussion_board_reportUncheckedCreateWithoutThreadInput> | discussion_board_reportCreateWithoutThreadInput[] | discussion_board_reportUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: discussion_board_reportCreateOrConnectWithoutThreadInput | discussion_board_reportCreateOrConnectWithoutThreadInput[]\n    createMany?: discussion_board_reportCreateManyThreadInputEnvelope\n    connect?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n  }\n\n  export type discussion_board_moderator_actionUncheckedCreateNestedManyWithoutThreadInput = {\n    create?: XOR<discussion_board_moderator_actionCreateWithoutThreadInput, discussion_board_moderator_actionUncheckedCreateWithoutThreadInput> | discussion_board_moderator_actionCreateWithoutThreadInput[] | discussion_board_moderator_actionUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: discussion_board_moderator_actionCreateOrConnectWithoutThreadInput | discussion_board_moderator_actionCreateOrConnectWithoutThreadInput[]\n    createMany?: discussion_board_moderator_actionCreateManyThreadInputEnvelope\n    connect?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n  }\n\n  export type discussion_board_warningUncheckedCreateNestedManyWithoutThreadInput = {\n    create?: XOR<discussion_board_warningCreateWithoutThreadInput, discussion_board_warningUncheckedCreateWithoutThreadInput> | discussion_board_warningCreateWithoutThreadInput[] | discussion_board_warningUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: discussion_board_warningCreateOrConnectWithoutThreadInput | discussion_board_warningCreateOrConnectWithoutThreadInput[]\n    createMany?: discussion_board_warningCreateManyThreadInputEnvelope\n    connect?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n  }\n\n  export type discussion_board_thread_statsUncheckedCreateNestedOneWithoutDiscussion_board_threadInput = {\n    create?: XOR<discussion_board_thread_statsCreateWithoutDiscussion_board_threadInput, discussion_board_thread_statsUncheckedCreateWithoutDiscussion_board_threadInput>\n    connectOrCreate?: discussion_board_thread_statsCreateOrConnectWithoutDiscussion_board_threadInput\n    connect?: discussion_board_thread_statsWhereUniqueInput\n  }\n\n  export type discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_threadNestedInput = {\n    create?: XOR<discussion_board_usersCreateWithoutDiscussion_board_threadInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_threadInput>\n    connectOrCreate?: discussion_board_usersCreateOrConnectWithoutDiscussion_board_threadInput\n    upsert?: discussion_board_usersUpsertWithoutDiscussion_board_threadInput\n    connect?: discussion_board_usersWhereUniqueInput\n    update?: XOR<XOR<discussion_board_usersUpdateToOneWithWhereWithoutDiscussion_board_threadInput, discussion_board_usersUpdateWithoutDiscussion_board_threadInput>, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_threadInput>\n  }\n\n  export type discussion_board_thread_categoryUpdateOneRequiredWithoutDiscussion_board_threadNestedInput = {\n    create?: XOR<discussion_board_thread_categoryCreateWithoutDiscussion_board_threadInput, discussion_board_thread_categoryUncheckedCreateWithoutDiscussion_board_threadInput>\n    connectOrCreate?: discussion_board_thread_categoryCreateOrConnectWithoutDiscussion_board_threadInput\n    upsert?: discussion_board_thread_categoryUpsertWithoutDiscussion_board_threadInput\n    connect?: discussion_board_thread_categoryWhereUniqueInput\n    update?: XOR<XOR<discussion_board_thread_categoryUpdateToOneWithWhereWithoutDiscussion_board_threadInput, discussion_board_thread_categoryUpdateWithoutDiscussion_board_threadInput>, discussion_board_thread_categoryUncheckedUpdateWithoutDiscussion_board_threadInput>\n  }\n\n  export type discussion_board_postUpdateManyWithoutThreadNestedInput = {\n    create?: XOR<discussion_board_postCreateWithoutThreadInput, discussion_board_postUncheckedCreateWithoutThreadInput> | discussion_board_postCreateWithoutThreadInput[] | discussion_board_postUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: discussion_board_postCreateOrConnectWithoutThreadInput | discussion_board_postCreateOrConnectWithoutThreadInput[]\n    upsert?: discussion_board_postUpsertWithWhereUniqueWithoutThreadInput | discussion_board_postUpsertWithWhereUniqueWithoutThreadInput[]\n    createMany?: discussion_board_postCreateManyThreadInputEnvelope\n    set?: discussion_board_postWhereUniqueInput | discussion_board_postWhereUniqueInput[]\n    disconnect?: discussion_board_postWhereUniqueInput | discussion_board_postWhereUniqueInput[]\n    delete?: discussion_board_postWhereUniqueInput | discussion_board_postWhereUniqueInput[]\n    connect?: discussion_board_postWhereUniqueInput | discussion_board_postWhereUniqueInput[]\n    update?: discussion_board_postUpdateWithWhereUniqueWithoutThreadInput | discussion_board_postUpdateWithWhereUniqueWithoutThreadInput[]\n    updateMany?: discussion_board_postUpdateManyWithWhereWithoutThreadInput | discussion_board_postUpdateManyWithWhereWithoutThreadInput[]\n    deleteMany?: discussion_board_postScalarWhereInput | discussion_board_postScalarWhereInput[]\n  }\n\n  export type discussion_board_thread_tagUpdateManyWithoutThreadNestedInput = {\n    create?: XOR<discussion_board_thread_tagCreateWithoutThreadInput, discussion_board_thread_tagUncheckedCreateWithoutThreadInput> | discussion_board_thread_tagCreateWithoutThreadInput[] | discussion_board_thread_tagUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: discussion_board_thread_tagCreateOrConnectWithoutThreadInput | discussion_board_thread_tagCreateOrConnectWithoutThreadInput[]\n    upsert?: discussion_board_thread_tagUpsertWithWhereUniqueWithoutThreadInput | discussion_board_thread_tagUpsertWithWhereUniqueWithoutThreadInput[]\n    createMany?: discussion_board_thread_tagCreateManyThreadInputEnvelope\n    set?: discussion_board_thread_tagWhereUniqueInput | discussion_board_thread_tagWhereUniqueInput[]\n    disconnect?: discussion_board_thread_tagWhereUniqueInput | discussion_board_thread_tagWhereUniqueInput[]\n    delete?: discussion_board_thread_tagWhereUniqueInput | discussion_board_thread_tagWhereUniqueInput[]\n    connect?: discussion_board_thread_tagWhereUniqueInput | discussion_board_thread_tagWhereUniqueInput[]\n    update?: discussion_board_thread_tagUpdateWithWhereUniqueWithoutThreadInput | discussion_board_thread_tagUpdateWithWhereUniqueWithoutThreadInput[]\n    updateMany?: discussion_board_thread_tagUpdateManyWithWhereWithoutThreadInput | discussion_board_thread_tagUpdateManyWithWhereWithoutThreadInput[]\n    deleteMany?: discussion_board_thread_tagScalarWhereInput | discussion_board_thread_tagScalarWhereInput[]\n  }\n\n  export type mv_discussion_thread_activityUpdateOneWithoutThreadNestedInput = {\n    create?: XOR<mv_discussion_thread_activityCreateWithoutThreadInput, mv_discussion_thread_activityUncheckedCreateWithoutThreadInput>\n    connectOrCreate?: mv_discussion_thread_activityCreateOrConnectWithoutThreadInput\n    upsert?: mv_discussion_thread_activityUpsertWithoutThreadInput\n    disconnect?: mv_discussion_thread_activityWhereInput | boolean\n    delete?: mv_discussion_thread_activityWhereInput | boolean\n    connect?: mv_discussion_thread_activityWhereUniqueInput\n    update?: XOR<XOR<mv_discussion_thread_activityUpdateToOneWithWhereWithoutThreadInput, mv_discussion_thread_activityUpdateWithoutThreadInput>, mv_discussion_thread_activityUncheckedUpdateWithoutThreadInput>\n  }\n\n  export type discussion_board_voteUpdateManyWithoutThreadNestedInput = {\n    create?: XOR<discussion_board_voteCreateWithoutThreadInput, discussion_board_voteUncheckedCreateWithoutThreadInput> | discussion_board_voteCreateWithoutThreadInput[] | discussion_board_voteUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: discussion_board_voteCreateOrConnectWithoutThreadInput | discussion_board_voteCreateOrConnectWithoutThreadInput[]\n    upsert?: discussion_board_voteUpsertWithWhereUniqueWithoutThreadInput | discussion_board_voteUpsertWithWhereUniqueWithoutThreadInput[]\n    createMany?: discussion_board_voteCreateManyThreadInputEnvelope\n    set?: discussion_board_voteWhereUniqueInput | discussion_board_voteWhereUniqueInput[]\n    disconnect?: discussion_board_voteWhereUniqueInput | discussion_board_voteWhereUniqueInput[]\n    delete?: discussion_board_voteWhereUniqueInput | discussion_board_voteWhereUniqueInput[]\n    connect?: discussion_board_voteWhereUniqueInput | discussion_board_voteWhereUniqueInput[]\n    update?: discussion_board_voteUpdateWithWhereUniqueWithoutThreadInput | discussion_board_voteUpdateWithWhereUniqueWithoutThreadInput[]\n    updateMany?: discussion_board_voteUpdateManyWithWhereWithoutThreadInput | discussion_board_voteUpdateManyWithWhereWithoutThreadInput[]\n    deleteMany?: discussion_board_voteScalarWhereInput | discussion_board_voteScalarWhereInput[]\n  }\n\n  export type discussion_board_reactionUpdateManyWithoutThreadNestedInput = {\n    create?: XOR<discussion_board_reactionCreateWithoutThreadInput, discussion_board_reactionUncheckedCreateWithoutThreadInput> | discussion_board_reactionCreateWithoutThreadInput[] | discussion_board_reactionUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: discussion_board_reactionCreateOrConnectWithoutThreadInput | discussion_board_reactionCreateOrConnectWithoutThreadInput[]\n    upsert?: discussion_board_reactionUpsertWithWhereUniqueWithoutThreadInput | discussion_board_reactionUpsertWithWhereUniqueWithoutThreadInput[]\n    createMany?: discussion_board_reactionCreateManyThreadInputEnvelope\n    set?: discussion_board_reactionWhereUniqueInput | discussion_board_reactionWhereUniqueInput[]\n    disconnect?: discussion_board_reactionWhereUniqueInput | discussion_board_reactionWhereUniqueInput[]\n    delete?: discussion_board_reactionWhereUniqueInput | discussion_board_reactionWhereUniqueInput[]\n    connect?: discussion_board_reactionWhereUniqueInput | discussion_board_reactionWhereUniqueInput[]\n    update?: discussion_board_reactionUpdateWithWhereUniqueWithoutThreadInput | discussion_board_reactionUpdateWithWhereUniqueWithoutThreadInput[]\n    updateMany?: discussion_board_reactionUpdateManyWithWhereWithoutThreadInput | discussion_board_reactionUpdateManyWithWhereWithoutThreadInput[]\n    deleteMany?: discussion_board_reactionScalarWhereInput | discussion_board_reactionScalarWhereInput[]\n  }\n\n  export type discussion_board_bookmarkUpdateManyWithoutThreadNestedInput = {\n    create?: XOR<discussion_board_bookmarkCreateWithoutThreadInput, discussion_board_bookmarkUncheckedCreateWithoutThreadInput> | discussion_board_bookmarkCreateWithoutThreadInput[] | discussion_board_bookmarkUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: discussion_board_bookmarkCreateOrConnectWithoutThreadInput | discussion_board_bookmarkCreateOrConnectWithoutThreadInput[]\n    upsert?: discussion_board_bookmarkUpsertWithWhereUniqueWithoutThreadInput | discussion_board_bookmarkUpsertWithWhereUniqueWithoutThreadInput[]\n    createMany?: discussion_board_bookmarkCreateManyThreadInputEnvelope\n    set?: discussion_board_bookmarkWhereUniqueInput | discussion_board_bookmarkWhereUniqueInput[]\n    disconnect?: discussion_board_bookmarkWhereUniqueInput | discussion_board_bookmarkWhereUniqueInput[]\n    delete?: discussion_board_bookmarkWhereUniqueInput | discussion_board_bookmarkWhereUniqueInput[]\n    connect?: discussion_board_bookmarkWhereUniqueInput | discussion_board_bookmarkWhereUniqueInput[]\n    update?: discussion_board_bookmarkUpdateWithWhereUniqueWithoutThreadInput | discussion_board_bookmarkUpdateWithWhereUniqueWithoutThreadInput[]\n    updateMany?: discussion_board_bookmarkUpdateManyWithWhereWithoutThreadInput | discussion_board_bookmarkUpdateManyWithWhereWithoutThreadInput[]\n    deleteMany?: discussion_board_bookmarkScalarWhereInput | discussion_board_bookmarkScalarWhereInput[]\n  }\n\n  export type discussion_board_notificationUpdateManyWithoutThreadNestedInput = {\n    create?: XOR<discussion_board_notificationCreateWithoutThreadInput, discussion_board_notificationUncheckedCreateWithoutThreadInput> | discussion_board_notificationCreateWithoutThreadInput[] | discussion_board_notificationUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: discussion_board_notificationCreateOrConnectWithoutThreadInput | discussion_board_notificationCreateOrConnectWithoutThreadInput[]\n    upsert?: discussion_board_notificationUpsertWithWhereUniqueWithoutThreadInput | discussion_board_notificationUpsertWithWhereUniqueWithoutThreadInput[]\n    createMany?: discussion_board_notificationCreateManyThreadInputEnvelope\n    set?: discussion_board_notificationWhereUniqueInput | discussion_board_notificationWhereUniqueInput[]\n    disconnect?: discussion_board_notificationWhereUniqueInput | discussion_board_notificationWhereUniqueInput[]\n    delete?: discussion_board_notificationWhereUniqueInput | discussion_board_notificationWhereUniqueInput[]\n    connect?: discussion_board_notificationWhereUniqueInput | discussion_board_notificationWhereUniqueInput[]\n    update?: discussion_board_notificationUpdateWithWhereUniqueWithoutThreadInput | discussion_board_notificationUpdateWithWhereUniqueWithoutThreadInput[]\n    updateMany?: discussion_board_notificationUpdateManyWithWhereWithoutThreadInput | discussion_board_notificationUpdateManyWithWhereWithoutThreadInput[]\n    deleteMany?: discussion_board_notificationScalarWhereInput | discussion_board_notificationScalarWhereInput[]\n  }\n\n  export type discussion_board_subscriptionUpdateManyWithoutThreadNestedInput = {\n    create?: XOR<discussion_board_subscriptionCreateWithoutThreadInput, discussion_board_subscriptionUncheckedCreateWithoutThreadInput> | discussion_board_subscriptionCreateWithoutThreadInput[] | discussion_board_subscriptionUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: discussion_board_subscriptionCreateOrConnectWithoutThreadInput | discussion_board_subscriptionCreateOrConnectWithoutThreadInput[]\n    upsert?: discussion_board_subscriptionUpsertWithWhereUniqueWithoutThreadInput | discussion_board_subscriptionUpsertWithWhereUniqueWithoutThreadInput[]\n    createMany?: discussion_board_subscriptionCreateManyThreadInputEnvelope\n    set?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n    disconnect?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n    delete?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n    connect?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n    update?: discussion_board_subscriptionUpdateWithWhereUniqueWithoutThreadInput | discussion_board_subscriptionUpdateWithWhereUniqueWithoutThreadInput[]\n    updateMany?: discussion_board_subscriptionUpdateManyWithWhereWithoutThreadInput | discussion_board_subscriptionUpdateManyWithWhereWithoutThreadInput[]\n    deleteMany?: discussion_board_subscriptionScalarWhereInput | discussion_board_subscriptionScalarWhereInput[]\n  }\n\n  export type discussion_board_reportUpdateManyWithoutThreadNestedInput = {\n    create?: XOR<discussion_board_reportCreateWithoutThreadInput, discussion_board_reportUncheckedCreateWithoutThreadInput> | discussion_board_reportCreateWithoutThreadInput[] | discussion_board_reportUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: discussion_board_reportCreateOrConnectWithoutThreadInput | discussion_board_reportCreateOrConnectWithoutThreadInput[]\n    upsert?: discussion_board_reportUpsertWithWhereUniqueWithoutThreadInput | discussion_board_reportUpsertWithWhereUniqueWithoutThreadInput[]\n    createMany?: discussion_board_reportCreateManyThreadInputEnvelope\n    set?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n    disconnect?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n    delete?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n    connect?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n    update?: discussion_board_reportUpdateWithWhereUniqueWithoutThreadInput | discussion_board_reportUpdateWithWhereUniqueWithoutThreadInput[]\n    updateMany?: discussion_board_reportUpdateManyWithWhereWithoutThreadInput | discussion_board_reportUpdateManyWithWhereWithoutThreadInput[]\n    deleteMany?: discussion_board_reportScalarWhereInput | discussion_board_reportScalarWhereInput[]\n  }\n\n  export type discussion_board_moderator_actionUpdateManyWithoutThreadNestedInput = {\n    create?: XOR<discussion_board_moderator_actionCreateWithoutThreadInput, discussion_board_moderator_actionUncheckedCreateWithoutThreadInput> | discussion_board_moderator_actionCreateWithoutThreadInput[] | discussion_board_moderator_actionUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: discussion_board_moderator_actionCreateOrConnectWithoutThreadInput | discussion_board_moderator_actionCreateOrConnectWithoutThreadInput[]\n    upsert?: discussion_board_moderator_actionUpsertWithWhereUniqueWithoutThreadInput | discussion_board_moderator_actionUpsertWithWhereUniqueWithoutThreadInput[]\n    createMany?: discussion_board_moderator_actionCreateManyThreadInputEnvelope\n    set?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    disconnect?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    delete?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    connect?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    update?: discussion_board_moderator_actionUpdateWithWhereUniqueWithoutThreadInput | discussion_board_moderator_actionUpdateWithWhereUniqueWithoutThreadInput[]\n    updateMany?: discussion_board_moderator_actionUpdateManyWithWhereWithoutThreadInput | discussion_board_moderator_actionUpdateManyWithWhereWithoutThreadInput[]\n    deleteMany?: discussion_board_moderator_actionScalarWhereInput | discussion_board_moderator_actionScalarWhereInput[]\n  }\n\n  export type discussion_board_warningUpdateManyWithoutThreadNestedInput = {\n    create?: XOR<discussion_board_warningCreateWithoutThreadInput, discussion_board_warningUncheckedCreateWithoutThreadInput> | discussion_board_warningCreateWithoutThreadInput[] | discussion_board_warningUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: discussion_board_warningCreateOrConnectWithoutThreadInput | discussion_board_warningCreateOrConnectWithoutThreadInput[]\n    upsert?: discussion_board_warningUpsertWithWhereUniqueWithoutThreadInput | discussion_board_warningUpsertWithWhereUniqueWithoutThreadInput[]\n    createMany?: discussion_board_warningCreateManyThreadInputEnvelope\n    set?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n    disconnect?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n    delete?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n    connect?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n    update?: discussion_board_warningUpdateWithWhereUniqueWithoutThreadInput | discussion_board_warningUpdateWithWhereUniqueWithoutThreadInput[]\n    updateMany?: discussion_board_warningUpdateManyWithWhereWithoutThreadInput | discussion_board_warningUpdateManyWithWhereWithoutThreadInput[]\n    deleteMany?: discussion_board_warningScalarWhereInput | discussion_board_warningScalarWhereInput[]\n  }\n\n  export type discussion_board_thread_statsUpdateOneWithoutDiscussion_board_threadNestedInput = {\n    create?: XOR<discussion_board_thread_statsCreateWithoutDiscussion_board_threadInput, discussion_board_thread_statsUncheckedCreateWithoutDiscussion_board_threadInput>\n    connectOrCreate?: discussion_board_thread_statsCreateOrConnectWithoutDiscussion_board_threadInput\n    upsert?: discussion_board_thread_statsUpsertWithoutDiscussion_board_threadInput\n    disconnect?: discussion_board_thread_statsWhereInput | boolean\n    delete?: discussion_board_thread_statsWhereInput | boolean\n    connect?: discussion_board_thread_statsWhereUniqueInput\n    update?: XOR<XOR<discussion_board_thread_statsUpdateToOneWithWhereWithoutDiscussion_board_threadInput, discussion_board_thread_statsUpdateWithoutDiscussion_board_threadInput>, discussion_board_thread_statsUncheckedUpdateWithoutDiscussion_board_threadInput>\n  }\n\n  export type discussion_board_postUncheckedUpdateManyWithoutThreadNestedInput = {\n    create?: XOR<discussion_board_postCreateWithoutThreadInput, discussion_board_postUncheckedCreateWithoutThreadInput> | discussion_board_postCreateWithoutThreadInput[] | discussion_board_postUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: discussion_board_postCreateOrConnectWithoutThreadInput | discussion_board_postCreateOrConnectWithoutThreadInput[]\n    upsert?: discussion_board_postUpsertWithWhereUniqueWithoutThreadInput | discussion_board_postUpsertWithWhereUniqueWithoutThreadInput[]\n    createMany?: discussion_board_postCreateManyThreadInputEnvelope\n    set?: discussion_board_postWhereUniqueInput | discussion_board_postWhereUniqueInput[]\n    disconnect?: discussion_board_postWhereUniqueInput | discussion_board_postWhereUniqueInput[]\n    delete?: discussion_board_postWhereUniqueInput | discussion_board_postWhereUniqueInput[]\n    connect?: discussion_board_postWhereUniqueInput | discussion_board_postWhereUniqueInput[]\n    update?: discussion_board_postUpdateWithWhereUniqueWithoutThreadInput | discussion_board_postUpdateWithWhereUniqueWithoutThreadInput[]\n    updateMany?: discussion_board_postUpdateManyWithWhereWithoutThreadInput | discussion_board_postUpdateManyWithWhereWithoutThreadInput[]\n    deleteMany?: discussion_board_postScalarWhereInput | discussion_board_postScalarWhereInput[]\n  }\n\n  export type discussion_board_thread_tagUncheckedUpdateManyWithoutThreadNestedInput = {\n    create?: XOR<discussion_board_thread_tagCreateWithoutThreadInput, discussion_board_thread_tagUncheckedCreateWithoutThreadInput> | discussion_board_thread_tagCreateWithoutThreadInput[] | discussion_board_thread_tagUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: discussion_board_thread_tagCreateOrConnectWithoutThreadInput | discussion_board_thread_tagCreateOrConnectWithoutThreadInput[]\n    upsert?: discussion_board_thread_tagUpsertWithWhereUniqueWithoutThreadInput | discussion_board_thread_tagUpsertWithWhereUniqueWithoutThreadInput[]\n    createMany?: discussion_board_thread_tagCreateManyThreadInputEnvelope\n    set?: discussion_board_thread_tagWhereUniqueInput | discussion_board_thread_tagWhereUniqueInput[]\n    disconnect?: discussion_board_thread_tagWhereUniqueInput | discussion_board_thread_tagWhereUniqueInput[]\n    delete?: discussion_board_thread_tagWhereUniqueInput | discussion_board_thread_tagWhereUniqueInput[]\n    connect?: discussion_board_thread_tagWhereUniqueInput | discussion_board_thread_tagWhereUniqueInput[]\n    update?: discussion_board_thread_tagUpdateWithWhereUniqueWithoutThreadInput | discussion_board_thread_tagUpdateWithWhereUniqueWithoutThreadInput[]\n    updateMany?: discussion_board_thread_tagUpdateManyWithWhereWithoutThreadInput | discussion_board_thread_tagUpdateManyWithWhereWithoutThreadInput[]\n    deleteMany?: discussion_board_thread_tagScalarWhereInput | discussion_board_thread_tagScalarWhereInput[]\n  }\n\n  export type mv_discussion_thread_activityUncheckedUpdateOneWithoutThreadNestedInput = {\n    create?: XOR<mv_discussion_thread_activityCreateWithoutThreadInput, mv_discussion_thread_activityUncheckedCreateWithoutThreadInput>\n    connectOrCreate?: mv_discussion_thread_activityCreateOrConnectWithoutThreadInput\n    upsert?: mv_discussion_thread_activityUpsertWithoutThreadInput\n    disconnect?: mv_discussion_thread_activityWhereInput | boolean\n    delete?: mv_discussion_thread_activityWhereInput | boolean\n    connect?: mv_discussion_thread_activityWhereUniqueInput\n    update?: XOR<XOR<mv_discussion_thread_activityUpdateToOneWithWhereWithoutThreadInput, mv_discussion_thread_activityUpdateWithoutThreadInput>, mv_discussion_thread_activityUncheckedUpdateWithoutThreadInput>\n  }\n\n  export type discussion_board_voteUncheckedUpdateManyWithoutThreadNestedInput = {\n    create?: XOR<discussion_board_voteCreateWithoutThreadInput, discussion_board_voteUncheckedCreateWithoutThreadInput> | discussion_board_voteCreateWithoutThreadInput[] | discussion_board_voteUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: discussion_board_voteCreateOrConnectWithoutThreadInput | discussion_board_voteCreateOrConnectWithoutThreadInput[]\n    upsert?: discussion_board_voteUpsertWithWhereUniqueWithoutThreadInput | discussion_board_voteUpsertWithWhereUniqueWithoutThreadInput[]\n    createMany?: discussion_board_voteCreateManyThreadInputEnvelope\n    set?: discussion_board_voteWhereUniqueInput | discussion_board_voteWhereUniqueInput[]\n    disconnect?: discussion_board_voteWhereUniqueInput | discussion_board_voteWhereUniqueInput[]\n    delete?: discussion_board_voteWhereUniqueInput | discussion_board_voteWhereUniqueInput[]\n    connect?: discussion_board_voteWhereUniqueInput | discussion_board_voteWhereUniqueInput[]\n    update?: discussion_board_voteUpdateWithWhereUniqueWithoutThreadInput | discussion_board_voteUpdateWithWhereUniqueWithoutThreadInput[]\n    updateMany?: discussion_board_voteUpdateManyWithWhereWithoutThreadInput | discussion_board_voteUpdateManyWithWhereWithoutThreadInput[]\n    deleteMany?: discussion_board_voteScalarWhereInput | discussion_board_voteScalarWhereInput[]\n  }\n\n  export type discussion_board_reactionUncheckedUpdateManyWithoutThreadNestedInput = {\n    create?: XOR<discussion_board_reactionCreateWithoutThreadInput, discussion_board_reactionUncheckedCreateWithoutThreadInput> | discussion_board_reactionCreateWithoutThreadInput[] | discussion_board_reactionUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: discussion_board_reactionCreateOrConnectWithoutThreadInput | discussion_board_reactionCreateOrConnectWithoutThreadInput[]\n    upsert?: discussion_board_reactionUpsertWithWhereUniqueWithoutThreadInput | discussion_board_reactionUpsertWithWhereUniqueWithoutThreadInput[]\n    createMany?: discussion_board_reactionCreateManyThreadInputEnvelope\n    set?: discussion_board_reactionWhereUniqueInput | discussion_board_reactionWhereUniqueInput[]\n    disconnect?: discussion_board_reactionWhereUniqueInput | discussion_board_reactionWhereUniqueInput[]\n    delete?: discussion_board_reactionWhereUniqueInput | discussion_board_reactionWhereUniqueInput[]\n    connect?: discussion_board_reactionWhereUniqueInput | discussion_board_reactionWhereUniqueInput[]\n    update?: discussion_board_reactionUpdateWithWhereUniqueWithoutThreadInput | discussion_board_reactionUpdateWithWhereUniqueWithoutThreadInput[]\n    updateMany?: discussion_board_reactionUpdateManyWithWhereWithoutThreadInput | discussion_board_reactionUpdateManyWithWhereWithoutThreadInput[]\n    deleteMany?: discussion_board_reactionScalarWhereInput | discussion_board_reactionScalarWhereInput[]\n  }\n\n  export type discussion_board_bookmarkUncheckedUpdateManyWithoutThreadNestedInput = {\n    create?: XOR<discussion_board_bookmarkCreateWithoutThreadInput, discussion_board_bookmarkUncheckedCreateWithoutThreadInput> | discussion_board_bookmarkCreateWithoutThreadInput[] | discussion_board_bookmarkUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: discussion_board_bookmarkCreateOrConnectWithoutThreadInput | discussion_board_bookmarkCreateOrConnectWithoutThreadInput[]\n    upsert?: discussion_board_bookmarkUpsertWithWhereUniqueWithoutThreadInput | discussion_board_bookmarkUpsertWithWhereUniqueWithoutThreadInput[]\n    createMany?: discussion_board_bookmarkCreateManyThreadInputEnvelope\n    set?: discussion_board_bookmarkWhereUniqueInput | discussion_board_bookmarkWhereUniqueInput[]\n    disconnect?: discussion_board_bookmarkWhereUniqueInput | discussion_board_bookmarkWhereUniqueInput[]\n    delete?: discussion_board_bookmarkWhereUniqueInput | discussion_board_bookmarkWhereUniqueInput[]\n    connect?: discussion_board_bookmarkWhereUniqueInput | discussion_board_bookmarkWhereUniqueInput[]\n    update?: discussion_board_bookmarkUpdateWithWhereUniqueWithoutThreadInput | discussion_board_bookmarkUpdateWithWhereUniqueWithoutThreadInput[]\n    updateMany?: discussion_board_bookmarkUpdateManyWithWhereWithoutThreadInput | discussion_board_bookmarkUpdateManyWithWhereWithoutThreadInput[]\n    deleteMany?: discussion_board_bookmarkScalarWhereInput | discussion_board_bookmarkScalarWhereInput[]\n  }\n\n  export type discussion_board_notificationUncheckedUpdateManyWithoutThreadNestedInput = {\n    create?: XOR<discussion_board_notificationCreateWithoutThreadInput, discussion_board_notificationUncheckedCreateWithoutThreadInput> | discussion_board_notificationCreateWithoutThreadInput[] | discussion_board_notificationUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: discussion_board_notificationCreateOrConnectWithoutThreadInput | discussion_board_notificationCreateOrConnectWithoutThreadInput[]\n    upsert?: discussion_board_notificationUpsertWithWhereUniqueWithoutThreadInput | discussion_board_notificationUpsertWithWhereUniqueWithoutThreadInput[]\n    createMany?: discussion_board_notificationCreateManyThreadInputEnvelope\n    set?: discussion_board_notificationWhereUniqueInput | discussion_board_notificationWhereUniqueInput[]\n    disconnect?: discussion_board_notificationWhereUniqueInput | discussion_board_notificationWhereUniqueInput[]\n    delete?: discussion_board_notificationWhereUniqueInput | discussion_board_notificationWhereUniqueInput[]\n    connect?: discussion_board_notificationWhereUniqueInput | discussion_board_notificationWhereUniqueInput[]\n    update?: discussion_board_notificationUpdateWithWhereUniqueWithoutThreadInput | discussion_board_notificationUpdateWithWhereUniqueWithoutThreadInput[]\n    updateMany?: discussion_board_notificationUpdateManyWithWhereWithoutThreadInput | discussion_board_notificationUpdateManyWithWhereWithoutThreadInput[]\n    deleteMany?: discussion_board_notificationScalarWhereInput | discussion_board_notificationScalarWhereInput[]\n  }\n\n  export type discussion_board_subscriptionUncheckedUpdateManyWithoutThreadNestedInput = {\n    create?: XOR<discussion_board_subscriptionCreateWithoutThreadInput, discussion_board_subscriptionUncheckedCreateWithoutThreadInput> | discussion_board_subscriptionCreateWithoutThreadInput[] | discussion_board_subscriptionUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: discussion_board_subscriptionCreateOrConnectWithoutThreadInput | discussion_board_subscriptionCreateOrConnectWithoutThreadInput[]\n    upsert?: discussion_board_subscriptionUpsertWithWhereUniqueWithoutThreadInput | discussion_board_subscriptionUpsertWithWhereUniqueWithoutThreadInput[]\n    createMany?: discussion_board_subscriptionCreateManyThreadInputEnvelope\n    set?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n    disconnect?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n    delete?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n    connect?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n    update?: discussion_board_subscriptionUpdateWithWhereUniqueWithoutThreadInput | discussion_board_subscriptionUpdateWithWhereUniqueWithoutThreadInput[]\n    updateMany?: discussion_board_subscriptionUpdateManyWithWhereWithoutThreadInput | discussion_board_subscriptionUpdateManyWithWhereWithoutThreadInput[]\n    deleteMany?: discussion_board_subscriptionScalarWhereInput | discussion_board_subscriptionScalarWhereInput[]\n  }\n\n  export type discussion_board_reportUncheckedUpdateManyWithoutThreadNestedInput = {\n    create?: XOR<discussion_board_reportCreateWithoutThreadInput, discussion_board_reportUncheckedCreateWithoutThreadInput> | discussion_board_reportCreateWithoutThreadInput[] | discussion_board_reportUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: discussion_board_reportCreateOrConnectWithoutThreadInput | discussion_board_reportCreateOrConnectWithoutThreadInput[]\n    upsert?: discussion_board_reportUpsertWithWhereUniqueWithoutThreadInput | discussion_board_reportUpsertWithWhereUniqueWithoutThreadInput[]\n    createMany?: discussion_board_reportCreateManyThreadInputEnvelope\n    set?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n    disconnect?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n    delete?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n    connect?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n    update?: discussion_board_reportUpdateWithWhereUniqueWithoutThreadInput | discussion_board_reportUpdateWithWhereUniqueWithoutThreadInput[]\n    updateMany?: discussion_board_reportUpdateManyWithWhereWithoutThreadInput | discussion_board_reportUpdateManyWithWhereWithoutThreadInput[]\n    deleteMany?: discussion_board_reportScalarWhereInput | discussion_board_reportScalarWhereInput[]\n  }\n\n  export type discussion_board_moderator_actionUncheckedUpdateManyWithoutThreadNestedInput = {\n    create?: XOR<discussion_board_moderator_actionCreateWithoutThreadInput, discussion_board_moderator_actionUncheckedCreateWithoutThreadInput> | discussion_board_moderator_actionCreateWithoutThreadInput[] | discussion_board_moderator_actionUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: discussion_board_moderator_actionCreateOrConnectWithoutThreadInput | discussion_board_moderator_actionCreateOrConnectWithoutThreadInput[]\n    upsert?: discussion_board_moderator_actionUpsertWithWhereUniqueWithoutThreadInput | discussion_board_moderator_actionUpsertWithWhereUniqueWithoutThreadInput[]\n    createMany?: discussion_board_moderator_actionCreateManyThreadInputEnvelope\n    set?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    disconnect?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    delete?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    connect?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    update?: discussion_board_moderator_actionUpdateWithWhereUniqueWithoutThreadInput | discussion_board_moderator_actionUpdateWithWhereUniqueWithoutThreadInput[]\n    updateMany?: discussion_board_moderator_actionUpdateManyWithWhereWithoutThreadInput | discussion_board_moderator_actionUpdateManyWithWhereWithoutThreadInput[]\n    deleteMany?: discussion_board_moderator_actionScalarWhereInput | discussion_board_moderator_actionScalarWhereInput[]\n  }\n\n  export type discussion_board_warningUncheckedUpdateManyWithoutThreadNestedInput = {\n    create?: XOR<discussion_board_warningCreateWithoutThreadInput, discussion_board_warningUncheckedCreateWithoutThreadInput> | discussion_board_warningCreateWithoutThreadInput[] | discussion_board_warningUncheckedCreateWithoutThreadInput[]\n    connectOrCreate?: discussion_board_warningCreateOrConnectWithoutThreadInput | discussion_board_warningCreateOrConnectWithoutThreadInput[]\n    upsert?: discussion_board_warningUpsertWithWhereUniqueWithoutThreadInput | discussion_board_warningUpsertWithWhereUniqueWithoutThreadInput[]\n    createMany?: discussion_board_warningCreateManyThreadInputEnvelope\n    set?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n    disconnect?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n    delete?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n    connect?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n    update?: discussion_board_warningUpdateWithWhereUniqueWithoutThreadInput | discussion_board_warningUpdateWithWhereUniqueWithoutThreadInput[]\n    updateMany?: discussion_board_warningUpdateManyWithWhereWithoutThreadInput | discussion_board_warningUpdateManyWithWhereWithoutThreadInput[]\n    deleteMany?: discussion_board_warningScalarWhereInput | discussion_board_warningScalarWhereInput[]\n  }\n\n  export type discussion_board_thread_statsUncheckedUpdateOneWithoutDiscussion_board_threadNestedInput = {\n    create?: XOR<discussion_board_thread_statsCreateWithoutDiscussion_board_threadInput, discussion_board_thread_statsUncheckedCreateWithoutDiscussion_board_threadInput>\n    connectOrCreate?: discussion_board_thread_statsCreateOrConnectWithoutDiscussion_board_threadInput\n    upsert?: discussion_board_thread_statsUpsertWithoutDiscussion_board_threadInput\n    disconnect?: discussion_board_thread_statsWhereInput | boolean\n    delete?: discussion_board_thread_statsWhereInput | boolean\n    connect?: discussion_board_thread_statsWhereUniqueInput\n    update?: XOR<XOR<discussion_board_thread_statsUpdateToOneWithWhereWithoutDiscussion_board_threadInput, discussion_board_thread_statsUpdateWithoutDiscussion_board_threadInput>, discussion_board_thread_statsUncheckedUpdateWithoutDiscussion_board_threadInput>\n  }\n\n  export type discussion_board_threadCreateNestedOneWithoutDiscussion_board_postInput = {\n    create?: XOR<discussion_board_threadCreateWithoutDiscussion_board_postInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_postInput>\n    connectOrCreate?: discussion_board_threadCreateOrConnectWithoutDiscussion_board_postInput\n    connect?: discussion_board_threadWhereUniqueInput\n  }\n\n  export type discussion_board_usersCreateNestedOneWithoutDiscussion_board_postInput = {\n    create?: XOR<discussion_board_usersCreateWithoutDiscussion_board_postInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_postInput>\n    connectOrCreate?: discussion_board_usersCreateOrConnectWithoutDiscussion_board_postInput\n    connect?: discussion_board_usersWhereUniqueInput\n  }\n\n  export type discussion_board_postCreateNestedOneWithoutRecursiveInput = {\n    create?: XOR<discussion_board_postCreateWithoutRecursiveInput, discussion_board_postUncheckedCreateWithoutRecursiveInput>\n    connectOrCreate?: discussion_board_postCreateOrConnectWithoutRecursiveInput\n    connect?: discussion_board_postWhereUniqueInput\n  }\n\n  export type discussion_board_postCreateNestedManyWithoutParent_postInput = {\n    create?: XOR<discussion_board_postCreateWithoutParent_postInput, discussion_board_postUncheckedCreateWithoutParent_postInput> | discussion_board_postCreateWithoutParent_postInput[] | discussion_board_postUncheckedCreateWithoutParent_postInput[]\n    connectOrCreate?: discussion_board_postCreateOrConnectWithoutParent_postInput | discussion_board_postCreateOrConnectWithoutParent_postInput[]\n    createMany?: discussion_board_postCreateManyParent_postInputEnvelope\n    connect?: discussion_board_postWhereUniqueInput | discussion_board_postWhereUniqueInput[]\n  }\n\n  export type discussion_board_commentCreateNestedManyWithoutPostInput = {\n    create?: XOR<discussion_board_commentCreateWithoutPostInput, discussion_board_commentUncheckedCreateWithoutPostInput> | discussion_board_commentCreateWithoutPostInput[] | discussion_board_commentUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussion_board_commentCreateOrConnectWithoutPostInput | discussion_board_commentCreateOrConnectWithoutPostInput[]\n    createMany?: discussion_board_commentCreateManyPostInputEnvelope\n    connect?: discussion_board_commentWhereUniqueInput | discussion_board_commentWhereUniqueInput[]\n  }\n\n  export type discussion_board_voteCreateNestedManyWithoutPostInput = {\n    create?: XOR<discussion_board_voteCreateWithoutPostInput, discussion_board_voteUncheckedCreateWithoutPostInput> | discussion_board_voteCreateWithoutPostInput[] | discussion_board_voteUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussion_board_voteCreateOrConnectWithoutPostInput | discussion_board_voteCreateOrConnectWithoutPostInput[]\n    createMany?: discussion_board_voteCreateManyPostInputEnvelope\n    connect?: discussion_board_voteWhereUniqueInput | discussion_board_voteWhereUniqueInput[]\n  }\n\n  export type discussion_board_reactionCreateNestedManyWithoutPostInput = {\n    create?: XOR<discussion_board_reactionCreateWithoutPostInput, discussion_board_reactionUncheckedCreateWithoutPostInput> | discussion_board_reactionCreateWithoutPostInput[] | discussion_board_reactionUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussion_board_reactionCreateOrConnectWithoutPostInput | discussion_board_reactionCreateOrConnectWithoutPostInput[]\n    createMany?: discussion_board_reactionCreateManyPostInputEnvelope\n    connect?: discussion_board_reactionWhereUniqueInput | discussion_board_reactionWhereUniqueInput[]\n  }\n\n  export type discussion_board_bookmarkCreateNestedManyWithoutPostInput = {\n    create?: XOR<discussion_board_bookmarkCreateWithoutPostInput, discussion_board_bookmarkUncheckedCreateWithoutPostInput> | discussion_board_bookmarkCreateWithoutPostInput[] | discussion_board_bookmarkUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussion_board_bookmarkCreateOrConnectWithoutPostInput | discussion_board_bookmarkCreateOrConnectWithoutPostInput[]\n    createMany?: discussion_board_bookmarkCreateManyPostInputEnvelope\n    connect?: discussion_board_bookmarkWhereUniqueInput | discussion_board_bookmarkWhereUniqueInput[]\n  }\n\n  export type discussion_board_notificationCreateNestedManyWithoutPostInput = {\n    create?: XOR<discussion_board_notificationCreateWithoutPostInput, discussion_board_notificationUncheckedCreateWithoutPostInput> | discussion_board_notificationCreateWithoutPostInput[] | discussion_board_notificationUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussion_board_notificationCreateOrConnectWithoutPostInput | discussion_board_notificationCreateOrConnectWithoutPostInput[]\n    createMany?: discussion_board_notificationCreateManyPostInputEnvelope\n    connect?: discussion_board_notificationWhereUniqueInput | discussion_board_notificationWhereUniqueInput[]\n  }\n\n  export type discussion_board_subscriptionCreateNestedManyWithoutPostInput = {\n    create?: XOR<discussion_board_subscriptionCreateWithoutPostInput, discussion_board_subscriptionUncheckedCreateWithoutPostInput> | discussion_board_subscriptionCreateWithoutPostInput[] | discussion_board_subscriptionUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussion_board_subscriptionCreateOrConnectWithoutPostInput | discussion_board_subscriptionCreateOrConnectWithoutPostInput[]\n    createMany?: discussion_board_subscriptionCreateManyPostInputEnvelope\n    connect?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n  }\n\n  export type discussion_board_reportCreateNestedManyWithoutPostInput = {\n    create?: XOR<discussion_board_reportCreateWithoutPostInput, discussion_board_reportUncheckedCreateWithoutPostInput> | discussion_board_reportCreateWithoutPostInput[] | discussion_board_reportUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussion_board_reportCreateOrConnectWithoutPostInput | discussion_board_reportCreateOrConnectWithoutPostInput[]\n    createMany?: discussion_board_reportCreateManyPostInputEnvelope\n    connect?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n  }\n\n  export type discussion_board_moderator_actionCreateNestedManyWithoutPostInput = {\n    create?: XOR<discussion_board_moderator_actionCreateWithoutPostInput, discussion_board_moderator_actionUncheckedCreateWithoutPostInput> | discussion_board_moderator_actionCreateWithoutPostInput[] | discussion_board_moderator_actionUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussion_board_moderator_actionCreateOrConnectWithoutPostInput | discussion_board_moderator_actionCreateOrConnectWithoutPostInput[]\n    createMany?: discussion_board_moderator_actionCreateManyPostInputEnvelope\n    connect?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n  }\n\n  export type discussion_board_warningCreateNestedManyWithoutPostInput = {\n    create?: XOR<discussion_board_warningCreateWithoutPostInput, discussion_board_warningUncheckedCreateWithoutPostInput> | discussion_board_warningCreateWithoutPostInput[] | discussion_board_warningUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussion_board_warningCreateOrConnectWithoutPostInput | discussion_board_warningCreateOrConnectWithoutPostInput[]\n    createMany?: discussion_board_warningCreateManyPostInputEnvelope\n    connect?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n  }\n\n  export type discussion_board_postUncheckedCreateNestedManyWithoutParent_postInput = {\n    create?: XOR<discussion_board_postCreateWithoutParent_postInput, discussion_board_postUncheckedCreateWithoutParent_postInput> | discussion_board_postCreateWithoutParent_postInput[] | discussion_board_postUncheckedCreateWithoutParent_postInput[]\n    connectOrCreate?: discussion_board_postCreateOrConnectWithoutParent_postInput | discussion_board_postCreateOrConnectWithoutParent_postInput[]\n    createMany?: discussion_board_postCreateManyParent_postInputEnvelope\n    connect?: discussion_board_postWhereUniqueInput | discussion_board_postWhereUniqueInput[]\n  }\n\n  export type discussion_board_commentUncheckedCreateNestedManyWithoutPostInput = {\n    create?: XOR<discussion_board_commentCreateWithoutPostInput, discussion_board_commentUncheckedCreateWithoutPostInput> | discussion_board_commentCreateWithoutPostInput[] | discussion_board_commentUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussion_board_commentCreateOrConnectWithoutPostInput | discussion_board_commentCreateOrConnectWithoutPostInput[]\n    createMany?: discussion_board_commentCreateManyPostInputEnvelope\n    connect?: discussion_board_commentWhereUniqueInput | discussion_board_commentWhereUniqueInput[]\n  }\n\n  export type discussion_board_voteUncheckedCreateNestedManyWithoutPostInput = {\n    create?: XOR<discussion_board_voteCreateWithoutPostInput, discussion_board_voteUncheckedCreateWithoutPostInput> | discussion_board_voteCreateWithoutPostInput[] | discussion_board_voteUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussion_board_voteCreateOrConnectWithoutPostInput | discussion_board_voteCreateOrConnectWithoutPostInput[]\n    createMany?: discussion_board_voteCreateManyPostInputEnvelope\n    connect?: discussion_board_voteWhereUniqueInput | discussion_board_voteWhereUniqueInput[]\n  }\n\n  export type discussion_board_reactionUncheckedCreateNestedManyWithoutPostInput = {\n    create?: XOR<discussion_board_reactionCreateWithoutPostInput, discussion_board_reactionUncheckedCreateWithoutPostInput> | discussion_board_reactionCreateWithoutPostInput[] | discussion_board_reactionUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussion_board_reactionCreateOrConnectWithoutPostInput | discussion_board_reactionCreateOrConnectWithoutPostInput[]\n    createMany?: discussion_board_reactionCreateManyPostInputEnvelope\n    connect?: discussion_board_reactionWhereUniqueInput | discussion_board_reactionWhereUniqueInput[]\n  }\n\n  export type discussion_board_bookmarkUncheckedCreateNestedManyWithoutPostInput = {\n    create?: XOR<discussion_board_bookmarkCreateWithoutPostInput, discussion_board_bookmarkUncheckedCreateWithoutPostInput> | discussion_board_bookmarkCreateWithoutPostInput[] | discussion_board_bookmarkUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussion_board_bookmarkCreateOrConnectWithoutPostInput | discussion_board_bookmarkCreateOrConnectWithoutPostInput[]\n    createMany?: discussion_board_bookmarkCreateManyPostInputEnvelope\n    connect?: discussion_board_bookmarkWhereUniqueInput | discussion_board_bookmarkWhereUniqueInput[]\n  }\n\n  export type discussion_board_notificationUncheckedCreateNestedManyWithoutPostInput = {\n    create?: XOR<discussion_board_notificationCreateWithoutPostInput, discussion_board_notificationUncheckedCreateWithoutPostInput> | discussion_board_notificationCreateWithoutPostInput[] | discussion_board_notificationUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussion_board_notificationCreateOrConnectWithoutPostInput | discussion_board_notificationCreateOrConnectWithoutPostInput[]\n    createMany?: discussion_board_notificationCreateManyPostInputEnvelope\n    connect?: discussion_board_notificationWhereUniqueInput | discussion_board_notificationWhereUniqueInput[]\n  }\n\n  export type discussion_board_subscriptionUncheckedCreateNestedManyWithoutPostInput = {\n    create?: XOR<discussion_board_subscriptionCreateWithoutPostInput, discussion_board_subscriptionUncheckedCreateWithoutPostInput> | discussion_board_subscriptionCreateWithoutPostInput[] | discussion_board_subscriptionUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussion_board_subscriptionCreateOrConnectWithoutPostInput | discussion_board_subscriptionCreateOrConnectWithoutPostInput[]\n    createMany?: discussion_board_subscriptionCreateManyPostInputEnvelope\n    connect?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n  }\n\n  export type discussion_board_reportUncheckedCreateNestedManyWithoutPostInput = {\n    create?: XOR<discussion_board_reportCreateWithoutPostInput, discussion_board_reportUncheckedCreateWithoutPostInput> | discussion_board_reportCreateWithoutPostInput[] | discussion_board_reportUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussion_board_reportCreateOrConnectWithoutPostInput | discussion_board_reportCreateOrConnectWithoutPostInput[]\n    createMany?: discussion_board_reportCreateManyPostInputEnvelope\n    connect?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n  }\n\n  export type discussion_board_moderator_actionUncheckedCreateNestedManyWithoutPostInput = {\n    create?: XOR<discussion_board_moderator_actionCreateWithoutPostInput, discussion_board_moderator_actionUncheckedCreateWithoutPostInput> | discussion_board_moderator_actionCreateWithoutPostInput[] | discussion_board_moderator_actionUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussion_board_moderator_actionCreateOrConnectWithoutPostInput | discussion_board_moderator_actionCreateOrConnectWithoutPostInput[]\n    createMany?: discussion_board_moderator_actionCreateManyPostInputEnvelope\n    connect?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n  }\n\n  export type discussion_board_warningUncheckedCreateNestedManyWithoutPostInput = {\n    create?: XOR<discussion_board_warningCreateWithoutPostInput, discussion_board_warningUncheckedCreateWithoutPostInput> | discussion_board_warningCreateWithoutPostInput[] | discussion_board_warningUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussion_board_warningCreateOrConnectWithoutPostInput | discussion_board_warningCreateOrConnectWithoutPostInput[]\n    createMany?: discussion_board_warningCreateManyPostInputEnvelope\n    connect?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n  }\n\n  export type discussion_board_threadUpdateOneRequiredWithoutDiscussion_board_postNestedInput = {\n    create?: XOR<discussion_board_threadCreateWithoutDiscussion_board_postInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_postInput>\n    connectOrCreate?: discussion_board_threadCreateOrConnectWithoutDiscussion_board_postInput\n    upsert?: discussion_board_threadUpsertWithoutDiscussion_board_postInput\n    connect?: discussion_board_threadWhereUniqueInput\n    update?: XOR<XOR<discussion_board_threadUpdateToOneWithWhereWithoutDiscussion_board_postInput, discussion_board_threadUpdateWithoutDiscussion_board_postInput>, discussion_board_threadUncheckedUpdateWithoutDiscussion_board_postInput>\n  }\n\n  export type discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_postNestedInput = {\n    create?: XOR<discussion_board_usersCreateWithoutDiscussion_board_postInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_postInput>\n    connectOrCreate?: discussion_board_usersCreateOrConnectWithoutDiscussion_board_postInput\n    upsert?: discussion_board_usersUpsertWithoutDiscussion_board_postInput\n    connect?: discussion_board_usersWhereUniqueInput\n    update?: XOR<XOR<discussion_board_usersUpdateToOneWithWhereWithoutDiscussion_board_postInput, discussion_board_usersUpdateWithoutDiscussion_board_postInput>, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_postInput>\n  }\n\n  export type discussion_board_postUpdateOneWithoutRecursiveNestedInput = {\n    create?: XOR<discussion_board_postCreateWithoutRecursiveInput, discussion_board_postUncheckedCreateWithoutRecursiveInput>\n    connectOrCreate?: discussion_board_postCreateOrConnectWithoutRecursiveInput\n    upsert?: discussion_board_postUpsertWithoutRecursiveInput\n    disconnect?: discussion_board_postWhereInput | boolean\n    delete?: discussion_board_postWhereInput | boolean\n    connect?: discussion_board_postWhereUniqueInput\n    update?: XOR<XOR<discussion_board_postUpdateToOneWithWhereWithoutRecursiveInput, discussion_board_postUpdateWithoutRecursiveInput>, discussion_board_postUncheckedUpdateWithoutRecursiveInput>\n  }\n\n  export type discussion_board_postUpdateManyWithoutParent_postNestedInput = {\n    create?: XOR<discussion_board_postCreateWithoutParent_postInput, discussion_board_postUncheckedCreateWithoutParent_postInput> | discussion_board_postCreateWithoutParent_postInput[] | discussion_board_postUncheckedCreateWithoutParent_postInput[]\n    connectOrCreate?: discussion_board_postCreateOrConnectWithoutParent_postInput | discussion_board_postCreateOrConnectWithoutParent_postInput[]\n    upsert?: discussion_board_postUpsertWithWhereUniqueWithoutParent_postInput | discussion_board_postUpsertWithWhereUniqueWithoutParent_postInput[]\n    createMany?: discussion_board_postCreateManyParent_postInputEnvelope\n    set?: discussion_board_postWhereUniqueInput | discussion_board_postWhereUniqueInput[]\n    disconnect?: discussion_board_postWhereUniqueInput | discussion_board_postWhereUniqueInput[]\n    delete?: discussion_board_postWhereUniqueInput | discussion_board_postWhereUniqueInput[]\n    connect?: discussion_board_postWhereUniqueInput | discussion_board_postWhereUniqueInput[]\n    update?: discussion_board_postUpdateWithWhereUniqueWithoutParent_postInput | discussion_board_postUpdateWithWhereUniqueWithoutParent_postInput[]\n    updateMany?: discussion_board_postUpdateManyWithWhereWithoutParent_postInput | discussion_board_postUpdateManyWithWhereWithoutParent_postInput[]\n    deleteMany?: discussion_board_postScalarWhereInput | discussion_board_postScalarWhereInput[]\n  }\n\n  export type discussion_board_commentUpdateManyWithoutPostNestedInput = {\n    create?: XOR<discussion_board_commentCreateWithoutPostInput, discussion_board_commentUncheckedCreateWithoutPostInput> | discussion_board_commentCreateWithoutPostInput[] | discussion_board_commentUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussion_board_commentCreateOrConnectWithoutPostInput | discussion_board_commentCreateOrConnectWithoutPostInput[]\n    upsert?: discussion_board_commentUpsertWithWhereUniqueWithoutPostInput | discussion_board_commentUpsertWithWhereUniqueWithoutPostInput[]\n    createMany?: discussion_board_commentCreateManyPostInputEnvelope\n    set?: discussion_board_commentWhereUniqueInput | discussion_board_commentWhereUniqueInput[]\n    disconnect?: discussion_board_commentWhereUniqueInput | discussion_board_commentWhereUniqueInput[]\n    delete?: discussion_board_commentWhereUniqueInput | discussion_board_commentWhereUniqueInput[]\n    connect?: discussion_board_commentWhereUniqueInput | discussion_board_commentWhereUniqueInput[]\n    update?: discussion_board_commentUpdateWithWhereUniqueWithoutPostInput | discussion_board_commentUpdateWithWhereUniqueWithoutPostInput[]\n    updateMany?: discussion_board_commentUpdateManyWithWhereWithoutPostInput | discussion_board_commentUpdateManyWithWhereWithoutPostInput[]\n    deleteMany?: discussion_board_commentScalarWhereInput | discussion_board_commentScalarWhereInput[]\n  }\n\n  export type discussion_board_voteUpdateManyWithoutPostNestedInput = {\n    create?: XOR<discussion_board_voteCreateWithoutPostInput, discussion_board_voteUncheckedCreateWithoutPostInput> | discussion_board_voteCreateWithoutPostInput[] | discussion_board_voteUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussion_board_voteCreateOrConnectWithoutPostInput | discussion_board_voteCreateOrConnectWithoutPostInput[]\n    upsert?: discussion_board_voteUpsertWithWhereUniqueWithoutPostInput | discussion_board_voteUpsertWithWhereUniqueWithoutPostInput[]\n    createMany?: discussion_board_voteCreateManyPostInputEnvelope\n    set?: discussion_board_voteWhereUniqueInput | discussion_board_voteWhereUniqueInput[]\n    disconnect?: discussion_board_voteWhereUniqueInput | discussion_board_voteWhereUniqueInput[]\n    delete?: discussion_board_voteWhereUniqueInput | discussion_board_voteWhereUniqueInput[]\n    connect?: discussion_board_voteWhereUniqueInput | discussion_board_voteWhereUniqueInput[]\n    update?: discussion_board_voteUpdateWithWhereUniqueWithoutPostInput | discussion_board_voteUpdateWithWhereUniqueWithoutPostInput[]\n    updateMany?: discussion_board_voteUpdateManyWithWhereWithoutPostInput | discussion_board_voteUpdateManyWithWhereWithoutPostInput[]\n    deleteMany?: discussion_board_voteScalarWhereInput | discussion_board_voteScalarWhereInput[]\n  }\n\n  export type discussion_board_reactionUpdateManyWithoutPostNestedInput = {\n    create?: XOR<discussion_board_reactionCreateWithoutPostInput, discussion_board_reactionUncheckedCreateWithoutPostInput> | discussion_board_reactionCreateWithoutPostInput[] | discussion_board_reactionUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussion_board_reactionCreateOrConnectWithoutPostInput | discussion_board_reactionCreateOrConnectWithoutPostInput[]\n    upsert?: discussion_board_reactionUpsertWithWhereUniqueWithoutPostInput | discussion_board_reactionUpsertWithWhereUniqueWithoutPostInput[]\n    createMany?: discussion_board_reactionCreateManyPostInputEnvelope\n    set?: discussion_board_reactionWhereUniqueInput | discussion_board_reactionWhereUniqueInput[]\n    disconnect?: discussion_board_reactionWhereUniqueInput | discussion_board_reactionWhereUniqueInput[]\n    delete?: discussion_board_reactionWhereUniqueInput | discussion_board_reactionWhereUniqueInput[]\n    connect?: discussion_board_reactionWhereUniqueInput | discussion_board_reactionWhereUniqueInput[]\n    update?: discussion_board_reactionUpdateWithWhereUniqueWithoutPostInput | discussion_board_reactionUpdateWithWhereUniqueWithoutPostInput[]\n    updateMany?: discussion_board_reactionUpdateManyWithWhereWithoutPostInput | discussion_board_reactionUpdateManyWithWhereWithoutPostInput[]\n    deleteMany?: discussion_board_reactionScalarWhereInput | discussion_board_reactionScalarWhereInput[]\n  }\n\n  export type discussion_board_bookmarkUpdateManyWithoutPostNestedInput = {\n    create?: XOR<discussion_board_bookmarkCreateWithoutPostInput, discussion_board_bookmarkUncheckedCreateWithoutPostInput> | discussion_board_bookmarkCreateWithoutPostInput[] | discussion_board_bookmarkUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussion_board_bookmarkCreateOrConnectWithoutPostInput | discussion_board_bookmarkCreateOrConnectWithoutPostInput[]\n    upsert?: discussion_board_bookmarkUpsertWithWhereUniqueWithoutPostInput | discussion_board_bookmarkUpsertWithWhereUniqueWithoutPostInput[]\n    createMany?: discussion_board_bookmarkCreateManyPostInputEnvelope\n    set?: discussion_board_bookmarkWhereUniqueInput | discussion_board_bookmarkWhereUniqueInput[]\n    disconnect?: discussion_board_bookmarkWhereUniqueInput | discussion_board_bookmarkWhereUniqueInput[]\n    delete?: discussion_board_bookmarkWhereUniqueInput | discussion_board_bookmarkWhereUniqueInput[]\n    connect?: discussion_board_bookmarkWhereUniqueInput | discussion_board_bookmarkWhereUniqueInput[]\n    update?: discussion_board_bookmarkUpdateWithWhereUniqueWithoutPostInput | discussion_board_bookmarkUpdateWithWhereUniqueWithoutPostInput[]\n    updateMany?: discussion_board_bookmarkUpdateManyWithWhereWithoutPostInput | discussion_board_bookmarkUpdateManyWithWhereWithoutPostInput[]\n    deleteMany?: discussion_board_bookmarkScalarWhereInput | discussion_board_bookmarkScalarWhereInput[]\n  }\n\n  export type discussion_board_notificationUpdateManyWithoutPostNestedInput = {\n    create?: XOR<discussion_board_notificationCreateWithoutPostInput, discussion_board_notificationUncheckedCreateWithoutPostInput> | discussion_board_notificationCreateWithoutPostInput[] | discussion_board_notificationUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussion_board_notificationCreateOrConnectWithoutPostInput | discussion_board_notificationCreateOrConnectWithoutPostInput[]\n    upsert?: discussion_board_notificationUpsertWithWhereUniqueWithoutPostInput | discussion_board_notificationUpsertWithWhereUniqueWithoutPostInput[]\n    createMany?: discussion_board_notificationCreateManyPostInputEnvelope\n    set?: discussion_board_notificationWhereUniqueInput | discussion_board_notificationWhereUniqueInput[]\n    disconnect?: discussion_board_notificationWhereUniqueInput | discussion_board_notificationWhereUniqueInput[]\n    delete?: discussion_board_notificationWhereUniqueInput | discussion_board_notificationWhereUniqueInput[]\n    connect?: discussion_board_notificationWhereUniqueInput | discussion_board_notificationWhereUniqueInput[]\n    update?: discussion_board_notificationUpdateWithWhereUniqueWithoutPostInput | discussion_board_notificationUpdateWithWhereUniqueWithoutPostInput[]\n    updateMany?: discussion_board_notificationUpdateManyWithWhereWithoutPostInput | discussion_board_notificationUpdateManyWithWhereWithoutPostInput[]\n    deleteMany?: discussion_board_notificationScalarWhereInput | discussion_board_notificationScalarWhereInput[]\n  }\n\n  export type discussion_board_subscriptionUpdateManyWithoutPostNestedInput = {\n    create?: XOR<discussion_board_subscriptionCreateWithoutPostInput, discussion_board_subscriptionUncheckedCreateWithoutPostInput> | discussion_board_subscriptionCreateWithoutPostInput[] | discussion_board_subscriptionUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussion_board_subscriptionCreateOrConnectWithoutPostInput | discussion_board_subscriptionCreateOrConnectWithoutPostInput[]\n    upsert?: discussion_board_subscriptionUpsertWithWhereUniqueWithoutPostInput | discussion_board_subscriptionUpsertWithWhereUniqueWithoutPostInput[]\n    createMany?: discussion_board_subscriptionCreateManyPostInputEnvelope\n    set?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n    disconnect?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n    delete?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n    connect?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n    update?: discussion_board_subscriptionUpdateWithWhereUniqueWithoutPostInput | discussion_board_subscriptionUpdateWithWhereUniqueWithoutPostInput[]\n    updateMany?: discussion_board_subscriptionUpdateManyWithWhereWithoutPostInput | discussion_board_subscriptionUpdateManyWithWhereWithoutPostInput[]\n    deleteMany?: discussion_board_subscriptionScalarWhereInput | discussion_board_subscriptionScalarWhereInput[]\n  }\n\n  export type discussion_board_reportUpdateManyWithoutPostNestedInput = {\n    create?: XOR<discussion_board_reportCreateWithoutPostInput, discussion_board_reportUncheckedCreateWithoutPostInput> | discussion_board_reportCreateWithoutPostInput[] | discussion_board_reportUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussion_board_reportCreateOrConnectWithoutPostInput | discussion_board_reportCreateOrConnectWithoutPostInput[]\n    upsert?: discussion_board_reportUpsertWithWhereUniqueWithoutPostInput | discussion_board_reportUpsertWithWhereUniqueWithoutPostInput[]\n    createMany?: discussion_board_reportCreateManyPostInputEnvelope\n    set?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n    disconnect?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n    delete?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n    connect?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n    update?: discussion_board_reportUpdateWithWhereUniqueWithoutPostInput | discussion_board_reportUpdateWithWhereUniqueWithoutPostInput[]\n    updateMany?: discussion_board_reportUpdateManyWithWhereWithoutPostInput | discussion_board_reportUpdateManyWithWhereWithoutPostInput[]\n    deleteMany?: discussion_board_reportScalarWhereInput | discussion_board_reportScalarWhereInput[]\n  }\n\n  export type discussion_board_moderator_actionUpdateManyWithoutPostNestedInput = {\n    create?: XOR<discussion_board_moderator_actionCreateWithoutPostInput, discussion_board_moderator_actionUncheckedCreateWithoutPostInput> | discussion_board_moderator_actionCreateWithoutPostInput[] | discussion_board_moderator_actionUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussion_board_moderator_actionCreateOrConnectWithoutPostInput | discussion_board_moderator_actionCreateOrConnectWithoutPostInput[]\n    upsert?: discussion_board_moderator_actionUpsertWithWhereUniqueWithoutPostInput | discussion_board_moderator_actionUpsertWithWhereUniqueWithoutPostInput[]\n    createMany?: discussion_board_moderator_actionCreateManyPostInputEnvelope\n    set?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    disconnect?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    delete?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    connect?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    update?: discussion_board_moderator_actionUpdateWithWhereUniqueWithoutPostInput | discussion_board_moderator_actionUpdateWithWhereUniqueWithoutPostInput[]\n    updateMany?: discussion_board_moderator_actionUpdateManyWithWhereWithoutPostInput | discussion_board_moderator_actionUpdateManyWithWhereWithoutPostInput[]\n    deleteMany?: discussion_board_moderator_actionScalarWhereInput | discussion_board_moderator_actionScalarWhereInput[]\n  }\n\n  export type discussion_board_warningUpdateManyWithoutPostNestedInput = {\n    create?: XOR<discussion_board_warningCreateWithoutPostInput, discussion_board_warningUncheckedCreateWithoutPostInput> | discussion_board_warningCreateWithoutPostInput[] | discussion_board_warningUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussion_board_warningCreateOrConnectWithoutPostInput | discussion_board_warningCreateOrConnectWithoutPostInput[]\n    upsert?: discussion_board_warningUpsertWithWhereUniqueWithoutPostInput | discussion_board_warningUpsertWithWhereUniqueWithoutPostInput[]\n    createMany?: discussion_board_warningCreateManyPostInputEnvelope\n    set?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n    disconnect?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n    delete?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n    connect?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n    update?: discussion_board_warningUpdateWithWhereUniqueWithoutPostInput | discussion_board_warningUpdateWithWhereUniqueWithoutPostInput[]\n    updateMany?: discussion_board_warningUpdateManyWithWhereWithoutPostInput | discussion_board_warningUpdateManyWithWhereWithoutPostInput[]\n    deleteMany?: discussion_board_warningScalarWhereInput | discussion_board_warningScalarWhereInput[]\n  }\n\n  export type discussion_board_postUncheckedUpdateManyWithoutParent_postNestedInput = {\n    create?: XOR<discussion_board_postCreateWithoutParent_postInput, discussion_board_postUncheckedCreateWithoutParent_postInput> | discussion_board_postCreateWithoutParent_postInput[] | discussion_board_postUncheckedCreateWithoutParent_postInput[]\n    connectOrCreate?: discussion_board_postCreateOrConnectWithoutParent_postInput | discussion_board_postCreateOrConnectWithoutParent_postInput[]\n    upsert?: discussion_board_postUpsertWithWhereUniqueWithoutParent_postInput | discussion_board_postUpsertWithWhereUniqueWithoutParent_postInput[]\n    createMany?: discussion_board_postCreateManyParent_postInputEnvelope\n    set?: discussion_board_postWhereUniqueInput | discussion_board_postWhereUniqueInput[]\n    disconnect?: discussion_board_postWhereUniqueInput | discussion_board_postWhereUniqueInput[]\n    delete?: discussion_board_postWhereUniqueInput | discussion_board_postWhereUniqueInput[]\n    connect?: discussion_board_postWhereUniqueInput | discussion_board_postWhereUniqueInput[]\n    update?: discussion_board_postUpdateWithWhereUniqueWithoutParent_postInput | discussion_board_postUpdateWithWhereUniqueWithoutParent_postInput[]\n    updateMany?: discussion_board_postUpdateManyWithWhereWithoutParent_postInput | discussion_board_postUpdateManyWithWhereWithoutParent_postInput[]\n    deleteMany?: discussion_board_postScalarWhereInput | discussion_board_postScalarWhereInput[]\n  }\n\n  export type discussion_board_commentUncheckedUpdateManyWithoutPostNestedInput = {\n    create?: XOR<discussion_board_commentCreateWithoutPostInput, discussion_board_commentUncheckedCreateWithoutPostInput> | discussion_board_commentCreateWithoutPostInput[] | discussion_board_commentUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussion_board_commentCreateOrConnectWithoutPostInput | discussion_board_commentCreateOrConnectWithoutPostInput[]\n    upsert?: discussion_board_commentUpsertWithWhereUniqueWithoutPostInput | discussion_board_commentUpsertWithWhereUniqueWithoutPostInput[]\n    createMany?: discussion_board_commentCreateManyPostInputEnvelope\n    set?: discussion_board_commentWhereUniqueInput | discussion_board_commentWhereUniqueInput[]\n    disconnect?: discussion_board_commentWhereUniqueInput | discussion_board_commentWhereUniqueInput[]\n    delete?: discussion_board_commentWhereUniqueInput | discussion_board_commentWhereUniqueInput[]\n    connect?: discussion_board_commentWhereUniqueInput | discussion_board_commentWhereUniqueInput[]\n    update?: discussion_board_commentUpdateWithWhereUniqueWithoutPostInput | discussion_board_commentUpdateWithWhereUniqueWithoutPostInput[]\n    updateMany?: discussion_board_commentUpdateManyWithWhereWithoutPostInput | discussion_board_commentUpdateManyWithWhereWithoutPostInput[]\n    deleteMany?: discussion_board_commentScalarWhereInput | discussion_board_commentScalarWhereInput[]\n  }\n\n  export type discussion_board_voteUncheckedUpdateManyWithoutPostNestedInput = {\n    create?: XOR<discussion_board_voteCreateWithoutPostInput, discussion_board_voteUncheckedCreateWithoutPostInput> | discussion_board_voteCreateWithoutPostInput[] | discussion_board_voteUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussion_board_voteCreateOrConnectWithoutPostInput | discussion_board_voteCreateOrConnectWithoutPostInput[]\n    upsert?: discussion_board_voteUpsertWithWhereUniqueWithoutPostInput | discussion_board_voteUpsertWithWhereUniqueWithoutPostInput[]\n    createMany?: discussion_board_voteCreateManyPostInputEnvelope\n    set?: discussion_board_voteWhereUniqueInput | discussion_board_voteWhereUniqueInput[]\n    disconnect?: discussion_board_voteWhereUniqueInput | discussion_board_voteWhereUniqueInput[]\n    delete?: discussion_board_voteWhereUniqueInput | discussion_board_voteWhereUniqueInput[]\n    connect?: discussion_board_voteWhereUniqueInput | discussion_board_voteWhereUniqueInput[]\n    update?: discussion_board_voteUpdateWithWhereUniqueWithoutPostInput | discussion_board_voteUpdateWithWhereUniqueWithoutPostInput[]\n    updateMany?: discussion_board_voteUpdateManyWithWhereWithoutPostInput | discussion_board_voteUpdateManyWithWhereWithoutPostInput[]\n    deleteMany?: discussion_board_voteScalarWhereInput | discussion_board_voteScalarWhereInput[]\n  }\n\n  export type discussion_board_reactionUncheckedUpdateManyWithoutPostNestedInput = {\n    create?: XOR<discussion_board_reactionCreateWithoutPostInput, discussion_board_reactionUncheckedCreateWithoutPostInput> | discussion_board_reactionCreateWithoutPostInput[] | discussion_board_reactionUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussion_board_reactionCreateOrConnectWithoutPostInput | discussion_board_reactionCreateOrConnectWithoutPostInput[]\n    upsert?: discussion_board_reactionUpsertWithWhereUniqueWithoutPostInput | discussion_board_reactionUpsertWithWhereUniqueWithoutPostInput[]\n    createMany?: discussion_board_reactionCreateManyPostInputEnvelope\n    set?: discussion_board_reactionWhereUniqueInput | discussion_board_reactionWhereUniqueInput[]\n    disconnect?: discussion_board_reactionWhereUniqueInput | discussion_board_reactionWhereUniqueInput[]\n    delete?: discussion_board_reactionWhereUniqueInput | discussion_board_reactionWhereUniqueInput[]\n    connect?: discussion_board_reactionWhereUniqueInput | discussion_board_reactionWhereUniqueInput[]\n    update?: discussion_board_reactionUpdateWithWhereUniqueWithoutPostInput | discussion_board_reactionUpdateWithWhereUniqueWithoutPostInput[]\n    updateMany?: discussion_board_reactionUpdateManyWithWhereWithoutPostInput | discussion_board_reactionUpdateManyWithWhereWithoutPostInput[]\n    deleteMany?: discussion_board_reactionScalarWhereInput | discussion_board_reactionScalarWhereInput[]\n  }\n\n  export type discussion_board_bookmarkUncheckedUpdateManyWithoutPostNestedInput = {\n    create?: XOR<discussion_board_bookmarkCreateWithoutPostInput, discussion_board_bookmarkUncheckedCreateWithoutPostInput> | discussion_board_bookmarkCreateWithoutPostInput[] | discussion_board_bookmarkUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussion_board_bookmarkCreateOrConnectWithoutPostInput | discussion_board_bookmarkCreateOrConnectWithoutPostInput[]\n    upsert?: discussion_board_bookmarkUpsertWithWhereUniqueWithoutPostInput | discussion_board_bookmarkUpsertWithWhereUniqueWithoutPostInput[]\n    createMany?: discussion_board_bookmarkCreateManyPostInputEnvelope\n    set?: discussion_board_bookmarkWhereUniqueInput | discussion_board_bookmarkWhereUniqueInput[]\n    disconnect?: discussion_board_bookmarkWhereUniqueInput | discussion_board_bookmarkWhereUniqueInput[]\n    delete?: discussion_board_bookmarkWhereUniqueInput | discussion_board_bookmarkWhereUniqueInput[]\n    connect?: discussion_board_bookmarkWhereUniqueInput | discussion_board_bookmarkWhereUniqueInput[]\n    update?: discussion_board_bookmarkUpdateWithWhereUniqueWithoutPostInput | discussion_board_bookmarkUpdateWithWhereUniqueWithoutPostInput[]\n    updateMany?: discussion_board_bookmarkUpdateManyWithWhereWithoutPostInput | discussion_board_bookmarkUpdateManyWithWhereWithoutPostInput[]\n    deleteMany?: discussion_board_bookmarkScalarWhereInput | discussion_board_bookmarkScalarWhereInput[]\n  }\n\n  export type discussion_board_notificationUncheckedUpdateManyWithoutPostNestedInput = {\n    create?: XOR<discussion_board_notificationCreateWithoutPostInput, discussion_board_notificationUncheckedCreateWithoutPostInput> | discussion_board_notificationCreateWithoutPostInput[] | discussion_board_notificationUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussion_board_notificationCreateOrConnectWithoutPostInput | discussion_board_notificationCreateOrConnectWithoutPostInput[]\n    upsert?: discussion_board_notificationUpsertWithWhereUniqueWithoutPostInput | discussion_board_notificationUpsertWithWhereUniqueWithoutPostInput[]\n    createMany?: discussion_board_notificationCreateManyPostInputEnvelope\n    set?: discussion_board_notificationWhereUniqueInput | discussion_board_notificationWhereUniqueInput[]\n    disconnect?: discussion_board_notificationWhereUniqueInput | discussion_board_notificationWhereUniqueInput[]\n    delete?: discussion_board_notificationWhereUniqueInput | discussion_board_notificationWhereUniqueInput[]\n    connect?: discussion_board_notificationWhereUniqueInput | discussion_board_notificationWhereUniqueInput[]\n    update?: discussion_board_notificationUpdateWithWhereUniqueWithoutPostInput | discussion_board_notificationUpdateWithWhereUniqueWithoutPostInput[]\n    updateMany?: discussion_board_notificationUpdateManyWithWhereWithoutPostInput | discussion_board_notificationUpdateManyWithWhereWithoutPostInput[]\n    deleteMany?: discussion_board_notificationScalarWhereInput | discussion_board_notificationScalarWhereInput[]\n  }\n\n  export type discussion_board_subscriptionUncheckedUpdateManyWithoutPostNestedInput = {\n    create?: XOR<discussion_board_subscriptionCreateWithoutPostInput, discussion_board_subscriptionUncheckedCreateWithoutPostInput> | discussion_board_subscriptionCreateWithoutPostInput[] | discussion_board_subscriptionUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussion_board_subscriptionCreateOrConnectWithoutPostInput | discussion_board_subscriptionCreateOrConnectWithoutPostInput[]\n    upsert?: discussion_board_subscriptionUpsertWithWhereUniqueWithoutPostInput | discussion_board_subscriptionUpsertWithWhereUniqueWithoutPostInput[]\n    createMany?: discussion_board_subscriptionCreateManyPostInputEnvelope\n    set?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n    disconnect?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n    delete?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n    connect?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n    update?: discussion_board_subscriptionUpdateWithWhereUniqueWithoutPostInput | discussion_board_subscriptionUpdateWithWhereUniqueWithoutPostInput[]\n    updateMany?: discussion_board_subscriptionUpdateManyWithWhereWithoutPostInput | discussion_board_subscriptionUpdateManyWithWhereWithoutPostInput[]\n    deleteMany?: discussion_board_subscriptionScalarWhereInput | discussion_board_subscriptionScalarWhereInput[]\n  }\n\n  export type discussion_board_reportUncheckedUpdateManyWithoutPostNestedInput = {\n    create?: XOR<discussion_board_reportCreateWithoutPostInput, discussion_board_reportUncheckedCreateWithoutPostInput> | discussion_board_reportCreateWithoutPostInput[] | discussion_board_reportUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussion_board_reportCreateOrConnectWithoutPostInput | discussion_board_reportCreateOrConnectWithoutPostInput[]\n    upsert?: discussion_board_reportUpsertWithWhereUniqueWithoutPostInput | discussion_board_reportUpsertWithWhereUniqueWithoutPostInput[]\n    createMany?: discussion_board_reportCreateManyPostInputEnvelope\n    set?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n    disconnect?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n    delete?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n    connect?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n    update?: discussion_board_reportUpdateWithWhereUniqueWithoutPostInput | discussion_board_reportUpdateWithWhereUniqueWithoutPostInput[]\n    updateMany?: discussion_board_reportUpdateManyWithWhereWithoutPostInput | discussion_board_reportUpdateManyWithWhereWithoutPostInput[]\n    deleteMany?: discussion_board_reportScalarWhereInput | discussion_board_reportScalarWhereInput[]\n  }\n\n  export type discussion_board_moderator_actionUncheckedUpdateManyWithoutPostNestedInput = {\n    create?: XOR<discussion_board_moderator_actionCreateWithoutPostInput, discussion_board_moderator_actionUncheckedCreateWithoutPostInput> | discussion_board_moderator_actionCreateWithoutPostInput[] | discussion_board_moderator_actionUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussion_board_moderator_actionCreateOrConnectWithoutPostInput | discussion_board_moderator_actionCreateOrConnectWithoutPostInput[]\n    upsert?: discussion_board_moderator_actionUpsertWithWhereUniqueWithoutPostInput | discussion_board_moderator_actionUpsertWithWhereUniqueWithoutPostInput[]\n    createMany?: discussion_board_moderator_actionCreateManyPostInputEnvelope\n    set?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    disconnect?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    delete?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    connect?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    update?: discussion_board_moderator_actionUpdateWithWhereUniqueWithoutPostInput | discussion_board_moderator_actionUpdateWithWhereUniqueWithoutPostInput[]\n    updateMany?: discussion_board_moderator_actionUpdateManyWithWhereWithoutPostInput | discussion_board_moderator_actionUpdateManyWithWhereWithoutPostInput[]\n    deleteMany?: discussion_board_moderator_actionScalarWhereInput | discussion_board_moderator_actionScalarWhereInput[]\n  }\n\n  export type discussion_board_warningUncheckedUpdateManyWithoutPostNestedInput = {\n    create?: XOR<discussion_board_warningCreateWithoutPostInput, discussion_board_warningUncheckedCreateWithoutPostInput> | discussion_board_warningCreateWithoutPostInput[] | discussion_board_warningUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussion_board_warningCreateOrConnectWithoutPostInput | discussion_board_warningCreateOrConnectWithoutPostInput[]\n    upsert?: discussion_board_warningUpsertWithWhereUniqueWithoutPostInput | discussion_board_warningUpsertWithWhereUniqueWithoutPostInput[]\n    createMany?: discussion_board_warningCreateManyPostInputEnvelope\n    set?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n    disconnect?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n    delete?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n    connect?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n    update?: discussion_board_warningUpdateWithWhereUniqueWithoutPostInput | discussion_board_warningUpdateWithWhereUniqueWithoutPostInput[]\n    updateMany?: discussion_board_warningUpdateManyWithWhereWithoutPostInput | discussion_board_warningUpdateManyWithWhereWithoutPostInput[]\n    deleteMany?: discussion_board_warningScalarWhereInput | discussion_board_warningScalarWhereInput[]\n  }\n\n  export type discussion_board_postCreateNestedOneWithoutDiscussion_board_commentInput = {\n    create?: XOR<discussion_board_postCreateWithoutDiscussion_board_commentInput, discussion_board_postUncheckedCreateWithoutDiscussion_board_commentInput>\n    connectOrCreate?: discussion_board_postCreateOrConnectWithoutDiscussion_board_commentInput\n    connect?: discussion_board_postWhereUniqueInput\n  }\n\n  export type discussion_board_usersCreateNestedOneWithoutDiscussion_board_commentInput = {\n    create?: XOR<discussion_board_usersCreateWithoutDiscussion_board_commentInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_commentInput>\n    connectOrCreate?: discussion_board_usersCreateOrConnectWithoutDiscussion_board_commentInput\n    connect?: discussion_board_usersWhereUniqueInput\n  }\n\n  export type discussion_board_commentCreateNestedOneWithoutRecursiveInput = {\n    create?: XOR<discussion_board_commentCreateWithoutRecursiveInput, discussion_board_commentUncheckedCreateWithoutRecursiveInput>\n    connectOrCreate?: discussion_board_commentCreateOrConnectWithoutRecursiveInput\n    connect?: discussion_board_commentWhereUniqueInput\n  }\n\n  export type discussion_board_commentCreateNestedManyWithoutParent_commentInput = {\n    create?: XOR<discussion_board_commentCreateWithoutParent_commentInput, discussion_board_commentUncheckedCreateWithoutParent_commentInput> | discussion_board_commentCreateWithoutParent_commentInput[] | discussion_board_commentUncheckedCreateWithoutParent_commentInput[]\n    connectOrCreate?: discussion_board_commentCreateOrConnectWithoutParent_commentInput | discussion_board_commentCreateOrConnectWithoutParent_commentInput[]\n    createMany?: discussion_board_commentCreateManyParent_commentInputEnvelope\n    connect?: discussion_board_commentWhereUniqueInput | discussion_board_commentWhereUniqueInput[]\n  }\n\n  export type discussion_board_voteCreateNestedManyWithoutCommentInput = {\n    create?: XOR<discussion_board_voteCreateWithoutCommentInput, discussion_board_voteUncheckedCreateWithoutCommentInput> | discussion_board_voteCreateWithoutCommentInput[] | discussion_board_voteUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussion_board_voteCreateOrConnectWithoutCommentInput | discussion_board_voteCreateOrConnectWithoutCommentInput[]\n    createMany?: discussion_board_voteCreateManyCommentInputEnvelope\n    connect?: discussion_board_voteWhereUniqueInput | discussion_board_voteWhereUniqueInput[]\n  }\n\n  export type discussion_board_reactionCreateNestedManyWithoutCommentInput = {\n    create?: XOR<discussion_board_reactionCreateWithoutCommentInput, discussion_board_reactionUncheckedCreateWithoutCommentInput> | discussion_board_reactionCreateWithoutCommentInput[] | discussion_board_reactionUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussion_board_reactionCreateOrConnectWithoutCommentInput | discussion_board_reactionCreateOrConnectWithoutCommentInput[]\n    createMany?: discussion_board_reactionCreateManyCommentInputEnvelope\n    connect?: discussion_board_reactionWhereUniqueInput | discussion_board_reactionWhereUniqueInput[]\n  }\n\n  export type discussion_board_bookmarkCreateNestedManyWithoutCommentInput = {\n    create?: XOR<discussion_board_bookmarkCreateWithoutCommentInput, discussion_board_bookmarkUncheckedCreateWithoutCommentInput> | discussion_board_bookmarkCreateWithoutCommentInput[] | discussion_board_bookmarkUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussion_board_bookmarkCreateOrConnectWithoutCommentInput | discussion_board_bookmarkCreateOrConnectWithoutCommentInput[]\n    createMany?: discussion_board_bookmarkCreateManyCommentInputEnvelope\n    connect?: discussion_board_bookmarkWhereUniqueInput | discussion_board_bookmarkWhereUniqueInput[]\n  }\n\n  export type discussion_board_notificationCreateNestedManyWithoutCommentInput = {\n    create?: XOR<discussion_board_notificationCreateWithoutCommentInput, discussion_board_notificationUncheckedCreateWithoutCommentInput> | discussion_board_notificationCreateWithoutCommentInput[] | discussion_board_notificationUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussion_board_notificationCreateOrConnectWithoutCommentInput | discussion_board_notificationCreateOrConnectWithoutCommentInput[]\n    createMany?: discussion_board_notificationCreateManyCommentInputEnvelope\n    connect?: discussion_board_notificationWhereUniqueInput | discussion_board_notificationWhereUniqueInput[]\n  }\n\n  export type discussion_board_subscriptionCreateNestedManyWithoutCommentInput = {\n    create?: XOR<discussion_board_subscriptionCreateWithoutCommentInput, discussion_board_subscriptionUncheckedCreateWithoutCommentInput> | discussion_board_subscriptionCreateWithoutCommentInput[] | discussion_board_subscriptionUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussion_board_subscriptionCreateOrConnectWithoutCommentInput | discussion_board_subscriptionCreateOrConnectWithoutCommentInput[]\n    createMany?: discussion_board_subscriptionCreateManyCommentInputEnvelope\n    connect?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n  }\n\n  export type discussion_board_reportCreateNestedManyWithoutCommentInput = {\n    create?: XOR<discussion_board_reportCreateWithoutCommentInput, discussion_board_reportUncheckedCreateWithoutCommentInput> | discussion_board_reportCreateWithoutCommentInput[] | discussion_board_reportUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussion_board_reportCreateOrConnectWithoutCommentInput | discussion_board_reportCreateOrConnectWithoutCommentInput[]\n    createMany?: discussion_board_reportCreateManyCommentInputEnvelope\n    connect?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n  }\n\n  export type discussion_board_moderator_actionCreateNestedManyWithoutCommentInput = {\n    create?: XOR<discussion_board_moderator_actionCreateWithoutCommentInput, discussion_board_moderator_actionUncheckedCreateWithoutCommentInput> | discussion_board_moderator_actionCreateWithoutCommentInput[] | discussion_board_moderator_actionUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussion_board_moderator_actionCreateOrConnectWithoutCommentInput | discussion_board_moderator_actionCreateOrConnectWithoutCommentInput[]\n    createMany?: discussion_board_moderator_actionCreateManyCommentInputEnvelope\n    connect?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n  }\n\n  export type discussion_board_warningCreateNestedManyWithoutCommentInput = {\n    create?: XOR<discussion_board_warningCreateWithoutCommentInput, discussion_board_warningUncheckedCreateWithoutCommentInput> | discussion_board_warningCreateWithoutCommentInput[] | discussion_board_warningUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussion_board_warningCreateOrConnectWithoutCommentInput | discussion_board_warningCreateOrConnectWithoutCommentInput[]\n    createMany?: discussion_board_warningCreateManyCommentInputEnvelope\n    connect?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n  }\n\n  export type discussion_board_commentUncheckedCreateNestedManyWithoutParent_commentInput = {\n    create?: XOR<discussion_board_commentCreateWithoutParent_commentInput, discussion_board_commentUncheckedCreateWithoutParent_commentInput> | discussion_board_commentCreateWithoutParent_commentInput[] | discussion_board_commentUncheckedCreateWithoutParent_commentInput[]\n    connectOrCreate?: discussion_board_commentCreateOrConnectWithoutParent_commentInput | discussion_board_commentCreateOrConnectWithoutParent_commentInput[]\n    createMany?: discussion_board_commentCreateManyParent_commentInputEnvelope\n    connect?: discussion_board_commentWhereUniqueInput | discussion_board_commentWhereUniqueInput[]\n  }\n\n  export type discussion_board_voteUncheckedCreateNestedManyWithoutCommentInput = {\n    create?: XOR<discussion_board_voteCreateWithoutCommentInput, discussion_board_voteUncheckedCreateWithoutCommentInput> | discussion_board_voteCreateWithoutCommentInput[] | discussion_board_voteUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussion_board_voteCreateOrConnectWithoutCommentInput | discussion_board_voteCreateOrConnectWithoutCommentInput[]\n    createMany?: discussion_board_voteCreateManyCommentInputEnvelope\n    connect?: discussion_board_voteWhereUniqueInput | discussion_board_voteWhereUniqueInput[]\n  }\n\n  export type discussion_board_reactionUncheckedCreateNestedManyWithoutCommentInput = {\n    create?: XOR<discussion_board_reactionCreateWithoutCommentInput, discussion_board_reactionUncheckedCreateWithoutCommentInput> | discussion_board_reactionCreateWithoutCommentInput[] | discussion_board_reactionUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussion_board_reactionCreateOrConnectWithoutCommentInput | discussion_board_reactionCreateOrConnectWithoutCommentInput[]\n    createMany?: discussion_board_reactionCreateManyCommentInputEnvelope\n    connect?: discussion_board_reactionWhereUniqueInput | discussion_board_reactionWhereUniqueInput[]\n  }\n\n  export type discussion_board_bookmarkUncheckedCreateNestedManyWithoutCommentInput = {\n    create?: XOR<discussion_board_bookmarkCreateWithoutCommentInput, discussion_board_bookmarkUncheckedCreateWithoutCommentInput> | discussion_board_bookmarkCreateWithoutCommentInput[] | discussion_board_bookmarkUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussion_board_bookmarkCreateOrConnectWithoutCommentInput | discussion_board_bookmarkCreateOrConnectWithoutCommentInput[]\n    createMany?: discussion_board_bookmarkCreateManyCommentInputEnvelope\n    connect?: discussion_board_bookmarkWhereUniqueInput | discussion_board_bookmarkWhereUniqueInput[]\n  }\n\n  export type discussion_board_notificationUncheckedCreateNestedManyWithoutCommentInput = {\n    create?: XOR<discussion_board_notificationCreateWithoutCommentInput, discussion_board_notificationUncheckedCreateWithoutCommentInput> | discussion_board_notificationCreateWithoutCommentInput[] | discussion_board_notificationUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussion_board_notificationCreateOrConnectWithoutCommentInput | discussion_board_notificationCreateOrConnectWithoutCommentInput[]\n    createMany?: discussion_board_notificationCreateManyCommentInputEnvelope\n    connect?: discussion_board_notificationWhereUniqueInput | discussion_board_notificationWhereUniqueInput[]\n  }\n\n  export type discussion_board_subscriptionUncheckedCreateNestedManyWithoutCommentInput = {\n    create?: XOR<discussion_board_subscriptionCreateWithoutCommentInput, discussion_board_subscriptionUncheckedCreateWithoutCommentInput> | discussion_board_subscriptionCreateWithoutCommentInput[] | discussion_board_subscriptionUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussion_board_subscriptionCreateOrConnectWithoutCommentInput | discussion_board_subscriptionCreateOrConnectWithoutCommentInput[]\n    createMany?: discussion_board_subscriptionCreateManyCommentInputEnvelope\n    connect?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n  }\n\n  export type discussion_board_reportUncheckedCreateNestedManyWithoutCommentInput = {\n    create?: XOR<discussion_board_reportCreateWithoutCommentInput, discussion_board_reportUncheckedCreateWithoutCommentInput> | discussion_board_reportCreateWithoutCommentInput[] | discussion_board_reportUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussion_board_reportCreateOrConnectWithoutCommentInput | discussion_board_reportCreateOrConnectWithoutCommentInput[]\n    createMany?: discussion_board_reportCreateManyCommentInputEnvelope\n    connect?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n  }\n\n  export type discussion_board_moderator_actionUncheckedCreateNestedManyWithoutCommentInput = {\n    create?: XOR<discussion_board_moderator_actionCreateWithoutCommentInput, discussion_board_moderator_actionUncheckedCreateWithoutCommentInput> | discussion_board_moderator_actionCreateWithoutCommentInput[] | discussion_board_moderator_actionUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussion_board_moderator_actionCreateOrConnectWithoutCommentInput | discussion_board_moderator_actionCreateOrConnectWithoutCommentInput[]\n    createMany?: discussion_board_moderator_actionCreateManyCommentInputEnvelope\n    connect?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n  }\n\n  export type discussion_board_warningUncheckedCreateNestedManyWithoutCommentInput = {\n    create?: XOR<discussion_board_warningCreateWithoutCommentInput, discussion_board_warningUncheckedCreateWithoutCommentInput> | discussion_board_warningCreateWithoutCommentInput[] | discussion_board_warningUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussion_board_warningCreateOrConnectWithoutCommentInput | discussion_board_warningCreateOrConnectWithoutCommentInput[]\n    createMany?: discussion_board_warningCreateManyCommentInputEnvelope\n    connect?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n  }\n\n  export type discussion_board_postUpdateOneRequiredWithoutDiscussion_board_commentNestedInput = {\n    create?: XOR<discussion_board_postCreateWithoutDiscussion_board_commentInput, discussion_board_postUncheckedCreateWithoutDiscussion_board_commentInput>\n    connectOrCreate?: discussion_board_postCreateOrConnectWithoutDiscussion_board_commentInput\n    upsert?: discussion_board_postUpsertWithoutDiscussion_board_commentInput\n    connect?: discussion_board_postWhereUniqueInput\n    update?: XOR<XOR<discussion_board_postUpdateToOneWithWhereWithoutDiscussion_board_commentInput, discussion_board_postUpdateWithoutDiscussion_board_commentInput>, discussion_board_postUncheckedUpdateWithoutDiscussion_board_commentInput>\n  }\n\n  export type discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_commentNestedInput = {\n    create?: XOR<discussion_board_usersCreateWithoutDiscussion_board_commentInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_commentInput>\n    connectOrCreate?: discussion_board_usersCreateOrConnectWithoutDiscussion_board_commentInput\n    upsert?: discussion_board_usersUpsertWithoutDiscussion_board_commentInput\n    connect?: discussion_board_usersWhereUniqueInput\n    update?: XOR<XOR<discussion_board_usersUpdateToOneWithWhereWithoutDiscussion_board_commentInput, discussion_board_usersUpdateWithoutDiscussion_board_commentInput>, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_commentInput>\n  }\n\n  export type discussion_board_commentUpdateOneWithoutRecursiveNestedInput = {\n    create?: XOR<discussion_board_commentCreateWithoutRecursiveInput, discussion_board_commentUncheckedCreateWithoutRecursiveInput>\n    connectOrCreate?: discussion_board_commentCreateOrConnectWithoutRecursiveInput\n    upsert?: discussion_board_commentUpsertWithoutRecursiveInput\n    disconnect?: discussion_board_commentWhereInput | boolean\n    delete?: discussion_board_commentWhereInput | boolean\n    connect?: discussion_board_commentWhereUniqueInput\n    update?: XOR<XOR<discussion_board_commentUpdateToOneWithWhereWithoutRecursiveInput, discussion_board_commentUpdateWithoutRecursiveInput>, discussion_board_commentUncheckedUpdateWithoutRecursiveInput>\n  }\n\n  export type discussion_board_commentUpdateManyWithoutParent_commentNestedInput = {\n    create?: XOR<discussion_board_commentCreateWithoutParent_commentInput, discussion_board_commentUncheckedCreateWithoutParent_commentInput> | discussion_board_commentCreateWithoutParent_commentInput[] | discussion_board_commentUncheckedCreateWithoutParent_commentInput[]\n    connectOrCreate?: discussion_board_commentCreateOrConnectWithoutParent_commentInput | discussion_board_commentCreateOrConnectWithoutParent_commentInput[]\n    upsert?: discussion_board_commentUpsertWithWhereUniqueWithoutParent_commentInput | discussion_board_commentUpsertWithWhereUniqueWithoutParent_commentInput[]\n    createMany?: discussion_board_commentCreateManyParent_commentInputEnvelope\n    set?: discussion_board_commentWhereUniqueInput | discussion_board_commentWhereUniqueInput[]\n    disconnect?: discussion_board_commentWhereUniqueInput | discussion_board_commentWhereUniqueInput[]\n    delete?: discussion_board_commentWhereUniqueInput | discussion_board_commentWhereUniqueInput[]\n    connect?: discussion_board_commentWhereUniqueInput | discussion_board_commentWhereUniqueInput[]\n    update?: discussion_board_commentUpdateWithWhereUniqueWithoutParent_commentInput | discussion_board_commentUpdateWithWhereUniqueWithoutParent_commentInput[]\n    updateMany?: discussion_board_commentUpdateManyWithWhereWithoutParent_commentInput | discussion_board_commentUpdateManyWithWhereWithoutParent_commentInput[]\n    deleteMany?: discussion_board_commentScalarWhereInput | discussion_board_commentScalarWhereInput[]\n  }\n\n  export type discussion_board_voteUpdateManyWithoutCommentNestedInput = {\n    create?: XOR<discussion_board_voteCreateWithoutCommentInput, discussion_board_voteUncheckedCreateWithoutCommentInput> | discussion_board_voteCreateWithoutCommentInput[] | discussion_board_voteUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussion_board_voteCreateOrConnectWithoutCommentInput | discussion_board_voteCreateOrConnectWithoutCommentInput[]\n    upsert?: discussion_board_voteUpsertWithWhereUniqueWithoutCommentInput | discussion_board_voteUpsertWithWhereUniqueWithoutCommentInput[]\n    createMany?: discussion_board_voteCreateManyCommentInputEnvelope\n    set?: discussion_board_voteWhereUniqueInput | discussion_board_voteWhereUniqueInput[]\n    disconnect?: discussion_board_voteWhereUniqueInput | discussion_board_voteWhereUniqueInput[]\n    delete?: discussion_board_voteWhereUniqueInput | discussion_board_voteWhereUniqueInput[]\n    connect?: discussion_board_voteWhereUniqueInput | discussion_board_voteWhereUniqueInput[]\n    update?: discussion_board_voteUpdateWithWhereUniqueWithoutCommentInput | discussion_board_voteUpdateWithWhereUniqueWithoutCommentInput[]\n    updateMany?: discussion_board_voteUpdateManyWithWhereWithoutCommentInput | discussion_board_voteUpdateManyWithWhereWithoutCommentInput[]\n    deleteMany?: discussion_board_voteScalarWhereInput | discussion_board_voteScalarWhereInput[]\n  }\n\n  export type discussion_board_reactionUpdateManyWithoutCommentNestedInput = {\n    create?: XOR<discussion_board_reactionCreateWithoutCommentInput, discussion_board_reactionUncheckedCreateWithoutCommentInput> | discussion_board_reactionCreateWithoutCommentInput[] | discussion_board_reactionUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussion_board_reactionCreateOrConnectWithoutCommentInput | discussion_board_reactionCreateOrConnectWithoutCommentInput[]\n    upsert?: discussion_board_reactionUpsertWithWhereUniqueWithoutCommentInput | discussion_board_reactionUpsertWithWhereUniqueWithoutCommentInput[]\n    createMany?: discussion_board_reactionCreateManyCommentInputEnvelope\n    set?: discussion_board_reactionWhereUniqueInput | discussion_board_reactionWhereUniqueInput[]\n    disconnect?: discussion_board_reactionWhereUniqueInput | discussion_board_reactionWhereUniqueInput[]\n    delete?: discussion_board_reactionWhereUniqueInput | discussion_board_reactionWhereUniqueInput[]\n    connect?: discussion_board_reactionWhereUniqueInput | discussion_board_reactionWhereUniqueInput[]\n    update?: discussion_board_reactionUpdateWithWhereUniqueWithoutCommentInput | discussion_board_reactionUpdateWithWhereUniqueWithoutCommentInput[]\n    updateMany?: discussion_board_reactionUpdateManyWithWhereWithoutCommentInput | discussion_board_reactionUpdateManyWithWhereWithoutCommentInput[]\n    deleteMany?: discussion_board_reactionScalarWhereInput | discussion_board_reactionScalarWhereInput[]\n  }\n\n  export type discussion_board_bookmarkUpdateManyWithoutCommentNestedInput = {\n    create?: XOR<discussion_board_bookmarkCreateWithoutCommentInput, discussion_board_bookmarkUncheckedCreateWithoutCommentInput> | discussion_board_bookmarkCreateWithoutCommentInput[] | discussion_board_bookmarkUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussion_board_bookmarkCreateOrConnectWithoutCommentInput | discussion_board_bookmarkCreateOrConnectWithoutCommentInput[]\n    upsert?: discussion_board_bookmarkUpsertWithWhereUniqueWithoutCommentInput | discussion_board_bookmarkUpsertWithWhereUniqueWithoutCommentInput[]\n    createMany?: discussion_board_bookmarkCreateManyCommentInputEnvelope\n    set?: discussion_board_bookmarkWhereUniqueInput | discussion_board_bookmarkWhereUniqueInput[]\n    disconnect?: discussion_board_bookmarkWhereUniqueInput | discussion_board_bookmarkWhereUniqueInput[]\n    delete?: discussion_board_bookmarkWhereUniqueInput | discussion_board_bookmarkWhereUniqueInput[]\n    connect?: discussion_board_bookmarkWhereUniqueInput | discussion_board_bookmarkWhereUniqueInput[]\n    update?: discussion_board_bookmarkUpdateWithWhereUniqueWithoutCommentInput | discussion_board_bookmarkUpdateWithWhereUniqueWithoutCommentInput[]\n    updateMany?: discussion_board_bookmarkUpdateManyWithWhereWithoutCommentInput | discussion_board_bookmarkUpdateManyWithWhereWithoutCommentInput[]\n    deleteMany?: discussion_board_bookmarkScalarWhereInput | discussion_board_bookmarkScalarWhereInput[]\n  }\n\n  export type discussion_board_notificationUpdateManyWithoutCommentNestedInput = {\n    create?: XOR<discussion_board_notificationCreateWithoutCommentInput, discussion_board_notificationUncheckedCreateWithoutCommentInput> | discussion_board_notificationCreateWithoutCommentInput[] | discussion_board_notificationUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussion_board_notificationCreateOrConnectWithoutCommentInput | discussion_board_notificationCreateOrConnectWithoutCommentInput[]\n    upsert?: discussion_board_notificationUpsertWithWhereUniqueWithoutCommentInput | discussion_board_notificationUpsertWithWhereUniqueWithoutCommentInput[]\n    createMany?: discussion_board_notificationCreateManyCommentInputEnvelope\n    set?: discussion_board_notificationWhereUniqueInput | discussion_board_notificationWhereUniqueInput[]\n    disconnect?: discussion_board_notificationWhereUniqueInput | discussion_board_notificationWhereUniqueInput[]\n    delete?: discussion_board_notificationWhereUniqueInput | discussion_board_notificationWhereUniqueInput[]\n    connect?: discussion_board_notificationWhereUniqueInput | discussion_board_notificationWhereUniqueInput[]\n    update?: discussion_board_notificationUpdateWithWhereUniqueWithoutCommentInput | discussion_board_notificationUpdateWithWhereUniqueWithoutCommentInput[]\n    updateMany?: discussion_board_notificationUpdateManyWithWhereWithoutCommentInput | discussion_board_notificationUpdateManyWithWhereWithoutCommentInput[]\n    deleteMany?: discussion_board_notificationScalarWhereInput | discussion_board_notificationScalarWhereInput[]\n  }\n\n  export type discussion_board_subscriptionUpdateManyWithoutCommentNestedInput = {\n    create?: XOR<discussion_board_subscriptionCreateWithoutCommentInput, discussion_board_subscriptionUncheckedCreateWithoutCommentInput> | discussion_board_subscriptionCreateWithoutCommentInput[] | discussion_board_subscriptionUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussion_board_subscriptionCreateOrConnectWithoutCommentInput | discussion_board_subscriptionCreateOrConnectWithoutCommentInput[]\n    upsert?: discussion_board_subscriptionUpsertWithWhereUniqueWithoutCommentInput | discussion_board_subscriptionUpsertWithWhereUniqueWithoutCommentInput[]\n    createMany?: discussion_board_subscriptionCreateManyCommentInputEnvelope\n    set?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n    disconnect?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n    delete?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n    connect?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n    update?: discussion_board_subscriptionUpdateWithWhereUniqueWithoutCommentInput | discussion_board_subscriptionUpdateWithWhereUniqueWithoutCommentInput[]\n    updateMany?: discussion_board_subscriptionUpdateManyWithWhereWithoutCommentInput | discussion_board_subscriptionUpdateManyWithWhereWithoutCommentInput[]\n    deleteMany?: discussion_board_subscriptionScalarWhereInput | discussion_board_subscriptionScalarWhereInput[]\n  }\n\n  export type discussion_board_reportUpdateManyWithoutCommentNestedInput = {\n    create?: XOR<discussion_board_reportCreateWithoutCommentInput, discussion_board_reportUncheckedCreateWithoutCommentInput> | discussion_board_reportCreateWithoutCommentInput[] | discussion_board_reportUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussion_board_reportCreateOrConnectWithoutCommentInput | discussion_board_reportCreateOrConnectWithoutCommentInput[]\n    upsert?: discussion_board_reportUpsertWithWhereUniqueWithoutCommentInput | discussion_board_reportUpsertWithWhereUniqueWithoutCommentInput[]\n    createMany?: discussion_board_reportCreateManyCommentInputEnvelope\n    set?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n    disconnect?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n    delete?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n    connect?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n    update?: discussion_board_reportUpdateWithWhereUniqueWithoutCommentInput | discussion_board_reportUpdateWithWhereUniqueWithoutCommentInput[]\n    updateMany?: discussion_board_reportUpdateManyWithWhereWithoutCommentInput | discussion_board_reportUpdateManyWithWhereWithoutCommentInput[]\n    deleteMany?: discussion_board_reportScalarWhereInput | discussion_board_reportScalarWhereInput[]\n  }\n\n  export type discussion_board_moderator_actionUpdateManyWithoutCommentNestedInput = {\n    create?: XOR<discussion_board_moderator_actionCreateWithoutCommentInput, discussion_board_moderator_actionUncheckedCreateWithoutCommentInput> | discussion_board_moderator_actionCreateWithoutCommentInput[] | discussion_board_moderator_actionUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussion_board_moderator_actionCreateOrConnectWithoutCommentInput | discussion_board_moderator_actionCreateOrConnectWithoutCommentInput[]\n    upsert?: discussion_board_moderator_actionUpsertWithWhereUniqueWithoutCommentInput | discussion_board_moderator_actionUpsertWithWhereUniqueWithoutCommentInput[]\n    createMany?: discussion_board_moderator_actionCreateManyCommentInputEnvelope\n    set?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    disconnect?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    delete?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    connect?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    update?: discussion_board_moderator_actionUpdateWithWhereUniqueWithoutCommentInput | discussion_board_moderator_actionUpdateWithWhereUniqueWithoutCommentInput[]\n    updateMany?: discussion_board_moderator_actionUpdateManyWithWhereWithoutCommentInput | discussion_board_moderator_actionUpdateManyWithWhereWithoutCommentInput[]\n    deleteMany?: discussion_board_moderator_actionScalarWhereInput | discussion_board_moderator_actionScalarWhereInput[]\n  }\n\n  export type discussion_board_warningUpdateManyWithoutCommentNestedInput = {\n    create?: XOR<discussion_board_warningCreateWithoutCommentInput, discussion_board_warningUncheckedCreateWithoutCommentInput> | discussion_board_warningCreateWithoutCommentInput[] | discussion_board_warningUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussion_board_warningCreateOrConnectWithoutCommentInput | discussion_board_warningCreateOrConnectWithoutCommentInput[]\n    upsert?: discussion_board_warningUpsertWithWhereUniqueWithoutCommentInput | discussion_board_warningUpsertWithWhereUniqueWithoutCommentInput[]\n    createMany?: discussion_board_warningCreateManyCommentInputEnvelope\n    set?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n    disconnect?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n    delete?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n    connect?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n    update?: discussion_board_warningUpdateWithWhereUniqueWithoutCommentInput | discussion_board_warningUpdateWithWhereUniqueWithoutCommentInput[]\n    updateMany?: discussion_board_warningUpdateManyWithWhereWithoutCommentInput | discussion_board_warningUpdateManyWithWhereWithoutCommentInput[]\n    deleteMany?: discussion_board_warningScalarWhereInput | discussion_board_warningScalarWhereInput[]\n  }\n\n  export type discussion_board_commentUncheckedUpdateManyWithoutParent_commentNestedInput = {\n    create?: XOR<discussion_board_commentCreateWithoutParent_commentInput, discussion_board_commentUncheckedCreateWithoutParent_commentInput> | discussion_board_commentCreateWithoutParent_commentInput[] | discussion_board_commentUncheckedCreateWithoutParent_commentInput[]\n    connectOrCreate?: discussion_board_commentCreateOrConnectWithoutParent_commentInput | discussion_board_commentCreateOrConnectWithoutParent_commentInput[]\n    upsert?: discussion_board_commentUpsertWithWhereUniqueWithoutParent_commentInput | discussion_board_commentUpsertWithWhereUniqueWithoutParent_commentInput[]\n    createMany?: discussion_board_commentCreateManyParent_commentInputEnvelope\n    set?: discussion_board_commentWhereUniqueInput | discussion_board_commentWhereUniqueInput[]\n    disconnect?: discussion_board_commentWhereUniqueInput | discussion_board_commentWhereUniqueInput[]\n    delete?: discussion_board_commentWhereUniqueInput | discussion_board_commentWhereUniqueInput[]\n    connect?: discussion_board_commentWhereUniqueInput | discussion_board_commentWhereUniqueInput[]\n    update?: discussion_board_commentUpdateWithWhereUniqueWithoutParent_commentInput | discussion_board_commentUpdateWithWhereUniqueWithoutParent_commentInput[]\n    updateMany?: discussion_board_commentUpdateManyWithWhereWithoutParent_commentInput | discussion_board_commentUpdateManyWithWhereWithoutParent_commentInput[]\n    deleteMany?: discussion_board_commentScalarWhereInput | discussion_board_commentScalarWhereInput[]\n  }\n\n  export type discussion_board_voteUncheckedUpdateManyWithoutCommentNestedInput = {\n    create?: XOR<discussion_board_voteCreateWithoutCommentInput, discussion_board_voteUncheckedCreateWithoutCommentInput> | discussion_board_voteCreateWithoutCommentInput[] | discussion_board_voteUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussion_board_voteCreateOrConnectWithoutCommentInput | discussion_board_voteCreateOrConnectWithoutCommentInput[]\n    upsert?: discussion_board_voteUpsertWithWhereUniqueWithoutCommentInput | discussion_board_voteUpsertWithWhereUniqueWithoutCommentInput[]\n    createMany?: discussion_board_voteCreateManyCommentInputEnvelope\n    set?: discussion_board_voteWhereUniqueInput | discussion_board_voteWhereUniqueInput[]\n    disconnect?: discussion_board_voteWhereUniqueInput | discussion_board_voteWhereUniqueInput[]\n    delete?: discussion_board_voteWhereUniqueInput | discussion_board_voteWhereUniqueInput[]\n    connect?: discussion_board_voteWhereUniqueInput | discussion_board_voteWhereUniqueInput[]\n    update?: discussion_board_voteUpdateWithWhereUniqueWithoutCommentInput | discussion_board_voteUpdateWithWhereUniqueWithoutCommentInput[]\n    updateMany?: discussion_board_voteUpdateManyWithWhereWithoutCommentInput | discussion_board_voteUpdateManyWithWhereWithoutCommentInput[]\n    deleteMany?: discussion_board_voteScalarWhereInput | discussion_board_voteScalarWhereInput[]\n  }\n\n  export type discussion_board_reactionUncheckedUpdateManyWithoutCommentNestedInput = {\n    create?: XOR<discussion_board_reactionCreateWithoutCommentInput, discussion_board_reactionUncheckedCreateWithoutCommentInput> | discussion_board_reactionCreateWithoutCommentInput[] | discussion_board_reactionUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussion_board_reactionCreateOrConnectWithoutCommentInput | discussion_board_reactionCreateOrConnectWithoutCommentInput[]\n    upsert?: discussion_board_reactionUpsertWithWhereUniqueWithoutCommentInput | discussion_board_reactionUpsertWithWhereUniqueWithoutCommentInput[]\n    createMany?: discussion_board_reactionCreateManyCommentInputEnvelope\n    set?: discussion_board_reactionWhereUniqueInput | discussion_board_reactionWhereUniqueInput[]\n    disconnect?: discussion_board_reactionWhereUniqueInput | discussion_board_reactionWhereUniqueInput[]\n    delete?: discussion_board_reactionWhereUniqueInput | discussion_board_reactionWhereUniqueInput[]\n    connect?: discussion_board_reactionWhereUniqueInput | discussion_board_reactionWhereUniqueInput[]\n    update?: discussion_board_reactionUpdateWithWhereUniqueWithoutCommentInput | discussion_board_reactionUpdateWithWhereUniqueWithoutCommentInput[]\n    updateMany?: discussion_board_reactionUpdateManyWithWhereWithoutCommentInput | discussion_board_reactionUpdateManyWithWhereWithoutCommentInput[]\n    deleteMany?: discussion_board_reactionScalarWhereInput | discussion_board_reactionScalarWhereInput[]\n  }\n\n  export type discussion_board_bookmarkUncheckedUpdateManyWithoutCommentNestedInput = {\n    create?: XOR<discussion_board_bookmarkCreateWithoutCommentInput, discussion_board_bookmarkUncheckedCreateWithoutCommentInput> | discussion_board_bookmarkCreateWithoutCommentInput[] | discussion_board_bookmarkUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussion_board_bookmarkCreateOrConnectWithoutCommentInput | discussion_board_bookmarkCreateOrConnectWithoutCommentInput[]\n    upsert?: discussion_board_bookmarkUpsertWithWhereUniqueWithoutCommentInput | discussion_board_bookmarkUpsertWithWhereUniqueWithoutCommentInput[]\n    createMany?: discussion_board_bookmarkCreateManyCommentInputEnvelope\n    set?: discussion_board_bookmarkWhereUniqueInput | discussion_board_bookmarkWhereUniqueInput[]\n    disconnect?: discussion_board_bookmarkWhereUniqueInput | discussion_board_bookmarkWhereUniqueInput[]\n    delete?: discussion_board_bookmarkWhereUniqueInput | discussion_board_bookmarkWhereUniqueInput[]\n    connect?: discussion_board_bookmarkWhereUniqueInput | discussion_board_bookmarkWhereUniqueInput[]\n    update?: discussion_board_bookmarkUpdateWithWhereUniqueWithoutCommentInput | discussion_board_bookmarkUpdateWithWhereUniqueWithoutCommentInput[]\n    updateMany?: discussion_board_bookmarkUpdateManyWithWhereWithoutCommentInput | discussion_board_bookmarkUpdateManyWithWhereWithoutCommentInput[]\n    deleteMany?: discussion_board_bookmarkScalarWhereInput | discussion_board_bookmarkScalarWhereInput[]\n  }\n\n  export type discussion_board_notificationUncheckedUpdateManyWithoutCommentNestedInput = {\n    create?: XOR<discussion_board_notificationCreateWithoutCommentInput, discussion_board_notificationUncheckedCreateWithoutCommentInput> | discussion_board_notificationCreateWithoutCommentInput[] | discussion_board_notificationUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussion_board_notificationCreateOrConnectWithoutCommentInput | discussion_board_notificationCreateOrConnectWithoutCommentInput[]\n    upsert?: discussion_board_notificationUpsertWithWhereUniqueWithoutCommentInput | discussion_board_notificationUpsertWithWhereUniqueWithoutCommentInput[]\n    createMany?: discussion_board_notificationCreateManyCommentInputEnvelope\n    set?: discussion_board_notificationWhereUniqueInput | discussion_board_notificationWhereUniqueInput[]\n    disconnect?: discussion_board_notificationWhereUniqueInput | discussion_board_notificationWhereUniqueInput[]\n    delete?: discussion_board_notificationWhereUniqueInput | discussion_board_notificationWhereUniqueInput[]\n    connect?: discussion_board_notificationWhereUniqueInput | discussion_board_notificationWhereUniqueInput[]\n    update?: discussion_board_notificationUpdateWithWhereUniqueWithoutCommentInput | discussion_board_notificationUpdateWithWhereUniqueWithoutCommentInput[]\n    updateMany?: discussion_board_notificationUpdateManyWithWhereWithoutCommentInput | discussion_board_notificationUpdateManyWithWhereWithoutCommentInput[]\n    deleteMany?: discussion_board_notificationScalarWhereInput | discussion_board_notificationScalarWhereInput[]\n  }\n\n  export type discussion_board_subscriptionUncheckedUpdateManyWithoutCommentNestedInput = {\n    create?: XOR<discussion_board_subscriptionCreateWithoutCommentInput, discussion_board_subscriptionUncheckedCreateWithoutCommentInput> | discussion_board_subscriptionCreateWithoutCommentInput[] | discussion_board_subscriptionUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussion_board_subscriptionCreateOrConnectWithoutCommentInput | discussion_board_subscriptionCreateOrConnectWithoutCommentInput[]\n    upsert?: discussion_board_subscriptionUpsertWithWhereUniqueWithoutCommentInput | discussion_board_subscriptionUpsertWithWhereUniqueWithoutCommentInput[]\n    createMany?: discussion_board_subscriptionCreateManyCommentInputEnvelope\n    set?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n    disconnect?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n    delete?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n    connect?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n    update?: discussion_board_subscriptionUpdateWithWhereUniqueWithoutCommentInput | discussion_board_subscriptionUpdateWithWhereUniqueWithoutCommentInput[]\n    updateMany?: discussion_board_subscriptionUpdateManyWithWhereWithoutCommentInput | discussion_board_subscriptionUpdateManyWithWhereWithoutCommentInput[]\n    deleteMany?: discussion_board_subscriptionScalarWhereInput | discussion_board_subscriptionScalarWhereInput[]\n  }\n\n  export type discussion_board_reportUncheckedUpdateManyWithoutCommentNestedInput = {\n    create?: XOR<discussion_board_reportCreateWithoutCommentInput, discussion_board_reportUncheckedCreateWithoutCommentInput> | discussion_board_reportCreateWithoutCommentInput[] | discussion_board_reportUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussion_board_reportCreateOrConnectWithoutCommentInput | discussion_board_reportCreateOrConnectWithoutCommentInput[]\n    upsert?: discussion_board_reportUpsertWithWhereUniqueWithoutCommentInput | discussion_board_reportUpsertWithWhereUniqueWithoutCommentInput[]\n    createMany?: discussion_board_reportCreateManyCommentInputEnvelope\n    set?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n    disconnect?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n    delete?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n    connect?: discussion_board_reportWhereUniqueInput | discussion_board_reportWhereUniqueInput[]\n    update?: discussion_board_reportUpdateWithWhereUniqueWithoutCommentInput | discussion_board_reportUpdateWithWhereUniqueWithoutCommentInput[]\n    updateMany?: discussion_board_reportUpdateManyWithWhereWithoutCommentInput | discussion_board_reportUpdateManyWithWhereWithoutCommentInput[]\n    deleteMany?: discussion_board_reportScalarWhereInput | discussion_board_reportScalarWhereInput[]\n  }\n\n  export type discussion_board_moderator_actionUncheckedUpdateManyWithoutCommentNestedInput = {\n    create?: XOR<discussion_board_moderator_actionCreateWithoutCommentInput, discussion_board_moderator_actionUncheckedCreateWithoutCommentInput> | discussion_board_moderator_actionCreateWithoutCommentInput[] | discussion_board_moderator_actionUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussion_board_moderator_actionCreateOrConnectWithoutCommentInput | discussion_board_moderator_actionCreateOrConnectWithoutCommentInput[]\n    upsert?: discussion_board_moderator_actionUpsertWithWhereUniqueWithoutCommentInput | discussion_board_moderator_actionUpsertWithWhereUniqueWithoutCommentInput[]\n    createMany?: discussion_board_moderator_actionCreateManyCommentInputEnvelope\n    set?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    disconnect?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    delete?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    connect?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    update?: discussion_board_moderator_actionUpdateWithWhereUniqueWithoutCommentInput | discussion_board_moderator_actionUpdateWithWhereUniqueWithoutCommentInput[]\n    updateMany?: discussion_board_moderator_actionUpdateManyWithWhereWithoutCommentInput | discussion_board_moderator_actionUpdateManyWithWhereWithoutCommentInput[]\n    deleteMany?: discussion_board_moderator_actionScalarWhereInput | discussion_board_moderator_actionScalarWhereInput[]\n  }\n\n  export type discussion_board_warningUncheckedUpdateManyWithoutCommentNestedInput = {\n    create?: XOR<discussion_board_warningCreateWithoutCommentInput, discussion_board_warningUncheckedCreateWithoutCommentInput> | discussion_board_warningCreateWithoutCommentInput[] | discussion_board_warningUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussion_board_warningCreateOrConnectWithoutCommentInput | discussion_board_warningCreateOrConnectWithoutCommentInput[]\n    upsert?: discussion_board_warningUpsertWithWhereUniqueWithoutCommentInput | discussion_board_warningUpsertWithWhereUniqueWithoutCommentInput[]\n    createMany?: discussion_board_warningCreateManyCommentInputEnvelope\n    set?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n    disconnect?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n    delete?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n    connect?: discussion_board_warningWhereUniqueInput | discussion_board_warningWhereUniqueInput[]\n    update?: discussion_board_warningUpdateWithWhereUniqueWithoutCommentInput | discussion_board_warningUpdateWithWhereUniqueWithoutCommentInput[]\n    updateMany?: discussion_board_warningUpdateManyWithWhereWithoutCommentInput | discussion_board_warningUpdateManyWithWhereWithoutCommentInput[]\n    deleteMany?: discussion_board_warningScalarWhereInput | discussion_board_warningScalarWhereInput[]\n  }\n\n  export type discussion_board_threadCreateNestedOneWithoutDiscussion_board_thread_tagInput = {\n    create?: XOR<discussion_board_threadCreateWithoutDiscussion_board_thread_tagInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_thread_tagInput>\n    connectOrCreate?: discussion_board_threadCreateOrConnectWithoutDiscussion_board_thread_tagInput\n    connect?: discussion_board_threadWhereUniqueInput\n  }\n\n  export type discussion_board_tag_categoryCreateNestedOneWithoutDiscussion_board_thread_tagInput = {\n    create?: XOR<discussion_board_tag_categoryCreateWithoutDiscussion_board_thread_tagInput, discussion_board_tag_categoryUncheckedCreateWithoutDiscussion_board_thread_tagInput>\n    connectOrCreate?: discussion_board_tag_categoryCreateOrConnectWithoutDiscussion_board_thread_tagInput\n    connect?: discussion_board_tag_categoryWhereUniqueInput\n  }\n\n  export type discussion_board_subscriptionCreateNestedManyWithoutTagInput = {\n    create?: XOR<discussion_board_subscriptionCreateWithoutTagInput, discussion_board_subscriptionUncheckedCreateWithoutTagInput> | discussion_board_subscriptionCreateWithoutTagInput[] | discussion_board_subscriptionUncheckedCreateWithoutTagInput[]\n    connectOrCreate?: discussion_board_subscriptionCreateOrConnectWithoutTagInput | discussion_board_subscriptionCreateOrConnectWithoutTagInput[]\n    createMany?: discussion_board_subscriptionCreateManyTagInputEnvelope\n    connect?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n  }\n\n  export type discussion_board_subscriptionUncheckedCreateNestedManyWithoutTagInput = {\n    create?: XOR<discussion_board_subscriptionCreateWithoutTagInput, discussion_board_subscriptionUncheckedCreateWithoutTagInput> | discussion_board_subscriptionCreateWithoutTagInput[] | discussion_board_subscriptionUncheckedCreateWithoutTagInput[]\n    connectOrCreate?: discussion_board_subscriptionCreateOrConnectWithoutTagInput | discussion_board_subscriptionCreateOrConnectWithoutTagInput[]\n    createMany?: discussion_board_subscriptionCreateManyTagInputEnvelope\n    connect?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n  }\n\n  export type discussion_board_threadUpdateOneRequiredWithoutDiscussion_board_thread_tagNestedInput = {\n    create?: XOR<discussion_board_threadCreateWithoutDiscussion_board_thread_tagInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_thread_tagInput>\n    connectOrCreate?: discussion_board_threadCreateOrConnectWithoutDiscussion_board_thread_tagInput\n    upsert?: discussion_board_threadUpsertWithoutDiscussion_board_thread_tagInput\n    connect?: discussion_board_threadWhereUniqueInput\n    update?: XOR<XOR<discussion_board_threadUpdateToOneWithWhereWithoutDiscussion_board_thread_tagInput, discussion_board_threadUpdateWithoutDiscussion_board_thread_tagInput>, discussion_board_threadUncheckedUpdateWithoutDiscussion_board_thread_tagInput>\n  }\n\n  export type discussion_board_tag_categoryUpdateOneRequiredWithoutDiscussion_board_thread_tagNestedInput = {\n    create?: XOR<discussion_board_tag_categoryCreateWithoutDiscussion_board_thread_tagInput, discussion_board_tag_categoryUncheckedCreateWithoutDiscussion_board_thread_tagInput>\n    connectOrCreate?: discussion_board_tag_categoryCreateOrConnectWithoutDiscussion_board_thread_tagInput\n    upsert?: discussion_board_tag_categoryUpsertWithoutDiscussion_board_thread_tagInput\n    connect?: discussion_board_tag_categoryWhereUniqueInput\n    update?: XOR<XOR<discussion_board_tag_categoryUpdateToOneWithWhereWithoutDiscussion_board_thread_tagInput, discussion_board_tag_categoryUpdateWithoutDiscussion_board_thread_tagInput>, discussion_board_tag_categoryUncheckedUpdateWithoutDiscussion_board_thread_tagInput>\n  }\n\n  export type discussion_board_subscriptionUpdateManyWithoutTagNestedInput = {\n    create?: XOR<discussion_board_subscriptionCreateWithoutTagInput, discussion_board_subscriptionUncheckedCreateWithoutTagInput> | discussion_board_subscriptionCreateWithoutTagInput[] | discussion_board_subscriptionUncheckedCreateWithoutTagInput[]\n    connectOrCreate?: discussion_board_subscriptionCreateOrConnectWithoutTagInput | discussion_board_subscriptionCreateOrConnectWithoutTagInput[]\n    upsert?: discussion_board_subscriptionUpsertWithWhereUniqueWithoutTagInput | discussion_board_subscriptionUpsertWithWhereUniqueWithoutTagInput[]\n    createMany?: discussion_board_subscriptionCreateManyTagInputEnvelope\n    set?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n    disconnect?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n    delete?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n    connect?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n    update?: discussion_board_subscriptionUpdateWithWhereUniqueWithoutTagInput | discussion_board_subscriptionUpdateWithWhereUniqueWithoutTagInput[]\n    updateMany?: discussion_board_subscriptionUpdateManyWithWhereWithoutTagInput | discussion_board_subscriptionUpdateManyWithWhereWithoutTagInput[]\n    deleteMany?: discussion_board_subscriptionScalarWhereInput | discussion_board_subscriptionScalarWhereInput[]\n  }\n\n  export type discussion_board_subscriptionUncheckedUpdateManyWithoutTagNestedInput = {\n    create?: XOR<discussion_board_subscriptionCreateWithoutTagInput, discussion_board_subscriptionUncheckedCreateWithoutTagInput> | discussion_board_subscriptionCreateWithoutTagInput[] | discussion_board_subscriptionUncheckedCreateWithoutTagInput[]\n    connectOrCreate?: discussion_board_subscriptionCreateOrConnectWithoutTagInput | discussion_board_subscriptionCreateOrConnectWithoutTagInput[]\n    upsert?: discussion_board_subscriptionUpsertWithWhereUniqueWithoutTagInput | discussion_board_subscriptionUpsertWithWhereUniqueWithoutTagInput[]\n    createMany?: discussion_board_subscriptionCreateManyTagInputEnvelope\n    set?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n    disconnect?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n    delete?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n    connect?: discussion_board_subscriptionWhereUniqueInput | discussion_board_subscriptionWhereUniqueInput[]\n    update?: discussion_board_subscriptionUpdateWithWhereUniqueWithoutTagInput | discussion_board_subscriptionUpdateWithWhereUniqueWithoutTagInput[]\n    updateMany?: discussion_board_subscriptionUpdateManyWithWhereWithoutTagInput | discussion_board_subscriptionUpdateManyWithWhereWithoutTagInput[]\n    deleteMany?: discussion_board_subscriptionScalarWhereInput | discussion_board_subscriptionScalarWhereInput[]\n  }\n\n  export type discussion_board_threadCreateNestedManyWithoutCategoryInput = {\n    create?: XOR<discussion_board_threadCreateWithoutCategoryInput, discussion_board_threadUncheckedCreateWithoutCategoryInput> | discussion_board_threadCreateWithoutCategoryInput[] | discussion_board_threadUncheckedCreateWithoutCategoryInput[]\n    connectOrCreate?: discussion_board_threadCreateOrConnectWithoutCategoryInput | discussion_board_threadCreateOrConnectWithoutCategoryInput[]\n    createMany?: discussion_board_threadCreateManyCategoryInputEnvelope\n    connect?: discussion_board_threadWhereUniqueInput | discussion_board_threadWhereUniqueInput[]\n  }\n\n  export type discussion_board_threadUncheckedCreateNestedManyWithoutCategoryInput = {\n    create?: XOR<discussion_board_threadCreateWithoutCategoryInput, discussion_board_threadUncheckedCreateWithoutCategoryInput> | discussion_board_threadCreateWithoutCategoryInput[] | discussion_board_threadUncheckedCreateWithoutCategoryInput[]\n    connectOrCreate?: discussion_board_threadCreateOrConnectWithoutCategoryInput | discussion_board_threadCreateOrConnectWithoutCategoryInput[]\n    createMany?: discussion_board_threadCreateManyCategoryInputEnvelope\n    connect?: discussion_board_threadWhereUniqueInput | discussion_board_threadWhereUniqueInput[]\n  }\n\n  export type discussion_board_threadUpdateManyWithoutCategoryNestedInput = {\n    create?: XOR<discussion_board_threadCreateWithoutCategoryInput, discussion_board_threadUncheckedCreateWithoutCategoryInput> | discussion_board_threadCreateWithoutCategoryInput[] | discussion_board_threadUncheckedCreateWithoutCategoryInput[]\n    connectOrCreate?: discussion_board_threadCreateOrConnectWithoutCategoryInput | discussion_board_threadCreateOrConnectWithoutCategoryInput[]\n    upsert?: discussion_board_threadUpsertWithWhereUniqueWithoutCategoryInput | discussion_board_threadUpsertWithWhereUniqueWithoutCategoryInput[]\n    createMany?: discussion_board_threadCreateManyCategoryInputEnvelope\n    set?: discussion_board_threadWhereUniqueInput | discussion_board_threadWhereUniqueInput[]\n    disconnect?: discussion_board_threadWhereUniqueInput | discussion_board_threadWhereUniqueInput[]\n    delete?: discussion_board_threadWhereUniqueInput | discussion_board_threadWhereUniqueInput[]\n    connect?: discussion_board_threadWhereUniqueInput | discussion_board_threadWhereUniqueInput[]\n    update?: discussion_board_threadUpdateWithWhereUniqueWithoutCategoryInput | discussion_board_threadUpdateWithWhereUniqueWithoutCategoryInput[]\n    updateMany?: discussion_board_threadUpdateManyWithWhereWithoutCategoryInput | discussion_board_threadUpdateManyWithWhereWithoutCategoryInput[]\n    deleteMany?: discussion_board_threadScalarWhereInput | discussion_board_threadScalarWhereInput[]\n  }\n\n  export type discussion_board_threadUncheckedUpdateManyWithoutCategoryNestedInput = {\n    create?: XOR<discussion_board_threadCreateWithoutCategoryInput, discussion_board_threadUncheckedCreateWithoutCategoryInput> | discussion_board_threadCreateWithoutCategoryInput[] | discussion_board_threadUncheckedCreateWithoutCategoryInput[]\n    connectOrCreate?: discussion_board_threadCreateOrConnectWithoutCategoryInput | discussion_board_threadCreateOrConnectWithoutCategoryInput[]\n    upsert?: discussion_board_threadUpsertWithWhereUniqueWithoutCategoryInput | discussion_board_threadUpsertWithWhereUniqueWithoutCategoryInput[]\n    createMany?: discussion_board_threadCreateManyCategoryInputEnvelope\n    set?: discussion_board_threadWhereUniqueInput | discussion_board_threadWhereUniqueInput[]\n    disconnect?: discussion_board_threadWhereUniqueInput | discussion_board_threadWhereUniqueInput[]\n    delete?: discussion_board_threadWhereUniqueInput | discussion_board_threadWhereUniqueInput[]\n    connect?: discussion_board_threadWhereUniqueInput | discussion_board_threadWhereUniqueInput[]\n    update?: discussion_board_threadUpdateWithWhereUniqueWithoutCategoryInput | discussion_board_threadUpdateWithWhereUniqueWithoutCategoryInput[]\n    updateMany?: discussion_board_threadUpdateManyWithWhereWithoutCategoryInput | discussion_board_threadUpdateManyWithWhereWithoutCategoryInput[]\n    deleteMany?: discussion_board_threadScalarWhereInput | discussion_board_threadScalarWhereInput[]\n  }\n\n  export type discussion_board_thread_tagCreateNestedManyWithoutTag_categoryInput = {\n    create?: XOR<discussion_board_thread_tagCreateWithoutTag_categoryInput, discussion_board_thread_tagUncheckedCreateWithoutTag_categoryInput> | discussion_board_thread_tagCreateWithoutTag_categoryInput[] | discussion_board_thread_tagUncheckedCreateWithoutTag_categoryInput[]\n    connectOrCreate?: discussion_board_thread_tagCreateOrConnectWithoutTag_categoryInput | discussion_board_thread_tagCreateOrConnectWithoutTag_categoryInput[]\n    createMany?: discussion_board_thread_tagCreateManyTag_categoryInputEnvelope\n    connect?: discussion_board_thread_tagWhereUniqueInput | discussion_board_thread_tagWhereUniqueInput[]\n  }\n\n  export type discussion_board_thread_tagUncheckedCreateNestedManyWithoutTag_categoryInput = {\n    create?: XOR<discussion_board_thread_tagCreateWithoutTag_categoryInput, discussion_board_thread_tagUncheckedCreateWithoutTag_categoryInput> | discussion_board_thread_tagCreateWithoutTag_categoryInput[] | discussion_board_thread_tagUncheckedCreateWithoutTag_categoryInput[]\n    connectOrCreate?: discussion_board_thread_tagCreateOrConnectWithoutTag_categoryInput | discussion_board_thread_tagCreateOrConnectWithoutTag_categoryInput[]\n    createMany?: discussion_board_thread_tagCreateManyTag_categoryInputEnvelope\n    connect?: discussion_board_thread_tagWhereUniqueInput | discussion_board_thread_tagWhereUniqueInput[]\n  }\n\n  export type discussion_board_thread_tagUpdateManyWithoutTag_categoryNestedInput = {\n    create?: XOR<discussion_board_thread_tagCreateWithoutTag_categoryInput, discussion_board_thread_tagUncheckedCreateWithoutTag_categoryInput> | discussion_board_thread_tagCreateWithoutTag_categoryInput[] | discussion_board_thread_tagUncheckedCreateWithoutTag_categoryInput[]\n    connectOrCreate?: discussion_board_thread_tagCreateOrConnectWithoutTag_categoryInput | discussion_board_thread_tagCreateOrConnectWithoutTag_categoryInput[]\n    upsert?: discussion_board_thread_tagUpsertWithWhereUniqueWithoutTag_categoryInput | discussion_board_thread_tagUpsertWithWhereUniqueWithoutTag_categoryInput[]\n    createMany?: discussion_board_thread_tagCreateManyTag_categoryInputEnvelope\n    set?: discussion_board_thread_tagWhereUniqueInput | discussion_board_thread_tagWhereUniqueInput[]\n    disconnect?: discussion_board_thread_tagWhereUniqueInput | discussion_board_thread_tagWhereUniqueInput[]\n    delete?: discussion_board_thread_tagWhereUniqueInput | discussion_board_thread_tagWhereUniqueInput[]\n    connect?: discussion_board_thread_tagWhereUniqueInput | discussion_board_thread_tagWhereUniqueInput[]\n    update?: discussion_board_thread_tagUpdateWithWhereUniqueWithoutTag_categoryInput | discussion_board_thread_tagUpdateWithWhereUniqueWithoutTag_categoryInput[]\n    updateMany?: discussion_board_thread_tagUpdateManyWithWhereWithoutTag_categoryInput | discussion_board_thread_tagUpdateManyWithWhereWithoutTag_categoryInput[]\n    deleteMany?: discussion_board_thread_tagScalarWhereInput | discussion_board_thread_tagScalarWhereInput[]\n  }\n\n  export type discussion_board_thread_tagUncheckedUpdateManyWithoutTag_categoryNestedInput = {\n    create?: XOR<discussion_board_thread_tagCreateWithoutTag_categoryInput, discussion_board_thread_tagUncheckedCreateWithoutTag_categoryInput> | discussion_board_thread_tagCreateWithoutTag_categoryInput[] | discussion_board_thread_tagUncheckedCreateWithoutTag_categoryInput[]\n    connectOrCreate?: discussion_board_thread_tagCreateOrConnectWithoutTag_categoryInput | discussion_board_thread_tagCreateOrConnectWithoutTag_categoryInput[]\n    upsert?: discussion_board_thread_tagUpsertWithWhereUniqueWithoutTag_categoryInput | discussion_board_thread_tagUpsertWithWhereUniqueWithoutTag_categoryInput[]\n    createMany?: discussion_board_thread_tagCreateManyTag_categoryInputEnvelope\n    set?: discussion_board_thread_tagWhereUniqueInput | discussion_board_thread_tagWhereUniqueInput[]\n    disconnect?: discussion_board_thread_tagWhereUniqueInput | discussion_board_thread_tagWhereUniqueInput[]\n    delete?: discussion_board_thread_tagWhereUniqueInput | discussion_board_thread_tagWhereUniqueInput[]\n    connect?: discussion_board_thread_tagWhereUniqueInput | discussion_board_thread_tagWhereUniqueInput[]\n    update?: discussion_board_thread_tagUpdateWithWhereUniqueWithoutTag_categoryInput | discussion_board_thread_tagUpdateWithWhereUniqueWithoutTag_categoryInput[]\n    updateMany?: discussion_board_thread_tagUpdateManyWithWhereWithoutTag_categoryInput | discussion_board_thread_tagUpdateManyWithWhereWithoutTag_categoryInput[]\n    deleteMany?: discussion_board_thread_tagScalarWhereInput | discussion_board_thread_tagScalarWhereInput[]\n  }\n\n  export type discussion_board_threadCreateNestedOneWithoutMv_discussion_thread_activityInput = {\n    create?: XOR<discussion_board_threadCreateWithoutMv_discussion_thread_activityInput, discussion_board_threadUncheckedCreateWithoutMv_discussion_thread_activityInput>\n    connectOrCreate?: discussion_board_threadCreateOrConnectWithoutMv_discussion_thread_activityInput\n    connect?: discussion_board_threadWhereUniqueInput\n  }\n\n  export type IntFieldUpdateOperationsInput = {\n    set?: number\n    increment?: number\n    decrement?: number\n    multiply?: number\n    divide?: number\n  }\n\n  export type discussion_board_threadUpdateOneRequiredWithoutMv_discussion_thread_activityNestedInput = {\n    create?: XOR<discussion_board_threadCreateWithoutMv_discussion_thread_activityInput, discussion_board_threadUncheckedCreateWithoutMv_discussion_thread_activityInput>\n    connectOrCreate?: discussion_board_threadCreateOrConnectWithoutMv_discussion_thread_activityInput\n    upsert?: discussion_board_threadUpsertWithoutMv_discussion_thread_activityInput\n    connect?: discussion_board_threadWhereUniqueInput\n    update?: XOR<XOR<discussion_board_threadUpdateToOneWithWhereWithoutMv_discussion_thread_activityInput, discussion_board_threadUpdateWithoutMv_discussion_thread_activityInput>, discussion_board_threadUncheckedUpdateWithoutMv_discussion_thread_activityInput>\n  }\n\n  export type discussion_board_usersCreateNestedOneWithoutDiscussion_board_voteInput = {\n    create?: XOR<discussion_board_usersCreateWithoutDiscussion_board_voteInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_voteInput>\n    connectOrCreate?: discussion_board_usersCreateOrConnectWithoutDiscussion_board_voteInput\n    connect?: discussion_board_usersWhereUniqueInput\n  }\n\n  export type discussion_board_threadCreateNestedOneWithoutDiscussion_board_voteInput = {\n    create?: XOR<discussion_board_threadCreateWithoutDiscussion_board_voteInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_voteInput>\n    connectOrCreate?: discussion_board_threadCreateOrConnectWithoutDiscussion_board_voteInput\n    connect?: discussion_board_threadWhereUniqueInput\n  }\n\n  export type discussion_board_postCreateNestedOneWithoutDiscussion_board_voteInput = {\n    create?: XOR<discussion_board_postCreateWithoutDiscussion_board_voteInput, discussion_board_postUncheckedCreateWithoutDiscussion_board_voteInput>\n    connectOrCreate?: discussion_board_postCreateOrConnectWithoutDiscussion_board_voteInput\n    connect?: discussion_board_postWhereUniqueInput\n  }\n\n  export type discussion_board_commentCreateNestedOneWithoutDiscussion_board_voteInput = {\n    create?: XOR<discussion_board_commentCreateWithoutDiscussion_board_voteInput, discussion_board_commentUncheckedCreateWithoutDiscussion_board_voteInput>\n    connectOrCreate?: discussion_board_commentCreateOrConnectWithoutDiscussion_board_voteInput\n    connect?: discussion_board_commentWhereUniqueInput\n  }\n\n  export type discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_voteNestedInput = {\n    create?: XOR<discussion_board_usersCreateWithoutDiscussion_board_voteInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_voteInput>\n    connectOrCreate?: discussion_board_usersCreateOrConnectWithoutDiscussion_board_voteInput\n    upsert?: discussion_board_usersUpsertWithoutDiscussion_board_voteInput\n    connect?: discussion_board_usersWhereUniqueInput\n    update?: XOR<XOR<discussion_board_usersUpdateToOneWithWhereWithoutDiscussion_board_voteInput, discussion_board_usersUpdateWithoutDiscussion_board_voteInput>, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_voteInput>\n  }\n\n  export type discussion_board_threadUpdateOneWithoutDiscussion_board_voteNestedInput = {\n    create?: XOR<discussion_board_threadCreateWithoutDiscussion_board_voteInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_voteInput>\n    connectOrCreate?: discussion_board_threadCreateOrConnectWithoutDiscussion_board_voteInput\n    upsert?: discussion_board_threadUpsertWithoutDiscussion_board_voteInput\n    disconnect?: discussion_board_threadWhereInput | boolean\n    delete?: discussion_board_threadWhereInput | boolean\n    connect?: discussion_board_threadWhereUniqueInput\n    update?: XOR<XOR<discussion_board_threadUpdateToOneWithWhereWithoutDiscussion_board_voteInput, discussion_board_threadUpdateWithoutDiscussion_board_voteInput>, discussion_board_threadUncheckedUpdateWithoutDiscussion_board_voteInput>\n  }\n\n  export type discussion_board_postUpdateOneWithoutDiscussion_board_voteNestedInput = {\n    create?: XOR<discussion_board_postCreateWithoutDiscussion_board_voteInput, discussion_board_postUncheckedCreateWithoutDiscussion_board_voteInput>\n    connectOrCreate?: discussion_board_postCreateOrConnectWithoutDiscussion_board_voteInput\n    upsert?: discussion_board_postUpsertWithoutDiscussion_board_voteInput\n    disconnect?: discussion_board_postWhereInput | boolean\n    delete?: discussion_board_postWhereInput | boolean\n    connect?: discussion_board_postWhereUniqueInput\n    update?: XOR<XOR<discussion_board_postUpdateToOneWithWhereWithoutDiscussion_board_voteInput, discussion_board_postUpdateWithoutDiscussion_board_voteInput>, discussion_board_postUncheckedUpdateWithoutDiscussion_board_voteInput>\n  }\n\n  export type discussion_board_commentUpdateOneWithoutDiscussion_board_voteNestedInput = {\n    create?: XOR<discussion_board_commentCreateWithoutDiscussion_board_voteInput, discussion_board_commentUncheckedCreateWithoutDiscussion_board_voteInput>\n    connectOrCreate?: discussion_board_commentCreateOrConnectWithoutDiscussion_board_voteInput\n    upsert?: discussion_board_commentUpsertWithoutDiscussion_board_voteInput\n    disconnect?: discussion_board_commentWhereInput | boolean\n    delete?: discussion_board_commentWhereInput | boolean\n    connect?: discussion_board_commentWhereUniqueInput\n    update?: XOR<XOR<discussion_board_commentUpdateToOneWithWhereWithoutDiscussion_board_voteInput, discussion_board_commentUpdateWithoutDiscussion_board_voteInput>, discussion_board_commentUncheckedUpdateWithoutDiscussion_board_voteInput>\n  }\n\n  export type discussion_board_usersCreateNestedOneWithoutDiscussion_board_reactionInput = {\n    create?: XOR<discussion_board_usersCreateWithoutDiscussion_board_reactionInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_reactionInput>\n    connectOrCreate?: discussion_board_usersCreateOrConnectWithoutDiscussion_board_reactionInput\n    connect?: discussion_board_usersWhereUniqueInput\n  }\n\n  export type discussion_board_threadCreateNestedOneWithoutDiscussion_board_reactionInput = {\n    create?: XOR<discussion_board_threadCreateWithoutDiscussion_board_reactionInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_reactionInput>\n    connectOrCreate?: discussion_board_threadCreateOrConnectWithoutDiscussion_board_reactionInput\n    connect?: discussion_board_threadWhereUniqueInput\n  }\n\n  export type discussion_board_postCreateNestedOneWithoutDiscussion_board_reactionInput = {\n    create?: XOR<discussion_board_postCreateWithoutDiscussion_board_reactionInput, discussion_board_postUncheckedCreateWithoutDiscussion_board_reactionInput>\n    connectOrCreate?: discussion_board_postCreateOrConnectWithoutDiscussion_board_reactionInput\n    connect?: discussion_board_postWhereUniqueInput\n  }\n\n  export type discussion_board_commentCreateNestedOneWithoutDiscussion_board_reactionInput = {\n    create?: XOR<discussion_board_commentCreateWithoutDiscussion_board_reactionInput, discussion_board_commentUncheckedCreateWithoutDiscussion_board_reactionInput>\n    connectOrCreate?: discussion_board_commentCreateOrConnectWithoutDiscussion_board_reactionInput\n    connect?: discussion_board_commentWhereUniqueInput\n  }\n\n  export type discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_reactionNestedInput = {\n    create?: XOR<discussion_board_usersCreateWithoutDiscussion_board_reactionInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_reactionInput>\n    connectOrCreate?: discussion_board_usersCreateOrConnectWithoutDiscussion_board_reactionInput\n    upsert?: discussion_board_usersUpsertWithoutDiscussion_board_reactionInput\n    connect?: discussion_board_usersWhereUniqueInput\n    update?: XOR<XOR<discussion_board_usersUpdateToOneWithWhereWithoutDiscussion_board_reactionInput, discussion_board_usersUpdateWithoutDiscussion_board_reactionInput>, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_reactionInput>\n  }\n\n  export type discussion_board_threadUpdateOneWithoutDiscussion_board_reactionNestedInput = {\n    create?: XOR<discussion_board_threadCreateWithoutDiscussion_board_reactionInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_reactionInput>\n    connectOrCreate?: discussion_board_threadCreateOrConnectWithoutDiscussion_board_reactionInput\n    upsert?: discussion_board_threadUpsertWithoutDiscussion_board_reactionInput\n    disconnect?: discussion_board_threadWhereInput | boolean\n    delete?: discussion_board_threadWhereInput | boolean\n    connect?: discussion_board_threadWhereUniqueInput\n    update?: XOR<XOR<discussion_board_threadUpdateToOneWithWhereWithoutDiscussion_board_reactionInput, discussion_board_threadUpdateWithoutDiscussion_board_reactionInput>, discussion_board_threadUncheckedUpdateWithoutDiscussion_board_reactionInput>\n  }\n\n  export type discussion_board_postUpdateOneWithoutDiscussion_board_reactionNestedInput = {\n    create?: XOR<discussion_board_postCreateWithoutDiscussion_board_reactionInput, discussion_board_postUncheckedCreateWithoutDiscussion_board_reactionInput>\n    connectOrCreate?: discussion_board_postCreateOrConnectWithoutDiscussion_board_reactionInput\n    upsert?: discussion_board_postUpsertWithoutDiscussion_board_reactionInput\n    disconnect?: discussion_board_postWhereInput | boolean\n    delete?: discussion_board_postWhereInput | boolean\n    connect?: discussion_board_postWhereUniqueInput\n    update?: XOR<XOR<discussion_board_postUpdateToOneWithWhereWithoutDiscussion_board_reactionInput, discussion_board_postUpdateWithoutDiscussion_board_reactionInput>, discussion_board_postUncheckedUpdateWithoutDiscussion_board_reactionInput>\n  }\n\n  export type discussion_board_commentUpdateOneWithoutDiscussion_board_reactionNestedInput = {\n    create?: XOR<discussion_board_commentCreateWithoutDiscussion_board_reactionInput, discussion_board_commentUncheckedCreateWithoutDiscussion_board_reactionInput>\n    connectOrCreate?: discussion_board_commentCreateOrConnectWithoutDiscussion_board_reactionInput\n    upsert?: discussion_board_commentUpsertWithoutDiscussion_board_reactionInput\n    disconnect?: discussion_board_commentWhereInput | boolean\n    delete?: discussion_board_commentWhereInput | boolean\n    connect?: discussion_board_commentWhereUniqueInput\n    update?: XOR<XOR<discussion_board_commentUpdateToOneWithWhereWithoutDiscussion_board_reactionInput, discussion_board_commentUpdateWithoutDiscussion_board_reactionInput>, discussion_board_commentUncheckedUpdateWithoutDiscussion_board_reactionInput>\n  }\n\n  export type discussion_board_usersCreateNestedOneWithoutDiscussion_board_bookmarkInput = {\n    create?: XOR<discussion_board_usersCreateWithoutDiscussion_board_bookmarkInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_bookmarkInput>\n    connectOrCreate?: discussion_board_usersCreateOrConnectWithoutDiscussion_board_bookmarkInput\n    connect?: discussion_board_usersWhereUniqueInput\n  }\n\n  export type discussion_board_threadCreateNestedOneWithoutDiscussion_board_bookmarkInput = {\n    create?: XOR<discussion_board_threadCreateWithoutDiscussion_board_bookmarkInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_bookmarkInput>\n    connectOrCreate?: discussion_board_threadCreateOrConnectWithoutDiscussion_board_bookmarkInput\n    connect?: discussion_board_threadWhereUniqueInput\n  }\n\n  export type discussion_board_postCreateNestedOneWithoutDiscussion_board_bookmarkInput = {\n    create?: XOR<discussion_board_postCreateWithoutDiscussion_board_bookmarkInput, discussion_board_postUncheckedCreateWithoutDiscussion_board_bookmarkInput>\n    connectOrCreate?: discussion_board_postCreateOrConnectWithoutDiscussion_board_bookmarkInput\n    connect?: discussion_board_postWhereUniqueInput\n  }\n\n  export type discussion_board_commentCreateNestedOneWithoutDiscussion_board_bookmarkInput = {\n    create?: XOR<discussion_board_commentCreateWithoutDiscussion_board_bookmarkInput, discussion_board_commentUncheckedCreateWithoutDiscussion_board_bookmarkInput>\n    connectOrCreate?: discussion_board_commentCreateOrConnectWithoutDiscussion_board_bookmarkInput\n    connect?: discussion_board_commentWhereUniqueInput\n  }\n\n  export type discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_bookmarkNestedInput = {\n    create?: XOR<discussion_board_usersCreateWithoutDiscussion_board_bookmarkInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_bookmarkInput>\n    connectOrCreate?: discussion_board_usersCreateOrConnectWithoutDiscussion_board_bookmarkInput\n    upsert?: discussion_board_usersUpsertWithoutDiscussion_board_bookmarkInput\n    connect?: discussion_board_usersWhereUniqueInput\n    update?: XOR<XOR<discussion_board_usersUpdateToOneWithWhereWithoutDiscussion_board_bookmarkInput, discussion_board_usersUpdateWithoutDiscussion_board_bookmarkInput>, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_bookmarkInput>\n  }\n\n  export type discussion_board_threadUpdateOneWithoutDiscussion_board_bookmarkNestedInput = {\n    create?: XOR<discussion_board_threadCreateWithoutDiscussion_board_bookmarkInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_bookmarkInput>\n    connectOrCreate?: discussion_board_threadCreateOrConnectWithoutDiscussion_board_bookmarkInput\n    upsert?: discussion_board_threadUpsertWithoutDiscussion_board_bookmarkInput\n    disconnect?: discussion_board_threadWhereInput | boolean\n    delete?: discussion_board_threadWhereInput | boolean\n    connect?: discussion_board_threadWhereUniqueInput\n    update?: XOR<XOR<discussion_board_threadUpdateToOneWithWhereWithoutDiscussion_board_bookmarkInput, discussion_board_threadUpdateWithoutDiscussion_board_bookmarkInput>, discussion_board_threadUncheckedUpdateWithoutDiscussion_board_bookmarkInput>\n  }\n\n  export type discussion_board_postUpdateOneWithoutDiscussion_board_bookmarkNestedInput = {\n    create?: XOR<discussion_board_postCreateWithoutDiscussion_board_bookmarkInput, discussion_board_postUncheckedCreateWithoutDiscussion_board_bookmarkInput>\n    connectOrCreate?: discussion_board_postCreateOrConnectWithoutDiscussion_board_bookmarkInput\n    upsert?: discussion_board_postUpsertWithoutDiscussion_board_bookmarkInput\n    disconnect?: discussion_board_postWhereInput | boolean\n    delete?: discussion_board_postWhereInput | boolean\n    connect?: discussion_board_postWhereUniqueInput\n    update?: XOR<XOR<discussion_board_postUpdateToOneWithWhereWithoutDiscussion_board_bookmarkInput, discussion_board_postUpdateWithoutDiscussion_board_bookmarkInput>, discussion_board_postUncheckedUpdateWithoutDiscussion_board_bookmarkInput>\n  }\n\n  export type discussion_board_commentUpdateOneWithoutDiscussion_board_bookmarkNestedInput = {\n    create?: XOR<discussion_board_commentCreateWithoutDiscussion_board_bookmarkInput, discussion_board_commentUncheckedCreateWithoutDiscussion_board_bookmarkInput>\n    connectOrCreate?: discussion_board_commentCreateOrConnectWithoutDiscussion_board_bookmarkInput\n    upsert?: discussion_board_commentUpsertWithoutDiscussion_board_bookmarkInput\n    disconnect?: discussion_board_commentWhereInput | boolean\n    delete?: discussion_board_commentWhereInput | boolean\n    connect?: discussion_board_commentWhereUniqueInput\n    update?: XOR<XOR<discussion_board_commentUpdateToOneWithWhereWithoutDiscussion_board_bookmarkInput, discussion_board_commentUpdateWithoutDiscussion_board_bookmarkInput>, discussion_board_commentUncheckedUpdateWithoutDiscussion_board_bookmarkInput>\n  }\n\n  export type discussion_board_usersCreateNestedOneWithoutDiscussion_board_notificationInput = {\n    create?: XOR<discussion_board_usersCreateWithoutDiscussion_board_notificationInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_notificationInput>\n    connectOrCreate?: discussion_board_usersCreateOrConnectWithoutDiscussion_board_notificationInput\n    connect?: discussion_board_usersWhereUniqueInput\n  }\n\n  export type discussion_board_threadCreateNestedOneWithoutDiscussion_board_notificationInput = {\n    create?: XOR<discussion_board_threadCreateWithoutDiscussion_board_notificationInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_notificationInput>\n    connectOrCreate?: discussion_board_threadCreateOrConnectWithoutDiscussion_board_notificationInput\n    connect?: discussion_board_threadWhereUniqueInput\n  }\n\n  export type discussion_board_postCreateNestedOneWithoutDiscussion_board_notificationInput = {\n    create?: XOR<discussion_board_postCreateWithoutDiscussion_board_notificationInput, discussion_board_postUncheckedCreateWithoutDiscussion_board_notificationInput>\n    connectOrCreate?: discussion_board_postCreateOrConnectWithoutDiscussion_board_notificationInput\n    connect?: discussion_board_postWhereUniqueInput\n  }\n\n  export type discussion_board_commentCreateNestedOneWithoutDiscussion_board_notificationInput = {\n    create?: XOR<discussion_board_commentCreateWithoutDiscussion_board_notificationInput, discussion_board_commentUncheckedCreateWithoutDiscussion_board_notificationInput>\n    connectOrCreate?: discussion_board_commentCreateOrConnectWithoutDiscussion_board_notificationInput\n    connect?: discussion_board_commentWhereUniqueInput\n  }\n\n  export type discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_notificationNestedInput = {\n    create?: XOR<discussion_board_usersCreateWithoutDiscussion_board_notificationInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_notificationInput>\n    connectOrCreate?: discussion_board_usersCreateOrConnectWithoutDiscussion_board_notificationInput\n    upsert?: discussion_board_usersUpsertWithoutDiscussion_board_notificationInput\n    connect?: discussion_board_usersWhereUniqueInput\n    update?: XOR<XOR<discussion_board_usersUpdateToOneWithWhereWithoutDiscussion_board_notificationInput, discussion_board_usersUpdateWithoutDiscussion_board_notificationInput>, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_notificationInput>\n  }\n\n  export type discussion_board_threadUpdateOneWithoutDiscussion_board_notificationNestedInput = {\n    create?: XOR<discussion_board_threadCreateWithoutDiscussion_board_notificationInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_notificationInput>\n    connectOrCreate?: discussion_board_threadCreateOrConnectWithoutDiscussion_board_notificationInput\n    upsert?: discussion_board_threadUpsertWithoutDiscussion_board_notificationInput\n    disconnect?: discussion_board_threadWhereInput | boolean\n    delete?: discussion_board_threadWhereInput | boolean\n    connect?: discussion_board_threadWhereUniqueInput\n    update?: XOR<XOR<discussion_board_threadUpdateToOneWithWhereWithoutDiscussion_board_notificationInput, discussion_board_threadUpdateWithoutDiscussion_board_notificationInput>, discussion_board_threadUncheckedUpdateWithoutDiscussion_board_notificationInput>\n  }\n\n  export type discussion_board_postUpdateOneWithoutDiscussion_board_notificationNestedInput = {\n    create?: XOR<discussion_board_postCreateWithoutDiscussion_board_notificationInput, discussion_board_postUncheckedCreateWithoutDiscussion_board_notificationInput>\n    connectOrCreate?: discussion_board_postCreateOrConnectWithoutDiscussion_board_notificationInput\n    upsert?: discussion_board_postUpsertWithoutDiscussion_board_notificationInput\n    disconnect?: discussion_board_postWhereInput | boolean\n    delete?: discussion_board_postWhereInput | boolean\n    connect?: discussion_board_postWhereUniqueInput\n    update?: XOR<XOR<discussion_board_postUpdateToOneWithWhereWithoutDiscussion_board_notificationInput, discussion_board_postUpdateWithoutDiscussion_board_notificationInput>, discussion_board_postUncheckedUpdateWithoutDiscussion_board_notificationInput>\n  }\n\n  export type discussion_board_commentUpdateOneWithoutDiscussion_board_notificationNestedInput = {\n    create?: XOR<discussion_board_commentCreateWithoutDiscussion_board_notificationInput, discussion_board_commentUncheckedCreateWithoutDiscussion_board_notificationInput>\n    connectOrCreate?: discussion_board_commentCreateOrConnectWithoutDiscussion_board_notificationInput\n    upsert?: discussion_board_commentUpsertWithoutDiscussion_board_notificationInput\n    disconnect?: discussion_board_commentWhereInput | boolean\n    delete?: discussion_board_commentWhereInput | boolean\n    connect?: discussion_board_commentWhereUniqueInput\n    update?: XOR<XOR<discussion_board_commentUpdateToOneWithWhereWithoutDiscussion_board_notificationInput, discussion_board_commentUpdateWithoutDiscussion_board_notificationInput>, discussion_board_commentUncheckedUpdateWithoutDiscussion_board_notificationInput>\n  }\n\n  export type discussion_board_usersCreateNestedOneWithoutDiscussion_board_subscriptionInput = {\n    create?: XOR<discussion_board_usersCreateWithoutDiscussion_board_subscriptionInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_subscriptionInput>\n    connectOrCreate?: discussion_board_usersCreateOrConnectWithoutDiscussion_board_subscriptionInput\n    connect?: discussion_board_usersWhereUniqueInput\n  }\n\n  export type discussion_board_threadCreateNestedOneWithoutDiscussion_board_subscriptionInput = {\n    create?: XOR<discussion_board_threadCreateWithoutDiscussion_board_subscriptionInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_subscriptionInput>\n    connectOrCreate?: discussion_board_threadCreateOrConnectWithoutDiscussion_board_subscriptionInput\n    connect?: discussion_board_threadWhereUniqueInput\n  }\n\n  export type discussion_board_thread_tagCreateNestedOneWithoutDiscussion_board_subscriptionInput = {\n    create?: XOR<discussion_board_thread_tagCreateWithoutDiscussion_board_subscriptionInput, discussion_board_thread_tagUncheckedCreateWithoutDiscussion_board_subscriptionInput>\n    connectOrCreate?: discussion_board_thread_tagCreateOrConnectWithoutDiscussion_board_subscriptionInput\n    connect?: discussion_board_thread_tagWhereUniqueInput\n  }\n\n  export type discussion_board_postCreateNestedOneWithoutDiscussion_board_subscriptionInput = {\n    create?: XOR<discussion_board_postCreateWithoutDiscussion_board_subscriptionInput, discussion_board_postUncheckedCreateWithoutDiscussion_board_subscriptionInput>\n    connectOrCreate?: discussion_board_postCreateOrConnectWithoutDiscussion_board_subscriptionInput\n    connect?: discussion_board_postWhereUniqueInput\n  }\n\n  export type discussion_board_commentCreateNestedOneWithoutDiscussion_board_subscriptionInput = {\n    create?: XOR<discussion_board_commentCreateWithoutDiscussion_board_subscriptionInput, discussion_board_commentUncheckedCreateWithoutDiscussion_board_subscriptionInput>\n    connectOrCreate?: discussion_board_commentCreateOrConnectWithoutDiscussion_board_subscriptionInput\n    connect?: discussion_board_commentWhereUniqueInput\n  }\n\n  export type discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_subscriptionNestedInput = {\n    create?: XOR<discussion_board_usersCreateWithoutDiscussion_board_subscriptionInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_subscriptionInput>\n    connectOrCreate?: discussion_board_usersCreateOrConnectWithoutDiscussion_board_subscriptionInput\n    upsert?: discussion_board_usersUpsertWithoutDiscussion_board_subscriptionInput\n    connect?: discussion_board_usersWhereUniqueInput\n    update?: XOR<XOR<discussion_board_usersUpdateToOneWithWhereWithoutDiscussion_board_subscriptionInput, discussion_board_usersUpdateWithoutDiscussion_board_subscriptionInput>, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_subscriptionInput>\n  }\n\n  export type discussion_board_threadUpdateOneWithoutDiscussion_board_subscriptionNestedInput = {\n    create?: XOR<discussion_board_threadCreateWithoutDiscussion_board_subscriptionInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_subscriptionInput>\n    connectOrCreate?: discussion_board_threadCreateOrConnectWithoutDiscussion_board_subscriptionInput\n    upsert?: discussion_board_threadUpsertWithoutDiscussion_board_subscriptionInput\n    disconnect?: discussion_board_threadWhereInput | boolean\n    delete?: discussion_board_threadWhereInput | boolean\n    connect?: discussion_board_threadWhereUniqueInput\n    update?: XOR<XOR<discussion_board_threadUpdateToOneWithWhereWithoutDiscussion_board_subscriptionInput, discussion_board_threadUpdateWithoutDiscussion_board_subscriptionInput>, discussion_board_threadUncheckedUpdateWithoutDiscussion_board_subscriptionInput>\n  }\n\n  export type discussion_board_thread_tagUpdateOneWithoutDiscussion_board_subscriptionNestedInput = {\n    create?: XOR<discussion_board_thread_tagCreateWithoutDiscussion_board_subscriptionInput, discussion_board_thread_tagUncheckedCreateWithoutDiscussion_board_subscriptionInput>\n    connectOrCreate?: discussion_board_thread_tagCreateOrConnectWithoutDiscussion_board_subscriptionInput\n    upsert?: discussion_board_thread_tagUpsertWithoutDiscussion_board_subscriptionInput\n    disconnect?: discussion_board_thread_tagWhereInput | boolean\n    delete?: discussion_board_thread_tagWhereInput | boolean\n    connect?: discussion_board_thread_tagWhereUniqueInput\n    update?: XOR<XOR<discussion_board_thread_tagUpdateToOneWithWhereWithoutDiscussion_board_subscriptionInput, discussion_board_thread_tagUpdateWithoutDiscussion_board_subscriptionInput>, discussion_board_thread_tagUncheckedUpdateWithoutDiscussion_board_subscriptionInput>\n  }\n\n  export type discussion_board_postUpdateOneWithoutDiscussion_board_subscriptionNestedInput = {\n    create?: XOR<discussion_board_postCreateWithoutDiscussion_board_subscriptionInput, discussion_board_postUncheckedCreateWithoutDiscussion_board_subscriptionInput>\n    connectOrCreate?: discussion_board_postCreateOrConnectWithoutDiscussion_board_subscriptionInput\n    upsert?: discussion_board_postUpsertWithoutDiscussion_board_subscriptionInput\n    disconnect?: discussion_board_postWhereInput | boolean\n    delete?: discussion_board_postWhereInput | boolean\n    connect?: discussion_board_postWhereUniqueInput\n    update?: XOR<XOR<discussion_board_postUpdateToOneWithWhereWithoutDiscussion_board_subscriptionInput, discussion_board_postUpdateWithoutDiscussion_board_subscriptionInput>, discussion_board_postUncheckedUpdateWithoutDiscussion_board_subscriptionInput>\n  }\n\n  export type discussion_board_commentUpdateOneWithoutDiscussion_board_subscriptionNestedInput = {\n    create?: XOR<discussion_board_commentCreateWithoutDiscussion_board_subscriptionInput, discussion_board_commentUncheckedCreateWithoutDiscussion_board_subscriptionInput>\n    connectOrCreate?: discussion_board_commentCreateOrConnectWithoutDiscussion_board_subscriptionInput\n    upsert?: discussion_board_commentUpsertWithoutDiscussion_board_subscriptionInput\n    disconnect?: discussion_board_commentWhereInput | boolean\n    delete?: discussion_board_commentWhereInput | boolean\n    connect?: discussion_board_commentWhereUniqueInput\n    update?: XOR<XOR<discussion_board_commentUpdateToOneWithWhereWithoutDiscussion_board_subscriptionInput, discussion_board_commentUpdateWithoutDiscussion_board_subscriptionInput>, discussion_board_commentUncheckedUpdateWithoutDiscussion_board_subscriptionInput>\n  }\n\n  export type discussion_board_usersCreateNestedOneWithoutDiscussion_board_report_of_reported_user_idInput = {\n    create?: XOR<discussion_board_usersCreateWithoutDiscussion_board_report_of_reported_user_idInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_report_of_reported_user_idInput>\n    connectOrCreate?: discussion_board_usersCreateOrConnectWithoutDiscussion_board_report_of_reported_user_idInput\n    connect?: discussion_board_usersWhereUniqueInput\n  }\n\n  export type discussion_board_usersCreateNestedOneWithoutDiscussion_board_report_of_reporting_user_idInput = {\n    create?: XOR<discussion_board_usersCreateWithoutDiscussion_board_report_of_reporting_user_idInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_report_of_reporting_user_idInput>\n    connectOrCreate?: discussion_board_usersCreateOrConnectWithoutDiscussion_board_report_of_reporting_user_idInput\n    connect?: discussion_board_usersWhereUniqueInput\n  }\n\n  export type discussion_board_threadCreateNestedOneWithoutDiscussion_board_reportInput = {\n    create?: XOR<discussion_board_threadCreateWithoutDiscussion_board_reportInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_reportInput>\n    connectOrCreate?: discussion_board_threadCreateOrConnectWithoutDiscussion_board_reportInput\n    connect?: discussion_board_threadWhereUniqueInput\n  }\n\n  export type discussion_board_postCreateNestedOneWithoutDiscussion_board_reportInput = {\n    create?: XOR<discussion_board_postCreateWithoutDiscussion_board_reportInput, discussion_board_postUncheckedCreateWithoutDiscussion_board_reportInput>\n    connectOrCreate?: discussion_board_postCreateOrConnectWithoutDiscussion_board_reportInput\n    connect?: discussion_board_postWhereUniqueInput\n  }\n\n  export type discussion_board_commentCreateNestedOneWithoutDiscussion_board_reportInput = {\n    create?: XOR<discussion_board_commentCreateWithoutDiscussion_board_reportInput, discussion_board_commentUncheckedCreateWithoutDiscussion_board_reportInput>\n    connectOrCreate?: discussion_board_commentCreateOrConnectWithoutDiscussion_board_reportInput\n    connect?: discussion_board_commentWhereUniqueInput\n  }\n\n  export type discussion_board_moderator_actionCreateNestedManyWithoutReportInput = {\n    create?: XOR<discussion_board_moderator_actionCreateWithoutReportInput, discussion_board_moderator_actionUncheckedCreateWithoutReportInput> | discussion_board_moderator_actionCreateWithoutReportInput[] | discussion_board_moderator_actionUncheckedCreateWithoutReportInput[]\n    connectOrCreate?: discussion_board_moderator_actionCreateOrConnectWithoutReportInput | discussion_board_moderator_actionCreateOrConnectWithoutReportInput[]\n    createMany?: discussion_board_moderator_actionCreateManyReportInputEnvelope\n    connect?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n  }\n\n  export type discussion_board_banCreateNestedManyWithoutReportInput = {\n    create?: XOR<discussion_board_banCreateWithoutReportInput, discussion_board_banUncheckedCreateWithoutReportInput> | discussion_board_banCreateWithoutReportInput[] | discussion_board_banUncheckedCreateWithoutReportInput[]\n    connectOrCreate?: discussion_board_banCreateOrConnectWithoutReportInput | discussion_board_banCreateOrConnectWithoutReportInput[]\n    createMany?: discussion_board_banCreateManyReportInputEnvelope\n    connect?: discussion_board_banWhereUniqueInput | discussion_board_banWhereUniqueInput[]\n  }\n\n  export type discussion_board_moderator_actionUncheckedCreateNestedManyWithoutReportInput = {\n    create?: XOR<discussion_board_moderator_actionCreateWithoutReportInput, discussion_board_moderator_actionUncheckedCreateWithoutReportInput> | discussion_board_moderator_actionCreateWithoutReportInput[] | discussion_board_moderator_actionUncheckedCreateWithoutReportInput[]\n    connectOrCreate?: discussion_board_moderator_actionCreateOrConnectWithoutReportInput | discussion_board_moderator_actionCreateOrConnectWithoutReportInput[]\n    createMany?: discussion_board_moderator_actionCreateManyReportInputEnvelope\n    connect?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n  }\n\n  export type discussion_board_banUncheckedCreateNestedManyWithoutReportInput = {\n    create?: XOR<discussion_board_banCreateWithoutReportInput, discussion_board_banUncheckedCreateWithoutReportInput> | discussion_board_banCreateWithoutReportInput[] | discussion_board_banUncheckedCreateWithoutReportInput[]\n    connectOrCreate?: discussion_board_banCreateOrConnectWithoutReportInput | discussion_board_banCreateOrConnectWithoutReportInput[]\n    createMany?: discussion_board_banCreateManyReportInputEnvelope\n    connect?: discussion_board_banWhereUniqueInput | discussion_board_banWhereUniqueInput[]\n  }\n\n  export type discussion_board_usersUpdateOneWithoutDiscussion_board_report_of_reported_user_idNestedInput = {\n    create?: XOR<discussion_board_usersCreateWithoutDiscussion_board_report_of_reported_user_idInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_report_of_reported_user_idInput>\n    connectOrCreate?: discussion_board_usersCreateOrConnectWithoutDiscussion_board_report_of_reported_user_idInput\n    upsert?: discussion_board_usersUpsertWithoutDiscussion_board_report_of_reported_user_idInput\n    disconnect?: discussion_board_usersWhereInput | boolean\n    delete?: discussion_board_usersWhereInput | boolean\n    connect?: discussion_board_usersWhereUniqueInput\n    update?: XOR<XOR<discussion_board_usersUpdateToOneWithWhereWithoutDiscussion_board_report_of_reported_user_idInput, discussion_board_usersUpdateWithoutDiscussion_board_report_of_reported_user_idInput>, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_report_of_reported_user_idInput>\n  }\n\n  export type discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_report_of_reporting_user_idNestedInput = {\n    create?: XOR<discussion_board_usersCreateWithoutDiscussion_board_report_of_reporting_user_idInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_report_of_reporting_user_idInput>\n    connectOrCreate?: discussion_board_usersCreateOrConnectWithoutDiscussion_board_report_of_reporting_user_idInput\n    upsert?: discussion_board_usersUpsertWithoutDiscussion_board_report_of_reporting_user_idInput\n    connect?: discussion_board_usersWhereUniqueInput\n    update?: XOR<XOR<discussion_board_usersUpdateToOneWithWhereWithoutDiscussion_board_report_of_reporting_user_idInput, discussion_board_usersUpdateWithoutDiscussion_board_report_of_reporting_user_idInput>, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_report_of_reporting_user_idInput>\n  }\n\n  export type discussion_board_threadUpdateOneWithoutDiscussion_board_reportNestedInput = {\n    create?: XOR<discussion_board_threadCreateWithoutDiscussion_board_reportInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_reportInput>\n    connectOrCreate?: discussion_board_threadCreateOrConnectWithoutDiscussion_board_reportInput\n    upsert?: discussion_board_threadUpsertWithoutDiscussion_board_reportInput\n    disconnect?: discussion_board_threadWhereInput | boolean\n    delete?: discussion_board_threadWhereInput | boolean\n    connect?: discussion_board_threadWhereUniqueInput\n    update?: XOR<XOR<discussion_board_threadUpdateToOneWithWhereWithoutDiscussion_board_reportInput, discussion_board_threadUpdateWithoutDiscussion_board_reportInput>, discussion_board_threadUncheckedUpdateWithoutDiscussion_board_reportInput>\n  }\n\n  export type discussion_board_postUpdateOneWithoutDiscussion_board_reportNestedInput = {\n    create?: XOR<discussion_board_postCreateWithoutDiscussion_board_reportInput, discussion_board_postUncheckedCreateWithoutDiscussion_board_reportInput>\n    connectOrCreate?: discussion_board_postCreateOrConnectWithoutDiscussion_board_reportInput\n    upsert?: discussion_board_postUpsertWithoutDiscussion_board_reportInput\n    disconnect?: discussion_board_postWhereInput | boolean\n    delete?: discussion_board_postWhereInput | boolean\n    connect?: discussion_board_postWhereUniqueInput\n    update?: XOR<XOR<discussion_board_postUpdateToOneWithWhereWithoutDiscussion_board_reportInput, discussion_board_postUpdateWithoutDiscussion_board_reportInput>, discussion_board_postUncheckedUpdateWithoutDiscussion_board_reportInput>\n  }\n\n  export type discussion_board_commentUpdateOneWithoutDiscussion_board_reportNestedInput = {\n    create?: XOR<discussion_board_commentCreateWithoutDiscussion_board_reportInput, discussion_board_commentUncheckedCreateWithoutDiscussion_board_reportInput>\n    connectOrCreate?: discussion_board_commentCreateOrConnectWithoutDiscussion_board_reportInput\n    upsert?: discussion_board_commentUpsertWithoutDiscussion_board_reportInput\n    disconnect?: discussion_board_commentWhereInput | boolean\n    delete?: discussion_board_commentWhereInput | boolean\n    connect?: discussion_board_commentWhereUniqueInput\n    update?: XOR<XOR<discussion_board_commentUpdateToOneWithWhereWithoutDiscussion_board_reportInput, discussion_board_commentUpdateWithoutDiscussion_board_reportInput>, discussion_board_commentUncheckedUpdateWithoutDiscussion_board_reportInput>\n  }\n\n  export type discussion_board_moderator_actionUpdateManyWithoutReportNestedInput = {\n    create?: XOR<discussion_board_moderator_actionCreateWithoutReportInput, discussion_board_moderator_actionUncheckedCreateWithoutReportInput> | discussion_board_moderator_actionCreateWithoutReportInput[] | discussion_board_moderator_actionUncheckedCreateWithoutReportInput[]\n    connectOrCreate?: discussion_board_moderator_actionCreateOrConnectWithoutReportInput | discussion_board_moderator_actionCreateOrConnectWithoutReportInput[]\n    upsert?: discussion_board_moderator_actionUpsertWithWhereUniqueWithoutReportInput | discussion_board_moderator_actionUpsertWithWhereUniqueWithoutReportInput[]\n    createMany?: discussion_board_moderator_actionCreateManyReportInputEnvelope\n    set?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    disconnect?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    delete?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    connect?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    update?: discussion_board_moderator_actionUpdateWithWhereUniqueWithoutReportInput | discussion_board_moderator_actionUpdateWithWhereUniqueWithoutReportInput[]\n    updateMany?: discussion_board_moderator_actionUpdateManyWithWhereWithoutReportInput | discussion_board_moderator_actionUpdateManyWithWhereWithoutReportInput[]\n    deleteMany?: discussion_board_moderator_actionScalarWhereInput | discussion_board_moderator_actionScalarWhereInput[]\n  }\n\n  export type discussion_board_banUpdateManyWithoutReportNestedInput = {\n    create?: XOR<discussion_board_banCreateWithoutReportInput, discussion_board_banUncheckedCreateWithoutReportInput> | discussion_board_banCreateWithoutReportInput[] | discussion_board_banUncheckedCreateWithoutReportInput[]\n    connectOrCreate?: discussion_board_banCreateOrConnectWithoutReportInput | discussion_board_banCreateOrConnectWithoutReportInput[]\n    upsert?: discussion_board_banUpsertWithWhereUniqueWithoutReportInput | discussion_board_banUpsertWithWhereUniqueWithoutReportInput[]\n    createMany?: discussion_board_banCreateManyReportInputEnvelope\n    set?: discussion_board_banWhereUniqueInput | discussion_board_banWhereUniqueInput[]\n    disconnect?: discussion_board_banWhereUniqueInput | discussion_board_banWhereUniqueInput[]\n    delete?: discussion_board_banWhereUniqueInput | discussion_board_banWhereUniqueInput[]\n    connect?: discussion_board_banWhereUniqueInput | discussion_board_banWhereUniqueInput[]\n    update?: discussion_board_banUpdateWithWhereUniqueWithoutReportInput | discussion_board_banUpdateWithWhereUniqueWithoutReportInput[]\n    updateMany?: discussion_board_banUpdateManyWithWhereWithoutReportInput | discussion_board_banUpdateManyWithWhereWithoutReportInput[]\n    deleteMany?: discussion_board_banScalarWhereInput | discussion_board_banScalarWhereInput[]\n  }\n\n  export type discussion_board_moderator_actionUncheckedUpdateManyWithoutReportNestedInput = {\n    create?: XOR<discussion_board_moderator_actionCreateWithoutReportInput, discussion_board_moderator_actionUncheckedCreateWithoutReportInput> | discussion_board_moderator_actionCreateWithoutReportInput[] | discussion_board_moderator_actionUncheckedCreateWithoutReportInput[]\n    connectOrCreate?: discussion_board_moderator_actionCreateOrConnectWithoutReportInput | discussion_board_moderator_actionCreateOrConnectWithoutReportInput[]\n    upsert?: discussion_board_moderator_actionUpsertWithWhereUniqueWithoutReportInput | discussion_board_moderator_actionUpsertWithWhereUniqueWithoutReportInput[]\n    createMany?: discussion_board_moderator_actionCreateManyReportInputEnvelope\n    set?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    disconnect?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    delete?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    connect?: discussion_board_moderator_actionWhereUniqueInput | discussion_board_moderator_actionWhereUniqueInput[]\n    update?: discussion_board_moderator_actionUpdateWithWhereUniqueWithoutReportInput | discussion_board_moderator_actionUpdateWithWhereUniqueWithoutReportInput[]\n    updateMany?: discussion_board_moderator_actionUpdateManyWithWhereWithoutReportInput | discussion_board_moderator_actionUpdateManyWithWhereWithoutReportInput[]\n    deleteMany?: discussion_board_moderator_actionScalarWhereInput | discussion_board_moderator_actionScalarWhereInput[]\n  }\n\n  export type discussion_board_banUncheckedUpdateManyWithoutReportNestedInput = {\n    create?: XOR<discussion_board_banCreateWithoutReportInput, discussion_board_banUncheckedCreateWithoutReportInput> | discussion_board_banCreateWithoutReportInput[] | discussion_board_banUncheckedCreateWithoutReportInput[]\n    connectOrCreate?: discussion_board_banCreateOrConnectWithoutReportInput | discussion_board_banCreateOrConnectWithoutReportInput[]\n    upsert?: discussion_board_banUpsertWithWhereUniqueWithoutReportInput | discussion_board_banUpsertWithWhereUniqueWithoutReportInput[]\n    createMany?: discussion_board_banCreateManyReportInputEnvelope\n    set?: discussion_board_banWhereUniqueInput | discussion_board_banWhereUniqueInput[]\n    disconnect?: discussion_board_banWhereUniqueInput | discussion_board_banWhereUniqueInput[]\n    delete?: discussion_board_banWhereUniqueInput | discussion_board_banWhereUniqueInput[]\n    connect?: discussion_board_banWhereUniqueInput | discussion_board_banWhereUniqueInput[]\n    update?: discussion_board_banUpdateWithWhereUniqueWithoutReportInput | discussion_board_banUpdateWithWhereUniqueWithoutReportInput[]\n    updateMany?: discussion_board_banUpdateManyWithWhereWithoutReportInput | discussion_board_banUpdateManyWithWhereWithoutReportInput[]\n    deleteMany?: discussion_board_banScalarWhereInput | discussion_board_banScalarWhereInput[]\n  }\n\n  export type discussion_board_moderatorsCreateNestedOneWithoutDiscussion_board_moderator_actionInput = {\n    create?: XOR<discussion_board_moderatorsCreateWithoutDiscussion_board_moderator_actionInput, discussion_board_moderatorsUncheckedCreateWithoutDiscussion_board_moderator_actionInput>\n    connectOrCreate?: discussion_board_moderatorsCreateOrConnectWithoutDiscussion_board_moderator_actionInput\n    connect?: discussion_board_moderatorsWhereUniqueInput\n  }\n\n  export type discussion_board_usersCreateNestedOneWithoutDiscussion_board_moderator_actionInput = {\n    create?: XOR<discussion_board_usersCreateWithoutDiscussion_board_moderator_actionInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_moderator_actionInput>\n    connectOrCreate?: discussion_board_usersCreateOrConnectWithoutDiscussion_board_moderator_actionInput\n    connect?: discussion_board_usersWhereUniqueInput\n  }\n\n  export type discussion_board_reportCreateNestedOneWithoutDiscussion_board_moderator_actionInput = {\n    create?: XOR<discussion_board_reportCreateWithoutDiscussion_board_moderator_actionInput, discussion_board_reportUncheckedCreateWithoutDiscussion_board_moderator_actionInput>\n    connectOrCreate?: discussion_board_reportCreateOrConnectWithoutDiscussion_board_moderator_actionInput\n    connect?: discussion_board_reportWhereUniqueInput\n  }\n\n  export type discussion_board_threadCreateNestedOneWithoutDiscussion_board_moderator_actionInput = {\n    create?: XOR<discussion_board_threadCreateWithoutDiscussion_board_moderator_actionInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_moderator_actionInput>\n    connectOrCreate?: discussion_board_threadCreateOrConnectWithoutDiscussion_board_moderator_actionInput\n    connect?: discussion_board_threadWhereUniqueInput\n  }\n\n  export type discussion_board_postCreateNestedOneWithoutDiscussion_board_moderator_actionInput = {\n    create?: XOR<discussion_board_postCreateWithoutDiscussion_board_moderator_actionInput, discussion_board_postUncheckedCreateWithoutDiscussion_board_moderator_actionInput>\n    connectOrCreate?: discussion_board_postCreateOrConnectWithoutDiscussion_board_moderator_actionInput\n    connect?: discussion_board_postWhereUniqueInput\n  }\n\n  export type discussion_board_commentCreateNestedOneWithoutDiscussion_board_moderator_actionInput = {\n    create?: XOR<discussion_board_commentCreateWithoutDiscussion_board_moderator_actionInput, discussion_board_commentUncheckedCreateWithoutDiscussion_board_moderator_actionInput>\n    connectOrCreate?: discussion_board_commentCreateOrConnectWithoutDiscussion_board_moderator_actionInput\n    connect?: discussion_board_commentWhereUniqueInput\n  }\n\n  export type discussion_board_moderatorsUpdateOneRequiredWithoutDiscussion_board_moderator_actionNestedInput = {\n    create?: XOR<discussion_board_moderatorsCreateWithoutDiscussion_board_moderator_actionInput, discussion_board_moderatorsUncheckedCreateWithoutDiscussion_board_moderator_actionInput>\n    connectOrCreate?: discussion_board_moderatorsCreateOrConnectWithoutDiscussion_board_moderator_actionInput\n    upsert?: discussion_board_moderatorsUpsertWithoutDiscussion_board_moderator_actionInput\n    connect?: discussion_board_moderatorsWhereUniqueInput\n    update?: XOR<XOR<discussion_board_moderatorsUpdateToOneWithWhereWithoutDiscussion_board_moderator_actionInput, discussion_board_moderatorsUpdateWithoutDiscussion_board_moderator_actionInput>, discussion_board_moderatorsUncheckedUpdateWithoutDiscussion_board_moderator_actionInput>\n  }\n\n  export type discussion_board_usersUpdateOneWithoutDiscussion_board_moderator_actionNestedInput = {\n    create?: XOR<discussion_board_usersCreateWithoutDiscussion_board_moderator_actionInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_moderator_actionInput>\n    connectOrCreate?: discussion_board_usersCreateOrConnectWithoutDiscussion_board_moderator_actionInput\n    upsert?: discussion_board_usersUpsertWithoutDiscussion_board_moderator_actionInput\n    disconnect?: discussion_board_usersWhereInput | boolean\n    delete?: discussion_board_usersWhereInput | boolean\n    connect?: discussion_board_usersWhereUniqueInput\n    update?: XOR<XOR<discussion_board_usersUpdateToOneWithWhereWithoutDiscussion_board_moderator_actionInput, discussion_board_usersUpdateWithoutDiscussion_board_moderator_actionInput>, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_moderator_actionInput>\n  }\n\n  export type discussion_board_reportUpdateOneWithoutDiscussion_board_moderator_actionNestedInput = {\n    create?: XOR<discussion_board_reportCreateWithoutDiscussion_board_moderator_actionInput, discussion_board_reportUncheckedCreateWithoutDiscussion_board_moderator_actionInput>\n    connectOrCreate?: discussion_board_reportCreateOrConnectWithoutDiscussion_board_moderator_actionInput\n    upsert?: discussion_board_reportUpsertWithoutDiscussion_board_moderator_actionInput\n    disconnect?: discussion_board_reportWhereInput | boolean\n    delete?: discussion_board_reportWhereInput | boolean\n    connect?: discussion_board_reportWhereUniqueInput\n    update?: XOR<XOR<discussion_board_reportUpdateToOneWithWhereWithoutDiscussion_board_moderator_actionInput, discussion_board_reportUpdateWithoutDiscussion_board_moderator_actionInput>, discussion_board_reportUncheckedUpdateWithoutDiscussion_board_moderator_actionInput>\n  }\n\n  export type discussion_board_threadUpdateOneWithoutDiscussion_board_moderator_actionNestedInput = {\n    create?: XOR<discussion_board_threadCreateWithoutDiscussion_board_moderator_actionInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_moderator_actionInput>\n    connectOrCreate?: discussion_board_threadCreateOrConnectWithoutDiscussion_board_moderator_actionInput\n    upsert?: discussion_board_threadUpsertWithoutDiscussion_board_moderator_actionInput\n    disconnect?: discussion_board_threadWhereInput | boolean\n    delete?: discussion_board_threadWhereInput | boolean\n    connect?: discussion_board_threadWhereUniqueInput\n    update?: XOR<XOR<discussion_board_threadUpdateToOneWithWhereWithoutDiscussion_board_moderator_actionInput, discussion_board_threadUpdateWithoutDiscussion_board_moderator_actionInput>, discussion_board_threadUncheckedUpdateWithoutDiscussion_board_moderator_actionInput>\n  }\n\n  export type discussion_board_postUpdateOneWithoutDiscussion_board_moderator_actionNestedInput = {\n    create?: XOR<discussion_board_postCreateWithoutDiscussion_board_moderator_actionInput, discussion_board_postUncheckedCreateWithoutDiscussion_board_moderator_actionInput>\n    connectOrCreate?: discussion_board_postCreateOrConnectWithoutDiscussion_board_moderator_actionInput\n    upsert?: discussion_board_postUpsertWithoutDiscussion_board_moderator_actionInput\n    disconnect?: discussion_board_postWhereInput | boolean\n    delete?: discussion_board_postWhereInput | boolean\n    connect?: discussion_board_postWhereUniqueInput\n    update?: XOR<XOR<discussion_board_postUpdateToOneWithWhereWithoutDiscussion_board_moderator_actionInput, discussion_board_postUpdateWithoutDiscussion_board_moderator_actionInput>, discussion_board_postUncheckedUpdateWithoutDiscussion_board_moderator_actionInput>\n  }\n\n  export type discussion_board_commentUpdateOneWithoutDiscussion_board_moderator_actionNestedInput = {\n    create?: XOR<discussion_board_commentCreateWithoutDiscussion_board_moderator_actionInput, discussion_board_commentUncheckedCreateWithoutDiscussion_board_moderator_actionInput>\n    connectOrCreate?: discussion_board_commentCreateOrConnectWithoutDiscussion_board_moderator_actionInput\n    upsert?: discussion_board_commentUpsertWithoutDiscussion_board_moderator_actionInput\n    disconnect?: discussion_board_commentWhereInput | boolean\n    delete?: discussion_board_commentWhereInput | boolean\n    connect?: discussion_board_commentWhereUniqueInput\n    update?: XOR<XOR<discussion_board_commentUpdateToOneWithWhereWithoutDiscussion_board_moderator_actionInput, discussion_board_commentUpdateWithoutDiscussion_board_moderator_actionInput>, discussion_board_commentUncheckedUpdateWithoutDiscussion_board_moderator_actionInput>\n  }\n\n  export type discussion_board_usersCreateNestedOneWithoutDiscussion_board_audit_log_of_actor_idInput = {\n    create?: XOR<discussion_board_usersCreateWithoutDiscussion_board_audit_log_of_actor_idInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_audit_log_of_actor_idInput>\n    connectOrCreate?: discussion_board_usersCreateOrConnectWithoutDiscussion_board_audit_log_of_actor_idInput\n    connect?: discussion_board_usersWhereUniqueInput\n  }\n\n  export type discussion_board_usersCreateNestedOneWithoutDiscussion_board_audit_log_of_affected_user_idInput = {\n    create?: XOR<discussion_board_usersCreateWithoutDiscussion_board_audit_log_of_affected_user_idInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_audit_log_of_affected_user_idInput>\n    connectOrCreate?: discussion_board_usersCreateOrConnectWithoutDiscussion_board_audit_log_of_affected_user_idInput\n    connect?: discussion_board_usersWhereUniqueInput\n  }\n\n  export type discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_audit_log_of_actor_idNestedInput = {\n    create?: XOR<discussion_board_usersCreateWithoutDiscussion_board_audit_log_of_actor_idInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_audit_log_of_actor_idInput>\n    connectOrCreate?: discussion_board_usersCreateOrConnectWithoutDiscussion_board_audit_log_of_actor_idInput\n    upsert?: discussion_board_usersUpsertWithoutDiscussion_board_audit_log_of_actor_idInput\n    connect?: discussion_board_usersWhereUniqueInput\n    update?: XOR<XOR<discussion_board_usersUpdateToOneWithWhereWithoutDiscussion_board_audit_log_of_actor_idInput, discussion_board_usersUpdateWithoutDiscussion_board_audit_log_of_actor_idInput>, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_audit_log_of_actor_idInput>\n  }\n\n  export type discussion_board_usersUpdateOneWithoutDiscussion_board_audit_log_of_affected_user_idNestedInput = {\n    create?: XOR<discussion_board_usersCreateWithoutDiscussion_board_audit_log_of_affected_user_idInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_audit_log_of_affected_user_idInput>\n    connectOrCreate?: discussion_board_usersCreateOrConnectWithoutDiscussion_board_audit_log_of_affected_user_idInput\n    upsert?: discussion_board_usersUpsertWithoutDiscussion_board_audit_log_of_affected_user_idInput\n    disconnect?: discussion_board_usersWhereInput | boolean\n    delete?: discussion_board_usersWhereInput | boolean\n    connect?: discussion_board_usersWhereUniqueInput\n    update?: XOR<XOR<discussion_board_usersUpdateToOneWithWhereWithoutDiscussion_board_audit_log_of_affected_user_idInput, discussion_board_usersUpdateWithoutDiscussion_board_audit_log_of_affected_user_idInput>, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_audit_log_of_affected_user_idInput>\n  }\n\n  export type discussion_board_usersCreateNestedOneWithoutDiscussion_board_warningInput = {\n    create?: XOR<discussion_board_usersCreateWithoutDiscussion_board_warningInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_warningInput>\n    connectOrCreate?: discussion_board_usersCreateOrConnectWithoutDiscussion_board_warningInput\n    connect?: discussion_board_usersWhereUniqueInput\n  }\n\n  export type discussion_board_moderatorsCreateNestedOneWithoutDiscussion_board_warningInput = {\n    create?: XOR<discussion_board_moderatorsCreateWithoutDiscussion_board_warningInput, discussion_board_moderatorsUncheckedCreateWithoutDiscussion_board_warningInput>\n    connectOrCreate?: discussion_board_moderatorsCreateOrConnectWithoutDiscussion_board_warningInput\n    connect?: discussion_board_moderatorsWhereUniqueInput\n  }\n\n  export type discussion_board_threadCreateNestedOneWithoutDiscussion_board_warningInput = {\n    create?: XOR<discussion_board_threadCreateWithoutDiscussion_board_warningInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_warningInput>\n    connectOrCreate?: discussion_board_threadCreateOrConnectWithoutDiscussion_board_warningInput\n    connect?: discussion_board_threadWhereUniqueInput\n  }\n\n  export type discussion_board_postCreateNestedOneWithoutDiscussion_board_warningInput = {\n    create?: XOR<discussion_board_postCreateWithoutDiscussion_board_warningInput, discussion_board_postUncheckedCreateWithoutDiscussion_board_warningInput>\n    connectOrCreate?: discussion_board_postCreateOrConnectWithoutDiscussion_board_warningInput\n    connect?: discussion_board_postWhereUniqueInput\n  }\n\n  export type discussion_board_commentCreateNestedOneWithoutDiscussion_board_warningInput = {\n    create?: XOR<discussion_board_commentCreateWithoutDiscussion_board_warningInput, discussion_board_commentUncheckedCreateWithoutDiscussion_board_warningInput>\n    connectOrCreate?: discussion_board_commentCreateOrConnectWithoutDiscussion_board_warningInput\n    connect?: discussion_board_commentWhereUniqueInput\n  }\n\n  export type discussion_board_banCreateNestedManyWithoutWarningInput = {\n    create?: XOR<discussion_board_banCreateWithoutWarningInput, discussion_board_banUncheckedCreateWithoutWarningInput> | discussion_board_banCreateWithoutWarningInput[] | discussion_board_banUncheckedCreateWithoutWarningInput[]\n    connectOrCreate?: discussion_board_banCreateOrConnectWithoutWarningInput | discussion_board_banCreateOrConnectWithoutWarningInput[]\n    createMany?: discussion_board_banCreateManyWarningInputEnvelope\n    connect?: discussion_board_banWhereUniqueInput | discussion_board_banWhereUniqueInput[]\n  }\n\n  export type discussion_board_banUncheckedCreateNestedManyWithoutWarningInput = {\n    create?: XOR<discussion_board_banCreateWithoutWarningInput, discussion_board_banUncheckedCreateWithoutWarningInput> | discussion_board_banCreateWithoutWarningInput[] | discussion_board_banUncheckedCreateWithoutWarningInput[]\n    connectOrCreate?: discussion_board_banCreateOrConnectWithoutWarningInput | discussion_board_banCreateOrConnectWithoutWarningInput[]\n    createMany?: discussion_board_banCreateManyWarningInputEnvelope\n    connect?: discussion_board_banWhereUniqueInput | discussion_board_banWhereUniqueInput[]\n  }\n\n  export type discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_warningNestedInput = {\n    create?: XOR<discussion_board_usersCreateWithoutDiscussion_board_warningInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_warningInput>\n    connectOrCreate?: discussion_board_usersCreateOrConnectWithoutDiscussion_board_warningInput\n    upsert?: discussion_board_usersUpsertWithoutDiscussion_board_warningInput\n    connect?: discussion_board_usersWhereUniqueInput\n    update?: XOR<XOR<discussion_board_usersUpdateToOneWithWhereWithoutDiscussion_board_warningInput, discussion_board_usersUpdateWithoutDiscussion_board_warningInput>, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_warningInput>\n  }\n\n  export type discussion_board_moderatorsUpdateOneRequiredWithoutDiscussion_board_warningNestedInput = {\n    create?: XOR<discussion_board_moderatorsCreateWithoutDiscussion_board_warningInput, discussion_board_moderatorsUncheckedCreateWithoutDiscussion_board_warningInput>\n    connectOrCreate?: discussion_board_moderatorsCreateOrConnectWithoutDiscussion_board_warningInput\n    upsert?: discussion_board_moderatorsUpsertWithoutDiscussion_board_warningInput\n    connect?: discussion_board_moderatorsWhereUniqueInput\n    update?: XOR<XOR<discussion_board_moderatorsUpdateToOneWithWhereWithoutDiscussion_board_warningInput, discussion_board_moderatorsUpdateWithoutDiscussion_board_warningInput>, discussion_board_moderatorsUncheckedUpdateWithoutDiscussion_board_warningInput>\n  }\n\n  export type discussion_board_threadUpdateOneWithoutDiscussion_board_warningNestedInput = {\n    create?: XOR<discussion_board_threadCreateWithoutDiscussion_board_warningInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_warningInput>\n    connectOrCreate?: discussion_board_threadCreateOrConnectWithoutDiscussion_board_warningInput\n    upsert?: discussion_board_threadUpsertWithoutDiscussion_board_warningInput\n    disconnect?: discussion_board_threadWhereInput | boolean\n    delete?: discussion_board_threadWhereInput | boolean\n    connect?: discussion_board_threadWhereUniqueInput\n    update?: XOR<XOR<discussion_board_threadUpdateToOneWithWhereWithoutDiscussion_board_warningInput, discussion_board_threadUpdateWithoutDiscussion_board_warningInput>, discussion_board_threadUncheckedUpdateWithoutDiscussion_board_warningInput>\n  }\n\n  export type discussion_board_postUpdateOneWithoutDiscussion_board_warningNestedInput = {\n    create?: XOR<discussion_board_postCreateWithoutDiscussion_board_warningInput, discussion_board_postUncheckedCreateWithoutDiscussion_board_warningInput>\n    connectOrCreate?: discussion_board_postCreateOrConnectWithoutDiscussion_board_warningInput\n    upsert?: discussion_board_postUpsertWithoutDiscussion_board_warningInput\n    disconnect?: discussion_board_postWhereInput | boolean\n    delete?: discussion_board_postWhereInput | boolean\n    connect?: discussion_board_postWhereUniqueInput\n    update?: XOR<XOR<discussion_board_postUpdateToOneWithWhereWithoutDiscussion_board_warningInput, discussion_board_postUpdateWithoutDiscussion_board_warningInput>, discussion_board_postUncheckedUpdateWithoutDiscussion_board_warningInput>\n  }\n\n  export type discussion_board_commentUpdateOneWithoutDiscussion_board_warningNestedInput = {\n    create?: XOR<discussion_board_commentCreateWithoutDiscussion_board_warningInput, discussion_board_commentUncheckedCreateWithoutDiscussion_board_warningInput>\n    connectOrCreate?: discussion_board_commentCreateOrConnectWithoutDiscussion_board_warningInput\n    upsert?: discussion_board_commentUpsertWithoutDiscussion_board_warningInput\n    disconnect?: discussion_board_commentWhereInput | boolean\n    delete?: discussion_board_commentWhereInput | boolean\n    connect?: discussion_board_commentWhereUniqueInput\n    update?: XOR<XOR<discussion_board_commentUpdateToOneWithWhereWithoutDiscussion_board_warningInput, discussion_board_commentUpdateWithoutDiscussion_board_warningInput>, discussion_board_commentUncheckedUpdateWithoutDiscussion_board_warningInput>\n  }\n\n  export type discussion_board_banUpdateManyWithoutWarningNestedInput = {\n    create?: XOR<discussion_board_banCreateWithoutWarningInput, discussion_board_banUncheckedCreateWithoutWarningInput> | discussion_board_banCreateWithoutWarningInput[] | discussion_board_banUncheckedCreateWithoutWarningInput[]\n    connectOrCreate?: discussion_board_banCreateOrConnectWithoutWarningInput | discussion_board_banCreateOrConnectWithoutWarningInput[]\n    upsert?: discussion_board_banUpsertWithWhereUniqueWithoutWarningInput | discussion_board_banUpsertWithWhereUniqueWithoutWarningInput[]\n    createMany?: discussion_board_banCreateManyWarningInputEnvelope\n    set?: discussion_board_banWhereUniqueInput | discussion_board_banWhereUniqueInput[]\n    disconnect?: discussion_board_banWhereUniqueInput | discussion_board_banWhereUniqueInput[]\n    delete?: discussion_board_banWhereUniqueInput | discussion_board_banWhereUniqueInput[]\n    connect?: discussion_board_banWhereUniqueInput | discussion_board_banWhereUniqueInput[]\n    update?: discussion_board_banUpdateWithWhereUniqueWithoutWarningInput | discussion_board_banUpdateWithWhereUniqueWithoutWarningInput[]\n    updateMany?: discussion_board_banUpdateManyWithWhereWithoutWarningInput | discussion_board_banUpdateManyWithWhereWithoutWarningInput[]\n    deleteMany?: discussion_board_banScalarWhereInput | discussion_board_banScalarWhereInput[]\n  }\n\n  export type discussion_board_banUncheckedUpdateManyWithoutWarningNestedInput = {\n    create?: XOR<discussion_board_banCreateWithoutWarningInput, discussion_board_banUncheckedCreateWithoutWarningInput> | discussion_board_banCreateWithoutWarningInput[] | discussion_board_banUncheckedCreateWithoutWarningInput[]\n    connectOrCreate?: discussion_board_banCreateOrConnectWithoutWarningInput | discussion_board_banCreateOrConnectWithoutWarningInput[]\n    upsert?: discussion_board_banUpsertWithWhereUniqueWithoutWarningInput | discussion_board_banUpsertWithWhereUniqueWithoutWarningInput[]\n    createMany?: discussion_board_banCreateManyWarningInputEnvelope\n    set?: discussion_board_banWhereUniqueInput | discussion_board_banWhereUniqueInput[]\n    disconnect?: discussion_board_banWhereUniqueInput | discussion_board_banWhereUniqueInput[]\n    delete?: discussion_board_banWhereUniqueInput | discussion_board_banWhereUniqueInput[]\n    connect?: discussion_board_banWhereUniqueInput | discussion_board_banWhereUniqueInput[]\n    update?: discussion_board_banUpdateWithWhereUniqueWithoutWarningInput | discussion_board_banUpdateWithWhereUniqueWithoutWarningInput[]\n    updateMany?: discussion_board_banUpdateManyWithWhereWithoutWarningInput | discussion_board_banUpdateManyWithWhereWithoutWarningInput[]\n    deleteMany?: discussion_board_banScalarWhereInput | discussion_board_banScalarWhereInput[]\n  }\n\n  export type discussion_board_usersCreateNestedOneWithoutDiscussion_board_banInput = {\n    create?: XOR<discussion_board_usersCreateWithoutDiscussion_board_banInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_banInput>\n    connectOrCreate?: discussion_board_usersCreateOrConnectWithoutDiscussion_board_banInput\n    connect?: discussion_board_usersWhereUniqueInput\n  }\n\n  export type discussion_board_moderatorsCreateNestedOneWithoutDiscussion_board_banInput = {\n    create?: XOR<discussion_board_moderatorsCreateWithoutDiscussion_board_banInput, discussion_board_moderatorsUncheckedCreateWithoutDiscussion_board_banInput>\n    connectOrCreate?: discussion_board_moderatorsCreateOrConnectWithoutDiscussion_board_banInput\n    connect?: discussion_board_moderatorsWhereUniqueInput\n  }\n\n  export type discussion_board_warningCreateNestedOneWithoutDiscussion_board_banInput = {\n    create?: XOR<discussion_board_warningCreateWithoutDiscussion_board_banInput, discussion_board_warningUncheckedCreateWithoutDiscussion_board_banInput>\n    connectOrCreate?: discussion_board_warningCreateOrConnectWithoutDiscussion_board_banInput\n    connect?: discussion_board_warningWhereUniqueInput\n  }\n\n  export type discussion_board_reportCreateNestedOneWithoutDiscussion_board_banInput = {\n    create?: XOR<discussion_board_reportCreateWithoutDiscussion_board_banInput, discussion_board_reportUncheckedCreateWithoutDiscussion_board_banInput>\n    connectOrCreate?: discussion_board_reportCreateOrConnectWithoutDiscussion_board_banInput\n    connect?: discussion_board_reportWhereUniqueInput\n  }\n\n  export type discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_banNestedInput = {\n    create?: XOR<discussion_board_usersCreateWithoutDiscussion_board_banInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_banInput>\n    connectOrCreate?: discussion_board_usersCreateOrConnectWithoutDiscussion_board_banInput\n    upsert?: discussion_board_usersUpsertWithoutDiscussion_board_banInput\n    connect?: discussion_board_usersWhereUniqueInput\n    update?: XOR<XOR<discussion_board_usersUpdateToOneWithWhereWithoutDiscussion_board_banInput, discussion_board_usersUpdateWithoutDiscussion_board_banInput>, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_banInput>\n  }\n\n  export type discussion_board_moderatorsUpdateOneRequiredWithoutDiscussion_board_banNestedInput = {\n    create?: XOR<discussion_board_moderatorsCreateWithoutDiscussion_board_banInput, discussion_board_moderatorsUncheckedCreateWithoutDiscussion_board_banInput>\n    connectOrCreate?: discussion_board_moderatorsCreateOrConnectWithoutDiscussion_board_banInput\n    upsert?: discussion_board_moderatorsUpsertWithoutDiscussion_board_banInput\n    connect?: discussion_board_moderatorsWhereUniqueInput\n    update?: XOR<XOR<discussion_board_moderatorsUpdateToOneWithWhereWithoutDiscussion_board_banInput, discussion_board_moderatorsUpdateWithoutDiscussion_board_banInput>, discussion_board_moderatorsUncheckedUpdateWithoutDiscussion_board_banInput>\n  }\n\n  export type discussion_board_warningUpdateOneWithoutDiscussion_board_banNestedInput = {\n    create?: XOR<discussion_board_warningCreateWithoutDiscussion_board_banInput, discussion_board_warningUncheckedCreateWithoutDiscussion_board_banInput>\n    connectOrCreate?: discussion_board_warningCreateOrConnectWithoutDiscussion_board_banInput\n    upsert?: discussion_board_warningUpsertWithoutDiscussion_board_banInput\n    disconnect?: discussion_board_warningWhereInput | boolean\n    delete?: discussion_board_warningWhereInput | boolean\n    connect?: discussion_board_warningWhereUniqueInput\n    update?: XOR<XOR<discussion_board_warningUpdateToOneWithWhereWithoutDiscussion_board_banInput, discussion_board_warningUpdateWithoutDiscussion_board_banInput>, discussion_board_warningUncheckedUpdateWithoutDiscussion_board_banInput>\n  }\n\n  export type discussion_board_reportUpdateOneWithoutDiscussion_board_banNestedInput = {\n    create?: XOR<discussion_board_reportCreateWithoutDiscussion_board_banInput, discussion_board_reportUncheckedCreateWithoutDiscussion_board_banInput>\n    connectOrCreate?: discussion_board_reportCreateOrConnectWithoutDiscussion_board_banInput\n    upsert?: discussion_board_reportUpsertWithoutDiscussion_board_banInput\n    disconnect?: discussion_board_reportWhereInput | boolean\n    delete?: discussion_board_reportWhereInput | boolean\n    connect?: discussion_board_reportWhereUniqueInput\n    update?: XOR<XOR<discussion_board_reportUpdateToOneWithWhereWithoutDiscussion_board_banInput, discussion_board_reportUpdateWithoutDiscussion_board_banInput>, discussion_board_reportUncheckedUpdateWithoutDiscussion_board_banInput>\n  }\n\n  export type discussion_board_threadCreateNestedOneWithoutDiscussion_board_thread_statsInput = {\n    create?: XOR<discussion_board_threadCreateWithoutDiscussion_board_thread_statsInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_thread_statsInput>\n    connectOrCreate?: discussion_board_threadCreateOrConnectWithoutDiscussion_board_thread_statsInput\n    connect?: discussion_board_threadWhereUniqueInput\n  }\n\n  export type discussion_board_threadUpdateOneRequiredWithoutDiscussion_board_thread_statsNestedInput = {\n    create?: XOR<discussion_board_threadCreateWithoutDiscussion_board_thread_statsInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_thread_statsInput>\n    connectOrCreate?: discussion_board_threadCreateOrConnectWithoutDiscussion_board_thread_statsInput\n    upsert?: discussion_board_threadUpsertWithoutDiscussion_board_thread_statsInput\n    connect?: discussion_board_threadWhereUniqueInput\n    update?: XOR<XOR<discussion_board_threadUpdateToOneWithWhereWithoutDiscussion_board_thread_statsInput, discussion_board_threadUpdateWithoutDiscussion_board_thread_statsInput>, discussion_board_threadUncheckedUpdateWithoutDiscussion_board_thread_statsInput>\n  }\n\n  export type discussion_board_usersCreateNestedOneWithoutDiscussion_board_user_activityInput = {\n    create?: XOR<discussion_board_usersCreateWithoutDiscussion_board_user_activityInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_user_activityInput>\n    connectOrCreate?: discussion_board_usersCreateOrConnectWithoutDiscussion_board_user_activityInput\n    connect?: discussion_board_usersWhereUniqueInput\n  }\n\n  export type discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_user_activityNestedInput = {\n    create?: XOR<discussion_board_usersCreateWithoutDiscussion_board_user_activityInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_user_activityInput>\n    connectOrCreate?: discussion_board_usersCreateOrConnectWithoutDiscussion_board_user_activityInput\n    upsert?: discussion_board_usersUpsertWithoutDiscussion_board_user_activityInput\n    connect?: discussion_board_usersWhereUniqueInput\n    update?: XOR<XOR<discussion_board_usersUpdateToOneWithWhereWithoutDiscussion_board_user_activityInput, discussion_board_usersUpdateWithoutDiscussion_board_user_activityInput>, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_user_activityInput>\n  }\n\n  export type discussion_board_moderatorsCreateNestedOneWithoutDiscussion_board_content_abuse_metricInput = {\n    create?: XOR<discussion_board_moderatorsCreateWithoutDiscussion_board_content_abuse_metricInput, discussion_board_moderatorsUncheckedCreateWithoutDiscussion_board_content_abuse_metricInput>\n    connectOrCreate?: discussion_board_moderatorsCreateOrConnectWithoutDiscussion_board_content_abuse_metricInput\n    connect?: discussion_board_moderatorsWhereUniqueInput\n  }\n\n  export type discussion_board_moderatorsUpdateOneWithoutDiscussion_board_content_abuse_metricNestedInput = {\n    create?: XOR<discussion_board_moderatorsCreateWithoutDiscussion_board_content_abuse_metricInput, discussion_board_moderatorsUncheckedCreateWithoutDiscussion_board_content_abuse_metricInput>\n    connectOrCreate?: discussion_board_moderatorsCreateOrConnectWithoutDiscussion_board_content_abuse_metricInput\n    upsert?: discussion_board_moderatorsUpsertWithoutDiscussion_board_content_abuse_metricInput\n    disconnect?: discussion_board_moderatorsWhereInput | boolean\n    delete?: discussion_board_moderatorsWhereInput | boolean\n    connect?: discussion_board_moderatorsWhereUniqueInput\n    update?: XOR<XOR<discussion_board_moderatorsUpdateToOneWithWhereWithoutDiscussion_board_content_abuse_metricInput, discussion_board_moderatorsUpdateWithoutDiscussion_board_content_abuse_metricInput>, discussion_board_moderatorsUncheckedUpdateWithoutDiscussion_board_content_abuse_metricInput>\n  }\n\n  export type NestedUuidFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedUuidFilter<$PrismaModel> | string\n  }\n\n  export type NestedStringFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedStringFilter<$PrismaModel> | string\n  }\n\n  export type NestedBoolFilter<$PrismaModel = never> = {\n    equals?: boolean | BooleanFieldRefInput<$PrismaModel>\n    not?: NestedBoolFilter<$PrismaModel> | boolean\n  }\n\n  export type NestedDateTimeFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeFilter<$PrismaModel> | Date | string\n  }\n\n  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null\n  }\n\n  export type NestedUuidWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedStringFilter<$PrismaModel>\n    _max?: NestedStringFilter<$PrismaModel>\n  }\n\n  export type NestedIntFilter<$PrismaModel = never> = {\n    equals?: number | IntFieldRefInput<$PrismaModel>\n    in?: number[] | ListIntFieldRefInput<$PrismaModel>\n    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>\n    lt?: number | IntFieldRefInput<$PrismaModel>\n    lte?: number | IntFieldRefInput<$PrismaModel>\n    gt?: number | IntFieldRefInput<$PrismaModel>\n    gte?: number | IntFieldRefInput<$PrismaModel>\n    not?: NestedIntFilter<$PrismaModel> | number\n  }\n\n  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedStringFilter<$PrismaModel>\n    _max?: NestedStringFilter<$PrismaModel>\n  }\n\n  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: boolean | BooleanFieldRefInput<$PrismaModel>\n    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedBoolFilter<$PrismaModel>\n    _max?: NestedBoolFilter<$PrismaModel>\n  }\n\n  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedDateTimeFilter<$PrismaModel>\n    _max?: NestedDateTimeFilter<$PrismaModel>\n  }\n\n  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null\n    _count?: NestedIntNullableFilter<$PrismaModel>\n    _min?: NestedDateTimeNullableFilter<$PrismaModel>\n    _max?: NestedDateTimeNullableFilter<$PrismaModel>\n  }\n\n  export type NestedIntNullableFilter<$PrismaModel = never> = {\n    equals?: number | IntFieldRefInput<$PrismaModel> | null\n    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null\n    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null\n    lt?: number | IntFieldRefInput<$PrismaModel>\n    lte?: number | IntFieldRefInput<$PrismaModel>\n    gt?: number | IntFieldRefInput<$PrismaModel>\n    gte?: number | IntFieldRefInput<$PrismaModel>\n    not?: NestedIntNullableFilter<$PrismaModel> | number | null\n  }\n\n  export type NestedStringNullableFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedStringNullableFilter<$PrismaModel> | string | null\n  }\n\n  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null\n    _count?: NestedIntNullableFilter<$PrismaModel>\n    _min?: NestedStringNullableFilter<$PrismaModel>\n    _max?: NestedStringNullableFilter<$PrismaModel>\n  }\n\n  export type NestedUuidNullableFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedUuidNullableFilter<$PrismaModel> | string | null\n  }\n\n  export type NestedUuidNullableWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null\n    _count?: NestedIntNullableFilter<$PrismaModel>\n    _min?: NestedStringNullableFilter<$PrismaModel>\n    _max?: NestedStringNullableFilter<$PrismaModel>\n  }\n\n  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: number | IntFieldRefInput<$PrismaModel>\n    in?: number[] | ListIntFieldRefInput<$PrismaModel>\n    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>\n    lt?: number | IntFieldRefInput<$PrismaModel>\n    lte?: number | IntFieldRefInput<$PrismaModel>\n    gt?: number | IntFieldRefInput<$PrismaModel>\n    gte?: number | IntFieldRefInput<$PrismaModel>\n    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number\n    _count?: NestedIntFilter<$PrismaModel>\n    _avg?: NestedFloatFilter<$PrismaModel>\n    _sum?: NestedIntFilter<$PrismaModel>\n    _min?: NestedIntFilter<$PrismaModel>\n    _max?: NestedIntFilter<$PrismaModel>\n  }\n\n  export type NestedFloatFilter<$PrismaModel = never> = {\n    equals?: number | FloatFieldRefInput<$PrismaModel>\n    in?: number[] | ListFloatFieldRefInput<$PrismaModel>\n    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>\n    lt?: number | FloatFieldRefInput<$PrismaModel>\n    lte?: number | FloatFieldRefInput<$PrismaModel>\n    gt?: number | FloatFieldRefInput<$PrismaModel>\n    gte?: number | FloatFieldRefInput<$PrismaModel>\n    not?: NestedFloatFilter<$PrismaModel> | number\n  }\n\n  export type discussion_board_moderatorsCreateWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput = {\n    id: string\n    is_active: boolean\n    assigned_at: Date | string\n    revoked_at?: Date | string | null\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutModeratorInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutModeratorInput\n    discussion_board_ban?: discussion_board_banCreateNestedManyWithoutModeratorInput\n    discussion_board_content_abuse_metric?: discussion_board_content_abuse_metricCreateNestedManyWithoutDiscussion_board_moderatorInput\n  }\n\n  export type discussion_board_moderatorsUncheckedCreateWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput = {\n    id: string\n    is_active: boolean\n    assigned_at: Date | string\n    revoked_at?: Date | string | null\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutModeratorInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutModeratorInput\n    discussion_board_ban?: discussion_board_banUncheckedCreateNestedManyWithoutModeratorInput\n    discussion_board_content_abuse_metric?: discussion_board_content_abuse_metricUncheckedCreateNestedManyWithoutDiscussion_board_moderatorInput\n  }\n\n  export type discussion_board_moderatorsCreateOrConnectWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput = {\n    where: discussion_board_moderatorsWhereUniqueInput\n    create: XOR<discussion_board_moderatorsCreateWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput, discussion_board_moderatorsUncheckedCreateWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput>\n  }\n\n  export type discussion_board_adminsCreateWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput = {\n    id: string\n    is_active: boolean\n    assigned_at: Date | string\n    revoked_at?: Date | string | null\n  }\n\n  export type discussion_board_adminsUncheckedCreateWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput = {\n    id: string\n    is_active: boolean\n    assigned_at: Date | string\n    revoked_at?: Date | string | null\n  }\n\n  export type discussion_board_adminsCreateOrConnectWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput = {\n    where: discussion_board_adminsWhereUniqueInput\n    create: XOR<discussion_board_adminsCreateWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput, discussion_board_adminsUncheckedCreateWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput>\n  }\n\n  export type discussion_board_user_profilesCreateWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput = {\n    id: string\n    display_name?: string | null\n    avatar_url?: string | null\n    bio?: string | null\n    badges?: string | null\n  }\n\n  export type discussion_board_user_profilesUncheckedCreateWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput = {\n    id: string\n    display_name?: string | null\n    avatar_url?: string | null\n    bio?: string | null\n    badges?: string | null\n  }\n\n  export type discussion_board_user_profilesCreateOrConnectWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput = {\n    where: discussion_board_user_profilesWhereUniqueInput\n    create: XOR<discussion_board_user_profilesCreateWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput, discussion_board_user_profilesUncheckedCreateWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput>\n  }\n\n  export type discussion_board_user_settingsCreateWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput = {\n    id: string\n    notification_email: boolean\n    notification_in_app: boolean\n    accessibility_mode?: string | null\n    display_density?: string | null\n  }\n\n  export type discussion_board_user_settingsUncheckedCreateWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput = {\n    id: string\n    notification_email: boolean\n    notification_in_app: boolean\n    accessibility_mode?: string | null\n    display_density?: string | null\n  }\n\n  export type discussion_board_user_settingsCreateOrConnectWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput = {\n    where: discussion_board_user_settingsWhereUniqueInput\n    create: XOR<discussion_board_user_settingsCreateWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput, discussion_board_user_settingsUncheckedCreateWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput>\n  }\n\n  export type discussion_board_threadCreateWithoutCreator_userInput = {\n    id: string\n    title: string\n    body: string\n    is_locked: boolean\n    is_pinned: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    category: discussion_board_thread_categoryCreateNestedOneWithoutDiscussion_board_threadInput\n    discussion_board_post?: discussion_board_postCreateNestedManyWithoutThreadInput\n    discussion_board_thread_tag?: discussion_board_thread_tagCreateNestedManyWithoutThreadInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityCreateNestedOneWithoutThreadInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutThreadInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutThreadInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutThreadInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutThreadInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutThreadInput\n    discussion_board_report?: discussion_board_reportCreateNestedManyWithoutThreadInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutThreadInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutThreadInput\n    discussion_board_thread_stats?: discussion_board_thread_statsCreateNestedOneWithoutDiscussion_board_threadInput\n  }\n\n  export type discussion_board_threadUncheckedCreateWithoutCreator_userInput = {\n    id: string\n    category_id: string\n    title: string\n    body: string\n    is_locked: boolean\n    is_pinned: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_post?: discussion_board_postUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_thread_tag?: discussion_board_thread_tagUncheckedCreateNestedManyWithoutThreadInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUncheckedCreateNestedOneWithoutThreadInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_report?: discussion_board_reportUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUncheckedCreateNestedOneWithoutDiscussion_board_threadInput\n  }\n\n  export type discussion_board_threadCreateOrConnectWithoutCreator_userInput = {\n    where: discussion_board_threadWhereUniqueInput\n    create: XOR<discussion_board_threadCreateWithoutCreator_userInput, discussion_board_threadUncheckedCreateWithoutCreator_userInput>\n  }\n\n  export type discussion_board_threadCreateManyCreator_userInputEnvelope = {\n    data: discussion_board_threadCreateManyCreator_userInput | discussion_board_threadCreateManyCreator_userInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_postCreateWithoutAuthor_userInput = {\n    id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    thread: discussion_board_threadCreateNestedOneWithoutDiscussion_board_postInput\n    parent_post?: discussion_board_postCreateNestedOneWithoutRecursiveInput\n    recursive?: discussion_board_postCreateNestedManyWithoutParent_postInput\n    discussion_board_comment?: discussion_board_commentCreateNestedManyWithoutPostInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutPostInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutPostInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutPostInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutPostInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutPostInput\n    discussion_board_report?: discussion_board_reportCreateNestedManyWithoutPostInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutPostInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutPostInput\n  }\n\n  export type discussion_board_postUncheckedCreateWithoutAuthor_userInput = {\n    id: string\n    thread_id: string\n    parent_post_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    recursive?: discussion_board_postUncheckedCreateNestedManyWithoutParent_postInput\n    discussion_board_comment?: discussion_board_commentUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_report?: discussion_board_reportUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutPostInput\n  }\n\n  export type discussion_board_postCreateOrConnectWithoutAuthor_userInput = {\n    where: discussion_board_postWhereUniqueInput\n    create: XOR<discussion_board_postCreateWithoutAuthor_userInput, discussion_board_postUncheckedCreateWithoutAuthor_userInput>\n  }\n\n  export type discussion_board_postCreateManyAuthor_userInputEnvelope = {\n    data: discussion_board_postCreateManyAuthor_userInput | discussion_board_postCreateManyAuthor_userInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_commentCreateWithoutAuthor_userInput = {\n    id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    post: discussion_board_postCreateNestedOneWithoutDiscussion_board_commentInput\n    parent_comment?: discussion_board_commentCreateNestedOneWithoutRecursiveInput\n    recursive?: discussion_board_commentCreateNestedManyWithoutParent_commentInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutCommentInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutCommentInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutCommentInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutCommentInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutCommentInput\n    discussion_board_report?: discussion_board_reportCreateNestedManyWithoutCommentInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutCommentInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutCommentInput\n  }\n\n  export type discussion_board_commentUncheckedCreateWithoutAuthor_userInput = {\n    id: string\n    post_id: string\n    parent_comment_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    recursive?: discussion_board_commentUncheckedCreateNestedManyWithoutParent_commentInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_report?: discussion_board_reportUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutCommentInput\n  }\n\n  export type discussion_board_commentCreateOrConnectWithoutAuthor_userInput = {\n    where: discussion_board_commentWhereUniqueInput\n    create: XOR<discussion_board_commentCreateWithoutAuthor_userInput, discussion_board_commentUncheckedCreateWithoutAuthor_userInput>\n  }\n\n  export type discussion_board_commentCreateManyAuthor_userInputEnvelope = {\n    data: discussion_board_commentCreateManyAuthor_userInput | discussion_board_commentCreateManyAuthor_userInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_voteCreateWithoutUserInput = {\n    id: string\n    direction: string\n    created_at: Date | string\n    thread?: discussion_board_threadCreateNestedOneWithoutDiscussion_board_voteInput\n    post?: discussion_board_postCreateNestedOneWithoutDiscussion_board_voteInput\n    comment?: discussion_board_commentCreateNestedOneWithoutDiscussion_board_voteInput\n  }\n\n  export type discussion_board_voteUncheckedCreateWithoutUserInput = {\n    id: string\n    thread_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    direction: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_voteCreateOrConnectWithoutUserInput = {\n    where: discussion_board_voteWhereUniqueInput\n    create: XOR<discussion_board_voteCreateWithoutUserInput, discussion_board_voteUncheckedCreateWithoutUserInput>\n  }\n\n  export type discussion_board_voteCreateManyUserInputEnvelope = {\n    data: discussion_board_voteCreateManyUserInput | discussion_board_voteCreateManyUserInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_reactionCreateWithoutUserInput = {\n    id: string\n    reaction_type: string\n    created_at: Date | string\n    thread?: discussion_board_threadCreateNestedOneWithoutDiscussion_board_reactionInput\n    post?: discussion_board_postCreateNestedOneWithoutDiscussion_board_reactionInput\n    comment?: discussion_board_commentCreateNestedOneWithoutDiscussion_board_reactionInput\n  }\n\n  export type discussion_board_reactionUncheckedCreateWithoutUserInput = {\n    id: string\n    thread_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    reaction_type: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_reactionCreateOrConnectWithoutUserInput = {\n    where: discussion_board_reactionWhereUniqueInput\n    create: XOR<discussion_board_reactionCreateWithoutUserInput, discussion_board_reactionUncheckedCreateWithoutUserInput>\n  }\n\n  export type discussion_board_reactionCreateManyUserInputEnvelope = {\n    data: discussion_board_reactionCreateManyUserInput | discussion_board_reactionCreateManyUserInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_bookmarkCreateWithoutUserInput = {\n    id: string\n    created_at: Date | string\n    thread?: discussion_board_threadCreateNestedOneWithoutDiscussion_board_bookmarkInput\n    post?: discussion_board_postCreateNestedOneWithoutDiscussion_board_bookmarkInput\n    comment?: discussion_board_commentCreateNestedOneWithoutDiscussion_board_bookmarkInput\n  }\n\n  export type discussion_board_bookmarkUncheckedCreateWithoutUserInput = {\n    id: string\n    thread_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    created_at: Date | string\n  }\n\n  export type discussion_board_bookmarkCreateOrConnectWithoutUserInput = {\n    where: discussion_board_bookmarkWhereUniqueInput\n    create: XOR<discussion_board_bookmarkCreateWithoutUserInput, discussion_board_bookmarkUncheckedCreateWithoutUserInput>\n  }\n\n  export type discussion_board_bookmarkCreateManyUserInputEnvelope = {\n    data: discussion_board_bookmarkCreateManyUserInput | discussion_board_bookmarkCreateManyUserInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_notificationCreateWithoutRecipient_userInput = {\n    id: string\n    notification_type: string\n    is_read: boolean\n    channel: string\n    created_at: Date | string\n    delivered_at?: Date | string | null\n    thread?: discussion_board_threadCreateNestedOneWithoutDiscussion_board_notificationInput\n    post?: discussion_board_postCreateNestedOneWithoutDiscussion_board_notificationInput\n    comment?: discussion_board_commentCreateNestedOneWithoutDiscussion_board_notificationInput\n  }\n\n  export type discussion_board_notificationUncheckedCreateWithoutRecipient_userInput = {\n    id: string\n    thread_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    notification_type: string\n    is_read: boolean\n    channel: string\n    created_at: Date | string\n    delivered_at?: Date | string | null\n  }\n\n  export type discussion_board_notificationCreateOrConnectWithoutRecipient_userInput = {\n    where: discussion_board_notificationWhereUniqueInput\n    create: XOR<discussion_board_notificationCreateWithoutRecipient_userInput, discussion_board_notificationUncheckedCreateWithoutRecipient_userInput>\n  }\n\n  export type discussion_board_notificationCreateManyRecipient_userInputEnvelope = {\n    data: discussion_board_notificationCreateManyRecipient_userInput | discussion_board_notificationCreateManyRecipient_userInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_subscriptionCreateWithoutUserInput = {\n    id: string\n    channel: string\n    created_at: Date | string\n    expires_at?: Date | string | null\n    thread?: discussion_board_threadCreateNestedOneWithoutDiscussion_board_subscriptionInput\n    tag?: discussion_board_thread_tagCreateNestedOneWithoutDiscussion_board_subscriptionInput\n    post?: discussion_board_postCreateNestedOneWithoutDiscussion_board_subscriptionInput\n    comment?: discussion_board_commentCreateNestedOneWithoutDiscussion_board_subscriptionInput\n  }\n\n  export type discussion_board_subscriptionUncheckedCreateWithoutUserInput = {\n    id: string\n    thread_id?: string | null\n    tag_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    channel: string\n    created_at: Date | string\n    expires_at?: Date | string | null\n  }\n\n  export type discussion_board_subscriptionCreateOrConnectWithoutUserInput = {\n    where: discussion_board_subscriptionWhereUniqueInput\n    create: XOR<discussion_board_subscriptionCreateWithoutUserInput, discussion_board_subscriptionUncheckedCreateWithoutUserInput>\n  }\n\n  export type discussion_board_subscriptionCreateManyUserInputEnvelope = {\n    data: discussion_board_subscriptionCreateManyUserInput | discussion_board_subscriptionCreateManyUserInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_reportCreateWithoutReported_userInput = {\n    id: string\n    status: string\n    category: string\n    submitted_at: Date | string\n    resolved_at?: Date | string | null\n    details: string\n    reporting_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_report_of_reporting_user_idInput\n    thread?: discussion_board_threadCreateNestedOneWithoutDiscussion_board_reportInput\n    post?: discussion_board_postCreateNestedOneWithoutDiscussion_board_reportInput\n    comment?: discussion_board_commentCreateNestedOneWithoutDiscussion_board_reportInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutReportInput\n    discussion_board_ban?: discussion_board_banCreateNestedManyWithoutReportInput\n  }\n\n  export type discussion_board_reportUncheckedCreateWithoutReported_userInput = {\n    id: string\n    reporting_user_id: string\n    thread_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    status: string\n    category: string\n    submitted_at: Date | string\n    resolved_at?: Date | string | null\n    details: string\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutReportInput\n    discussion_board_ban?: discussion_board_banUncheckedCreateNestedManyWithoutReportInput\n  }\n\n  export type discussion_board_reportCreateOrConnectWithoutReported_userInput = {\n    where: discussion_board_reportWhereUniqueInput\n    create: XOR<discussion_board_reportCreateWithoutReported_userInput, discussion_board_reportUncheckedCreateWithoutReported_userInput>\n  }\n\n  export type discussion_board_reportCreateManyReported_userInputEnvelope = {\n    data: discussion_board_reportCreateManyReported_userInput | discussion_board_reportCreateManyReported_userInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_reportCreateWithoutReporting_userInput = {\n    id: string\n    status: string\n    category: string\n    submitted_at: Date | string\n    resolved_at?: Date | string | null\n    details: string\n    reported_user?: discussion_board_usersCreateNestedOneWithoutDiscussion_board_report_of_reported_user_idInput\n    thread?: discussion_board_threadCreateNestedOneWithoutDiscussion_board_reportInput\n    post?: discussion_board_postCreateNestedOneWithoutDiscussion_board_reportInput\n    comment?: discussion_board_commentCreateNestedOneWithoutDiscussion_board_reportInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutReportInput\n    discussion_board_ban?: discussion_board_banCreateNestedManyWithoutReportInput\n  }\n\n  export type discussion_board_reportUncheckedCreateWithoutReporting_userInput = {\n    id: string\n    reported_user_id?: string | null\n    thread_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    status: string\n    category: string\n    submitted_at: Date | string\n    resolved_at?: Date | string | null\n    details: string\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutReportInput\n    discussion_board_ban?: discussion_board_banUncheckedCreateNestedManyWithoutReportInput\n  }\n\n  export type discussion_board_reportCreateOrConnectWithoutReporting_userInput = {\n    where: discussion_board_reportWhereUniqueInput\n    create: XOR<discussion_board_reportCreateWithoutReporting_userInput, discussion_board_reportUncheckedCreateWithoutReporting_userInput>\n  }\n\n  export type discussion_board_reportCreateManyReporting_userInputEnvelope = {\n    data: discussion_board_reportCreateManyReporting_userInput | discussion_board_reportCreateManyReporting_userInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_moderator_actionCreateWithoutUserInput = {\n    id: string\n    action_type: string\n    reason: string\n    created_at: Date | string\n    moderator: discussion_board_moderatorsCreateNestedOneWithoutDiscussion_board_moderator_actionInput\n    report?: discussion_board_reportCreateNestedOneWithoutDiscussion_board_moderator_actionInput\n    thread?: discussion_board_threadCreateNestedOneWithoutDiscussion_board_moderator_actionInput\n    post?: discussion_board_postCreateNestedOneWithoutDiscussion_board_moderator_actionInput\n    comment?: discussion_board_commentCreateNestedOneWithoutDiscussion_board_moderator_actionInput\n  }\n\n  export type discussion_board_moderator_actionUncheckedCreateWithoutUserInput = {\n    id: string\n    moderator_id: string\n    report_id?: string | null\n    thread_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    action_type: string\n    reason: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_moderator_actionCreateOrConnectWithoutUserInput = {\n    where: discussion_board_moderator_actionWhereUniqueInput\n    create: XOR<discussion_board_moderator_actionCreateWithoutUserInput, discussion_board_moderator_actionUncheckedCreateWithoutUserInput>\n  }\n\n  export type discussion_board_moderator_actionCreateManyUserInputEnvelope = {\n    data: discussion_board_moderator_actionCreateManyUserInput | discussion_board_moderator_actionCreateManyUserInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_audit_logCreateWithoutActorInput = {\n    id: string\n    entity_type: string\n    entity_id: string\n    action: string\n    details: string\n    created_at: Date | string\n    affected_user?: discussion_board_usersCreateNestedOneWithoutDiscussion_board_audit_log_of_affected_user_idInput\n  }\n\n  export type discussion_board_audit_logUncheckedCreateWithoutActorInput = {\n    id: string\n    affected_user_id?: string | null\n    entity_type: string\n    entity_id: string\n    action: string\n    details: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_audit_logCreateOrConnectWithoutActorInput = {\n    where: discussion_board_audit_logWhereUniqueInput\n    create: XOR<discussion_board_audit_logCreateWithoutActorInput, discussion_board_audit_logUncheckedCreateWithoutActorInput>\n  }\n\n  export type discussion_board_audit_logCreateManyActorInputEnvelope = {\n    data: discussion_board_audit_logCreateManyActorInput | discussion_board_audit_logCreateManyActorInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_audit_logCreateWithoutAffected_userInput = {\n    id: string\n    entity_type: string\n    entity_id: string\n    action: string\n    details: string\n    created_at: Date | string\n    actor: discussion_board_usersCreateNestedOneWithoutDiscussion_board_audit_log_of_actor_idInput\n  }\n\n  export type discussion_board_audit_logUncheckedCreateWithoutAffected_userInput = {\n    id: string\n    actor_id: string\n    entity_type: string\n    entity_id: string\n    action: string\n    details: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_audit_logCreateOrConnectWithoutAffected_userInput = {\n    where: discussion_board_audit_logWhereUniqueInput\n    create: XOR<discussion_board_audit_logCreateWithoutAffected_userInput, discussion_board_audit_logUncheckedCreateWithoutAffected_userInput>\n  }\n\n  export type discussion_board_audit_logCreateManyAffected_userInputEnvelope = {\n    data: discussion_board_audit_logCreateManyAffected_userInput | discussion_board_audit_logCreateManyAffected_userInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_warningCreateWithoutUserInput = {\n    id: string\n    reason: string\n    issued_at: Date | string\n    moderator: discussion_board_moderatorsCreateNestedOneWithoutDiscussion_board_warningInput\n    thread?: discussion_board_threadCreateNestedOneWithoutDiscussion_board_warningInput\n    post?: discussion_board_postCreateNestedOneWithoutDiscussion_board_warningInput\n    comment?: discussion_board_commentCreateNestedOneWithoutDiscussion_board_warningInput\n    discussion_board_ban?: discussion_board_banCreateNestedManyWithoutWarningInput\n  }\n\n  export type discussion_board_warningUncheckedCreateWithoutUserInput = {\n    id: string\n    moderator_id: string\n    thread_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    reason: string\n    issued_at: Date | string\n    discussion_board_ban?: discussion_board_banUncheckedCreateNestedManyWithoutWarningInput\n  }\n\n  export type discussion_board_warningCreateOrConnectWithoutUserInput = {\n    where: discussion_board_warningWhereUniqueInput\n    create: XOR<discussion_board_warningCreateWithoutUserInput, discussion_board_warningUncheckedCreateWithoutUserInput>\n  }\n\n  export type discussion_board_warningCreateManyUserInputEnvelope = {\n    data: discussion_board_warningCreateManyUserInput | discussion_board_warningCreateManyUserInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_banCreateWithoutUserInput = {\n    id: string\n    ban_type: string\n    reason: string\n    banned_at: Date | string\n    expires_at?: Date | string | null\n    moderator: discussion_board_moderatorsCreateNestedOneWithoutDiscussion_board_banInput\n    warning?: discussion_board_warningCreateNestedOneWithoutDiscussion_board_banInput\n    report?: discussion_board_reportCreateNestedOneWithoutDiscussion_board_banInput\n  }\n\n  export type discussion_board_banUncheckedCreateWithoutUserInput = {\n    id: string\n    moderator_id: string\n    warning_id?: string | null\n    report_id?: string | null\n    ban_type: string\n    reason: string\n    banned_at: Date | string\n    expires_at?: Date | string | null\n  }\n\n  export type discussion_board_banCreateOrConnectWithoutUserInput = {\n    where: discussion_board_banWhereUniqueInput\n    create: XOR<discussion_board_banCreateWithoutUserInput, discussion_board_banUncheckedCreateWithoutUserInput>\n  }\n\n  export type discussion_board_banCreateManyUserInputEnvelope = {\n    data: discussion_board_banCreateManyUserInput | discussion_board_banCreateManyUserInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_user_activityCreateWithoutDiscussion_board_userInput = {\n    id: string\n    threads_authored: number\n    posts_authored: number\n    comments_authored: number\n    upvotes_given: number\n    downvotes_given: number\n    reports_made: number\n    bookmarks_created: number\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussion_board_user_activityUncheckedCreateWithoutDiscussion_board_userInput = {\n    id: string\n    threads_authored: number\n    posts_authored: number\n    comments_authored: number\n    upvotes_given: number\n    downvotes_given: number\n    reports_made: number\n    bookmarks_created: number\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussion_board_user_activityCreateOrConnectWithoutDiscussion_board_userInput = {\n    where: discussion_board_user_activityWhereUniqueInput\n    create: XOR<discussion_board_user_activityCreateWithoutDiscussion_board_userInput, discussion_board_user_activityUncheckedCreateWithoutDiscussion_board_userInput>\n  }\n\n  export type discussion_board_moderatorsUpsertWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput = {\n    update: XOR<discussion_board_moderatorsUpdateWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput, discussion_board_moderatorsUncheckedUpdateWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput>\n    create: XOR<discussion_board_moderatorsCreateWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput, discussion_board_moderatorsUncheckedCreateWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput>\n    where?: discussion_board_moderatorsWhereInput\n  }\n\n  export type discussion_board_moderatorsUpdateToOneWithWhereWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput = {\n    where?: discussion_board_moderatorsWhereInput\n    data: XOR<discussion_board_moderatorsUpdateWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput, discussion_board_moderatorsUncheckedUpdateWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput>\n  }\n\n  export type discussion_board_moderatorsUpdateWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutModeratorNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutModeratorNestedInput\n    discussion_board_ban?: discussion_board_banUpdateManyWithoutModeratorNestedInput\n    discussion_board_content_abuse_metric?: discussion_board_content_abuse_metricUpdateManyWithoutDiscussion_board_moderatorNestedInput\n  }\n\n  export type discussion_board_moderatorsUncheckedUpdateWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutModeratorNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutModeratorNestedInput\n    discussion_board_ban?: discussion_board_banUncheckedUpdateManyWithoutModeratorNestedInput\n    discussion_board_content_abuse_metric?: discussion_board_content_abuse_metricUncheckedUpdateManyWithoutDiscussion_board_moderatorNestedInput\n  }\n\n  export type discussion_board_adminsUpsertWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput = {\n    update: XOR<discussion_board_adminsUpdateWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput, discussion_board_adminsUncheckedUpdateWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput>\n    create: XOR<discussion_board_adminsCreateWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput, discussion_board_adminsUncheckedCreateWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput>\n    where?: discussion_board_adminsWhereInput\n  }\n\n  export type discussion_board_adminsUpdateToOneWithWhereWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput = {\n    where?: discussion_board_adminsWhereInput\n    data: XOR<discussion_board_adminsUpdateWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput, discussion_board_adminsUncheckedUpdateWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput>\n  }\n\n  export type discussion_board_adminsUpdateWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_adminsUncheckedUpdateWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_user_profilesUpsertWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput = {\n    update: XOR<discussion_board_user_profilesUpdateWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput, discussion_board_user_profilesUncheckedUpdateWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput>\n    create: XOR<discussion_board_user_profilesCreateWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput, discussion_board_user_profilesUncheckedCreateWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput>\n    where?: discussion_board_user_profilesWhereInput\n  }\n\n  export type discussion_board_user_profilesUpdateToOneWithWhereWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput = {\n    where?: discussion_board_user_profilesWhereInput\n    data: XOR<discussion_board_user_profilesUpdateWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput, discussion_board_user_profilesUncheckedUpdateWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput>\n  }\n\n  export type discussion_board_user_profilesUpdateWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    display_name?: NullableStringFieldUpdateOperationsInput | string | null\n    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null\n    bio?: NullableStringFieldUpdateOperationsInput | string | null\n    badges?: NullableStringFieldUpdateOperationsInput | string | null\n  }\n\n  export type discussion_board_user_profilesUncheckedUpdateWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    display_name?: NullableStringFieldUpdateOperationsInput | string | null\n    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null\n    bio?: NullableStringFieldUpdateOperationsInput | string | null\n    badges?: NullableStringFieldUpdateOperationsInput | string | null\n  }\n\n  export type discussion_board_user_settingsUpsertWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput = {\n    update: XOR<discussion_board_user_settingsUpdateWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput, discussion_board_user_settingsUncheckedUpdateWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput>\n    create: XOR<discussion_board_user_settingsCreateWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput, discussion_board_user_settingsUncheckedCreateWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput>\n    where?: discussion_board_user_settingsWhereInput\n  }\n\n  export type discussion_board_user_settingsUpdateToOneWithWhereWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput = {\n    where?: discussion_board_user_settingsWhereInput\n    data: XOR<discussion_board_user_settingsUpdateWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput, discussion_board_user_settingsUncheckedUpdateWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput>\n  }\n\n  export type discussion_board_user_settingsUpdateWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    notification_email?: BoolFieldUpdateOperationsInput | boolean\n    notification_in_app?: BoolFieldUpdateOperationsInput | boolean\n    accessibility_mode?: NullableStringFieldUpdateOperationsInput | string | null\n    display_density?: NullableStringFieldUpdateOperationsInput | string | null\n  }\n\n  export type discussion_board_user_settingsUncheckedUpdateWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    notification_email?: BoolFieldUpdateOperationsInput | boolean\n    notification_in_app?: BoolFieldUpdateOperationsInput | boolean\n    accessibility_mode?: NullableStringFieldUpdateOperationsInput | string | null\n    display_density?: NullableStringFieldUpdateOperationsInput | string | null\n  }\n\n  export type discussion_board_threadUpsertWithWhereUniqueWithoutCreator_userInput = {\n    where: discussion_board_threadWhereUniqueInput\n    update: XOR<discussion_board_threadUpdateWithoutCreator_userInput, discussion_board_threadUncheckedUpdateWithoutCreator_userInput>\n    create: XOR<discussion_board_threadCreateWithoutCreator_userInput, discussion_board_threadUncheckedCreateWithoutCreator_userInput>\n  }\n\n  export type discussion_board_threadUpdateWithWhereUniqueWithoutCreator_userInput = {\n    where: discussion_board_threadWhereUniqueInput\n    data: XOR<discussion_board_threadUpdateWithoutCreator_userInput, discussion_board_threadUncheckedUpdateWithoutCreator_userInput>\n  }\n\n  export type discussion_board_threadUpdateManyWithWhereWithoutCreator_userInput = {\n    where: discussion_board_threadScalarWhereInput\n    data: XOR<discussion_board_threadUpdateManyMutationInput, discussion_board_threadUncheckedUpdateManyWithoutCreator_userInput>\n  }\n\n  export type discussion_board_threadScalarWhereInput = {\n    AND?: discussion_board_threadScalarWhereInput | discussion_board_threadScalarWhereInput[]\n    OR?: discussion_board_threadScalarWhereInput[]\n    NOT?: discussion_board_threadScalarWhereInput | discussion_board_threadScalarWhereInput[]\n    id?: UuidFilter<\"discussion_board_thread\"> | string\n    creator_user_id?: UuidFilter<\"discussion_board_thread\"> | string\n    category_id?: UuidFilter<\"discussion_board_thread\"> | string\n    title?: StringFilter<\"discussion_board_thread\"> | string\n    body?: StringFilter<\"discussion_board_thread\"> | string\n    is_locked?: BoolFilter<\"discussion_board_thread\"> | boolean\n    is_pinned?: BoolFilter<\"discussion_board_thread\"> | boolean\n    created_at?: DateTimeFilter<\"discussion_board_thread\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussion_board_thread\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"discussion_board_thread\"> | Date | string | null\n  }\n\n  export type discussion_board_postUpsertWithWhereUniqueWithoutAuthor_userInput = {\n    where: discussion_board_postWhereUniqueInput\n    update: XOR<discussion_board_postUpdateWithoutAuthor_userInput, discussion_board_postUncheckedUpdateWithoutAuthor_userInput>\n    create: XOR<discussion_board_postCreateWithoutAuthor_userInput, discussion_board_postUncheckedCreateWithoutAuthor_userInput>\n  }\n\n  export type discussion_board_postUpdateWithWhereUniqueWithoutAuthor_userInput = {\n    where: discussion_board_postWhereUniqueInput\n    data: XOR<discussion_board_postUpdateWithoutAuthor_userInput, discussion_board_postUncheckedUpdateWithoutAuthor_userInput>\n  }\n\n  export type discussion_board_postUpdateManyWithWhereWithoutAuthor_userInput = {\n    where: discussion_board_postScalarWhereInput\n    data: XOR<discussion_board_postUpdateManyMutationInput, discussion_board_postUncheckedUpdateManyWithoutAuthor_userInput>\n  }\n\n  export type discussion_board_postScalarWhereInput = {\n    AND?: discussion_board_postScalarWhereInput | discussion_board_postScalarWhereInput[]\n    OR?: discussion_board_postScalarWhereInput[]\n    NOT?: discussion_board_postScalarWhereInput | discussion_board_postScalarWhereInput[]\n    id?: UuidFilter<\"discussion_board_post\"> | string\n    thread_id?: UuidFilter<\"discussion_board_post\"> | string\n    author_user_id?: UuidFilter<\"discussion_board_post\"> | string\n    parent_post_id?: UuidNullableFilter<\"discussion_board_post\"> | string | null\n    body?: StringFilter<\"discussion_board_post\"> | string\n    created_at?: DateTimeFilter<\"discussion_board_post\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussion_board_post\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"discussion_board_post\"> | Date | string | null\n  }\n\n  export type discussion_board_commentUpsertWithWhereUniqueWithoutAuthor_userInput = {\n    where: discussion_board_commentWhereUniqueInput\n    update: XOR<discussion_board_commentUpdateWithoutAuthor_userInput, discussion_board_commentUncheckedUpdateWithoutAuthor_userInput>\n    create: XOR<discussion_board_commentCreateWithoutAuthor_userInput, discussion_board_commentUncheckedCreateWithoutAuthor_userInput>\n  }\n\n  export type discussion_board_commentUpdateWithWhereUniqueWithoutAuthor_userInput = {\n    where: discussion_board_commentWhereUniqueInput\n    data: XOR<discussion_board_commentUpdateWithoutAuthor_userInput, discussion_board_commentUncheckedUpdateWithoutAuthor_userInput>\n  }\n\n  export type discussion_board_commentUpdateManyWithWhereWithoutAuthor_userInput = {\n    where: discussion_board_commentScalarWhereInput\n    data: XOR<discussion_board_commentUpdateManyMutationInput, discussion_board_commentUncheckedUpdateManyWithoutAuthor_userInput>\n  }\n\n  export type discussion_board_commentScalarWhereInput = {\n    AND?: discussion_board_commentScalarWhereInput | discussion_board_commentScalarWhereInput[]\n    OR?: discussion_board_commentScalarWhereInput[]\n    NOT?: discussion_board_commentScalarWhereInput | discussion_board_commentScalarWhereInput[]\n    id?: UuidFilter<\"discussion_board_comment\"> | string\n    post_id?: UuidFilter<\"discussion_board_comment\"> | string\n    author_user_id?: UuidFilter<\"discussion_board_comment\"> | string\n    parent_comment_id?: UuidNullableFilter<\"discussion_board_comment\"> | string | null\n    body?: StringFilter<\"discussion_board_comment\"> | string\n    created_at?: DateTimeFilter<\"discussion_board_comment\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussion_board_comment\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"discussion_board_comment\"> | Date | string | null\n  }\n\n  export type discussion_board_voteUpsertWithWhereUniqueWithoutUserInput = {\n    where: discussion_board_voteWhereUniqueInput\n    update: XOR<discussion_board_voteUpdateWithoutUserInput, discussion_board_voteUncheckedUpdateWithoutUserInput>\n    create: XOR<discussion_board_voteCreateWithoutUserInput, discussion_board_voteUncheckedCreateWithoutUserInput>\n  }\n\n  export type discussion_board_voteUpdateWithWhereUniqueWithoutUserInput = {\n    where: discussion_board_voteWhereUniqueInput\n    data: XOR<discussion_board_voteUpdateWithoutUserInput, discussion_board_voteUncheckedUpdateWithoutUserInput>\n  }\n\n  export type discussion_board_voteUpdateManyWithWhereWithoutUserInput = {\n    where: discussion_board_voteScalarWhereInput\n    data: XOR<discussion_board_voteUpdateManyMutationInput, discussion_board_voteUncheckedUpdateManyWithoutUserInput>\n  }\n\n  export type discussion_board_voteScalarWhereInput = {\n    AND?: discussion_board_voteScalarWhereInput | discussion_board_voteScalarWhereInput[]\n    OR?: discussion_board_voteScalarWhereInput[]\n    NOT?: discussion_board_voteScalarWhereInput | discussion_board_voteScalarWhereInput[]\n    id?: UuidFilter<\"discussion_board_vote\"> | string\n    user_id?: UuidFilter<\"discussion_board_vote\"> | string\n    thread_id?: UuidNullableFilter<\"discussion_board_vote\"> | string | null\n    post_id?: UuidNullableFilter<\"discussion_board_vote\"> | string | null\n    comment_id?: UuidNullableFilter<\"discussion_board_vote\"> | string | null\n    direction?: StringFilter<\"discussion_board_vote\"> | string\n    created_at?: DateTimeFilter<\"discussion_board_vote\"> | Date | string\n  }\n\n  export type discussion_board_reactionUpsertWithWhereUniqueWithoutUserInput = {\n    where: discussion_board_reactionWhereUniqueInput\n    update: XOR<discussion_board_reactionUpdateWithoutUserInput, discussion_board_reactionUncheckedUpdateWithoutUserInput>\n    create: XOR<discussion_board_reactionCreateWithoutUserInput, discussion_board_reactionUncheckedCreateWithoutUserInput>\n  }\n\n  export type discussion_board_reactionUpdateWithWhereUniqueWithoutUserInput = {\n    where: discussion_board_reactionWhereUniqueInput\n    data: XOR<discussion_board_reactionUpdateWithoutUserInput, discussion_board_reactionUncheckedUpdateWithoutUserInput>\n  }\n\n  export type discussion_board_reactionUpdateManyWithWhereWithoutUserInput = {\n    where: discussion_board_reactionScalarWhereInput\n    data: XOR<discussion_board_reactionUpdateManyMutationInput, discussion_board_reactionUncheckedUpdateManyWithoutUserInput>\n  }\n\n  export type discussion_board_reactionScalarWhereInput = {\n    AND?: discussion_board_reactionScalarWhereInput | discussion_board_reactionScalarWhereInput[]\n    OR?: discussion_board_reactionScalarWhereInput[]\n    NOT?: discussion_board_reactionScalarWhereInput | discussion_board_reactionScalarWhereInput[]\n    id?: UuidFilter<\"discussion_board_reaction\"> | string\n    user_id?: UuidFilter<\"discussion_board_reaction\"> | string\n    thread_id?: UuidNullableFilter<\"discussion_board_reaction\"> | string | null\n    post_id?: UuidNullableFilter<\"discussion_board_reaction\"> | string | null\n    comment_id?: UuidNullableFilter<\"discussion_board_reaction\"> | string | null\n    reaction_type?: StringFilter<\"discussion_board_reaction\"> | string\n    created_at?: DateTimeFilter<\"discussion_board_reaction\"> | Date | string\n  }\n\n  export type discussion_board_bookmarkUpsertWithWhereUniqueWithoutUserInput = {\n    where: discussion_board_bookmarkWhereUniqueInput\n    update: XOR<discussion_board_bookmarkUpdateWithoutUserInput, discussion_board_bookmarkUncheckedUpdateWithoutUserInput>\n    create: XOR<discussion_board_bookmarkCreateWithoutUserInput, discussion_board_bookmarkUncheckedCreateWithoutUserInput>\n  }\n\n  export type discussion_board_bookmarkUpdateWithWhereUniqueWithoutUserInput = {\n    where: discussion_board_bookmarkWhereUniqueInput\n    data: XOR<discussion_board_bookmarkUpdateWithoutUserInput, discussion_board_bookmarkUncheckedUpdateWithoutUserInput>\n  }\n\n  export type discussion_board_bookmarkUpdateManyWithWhereWithoutUserInput = {\n    where: discussion_board_bookmarkScalarWhereInput\n    data: XOR<discussion_board_bookmarkUpdateManyMutationInput, discussion_board_bookmarkUncheckedUpdateManyWithoutUserInput>\n  }\n\n  export type discussion_board_bookmarkScalarWhereInput = {\n    AND?: discussion_board_bookmarkScalarWhereInput | discussion_board_bookmarkScalarWhereInput[]\n    OR?: discussion_board_bookmarkScalarWhereInput[]\n    NOT?: discussion_board_bookmarkScalarWhereInput | discussion_board_bookmarkScalarWhereInput[]\n    id?: UuidFilter<\"discussion_board_bookmark\"> | string\n    user_id?: UuidFilter<\"discussion_board_bookmark\"> | string\n    thread_id?: UuidNullableFilter<\"discussion_board_bookmark\"> | string | null\n    post_id?: UuidNullableFilter<\"discussion_board_bookmark\"> | string | null\n    comment_id?: UuidNullableFilter<\"discussion_board_bookmark\"> | string | null\n    created_at?: DateTimeFilter<\"discussion_board_bookmark\"> | Date | string\n  }\n\n  export type discussion_board_notificationUpsertWithWhereUniqueWithoutRecipient_userInput = {\n    where: discussion_board_notificationWhereUniqueInput\n    update: XOR<discussion_board_notificationUpdateWithoutRecipient_userInput, discussion_board_notificationUncheckedUpdateWithoutRecipient_userInput>\n    create: XOR<discussion_board_notificationCreateWithoutRecipient_userInput, discussion_board_notificationUncheckedCreateWithoutRecipient_userInput>\n  }\n\n  export type discussion_board_notificationUpdateWithWhereUniqueWithoutRecipient_userInput = {\n    where: discussion_board_notificationWhereUniqueInput\n    data: XOR<discussion_board_notificationUpdateWithoutRecipient_userInput, discussion_board_notificationUncheckedUpdateWithoutRecipient_userInput>\n  }\n\n  export type discussion_board_notificationUpdateManyWithWhereWithoutRecipient_userInput = {\n    where: discussion_board_notificationScalarWhereInput\n    data: XOR<discussion_board_notificationUpdateManyMutationInput, discussion_board_notificationUncheckedUpdateManyWithoutRecipient_userInput>\n  }\n\n  export type discussion_board_notificationScalarWhereInput = {\n    AND?: discussion_board_notificationScalarWhereInput | discussion_board_notificationScalarWhereInput[]\n    OR?: discussion_board_notificationScalarWhereInput[]\n    NOT?: discussion_board_notificationScalarWhereInput | discussion_board_notificationScalarWhereInput[]\n    id?: UuidFilter<\"discussion_board_notification\"> | string\n    recipient_user_id?: UuidFilter<\"discussion_board_notification\"> | string\n    thread_id?: UuidNullableFilter<\"discussion_board_notification\"> | string | null\n    post_id?: UuidNullableFilter<\"discussion_board_notification\"> | string | null\n    comment_id?: UuidNullableFilter<\"discussion_board_notification\"> | string | null\n    notification_type?: StringFilter<\"discussion_board_notification\"> | string\n    is_read?: BoolFilter<\"discussion_board_notification\"> | boolean\n    channel?: StringFilter<\"discussion_board_notification\"> | string\n    created_at?: DateTimeFilter<\"discussion_board_notification\"> | Date | string\n    delivered_at?: DateTimeNullableFilter<\"discussion_board_notification\"> | Date | string | null\n  }\n\n  export type discussion_board_subscriptionUpsertWithWhereUniqueWithoutUserInput = {\n    where: discussion_board_subscriptionWhereUniqueInput\n    update: XOR<discussion_board_subscriptionUpdateWithoutUserInput, discussion_board_subscriptionUncheckedUpdateWithoutUserInput>\n    create: XOR<discussion_board_subscriptionCreateWithoutUserInput, discussion_board_subscriptionUncheckedCreateWithoutUserInput>\n  }\n\n  export type discussion_board_subscriptionUpdateWithWhereUniqueWithoutUserInput = {\n    where: discussion_board_subscriptionWhereUniqueInput\n    data: XOR<discussion_board_subscriptionUpdateWithoutUserInput, discussion_board_subscriptionUncheckedUpdateWithoutUserInput>\n  }\n\n  export type discussion_board_subscriptionUpdateManyWithWhereWithoutUserInput = {\n    where: discussion_board_subscriptionScalarWhereInput\n    data: XOR<discussion_board_subscriptionUpdateManyMutationInput, discussion_board_subscriptionUncheckedUpdateManyWithoutUserInput>\n  }\n\n  export type discussion_board_subscriptionScalarWhereInput = {\n    AND?: discussion_board_subscriptionScalarWhereInput | discussion_board_subscriptionScalarWhereInput[]\n    OR?: discussion_board_subscriptionScalarWhereInput[]\n    NOT?: discussion_board_subscriptionScalarWhereInput | discussion_board_subscriptionScalarWhereInput[]\n    id?: UuidFilter<\"discussion_board_subscription\"> | string\n    user_id?: UuidFilter<\"discussion_board_subscription\"> | string\n    thread_id?: UuidNullableFilter<\"discussion_board_subscription\"> | string | null\n    tag_id?: UuidNullableFilter<\"discussion_board_subscription\"> | string | null\n    post_id?: UuidNullableFilter<\"discussion_board_subscription\"> | string | null\n    comment_id?: UuidNullableFilter<\"discussion_board_subscription\"> | string | null\n    channel?: StringFilter<\"discussion_board_subscription\"> | string\n    created_at?: DateTimeFilter<\"discussion_board_subscription\"> | Date | string\n    expires_at?: DateTimeNullableFilter<\"discussion_board_subscription\"> | Date | string | null\n  }\n\n  export type discussion_board_reportUpsertWithWhereUniqueWithoutReported_userInput = {\n    where: discussion_board_reportWhereUniqueInput\n    update: XOR<discussion_board_reportUpdateWithoutReported_userInput, discussion_board_reportUncheckedUpdateWithoutReported_userInput>\n    create: XOR<discussion_board_reportCreateWithoutReported_userInput, discussion_board_reportUncheckedCreateWithoutReported_userInput>\n  }\n\n  export type discussion_board_reportUpdateWithWhereUniqueWithoutReported_userInput = {\n    where: discussion_board_reportWhereUniqueInput\n    data: XOR<discussion_board_reportUpdateWithoutReported_userInput, discussion_board_reportUncheckedUpdateWithoutReported_userInput>\n  }\n\n  export type discussion_board_reportUpdateManyWithWhereWithoutReported_userInput = {\n    where: discussion_board_reportScalarWhereInput\n    data: XOR<discussion_board_reportUpdateManyMutationInput, discussion_board_reportUncheckedUpdateManyWithoutReported_userInput>\n  }\n\n  export type discussion_board_reportScalarWhereInput = {\n    AND?: discussion_board_reportScalarWhereInput | discussion_board_reportScalarWhereInput[]\n    OR?: discussion_board_reportScalarWhereInput[]\n    NOT?: discussion_board_reportScalarWhereInput | discussion_board_reportScalarWhereInput[]\n    id?: UuidFilter<\"discussion_board_report\"> | string\n    reported_user_id?: UuidNullableFilter<\"discussion_board_report\"> | string | null\n    reporting_user_id?: UuidFilter<\"discussion_board_report\"> | string\n    thread_id?: UuidNullableFilter<\"discussion_board_report\"> | string | null\n    post_id?: UuidNullableFilter<\"discussion_board_report\"> | string | null\n    comment_id?: UuidNullableFilter<\"discussion_board_report\"> | string | null\n    status?: StringFilter<\"discussion_board_report\"> | string\n    category?: StringFilter<\"discussion_board_report\"> | string\n    submitted_at?: DateTimeFilter<\"discussion_board_report\"> | Date | string\n    resolved_at?: DateTimeNullableFilter<\"discussion_board_report\"> | Date | string | null\n    details?: StringFilter<\"discussion_board_report\"> | string\n  }\n\n  export type discussion_board_reportUpsertWithWhereUniqueWithoutReporting_userInput = {\n    where: discussion_board_reportWhereUniqueInput\n    update: XOR<discussion_board_reportUpdateWithoutReporting_userInput, discussion_board_reportUncheckedUpdateWithoutReporting_userInput>\n    create: XOR<discussion_board_reportCreateWithoutReporting_userInput, discussion_board_reportUncheckedCreateWithoutReporting_userInput>\n  }\n\n  export type discussion_board_reportUpdateWithWhereUniqueWithoutReporting_userInput = {\n    where: discussion_board_reportWhereUniqueInput\n    data: XOR<discussion_board_reportUpdateWithoutReporting_userInput, discussion_board_reportUncheckedUpdateWithoutReporting_userInput>\n  }\n\n  export type discussion_board_reportUpdateManyWithWhereWithoutReporting_userInput = {\n    where: discussion_board_reportScalarWhereInput\n    data: XOR<discussion_board_reportUpdateManyMutationInput, discussion_board_reportUncheckedUpdateManyWithoutReporting_userInput>\n  }\n\n  export type discussion_board_moderator_actionUpsertWithWhereUniqueWithoutUserInput = {\n    where: discussion_board_moderator_actionWhereUniqueInput\n    update: XOR<discussion_board_moderator_actionUpdateWithoutUserInput, discussion_board_moderator_actionUncheckedUpdateWithoutUserInput>\n    create: XOR<discussion_board_moderator_actionCreateWithoutUserInput, discussion_board_moderator_actionUncheckedCreateWithoutUserInput>\n  }\n\n  export type discussion_board_moderator_actionUpdateWithWhereUniqueWithoutUserInput = {\n    where: discussion_board_moderator_actionWhereUniqueInput\n    data: XOR<discussion_board_moderator_actionUpdateWithoutUserInput, discussion_board_moderator_actionUncheckedUpdateWithoutUserInput>\n  }\n\n  export type discussion_board_moderator_actionUpdateManyWithWhereWithoutUserInput = {\n    where: discussion_board_moderator_actionScalarWhereInput\n    data: XOR<discussion_board_moderator_actionUpdateManyMutationInput, discussion_board_moderator_actionUncheckedUpdateManyWithoutUserInput>\n  }\n\n  export type discussion_board_moderator_actionScalarWhereInput = {\n    AND?: discussion_board_moderator_actionScalarWhereInput | discussion_board_moderator_actionScalarWhereInput[]\n    OR?: discussion_board_moderator_actionScalarWhereInput[]\n    NOT?: discussion_board_moderator_actionScalarWhereInput | discussion_board_moderator_actionScalarWhereInput[]\n    id?: UuidFilter<\"discussion_board_moderator_action\"> | string\n    moderator_id?: UuidFilter<\"discussion_board_moderator_action\"> | string\n    user_id?: UuidNullableFilter<\"discussion_board_moderator_action\"> | string | null\n    report_id?: UuidNullableFilter<\"discussion_board_moderator_action\"> | string | null\n    thread_id?: UuidNullableFilter<\"discussion_board_moderator_action\"> | string | null\n    post_id?: UuidNullableFilter<\"discussion_board_moderator_action\"> | string | null\n    comment_id?: UuidNullableFilter<\"discussion_board_moderator_action\"> | string | null\n    action_type?: StringFilter<\"discussion_board_moderator_action\"> | string\n    reason?: StringFilter<\"discussion_board_moderator_action\"> | string\n    created_at?: DateTimeFilter<\"discussion_board_moderator_action\"> | Date | string\n  }\n\n  export type discussion_board_audit_logUpsertWithWhereUniqueWithoutActorInput = {\n    where: discussion_board_audit_logWhereUniqueInput\n    update: XOR<discussion_board_audit_logUpdateWithoutActorInput, discussion_board_audit_logUncheckedUpdateWithoutActorInput>\n    create: XOR<discussion_board_audit_logCreateWithoutActorInput, discussion_board_audit_logUncheckedCreateWithoutActorInput>\n  }\n\n  export type discussion_board_audit_logUpdateWithWhereUniqueWithoutActorInput = {\n    where: discussion_board_audit_logWhereUniqueInput\n    data: XOR<discussion_board_audit_logUpdateWithoutActorInput, discussion_board_audit_logUncheckedUpdateWithoutActorInput>\n  }\n\n  export type discussion_board_audit_logUpdateManyWithWhereWithoutActorInput = {\n    where: discussion_board_audit_logScalarWhereInput\n    data: XOR<discussion_board_audit_logUpdateManyMutationInput, discussion_board_audit_logUncheckedUpdateManyWithoutActorInput>\n  }\n\n  export type discussion_board_audit_logScalarWhereInput = {\n    AND?: discussion_board_audit_logScalarWhereInput | discussion_board_audit_logScalarWhereInput[]\n    OR?: discussion_board_audit_logScalarWhereInput[]\n    NOT?: discussion_board_audit_logScalarWhereInput | discussion_board_audit_logScalarWhereInput[]\n    id?: UuidFilter<\"discussion_board_audit_log\"> | string\n    actor_id?: UuidFilter<\"discussion_board_audit_log\"> | string\n    affected_user_id?: UuidNullableFilter<\"discussion_board_audit_log\"> | string | null\n    entity_type?: StringFilter<\"discussion_board_audit_log\"> | string\n    entity_id?: UuidFilter<\"discussion_board_audit_log\"> | string\n    action?: StringFilter<\"discussion_board_audit_log\"> | string\n    details?: StringFilter<\"discussion_board_audit_log\"> | string\n    created_at?: DateTimeFilter<\"discussion_board_audit_log\"> | Date | string\n  }\n\n  export type discussion_board_audit_logUpsertWithWhereUniqueWithoutAffected_userInput = {\n    where: discussion_board_audit_logWhereUniqueInput\n    update: XOR<discussion_board_audit_logUpdateWithoutAffected_userInput, discussion_board_audit_logUncheckedUpdateWithoutAffected_userInput>\n    create: XOR<discussion_board_audit_logCreateWithoutAffected_userInput, discussion_board_audit_logUncheckedCreateWithoutAffected_userInput>\n  }\n\n  export type discussion_board_audit_logUpdateWithWhereUniqueWithoutAffected_userInput = {\n    where: discussion_board_audit_logWhereUniqueInput\n    data: XOR<discussion_board_audit_logUpdateWithoutAffected_userInput, discussion_board_audit_logUncheckedUpdateWithoutAffected_userInput>\n  }\n\n  export type discussion_board_audit_logUpdateManyWithWhereWithoutAffected_userInput = {\n    where: discussion_board_audit_logScalarWhereInput\n    data: XOR<discussion_board_audit_logUpdateManyMutationInput, discussion_board_audit_logUncheckedUpdateManyWithoutAffected_userInput>\n  }\n\n  export type discussion_board_warningUpsertWithWhereUniqueWithoutUserInput = {\n    where: discussion_board_warningWhereUniqueInput\n    update: XOR<discussion_board_warningUpdateWithoutUserInput, discussion_board_warningUncheckedUpdateWithoutUserInput>\n    create: XOR<discussion_board_warningCreateWithoutUserInput, discussion_board_warningUncheckedCreateWithoutUserInput>\n  }\n\n  export type discussion_board_warningUpdateWithWhereUniqueWithoutUserInput = {\n    where: discussion_board_warningWhereUniqueInput\n    data: XOR<discussion_board_warningUpdateWithoutUserInput, discussion_board_warningUncheckedUpdateWithoutUserInput>\n  }\n\n  export type discussion_board_warningUpdateManyWithWhereWithoutUserInput = {\n    where: discussion_board_warningScalarWhereInput\n    data: XOR<discussion_board_warningUpdateManyMutationInput, discussion_board_warningUncheckedUpdateManyWithoutUserInput>\n  }\n\n  export type discussion_board_warningScalarWhereInput = {\n    AND?: discussion_board_warningScalarWhereInput | discussion_board_warningScalarWhereInput[]\n    OR?: discussion_board_warningScalarWhereInput[]\n    NOT?: discussion_board_warningScalarWhereInput | discussion_board_warningScalarWhereInput[]\n    id?: UuidFilter<\"discussion_board_warning\"> | string\n    user_id?: UuidFilter<\"discussion_board_warning\"> | string\n    moderator_id?: UuidFilter<\"discussion_board_warning\"> | string\n    thread_id?: UuidNullableFilter<\"discussion_board_warning\"> | string | null\n    post_id?: UuidNullableFilter<\"discussion_board_warning\"> | string | null\n    comment_id?: UuidNullableFilter<\"discussion_board_warning\"> | string | null\n    reason?: StringFilter<\"discussion_board_warning\"> | string\n    issued_at?: DateTimeFilter<\"discussion_board_warning\"> | Date | string\n  }\n\n  export type discussion_board_banUpsertWithWhereUniqueWithoutUserInput = {\n    where: discussion_board_banWhereUniqueInput\n    update: XOR<discussion_board_banUpdateWithoutUserInput, discussion_board_banUncheckedUpdateWithoutUserInput>\n    create: XOR<discussion_board_banCreateWithoutUserInput, discussion_board_banUncheckedCreateWithoutUserInput>\n  }\n\n  export type discussion_board_banUpdateWithWhereUniqueWithoutUserInput = {\n    where: discussion_board_banWhereUniqueInput\n    data: XOR<discussion_board_banUpdateWithoutUserInput, discussion_board_banUncheckedUpdateWithoutUserInput>\n  }\n\n  export type discussion_board_banUpdateManyWithWhereWithoutUserInput = {\n    where: discussion_board_banScalarWhereInput\n    data: XOR<discussion_board_banUpdateManyMutationInput, discussion_board_banUncheckedUpdateManyWithoutUserInput>\n  }\n\n  export type discussion_board_banScalarWhereInput = {\n    AND?: discussion_board_banScalarWhereInput | discussion_board_banScalarWhereInput[]\n    OR?: discussion_board_banScalarWhereInput[]\n    NOT?: discussion_board_banScalarWhereInput | discussion_board_banScalarWhereInput[]\n    id?: UuidFilter<\"discussion_board_ban\"> | string\n    user_id?: UuidFilter<\"discussion_board_ban\"> | string\n    moderator_id?: UuidFilter<\"discussion_board_ban\"> | string\n    warning_id?: UuidNullableFilter<\"discussion_board_ban\"> | string | null\n    report_id?: UuidNullableFilter<\"discussion_board_ban\"> | string | null\n    ban_type?: StringFilter<\"discussion_board_ban\"> | string\n    reason?: StringFilter<\"discussion_board_ban\"> | string\n    banned_at?: DateTimeFilter<\"discussion_board_ban\"> | Date | string\n    expires_at?: DateTimeNullableFilter<\"discussion_board_ban\"> | Date | string | null\n  }\n\n  export type discussion_board_user_activityUpsertWithoutDiscussion_board_userInput = {\n    update: XOR<discussion_board_user_activityUpdateWithoutDiscussion_board_userInput, discussion_board_user_activityUncheckedUpdateWithoutDiscussion_board_userInput>\n    create: XOR<discussion_board_user_activityCreateWithoutDiscussion_board_userInput, discussion_board_user_activityUncheckedCreateWithoutDiscussion_board_userInput>\n    where?: discussion_board_user_activityWhereInput\n  }\n\n  export type discussion_board_user_activityUpdateToOneWithWhereWithoutDiscussion_board_userInput = {\n    where?: discussion_board_user_activityWhereInput\n    data: XOR<discussion_board_user_activityUpdateWithoutDiscussion_board_userInput, discussion_board_user_activityUncheckedUpdateWithoutDiscussion_board_userInput>\n  }\n\n  export type discussion_board_user_activityUpdateWithoutDiscussion_board_userInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    threads_authored?: IntFieldUpdateOperationsInput | number\n    posts_authored?: IntFieldUpdateOperationsInput | number\n    comments_authored?: IntFieldUpdateOperationsInput | number\n    upvotes_given?: IntFieldUpdateOperationsInput | number\n    downvotes_given?: IntFieldUpdateOperationsInput | number\n    reports_made?: IntFieldUpdateOperationsInput | number\n    bookmarks_created?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_user_activityUncheckedUpdateWithoutDiscussion_board_userInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    threads_authored?: IntFieldUpdateOperationsInput | number\n    posts_authored?: IntFieldUpdateOperationsInput | number\n    comments_authored?: IntFieldUpdateOperationsInput | number\n    upvotes_given?: IntFieldUpdateOperationsInput | number\n    downvotes_given?: IntFieldUpdateOperationsInput | number\n    reports_made?: IntFieldUpdateOperationsInput | number\n    bookmarks_created?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_usersCreateWithoutDiscussion_board_moderatorsInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_admins?: discussion_board_adminsCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    discussion_board_user_profiles?: discussion_board_user_profilesCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    discussion_board_user_settings?: discussion_board_user_settingsCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    discussion_board_thread?: discussion_board_threadCreateNestedManyWithoutCreator_userInput\n    discussion_board_post?: discussion_board_postCreateNestedManyWithoutAuthor_userInput\n    discussion_board_comment?: discussion_board_commentCreateNestedManyWithoutAuthor_userInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutUserInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutUserInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutUserInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutRecipient_userInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutUserInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportCreateNestedManyWithoutReported_userInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportCreateNestedManyWithoutReporting_userInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutUserInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logCreateNestedManyWithoutActorInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logCreateNestedManyWithoutAffected_userInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutUserInput\n    discussion_board_ban?: discussion_board_banCreateNestedManyWithoutUserInput\n    discussion_board_user_activity?: discussion_board_user_activityCreateNestedOneWithoutDiscussion_board_userInput\n  }\n\n  export type discussion_board_usersUncheckedCreateWithoutDiscussion_board_moderatorsInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_admins?: discussion_board_adminsUncheckedCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUncheckedCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    discussion_board_user_settings?: discussion_board_user_settingsUncheckedCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    discussion_board_thread?: discussion_board_threadUncheckedCreateNestedManyWithoutCreator_userInput\n    discussion_board_post?: discussion_board_postUncheckedCreateNestedManyWithoutAuthor_userInput\n    discussion_board_comment?: discussion_board_commentUncheckedCreateNestedManyWithoutAuthor_userInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutRecipient_userInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUncheckedCreateNestedManyWithoutReported_userInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUncheckedCreateNestedManyWithoutReporting_userInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUncheckedCreateNestedManyWithoutActorInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUncheckedCreateNestedManyWithoutAffected_userInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_ban?: discussion_board_banUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_user_activity?: discussion_board_user_activityUncheckedCreateNestedOneWithoutDiscussion_board_userInput\n  }\n\n  export type discussion_board_usersCreateOrConnectWithoutDiscussion_board_moderatorsInput = {\n    where: discussion_board_usersWhereUniqueInput\n    create: XOR<discussion_board_usersCreateWithoutDiscussion_board_moderatorsInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_moderatorsInput>\n  }\n\n  export type discussion_board_moderator_actionCreateWithoutModeratorInput = {\n    id: string\n    action_type: string\n    reason: string\n    created_at: Date | string\n    user?: discussion_board_usersCreateNestedOneWithoutDiscussion_board_moderator_actionInput\n    report?: discussion_board_reportCreateNestedOneWithoutDiscussion_board_moderator_actionInput\n    thread?: discussion_board_threadCreateNestedOneWithoutDiscussion_board_moderator_actionInput\n    post?: discussion_board_postCreateNestedOneWithoutDiscussion_board_moderator_actionInput\n    comment?: discussion_board_commentCreateNestedOneWithoutDiscussion_board_moderator_actionInput\n  }\n\n  export type discussion_board_moderator_actionUncheckedCreateWithoutModeratorInput = {\n    id: string\n    user_id?: string | null\n    report_id?: string | null\n    thread_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    action_type: string\n    reason: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_moderator_actionCreateOrConnectWithoutModeratorInput = {\n    where: discussion_board_moderator_actionWhereUniqueInput\n    create: XOR<discussion_board_moderator_actionCreateWithoutModeratorInput, discussion_board_moderator_actionUncheckedCreateWithoutModeratorInput>\n  }\n\n  export type discussion_board_moderator_actionCreateManyModeratorInputEnvelope = {\n    data: discussion_board_moderator_actionCreateManyModeratorInput | discussion_board_moderator_actionCreateManyModeratorInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_warningCreateWithoutModeratorInput = {\n    id: string\n    reason: string\n    issued_at: Date | string\n    user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_warningInput\n    thread?: discussion_board_threadCreateNestedOneWithoutDiscussion_board_warningInput\n    post?: discussion_board_postCreateNestedOneWithoutDiscussion_board_warningInput\n    comment?: discussion_board_commentCreateNestedOneWithoutDiscussion_board_warningInput\n    discussion_board_ban?: discussion_board_banCreateNestedManyWithoutWarningInput\n  }\n\n  export type discussion_board_warningUncheckedCreateWithoutModeratorInput = {\n    id: string\n    user_id: string\n    thread_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    reason: string\n    issued_at: Date | string\n    discussion_board_ban?: discussion_board_banUncheckedCreateNestedManyWithoutWarningInput\n  }\n\n  export type discussion_board_warningCreateOrConnectWithoutModeratorInput = {\n    where: discussion_board_warningWhereUniqueInput\n    create: XOR<discussion_board_warningCreateWithoutModeratorInput, discussion_board_warningUncheckedCreateWithoutModeratorInput>\n  }\n\n  export type discussion_board_warningCreateManyModeratorInputEnvelope = {\n    data: discussion_board_warningCreateManyModeratorInput | discussion_board_warningCreateManyModeratorInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_banCreateWithoutModeratorInput = {\n    id: string\n    ban_type: string\n    reason: string\n    banned_at: Date | string\n    expires_at?: Date | string | null\n    user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_banInput\n    warning?: discussion_board_warningCreateNestedOneWithoutDiscussion_board_banInput\n    report?: discussion_board_reportCreateNestedOneWithoutDiscussion_board_banInput\n  }\n\n  export type discussion_board_banUncheckedCreateWithoutModeratorInput = {\n    id: string\n    user_id: string\n    warning_id?: string | null\n    report_id?: string | null\n    ban_type: string\n    reason: string\n    banned_at: Date | string\n    expires_at?: Date | string | null\n  }\n\n  export type discussion_board_banCreateOrConnectWithoutModeratorInput = {\n    where: discussion_board_banWhereUniqueInput\n    create: XOR<discussion_board_banCreateWithoutModeratorInput, discussion_board_banUncheckedCreateWithoutModeratorInput>\n  }\n\n  export type discussion_board_banCreateManyModeratorInputEnvelope = {\n    data: discussion_board_banCreateManyModeratorInput | discussion_board_banCreateManyModeratorInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_content_abuse_metricCreateWithoutDiscussion_board_moderatorInput = {\n    id: string\n    date: string\n    abuse_type: string\n    flagged_count: number\n    auto_hidden_count: number\n    escalation_count: number\n    false_positive_count: number\n    avg_resolution_time_minutes: number\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussion_board_content_abuse_metricUncheckedCreateWithoutDiscussion_board_moderatorInput = {\n    id: string\n    date: string\n    abuse_type: string\n    flagged_count: number\n    auto_hidden_count: number\n    escalation_count: number\n    false_positive_count: number\n    avg_resolution_time_minutes: number\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussion_board_content_abuse_metricCreateOrConnectWithoutDiscussion_board_moderatorInput = {\n    where: discussion_board_content_abuse_metricWhereUniqueInput\n    create: XOR<discussion_board_content_abuse_metricCreateWithoutDiscussion_board_moderatorInput, discussion_board_content_abuse_metricUncheckedCreateWithoutDiscussion_board_moderatorInput>\n  }\n\n  export type discussion_board_content_abuse_metricCreateManyDiscussion_board_moderatorInputEnvelope = {\n    data: discussion_board_content_abuse_metricCreateManyDiscussion_board_moderatorInput | discussion_board_content_abuse_metricCreateManyDiscussion_board_moderatorInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_usersUpsertWithoutDiscussion_board_moderatorsInput = {\n    update: XOR<discussion_board_usersUpdateWithoutDiscussion_board_moderatorsInput, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_moderatorsInput>\n    create: XOR<discussion_board_usersCreateWithoutDiscussion_board_moderatorsInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_moderatorsInput>\n    where?: discussion_board_usersWhereInput\n  }\n\n  export type discussion_board_usersUpdateToOneWithWhereWithoutDiscussion_board_moderatorsInput = {\n    where?: discussion_board_usersWhereInput\n    data: XOR<discussion_board_usersUpdateWithoutDiscussion_board_moderatorsInput, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_moderatorsInput>\n  }\n\n  export type discussion_board_usersUpdateWithoutDiscussion_board_moderatorsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_admins?: discussion_board_adminsUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_settings?: discussion_board_user_settingsUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput\n    discussion_board_thread?: discussion_board_threadUpdateManyWithoutCreator_userNestedInput\n    discussion_board_post?: discussion_board_postUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_comment?: discussion_board_commentUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutUserNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutUserNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutUserNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutRecipient_userNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutUserNestedInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUpdateManyWithoutReported_userNestedInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUpdateManyWithoutReporting_userNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutUserNestedInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUpdateManyWithoutActorNestedInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUpdateManyWithoutAffected_userNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutUserNestedInput\n    discussion_board_ban?: discussion_board_banUpdateManyWithoutUserNestedInput\n    discussion_board_user_activity?: discussion_board_user_activityUpdateOneWithoutDiscussion_board_userNestedInput\n  }\n\n  export type discussion_board_usersUncheckedUpdateWithoutDiscussion_board_moderatorsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_admins?: discussion_board_adminsUncheckedUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUncheckedUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_settings?: discussion_board_user_settingsUncheckedUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput\n    discussion_board_thread?: discussion_board_threadUncheckedUpdateManyWithoutCreator_userNestedInput\n    discussion_board_post?: discussion_board_postUncheckedUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_comment?: discussion_board_commentUncheckedUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutRecipient_userNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUncheckedUpdateManyWithoutReported_userNestedInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUncheckedUpdateManyWithoutReporting_userNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUncheckedUpdateManyWithoutActorNestedInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUncheckedUpdateManyWithoutAffected_userNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_ban?: discussion_board_banUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_user_activity?: discussion_board_user_activityUncheckedUpdateOneWithoutDiscussion_board_userNestedInput\n  }\n\n  export type discussion_board_moderator_actionUpsertWithWhereUniqueWithoutModeratorInput = {\n    where: discussion_board_moderator_actionWhereUniqueInput\n    update: XOR<discussion_board_moderator_actionUpdateWithoutModeratorInput, discussion_board_moderator_actionUncheckedUpdateWithoutModeratorInput>\n    create: XOR<discussion_board_moderator_actionCreateWithoutModeratorInput, discussion_board_moderator_actionUncheckedCreateWithoutModeratorInput>\n  }\n\n  export type discussion_board_moderator_actionUpdateWithWhereUniqueWithoutModeratorInput = {\n    where: discussion_board_moderator_actionWhereUniqueInput\n    data: XOR<discussion_board_moderator_actionUpdateWithoutModeratorInput, discussion_board_moderator_actionUncheckedUpdateWithoutModeratorInput>\n  }\n\n  export type discussion_board_moderator_actionUpdateManyWithWhereWithoutModeratorInput = {\n    where: discussion_board_moderator_actionScalarWhereInput\n    data: XOR<discussion_board_moderator_actionUpdateManyMutationInput, discussion_board_moderator_actionUncheckedUpdateManyWithoutModeratorInput>\n  }\n\n  export type discussion_board_warningUpsertWithWhereUniqueWithoutModeratorInput = {\n    where: discussion_board_warningWhereUniqueInput\n    update: XOR<discussion_board_warningUpdateWithoutModeratorInput, discussion_board_warningUncheckedUpdateWithoutModeratorInput>\n    create: XOR<discussion_board_warningCreateWithoutModeratorInput, discussion_board_warningUncheckedCreateWithoutModeratorInput>\n  }\n\n  export type discussion_board_warningUpdateWithWhereUniqueWithoutModeratorInput = {\n    where: discussion_board_warningWhereUniqueInput\n    data: XOR<discussion_board_warningUpdateWithoutModeratorInput, discussion_board_warningUncheckedUpdateWithoutModeratorInput>\n  }\n\n  export type discussion_board_warningUpdateManyWithWhereWithoutModeratorInput = {\n    where: discussion_board_warningScalarWhereInput\n    data: XOR<discussion_board_warningUpdateManyMutationInput, discussion_board_warningUncheckedUpdateManyWithoutModeratorInput>\n  }\n\n  export type discussion_board_banUpsertWithWhereUniqueWithoutModeratorInput = {\n    where: discussion_board_banWhereUniqueInput\n    update: XOR<discussion_board_banUpdateWithoutModeratorInput, discussion_board_banUncheckedUpdateWithoutModeratorInput>\n    create: XOR<discussion_board_banCreateWithoutModeratorInput, discussion_board_banUncheckedCreateWithoutModeratorInput>\n  }\n\n  export type discussion_board_banUpdateWithWhereUniqueWithoutModeratorInput = {\n    where: discussion_board_banWhereUniqueInput\n    data: XOR<discussion_board_banUpdateWithoutModeratorInput, discussion_board_banUncheckedUpdateWithoutModeratorInput>\n  }\n\n  export type discussion_board_banUpdateManyWithWhereWithoutModeratorInput = {\n    where: discussion_board_banScalarWhereInput\n    data: XOR<discussion_board_banUpdateManyMutationInput, discussion_board_banUncheckedUpdateManyWithoutModeratorInput>\n  }\n\n  export type discussion_board_content_abuse_metricUpsertWithWhereUniqueWithoutDiscussion_board_moderatorInput = {\n    where: discussion_board_content_abuse_metricWhereUniqueInput\n    update: XOR<discussion_board_content_abuse_metricUpdateWithoutDiscussion_board_moderatorInput, discussion_board_content_abuse_metricUncheckedUpdateWithoutDiscussion_board_moderatorInput>\n    create: XOR<discussion_board_content_abuse_metricCreateWithoutDiscussion_board_moderatorInput, discussion_board_content_abuse_metricUncheckedCreateWithoutDiscussion_board_moderatorInput>\n  }\n\n  export type discussion_board_content_abuse_metricUpdateWithWhereUniqueWithoutDiscussion_board_moderatorInput = {\n    where: discussion_board_content_abuse_metricWhereUniqueInput\n    data: XOR<discussion_board_content_abuse_metricUpdateWithoutDiscussion_board_moderatorInput, discussion_board_content_abuse_metricUncheckedUpdateWithoutDiscussion_board_moderatorInput>\n  }\n\n  export type discussion_board_content_abuse_metricUpdateManyWithWhereWithoutDiscussion_board_moderatorInput = {\n    where: discussion_board_content_abuse_metricScalarWhereInput\n    data: XOR<discussion_board_content_abuse_metricUpdateManyMutationInput, discussion_board_content_abuse_metricUncheckedUpdateManyWithoutDiscussion_board_moderatorInput>\n  }\n\n  export type discussion_board_content_abuse_metricScalarWhereInput = {\n    AND?: discussion_board_content_abuse_metricScalarWhereInput | discussion_board_content_abuse_metricScalarWhereInput[]\n    OR?: discussion_board_content_abuse_metricScalarWhereInput[]\n    NOT?: discussion_board_content_abuse_metricScalarWhereInput | discussion_board_content_abuse_metricScalarWhereInput[]\n    id?: UuidFilter<\"discussion_board_content_abuse_metric\"> | string\n    moderator_id?: UuidNullableFilter<\"discussion_board_content_abuse_metric\"> | string | null\n    date?: StringFilter<\"discussion_board_content_abuse_metric\"> | string\n    abuse_type?: StringFilter<\"discussion_board_content_abuse_metric\"> | string\n    flagged_count?: IntFilter<\"discussion_board_content_abuse_metric\"> | number\n    auto_hidden_count?: IntFilter<\"discussion_board_content_abuse_metric\"> | number\n    escalation_count?: IntFilter<\"discussion_board_content_abuse_metric\"> | number\n    false_positive_count?: IntFilter<\"discussion_board_content_abuse_metric\"> | number\n    avg_resolution_time_minutes?: IntFilter<\"discussion_board_content_abuse_metric\"> | number\n    created_at?: DateTimeFilter<\"discussion_board_content_abuse_metric\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussion_board_content_abuse_metric\"> | Date | string\n  }\n\n  export type discussion_board_usersCreateWithoutDiscussion_board_adminsInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    discussion_board_user_profiles?: discussion_board_user_profilesCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    discussion_board_user_settings?: discussion_board_user_settingsCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    discussion_board_thread?: discussion_board_threadCreateNestedManyWithoutCreator_userInput\n    discussion_board_post?: discussion_board_postCreateNestedManyWithoutAuthor_userInput\n    discussion_board_comment?: discussion_board_commentCreateNestedManyWithoutAuthor_userInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutUserInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutUserInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutUserInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutRecipient_userInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutUserInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportCreateNestedManyWithoutReported_userInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportCreateNestedManyWithoutReporting_userInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutUserInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logCreateNestedManyWithoutActorInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logCreateNestedManyWithoutAffected_userInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutUserInput\n    discussion_board_ban?: discussion_board_banCreateNestedManyWithoutUserInput\n    discussion_board_user_activity?: discussion_board_user_activityCreateNestedOneWithoutDiscussion_board_userInput\n  }\n\n  export type discussion_board_usersUncheckedCreateWithoutDiscussion_board_adminsInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUncheckedCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUncheckedCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    discussion_board_user_settings?: discussion_board_user_settingsUncheckedCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    discussion_board_thread?: discussion_board_threadUncheckedCreateNestedManyWithoutCreator_userInput\n    discussion_board_post?: discussion_board_postUncheckedCreateNestedManyWithoutAuthor_userInput\n    discussion_board_comment?: discussion_board_commentUncheckedCreateNestedManyWithoutAuthor_userInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutRecipient_userInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUncheckedCreateNestedManyWithoutReported_userInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUncheckedCreateNestedManyWithoutReporting_userInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUncheckedCreateNestedManyWithoutActorInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUncheckedCreateNestedManyWithoutAffected_userInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_ban?: discussion_board_banUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_user_activity?: discussion_board_user_activityUncheckedCreateNestedOneWithoutDiscussion_board_userInput\n  }\n\n  export type discussion_board_usersCreateOrConnectWithoutDiscussion_board_adminsInput = {\n    where: discussion_board_usersWhereUniqueInput\n    create: XOR<discussion_board_usersCreateWithoutDiscussion_board_adminsInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_adminsInput>\n  }\n\n  export type discussion_board_usersUpsertWithoutDiscussion_board_adminsInput = {\n    update: XOR<discussion_board_usersUpdateWithoutDiscussion_board_adminsInput, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_adminsInput>\n    create: XOR<discussion_board_usersCreateWithoutDiscussion_board_adminsInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_adminsInput>\n    where?: discussion_board_usersWhereInput\n  }\n\n  export type discussion_board_usersUpdateToOneWithWhereWithoutDiscussion_board_adminsInput = {\n    where?: discussion_board_usersWhereInput\n    data: XOR<discussion_board_usersUpdateWithoutDiscussion_board_adminsInput, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_adminsInput>\n  }\n\n  export type discussion_board_usersUpdateWithoutDiscussion_board_adminsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_settings?: discussion_board_user_settingsUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput\n    discussion_board_thread?: discussion_board_threadUpdateManyWithoutCreator_userNestedInput\n    discussion_board_post?: discussion_board_postUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_comment?: discussion_board_commentUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutUserNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutUserNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutUserNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutRecipient_userNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutUserNestedInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUpdateManyWithoutReported_userNestedInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUpdateManyWithoutReporting_userNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutUserNestedInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUpdateManyWithoutActorNestedInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUpdateManyWithoutAffected_userNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutUserNestedInput\n    discussion_board_ban?: discussion_board_banUpdateManyWithoutUserNestedInput\n    discussion_board_user_activity?: discussion_board_user_activityUpdateOneWithoutDiscussion_board_userNestedInput\n  }\n\n  export type discussion_board_usersUncheckedUpdateWithoutDiscussion_board_adminsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUncheckedUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUncheckedUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_settings?: discussion_board_user_settingsUncheckedUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput\n    discussion_board_thread?: discussion_board_threadUncheckedUpdateManyWithoutCreator_userNestedInput\n    discussion_board_post?: discussion_board_postUncheckedUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_comment?: discussion_board_commentUncheckedUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutRecipient_userNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUncheckedUpdateManyWithoutReported_userNestedInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUncheckedUpdateManyWithoutReporting_userNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUncheckedUpdateManyWithoutActorNestedInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUncheckedUpdateManyWithoutAffected_userNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_ban?: discussion_board_banUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_user_activity?: discussion_board_user_activityUncheckedUpdateOneWithoutDiscussion_board_userNestedInput\n  }\n\n  export type discussion_board_usersCreateWithoutDiscussion_board_user_profilesInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    discussion_board_admins?: discussion_board_adminsCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    discussion_board_user_settings?: discussion_board_user_settingsCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    discussion_board_thread?: discussion_board_threadCreateNestedManyWithoutCreator_userInput\n    discussion_board_post?: discussion_board_postCreateNestedManyWithoutAuthor_userInput\n    discussion_board_comment?: discussion_board_commentCreateNestedManyWithoutAuthor_userInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutUserInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutUserInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutUserInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutRecipient_userInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutUserInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportCreateNestedManyWithoutReported_userInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportCreateNestedManyWithoutReporting_userInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutUserInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logCreateNestedManyWithoutActorInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logCreateNestedManyWithoutAffected_userInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutUserInput\n    discussion_board_ban?: discussion_board_banCreateNestedManyWithoutUserInput\n    discussion_board_user_activity?: discussion_board_user_activityCreateNestedOneWithoutDiscussion_board_userInput\n  }\n\n  export type discussion_board_usersUncheckedCreateWithoutDiscussion_board_user_profilesInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUncheckedCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    discussion_board_admins?: discussion_board_adminsUncheckedCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    discussion_board_user_settings?: discussion_board_user_settingsUncheckedCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    discussion_board_thread?: discussion_board_threadUncheckedCreateNestedManyWithoutCreator_userInput\n    discussion_board_post?: discussion_board_postUncheckedCreateNestedManyWithoutAuthor_userInput\n    discussion_board_comment?: discussion_board_commentUncheckedCreateNestedManyWithoutAuthor_userInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutRecipient_userInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUncheckedCreateNestedManyWithoutReported_userInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUncheckedCreateNestedManyWithoutReporting_userInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUncheckedCreateNestedManyWithoutActorInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUncheckedCreateNestedManyWithoutAffected_userInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_ban?: discussion_board_banUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_user_activity?: discussion_board_user_activityUncheckedCreateNestedOneWithoutDiscussion_board_userInput\n  }\n\n  export type discussion_board_usersCreateOrConnectWithoutDiscussion_board_user_profilesInput = {\n    where: discussion_board_usersWhereUniqueInput\n    create: XOR<discussion_board_usersCreateWithoutDiscussion_board_user_profilesInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_user_profilesInput>\n  }\n\n  export type discussion_board_usersUpsertWithoutDiscussion_board_user_profilesInput = {\n    update: XOR<discussion_board_usersUpdateWithoutDiscussion_board_user_profilesInput, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_user_profilesInput>\n    create: XOR<discussion_board_usersCreateWithoutDiscussion_board_user_profilesInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_user_profilesInput>\n    where?: discussion_board_usersWhereInput\n  }\n\n  export type discussion_board_usersUpdateToOneWithWhereWithoutDiscussion_board_user_profilesInput = {\n    where?: discussion_board_usersWhereInput\n    data: XOR<discussion_board_usersUpdateWithoutDiscussion_board_user_profilesInput, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_user_profilesInput>\n  }\n\n  export type discussion_board_usersUpdateWithoutDiscussion_board_user_profilesInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput\n    discussion_board_admins?: discussion_board_adminsUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_settings?: discussion_board_user_settingsUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput\n    discussion_board_thread?: discussion_board_threadUpdateManyWithoutCreator_userNestedInput\n    discussion_board_post?: discussion_board_postUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_comment?: discussion_board_commentUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutUserNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutUserNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutUserNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutRecipient_userNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutUserNestedInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUpdateManyWithoutReported_userNestedInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUpdateManyWithoutReporting_userNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutUserNestedInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUpdateManyWithoutActorNestedInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUpdateManyWithoutAffected_userNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutUserNestedInput\n    discussion_board_ban?: discussion_board_banUpdateManyWithoutUserNestedInput\n    discussion_board_user_activity?: discussion_board_user_activityUpdateOneWithoutDiscussion_board_userNestedInput\n  }\n\n  export type discussion_board_usersUncheckedUpdateWithoutDiscussion_board_user_profilesInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUncheckedUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput\n    discussion_board_admins?: discussion_board_adminsUncheckedUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_settings?: discussion_board_user_settingsUncheckedUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput\n    discussion_board_thread?: discussion_board_threadUncheckedUpdateManyWithoutCreator_userNestedInput\n    discussion_board_post?: discussion_board_postUncheckedUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_comment?: discussion_board_commentUncheckedUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutRecipient_userNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUncheckedUpdateManyWithoutReported_userNestedInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUncheckedUpdateManyWithoutReporting_userNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUncheckedUpdateManyWithoutActorNestedInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUncheckedUpdateManyWithoutAffected_userNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_ban?: discussion_board_banUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_user_activity?: discussion_board_user_activityUncheckedUpdateOneWithoutDiscussion_board_userNestedInput\n  }\n\n  export type discussion_board_usersCreateWithoutDiscussion_board_user_settingsInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    discussion_board_admins?: discussion_board_adminsCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    discussion_board_user_profiles?: discussion_board_user_profilesCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    discussion_board_thread?: discussion_board_threadCreateNestedManyWithoutCreator_userInput\n    discussion_board_post?: discussion_board_postCreateNestedManyWithoutAuthor_userInput\n    discussion_board_comment?: discussion_board_commentCreateNestedManyWithoutAuthor_userInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutUserInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutUserInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutUserInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutRecipient_userInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutUserInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportCreateNestedManyWithoutReported_userInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportCreateNestedManyWithoutReporting_userInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutUserInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logCreateNestedManyWithoutActorInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logCreateNestedManyWithoutAffected_userInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutUserInput\n    discussion_board_ban?: discussion_board_banCreateNestedManyWithoutUserInput\n    discussion_board_user_activity?: discussion_board_user_activityCreateNestedOneWithoutDiscussion_board_userInput\n  }\n\n  export type discussion_board_usersUncheckedCreateWithoutDiscussion_board_user_settingsInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUncheckedCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    discussion_board_admins?: discussion_board_adminsUncheckedCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUncheckedCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    discussion_board_thread?: discussion_board_threadUncheckedCreateNestedManyWithoutCreator_userInput\n    discussion_board_post?: discussion_board_postUncheckedCreateNestedManyWithoutAuthor_userInput\n    discussion_board_comment?: discussion_board_commentUncheckedCreateNestedManyWithoutAuthor_userInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutRecipient_userInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUncheckedCreateNestedManyWithoutReported_userInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUncheckedCreateNestedManyWithoutReporting_userInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUncheckedCreateNestedManyWithoutActorInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUncheckedCreateNestedManyWithoutAffected_userInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_ban?: discussion_board_banUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_user_activity?: discussion_board_user_activityUncheckedCreateNestedOneWithoutDiscussion_board_userInput\n  }\n\n  export type discussion_board_usersCreateOrConnectWithoutDiscussion_board_user_settingsInput = {\n    where: discussion_board_usersWhereUniqueInput\n    create: XOR<discussion_board_usersCreateWithoutDiscussion_board_user_settingsInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_user_settingsInput>\n  }\n\n  export type discussion_board_usersUpsertWithoutDiscussion_board_user_settingsInput = {\n    update: XOR<discussion_board_usersUpdateWithoutDiscussion_board_user_settingsInput, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_user_settingsInput>\n    create: XOR<discussion_board_usersCreateWithoutDiscussion_board_user_settingsInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_user_settingsInput>\n    where?: discussion_board_usersWhereInput\n  }\n\n  export type discussion_board_usersUpdateToOneWithWhereWithoutDiscussion_board_user_settingsInput = {\n    where?: discussion_board_usersWhereInput\n    data: XOR<discussion_board_usersUpdateWithoutDiscussion_board_user_settingsInput, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_user_settingsInput>\n  }\n\n  export type discussion_board_usersUpdateWithoutDiscussion_board_user_settingsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput\n    discussion_board_admins?: discussion_board_adminsUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput\n    discussion_board_thread?: discussion_board_threadUpdateManyWithoutCreator_userNestedInput\n    discussion_board_post?: discussion_board_postUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_comment?: discussion_board_commentUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutUserNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutUserNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutUserNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutRecipient_userNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutUserNestedInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUpdateManyWithoutReported_userNestedInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUpdateManyWithoutReporting_userNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutUserNestedInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUpdateManyWithoutActorNestedInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUpdateManyWithoutAffected_userNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutUserNestedInput\n    discussion_board_ban?: discussion_board_banUpdateManyWithoutUserNestedInput\n    discussion_board_user_activity?: discussion_board_user_activityUpdateOneWithoutDiscussion_board_userNestedInput\n  }\n\n  export type discussion_board_usersUncheckedUpdateWithoutDiscussion_board_user_settingsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUncheckedUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput\n    discussion_board_admins?: discussion_board_adminsUncheckedUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUncheckedUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput\n    discussion_board_thread?: discussion_board_threadUncheckedUpdateManyWithoutCreator_userNestedInput\n    discussion_board_post?: discussion_board_postUncheckedUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_comment?: discussion_board_commentUncheckedUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutRecipient_userNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUncheckedUpdateManyWithoutReported_userNestedInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUncheckedUpdateManyWithoutReporting_userNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUncheckedUpdateManyWithoutActorNestedInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUncheckedUpdateManyWithoutAffected_userNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_ban?: discussion_board_banUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_user_activity?: discussion_board_user_activityUncheckedUpdateOneWithoutDiscussion_board_userNestedInput\n  }\n\n  export type discussion_board_usersCreateWithoutDiscussion_board_threadInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    discussion_board_admins?: discussion_board_adminsCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    discussion_board_user_profiles?: discussion_board_user_profilesCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    discussion_board_user_settings?: discussion_board_user_settingsCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    discussion_board_post?: discussion_board_postCreateNestedManyWithoutAuthor_userInput\n    discussion_board_comment?: discussion_board_commentCreateNestedManyWithoutAuthor_userInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutUserInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutUserInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutUserInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutRecipient_userInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutUserInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportCreateNestedManyWithoutReported_userInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportCreateNestedManyWithoutReporting_userInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutUserInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logCreateNestedManyWithoutActorInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logCreateNestedManyWithoutAffected_userInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutUserInput\n    discussion_board_ban?: discussion_board_banCreateNestedManyWithoutUserInput\n    discussion_board_user_activity?: discussion_board_user_activityCreateNestedOneWithoutDiscussion_board_userInput\n  }\n\n  export type discussion_board_usersUncheckedCreateWithoutDiscussion_board_threadInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUncheckedCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    discussion_board_admins?: discussion_board_adminsUncheckedCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUncheckedCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    discussion_board_user_settings?: discussion_board_user_settingsUncheckedCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    discussion_board_post?: discussion_board_postUncheckedCreateNestedManyWithoutAuthor_userInput\n    discussion_board_comment?: discussion_board_commentUncheckedCreateNestedManyWithoutAuthor_userInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutRecipient_userInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUncheckedCreateNestedManyWithoutReported_userInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUncheckedCreateNestedManyWithoutReporting_userInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUncheckedCreateNestedManyWithoutActorInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUncheckedCreateNestedManyWithoutAffected_userInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_ban?: discussion_board_banUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_user_activity?: discussion_board_user_activityUncheckedCreateNestedOneWithoutDiscussion_board_userInput\n  }\n\n  export type discussion_board_usersCreateOrConnectWithoutDiscussion_board_threadInput = {\n    where: discussion_board_usersWhereUniqueInput\n    create: XOR<discussion_board_usersCreateWithoutDiscussion_board_threadInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_threadInput>\n  }\n\n  export type discussion_board_thread_categoryCreateWithoutDiscussion_board_threadInput = {\n    id: string\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussion_board_thread_categoryUncheckedCreateWithoutDiscussion_board_threadInput = {\n    id: string\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussion_board_thread_categoryCreateOrConnectWithoutDiscussion_board_threadInput = {\n    where: discussion_board_thread_categoryWhereUniqueInput\n    create: XOR<discussion_board_thread_categoryCreateWithoutDiscussion_board_threadInput, discussion_board_thread_categoryUncheckedCreateWithoutDiscussion_board_threadInput>\n  }\n\n  export type discussion_board_postCreateWithoutThreadInput = {\n    id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    author_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_postInput\n    parent_post?: discussion_board_postCreateNestedOneWithoutRecursiveInput\n    recursive?: discussion_board_postCreateNestedManyWithoutParent_postInput\n    discussion_board_comment?: discussion_board_commentCreateNestedManyWithoutPostInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutPostInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutPostInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutPostInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutPostInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutPostInput\n    discussion_board_report?: discussion_board_reportCreateNestedManyWithoutPostInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutPostInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutPostInput\n  }\n\n  export type discussion_board_postUncheckedCreateWithoutThreadInput = {\n    id: string\n    author_user_id: string\n    parent_post_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    recursive?: discussion_board_postUncheckedCreateNestedManyWithoutParent_postInput\n    discussion_board_comment?: discussion_board_commentUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_report?: discussion_board_reportUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutPostInput\n  }\n\n  export type discussion_board_postCreateOrConnectWithoutThreadInput = {\n    where: discussion_board_postWhereUniqueInput\n    create: XOR<discussion_board_postCreateWithoutThreadInput, discussion_board_postUncheckedCreateWithoutThreadInput>\n  }\n\n  export type discussion_board_postCreateManyThreadInputEnvelope = {\n    data: discussion_board_postCreateManyThreadInput | discussion_board_postCreateManyThreadInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_thread_tagCreateWithoutThreadInput = {\n    id: string\n    created_at: Date | string\n    tag_category: discussion_board_tag_categoryCreateNestedOneWithoutDiscussion_board_thread_tagInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutTagInput\n  }\n\n  export type discussion_board_thread_tagUncheckedCreateWithoutThreadInput = {\n    id: string\n    tag_id: string\n    created_at: Date | string\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutTagInput\n  }\n\n  export type discussion_board_thread_tagCreateOrConnectWithoutThreadInput = {\n    where: discussion_board_thread_tagWhereUniqueInput\n    create: XOR<discussion_board_thread_tagCreateWithoutThreadInput, discussion_board_thread_tagUncheckedCreateWithoutThreadInput>\n  }\n\n  export type discussion_board_thread_tagCreateManyThreadInputEnvelope = {\n    data: discussion_board_thread_tagCreateManyThreadInput | discussion_board_thread_tagCreateManyThreadInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type mv_discussion_thread_activityCreateWithoutThreadInput = {\n    id: string\n    reply_count: number\n    last_posted_at?: Date | string | null\n    participant_user_ids?: string | null\n  }\n\n  export type mv_discussion_thread_activityUncheckedCreateWithoutThreadInput = {\n    id: string\n    reply_count: number\n    last_posted_at?: Date | string | null\n    participant_user_ids?: string | null\n  }\n\n  export type mv_discussion_thread_activityCreateOrConnectWithoutThreadInput = {\n    where: mv_discussion_thread_activityWhereUniqueInput\n    create: XOR<mv_discussion_thread_activityCreateWithoutThreadInput, mv_discussion_thread_activityUncheckedCreateWithoutThreadInput>\n  }\n\n  export type discussion_board_voteCreateWithoutThreadInput = {\n    id: string\n    direction: string\n    created_at: Date | string\n    user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_voteInput\n    post?: discussion_board_postCreateNestedOneWithoutDiscussion_board_voteInput\n    comment?: discussion_board_commentCreateNestedOneWithoutDiscussion_board_voteInput\n  }\n\n  export type discussion_board_voteUncheckedCreateWithoutThreadInput = {\n    id: string\n    user_id: string\n    post_id?: string | null\n    comment_id?: string | null\n    direction: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_voteCreateOrConnectWithoutThreadInput = {\n    where: discussion_board_voteWhereUniqueInput\n    create: XOR<discussion_board_voteCreateWithoutThreadInput, discussion_board_voteUncheckedCreateWithoutThreadInput>\n  }\n\n  export type discussion_board_voteCreateManyThreadInputEnvelope = {\n    data: discussion_board_voteCreateManyThreadInput | discussion_board_voteCreateManyThreadInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_reactionCreateWithoutThreadInput = {\n    id: string\n    reaction_type: string\n    created_at: Date | string\n    user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_reactionInput\n    post?: discussion_board_postCreateNestedOneWithoutDiscussion_board_reactionInput\n    comment?: discussion_board_commentCreateNestedOneWithoutDiscussion_board_reactionInput\n  }\n\n  export type discussion_board_reactionUncheckedCreateWithoutThreadInput = {\n    id: string\n    user_id: string\n    post_id?: string | null\n    comment_id?: string | null\n    reaction_type: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_reactionCreateOrConnectWithoutThreadInput = {\n    where: discussion_board_reactionWhereUniqueInput\n    create: XOR<discussion_board_reactionCreateWithoutThreadInput, discussion_board_reactionUncheckedCreateWithoutThreadInput>\n  }\n\n  export type discussion_board_reactionCreateManyThreadInputEnvelope = {\n    data: discussion_board_reactionCreateManyThreadInput | discussion_board_reactionCreateManyThreadInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_bookmarkCreateWithoutThreadInput = {\n    id: string\n    created_at: Date | string\n    user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_bookmarkInput\n    post?: discussion_board_postCreateNestedOneWithoutDiscussion_board_bookmarkInput\n    comment?: discussion_board_commentCreateNestedOneWithoutDiscussion_board_bookmarkInput\n  }\n\n  export type discussion_board_bookmarkUncheckedCreateWithoutThreadInput = {\n    id: string\n    user_id: string\n    post_id?: string | null\n    comment_id?: string | null\n    created_at: Date | string\n  }\n\n  export type discussion_board_bookmarkCreateOrConnectWithoutThreadInput = {\n    where: discussion_board_bookmarkWhereUniqueInput\n    create: XOR<discussion_board_bookmarkCreateWithoutThreadInput, discussion_board_bookmarkUncheckedCreateWithoutThreadInput>\n  }\n\n  export type discussion_board_bookmarkCreateManyThreadInputEnvelope = {\n    data: discussion_board_bookmarkCreateManyThreadInput | discussion_board_bookmarkCreateManyThreadInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_notificationCreateWithoutThreadInput = {\n    id: string\n    notification_type: string\n    is_read: boolean\n    channel: string\n    created_at: Date | string\n    delivered_at?: Date | string | null\n    recipient_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_notificationInput\n    post?: discussion_board_postCreateNestedOneWithoutDiscussion_board_notificationInput\n    comment?: discussion_board_commentCreateNestedOneWithoutDiscussion_board_notificationInput\n  }\n\n  export type discussion_board_notificationUncheckedCreateWithoutThreadInput = {\n    id: string\n    recipient_user_id: string\n    post_id?: string | null\n    comment_id?: string | null\n    notification_type: string\n    is_read: boolean\n    channel: string\n    created_at: Date | string\n    delivered_at?: Date | string | null\n  }\n\n  export type discussion_board_notificationCreateOrConnectWithoutThreadInput = {\n    where: discussion_board_notificationWhereUniqueInput\n    create: XOR<discussion_board_notificationCreateWithoutThreadInput, discussion_board_notificationUncheckedCreateWithoutThreadInput>\n  }\n\n  export type discussion_board_notificationCreateManyThreadInputEnvelope = {\n    data: discussion_board_notificationCreateManyThreadInput | discussion_board_notificationCreateManyThreadInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_subscriptionCreateWithoutThreadInput = {\n    id: string\n    channel: string\n    created_at: Date | string\n    expires_at?: Date | string | null\n    user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_subscriptionInput\n    tag?: discussion_board_thread_tagCreateNestedOneWithoutDiscussion_board_subscriptionInput\n    post?: discussion_board_postCreateNestedOneWithoutDiscussion_board_subscriptionInput\n    comment?: discussion_board_commentCreateNestedOneWithoutDiscussion_board_subscriptionInput\n  }\n\n  export type discussion_board_subscriptionUncheckedCreateWithoutThreadInput = {\n    id: string\n    user_id: string\n    tag_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    channel: string\n    created_at: Date | string\n    expires_at?: Date | string | null\n  }\n\n  export type discussion_board_subscriptionCreateOrConnectWithoutThreadInput = {\n    where: discussion_board_subscriptionWhereUniqueInput\n    create: XOR<discussion_board_subscriptionCreateWithoutThreadInput, discussion_board_subscriptionUncheckedCreateWithoutThreadInput>\n  }\n\n  export type discussion_board_subscriptionCreateManyThreadInputEnvelope = {\n    data: discussion_board_subscriptionCreateManyThreadInput | discussion_board_subscriptionCreateManyThreadInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_reportCreateWithoutThreadInput = {\n    id: string\n    status: string\n    category: string\n    submitted_at: Date | string\n    resolved_at?: Date | string | null\n    details: string\n    reported_user?: discussion_board_usersCreateNestedOneWithoutDiscussion_board_report_of_reported_user_idInput\n    reporting_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_report_of_reporting_user_idInput\n    post?: discussion_board_postCreateNestedOneWithoutDiscussion_board_reportInput\n    comment?: discussion_board_commentCreateNestedOneWithoutDiscussion_board_reportInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutReportInput\n    discussion_board_ban?: discussion_board_banCreateNestedManyWithoutReportInput\n  }\n\n  export type discussion_board_reportUncheckedCreateWithoutThreadInput = {\n    id: string\n    reported_user_id?: string | null\n    reporting_user_id: string\n    post_id?: string | null\n    comment_id?: string | null\n    status: string\n    category: string\n    submitted_at: Date | string\n    resolved_at?: Date | string | null\n    details: string\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutReportInput\n    discussion_board_ban?: discussion_board_banUncheckedCreateNestedManyWithoutReportInput\n  }\n\n  export type discussion_board_reportCreateOrConnectWithoutThreadInput = {\n    where: discussion_board_reportWhereUniqueInput\n    create: XOR<discussion_board_reportCreateWithoutThreadInput, discussion_board_reportUncheckedCreateWithoutThreadInput>\n  }\n\n  export type discussion_board_reportCreateManyThreadInputEnvelope = {\n    data: discussion_board_reportCreateManyThreadInput | discussion_board_reportCreateManyThreadInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_moderator_actionCreateWithoutThreadInput = {\n    id: string\n    action_type: string\n    reason: string\n    created_at: Date | string\n    moderator: discussion_board_moderatorsCreateNestedOneWithoutDiscussion_board_moderator_actionInput\n    user?: discussion_board_usersCreateNestedOneWithoutDiscussion_board_moderator_actionInput\n    report?: discussion_board_reportCreateNestedOneWithoutDiscussion_board_moderator_actionInput\n    post?: discussion_board_postCreateNestedOneWithoutDiscussion_board_moderator_actionInput\n    comment?: discussion_board_commentCreateNestedOneWithoutDiscussion_board_moderator_actionInput\n  }\n\n  export type discussion_board_moderator_actionUncheckedCreateWithoutThreadInput = {\n    id: string\n    moderator_id: string\n    user_id?: string | null\n    report_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    action_type: string\n    reason: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_moderator_actionCreateOrConnectWithoutThreadInput = {\n    where: discussion_board_moderator_actionWhereUniqueInput\n    create: XOR<discussion_board_moderator_actionCreateWithoutThreadInput, discussion_board_moderator_actionUncheckedCreateWithoutThreadInput>\n  }\n\n  export type discussion_board_moderator_actionCreateManyThreadInputEnvelope = {\n    data: discussion_board_moderator_actionCreateManyThreadInput | discussion_board_moderator_actionCreateManyThreadInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_warningCreateWithoutThreadInput = {\n    id: string\n    reason: string\n    issued_at: Date | string\n    user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_warningInput\n    moderator: discussion_board_moderatorsCreateNestedOneWithoutDiscussion_board_warningInput\n    post?: discussion_board_postCreateNestedOneWithoutDiscussion_board_warningInput\n    comment?: discussion_board_commentCreateNestedOneWithoutDiscussion_board_warningInput\n    discussion_board_ban?: discussion_board_banCreateNestedManyWithoutWarningInput\n  }\n\n  export type discussion_board_warningUncheckedCreateWithoutThreadInput = {\n    id: string\n    user_id: string\n    moderator_id: string\n    post_id?: string | null\n    comment_id?: string | null\n    reason: string\n    issued_at: Date | string\n    discussion_board_ban?: discussion_board_banUncheckedCreateNestedManyWithoutWarningInput\n  }\n\n  export type discussion_board_warningCreateOrConnectWithoutThreadInput = {\n    where: discussion_board_warningWhereUniqueInput\n    create: XOR<discussion_board_warningCreateWithoutThreadInput, discussion_board_warningUncheckedCreateWithoutThreadInput>\n  }\n\n  export type discussion_board_warningCreateManyThreadInputEnvelope = {\n    data: discussion_board_warningCreateManyThreadInput | discussion_board_warningCreateManyThreadInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_thread_statsCreateWithoutDiscussion_board_threadInput = {\n    id: string\n    post_count: number\n    comment_count: number\n    upvote_count: number\n    downvote_count: number\n    bookmark_count: number\n    abuse_report_count: number\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussion_board_thread_statsUncheckedCreateWithoutDiscussion_board_threadInput = {\n    id: string\n    post_count: number\n    comment_count: number\n    upvote_count: number\n    downvote_count: number\n    bookmark_count: number\n    abuse_report_count: number\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussion_board_thread_statsCreateOrConnectWithoutDiscussion_board_threadInput = {\n    where: discussion_board_thread_statsWhereUniqueInput\n    create: XOR<discussion_board_thread_statsCreateWithoutDiscussion_board_threadInput, discussion_board_thread_statsUncheckedCreateWithoutDiscussion_board_threadInput>\n  }\n\n  export type discussion_board_usersUpsertWithoutDiscussion_board_threadInput = {\n    update: XOR<discussion_board_usersUpdateWithoutDiscussion_board_threadInput, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_threadInput>\n    create: XOR<discussion_board_usersCreateWithoutDiscussion_board_threadInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_threadInput>\n    where?: discussion_board_usersWhereInput\n  }\n\n  export type discussion_board_usersUpdateToOneWithWhereWithoutDiscussion_board_threadInput = {\n    where?: discussion_board_usersWhereInput\n    data: XOR<discussion_board_usersUpdateWithoutDiscussion_board_threadInput, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_threadInput>\n  }\n\n  export type discussion_board_usersUpdateWithoutDiscussion_board_threadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput\n    discussion_board_admins?: discussion_board_adminsUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_settings?: discussion_board_user_settingsUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput\n    discussion_board_post?: discussion_board_postUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_comment?: discussion_board_commentUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutUserNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutUserNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutUserNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutRecipient_userNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutUserNestedInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUpdateManyWithoutReported_userNestedInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUpdateManyWithoutReporting_userNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutUserNestedInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUpdateManyWithoutActorNestedInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUpdateManyWithoutAffected_userNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutUserNestedInput\n    discussion_board_ban?: discussion_board_banUpdateManyWithoutUserNestedInput\n    discussion_board_user_activity?: discussion_board_user_activityUpdateOneWithoutDiscussion_board_userNestedInput\n  }\n\n  export type discussion_board_usersUncheckedUpdateWithoutDiscussion_board_threadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUncheckedUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput\n    discussion_board_admins?: discussion_board_adminsUncheckedUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUncheckedUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_settings?: discussion_board_user_settingsUncheckedUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput\n    discussion_board_post?: discussion_board_postUncheckedUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_comment?: discussion_board_commentUncheckedUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutRecipient_userNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUncheckedUpdateManyWithoutReported_userNestedInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUncheckedUpdateManyWithoutReporting_userNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUncheckedUpdateManyWithoutActorNestedInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUncheckedUpdateManyWithoutAffected_userNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_ban?: discussion_board_banUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_user_activity?: discussion_board_user_activityUncheckedUpdateOneWithoutDiscussion_board_userNestedInput\n  }\n\n  export type discussion_board_thread_categoryUpsertWithoutDiscussion_board_threadInput = {\n    update: XOR<discussion_board_thread_categoryUpdateWithoutDiscussion_board_threadInput, discussion_board_thread_categoryUncheckedUpdateWithoutDiscussion_board_threadInput>\n    create: XOR<discussion_board_thread_categoryCreateWithoutDiscussion_board_threadInput, discussion_board_thread_categoryUncheckedCreateWithoutDiscussion_board_threadInput>\n    where?: discussion_board_thread_categoryWhereInput\n  }\n\n  export type discussion_board_thread_categoryUpdateToOneWithWhereWithoutDiscussion_board_threadInput = {\n    where?: discussion_board_thread_categoryWhereInput\n    data: XOR<discussion_board_thread_categoryUpdateWithoutDiscussion_board_threadInput, discussion_board_thread_categoryUncheckedUpdateWithoutDiscussion_board_threadInput>\n  }\n\n  export type discussion_board_thread_categoryUpdateWithoutDiscussion_board_threadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_thread_categoryUncheckedUpdateWithoutDiscussion_board_threadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_postUpsertWithWhereUniqueWithoutThreadInput = {\n    where: discussion_board_postWhereUniqueInput\n    update: XOR<discussion_board_postUpdateWithoutThreadInput, discussion_board_postUncheckedUpdateWithoutThreadInput>\n    create: XOR<discussion_board_postCreateWithoutThreadInput, discussion_board_postUncheckedCreateWithoutThreadInput>\n  }\n\n  export type discussion_board_postUpdateWithWhereUniqueWithoutThreadInput = {\n    where: discussion_board_postWhereUniqueInput\n    data: XOR<discussion_board_postUpdateWithoutThreadInput, discussion_board_postUncheckedUpdateWithoutThreadInput>\n  }\n\n  export type discussion_board_postUpdateManyWithWhereWithoutThreadInput = {\n    where: discussion_board_postScalarWhereInput\n    data: XOR<discussion_board_postUpdateManyMutationInput, discussion_board_postUncheckedUpdateManyWithoutThreadInput>\n  }\n\n  export type discussion_board_thread_tagUpsertWithWhereUniqueWithoutThreadInput = {\n    where: discussion_board_thread_tagWhereUniqueInput\n    update: XOR<discussion_board_thread_tagUpdateWithoutThreadInput, discussion_board_thread_tagUncheckedUpdateWithoutThreadInput>\n    create: XOR<discussion_board_thread_tagCreateWithoutThreadInput, discussion_board_thread_tagUncheckedCreateWithoutThreadInput>\n  }\n\n  export type discussion_board_thread_tagUpdateWithWhereUniqueWithoutThreadInput = {\n    where: discussion_board_thread_tagWhereUniqueInput\n    data: XOR<discussion_board_thread_tagUpdateWithoutThreadInput, discussion_board_thread_tagUncheckedUpdateWithoutThreadInput>\n  }\n\n  export type discussion_board_thread_tagUpdateManyWithWhereWithoutThreadInput = {\n    where: discussion_board_thread_tagScalarWhereInput\n    data: XOR<discussion_board_thread_tagUpdateManyMutationInput, discussion_board_thread_tagUncheckedUpdateManyWithoutThreadInput>\n  }\n\n  export type discussion_board_thread_tagScalarWhereInput = {\n    AND?: discussion_board_thread_tagScalarWhereInput | discussion_board_thread_tagScalarWhereInput[]\n    OR?: discussion_board_thread_tagScalarWhereInput[]\n    NOT?: discussion_board_thread_tagScalarWhereInput | discussion_board_thread_tagScalarWhereInput[]\n    id?: UuidFilter<\"discussion_board_thread_tag\"> | string\n    thread_id?: UuidFilter<\"discussion_board_thread_tag\"> | string\n    tag_id?: UuidFilter<\"discussion_board_thread_tag\"> | string\n    created_at?: DateTimeFilter<\"discussion_board_thread_tag\"> | Date | string\n  }\n\n  export type mv_discussion_thread_activityUpsertWithoutThreadInput = {\n    update: XOR<mv_discussion_thread_activityUpdateWithoutThreadInput, mv_discussion_thread_activityUncheckedUpdateWithoutThreadInput>\n    create: XOR<mv_discussion_thread_activityCreateWithoutThreadInput, mv_discussion_thread_activityUncheckedCreateWithoutThreadInput>\n    where?: mv_discussion_thread_activityWhereInput\n  }\n\n  export type mv_discussion_thread_activityUpdateToOneWithWhereWithoutThreadInput = {\n    where?: mv_discussion_thread_activityWhereInput\n    data: XOR<mv_discussion_thread_activityUpdateWithoutThreadInput, mv_discussion_thread_activityUncheckedUpdateWithoutThreadInput>\n  }\n\n  export type mv_discussion_thread_activityUpdateWithoutThreadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reply_count?: IntFieldUpdateOperationsInput | number\n    last_posted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    participant_user_ids?: NullableStringFieldUpdateOperationsInput | string | null\n  }\n\n  export type mv_discussion_thread_activityUncheckedUpdateWithoutThreadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reply_count?: IntFieldUpdateOperationsInput | number\n    last_posted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    participant_user_ids?: NullableStringFieldUpdateOperationsInput | string | null\n  }\n\n  export type discussion_board_voteUpsertWithWhereUniqueWithoutThreadInput = {\n    where: discussion_board_voteWhereUniqueInput\n    update: XOR<discussion_board_voteUpdateWithoutThreadInput, discussion_board_voteUncheckedUpdateWithoutThreadInput>\n    create: XOR<discussion_board_voteCreateWithoutThreadInput, discussion_board_voteUncheckedCreateWithoutThreadInput>\n  }\n\n  export type discussion_board_voteUpdateWithWhereUniqueWithoutThreadInput = {\n    where: discussion_board_voteWhereUniqueInput\n    data: XOR<discussion_board_voteUpdateWithoutThreadInput, discussion_board_voteUncheckedUpdateWithoutThreadInput>\n  }\n\n  export type discussion_board_voteUpdateManyWithWhereWithoutThreadInput = {\n    where: discussion_board_voteScalarWhereInput\n    data: XOR<discussion_board_voteUpdateManyMutationInput, discussion_board_voteUncheckedUpdateManyWithoutThreadInput>\n  }\n\n  export type discussion_board_reactionUpsertWithWhereUniqueWithoutThreadInput = {\n    where: discussion_board_reactionWhereUniqueInput\n    update: XOR<discussion_board_reactionUpdateWithoutThreadInput, discussion_board_reactionUncheckedUpdateWithoutThreadInput>\n    create: XOR<discussion_board_reactionCreateWithoutThreadInput, discussion_board_reactionUncheckedCreateWithoutThreadInput>\n  }\n\n  export type discussion_board_reactionUpdateWithWhereUniqueWithoutThreadInput = {\n    where: discussion_board_reactionWhereUniqueInput\n    data: XOR<discussion_board_reactionUpdateWithoutThreadInput, discussion_board_reactionUncheckedUpdateWithoutThreadInput>\n  }\n\n  export type discussion_board_reactionUpdateManyWithWhereWithoutThreadInput = {\n    where: discussion_board_reactionScalarWhereInput\n    data: XOR<discussion_board_reactionUpdateManyMutationInput, discussion_board_reactionUncheckedUpdateManyWithoutThreadInput>\n  }\n\n  export type discussion_board_bookmarkUpsertWithWhereUniqueWithoutThreadInput = {\n    where: discussion_board_bookmarkWhereUniqueInput\n    update: XOR<discussion_board_bookmarkUpdateWithoutThreadInput, discussion_board_bookmarkUncheckedUpdateWithoutThreadInput>\n    create: XOR<discussion_board_bookmarkCreateWithoutThreadInput, discussion_board_bookmarkUncheckedCreateWithoutThreadInput>\n  }\n\n  export type discussion_board_bookmarkUpdateWithWhereUniqueWithoutThreadInput = {\n    where: discussion_board_bookmarkWhereUniqueInput\n    data: XOR<discussion_board_bookmarkUpdateWithoutThreadInput, discussion_board_bookmarkUncheckedUpdateWithoutThreadInput>\n  }\n\n  export type discussion_board_bookmarkUpdateManyWithWhereWithoutThreadInput = {\n    where: discussion_board_bookmarkScalarWhereInput\n    data: XOR<discussion_board_bookmarkUpdateManyMutationInput, discussion_board_bookmarkUncheckedUpdateManyWithoutThreadInput>\n  }\n\n  export type discussion_board_notificationUpsertWithWhereUniqueWithoutThreadInput = {\n    where: discussion_board_notificationWhereUniqueInput\n    update: XOR<discussion_board_notificationUpdateWithoutThreadInput, discussion_board_notificationUncheckedUpdateWithoutThreadInput>\n    create: XOR<discussion_board_notificationCreateWithoutThreadInput, discussion_board_notificationUncheckedCreateWithoutThreadInput>\n  }\n\n  export type discussion_board_notificationUpdateWithWhereUniqueWithoutThreadInput = {\n    where: discussion_board_notificationWhereUniqueInput\n    data: XOR<discussion_board_notificationUpdateWithoutThreadInput, discussion_board_notificationUncheckedUpdateWithoutThreadInput>\n  }\n\n  export type discussion_board_notificationUpdateManyWithWhereWithoutThreadInput = {\n    where: discussion_board_notificationScalarWhereInput\n    data: XOR<discussion_board_notificationUpdateManyMutationInput, discussion_board_notificationUncheckedUpdateManyWithoutThreadInput>\n  }\n\n  export type discussion_board_subscriptionUpsertWithWhereUniqueWithoutThreadInput = {\n    where: discussion_board_subscriptionWhereUniqueInput\n    update: XOR<discussion_board_subscriptionUpdateWithoutThreadInput, discussion_board_subscriptionUncheckedUpdateWithoutThreadInput>\n    create: XOR<discussion_board_subscriptionCreateWithoutThreadInput, discussion_board_subscriptionUncheckedCreateWithoutThreadInput>\n  }\n\n  export type discussion_board_subscriptionUpdateWithWhereUniqueWithoutThreadInput = {\n    where: discussion_board_subscriptionWhereUniqueInput\n    data: XOR<discussion_board_subscriptionUpdateWithoutThreadInput, discussion_board_subscriptionUncheckedUpdateWithoutThreadInput>\n  }\n\n  export type discussion_board_subscriptionUpdateManyWithWhereWithoutThreadInput = {\n    where: discussion_board_subscriptionScalarWhereInput\n    data: XOR<discussion_board_subscriptionUpdateManyMutationInput, discussion_board_subscriptionUncheckedUpdateManyWithoutThreadInput>\n  }\n\n  export type discussion_board_reportUpsertWithWhereUniqueWithoutThreadInput = {\n    where: discussion_board_reportWhereUniqueInput\n    update: XOR<discussion_board_reportUpdateWithoutThreadInput, discussion_board_reportUncheckedUpdateWithoutThreadInput>\n    create: XOR<discussion_board_reportCreateWithoutThreadInput, discussion_board_reportUncheckedCreateWithoutThreadInput>\n  }\n\n  export type discussion_board_reportUpdateWithWhereUniqueWithoutThreadInput = {\n    where: discussion_board_reportWhereUniqueInput\n    data: XOR<discussion_board_reportUpdateWithoutThreadInput, discussion_board_reportUncheckedUpdateWithoutThreadInput>\n  }\n\n  export type discussion_board_reportUpdateManyWithWhereWithoutThreadInput = {\n    where: discussion_board_reportScalarWhereInput\n    data: XOR<discussion_board_reportUpdateManyMutationInput, discussion_board_reportUncheckedUpdateManyWithoutThreadInput>\n  }\n\n  export type discussion_board_moderator_actionUpsertWithWhereUniqueWithoutThreadInput = {\n    where: discussion_board_moderator_actionWhereUniqueInput\n    update: XOR<discussion_board_moderator_actionUpdateWithoutThreadInput, discussion_board_moderator_actionUncheckedUpdateWithoutThreadInput>\n    create: XOR<discussion_board_moderator_actionCreateWithoutThreadInput, discussion_board_moderator_actionUncheckedCreateWithoutThreadInput>\n  }\n\n  export type discussion_board_moderator_actionUpdateWithWhereUniqueWithoutThreadInput = {\n    where: discussion_board_moderator_actionWhereUniqueInput\n    data: XOR<discussion_board_moderator_actionUpdateWithoutThreadInput, discussion_board_moderator_actionUncheckedUpdateWithoutThreadInput>\n  }\n\n  export type discussion_board_moderator_actionUpdateManyWithWhereWithoutThreadInput = {\n    where: discussion_board_moderator_actionScalarWhereInput\n    data: XOR<discussion_board_moderator_actionUpdateManyMutationInput, discussion_board_moderator_actionUncheckedUpdateManyWithoutThreadInput>\n  }\n\n  export type discussion_board_warningUpsertWithWhereUniqueWithoutThreadInput = {\n    where: discussion_board_warningWhereUniqueInput\n    update: XOR<discussion_board_warningUpdateWithoutThreadInput, discussion_board_warningUncheckedUpdateWithoutThreadInput>\n    create: XOR<discussion_board_warningCreateWithoutThreadInput, discussion_board_warningUncheckedCreateWithoutThreadInput>\n  }\n\n  export type discussion_board_warningUpdateWithWhereUniqueWithoutThreadInput = {\n    where: discussion_board_warningWhereUniqueInput\n    data: XOR<discussion_board_warningUpdateWithoutThreadInput, discussion_board_warningUncheckedUpdateWithoutThreadInput>\n  }\n\n  export type discussion_board_warningUpdateManyWithWhereWithoutThreadInput = {\n    where: discussion_board_warningScalarWhereInput\n    data: XOR<discussion_board_warningUpdateManyMutationInput, discussion_board_warningUncheckedUpdateManyWithoutThreadInput>\n  }\n\n  export type discussion_board_thread_statsUpsertWithoutDiscussion_board_threadInput = {\n    update: XOR<discussion_board_thread_statsUpdateWithoutDiscussion_board_threadInput, discussion_board_thread_statsUncheckedUpdateWithoutDiscussion_board_threadInput>\n    create: XOR<discussion_board_thread_statsCreateWithoutDiscussion_board_threadInput, discussion_board_thread_statsUncheckedCreateWithoutDiscussion_board_threadInput>\n    where?: discussion_board_thread_statsWhereInput\n  }\n\n  export type discussion_board_thread_statsUpdateToOneWithWhereWithoutDiscussion_board_threadInput = {\n    where?: discussion_board_thread_statsWhereInput\n    data: XOR<discussion_board_thread_statsUpdateWithoutDiscussion_board_threadInput, discussion_board_thread_statsUncheckedUpdateWithoutDiscussion_board_threadInput>\n  }\n\n  export type discussion_board_thread_statsUpdateWithoutDiscussion_board_threadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_count?: IntFieldUpdateOperationsInput | number\n    comment_count?: IntFieldUpdateOperationsInput | number\n    upvote_count?: IntFieldUpdateOperationsInput | number\n    downvote_count?: IntFieldUpdateOperationsInput | number\n    bookmark_count?: IntFieldUpdateOperationsInput | number\n    abuse_report_count?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_thread_statsUncheckedUpdateWithoutDiscussion_board_threadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_count?: IntFieldUpdateOperationsInput | number\n    comment_count?: IntFieldUpdateOperationsInput | number\n    upvote_count?: IntFieldUpdateOperationsInput | number\n    downvote_count?: IntFieldUpdateOperationsInput | number\n    bookmark_count?: IntFieldUpdateOperationsInput | number\n    abuse_report_count?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_threadCreateWithoutDiscussion_board_postInput = {\n    id: string\n    title: string\n    body: string\n    is_locked: boolean\n    is_pinned: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    creator_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_threadInput\n    category: discussion_board_thread_categoryCreateNestedOneWithoutDiscussion_board_threadInput\n    discussion_board_thread_tag?: discussion_board_thread_tagCreateNestedManyWithoutThreadInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityCreateNestedOneWithoutThreadInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutThreadInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutThreadInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutThreadInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutThreadInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutThreadInput\n    discussion_board_report?: discussion_board_reportCreateNestedManyWithoutThreadInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutThreadInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutThreadInput\n    discussion_board_thread_stats?: discussion_board_thread_statsCreateNestedOneWithoutDiscussion_board_threadInput\n  }\n\n  export type discussion_board_threadUncheckedCreateWithoutDiscussion_board_postInput = {\n    id: string\n    creator_user_id: string\n    category_id: string\n    title: string\n    body: string\n    is_locked: boolean\n    is_pinned: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_thread_tag?: discussion_board_thread_tagUncheckedCreateNestedManyWithoutThreadInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUncheckedCreateNestedOneWithoutThreadInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_report?: discussion_board_reportUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUncheckedCreateNestedOneWithoutDiscussion_board_threadInput\n  }\n\n  export type discussion_board_threadCreateOrConnectWithoutDiscussion_board_postInput = {\n    where: discussion_board_threadWhereUniqueInput\n    create: XOR<discussion_board_threadCreateWithoutDiscussion_board_postInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_postInput>\n  }\n\n  export type discussion_board_usersCreateWithoutDiscussion_board_postInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    discussion_board_admins?: discussion_board_adminsCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    discussion_board_user_profiles?: discussion_board_user_profilesCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    discussion_board_user_settings?: discussion_board_user_settingsCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    discussion_board_thread?: discussion_board_threadCreateNestedManyWithoutCreator_userInput\n    discussion_board_comment?: discussion_board_commentCreateNestedManyWithoutAuthor_userInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutUserInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutUserInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutUserInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutRecipient_userInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutUserInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportCreateNestedManyWithoutReported_userInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportCreateNestedManyWithoutReporting_userInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutUserInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logCreateNestedManyWithoutActorInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logCreateNestedManyWithoutAffected_userInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutUserInput\n    discussion_board_ban?: discussion_board_banCreateNestedManyWithoutUserInput\n    discussion_board_user_activity?: discussion_board_user_activityCreateNestedOneWithoutDiscussion_board_userInput\n  }\n\n  export type discussion_board_usersUncheckedCreateWithoutDiscussion_board_postInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUncheckedCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    discussion_board_admins?: discussion_board_adminsUncheckedCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUncheckedCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    discussion_board_user_settings?: discussion_board_user_settingsUncheckedCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    discussion_board_thread?: discussion_board_threadUncheckedCreateNestedManyWithoutCreator_userInput\n    discussion_board_comment?: discussion_board_commentUncheckedCreateNestedManyWithoutAuthor_userInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutRecipient_userInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUncheckedCreateNestedManyWithoutReported_userInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUncheckedCreateNestedManyWithoutReporting_userInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUncheckedCreateNestedManyWithoutActorInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUncheckedCreateNestedManyWithoutAffected_userInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_ban?: discussion_board_banUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_user_activity?: discussion_board_user_activityUncheckedCreateNestedOneWithoutDiscussion_board_userInput\n  }\n\n  export type discussion_board_usersCreateOrConnectWithoutDiscussion_board_postInput = {\n    where: discussion_board_usersWhereUniqueInput\n    create: XOR<discussion_board_usersCreateWithoutDiscussion_board_postInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_postInput>\n  }\n\n  export type discussion_board_postCreateWithoutRecursiveInput = {\n    id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    thread: discussion_board_threadCreateNestedOneWithoutDiscussion_board_postInput\n    author_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_postInput\n    parent_post?: discussion_board_postCreateNestedOneWithoutRecursiveInput\n    discussion_board_comment?: discussion_board_commentCreateNestedManyWithoutPostInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutPostInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutPostInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutPostInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutPostInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutPostInput\n    discussion_board_report?: discussion_board_reportCreateNestedManyWithoutPostInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutPostInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutPostInput\n  }\n\n  export type discussion_board_postUncheckedCreateWithoutRecursiveInput = {\n    id: string\n    thread_id: string\n    author_user_id: string\n    parent_post_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_comment?: discussion_board_commentUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_report?: discussion_board_reportUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutPostInput\n  }\n\n  export type discussion_board_postCreateOrConnectWithoutRecursiveInput = {\n    where: discussion_board_postWhereUniqueInput\n    create: XOR<discussion_board_postCreateWithoutRecursiveInput, discussion_board_postUncheckedCreateWithoutRecursiveInput>\n  }\n\n  export type discussion_board_postCreateWithoutParent_postInput = {\n    id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    thread: discussion_board_threadCreateNestedOneWithoutDiscussion_board_postInput\n    author_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_postInput\n    recursive?: discussion_board_postCreateNestedManyWithoutParent_postInput\n    discussion_board_comment?: discussion_board_commentCreateNestedManyWithoutPostInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutPostInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutPostInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutPostInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutPostInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutPostInput\n    discussion_board_report?: discussion_board_reportCreateNestedManyWithoutPostInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutPostInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutPostInput\n  }\n\n  export type discussion_board_postUncheckedCreateWithoutParent_postInput = {\n    id: string\n    thread_id: string\n    author_user_id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    recursive?: discussion_board_postUncheckedCreateNestedManyWithoutParent_postInput\n    discussion_board_comment?: discussion_board_commentUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_report?: discussion_board_reportUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutPostInput\n  }\n\n  export type discussion_board_postCreateOrConnectWithoutParent_postInput = {\n    where: discussion_board_postWhereUniqueInput\n    create: XOR<discussion_board_postCreateWithoutParent_postInput, discussion_board_postUncheckedCreateWithoutParent_postInput>\n  }\n\n  export type discussion_board_postCreateManyParent_postInputEnvelope = {\n    data: discussion_board_postCreateManyParent_postInput | discussion_board_postCreateManyParent_postInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_commentCreateWithoutPostInput = {\n    id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    author_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_commentInput\n    parent_comment?: discussion_board_commentCreateNestedOneWithoutRecursiveInput\n    recursive?: discussion_board_commentCreateNestedManyWithoutParent_commentInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutCommentInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutCommentInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutCommentInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutCommentInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutCommentInput\n    discussion_board_report?: discussion_board_reportCreateNestedManyWithoutCommentInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutCommentInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutCommentInput\n  }\n\n  export type discussion_board_commentUncheckedCreateWithoutPostInput = {\n    id: string\n    author_user_id: string\n    parent_comment_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    recursive?: discussion_board_commentUncheckedCreateNestedManyWithoutParent_commentInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_report?: discussion_board_reportUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutCommentInput\n  }\n\n  export type discussion_board_commentCreateOrConnectWithoutPostInput = {\n    where: discussion_board_commentWhereUniqueInput\n    create: XOR<discussion_board_commentCreateWithoutPostInput, discussion_board_commentUncheckedCreateWithoutPostInput>\n  }\n\n  export type discussion_board_commentCreateManyPostInputEnvelope = {\n    data: discussion_board_commentCreateManyPostInput | discussion_board_commentCreateManyPostInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_voteCreateWithoutPostInput = {\n    id: string\n    direction: string\n    created_at: Date | string\n    user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_voteInput\n    thread?: discussion_board_threadCreateNestedOneWithoutDiscussion_board_voteInput\n    comment?: discussion_board_commentCreateNestedOneWithoutDiscussion_board_voteInput\n  }\n\n  export type discussion_board_voteUncheckedCreateWithoutPostInput = {\n    id: string\n    user_id: string\n    thread_id?: string | null\n    comment_id?: string | null\n    direction: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_voteCreateOrConnectWithoutPostInput = {\n    where: discussion_board_voteWhereUniqueInput\n    create: XOR<discussion_board_voteCreateWithoutPostInput, discussion_board_voteUncheckedCreateWithoutPostInput>\n  }\n\n  export type discussion_board_voteCreateManyPostInputEnvelope = {\n    data: discussion_board_voteCreateManyPostInput | discussion_board_voteCreateManyPostInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_reactionCreateWithoutPostInput = {\n    id: string\n    reaction_type: string\n    created_at: Date | string\n    user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_reactionInput\n    thread?: discussion_board_threadCreateNestedOneWithoutDiscussion_board_reactionInput\n    comment?: discussion_board_commentCreateNestedOneWithoutDiscussion_board_reactionInput\n  }\n\n  export type discussion_board_reactionUncheckedCreateWithoutPostInput = {\n    id: string\n    user_id: string\n    thread_id?: string | null\n    comment_id?: string | null\n    reaction_type: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_reactionCreateOrConnectWithoutPostInput = {\n    where: discussion_board_reactionWhereUniqueInput\n    create: XOR<discussion_board_reactionCreateWithoutPostInput, discussion_board_reactionUncheckedCreateWithoutPostInput>\n  }\n\n  export type discussion_board_reactionCreateManyPostInputEnvelope = {\n    data: discussion_board_reactionCreateManyPostInput | discussion_board_reactionCreateManyPostInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_bookmarkCreateWithoutPostInput = {\n    id: string\n    created_at: Date | string\n    user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_bookmarkInput\n    thread?: discussion_board_threadCreateNestedOneWithoutDiscussion_board_bookmarkInput\n    comment?: discussion_board_commentCreateNestedOneWithoutDiscussion_board_bookmarkInput\n  }\n\n  export type discussion_board_bookmarkUncheckedCreateWithoutPostInput = {\n    id: string\n    user_id: string\n    thread_id?: string | null\n    comment_id?: string | null\n    created_at: Date | string\n  }\n\n  export type discussion_board_bookmarkCreateOrConnectWithoutPostInput = {\n    where: discussion_board_bookmarkWhereUniqueInput\n    create: XOR<discussion_board_bookmarkCreateWithoutPostInput, discussion_board_bookmarkUncheckedCreateWithoutPostInput>\n  }\n\n  export type discussion_board_bookmarkCreateManyPostInputEnvelope = {\n    data: discussion_board_bookmarkCreateManyPostInput | discussion_board_bookmarkCreateManyPostInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_notificationCreateWithoutPostInput = {\n    id: string\n    notification_type: string\n    is_read: boolean\n    channel: string\n    created_at: Date | string\n    delivered_at?: Date | string | null\n    recipient_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_notificationInput\n    thread?: discussion_board_threadCreateNestedOneWithoutDiscussion_board_notificationInput\n    comment?: discussion_board_commentCreateNestedOneWithoutDiscussion_board_notificationInput\n  }\n\n  export type discussion_board_notificationUncheckedCreateWithoutPostInput = {\n    id: string\n    recipient_user_id: string\n    thread_id?: string | null\n    comment_id?: string | null\n    notification_type: string\n    is_read: boolean\n    channel: string\n    created_at: Date | string\n    delivered_at?: Date | string | null\n  }\n\n  export type discussion_board_notificationCreateOrConnectWithoutPostInput = {\n    where: discussion_board_notificationWhereUniqueInput\n    create: XOR<discussion_board_notificationCreateWithoutPostInput, discussion_board_notificationUncheckedCreateWithoutPostInput>\n  }\n\n  export type discussion_board_notificationCreateManyPostInputEnvelope = {\n    data: discussion_board_notificationCreateManyPostInput | discussion_board_notificationCreateManyPostInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_subscriptionCreateWithoutPostInput = {\n    id: string\n    channel: string\n    created_at: Date | string\n    expires_at?: Date | string | null\n    user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_subscriptionInput\n    thread?: discussion_board_threadCreateNestedOneWithoutDiscussion_board_subscriptionInput\n    tag?: discussion_board_thread_tagCreateNestedOneWithoutDiscussion_board_subscriptionInput\n    comment?: discussion_board_commentCreateNestedOneWithoutDiscussion_board_subscriptionInput\n  }\n\n  export type discussion_board_subscriptionUncheckedCreateWithoutPostInput = {\n    id: string\n    user_id: string\n    thread_id?: string | null\n    tag_id?: string | null\n    comment_id?: string | null\n    channel: string\n    created_at: Date | string\n    expires_at?: Date | string | null\n  }\n\n  export type discussion_board_subscriptionCreateOrConnectWithoutPostInput = {\n    where: discussion_board_subscriptionWhereUniqueInput\n    create: XOR<discussion_board_subscriptionCreateWithoutPostInput, discussion_board_subscriptionUncheckedCreateWithoutPostInput>\n  }\n\n  export type discussion_board_subscriptionCreateManyPostInputEnvelope = {\n    data: discussion_board_subscriptionCreateManyPostInput | discussion_board_subscriptionCreateManyPostInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_reportCreateWithoutPostInput = {\n    id: string\n    status: string\n    category: string\n    submitted_at: Date | string\n    resolved_at?: Date | string | null\n    details: string\n    reported_user?: discussion_board_usersCreateNestedOneWithoutDiscussion_board_report_of_reported_user_idInput\n    reporting_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_report_of_reporting_user_idInput\n    thread?: discussion_board_threadCreateNestedOneWithoutDiscussion_board_reportInput\n    comment?: discussion_board_commentCreateNestedOneWithoutDiscussion_board_reportInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutReportInput\n    discussion_board_ban?: discussion_board_banCreateNestedManyWithoutReportInput\n  }\n\n  export type discussion_board_reportUncheckedCreateWithoutPostInput = {\n    id: string\n    reported_user_id?: string | null\n    reporting_user_id: string\n    thread_id?: string | null\n    comment_id?: string | null\n    status: string\n    category: string\n    submitted_at: Date | string\n    resolved_at?: Date | string | null\n    details: string\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutReportInput\n    discussion_board_ban?: discussion_board_banUncheckedCreateNestedManyWithoutReportInput\n  }\n\n  export type discussion_board_reportCreateOrConnectWithoutPostInput = {\n    where: discussion_board_reportWhereUniqueInput\n    create: XOR<discussion_board_reportCreateWithoutPostInput, discussion_board_reportUncheckedCreateWithoutPostInput>\n  }\n\n  export type discussion_board_reportCreateManyPostInputEnvelope = {\n    data: discussion_board_reportCreateManyPostInput | discussion_board_reportCreateManyPostInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_moderator_actionCreateWithoutPostInput = {\n    id: string\n    action_type: string\n    reason: string\n    created_at: Date | string\n    moderator: discussion_board_moderatorsCreateNestedOneWithoutDiscussion_board_moderator_actionInput\n    user?: discussion_board_usersCreateNestedOneWithoutDiscussion_board_moderator_actionInput\n    report?: discussion_board_reportCreateNestedOneWithoutDiscussion_board_moderator_actionInput\n    thread?: discussion_board_threadCreateNestedOneWithoutDiscussion_board_moderator_actionInput\n    comment?: discussion_board_commentCreateNestedOneWithoutDiscussion_board_moderator_actionInput\n  }\n\n  export type discussion_board_moderator_actionUncheckedCreateWithoutPostInput = {\n    id: string\n    moderator_id: string\n    user_id?: string | null\n    report_id?: string | null\n    thread_id?: string | null\n    comment_id?: string | null\n    action_type: string\n    reason: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_moderator_actionCreateOrConnectWithoutPostInput = {\n    where: discussion_board_moderator_actionWhereUniqueInput\n    create: XOR<discussion_board_moderator_actionCreateWithoutPostInput, discussion_board_moderator_actionUncheckedCreateWithoutPostInput>\n  }\n\n  export type discussion_board_moderator_actionCreateManyPostInputEnvelope = {\n    data: discussion_board_moderator_actionCreateManyPostInput | discussion_board_moderator_actionCreateManyPostInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_warningCreateWithoutPostInput = {\n    id: string\n    reason: string\n    issued_at: Date | string\n    user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_warningInput\n    moderator: discussion_board_moderatorsCreateNestedOneWithoutDiscussion_board_warningInput\n    thread?: discussion_board_threadCreateNestedOneWithoutDiscussion_board_warningInput\n    comment?: discussion_board_commentCreateNestedOneWithoutDiscussion_board_warningInput\n    discussion_board_ban?: discussion_board_banCreateNestedManyWithoutWarningInput\n  }\n\n  export type discussion_board_warningUncheckedCreateWithoutPostInput = {\n    id: string\n    user_id: string\n    moderator_id: string\n    thread_id?: string | null\n    comment_id?: string | null\n    reason: string\n    issued_at: Date | string\n    discussion_board_ban?: discussion_board_banUncheckedCreateNestedManyWithoutWarningInput\n  }\n\n  export type discussion_board_warningCreateOrConnectWithoutPostInput = {\n    where: discussion_board_warningWhereUniqueInput\n    create: XOR<discussion_board_warningCreateWithoutPostInput, discussion_board_warningUncheckedCreateWithoutPostInput>\n  }\n\n  export type discussion_board_warningCreateManyPostInputEnvelope = {\n    data: discussion_board_warningCreateManyPostInput | discussion_board_warningCreateManyPostInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_threadUpsertWithoutDiscussion_board_postInput = {\n    update: XOR<discussion_board_threadUpdateWithoutDiscussion_board_postInput, discussion_board_threadUncheckedUpdateWithoutDiscussion_board_postInput>\n    create: XOR<discussion_board_threadCreateWithoutDiscussion_board_postInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_postInput>\n    where?: discussion_board_threadWhereInput\n  }\n\n  export type discussion_board_threadUpdateToOneWithWhereWithoutDiscussion_board_postInput = {\n    where?: discussion_board_threadWhereInput\n    data: XOR<discussion_board_threadUpdateWithoutDiscussion_board_postInput, discussion_board_threadUncheckedUpdateWithoutDiscussion_board_postInput>\n  }\n\n  export type discussion_board_threadUpdateWithoutDiscussion_board_postInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    is_locked?: BoolFieldUpdateOperationsInput | boolean\n    is_pinned?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    creator_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_threadNestedInput\n    category?: discussion_board_thread_categoryUpdateOneRequiredWithoutDiscussion_board_threadNestedInput\n    discussion_board_thread_tag?: discussion_board_thread_tagUpdateManyWithoutThreadNestedInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUpdateOneWithoutThreadNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutThreadNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutThreadNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutThreadNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutThreadNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutThreadNestedInput\n    discussion_board_report?: discussion_board_reportUpdateManyWithoutThreadNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutThreadNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUpdateOneWithoutDiscussion_board_threadNestedInput\n  }\n\n  export type discussion_board_threadUncheckedUpdateWithoutDiscussion_board_postInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    creator_user_id?: StringFieldUpdateOperationsInput | string\n    category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    is_locked?: BoolFieldUpdateOperationsInput | boolean\n    is_pinned?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_thread_tag?: discussion_board_thread_tagUncheckedUpdateManyWithoutThreadNestedInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUncheckedUpdateOneWithoutThreadNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_report?: discussion_board_reportUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUncheckedUpdateOneWithoutDiscussion_board_threadNestedInput\n  }\n\n  export type discussion_board_usersUpsertWithoutDiscussion_board_postInput = {\n    update: XOR<discussion_board_usersUpdateWithoutDiscussion_board_postInput, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_postInput>\n    create: XOR<discussion_board_usersCreateWithoutDiscussion_board_postInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_postInput>\n    where?: discussion_board_usersWhereInput\n  }\n\n  export type discussion_board_usersUpdateToOneWithWhereWithoutDiscussion_board_postInput = {\n    where?: discussion_board_usersWhereInput\n    data: XOR<discussion_board_usersUpdateWithoutDiscussion_board_postInput, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_postInput>\n  }\n\n  export type discussion_board_usersUpdateWithoutDiscussion_board_postInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput\n    discussion_board_admins?: discussion_board_adminsUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_settings?: discussion_board_user_settingsUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput\n    discussion_board_thread?: discussion_board_threadUpdateManyWithoutCreator_userNestedInput\n    discussion_board_comment?: discussion_board_commentUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutUserNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutUserNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutUserNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutRecipient_userNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutUserNestedInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUpdateManyWithoutReported_userNestedInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUpdateManyWithoutReporting_userNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutUserNestedInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUpdateManyWithoutActorNestedInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUpdateManyWithoutAffected_userNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutUserNestedInput\n    discussion_board_ban?: discussion_board_banUpdateManyWithoutUserNestedInput\n    discussion_board_user_activity?: discussion_board_user_activityUpdateOneWithoutDiscussion_board_userNestedInput\n  }\n\n  export type discussion_board_usersUncheckedUpdateWithoutDiscussion_board_postInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUncheckedUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput\n    discussion_board_admins?: discussion_board_adminsUncheckedUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUncheckedUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_settings?: discussion_board_user_settingsUncheckedUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput\n    discussion_board_thread?: discussion_board_threadUncheckedUpdateManyWithoutCreator_userNestedInput\n    discussion_board_comment?: discussion_board_commentUncheckedUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutRecipient_userNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUncheckedUpdateManyWithoutReported_userNestedInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUncheckedUpdateManyWithoutReporting_userNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUncheckedUpdateManyWithoutActorNestedInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUncheckedUpdateManyWithoutAffected_userNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_ban?: discussion_board_banUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_user_activity?: discussion_board_user_activityUncheckedUpdateOneWithoutDiscussion_board_userNestedInput\n  }\n\n  export type discussion_board_postUpsertWithoutRecursiveInput = {\n    update: XOR<discussion_board_postUpdateWithoutRecursiveInput, discussion_board_postUncheckedUpdateWithoutRecursiveInput>\n    create: XOR<discussion_board_postCreateWithoutRecursiveInput, discussion_board_postUncheckedCreateWithoutRecursiveInput>\n    where?: discussion_board_postWhereInput\n  }\n\n  export type discussion_board_postUpdateToOneWithWhereWithoutRecursiveInput = {\n    where?: discussion_board_postWhereInput\n    data: XOR<discussion_board_postUpdateWithoutRecursiveInput, discussion_board_postUncheckedUpdateWithoutRecursiveInput>\n  }\n\n  export type discussion_board_postUpdateWithoutRecursiveInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    thread?: discussion_board_threadUpdateOneRequiredWithoutDiscussion_board_postNestedInput\n    author_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_postNestedInput\n    parent_post?: discussion_board_postUpdateOneWithoutRecursiveNestedInput\n    discussion_board_comment?: discussion_board_commentUpdateManyWithoutPostNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutPostNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutPostNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutPostNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutPostNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutPostNestedInput\n    discussion_board_report?: discussion_board_reportUpdateManyWithoutPostNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutPostNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutPostNestedInput\n  }\n\n  export type discussion_board_postUncheckedUpdateWithoutRecursiveInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    thread_id?: StringFieldUpdateOperationsInput | string\n    author_user_id?: StringFieldUpdateOperationsInput | string\n    parent_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_comment?: discussion_board_commentUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_report?: discussion_board_reportUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutPostNestedInput\n  }\n\n  export type discussion_board_postUpsertWithWhereUniqueWithoutParent_postInput = {\n    where: discussion_board_postWhereUniqueInput\n    update: XOR<discussion_board_postUpdateWithoutParent_postInput, discussion_board_postUncheckedUpdateWithoutParent_postInput>\n    create: XOR<discussion_board_postCreateWithoutParent_postInput, discussion_board_postUncheckedCreateWithoutParent_postInput>\n  }\n\n  export type discussion_board_postUpdateWithWhereUniqueWithoutParent_postInput = {\n    where: discussion_board_postWhereUniqueInput\n    data: XOR<discussion_board_postUpdateWithoutParent_postInput, discussion_board_postUncheckedUpdateWithoutParent_postInput>\n  }\n\n  export type discussion_board_postUpdateManyWithWhereWithoutParent_postInput = {\n    where: discussion_board_postScalarWhereInput\n    data: XOR<discussion_board_postUpdateManyMutationInput, discussion_board_postUncheckedUpdateManyWithoutParent_postInput>\n  }\n\n  export type discussion_board_commentUpsertWithWhereUniqueWithoutPostInput = {\n    where: discussion_board_commentWhereUniqueInput\n    update: XOR<discussion_board_commentUpdateWithoutPostInput, discussion_board_commentUncheckedUpdateWithoutPostInput>\n    create: XOR<discussion_board_commentCreateWithoutPostInput, discussion_board_commentUncheckedCreateWithoutPostInput>\n  }\n\n  export type discussion_board_commentUpdateWithWhereUniqueWithoutPostInput = {\n    where: discussion_board_commentWhereUniqueInput\n    data: XOR<discussion_board_commentUpdateWithoutPostInput, discussion_board_commentUncheckedUpdateWithoutPostInput>\n  }\n\n  export type discussion_board_commentUpdateManyWithWhereWithoutPostInput = {\n    where: discussion_board_commentScalarWhereInput\n    data: XOR<discussion_board_commentUpdateManyMutationInput, discussion_board_commentUncheckedUpdateManyWithoutPostInput>\n  }\n\n  export type discussion_board_voteUpsertWithWhereUniqueWithoutPostInput = {\n    where: discussion_board_voteWhereUniqueInput\n    update: XOR<discussion_board_voteUpdateWithoutPostInput, discussion_board_voteUncheckedUpdateWithoutPostInput>\n    create: XOR<discussion_board_voteCreateWithoutPostInput, discussion_board_voteUncheckedCreateWithoutPostInput>\n  }\n\n  export type discussion_board_voteUpdateWithWhereUniqueWithoutPostInput = {\n    where: discussion_board_voteWhereUniqueInput\n    data: XOR<discussion_board_voteUpdateWithoutPostInput, discussion_board_voteUncheckedUpdateWithoutPostInput>\n  }\n\n  export type discussion_board_voteUpdateManyWithWhereWithoutPostInput = {\n    where: discussion_board_voteScalarWhereInput\n    data: XOR<discussion_board_voteUpdateManyMutationInput, discussion_board_voteUncheckedUpdateManyWithoutPostInput>\n  }\n\n  export type discussion_board_reactionUpsertWithWhereUniqueWithoutPostInput = {\n    where: discussion_board_reactionWhereUniqueInput\n    update: XOR<discussion_board_reactionUpdateWithoutPostInput, discussion_board_reactionUncheckedUpdateWithoutPostInput>\n    create: XOR<discussion_board_reactionCreateWithoutPostInput, discussion_board_reactionUncheckedCreateWithoutPostInput>\n  }\n\n  export type discussion_board_reactionUpdateWithWhereUniqueWithoutPostInput = {\n    where: discussion_board_reactionWhereUniqueInput\n    data: XOR<discussion_board_reactionUpdateWithoutPostInput, discussion_board_reactionUncheckedUpdateWithoutPostInput>\n  }\n\n  export type discussion_board_reactionUpdateManyWithWhereWithoutPostInput = {\n    where: discussion_board_reactionScalarWhereInput\n    data: XOR<discussion_board_reactionUpdateManyMutationInput, discussion_board_reactionUncheckedUpdateManyWithoutPostInput>\n  }\n\n  export type discussion_board_bookmarkUpsertWithWhereUniqueWithoutPostInput = {\n    where: discussion_board_bookmarkWhereUniqueInput\n    update: XOR<discussion_board_bookmarkUpdateWithoutPostInput, discussion_board_bookmarkUncheckedUpdateWithoutPostInput>\n    create: XOR<discussion_board_bookmarkCreateWithoutPostInput, discussion_board_bookmarkUncheckedCreateWithoutPostInput>\n  }\n\n  export type discussion_board_bookmarkUpdateWithWhereUniqueWithoutPostInput = {\n    where: discussion_board_bookmarkWhereUniqueInput\n    data: XOR<discussion_board_bookmarkUpdateWithoutPostInput, discussion_board_bookmarkUncheckedUpdateWithoutPostInput>\n  }\n\n  export type discussion_board_bookmarkUpdateManyWithWhereWithoutPostInput = {\n    where: discussion_board_bookmarkScalarWhereInput\n    data: XOR<discussion_board_bookmarkUpdateManyMutationInput, discussion_board_bookmarkUncheckedUpdateManyWithoutPostInput>\n  }\n\n  export type discussion_board_notificationUpsertWithWhereUniqueWithoutPostInput = {\n    where: discussion_board_notificationWhereUniqueInput\n    update: XOR<discussion_board_notificationUpdateWithoutPostInput, discussion_board_notificationUncheckedUpdateWithoutPostInput>\n    create: XOR<discussion_board_notificationCreateWithoutPostInput, discussion_board_notificationUncheckedCreateWithoutPostInput>\n  }\n\n  export type discussion_board_notificationUpdateWithWhereUniqueWithoutPostInput = {\n    where: discussion_board_notificationWhereUniqueInput\n    data: XOR<discussion_board_notificationUpdateWithoutPostInput, discussion_board_notificationUncheckedUpdateWithoutPostInput>\n  }\n\n  export type discussion_board_notificationUpdateManyWithWhereWithoutPostInput = {\n    where: discussion_board_notificationScalarWhereInput\n    data: XOR<discussion_board_notificationUpdateManyMutationInput, discussion_board_notificationUncheckedUpdateManyWithoutPostInput>\n  }\n\n  export type discussion_board_subscriptionUpsertWithWhereUniqueWithoutPostInput = {\n    where: discussion_board_subscriptionWhereUniqueInput\n    update: XOR<discussion_board_subscriptionUpdateWithoutPostInput, discussion_board_subscriptionUncheckedUpdateWithoutPostInput>\n    create: XOR<discussion_board_subscriptionCreateWithoutPostInput, discussion_board_subscriptionUncheckedCreateWithoutPostInput>\n  }\n\n  export type discussion_board_subscriptionUpdateWithWhereUniqueWithoutPostInput = {\n    where: discussion_board_subscriptionWhereUniqueInput\n    data: XOR<discussion_board_subscriptionUpdateWithoutPostInput, discussion_board_subscriptionUncheckedUpdateWithoutPostInput>\n  }\n\n  export type discussion_board_subscriptionUpdateManyWithWhereWithoutPostInput = {\n    where: discussion_board_subscriptionScalarWhereInput\n    data: XOR<discussion_board_subscriptionUpdateManyMutationInput, discussion_board_subscriptionUncheckedUpdateManyWithoutPostInput>\n  }\n\n  export type discussion_board_reportUpsertWithWhereUniqueWithoutPostInput = {\n    where: discussion_board_reportWhereUniqueInput\n    update: XOR<discussion_board_reportUpdateWithoutPostInput, discussion_board_reportUncheckedUpdateWithoutPostInput>\n    create: XOR<discussion_board_reportCreateWithoutPostInput, discussion_board_reportUncheckedCreateWithoutPostInput>\n  }\n\n  export type discussion_board_reportUpdateWithWhereUniqueWithoutPostInput = {\n    where: discussion_board_reportWhereUniqueInput\n    data: XOR<discussion_board_reportUpdateWithoutPostInput, discussion_board_reportUncheckedUpdateWithoutPostInput>\n  }\n\n  export type discussion_board_reportUpdateManyWithWhereWithoutPostInput = {\n    where: discussion_board_reportScalarWhereInput\n    data: XOR<discussion_board_reportUpdateManyMutationInput, discussion_board_reportUncheckedUpdateManyWithoutPostInput>\n  }\n\n  export type discussion_board_moderator_actionUpsertWithWhereUniqueWithoutPostInput = {\n    where: discussion_board_moderator_actionWhereUniqueInput\n    update: XOR<discussion_board_moderator_actionUpdateWithoutPostInput, discussion_board_moderator_actionUncheckedUpdateWithoutPostInput>\n    create: XOR<discussion_board_moderator_actionCreateWithoutPostInput, discussion_board_moderator_actionUncheckedCreateWithoutPostInput>\n  }\n\n  export type discussion_board_moderator_actionUpdateWithWhereUniqueWithoutPostInput = {\n    where: discussion_board_moderator_actionWhereUniqueInput\n    data: XOR<discussion_board_moderator_actionUpdateWithoutPostInput, discussion_board_moderator_actionUncheckedUpdateWithoutPostInput>\n  }\n\n  export type discussion_board_moderator_actionUpdateManyWithWhereWithoutPostInput = {\n    where: discussion_board_moderator_actionScalarWhereInput\n    data: XOR<discussion_board_moderator_actionUpdateManyMutationInput, discussion_board_moderator_actionUncheckedUpdateManyWithoutPostInput>\n  }\n\n  export type discussion_board_warningUpsertWithWhereUniqueWithoutPostInput = {\n    where: discussion_board_warningWhereUniqueInput\n    update: XOR<discussion_board_warningUpdateWithoutPostInput, discussion_board_warningUncheckedUpdateWithoutPostInput>\n    create: XOR<discussion_board_warningCreateWithoutPostInput, discussion_board_warningUncheckedCreateWithoutPostInput>\n  }\n\n  export type discussion_board_warningUpdateWithWhereUniqueWithoutPostInput = {\n    where: discussion_board_warningWhereUniqueInput\n    data: XOR<discussion_board_warningUpdateWithoutPostInput, discussion_board_warningUncheckedUpdateWithoutPostInput>\n  }\n\n  export type discussion_board_warningUpdateManyWithWhereWithoutPostInput = {\n    where: discussion_board_warningScalarWhereInput\n    data: XOR<discussion_board_warningUpdateManyMutationInput, discussion_board_warningUncheckedUpdateManyWithoutPostInput>\n  }\n\n  export type discussion_board_postCreateWithoutDiscussion_board_commentInput = {\n    id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    thread: discussion_board_threadCreateNestedOneWithoutDiscussion_board_postInput\n    author_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_postInput\n    parent_post?: discussion_board_postCreateNestedOneWithoutRecursiveInput\n    recursive?: discussion_board_postCreateNestedManyWithoutParent_postInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutPostInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutPostInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutPostInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutPostInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutPostInput\n    discussion_board_report?: discussion_board_reportCreateNestedManyWithoutPostInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutPostInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutPostInput\n  }\n\n  export type discussion_board_postUncheckedCreateWithoutDiscussion_board_commentInput = {\n    id: string\n    thread_id: string\n    author_user_id: string\n    parent_post_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    recursive?: discussion_board_postUncheckedCreateNestedManyWithoutParent_postInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_report?: discussion_board_reportUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutPostInput\n  }\n\n  export type discussion_board_postCreateOrConnectWithoutDiscussion_board_commentInput = {\n    where: discussion_board_postWhereUniqueInput\n    create: XOR<discussion_board_postCreateWithoutDiscussion_board_commentInput, discussion_board_postUncheckedCreateWithoutDiscussion_board_commentInput>\n  }\n\n  export type discussion_board_usersCreateWithoutDiscussion_board_commentInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    discussion_board_admins?: discussion_board_adminsCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    discussion_board_user_profiles?: discussion_board_user_profilesCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    discussion_board_user_settings?: discussion_board_user_settingsCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    discussion_board_thread?: discussion_board_threadCreateNestedManyWithoutCreator_userInput\n    discussion_board_post?: discussion_board_postCreateNestedManyWithoutAuthor_userInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutUserInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutUserInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutUserInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutRecipient_userInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutUserInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportCreateNestedManyWithoutReported_userInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportCreateNestedManyWithoutReporting_userInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutUserInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logCreateNestedManyWithoutActorInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logCreateNestedManyWithoutAffected_userInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutUserInput\n    discussion_board_ban?: discussion_board_banCreateNestedManyWithoutUserInput\n    discussion_board_user_activity?: discussion_board_user_activityCreateNestedOneWithoutDiscussion_board_userInput\n  }\n\n  export type discussion_board_usersUncheckedCreateWithoutDiscussion_board_commentInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUncheckedCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    discussion_board_admins?: discussion_board_adminsUncheckedCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUncheckedCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    discussion_board_user_settings?: discussion_board_user_settingsUncheckedCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    discussion_board_thread?: discussion_board_threadUncheckedCreateNestedManyWithoutCreator_userInput\n    discussion_board_post?: discussion_board_postUncheckedCreateNestedManyWithoutAuthor_userInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutRecipient_userInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUncheckedCreateNestedManyWithoutReported_userInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUncheckedCreateNestedManyWithoutReporting_userInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUncheckedCreateNestedManyWithoutActorInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUncheckedCreateNestedManyWithoutAffected_userInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_ban?: discussion_board_banUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_user_activity?: discussion_board_user_activityUncheckedCreateNestedOneWithoutDiscussion_board_userInput\n  }\n\n  export type discussion_board_usersCreateOrConnectWithoutDiscussion_board_commentInput = {\n    where: discussion_board_usersWhereUniqueInput\n    create: XOR<discussion_board_usersCreateWithoutDiscussion_board_commentInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_commentInput>\n  }\n\n  export type discussion_board_commentCreateWithoutRecursiveInput = {\n    id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    post: discussion_board_postCreateNestedOneWithoutDiscussion_board_commentInput\n    author_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_commentInput\n    parent_comment?: discussion_board_commentCreateNestedOneWithoutRecursiveInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutCommentInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutCommentInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutCommentInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutCommentInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutCommentInput\n    discussion_board_report?: discussion_board_reportCreateNestedManyWithoutCommentInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutCommentInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutCommentInput\n  }\n\n  export type discussion_board_commentUncheckedCreateWithoutRecursiveInput = {\n    id: string\n    post_id: string\n    author_user_id: string\n    parent_comment_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_report?: discussion_board_reportUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutCommentInput\n  }\n\n  export type discussion_board_commentCreateOrConnectWithoutRecursiveInput = {\n    where: discussion_board_commentWhereUniqueInput\n    create: XOR<discussion_board_commentCreateWithoutRecursiveInput, discussion_board_commentUncheckedCreateWithoutRecursiveInput>\n  }\n\n  export type discussion_board_commentCreateWithoutParent_commentInput = {\n    id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    post: discussion_board_postCreateNestedOneWithoutDiscussion_board_commentInput\n    author_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_commentInput\n    recursive?: discussion_board_commentCreateNestedManyWithoutParent_commentInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutCommentInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutCommentInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutCommentInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutCommentInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutCommentInput\n    discussion_board_report?: discussion_board_reportCreateNestedManyWithoutCommentInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutCommentInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutCommentInput\n  }\n\n  export type discussion_board_commentUncheckedCreateWithoutParent_commentInput = {\n    id: string\n    post_id: string\n    author_user_id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    recursive?: discussion_board_commentUncheckedCreateNestedManyWithoutParent_commentInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_report?: discussion_board_reportUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutCommentInput\n  }\n\n  export type discussion_board_commentCreateOrConnectWithoutParent_commentInput = {\n    where: discussion_board_commentWhereUniqueInput\n    create: XOR<discussion_board_commentCreateWithoutParent_commentInput, discussion_board_commentUncheckedCreateWithoutParent_commentInput>\n  }\n\n  export type discussion_board_commentCreateManyParent_commentInputEnvelope = {\n    data: discussion_board_commentCreateManyParent_commentInput | discussion_board_commentCreateManyParent_commentInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_voteCreateWithoutCommentInput = {\n    id: string\n    direction: string\n    created_at: Date | string\n    user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_voteInput\n    thread?: discussion_board_threadCreateNestedOneWithoutDiscussion_board_voteInput\n    post?: discussion_board_postCreateNestedOneWithoutDiscussion_board_voteInput\n  }\n\n  export type discussion_board_voteUncheckedCreateWithoutCommentInput = {\n    id: string\n    user_id: string\n    thread_id?: string | null\n    post_id?: string | null\n    direction: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_voteCreateOrConnectWithoutCommentInput = {\n    where: discussion_board_voteWhereUniqueInput\n    create: XOR<discussion_board_voteCreateWithoutCommentInput, discussion_board_voteUncheckedCreateWithoutCommentInput>\n  }\n\n  export type discussion_board_voteCreateManyCommentInputEnvelope = {\n    data: discussion_board_voteCreateManyCommentInput | discussion_board_voteCreateManyCommentInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_reactionCreateWithoutCommentInput = {\n    id: string\n    reaction_type: string\n    created_at: Date | string\n    user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_reactionInput\n    thread?: discussion_board_threadCreateNestedOneWithoutDiscussion_board_reactionInput\n    post?: discussion_board_postCreateNestedOneWithoutDiscussion_board_reactionInput\n  }\n\n  export type discussion_board_reactionUncheckedCreateWithoutCommentInput = {\n    id: string\n    user_id: string\n    thread_id?: string | null\n    post_id?: string | null\n    reaction_type: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_reactionCreateOrConnectWithoutCommentInput = {\n    where: discussion_board_reactionWhereUniqueInput\n    create: XOR<discussion_board_reactionCreateWithoutCommentInput, discussion_board_reactionUncheckedCreateWithoutCommentInput>\n  }\n\n  export type discussion_board_reactionCreateManyCommentInputEnvelope = {\n    data: discussion_board_reactionCreateManyCommentInput | discussion_board_reactionCreateManyCommentInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_bookmarkCreateWithoutCommentInput = {\n    id: string\n    created_at: Date | string\n    user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_bookmarkInput\n    thread?: discussion_board_threadCreateNestedOneWithoutDiscussion_board_bookmarkInput\n    post?: discussion_board_postCreateNestedOneWithoutDiscussion_board_bookmarkInput\n  }\n\n  export type discussion_board_bookmarkUncheckedCreateWithoutCommentInput = {\n    id: string\n    user_id: string\n    thread_id?: string | null\n    post_id?: string | null\n    created_at: Date | string\n  }\n\n  export type discussion_board_bookmarkCreateOrConnectWithoutCommentInput = {\n    where: discussion_board_bookmarkWhereUniqueInput\n    create: XOR<discussion_board_bookmarkCreateWithoutCommentInput, discussion_board_bookmarkUncheckedCreateWithoutCommentInput>\n  }\n\n  export type discussion_board_bookmarkCreateManyCommentInputEnvelope = {\n    data: discussion_board_bookmarkCreateManyCommentInput | discussion_board_bookmarkCreateManyCommentInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_notificationCreateWithoutCommentInput = {\n    id: string\n    notification_type: string\n    is_read: boolean\n    channel: string\n    created_at: Date | string\n    delivered_at?: Date | string | null\n    recipient_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_notificationInput\n    thread?: discussion_board_threadCreateNestedOneWithoutDiscussion_board_notificationInput\n    post?: discussion_board_postCreateNestedOneWithoutDiscussion_board_notificationInput\n  }\n\n  export type discussion_board_notificationUncheckedCreateWithoutCommentInput = {\n    id: string\n    recipient_user_id: string\n    thread_id?: string | null\n    post_id?: string | null\n    notification_type: string\n    is_read: boolean\n    channel: string\n    created_at: Date | string\n    delivered_at?: Date | string | null\n  }\n\n  export type discussion_board_notificationCreateOrConnectWithoutCommentInput = {\n    where: discussion_board_notificationWhereUniqueInput\n    create: XOR<discussion_board_notificationCreateWithoutCommentInput, discussion_board_notificationUncheckedCreateWithoutCommentInput>\n  }\n\n  export type discussion_board_notificationCreateManyCommentInputEnvelope = {\n    data: discussion_board_notificationCreateManyCommentInput | discussion_board_notificationCreateManyCommentInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_subscriptionCreateWithoutCommentInput = {\n    id: string\n    channel: string\n    created_at: Date | string\n    expires_at?: Date | string | null\n    user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_subscriptionInput\n    thread?: discussion_board_threadCreateNestedOneWithoutDiscussion_board_subscriptionInput\n    tag?: discussion_board_thread_tagCreateNestedOneWithoutDiscussion_board_subscriptionInput\n    post?: discussion_board_postCreateNestedOneWithoutDiscussion_board_subscriptionInput\n  }\n\n  export type discussion_board_subscriptionUncheckedCreateWithoutCommentInput = {\n    id: string\n    user_id: string\n    thread_id?: string | null\n    tag_id?: string | null\n    post_id?: string | null\n    channel: string\n    created_at: Date | string\n    expires_at?: Date | string | null\n  }\n\n  export type discussion_board_subscriptionCreateOrConnectWithoutCommentInput = {\n    where: discussion_board_subscriptionWhereUniqueInput\n    create: XOR<discussion_board_subscriptionCreateWithoutCommentInput, discussion_board_subscriptionUncheckedCreateWithoutCommentInput>\n  }\n\n  export type discussion_board_subscriptionCreateManyCommentInputEnvelope = {\n    data: discussion_board_subscriptionCreateManyCommentInput | discussion_board_subscriptionCreateManyCommentInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_reportCreateWithoutCommentInput = {\n    id: string\n    status: string\n    category: string\n    submitted_at: Date | string\n    resolved_at?: Date | string | null\n    details: string\n    reported_user?: discussion_board_usersCreateNestedOneWithoutDiscussion_board_report_of_reported_user_idInput\n    reporting_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_report_of_reporting_user_idInput\n    thread?: discussion_board_threadCreateNestedOneWithoutDiscussion_board_reportInput\n    post?: discussion_board_postCreateNestedOneWithoutDiscussion_board_reportInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutReportInput\n    discussion_board_ban?: discussion_board_banCreateNestedManyWithoutReportInput\n  }\n\n  export type discussion_board_reportUncheckedCreateWithoutCommentInput = {\n    id: string\n    reported_user_id?: string | null\n    reporting_user_id: string\n    thread_id?: string | null\n    post_id?: string | null\n    status: string\n    category: string\n    submitted_at: Date | string\n    resolved_at?: Date | string | null\n    details: string\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutReportInput\n    discussion_board_ban?: discussion_board_banUncheckedCreateNestedManyWithoutReportInput\n  }\n\n  export type discussion_board_reportCreateOrConnectWithoutCommentInput = {\n    where: discussion_board_reportWhereUniqueInput\n    create: XOR<discussion_board_reportCreateWithoutCommentInput, discussion_board_reportUncheckedCreateWithoutCommentInput>\n  }\n\n  export type discussion_board_reportCreateManyCommentInputEnvelope = {\n    data: discussion_board_reportCreateManyCommentInput | discussion_board_reportCreateManyCommentInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_moderator_actionCreateWithoutCommentInput = {\n    id: string\n    action_type: string\n    reason: string\n    created_at: Date | string\n    moderator: discussion_board_moderatorsCreateNestedOneWithoutDiscussion_board_moderator_actionInput\n    user?: discussion_board_usersCreateNestedOneWithoutDiscussion_board_moderator_actionInput\n    report?: discussion_board_reportCreateNestedOneWithoutDiscussion_board_moderator_actionInput\n    thread?: discussion_board_threadCreateNestedOneWithoutDiscussion_board_moderator_actionInput\n    post?: discussion_board_postCreateNestedOneWithoutDiscussion_board_moderator_actionInput\n  }\n\n  export type discussion_board_moderator_actionUncheckedCreateWithoutCommentInput = {\n    id: string\n    moderator_id: string\n    user_id?: string | null\n    report_id?: string | null\n    thread_id?: string | null\n    post_id?: string | null\n    action_type: string\n    reason: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_moderator_actionCreateOrConnectWithoutCommentInput = {\n    where: discussion_board_moderator_actionWhereUniqueInput\n    create: XOR<discussion_board_moderator_actionCreateWithoutCommentInput, discussion_board_moderator_actionUncheckedCreateWithoutCommentInput>\n  }\n\n  export type discussion_board_moderator_actionCreateManyCommentInputEnvelope = {\n    data: discussion_board_moderator_actionCreateManyCommentInput | discussion_board_moderator_actionCreateManyCommentInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_warningCreateWithoutCommentInput = {\n    id: string\n    reason: string\n    issued_at: Date | string\n    user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_warningInput\n    moderator: discussion_board_moderatorsCreateNestedOneWithoutDiscussion_board_warningInput\n    thread?: discussion_board_threadCreateNestedOneWithoutDiscussion_board_warningInput\n    post?: discussion_board_postCreateNestedOneWithoutDiscussion_board_warningInput\n    discussion_board_ban?: discussion_board_banCreateNestedManyWithoutWarningInput\n  }\n\n  export type discussion_board_warningUncheckedCreateWithoutCommentInput = {\n    id: string\n    user_id: string\n    moderator_id: string\n    thread_id?: string | null\n    post_id?: string | null\n    reason: string\n    issued_at: Date | string\n    discussion_board_ban?: discussion_board_banUncheckedCreateNestedManyWithoutWarningInput\n  }\n\n  export type discussion_board_warningCreateOrConnectWithoutCommentInput = {\n    where: discussion_board_warningWhereUniqueInput\n    create: XOR<discussion_board_warningCreateWithoutCommentInput, discussion_board_warningUncheckedCreateWithoutCommentInput>\n  }\n\n  export type discussion_board_warningCreateManyCommentInputEnvelope = {\n    data: discussion_board_warningCreateManyCommentInput | discussion_board_warningCreateManyCommentInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_postUpsertWithoutDiscussion_board_commentInput = {\n    update: XOR<discussion_board_postUpdateWithoutDiscussion_board_commentInput, discussion_board_postUncheckedUpdateWithoutDiscussion_board_commentInput>\n    create: XOR<discussion_board_postCreateWithoutDiscussion_board_commentInput, discussion_board_postUncheckedCreateWithoutDiscussion_board_commentInput>\n    where?: discussion_board_postWhereInput\n  }\n\n  export type discussion_board_postUpdateToOneWithWhereWithoutDiscussion_board_commentInput = {\n    where?: discussion_board_postWhereInput\n    data: XOR<discussion_board_postUpdateWithoutDiscussion_board_commentInput, discussion_board_postUncheckedUpdateWithoutDiscussion_board_commentInput>\n  }\n\n  export type discussion_board_postUpdateWithoutDiscussion_board_commentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    thread?: discussion_board_threadUpdateOneRequiredWithoutDiscussion_board_postNestedInput\n    author_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_postNestedInput\n    parent_post?: discussion_board_postUpdateOneWithoutRecursiveNestedInput\n    recursive?: discussion_board_postUpdateManyWithoutParent_postNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutPostNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutPostNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutPostNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutPostNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutPostNestedInput\n    discussion_board_report?: discussion_board_reportUpdateManyWithoutPostNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutPostNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutPostNestedInput\n  }\n\n  export type discussion_board_postUncheckedUpdateWithoutDiscussion_board_commentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    thread_id?: StringFieldUpdateOperationsInput | string\n    author_user_id?: StringFieldUpdateOperationsInput | string\n    parent_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recursive?: discussion_board_postUncheckedUpdateManyWithoutParent_postNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_report?: discussion_board_reportUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutPostNestedInput\n  }\n\n  export type discussion_board_usersUpsertWithoutDiscussion_board_commentInput = {\n    update: XOR<discussion_board_usersUpdateWithoutDiscussion_board_commentInput, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_commentInput>\n    create: XOR<discussion_board_usersCreateWithoutDiscussion_board_commentInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_commentInput>\n    where?: discussion_board_usersWhereInput\n  }\n\n  export type discussion_board_usersUpdateToOneWithWhereWithoutDiscussion_board_commentInput = {\n    where?: discussion_board_usersWhereInput\n    data: XOR<discussion_board_usersUpdateWithoutDiscussion_board_commentInput, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_commentInput>\n  }\n\n  export type discussion_board_usersUpdateWithoutDiscussion_board_commentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput\n    discussion_board_admins?: discussion_board_adminsUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_settings?: discussion_board_user_settingsUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput\n    discussion_board_thread?: discussion_board_threadUpdateManyWithoutCreator_userNestedInput\n    discussion_board_post?: discussion_board_postUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutUserNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutUserNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutUserNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutRecipient_userNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutUserNestedInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUpdateManyWithoutReported_userNestedInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUpdateManyWithoutReporting_userNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutUserNestedInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUpdateManyWithoutActorNestedInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUpdateManyWithoutAffected_userNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutUserNestedInput\n    discussion_board_ban?: discussion_board_banUpdateManyWithoutUserNestedInput\n    discussion_board_user_activity?: discussion_board_user_activityUpdateOneWithoutDiscussion_board_userNestedInput\n  }\n\n  export type discussion_board_usersUncheckedUpdateWithoutDiscussion_board_commentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUncheckedUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput\n    discussion_board_admins?: discussion_board_adminsUncheckedUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUncheckedUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_settings?: discussion_board_user_settingsUncheckedUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput\n    discussion_board_thread?: discussion_board_threadUncheckedUpdateManyWithoutCreator_userNestedInput\n    discussion_board_post?: discussion_board_postUncheckedUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutRecipient_userNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUncheckedUpdateManyWithoutReported_userNestedInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUncheckedUpdateManyWithoutReporting_userNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUncheckedUpdateManyWithoutActorNestedInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUncheckedUpdateManyWithoutAffected_userNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_ban?: discussion_board_banUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_user_activity?: discussion_board_user_activityUncheckedUpdateOneWithoutDiscussion_board_userNestedInput\n  }\n\n  export type discussion_board_commentUpsertWithoutRecursiveInput = {\n    update: XOR<discussion_board_commentUpdateWithoutRecursiveInput, discussion_board_commentUncheckedUpdateWithoutRecursiveInput>\n    create: XOR<discussion_board_commentCreateWithoutRecursiveInput, discussion_board_commentUncheckedCreateWithoutRecursiveInput>\n    where?: discussion_board_commentWhereInput\n  }\n\n  export type discussion_board_commentUpdateToOneWithWhereWithoutRecursiveInput = {\n    where?: discussion_board_commentWhereInput\n    data: XOR<discussion_board_commentUpdateWithoutRecursiveInput, discussion_board_commentUncheckedUpdateWithoutRecursiveInput>\n  }\n\n  export type discussion_board_commentUpdateWithoutRecursiveInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    post?: discussion_board_postUpdateOneRequiredWithoutDiscussion_board_commentNestedInput\n    author_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_commentNestedInput\n    parent_comment?: discussion_board_commentUpdateOneWithoutRecursiveNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutCommentNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutCommentNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutCommentNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutCommentNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutCommentNestedInput\n    discussion_board_report?: discussion_board_reportUpdateManyWithoutCommentNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutCommentNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutCommentNestedInput\n  }\n\n  export type discussion_board_commentUncheckedUpdateWithoutRecursiveInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    author_user_id?: StringFieldUpdateOperationsInput | string\n    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_report?: discussion_board_reportUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutCommentNestedInput\n  }\n\n  export type discussion_board_commentUpsertWithWhereUniqueWithoutParent_commentInput = {\n    where: discussion_board_commentWhereUniqueInput\n    update: XOR<discussion_board_commentUpdateWithoutParent_commentInput, discussion_board_commentUncheckedUpdateWithoutParent_commentInput>\n    create: XOR<discussion_board_commentCreateWithoutParent_commentInput, discussion_board_commentUncheckedCreateWithoutParent_commentInput>\n  }\n\n  export type discussion_board_commentUpdateWithWhereUniqueWithoutParent_commentInput = {\n    where: discussion_board_commentWhereUniqueInput\n    data: XOR<discussion_board_commentUpdateWithoutParent_commentInput, discussion_board_commentUncheckedUpdateWithoutParent_commentInput>\n  }\n\n  export type discussion_board_commentUpdateManyWithWhereWithoutParent_commentInput = {\n    where: discussion_board_commentScalarWhereInput\n    data: XOR<discussion_board_commentUpdateManyMutationInput, discussion_board_commentUncheckedUpdateManyWithoutParent_commentInput>\n  }\n\n  export type discussion_board_voteUpsertWithWhereUniqueWithoutCommentInput = {\n    where: discussion_board_voteWhereUniqueInput\n    update: XOR<discussion_board_voteUpdateWithoutCommentInput, discussion_board_voteUncheckedUpdateWithoutCommentInput>\n    create: XOR<discussion_board_voteCreateWithoutCommentInput, discussion_board_voteUncheckedCreateWithoutCommentInput>\n  }\n\n  export type discussion_board_voteUpdateWithWhereUniqueWithoutCommentInput = {\n    where: discussion_board_voteWhereUniqueInput\n    data: XOR<discussion_board_voteUpdateWithoutCommentInput, discussion_board_voteUncheckedUpdateWithoutCommentInput>\n  }\n\n  export type discussion_board_voteUpdateManyWithWhereWithoutCommentInput = {\n    where: discussion_board_voteScalarWhereInput\n    data: XOR<discussion_board_voteUpdateManyMutationInput, discussion_board_voteUncheckedUpdateManyWithoutCommentInput>\n  }\n\n  export type discussion_board_reactionUpsertWithWhereUniqueWithoutCommentInput = {\n    where: discussion_board_reactionWhereUniqueInput\n    update: XOR<discussion_board_reactionUpdateWithoutCommentInput, discussion_board_reactionUncheckedUpdateWithoutCommentInput>\n    create: XOR<discussion_board_reactionCreateWithoutCommentInput, discussion_board_reactionUncheckedCreateWithoutCommentInput>\n  }\n\n  export type discussion_board_reactionUpdateWithWhereUniqueWithoutCommentInput = {\n    where: discussion_board_reactionWhereUniqueInput\n    data: XOR<discussion_board_reactionUpdateWithoutCommentInput, discussion_board_reactionUncheckedUpdateWithoutCommentInput>\n  }\n\n  export type discussion_board_reactionUpdateManyWithWhereWithoutCommentInput = {\n    where: discussion_board_reactionScalarWhereInput\n    data: XOR<discussion_board_reactionUpdateManyMutationInput, discussion_board_reactionUncheckedUpdateManyWithoutCommentInput>\n  }\n\n  export type discussion_board_bookmarkUpsertWithWhereUniqueWithoutCommentInput = {\n    where: discussion_board_bookmarkWhereUniqueInput\n    update: XOR<discussion_board_bookmarkUpdateWithoutCommentInput, discussion_board_bookmarkUncheckedUpdateWithoutCommentInput>\n    create: XOR<discussion_board_bookmarkCreateWithoutCommentInput, discussion_board_bookmarkUncheckedCreateWithoutCommentInput>\n  }\n\n  export type discussion_board_bookmarkUpdateWithWhereUniqueWithoutCommentInput = {\n    where: discussion_board_bookmarkWhereUniqueInput\n    data: XOR<discussion_board_bookmarkUpdateWithoutCommentInput, discussion_board_bookmarkUncheckedUpdateWithoutCommentInput>\n  }\n\n  export type discussion_board_bookmarkUpdateManyWithWhereWithoutCommentInput = {\n    where: discussion_board_bookmarkScalarWhereInput\n    data: XOR<discussion_board_bookmarkUpdateManyMutationInput, discussion_board_bookmarkUncheckedUpdateManyWithoutCommentInput>\n  }\n\n  export type discussion_board_notificationUpsertWithWhereUniqueWithoutCommentInput = {\n    where: discussion_board_notificationWhereUniqueInput\n    update: XOR<discussion_board_notificationUpdateWithoutCommentInput, discussion_board_notificationUncheckedUpdateWithoutCommentInput>\n    create: XOR<discussion_board_notificationCreateWithoutCommentInput, discussion_board_notificationUncheckedCreateWithoutCommentInput>\n  }\n\n  export type discussion_board_notificationUpdateWithWhereUniqueWithoutCommentInput = {\n    where: discussion_board_notificationWhereUniqueInput\n    data: XOR<discussion_board_notificationUpdateWithoutCommentInput, discussion_board_notificationUncheckedUpdateWithoutCommentInput>\n  }\n\n  export type discussion_board_notificationUpdateManyWithWhereWithoutCommentInput = {\n    where: discussion_board_notificationScalarWhereInput\n    data: XOR<discussion_board_notificationUpdateManyMutationInput, discussion_board_notificationUncheckedUpdateManyWithoutCommentInput>\n  }\n\n  export type discussion_board_subscriptionUpsertWithWhereUniqueWithoutCommentInput = {\n    where: discussion_board_subscriptionWhereUniqueInput\n    update: XOR<discussion_board_subscriptionUpdateWithoutCommentInput, discussion_board_subscriptionUncheckedUpdateWithoutCommentInput>\n    create: XOR<discussion_board_subscriptionCreateWithoutCommentInput, discussion_board_subscriptionUncheckedCreateWithoutCommentInput>\n  }\n\n  export type discussion_board_subscriptionUpdateWithWhereUniqueWithoutCommentInput = {\n    where: discussion_board_subscriptionWhereUniqueInput\n    data: XOR<discussion_board_subscriptionUpdateWithoutCommentInput, discussion_board_subscriptionUncheckedUpdateWithoutCommentInput>\n  }\n\n  export type discussion_board_subscriptionUpdateManyWithWhereWithoutCommentInput = {\n    where: discussion_board_subscriptionScalarWhereInput\n    data: XOR<discussion_board_subscriptionUpdateManyMutationInput, discussion_board_subscriptionUncheckedUpdateManyWithoutCommentInput>\n  }\n\n  export type discussion_board_reportUpsertWithWhereUniqueWithoutCommentInput = {\n    where: discussion_board_reportWhereUniqueInput\n    update: XOR<discussion_board_reportUpdateWithoutCommentInput, discussion_board_reportUncheckedUpdateWithoutCommentInput>\n    create: XOR<discussion_board_reportCreateWithoutCommentInput, discussion_board_reportUncheckedCreateWithoutCommentInput>\n  }\n\n  export type discussion_board_reportUpdateWithWhereUniqueWithoutCommentInput = {\n    where: discussion_board_reportWhereUniqueInput\n    data: XOR<discussion_board_reportUpdateWithoutCommentInput, discussion_board_reportUncheckedUpdateWithoutCommentInput>\n  }\n\n  export type discussion_board_reportUpdateManyWithWhereWithoutCommentInput = {\n    where: discussion_board_reportScalarWhereInput\n    data: XOR<discussion_board_reportUpdateManyMutationInput, discussion_board_reportUncheckedUpdateManyWithoutCommentInput>\n  }\n\n  export type discussion_board_moderator_actionUpsertWithWhereUniqueWithoutCommentInput = {\n    where: discussion_board_moderator_actionWhereUniqueInput\n    update: XOR<discussion_board_moderator_actionUpdateWithoutCommentInput, discussion_board_moderator_actionUncheckedUpdateWithoutCommentInput>\n    create: XOR<discussion_board_moderator_actionCreateWithoutCommentInput, discussion_board_moderator_actionUncheckedCreateWithoutCommentInput>\n  }\n\n  export type discussion_board_moderator_actionUpdateWithWhereUniqueWithoutCommentInput = {\n    where: discussion_board_moderator_actionWhereUniqueInput\n    data: XOR<discussion_board_moderator_actionUpdateWithoutCommentInput, discussion_board_moderator_actionUncheckedUpdateWithoutCommentInput>\n  }\n\n  export type discussion_board_moderator_actionUpdateManyWithWhereWithoutCommentInput = {\n    where: discussion_board_moderator_actionScalarWhereInput\n    data: XOR<discussion_board_moderator_actionUpdateManyMutationInput, discussion_board_moderator_actionUncheckedUpdateManyWithoutCommentInput>\n  }\n\n  export type discussion_board_warningUpsertWithWhereUniqueWithoutCommentInput = {\n    where: discussion_board_warningWhereUniqueInput\n    update: XOR<discussion_board_warningUpdateWithoutCommentInput, discussion_board_warningUncheckedUpdateWithoutCommentInput>\n    create: XOR<discussion_board_warningCreateWithoutCommentInput, discussion_board_warningUncheckedCreateWithoutCommentInput>\n  }\n\n  export type discussion_board_warningUpdateWithWhereUniqueWithoutCommentInput = {\n    where: discussion_board_warningWhereUniqueInput\n    data: XOR<discussion_board_warningUpdateWithoutCommentInput, discussion_board_warningUncheckedUpdateWithoutCommentInput>\n  }\n\n  export type discussion_board_warningUpdateManyWithWhereWithoutCommentInput = {\n    where: discussion_board_warningScalarWhereInput\n    data: XOR<discussion_board_warningUpdateManyMutationInput, discussion_board_warningUncheckedUpdateManyWithoutCommentInput>\n  }\n\n  export type discussion_board_threadCreateWithoutDiscussion_board_thread_tagInput = {\n    id: string\n    title: string\n    body: string\n    is_locked: boolean\n    is_pinned: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    creator_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_threadInput\n    category: discussion_board_thread_categoryCreateNestedOneWithoutDiscussion_board_threadInput\n    discussion_board_post?: discussion_board_postCreateNestedManyWithoutThreadInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityCreateNestedOneWithoutThreadInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutThreadInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutThreadInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutThreadInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutThreadInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutThreadInput\n    discussion_board_report?: discussion_board_reportCreateNestedManyWithoutThreadInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutThreadInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutThreadInput\n    discussion_board_thread_stats?: discussion_board_thread_statsCreateNestedOneWithoutDiscussion_board_threadInput\n  }\n\n  export type discussion_board_threadUncheckedCreateWithoutDiscussion_board_thread_tagInput = {\n    id: string\n    creator_user_id: string\n    category_id: string\n    title: string\n    body: string\n    is_locked: boolean\n    is_pinned: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_post?: discussion_board_postUncheckedCreateNestedManyWithoutThreadInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUncheckedCreateNestedOneWithoutThreadInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_report?: discussion_board_reportUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUncheckedCreateNestedOneWithoutDiscussion_board_threadInput\n  }\n\n  export type discussion_board_threadCreateOrConnectWithoutDiscussion_board_thread_tagInput = {\n    where: discussion_board_threadWhereUniqueInput\n    create: XOR<discussion_board_threadCreateWithoutDiscussion_board_thread_tagInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_thread_tagInput>\n  }\n\n  export type discussion_board_tag_categoryCreateWithoutDiscussion_board_thread_tagInput = {\n    id: string\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussion_board_tag_categoryUncheckedCreateWithoutDiscussion_board_thread_tagInput = {\n    id: string\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussion_board_tag_categoryCreateOrConnectWithoutDiscussion_board_thread_tagInput = {\n    where: discussion_board_tag_categoryWhereUniqueInput\n    create: XOR<discussion_board_tag_categoryCreateWithoutDiscussion_board_thread_tagInput, discussion_board_tag_categoryUncheckedCreateWithoutDiscussion_board_thread_tagInput>\n  }\n\n  export type discussion_board_subscriptionCreateWithoutTagInput = {\n    id: string\n    channel: string\n    created_at: Date | string\n    expires_at?: Date | string | null\n    user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_subscriptionInput\n    thread?: discussion_board_threadCreateNestedOneWithoutDiscussion_board_subscriptionInput\n    post?: discussion_board_postCreateNestedOneWithoutDiscussion_board_subscriptionInput\n    comment?: discussion_board_commentCreateNestedOneWithoutDiscussion_board_subscriptionInput\n  }\n\n  export type discussion_board_subscriptionUncheckedCreateWithoutTagInput = {\n    id: string\n    user_id: string\n    thread_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    channel: string\n    created_at: Date | string\n    expires_at?: Date | string | null\n  }\n\n  export type discussion_board_subscriptionCreateOrConnectWithoutTagInput = {\n    where: discussion_board_subscriptionWhereUniqueInput\n    create: XOR<discussion_board_subscriptionCreateWithoutTagInput, discussion_board_subscriptionUncheckedCreateWithoutTagInput>\n  }\n\n  export type discussion_board_subscriptionCreateManyTagInputEnvelope = {\n    data: discussion_board_subscriptionCreateManyTagInput | discussion_board_subscriptionCreateManyTagInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_threadUpsertWithoutDiscussion_board_thread_tagInput = {\n    update: XOR<discussion_board_threadUpdateWithoutDiscussion_board_thread_tagInput, discussion_board_threadUncheckedUpdateWithoutDiscussion_board_thread_tagInput>\n    create: XOR<discussion_board_threadCreateWithoutDiscussion_board_thread_tagInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_thread_tagInput>\n    where?: discussion_board_threadWhereInput\n  }\n\n  export type discussion_board_threadUpdateToOneWithWhereWithoutDiscussion_board_thread_tagInput = {\n    where?: discussion_board_threadWhereInput\n    data: XOR<discussion_board_threadUpdateWithoutDiscussion_board_thread_tagInput, discussion_board_threadUncheckedUpdateWithoutDiscussion_board_thread_tagInput>\n  }\n\n  export type discussion_board_threadUpdateWithoutDiscussion_board_thread_tagInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    is_locked?: BoolFieldUpdateOperationsInput | boolean\n    is_pinned?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    creator_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_threadNestedInput\n    category?: discussion_board_thread_categoryUpdateOneRequiredWithoutDiscussion_board_threadNestedInput\n    discussion_board_post?: discussion_board_postUpdateManyWithoutThreadNestedInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUpdateOneWithoutThreadNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutThreadNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutThreadNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutThreadNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutThreadNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutThreadNestedInput\n    discussion_board_report?: discussion_board_reportUpdateManyWithoutThreadNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutThreadNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUpdateOneWithoutDiscussion_board_threadNestedInput\n  }\n\n  export type discussion_board_threadUncheckedUpdateWithoutDiscussion_board_thread_tagInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    creator_user_id?: StringFieldUpdateOperationsInput | string\n    category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    is_locked?: BoolFieldUpdateOperationsInput | boolean\n    is_pinned?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_post?: discussion_board_postUncheckedUpdateManyWithoutThreadNestedInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUncheckedUpdateOneWithoutThreadNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_report?: discussion_board_reportUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUncheckedUpdateOneWithoutDiscussion_board_threadNestedInput\n  }\n\n  export type discussion_board_tag_categoryUpsertWithoutDiscussion_board_thread_tagInput = {\n    update: XOR<discussion_board_tag_categoryUpdateWithoutDiscussion_board_thread_tagInput, discussion_board_tag_categoryUncheckedUpdateWithoutDiscussion_board_thread_tagInput>\n    create: XOR<discussion_board_tag_categoryCreateWithoutDiscussion_board_thread_tagInput, discussion_board_tag_categoryUncheckedCreateWithoutDiscussion_board_thread_tagInput>\n    where?: discussion_board_tag_categoryWhereInput\n  }\n\n  export type discussion_board_tag_categoryUpdateToOneWithWhereWithoutDiscussion_board_thread_tagInput = {\n    where?: discussion_board_tag_categoryWhereInput\n    data: XOR<discussion_board_tag_categoryUpdateWithoutDiscussion_board_thread_tagInput, discussion_board_tag_categoryUncheckedUpdateWithoutDiscussion_board_thread_tagInput>\n  }\n\n  export type discussion_board_tag_categoryUpdateWithoutDiscussion_board_thread_tagInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_tag_categoryUncheckedUpdateWithoutDiscussion_board_thread_tagInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_subscriptionUpsertWithWhereUniqueWithoutTagInput = {\n    where: discussion_board_subscriptionWhereUniqueInput\n    update: XOR<discussion_board_subscriptionUpdateWithoutTagInput, discussion_board_subscriptionUncheckedUpdateWithoutTagInput>\n    create: XOR<discussion_board_subscriptionCreateWithoutTagInput, discussion_board_subscriptionUncheckedCreateWithoutTagInput>\n  }\n\n  export type discussion_board_subscriptionUpdateWithWhereUniqueWithoutTagInput = {\n    where: discussion_board_subscriptionWhereUniqueInput\n    data: XOR<discussion_board_subscriptionUpdateWithoutTagInput, discussion_board_subscriptionUncheckedUpdateWithoutTagInput>\n  }\n\n  export type discussion_board_subscriptionUpdateManyWithWhereWithoutTagInput = {\n    where: discussion_board_subscriptionScalarWhereInput\n    data: XOR<discussion_board_subscriptionUpdateManyMutationInput, discussion_board_subscriptionUncheckedUpdateManyWithoutTagInput>\n  }\n\n  export type discussion_board_threadCreateWithoutCategoryInput = {\n    id: string\n    title: string\n    body: string\n    is_locked: boolean\n    is_pinned: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    creator_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_threadInput\n    discussion_board_post?: discussion_board_postCreateNestedManyWithoutThreadInput\n    discussion_board_thread_tag?: discussion_board_thread_tagCreateNestedManyWithoutThreadInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityCreateNestedOneWithoutThreadInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutThreadInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutThreadInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutThreadInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutThreadInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutThreadInput\n    discussion_board_report?: discussion_board_reportCreateNestedManyWithoutThreadInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutThreadInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutThreadInput\n    discussion_board_thread_stats?: discussion_board_thread_statsCreateNestedOneWithoutDiscussion_board_threadInput\n  }\n\n  export type discussion_board_threadUncheckedCreateWithoutCategoryInput = {\n    id: string\n    creator_user_id: string\n    title: string\n    body: string\n    is_locked: boolean\n    is_pinned: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_post?: discussion_board_postUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_thread_tag?: discussion_board_thread_tagUncheckedCreateNestedManyWithoutThreadInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUncheckedCreateNestedOneWithoutThreadInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_report?: discussion_board_reportUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUncheckedCreateNestedOneWithoutDiscussion_board_threadInput\n  }\n\n  export type discussion_board_threadCreateOrConnectWithoutCategoryInput = {\n    where: discussion_board_threadWhereUniqueInput\n    create: XOR<discussion_board_threadCreateWithoutCategoryInput, discussion_board_threadUncheckedCreateWithoutCategoryInput>\n  }\n\n  export type discussion_board_threadCreateManyCategoryInputEnvelope = {\n    data: discussion_board_threadCreateManyCategoryInput | discussion_board_threadCreateManyCategoryInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_threadUpsertWithWhereUniqueWithoutCategoryInput = {\n    where: discussion_board_threadWhereUniqueInput\n    update: XOR<discussion_board_threadUpdateWithoutCategoryInput, discussion_board_threadUncheckedUpdateWithoutCategoryInput>\n    create: XOR<discussion_board_threadCreateWithoutCategoryInput, discussion_board_threadUncheckedCreateWithoutCategoryInput>\n  }\n\n  export type discussion_board_threadUpdateWithWhereUniqueWithoutCategoryInput = {\n    where: discussion_board_threadWhereUniqueInput\n    data: XOR<discussion_board_threadUpdateWithoutCategoryInput, discussion_board_threadUncheckedUpdateWithoutCategoryInput>\n  }\n\n  export type discussion_board_threadUpdateManyWithWhereWithoutCategoryInput = {\n    where: discussion_board_threadScalarWhereInput\n    data: XOR<discussion_board_threadUpdateManyMutationInput, discussion_board_threadUncheckedUpdateManyWithoutCategoryInput>\n  }\n\n  export type discussion_board_thread_tagCreateWithoutTag_categoryInput = {\n    id: string\n    created_at: Date | string\n    thread: discussion_board_threadCreateNestedOneWithoutDiscussion_board_thread_tagInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutTagInput\n  }\n\n  export type discussion_board_thread_tagUncheckedCreateWithoutTag_categoryInput = {\n    id: string\n    thread_id: string\n    created_at: Date | string\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutTagInput\n  }\n\n  export type discussion_board_thread_tagCreateOrConnectWithoutTag_categoryInput = {\n    where: discussion_board_thread_tagWhereUniqueInput\n    create: XOR<discussion_board_thread_tagCreateWithoutTag_categoryInput, discussion_board_thread_tagUncheckedCreateWithoutTag_categoryInput>\n  }\n\n  export type discussion_board_thread_tagCreateManyTag_categoryInputEnvelope = {\n    data: discussion_board_thread_tagCreateManyTag_categoryInput | discussion_board_thread_tagCreateManyTag_categoryInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_thread_tagUpsertWithWhereUniqueWithoutTag_categoryInput = {\n    where: discussion_board_thread_tagWhereUniqueInput\n    update: XOR<discussion_board_thread_tagUpdateWithoutTag_categoryInput, discussion_board_thread_tagUncheckedUpdateWithoutTag_categoryInput>\n    create: XOR<discussion_board_thread_tagCreateWithoutTag_categoryInput, discussion_board_thread_tagUncheckedCreateWithoutTag_categoryInput>\n  }\n\n  export type discussion_board_thread_tagUpdateWithWhereUniqueWithoutTag_categoryInput = {\n    where: discussion_board_thread_tagWhereUniqueInput\n    data: XOR<discussion_board_thread_tagUpdateWithoutTag_categoryInput, discussion_board_thread_tagUncheckedUpdateWithoutTag_categoryInput>\n  }\n\n  export type discussion_board_thread_tagUpdateManyWithWhereWithoutTag_categoryInput = {\n    where: discussion_board_thread_tagScalarWhereInput\n    data: XOR<discussion_board_thread_tagUpdateManyMutationInput, discussion_board_thread_tagUncheckedUpdateManyWithoutTag_categoryInput>\n  }\n\n  export type discussion_board_threadCreateWithoutMv_discussion_thread_activityInput = {\n    id: string\n    title: string\n    body: string\n    is_locked: boolean\n    is_pinned: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    creator_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_threadInput\n    category: discussion_board_thread_categoryCreateNestedOneWithoutDiscussion_board_threadInput\n    discussion_board_post?: discussion_board_postCreateNestedManyWithoutThreadInput\n    discussion_board_thread_tag?: discussion_board_thread_tagCreateNestedManyWithoutThreadInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutThreadInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutThreadInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutThreadInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutThreadInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutThreadInput\n    discussion_board_report?: discussion_board_reportCreateNestedManyWithoutThreadInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutThreadInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutThreadInput\n    discussion_board_thread_stats?: discussion_board_thread_statsCreateNestedOneWithoutDiscussion_board_threadInput\n  }\n\n  export type discussion_board_threadUncheckedCreateWithoutMv_discussion_thread_activityInput = {\n    id: string\n    creator_user_id: string\n    category_id: string\n    title: string\n    body: string\n    is_locked: boolean\n    is_pinned: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_post?: discussion_board_postUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_thread_tag?: discussion_board_thread_tagUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_report?: discussion_board_reportUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUncheckedCreateNestedOneWithoutDiscussion_board_threadInput\n  }\n\n  export type discussion_board_threadCreateOrConnectWithoutMv_discussion_thread_activityInput = {\n    where: discussion_board_threadWhereUniqueInput\n    create: XOR<discussion_board_threadCreateWithoutMv_discussion_thread_activityInput, discussion_board_threadUncheckedCreateWithoutMv_discussion_thread_activityInput>\n  }\n\n  export type discussion_board_threadUpsertWithoutMv_discussion_thread_activityInput = {\n    update: XOR<discussion_board_threadUpdateWithoutMv_discussion_thread_activityInput, discussion_board_threadUncheckedUpdateWithoutMv_discussion_thread_activityInput>\n    create: XOR<discussion_board_threadCreateWithoutMv_discussion_thread_activityInput, discussion_board_threadUncheckedCreateWithoutMv_discussion_thread_activityInput>\n    where?: discussion_board_threadWhereInput\n  }\n\n  export type discussion_board_threadUpdateToOneWithWhereWithoutMv_discussion_thread_activityInput = {\n    where?: discussion_board_threadWhereInput\n    data: XOR<discussion_board_threadUpdateWithoutMv_discussion_thread_activityInput, discussion_board_threadUncheckedUpdateWithoutMv_discussion_thread_activityInput>\n  }\n\n  export type discussion_board_threadUpdateWithoutMv_discussion_thread_activityInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    is_locked?: BoolFieldUpdateOperationsInput | boolean\n    is_pinned?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    creator_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_threadNestedInput\n    category?: discussion_board_thread_categoryUpdateOneRequiredWithoutDiscussion_board_threadNestedInput\n    discussion_board_post?: discussion_board_postUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_tag?: discussion_board_thread_tagUpdateManyWithoutThreadNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutThreadNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutThreadNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutThreadNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutThreadNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutThreadNestedInput\n    discussion_board_report?: discussion_board_reportUpdateManyWithoutThreadNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutThreadNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUpdateOneWithoutDiscussion_board_threadNestedInput\n  }\n\n  export type discussion_board_threadUncheckedUpdateWithoutMv_discussion_thread_activityInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    creator_user_id?: StringFieldUpdateOperationsInput | string\n    category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    is_locked?: BoolFieldUpdateOperationsInput | boolean\n    is_pinned?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_post?: discussion_board_postUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_tag?: discussion_board_thread_tagUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_report?: discussion_board_reportUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUncheckedUpdateOneWithoutDiscussion_board_threadNestedInput\n  }\n\n  export type discussion_board_usersCreateWithoutDiscussion_board_voteInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    discussion_board_admins?: discussion_board_adminsCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    discussion_board_user_profiles?: discussion_board_user_profilesCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    discussion_board_user_settings?: discussion_board_user_settingsCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    discussion_board_thread?: discussion_board_threadCreateNestedManyWithoutCreator_userInput\n    discussion_board_post?: discussion_board_postCreateNestedManyWithoutAuthor_userInput\n    discussion_board_comment?: discussion_board_commentCreateNestedManyWithoutAuthor_userInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutUserInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutUserInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutRecipient_userInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutUserInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportCreateNestedManyWithoutReported_userInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportCreateNestedManyWithoutReporting_userInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutUserInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logCreateNestedManyWithoutActorInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logCreateNestedManyWithoutAffected_userInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutUserInput\n    discussion_board_ban?: discussion_board_banCreateNestedManyWithoutUserInput\n    discussion_board_user_activity?: discussion_board_user_activityCreateNestedOneWithoutDiscussion_board_userInput\n  }\n\n  export type discussion_board_usersUncheckedCreateWithoutDiscussion_board_voteInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUncheckedCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    discussion_board_admins?: discussion_board_adminsUncheckedCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUncheckedCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    discussion_board_user_settings?: discussion_board_user_settingsUncheckedCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    discussion_board_thread?: discussion_board_threadUncheckedCreateNestedManyWithoutCreator_userInput\n    discussion_board_post?: discussion_board_postUncheckedCreateNestedManyWithoutAuthor_userInput\n    discussion_board_comment?: discussion_board_commentUncheckedCreateNestedManyWithoutAuthor_userInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutRecipient_userInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUncheckedCreateNestedManyWithoutReported_userInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUncheckedCreateNestedManyWithoutReporting_userInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUncheckedCreateNestedManyWithoutActorInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUncheckedCreateNestedManyWithoutAffected_userInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_ban?: discussion_board_banUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_user_activity?: discussion_board_user_activityUncheckedCreateNestedOneWithoutDiscussion_board_userInput\n  }\n\n  export type discussion_board_usersCreateOrConnectWithoutDiscussion_board_voteInput = {\n    where: discussion_board_usersWhereUniqueInput\n    create: XOR<discussion_board_usersCreateWithoutDiscussion_board_voteInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_voteInput>\n  }\n\n  export type discussion_board_threadCreateWithoutDiscussion_board_voteInput = {\n    id: string\n    title: string\n    body: string\n    is_locked: boolean\n    is_pinned: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    creator_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_threadInput\n    category: discussion_board_thread_categoryCreateNestedOneWithoutDiscussion_board_threadInput\n    discussion_board_post?: discussion_board_postCreateNestedManyWithoutThreadInput\n    discussion_board_thread_tag?: discussion_board_thread_tagCreateNestedManyWithoutThreadInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityCreateNestedOneWithoutThreadInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutThreadInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutThreadInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutThreadInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutThreadInput\n    discussion_board_report?: discussion_board_reportCreateNestedManyWithoutThreadInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutThreadInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutThreadInput\n    discussion_board_thread_stats?: discussion_board_thread_statsCreateNestedOneWithoutDiscussion_board_threadInput\n  }\n\n  export type discussion_board_threadUncheckedCreateWithoutDiscussion_board_voteInput = {\n    id: string\n    creator_user_id: string\n    category_id: string\n    title: string\n    body: string\n    is_locked: boolean\n    is_pinned: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_post?: discussion_board_postUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_thread_tag?: discussion_board_thread_tagUncheckedCreateNestedManyWithoutThreadInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUncheckedCreateNestedOneWithoutThreadInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_report?: discussion_board_reportUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUncheckedCreateNestedOneWithoutDiscussion_board_threadInput\n  }\n\n  export type discussion_board_threadCreateOrConnectWithoutDiscussion_board_voteInput = {\n    where: discussion_board_threadWhereUniqueInput\n    create: XOR<discussion_board_threadCreateWithoutDiscussion_board_voteInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_voteInput>\n  }\n\n  export type discussion_board_postCreateWithoutDiscussion_board_voteInput = {\n    id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    thread: discussion_board_threadCreateNestedOneWithoutDiscussion_board_postInput\n    author_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_postInput\n    parent_post?: discussion_board_postCreateNestedOneWithoutRecursiveInput\n    recursive?: discussion_board_postCreateNestedManyWithoutParent_postInput\n    discussion_board_comment?: discussion_board_commentCreateNestedManyWithoutPostInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutPostInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutPostInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutPostInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutPostInput\n    discussion_board_report?: discussion_board_reportCreateNestedManyWithoutPostInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutPostInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutPostInput\n  }\n\n  export type discussion_board_postUncheckedCreateWithoutDiscussion_board_voteInput = {\n    id: string\n    thread_id: string\n    author_user_id: string\n    parent_post_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    recursive?: discussion_board_postUncheckedCreateNestedManyWithoutParent_postInput\n    discussion_board_comment?: discussion_board_commentUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_report?: discussion_board_reportUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutPostInput\n  }\n\n  export type discussion_board_postCreateOrConnectWithoutDiscussion_board_voteInput = {\n    where: discussion_board_postWhereUniqueInput\n    create: XOR<discussion_board_postCreateWithoutDiscussion_board_voteInput, discussion_board_postUncheckedCreateWithoutDiscussion_board_voteInput>\n  }\n\n  export type discussion_board_commentCreateWithoutDiscussion_board_voteInput = {\n    id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    post: discussion_board_postCreateNestedOneWithoutDiscussion_board_commentInput\n    author_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_commentInput\n    parent_comment?: discussion_board_commentCreateNestedOneWithoutRecursiveInput\n    recursive?: discussion_board_commentCreateNestedManyWithoutParent_commentInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutCommentInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutCommentInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutCommentInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutCommentInput\n    discussion_board_report?: discussion_board_reportCreateNestedManyWithoutCommentInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutCommentInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutCommentInput\n  }\n\n  export type discussion_board_commentUncheckedCreateWithoutDiscussion_board_voteInput = {\n    id: string\n    post_id: string\n    author_user_id: string\n    parent_comment_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    recursive?: discussion_board_commentUncheckedCreateNestedManyWithoutParent_commentInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_report?: discussion_board_reportUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutCommentInput\n  }\n\n  export type discussion_board_commentCreateOrConnectWithoutDiscussion_board_voteInput = {\n    where: discussion_board_commentWhereUniqueInput\n    create: XOR<discussion_board_commentCreateWithoutDiscussion_board_voteInput, discussion_board_commentUncheckedCreateWithoutDiscussion_board_voteInput>\n  }\n\n  export type discussion_board_usersUpsertWithoutDiscussion_board_voteInput = {\n    update: XOR<discussion_board_usersUpdateWithoutDiscussion_board_voteInput, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_voteInput>\n    create: XOR<discussion_board_usersCreateWithoutDiscussion_board_voteInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_voteInput>\n    where?: discussion_board_usersWhereInput\n  }\n\n  export type discussion_board_usersUpdateToOneWithWhereWithoutDiscussion_board_voteInput = {\n    where?: discussion_board_usersWhereInput\n    data: XOR<discussion_board_usersUpdateWithoutDiscussion_board_voteInput, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_voteInput>\n  }\n\n  export type discussion_board_usersUpdateWithoutDiscussion_board_voteInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput\n    discussion_board_admins?: discussion_board_adminsUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_settings?: discussion_board_user_settingsUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput\n    discussion_board_thread?: discussion_board_threadUpdateManyWithoutCreator_userNestedInput\n    discussion_board_post?: discussion_board_postUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_comment?: discussion_board_commentUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutUserNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutUserNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutRecipient_userNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutUserNestedInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUpdateManyWithoutReported_userNestedInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUpdateManyWithoutReporting_userNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutUserNestedInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUpdateManyWithoutActorNestedInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUpdateManyWithoutAffected_userNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutUserNestedInput\n    discussion_board_ban?: discussion_board_banUpdateManyWithoutUserNestedInput\n    discussion_board_user_activity?: discussion_board_user_activityUpdateOneWithoutDiscussion_board_userNestedInput\n  }\n\n  export type discussion_board_usersUncheckedUpdateWithoutDiscussion_board_voteInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUncheckedUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput\n    discussion_board_admins?: discussion_board_adminsUncheckedUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUncheckedUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_settings?: discussion_board_user_settingsUncheckedUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput\n    discussion_board_thread?: discussion_board_threadUncheckedUpdateManyWithoutCreator_userNestedInput\n    discussion_board_post?: discussion_board_postUncheckedUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_comment?: discussion_board_commentUncheckedUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutRecipient_userNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUncheckedUpdateManyWithoutReported_userNestedInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUncheckedUpdateManyWithoutReporting_userNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUncheckedUpdateManyWithoutActorNestedInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUncheckedUpdateManyWithoutAffected_userNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_ban?: discussion_board_banUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_user_activity?: discussion_board_user_activityUncheckedUpdateOneWithoutDiscussion_board_userNestedInput\n  }\n\n  export type discussion_board_threadUpsertWithoutDiscussion_board_voteInput = {\n    update: XOR<discussion_board_threadUpdateWithoutDiscussion_board_voteInput, discussion_board_threadUncheckedUpdateWithoutDiscussion_board_voteInput>\n    create: XOR<discussion_board_threadCreateWithoutDiscussion_board_voteInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_voteInput>\n    where?: discussion_board_threadWhereInput\n  }\n\n  export type discussion_board_threadUpdateToOneWithWhereWithoutDiscussion_board_voteInput = {\n    where?: discussion_board_threadWhereInput\n    data: XOR<discussion_board_threadUpdateWithoutDiscussion_board_voteInput, discussion_board_threadUncheckedUpdateWithoutDiscussion_board_voteInput>\n  }\n\n  export type discussion_board_threadUpdateWithoutDiscussion_board_voteInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    is_locked?: BoolFieldUpdateOperationsInput | boolean\n    is_pinned?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    creator_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_threadNestedInput\n    category?: discussion_board_thread_categoryUpdateOneRequiredWithoutDiscussion_board_threadNestedInput\n    discussion_board_post?: discussion_board_postUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_tag?: discussion_board_thread_tagUpdateManyWithoutThreadNestedInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUpdateOneWithoutThreadNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutThreadNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutThreadNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutThreadNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutThreadNestedInput\n    discussion_board_report?: discussion_board_reportUpdateManyWithoutThreadNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutThreadNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUpdateOneWithoutDiscussion_board_threadNestedInput\n  }\n\n  export type discussion_board_threadUncheckedUpdateWithoutDiscussion_board_voteInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    creator_user_id?: StringFieldUpdateOperationsInput | string\n    category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    is_locked?: BoolFieldUpdateOperationsInput | boolean\n    is_pinned?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_post?: discussion_board_postUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_tag?: discussion_board_thread_tagUncheckedUpdateManyWithoutThreadNestedInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUncheckedUpdateOneWithoutThreadNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_report?: discussion_board_reportUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUncheckedUpdateOneWithoutDiscussion_board_threadNestedInput\n  }\n\n  export type discussion_board_postUpsertWithoutDiscussion_board_voteInput = {\n    update: XOR<discussion_board_postUpdateWithoutDiscussion_board_voteInput, discussion_board_postUncheckedUpdateWithoutDiscussion_board_voteInput>\n    create: XOR<discussion_board_postCreateWithoutDiscussion_board_voteInput, discussion_board_postUncheckedCreateWithoutDiscussion_board_voteInput>\n    where?: discussion_board_postWhereInput\n  }\n\n  export type discussion_board_postUpdateToOneWithWhereWithoutDiscussion_board_voteInput = {\n    where?: discussion_board_postWhereInput\n    data: XOR<discussion_board_postUpdateWithoutDiscussion_board_voteInput, discussion_board_postUncheckedUpdateWithoutDiscussion_board_voteInput>\n  }\n\n  export type discussion_board_postUpdateWithoutDiscussion_board_voteInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    thread?: discussion_board_threadUpdateOneRequiredWithoutDiscussion_board_postNestedInput\n    author_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_postNestedInput\n    parent_post?: discussion_board_postUpdateOneWithoutRecursiveNestedInput\n    recursive?: discussion_board_postUpdateManyWithoutParent_postNestedInput\n    discussion_board_comment?: discussion_board_commentUpdateManyWithoutPostNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutPostNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutPostNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutPostNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutPostNestedInput\n    discussion_board_report?: discussion_board_reportUpdateManyWithoutPostNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutPostNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutPostNestedInput\n  }\n\n  export type discussion_board_postUncheckedUpdateWithoutDiscussion_board_voteInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    thread_id?: StringFieldUpdateOperationsInput | string\n    author_user_id?: StringFieldUpdateOperationsInput | string\n    parent_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recursive?: discussion_board_postUncheckedUpdateManyWithoutParent_postNestedInput\n    discussion_board_comment?: discussion_board_commentUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_report?: discussion_board_reportUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutPostNestedInput\n  }\n\n  export type discussion_board_commentUpsertWithoutDiscussion_board_voteInput = {\n    update: XOR<discussion_board_commentUpdateWithoutDiscussion_board_voteInput, discussion_board_commentUncheckedUpdateWithoutDiscussion_board_voteInput>\n    create: XOR<discussion_board_commentCreateWithoutDiscussion_board_voteInput, discussion_board_commentUncheckedCreateWithoutDiscussion_board_voteInput>\n    where?: discussion_board_commentWhereInput\n  }\n\n  export type discussion_board_commentUpdateToOneWithWhereWithoutDiscussion_board_voteInput = {\n    where?: discussion_board_commentWhereInput\n    data: XOR<discussion_board_commentUpdateWithoutDiscussion_board_voteInput, discussion_board_commentUncheckedUpdateWithoutDiscussion_board_voteInput>\n  }\n\n  export type discussion_board_commentUpdateWithoutDiscussion_board_voteInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    post?: discussion_board_postUpdateOneRequiredWithoutDiscussion_board_commentNestedInput\n    author_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_commentNestedInput\n    parent_comment?: discussion_board_commentUpdateOneWithoutRecursiveNestedInput\n    recursive?: discussion_board_commentUpdateManyWithoutParent_commentNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutCommentNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutCommentNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutCommentNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutCommentNestedInput\n    discussion_board_report?: discussion_board_reportUpdateManyWithoutCommentNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutCommentNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutCommentNestedInput\n  }\n\n  export type discussion_board_commentUncheckedUpdateWithoutDiscussion_board_voteInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    author_user_id?: StringFieldUpdateOperationsInput | string\n    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recursive?: discussion_board_commentUncheckedUpdateManyWithoutParent_commentNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_report?: discussion_board_reportUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutCommentNestedInput\n  }\n\n  export type discussion_board_usersCreateWithoutDiscussion_board_reactionInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    discussion_board_admins?: discussion_board_adminsCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    discussion_board_user_profiles?: discussion_board_user_profilesCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    discussion_board_user_settings?: discussion_board_user_settingsCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    discussion_board_thread?: discussion_board_threadCreateNestedManyWithoutCreator_userInput\n    discussion_board_post?: discussion_board_postCreateNestedManyWithoutAuthor_userInput\n    discussion_board_comment?: discussion_board_commentCreateNestedManyWithoutAuthor_userInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutUserInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutUserInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutRecipient_userInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutUserInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportCreateNestedManyWithoutReported_userInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportCreateNestedManyWithoutReporting_userInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutUserInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logCreateNestedManyWithoutActorInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logCreateNestedManyWithoutAffected_userInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutUserInput\n    discussion_board_ban?: discussion_board_banCreateNestedManyWithoutUserInput\n    discussion_board_user_activity?: discussion_board_user_activityCreateNestedOneWithoutDiscussion_board_userInput\n  }\n\n  export type discussion_board_usersUncheckedCreateWithoutDiscussion_board_reactionInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUncheckedCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    discussion_board_admins?: discussion_board_adminsUncheckedCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUncheckedCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    discussion_board_user_settings?: discussion_board_user_settingsUncheckedCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    discussion_board_thread?: discussion_board_threadUncheckedCreateNestedManyWithoutCreator_userInput\n    discussion_board_post?: discussion_board_postUncheckedCreateNestedManyWithoutAuthor_userInput\n    discussion_board_comment?: discussion_board_commentUncheckedCreateNestedManyWithoutAuthor_userInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutRecipient_userInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUncheckedCreateNestedManyWithoutReported_userInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUncheckedCreateNestedManyWithoutReporting_userInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUncheckedCreateNestedManyWithoutActorInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUncheckedCreateNestedManyWithoutAffected_userInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_ban?: discussion_board_banUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_user_activity?: discussion_board_user_activityUncheckedCreateNestedOneWithoutDiscussion_board_userInput\n  }\n\n  export type discussion_board_usersCreateOrConnectWithoutDiscussion_board_reactionInput = {\n    where: discussion_board_usersWhereUniqueInput\n    create: XOR<discussion_board_usersCreateWithoutDiscussion_board_reactionInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_reactionInput>\n  }\n\n  export type discussion_board_threadCreateWithoutDiscussion_board_reactionInput = {\n    id: string\n    title: string\n    body: string\n    is_locked: boolean\n    is_pinned: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    creator_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_threadInput\n    category: discussion_board_thread_categoryCreateNestedOneWithoutDiscussion_board_threadInput\n    discussion_board_post?: discussion_board_postCreateNestedManyWithoutThreadInput\n    discussion_board_thread_tag?: discussion_board_thread_tagCreateNestedManyWithoutThreadInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityCreateNestedOneWithoutThreadInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutThreadInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutThreadInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutThreadInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutThreadInput\n    discussion_board_report?: discussion_board_reportCreateNestedManyWithoutThreadInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutThreadInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutThreadInput\n    discussion_board_thread_stats?: discussion_board_thread_statsCreateNestedOneWithoutDiscussion_board_threadInput\n  }\n\n  export type discussion_board_threadUncheckedCreateWithoutDiscussion_board_reactionInput = {\n    id: string\n    creator_user_id: string\n    category_id: string\n    title: string\n    body: string\n    is_locked: boolean\n    is_pinned: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_post?: discussion_board_postUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_thread_tag?: discussion_board_thread_tagUncheckedCreateNestedManyWithoutThreadInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUncheckedCreateNestedOneWithoutThreadInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_report?: discussion_board_reportUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUncheckedCreateNestedOneWithoutDiscussion_board_threadInput\n  }\n\n  export type discussion_board_threadCreateOrConnectWithoutDiscussion_board_reactionInput = {\n    where: discussion_board_threadWhereUniqueInput\n    create: XOR<discussion_board_threadCreateWithoutDiscussion_board_reactionInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_reactionInput>\n  }\n\n  export type discussion_board_postCreateWithoutDiscussion_board_reactionInput = {\n    id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    thread: discussion_board_threadCreateNestedOneWithoutDiscussion_board_postInput\n    author_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_postInput\n    parent_post?: discussion_board_postCreateNestedOneWithoutRecursiveInput\n    recursive?: discussion_board_postCreateNestedManyWithoutParent_postInput\n    discussion_board_comment?: discussion_board_commentCreateNestedManyWithoutPostInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutPostInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutPostInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutPostInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutPostInput\n    discussion_board_report?: discussion_board_reportCreateNestedManyWithoutPostInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutPostInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutPostInput\n  }\n\n  export type discussion_board_postUncheckedCreateWithoutDiscussion_board_reactionInput = {\n    id: string\n    thread_id: string\n    author_user_id: string\n    parent_post_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    recursive?: discussion_board_postUncheckedCreateNestedManyWithoutParent_postInput\n    discussion_board_comment?: discussion_board_commentUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_report?: discussion_board_reportUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutPostInput\n  }\n\n  export type discussion_board_postCreateOrConnectWithoutDiscussion_board_reactionInput = {\n    where: discussion_board_postWhereUniqueInput\n    create: XOR<discussion_board_postCreateWithoutDiscussion_board_reactionInput, discussion_board_postUncheckedCreateWithoutDiscussion_board_reactionInput>\n  }\n\n  export type discussion_board_commentCreateWithoutDiscussion_board_reactionInput = {\n    id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    post: discussion_board_postCreateNestedOneWithoutDiscussion_board_commentInput\n    author_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_commentInput\n    parent_comment?: discussion_board_commentCreateNestedOneWithoutRecursiveInput\n    recursive?: discussion_board_commentCreateNestedManyWithoutParent_commentInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutCommentInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutCommentInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutCommentInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutCommentInput\n    discussion_board_report?: discussion_board_reportCreateNestedManyWithoutCommentInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutCommentInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutCommentInput\n  }\n\n  export type discussion_board_commentUncheckedCreateWithoutDiscussion_board_reactionInput = {\n    id: string\n    post_id: string\n    author_user_id: string\n    parent_comment_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    recursive?: discussion_board_commentUncheckedCreateNestedManyWithoutParent_commentInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_report?: discussion_board_reportUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutCommentInput\n  }\n\n  export type discussion_board_commentCreateOrConnectWithoutDiscussion_board_reactionInput = {\n    where: discussion_board_commentWhereUniqueInput\n    create: XOR<discussion_board_commentCreateWithoutDiscussion_board_reactionInput, discussion_board_commentUncheckedCreateWithoutDiscussion_board_reactionInput>\n  }\n\n  export type discussion_board_usersUpsertWithoutDiscussion_board_reactionInput = {\n    update: XOR<discussion_board_usersUpdateWithoutDiscussion_board_reactionInput, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_reactionInput>\n    create: XOR<discussion_board_usersCreateWithoutDiscussion_board_reactionInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_reactionInput>\n    where?: discussion_board_usersWhereInput\n  }\n\n  export type discussion_board_usersUpdateToOneWithWhereWithoutDiscussion_board_reactionInput = {\n    where?: discussion_board_usersWhereInput\n    data: XOR<discussion_board_usersUpdateWithoutDiscussion_board_reactionInput, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_reactionInput>\n  }\n\n  export type discussion_board_usersUpdateWithoutDiscussion_board_reactionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput\n    discussion_board_admins?: discussion_board_adminsUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_settings?: discussion_board_user_settingsUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput\n    discussion_board_thread?: discussion_board_threadUpdateManyWithoutCreator_userNestedInput\n    discussion_board_post?: discussion_board_postUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_comment?: discussion_board_commentUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutUserNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutUserNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutRecipient_userNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutUserNestedInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUpdateManyWithoutReported_userNestedInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUpdateManyWithoutReporting_userNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutUserNestedInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUpdateManyWithoutActorNestedInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUpdateManyWithoutAffected_userNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutUserNestedInput\n    discussion_board_ban?: discussion_board_banUpdateManyWithoutUserNestedInput\n    discussion_board_user_activity?: discussion_board_user_activityUpdateOneWithoutDiscussion_board_userNestedInput\n  }\n\n  export type discussion_board_usersUncheckedUpdateWithoutDiscussion_board_reactionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUncheckedUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput\n    discussion_board_admins?: discussion_board_adminsUncheckedUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUncheckedUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_settings?: discussion_board_user_settingsUncheckedUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput\n    discussion_board_thread?: discussion_board_threadUncheckedUpdateManyWithoutCreator_userNestedInput\n    discussion_board_post?: discussion_board_postUncheckedUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_comment?: discussion_board_commentUncheckedUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutRecipient_userNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUncheckedUpdateManyWithoutReported_userNestedInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUncheckedUpdateManyWithoutReporting_userNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUncheckedUpdateManyWithoutActorNestedInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUncheckedUpdateManyWithoutAffected_userNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_ban?: discussion_board_banUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_user_activity?: discussion_board_user_activityUncheckedUpdateOneWithoutDiscussion_board_userNestedInput\n  }\n\n  export type discussion_board_threadUpsertWithoutDiscussion_board_reactionInput = {\n    update: XOR<discussion_board_threadUpdateWithoutDiscussion_board_reactionInput, discussion_board_threadUncheckedUpdateWithoutDiscussion_board_reactionInput>\n    create: XOR<discussion_board_threadCreateWithoutDiscussion_board_reactionInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_reactionInput>\n    where?: discussion_board_threadWhereInput\n  }\n\n  export type discussion_board_threadUpdateToOneWithWhereWithoutDiscussion_board_reactionInput = {\n    where?: discussion_board_threadWhereInput\n    data: XOR<discussion_board_threadUpdateWithoutDiscussion_board_reactionInput, discussion_board_threadUncheckedUpdateWithoutDiscussion_board_reactionInput>\n  }\n\n  export type discussion_board_threadUpdateWithoutDiscussion_board_reactionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    is_locked?: BoolFieldUpdateOperationsInput | boolean\n    is_pinned?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    creator_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_threadNestedInput\n    category?: discussion_board_thread_categoryUpdateOneRequiredWithoutDiscussion_board_threadNestedInput\n    discussion_board_post?: discussion_board_postUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_tag?: discussion_board_thread_tagUpdateManyWithoutThreadNestedInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUpdateOneWithoutThreadNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutThreadNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutThreadNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutThreadNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutThreadNestedInput\n    discussion_board_report?: discussion_board_reportUpdateManyWithoutThreadNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutThreadNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUpdateOneWithoutDiscussion_board_threadNestedInput\n  }\n\n  export type discussion_board_threadUncheckedUpdateWithoutDiscussion_board_reactionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    creator_user_id?: StringFieldUpdateOperationsInput | string\n    category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    is_locked?: BoolFieldUpdateOperationsInput | boolean\n    is_pinned?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_post?: discussion_board_postUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_tag?: discussion_board_thread_tagUncheckedUpdateManyWithoutThreadNestedInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUncheckedUpdateOneWithoutThreadNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_report?: discussion_board_reportUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUncheckedUpdateOneWithoutDiscussion_board_threadNestedInput\n  }\n\n  export type discussion_board_postUpsertWithoutDiscussion_board_reactionInput = {\n    update: XOR<discussion_board_postUpdateWithoutDiscussion_board_reactionInput, discussion_board_postUncheckedUpdateWithoutDiscussion_board_reactionInput>\n    create: XOR<discussion_board_postCreateWithoutDiscussion_board_reactionInput, discussion_board_postUncheckedCreateWithoutDiscussion_board_reactionInput>\n    where?: discussion_board_postWhereInput\n  }\n\n  export type discussion_board_postUpdateToOneWithWhereWithoutDiscussion_board_reactionInput = {\n    where?: discussion_board_postWhereInput\n    data: XOR<discussion_board_postUpdateWithoutDiscussion_board_reactionInput, discussion_board_postUncheckedUpdateWithoutDiscussion_board_reactionInput>\n  }\n\n  export type discussion_board_postUpdateWithoutDiscussion_board_reactionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    thread?: discussion_board_threadUpdateOneRequiredWithoutDiscussion_board_postNestedInput\n    author_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_postNestedInput\n    parent_post?: discussion_board_postUpdateOneWithoutRecursiveNestedInput\n    recursive?: discussion_board_postUpdateManyWithoutParent_postNestedInput\n    discussion_board_comment?: discussion_board_commentUpdateManyWithoutPostNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutPostNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutPostNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutPostNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutPostNestedInput\n    discussion_board_report?: discussion_board_reportUpdateManyWithoutPostNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutPostNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutPostNestedInput\n  }\n\n  export type discussion_board_postUncheckedUpdateWithoutDiscussion_board_reactionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    thread_id?: StringFieldUpdateOperationsInput | string\n    author_user_id?: StringFieldUpdateOperationsInput | string\n    parent_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recursive?: discussion_board_postUncheckedUpdateManyWithoutParent_postNestedInput\n    discussion_board_comment?: discussion_board_commentUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_report?: discussion_board_reportUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutPostNestedInput\n  }\n\n  export type discussion_board_commentUpsertWithoutDiscussion_board_reactionInput = {\n    update: XOR<discussion_board_commentUpdateWithoutDiscussion_board_reactionInput, discussion_board_commentUncheckedUpdateWithoutDiscussion_board_reactionInput>\n    create: XOR<discussion_board_commentCreateWithoutDiscussion_board_reactionInput, discussion_board_commentUncheckedCreateWithoutDiscussion_board_reactionInput>\n    where?: discussion_board_commentWhereInput\n  }\n\n  export type discussion_board_commentUpdateToOneWithWhereWithoutDiscussion_board_reactionInput = {\n    where?: discussion_board_commentWhereInput\n    data: XOR<discussion_board_commentUpdateWithoutDiscussion_board_reactionInput, discussion_board_commentUncheckedUpdateWithoutDiscussion_board_reactionInput>\n  }\n\n  export type discussion_board_commentUpdateWithoutDiscussion_board_reactionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    post?: discussion_board_postUpdateOneRequiredWithoutDiscussion_board_commentNestedInput\n    author_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_commentNestedInput\n    parent_comment?: discussion_board_commentUpdateOneWithoutRecursiveNestedInput\n    recursive?: discussion_board_commentUpdateManyWithoutParent_commentNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutCommentNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutCommentNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutCommentNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutCommentNestedInput\n    discussion_board_report?: discussion_board_reportUpdateManyWithoutCommentNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutCommentNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutCommentNestedInput\n  }\n\n  export type discussion_board_commentUncheckedUpdateWithoutDiscussion_board_reactionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    author_user_id?: StringFieldUpdateOperationsInput | string\n    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recursive?: discussion_board_commentUncheckedUpdateManyWithoutParent_commentNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_report?: discussion_board_reportUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutCommentNestedInput\n  }\n\n  export type discussion_board_usersCreateWithoutDiscussion_board_bookmarkInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    discussion_board_admins?: discussion_board_adminsCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    discussion_board_user_profiles?: discussion_board_user_profilesCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    discussion_board_user_settings?: discussion_board_user_settingsCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    discussion_board_thread?: discussion_board_threadCreateNestedManyWithoutCreator_userInput\n    discussion_board_post?: discussion_board_postCreateNestedManyWithoutAuthor_userInput\n    discussion_board_comment?: discussion_board_commentCreateNestedManyWithoutAuthor_userInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutUserInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutUserInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutRecipient_userInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutUserInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportCreateNestedManyWithoutReported_userInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportCreateNestedManyWithoutReporting_userInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutUserInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logCreateNestedManyWithoutActorInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logCreateNestedManyWithoutAffected_userInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutUserInput\n    discussion_board_ban?: discussion_board_banCreateNestedManyWithoutUserInput\n    discussion_board_user_activity?: discussion_board_user_activityCreateNestedOneWithoutDiscussion_board_userInput\n  }\n\n  export type discussion_board_usersUncheckedCreateWithoutDiscussion_board_bookmarkInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUncheckedCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    discussion_board_admins?: discussion_board_adminsUncheckedCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUncheckedCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    discussion_board_user_settings?: discussion_board_user_settingsUncheckedCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    discussion_board_thread?: discussion_board_threadUncheckedCreateNestedManyWithoutCreator_userInput\n    discussion_board_post?: discussion_board_postUncheckedCreateNestedManyWithoutAuthor_userInput\n    discussion_board_comment?: discussion_board_commentUncheckedCreateNestedManyWithoutAuthor_userInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutRecipient_userInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUncheckedCreateNestedManyWithoutReported_userInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUncheckedCreateNestedManyWithoutReporting_userInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUncheckedCreateNestedManyWithoutActorInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUncheckedCreateNestedManyWithoutAffected_userInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_ban?: discussion_board_banUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_user_activity?: discussion_board_user_activityUncheckedCreateNestedOneWithoutDiscussion_board_userInput\n  }\n\n  export type discussion_board_usersCreateOrConnectWithoutDiscussion_board_bookmarkInput = {\n    where: discussion_board_usersWhereUniqueInput\n    create: XOR<discussion_board_usersCreateWithoutDiscussion_board_bookmarkInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_bookmarkInput>\n  }\n\n  export type discussion_board_threadCreateWithoutDiscussion_board_bookmarkInput = {\n    id: string\n    title: string\n    body: string\n    is_locked: boolean\n    is_pinned: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    creator_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_threadInput\n    category: discussion_board_thread_categoryCreateNestedOneWithoutDiscussion_board_threadInput\n    discussion_board_post?: discussion_board_postCreateNestedManyWithoutThreadInput\n    discussion_board_thread_tag?: discussion_board_thread_tagCreateNestedManyWithoutThreadInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityCreateNestedOneWithoutThreadInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutThreadInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutThreadInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutThreadInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutThreadInput\n    discussion_board_report?: discussion_board_reportCreateNestedManyWithoutThreadInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutThreadInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutThreadInput\n    discussion_board_thread_stats?: discussion_board_thread_statsCreateNestedOneWithoutDiscussion_board_threadInput\n  }\n\n  export type discussion_board_threadUncheckedCreateWithoutDiscussion_board_bookmarkInput = {\n    id: string\n    creator_user_id: string\n    category_id: string\n    title: string\n    body: string\n    is_locked: boolean\n    is_pinned: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_post?: discussion_board_postUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_thread_tag?: discussion_board_thread_tagUncheckedCreateNestedManyWithoutThreadInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUncheckedCreateNestedOneWithoutThreadInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_report?: discussion_board_reportUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUncheckedCreateNestedOneWithoutDiscussion_board_threadInput\n  }\n\n  export type discussion_board_threadCreateOrConnectWithoutDiscussion_board_bookmarkInput = {\n    where: discussion_board_threadWhereUniqueInput\n    create: XOR<discussion_board_threadCreateWithoutDiscussion_board_bookmarkInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_bookmarkInput>\n  }\n\n  export type discussion_board_postCreateWithoutDiscussion_board_bookmarkInput = {\n    id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    thread: discussion_board_threadCreateNestedOneWithoutDiscussion_board_postInput\n    author_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_postInput\n    parent_post?: discussion_board_postCreateNestedOneWithoutRecursiveInput\n    recursive?: discussion_board_postCreateNestedManyWithoutParent_postInput\n    discussion_board_comment?: discussion_board_commentCreateNestedManyWithoutPostInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutPostInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutPostInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutPostInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutPostInput\n    discussion_board_report?: discussion_board_reportCreateNestedManyWithoutPostInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutPostInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutPostInput\n  }\n\n  export type discussion_board_postUncheckedCreateWithoutDiscussion_board_bookmarkInput = {\n    id: string\n    thread_id: string\n    author_user_id: string\n    parent_post_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    recursive?: discussion_board_postUncheckedCreateNestedManyWithoutParent_postInput\n    discussion_board_comment?: discussion_board_commentUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_report?: discussion_board_reportUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutPostInput\n  }\n\n  export type discussion_board_postCreateOrConnectWithoutDiscussion_board_bookmarkInput = {\n    where: discussion_board_postWhereUniqueInput\n    create: XOR<discussion_board_postCreateWithoutDiscussion_board_bookmarkInput, discussion_board_postUncheckedCreateWithoutDiscussion_board_bookmarkInput>\n  }\n\n  export type discussion_board_commentCreateWithoutDiscussion_board_bookmarkInput = {\n    id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    post: discussion_board_postCreateNestedOneWithoutDiscussion_board_commentInput\n    author_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_commentInput\n    parent_comment?: discussion_board_commentCreateNestedOneWithoutRecursiveInput\n    recursive?: discussion_board_commentCreateNestedManyWithoutParent_commentInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutCommentInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutCommentInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutCommentInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutCommentInput\n    discussion_board_report?: discussion_board_reportCreateNestedManyWithoutCommentInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutCommentInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutCommentInput\n  }\n\n  export type discussion_board_commentUncheckedCreateWithoutDiscussion_board_bookmarkInput = {\n    id: string\n    post_id: string\n    author_user_id: string\n    parent_comment_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    recursive?: discussion_board_commentUncheckedCreateNestedManyWithoutParent_commentInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_report?: discussion_board_reportUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutCommentInput\n  }\n\n  export type discussion_board_commentCreateOrConnectWithoutDiscussion_board_bookmarkInput = {\n    where: discussion_board_commentWhereUniqueInput\n    create: XOR<discussion_board_commentCreateWithoutDiscussion_board_bookmarkInput, discussion_board_commentUncheckedCreateWithoutDiscussion_board_bookmarkInput>\n  }\n\n  export type discussion_board_usersUpsertWithoutDiscussion_board_bookmarkInput = {\n    update: XOR<discussion_board_usersUpdateWithoutDiscussion_board_bookmarkInput, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_bookmarkInput>\n    create: XOR<discussion_board_usersCreateWithoutDiscussion_board_bookmarkInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_bookmarkInput>\n    where?: discussion_board_usersWhereInput\n  }\n\n  export type discussion_board_usersUpdateToOneWithWhereWithoutDiscussion_board_bookmarkInput = {\n    where?: discussion_board_usersWhereInput\n    data: XOR<discussion_board_usersUpdateWithoutDiscussion_board_bookmarkInput, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_bookmarkInput>\n  }\n\n  export type discussion_board_usersUpdateWithoutDiscussion_board_bookmarkInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput\n    discussion_board_admins?: discussion_board_adminsUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_settings?: discussion_board_user_settingsUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput\n    discussion_board_thread?: discussion_board_threadUpdateManyWithoutCreator_userNestedInput\n    discussion_board_post?: discussion_board_postUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_comment?: discussion_board_commentUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutUserNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutUserNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutRecipient_userNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutUserNestedInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUpdateManyWithoutReported_userNestedInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUpdateManyWithoutReporting_userNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutUserNestedInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUpdateManyWithoutActorNestedInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUpdateManyWithoutAffected_userNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutUserNestedInput\n    discussion_board_ban?: discussion_board_banUpdateManyWithoutUserNestedInput\n    discussion_board_user_activity?: discussion_board_user_activityUpdateOneWithoutDiscussion_board_userNestedInput\n  }\n\n  export type discussion_board_usersUncheckedUpdateWithoutDiscussion_board_bookmarkInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUncheckedUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput\n    discussion_board_admins?: discussion_board_adminsUncheckedUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUncheckedUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_settings?: discussion_board_user_settingsUncheckedUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput\n    discussion_board_thread?: discussion_board_threadUncheckedUpdateManyWithoutCreator_userNestedInput\n    discussion_board_post?: discussion_board_postUncheckedUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_comment?: discussion_board_commentUncheckedUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutRecipient_userNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUncheckedUpdateManyWithoutReported_userNestedInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUncheckedUpdateManyWithoutReporting_userNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUncheckedUpdateManyWithoutActorNestedInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUncheckedUpdateManyWithoutAffected_userNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_ban?: discussion_board_banUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_user_activity?: discussion_board_user_activityUncheckedUpdateOneWithoutDiscussion_board_userNestedInput\n  }\n\n  export type discussion_board_threadUpsertWithoutDiscussion_board_bookmarkInput = {\n    update: XOR<discussion_board_threadUpdateWithoutDiscussion_board_bookmarkInput, discussion_board_threadUncheckedUpdateWithoutDiscussion_board_bookmarkInput>\n    create: XOR<discussion_board_threadCreateWithoutDiscussion_board_bookmarkInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_bookmarkInput>\n    where?: discussion_board_threadWhereInput\n  }\n\n  export type discussion_board_threadUpdateToOneWithWhereWithoutDiscussion_board_bookmarkInput = {\n    where?: discussion_board_threadWhereInput\n    data: XOR<discussion_board_threadUpdateWithoutDiscussion_board_bookmarkInput, discussion_board_threadUncheckedUpdateWithoutDiscussion_board_bookmarkInput>\n  }\n\n  export type discussion_board_threadUpdateWithoutDiscussion_board_bookmarkInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    is_locked?: BoolFieldUpdateOperationsInput | boolean\n    is_pinned?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    creator_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_threadNestedInput\n    category?: discussion_board_thread_categoryUpdateOneRequiredWithoutDiscussion_board_threadNestedInput\n    discussion_board_post?: discussion_board_postUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_tag?: discussion_board_thread_tagUpdateManyWithoutThreadNestedInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUpdateOneWithoutThreadNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutThreadNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutThreadNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutThreadNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutThreadNestedInput\n    discussion_board_report?: discussion_board_reportUpdateManyWithoutThreadNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutThreadNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUpdateOneWithoutDiscussion_board_threadNestedInput\n  }\n\n  export type discussion_board_threadUncheckedUpdateWithoutDiscussion_board_bookmarkInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    creator_user_id?: StringFieldUpdateOperationsInput | string\n    category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    is_locked?: BoolFieldUpdateOperationsInput | boolean\n    is_pinned?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_post?: discussion_board_postUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_tag?: discussion_board_thread_tagUncheckedUpdateManyWithoutThreadNestedInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUncheckedUpdateOneWithoutThreadNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_report?: discussion_board_reportUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUncheckedUpdateOneWithoutDiscussion_board_threadNestedInput\n  }\n\n  export type discussion_board_postUpsertWithoutDiscussion_board_bookmarkInput = {\n    update: XOR<discussion_board_postUpdateWithoutDiscussion_board_bookmarkInput, discussion_board_postUncheckedUpdateWithoutDiscussion_board_bookmarkInput>\n    create: XOR<discussion_board_postCreateWithoutDiscussion_board_bookmarkInput, discussion_board_postUncheckedCreateWithoutDiscussion_board_bookmarkInput>\n    where?: discussion_board_postWhereInput\n  }\n\n  export type discussion_board_postUpdateToOneWithWhereWithoutDiscussion_board_bookmarkInput = {\n    where?: discussion_board_postWhereInput\n    data: XOR<discussion_board_postUpdateWithoutDiscussion_board_bookmarkInput, discussion_board_postUncheckedUpdateWithoutDiscussion_board_bookmarkInput>\n  }\n\n  export type discussion_board_postUpdateWithoutDiscussion_board_bookmarkInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    thread?: discussion_board_threadUpdateOneRequiredWithoutDiscussion_board_postNestedInput\n    author_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_postNestedInput\n    parent_post?: discussion_board_postUpdateOneWithoutRecursiveNestedInput\n    recursive?: discussion_board_postUpdateManyWithoutParent_postNestedInput\n    discussion_board_comment?: discussion_board_commentUpdateManyWithoutPostNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutPostNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutPostNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutPostNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutPostNestedInput\n    discussion_board_report?: discussion_board_reportUpdateManyWithoutPostNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutPostNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutPostNestedInput\n  }\n\n  export type discussion_board_postUncheckedUpdateWithoutDiscussion_board_bookmarkInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    thread_id?: StringFieldUpdateOperationsInput | string\n    author_user_id?: StringFieldUpdateOperationsInput | string\n    parent_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recursive?: discussion_board_postUncheckedUpdateManyWithoutParent_postNestedInput\n    discussion_board_comment?: discussion_board_commentUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_report?: discussion_board_reportUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutPostNestedInput\n  }\n\n  export type discussion_board_commentUpsertWithoutDiscussion_board_bookmarkInput = {\n    update: XOR<discussion_board_commentUpdateWithoutDiscussion_board_bookmarkInput, discussion_board_commentUncheckedUpdateWithoutDiscussion_board_bookmarkInput>\n    create: XOR<discussion_board_commentCreateWithoutDiscussion_board_bookmarkInput, discussion_board_commentUncheckedCreateWithoutDiscussion_board_bookmarkInput>\n    where?: discussion_board_commentWhereInput\n  }\n\n  export type discussion_board_commentUpdateToOneWithWhereWithoutDiscussion_board_bookmarkInput = {\n    where?: discussion_board_commentWhereInput\n    data: XOR<discussion_board_commentUpdateWithoutDiscussion_board_bookmarkInput, discussion_board_commentUncheckedUpdateWithoutDiscussion_board_bookmarkInput>\n  }\n\n  export type discussion_board_commentUpdateWithoutDiscussion_board_bookmarkInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    post?: discussion_board_postUpdateOneRequiredWithoutDiscussion_board_commentNestedInput\n    author_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_commentNestedInput\n    parent_comment?: discussion_board_commentUpdateOneWithoutRecursiveNestedInput\n    recursive?: discussion_board_commentUpdateManyWithoutParent_commentNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutCommentNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutCommentNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutCommentNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutCommentNestedInput\n    discussion_board_report?: discussion_board_reportUpdateManyWithoutCommentNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutCommentNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutCommentNestedInput\n  }\n\n  export type discussion_board_commentUncheckedUpdateWithoutDiscussion_board_bookmarkInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    author_user_id?: StringFieldUpdateOperationsInput | string\n    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recursive?: discussion_board_commentUncheckedUpdateManyWithoutParent_commentNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_report?: discussion_board_reportUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutCommentNestedInput\n  }\n\n  export type discussion_board_usersCreateWithoutDiscussion_board_notificationInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    discussion_board_admins?: discussion_board_adminsCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    discussion_board_user_profiles?: discussion_board_user_profilesCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    discussion_board_user_settings?: discussion_board_user_settingsCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    discussion_board_thread?: discussion_board_threadCreateNestedManyWithoutCreator_userInput\n    discussion_board_post?: discussion_board_postCreateNestedManyWithoutAuthor_userInput\n    discussion_board_comment?: discussion_board_commentCreateNestedManyWithoutAuthor_userInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutUserInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutUserInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutUserInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutUserInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportCreateNestedManyWithoutReported_userInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportCreateNestedManyWithoutReporting_userInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutUserInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logCreateNestedManyWithoutActorInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logCreateNestedManyWithoutAffected_userInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutUserInput\n    discussion_board_ban?: discussion_board_banCreateNestedManyWithoutUserInput\n    discussion_board_user_activity?: discussion_board_user_activityCreateNestedOneWithoutDiscussion_board_userInput\n  }\n\n  export type discussion_board_usersUncheckedCreateWithoutDiscussion_board_notificationInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUncheckedCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    discussion_board_admins?: discussion_board_adminsUncheckedCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUncheckedCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    discussion_board_user_settings?: discussion_board_user_settingsUncheckedCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    discussion_board_thread?: discussion_board_threadUncheckedCreateNestedManyWithoutCreator_userInput\n    discussion_board_post?: discussion_board_postUncheckedCreateNestedManyWithoutAuthor_userInput\n    discussion_board_comment?: discussion_board_commentUncheckedCreateNestedManyWithoutAuthor_userInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUncheckedCreateNestedManyWithoutReported_userInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUncheckedCreateNestedManyWithoutReporting_userInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUncheckedCreateNestedManyWithoutActorInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUncheckedCreateNestedManyWithoutAffected_userInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_ban?: discussion_board_banUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_user_activity?: discussion_board_user_activityUncheckedCreateNestedOneWithoutDiscussion_board_userInput\n  }\n\n  export type discussion_board_usersCreateOrConnectWithoutDiscussion_board_notificationInput = {\n    where: discussion_board_usersWhereUniqueInput\n    create: XOR<discussion_board_usersCreateWithoutDiscussion_board_notificationInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_notificationInput>\n  }\n\n  export type discussion_board_threadCreateWithoutDiscussion_board_notificationInput = {\n    id: string\n    title: string\n    body: string\n    is_locked: boolean\n    is_pinned: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    creator_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_threadInput\n    category: discussion_board_thread_categoryCreateNestedOneWithoutDiscussion_board_threadInput\n    discussion_board_post?: discussion_board_postCreateNestedManyWithoutThreadInput\n    discussion_board_thread_tag?: discussion_board_thread_tagCreateNestedManyWithoutThreadInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityCreateNestedOneWithoutThreadInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutThreadInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutThreadInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutThreadInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutThreadInput\n    discussion_board_report?: discussion_board_reportCreateNestedManyWithoutThreadInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutThreadInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutThreadInput\n    discussion_board_thread_stats?: discussion_board_thread_statsCreateNestedOneWithoutDiscussion_board_threadInput\n  }\n\n  export type discussion_board_threadUncheckedCreateWithoutDiscussion_board_notificationInput = {\n    id: string\n    creator_user_id: string\n    category_id: string\n    title: string\n    body: string\n    is_locked: boolean\n    is_pinned: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_post?: discussion_board_postUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_thread_tag?: discussion_board_thread_tagUncheckedCreateNestedManyWithoutThreadInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUncheckedCreateNestedOneWithoutThreadInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_report?: discussion_board_reportUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUncheckedCreateNestedOneWithoutDiscussion_board_threadInput\n  }\n\n  export type discussion_board_threadCreateOrConnectWithoutDiscussion_board_notificationInput = {\n    where: discussion_board_threadWhereUniqueInput\n    create: XOR<discussion_board_threadCreateWithoutDiscussion_board_notificationInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_notificationInput>\n  }\n\n  export type discussion_board_postCreateWithoutDiscussion_board_notificationInput = {\n    id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    thread: discussion_board_threadCreateNestedOneWithoutDiscussion_board_postInput\n    author_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_postInput\n    parent_post?: discussion_board_postCreateNestedOneWithoutRecursiveInput\n    recursive?: discussion_board_postCreateNestedManyWithoutParent_postInput\n    discussion_board_comment?: discussion_board_commentCreateNestedManyWithoutPostInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutPostInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutPostInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutPostInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutPostInput\n    discussion_board_report?: discussion_board_reportCreateNestedManyWithoutPostInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutPostInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutPostInput\n  }\n\n  export type discussion_board_postUncheckedCreateWithoutDiscussion_board_notificationInput = {\n    id: string\n    thread_id: string\n    author_user_id: string\n    parent_post_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    recursive?: discussion_board_postUncheckedCreateNestedManyWithoutParent_postInput\n    discussion_board_comment?: discussion_board_commentUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_report?: discussion_board_reportUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutPostInput\n  }\n\n  export type discussion_board_postCreateOrConnectWithoutDiscussion_board_notificationInput = {\n    where: discussion_board_postWhereUniqueInput\n    create: XOR<discussion_board_postCreateWithoutDiscussion_board_notificationInput, discussion_board_postUncheckedCreateWithoutDiscussion_board_notificationInput>\n  }\n\n  export type discussion_board_commentCreateWithoutDiscussion_board_notificationInput = {\n    id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    post: discussion_board_postCreateNestedOneWithoutDiscussion_board_commentInput\n    author_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_commentInput\n    parent_comment?: discussion_board_commentCreateNestedOneWithoutRecursiveInput\n    recursive?: discussion_board_commentCreateNestedManyWithoutParent_commentInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutCommentInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutCommentInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutCommentInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutCommentInput\n    discussion_board_report?: discussion_board_reportCreateNestedManyWithoutCommentInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutCommentInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutCommentInput\n  }\n\n  export type discussion_board_commentUncheckedCreateWithoutDiscussion_board_notificationInput = {\n    id: string\n    post_id: string\n    author_user_id: string\n    parent_comment_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    recursive?: discussion_board_commentUncheckedCreateNestedManyWithoutParent_commentInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_report?: discussion_board_reportUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutCommentInput\n  }\n\n  export type discussion_board_commentCreateOrConnectWithoutDiscussion_board_notificationInput = {\n    where: discussion_board_commentWhereUniqueInput\n    create: XOR<discussion_board_commentCreateWithoutDiscussion_board_notificationInput, discussion_board_commentUncheckedCreateWithoutDiscussion_board_notificationInput>\n  }\n\n  export type discussion_board_usersUpsertWithoutDiscussion_board_notificationInput = {\n    update: XOR<discussion_board_usersUpdateWithoutDiscussion_board_notificationInput, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_notificationInput>\n    create: XOR<discussion_board_usersCreateWithoutDiscussion_board_notificationInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_notificationInput>\n    where?: discussion_board_usersWhereInput\n  }\n\n  export type discussion_board_usersUpdateToOneWithWhereWithoutDiscussion_board_notificationInput = {\n    where?: discussion_board_usersWhereInput\n    data: XOR<discussion_board_usersUpdateWithoutDiscussion_board_notificationInput, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_notificationInput>\n  }\n\n  export type discussion_board_usersUpdateWithoutDiscussion_board_notificationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput\n    discussion_board_admins?: discussion_board_adminsUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_settings?: discussion_board_user_settingsUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput\n    discussion_board_thread?: discussion_board_threadUpdateManyWithoutCreator_userNestedInput\n    discussion_board_post?: discussion_board_postUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_comment?: discussion_board_commentUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutUserNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutUserNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutUserNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutUserNestedInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUpdateManyWithoutReported_userNestedInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUpdateManyWithoutReporting_userNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutUserNestedInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUpdateManyWithoutActorNestedInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUpdateManyWithoutAffected_userNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutUserNestedInput\n    discussion_board_ban?: discussion_board_banUpdateManyWithoutUserNestedInput\n    discussion_board_user_activity?: discussion_board_user_activityUpdateOneWithoutDiscussion_board_userNestedInput\n  }\n\n  export type discussion_board_usersUncheckedUpdateWithoutDiscussion_board_notificationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUncheckedUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput\n    discussion_board_admins?: discussion_board_adminsUncheckedUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUncheckedUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_settings?: discussion_board_user_settingsUncheckedUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput\n    discussion_board_thread?: discussion_board_threadUncheckedUpdateManyWithoutCreator_userNestedInput\n    discussion_board_post?: discussion_board_postUncheckedUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_comment?: discussion_board_commentUncheckedUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUncheckedUpdateManyWithoutReported_userNestedInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUncheckedUpdateManyWithoutReporting_userNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUncheckedUpdateManyWithoutActorNestedInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUncheckedUpdateManyWithoutAffected_userNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_ban?: discussion_board_banUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_user_activity?: discussion_board_user_activityUncheckedUpdateOneWithoutDiscussion_board_userNestedInput\n  }\n\n  export type discussion_board_threadUpsertWithoutDiscussion_board_notificationInput = {\n    update: XOR<discussion_board_threadUpdateWithoutDiscussion_board_notificationInput, discussion_board_threadUncheckedUpdateWithoutDiscussion_board_notificationInput>\n    create: XOR<discussion_board_threadCreateWithoutDiscussion_board_notificationInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_notificationInput>\n    where?: discussion_board_threadWhereInput\n  }\n\n  export type discussion_board_threadUpdateToOneWithWhereWithoutDiscussion_board_notificationInput = {\n    where?: discussion_board_threadWhereInput\n    data: XOR<discussion_board_threadUpdateWithoutDiscussion_board_notificationInput, discussion_board_threadUncheckedUpdateWithoutDiscussion_board_notificationInput>\n  }\n\n  export type discussion_board_threadUpdateWithoutDiscussion_board_notificationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    is_locked?: BoolFieldUpdateOperationsInput | boolean\n    is_pinned?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    creator_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_threadNestedInput\n    category?: discussion_board_thread_categoryUpdateOneRequiredWithoutDiscussion_board_threadNestedInput\n    discussion_board_post?: discussion_board_postUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_tag?: discussion_board_thread_tagUpdateManyWithoutThreadNestedInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUpdateOneWithoutThreadNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutThreadNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutThreadNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutThreadNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutThreadNestedInput\n    discussion_board_report?: discussion_board_reportUpdateManyWithoutThreadNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutThreadNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUpdateOneWithoutDiscussion_board_threadNestedInput\n  }\n\n  export type discussion_board_threadUncheckedUpdateWithoutDiscussion_board_notificationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    creator_user_id?: StringFieldUpdateOperationsInput | string\n    category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    is_locked?: BoolFieldUpdateOperationsInput | boolean\n    is_pinned?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_post?: discussion_board_postUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_tag?: discussion_board_thread_tagUncheckedUpdateManyWithoutThreadNestedInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUncheckedUpdateOneWithoutThreadNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_report?: discussion_board_reportUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUncheckedUpdateOneWithoutDiscussion_board_threadNestedInput\n  }\n\n  export type discussion_board_postUpsertWithoutDiscussion_board_notificationInput = {\n    update: XOR<discussion_board_postUpdateWithoutDiscussion_board_notificationInput, discussion_board_postUncheckedUpdateWithoutDiscussion_board_notificationInput>\n    create: XOR<discussion_board_postCreateWithoutDiscussion_board_notificationInput, discussion_board_postUncheckedCreateWithoutDiscussion_board_notificationInput>\n    where?: discussion_board_postWhereInput\n  }\n\n  export type discussion_board_postUpdateToOneWithWhereWithoutDiscussion_board_notificationInput = {\n    where?: discussion_board_postWhereInput\n    data: XOR<discussion_board_postUpdateWithoutDiscussion_board_notificationInput, discussion_board_postUncheckedUpdateWithoutDiscussion_board_notificationInput>\n  }\n\n  export type discussion_board_postUpdateWithoutDiscussion_board_notificationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    thread?: discussion_board_threadUpdateOneRequiredWithoutDiscussion_board_postNestedInput\n    author_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_postNestedInput\n    parent_post?: discussion_board_postUpdateOneWithoutRecursiveNestedInput\n    recursive?: discussion_board_postUpdateManyWithoutParent_postNestedInput\n    discussion_board_comment?: discussion_board_commentUpdateManyWithoutPostNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutPostNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutPostNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutPostNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutPostNestedInput\n    discussion_board_report?: discussion_board_reportUpdateManyWithoutPostNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutPostNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutPostNestedInput\n  }\n\n  export type discussion_board_postUncheckedUpdateWithoutDiscussion_board_notificationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    thread_id?: StringFieldUpdateOperationsInput | string\n    author_user_id?: StringFieldUpdateOperationsInput | string\n    parent_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recursive?: discussion_board_postUncheckedUpdateManyWithoutParent_postNestedInput\n    discussion_board_comment?: discussion_board_commentUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_report?: discussion_board_reportUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutPostNestedInput\n  }\n\n  export type discussion_board_commentUpsertWithoutDiscussion_board_notificationInput = {\n    update: XOR<discussion_board_commentUpdateWithoutDiscussion_board_notificationInput, discussion_board_commentUncheckedUpdateWithoutDiscussion_board_notificationInput>\n    create: XOR<discussion_board_commentCreateWithoutDiscussion_board_notificationInput, discussion_board_commentUncheckedCreateWithoutDiscussion_board_notificationInput>\n    where?: discussion_board_commentWhereInput\n  }\n\n  export type discussion_board_commentUpdateToOneWithWhereWithoutDiscussion_board_notificationInput = {\n    where?: discussion_board_commentWhereInput\n    data: XOR<discussion_board_commentUpdateWithoutDiscussion_board_notificationInput, discussion_board_commentUncheckedUpdateWithoutDiscussion_board_notificationInput>\n  }\n\n  export type discussion_board_commentUpdateWithoutDiscussion_board_notificationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    post?: discussion_board_postUpdateOneRequiredWithoutDiscussion_board_commentNestedInput\n    author_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_commentNestedInput\n    parent_comment?: discussion_board_commentUpdateOneWithoutRecursiveNestedInput\n    recursive?: discussion_board_commentUpdateManyWithoutParent_commentNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutCommentNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutCommentNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutCommentNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutCommentNestedInput\n    discussion_board_report?: discussion_board_reportUpdateManyWithoutCommentNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutCommentNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutCommentNestedInput\n  }\n\n  export type discussion_board_commentUncheckedUpdateWithoutDiscussion_board_notificationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    author_user_id?: StringFieldUpdateOperationsInput | string\n    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recursive?: discussion_board_commentUncheckedUpdateManyWithoutParent_commentNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_report?: discussion_board_reportUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutCommentNestedInput\n  }\n\n  export type discussion_board_usersCreateWithoutDiscussion_board_subscriptionInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    discussion_board_admins?: discussion_board_adminsCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    discussion_board_user_profiles?: discussion_board_user_profilesCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    discussion_board_user_settings?: discussion_board_user_settingsCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    discussion_board_thread?: discussion_board_threadCreateNestedManyWithoutCreator_userInput\n    discussion_board_post?: discussion_board_postCreateNestedManyWithoutAuthor_userInput\n    discussion_board_comment?: discussion_board_commentCreateNestedManyWithoutAuthor_userInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutUserInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutUserInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutUserInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutRecipient_userInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportCreateNestedManyWithoutReported_userInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportCreateNestedManyWithoutReporting_userInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutUserInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logCreateNestedManyWithoutActorInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logCreateNestedManyWithoutAffected_userInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutUserInput\n    discussion_board_ban?: discussion_board_banCreateNestedManyWithoutUserInput\n    discussion_board_user_activity?: discussion_board_user_activityCreateNestedOneWithoutDiscussion_board_userInput\n  }\n\n  export type discussion_board_usersUncheckedCreateWithoutDiscussion_board_subscriptionInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUncheckedCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    discussion_board_admins?: discussion_board_adminsUncheckedCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUncheckedCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    discussion_board_user_settings?: discussion_board_user_settingsUncheckedCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    discussion_board_thread?: discussion_board_threadUncheckedCreateNestedManyWithoutCreator_userInput\n    discussion_board_post?: discussion_board_postUncheckedCreateNestedManyWithoutAuthor_userInput\n    discussion_board_comment?: discussion_board_commentUncheckedCreateNestedManyWithoutAuthor_userInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutRecipient_userInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUncheckedCreateNestedManyWithoutReported_userInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUncheckedCreateNestedManyWithoutReporting_userInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUncheckedCreateNestedManyWithoutActorInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUncheckedCreateNestedManyWithoutAffected_userInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_ban?: discussion_board_banUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_user_activity?: discussion_board_user_activityUncheckedCreateNestedOneWithoutDiscussion_board_userInput\n  }\n\n  export type discussion_board_usersCreateOrConnectWithoutDiscussion_board_subscriptionInput = {\n    where: discussion_board_usersWhereUniqueInput\n    create: XOR<discussion_board_usersCreateWithoutDiscussion_board_subscriptionInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_subscriptionInput>\n  }\n\n  export type discussion_board_threadCreateWithoutDiscussion_board_subscriptionInput = {\n    id: string\n    title: string\n    body: string\n    is_locked: boolean\n    is_pinned: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    creator_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_threadInput\n    category: discussion_board_thread_categoryCreateNestedOneWithoutDiscussion_board_threadInput\n    discussion_board_post?: discussion_board_postCreateNestedManyWithoutThreadInput\n    discussion_board_thread_tag?: discussion_board_thread_tagCreateNestedManyWithoutThreadInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityCreateNestedOneWithoutThreadInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutThreadInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutThreadInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutThreadInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutThreadInput\n    discussion_board_report?: discussion_board_reportCreateNestedManyWithoutThreadInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutThreadInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutThreadInput\n    discussion_board_thread_stats?: discussion_board_thread_statsCreateNestedOneWithoutDiscussion_board_threadInput\n  }\n\n  export type discussion_board_threadUncheckedCreateWithoutDiscussion_board_subscriptionInput = {\n    id: string\n    creator_user_id: string\n    category_id: string\n    title: string\n    body: string\n    is_locked: boolean\n    is_pinned: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_post?: discussion_board_postUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_thread_tag?: discussion_board_thread_tagUncheckedCreateNestedManyWithoutThreadInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUncheckedCreateNestedOneWithoutThreadInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_report?: discussion_board_reportUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUncheckedCreateNestedOneWithoutDiscussion_board_threadInput\n  }\n\n  export type discussion_board_threadCreateOrConnectWithoutDiscussion_board_subscriptionInput = {\n    where: discussion_board_threadWhereUniqueInput\n    create: XOR<discussion_board_threadCreateWithoutDiscussion_board_subscriptionInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_subscriptionInput>\n  }\n\n  export type discussion_board_thread_tagCreateWithoutDiscussion_board_subscriptionInput = {\n    id: string\n    created_at: Date | string\n    thread: discussion_board_threadCreateNestedOneWithoutDiscussion_board_thread_tagInput\n    tag_category: discussion_board_tag_categoryCreateNestedOneWithoutDiscussion_board_thread_tagInput\n  }\n\n  export type discussion_board_thread_tagUncheckedCreateWithoutDiscussion_board_subscriptionInput = {\n    id: string\n    thread_id: string\n    tag_id: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_thread_tagCreateOrConnectWithoutDiscussion_board_subscriptionInput = {\n    where: discussion_board_thread_tagWhereUniqueInput\n    create: XOR<discussion_board_thread_tagCreateWithoutDiscussion_board_subscriptionInput, discussion_board_thread_tagUncheckedCreateWithoutDiscussion_board_subscriptionInput>\n  }\n\n  export type discussion_board_postCreateWithoutDiscussion_board_subscriptionInput = {\n    id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    thread: discussion_board_threadCreateNestedOneWithoutDiscussion_board_postInput\n    author_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_postInput\n    parent_post?: discussion_board_postCreateNestedOneWithoutRecursiveInput\n    recursive?: discussion_board_postCreateNestedManyWithoutParent_postInput\n    discussion_board_comment?: discussion_board_commentCreateNestedManyWithoutPostInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutPostInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutPostInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutPostInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutPostInput\n    discussion_board_report?: discussion_board_reportCreateNestedManyWithoutPostInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutPostInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutPostInput\n  }\n\n  export type discussion_board_postUncheckedCreateWithoutDiscussion_board_subscriptionInput = {\n    id: string\n    thread_id: string\n    author_user_id: string\n    parent_post_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    recursive?: discussion_board_postUncheckedCreateNestedManyWithoutParent_postInput\n    discussion_board_comment?: discussion_board_commentUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_report?: discussion_board_reportUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutPostInput\n  }\n\n  export type discussion_board_postCreateOrConnectWithoutDiscussion_board_subscriptionInput = {\n    where: discussion_board_postWhereUniqueInput\n    create: XOR<discussion_board_postCreateWithoutDiscussion_board_subscriptionInput, discussion_board_postUncheckedCreateWithoutDiscussion_board_subscriptionInput>\n  }\n\n  export type discussion_board_commentCreateWithoutDiscussion_board_subscriptionInput = {\n    id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    post: discussion_board_postCreateNestedOneWithoutDiscussion_board_commentInput\n    author_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_commentInput\n    parent_comment?: discussion_board_commentCreateNestedOneWithoutRecursiveInput\n    recursive?: discussion_board_commentCreateNestedManyWithoutParent_commentInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutCommentInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutCommentInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutCommentInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutCommentInput\n    discussion_board_report?: discussion_board_reportCreateNestedManyWithoutCommentInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutCommentInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutCommentInput\n  }\n\n  export type discussion_board_commentUncheckedCreateWithoutDiscussion_board_subscriptionInput = {\n    id: string\n    post_id: string\n    author_user_id: string\n    parent_comment_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    recursive?: discussion_board_commentUncheckedCreateNestedManyWithoutParent_commentInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_report?: discussion_board_reportUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutCommentInput\n  }\n\n  export type discussion_board_commentCreateOrConnectWithoutDiscussion_board_subscriptionInput = {\n    where: discussion_board_commentWhereUniqueInput\n    create: XOR<discussion_board_commentCreateWithoutDiscussion_board_subscriptionInput, discussion_board_commentUncheckedCreateWithoutDiscussion_board_subscriptionInput>\n  }\n\n  export type discussion_board_usersUpsertWithoutDiscussion_board_subscriptionInput = {\n    update: XOR<discussion_board_usersUpdateWithoutDiscussion_board_subscriptionInput, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_subscriptionInput>\n    create: XOR<discussion_board_usersCreateWithoutDiscussion_board_subscriptionInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_subscriptionInput>\n    where?: discussion_board_usersWhereInput\n  }\n\n  export type discussion_board_usersUpdateToOneWithWhereWithoutDiscussion_board_subscriptionInput = {\n    where?: discussion_board_usersWhereInput\n    data: XOR<discussion_board_usersUpdateWithoutDiscussion_board_subscriptionInput, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_subscriptionInput>\n  }\n\n  export type discussion_board_usersUpdateWithoutDiscussion_board_subscriptionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput\n    discussion_board_admins?: discussion_board_adminsUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_settings?: discussion_board_user_settingsUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput\n    discussion_board_thread?: discussion_board_threadUpdateManyWithoutCreator_userNestedInput\n    discussion_board_post?: discussion_board_postUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_comment?: discussion_board_commentUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutUserNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutUserNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutUserNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutRecipient_userNestedInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUpdateManyWithoutReported_userNestedInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUpdateManyWithoutReporting_userNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutUserNestedInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUpdateManyWithoutActorNestedInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUpdateManyWithoutAffected_userNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutUserNestedInput\n    discussion_board_ban?: discussion_board_banUpdateManyWithoutUserNestedInput\n    discussion_board_user_activity?: discussion_board_user_activityUpdateOneWithoutDiscussion_board_userNestedInput\n  }\n\n  export type discussion_board_usersUncheckedUpdateWithoutDiscussion_board_subscriptionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUncheckedUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput\n    discussion_board_admins?: discussion_board_adminsUncheckedUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUncheckedUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_settings?: discussion_board_user_settingsUncheckedUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput\n    discussion_board_thread?: discussion_board_threadUncheckedUpdateManyWithoutCreator_userNestedInput\n    discussion_board_post?: discussion_board_postUncheckedUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_comment?: discussion_board_commentUncheckedUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutRecipient_userNestedInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUncheckedUpdateManyWithoutReported_userNestedInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUncheckedUpdateManyWithoutReporting_userNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUncheckedUpdateManyWithoutActorNestedInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUncheckedUpdateManyWithoutAffected_userNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_ban?: discussion_board_banUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_user_activity?: discussion_board_user_activityUncheckedUpdateOneWithoutDiscussion_board_userNestedInput\n  }\n\n  export type discussion_board_threadUpsertWithoutDiscussion_board_subscriptionInput = {\n    update: XOR<discussion_board_threadUpdateWithoutDiscussion_board_subscriptionInput, discussion_board_threadUncheckedUpdateWithoutDiscussion_board_subscriptionInput>\n    create: XOR<discussion_board_threadCreateWithoutDiscussion_board_subscriptionInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_subscriptionInput>\n    where?: discussion_board_threadWhereInput\n  }\n\n  export type discussion_board_threadUpdateToOneWithWhereWithoutDiscussion_board_subscriptionInput = {\n    where?: discussion_board_threadWhereInput\n    data: XOR<discussion_board_threadUpdateWithoutDiscussion_board_subscriptionInput, discussion_board_threadUncheckedUpdateWithoutDiscussion_board_subscriptionInput>\n  }\n\n  export type discussion_board_threadUpdateWithoutDiscussion_board_subscriptionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    is_locked?: BoolFieldUpdateOperationsInput | boolean\n    is_pinned?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    creator_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_threadNestedInput\n    category?: discussion_board_thread_categoryUpdateOneRequiredWithoutDiscussion_board_threadNestedInput\n    discussion_board_post?: discussion_board_postUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_tag?: discussion_board_thread_tagUpdateManyWithoutThreadNestedInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUpdateOneWithoutThreadNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutThreadNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutThreadNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutThreadNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutThreadNestedInput\n    discussion_board_report?: discussion_board_reportUpdateManyWithoutThreadNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutThreadNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUpdateOneWithoutDiscussion_board_threadNestedInput\n  }\n\n  export type discussion_board_threadUncheckedUpdateWithoutDiscussion_board_subscriptionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    creator_user_id?: StringFieldUpdateOperationsInput | string\n    category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    is_locked?: BoolFieldUpdateOperationsInput | boolean\n    is_pinned?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_post?: discussion_board_postUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_tag?: discussion_board_thread_tagUncheckedUpdateManyWithoutThreadNestedInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUncheckedUpdateOneWithoutThreadNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_report?: discussion_board_reportUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUncheckedUpdateOneWithoutDiscussion_board_threadNestedInput\n  }\n\n  export type discussion_board_thread_tagUpsertWithoutDiscussion_board_subscriptionInput = {\n    update: XOR<discussion_board_thread_tagUpdateWithoutDiscussion_board_subscriptionInput, discussion_board_thread_tagUncheckedUpdateWithoutDiscussion_board_subscriptionInput>\n    create: XOR<discussion_board_thread_tagCreateWithoutDiscussion_board_subscriptionInput, discussion_board_thread_tagUncheckedCreateWithoutDiscussion_board_subscriptionInput>\n    where?: discussion_board_thread_tagWhereInput\n  }\n\n  export type discussion_board_thread_tagUpdateToOneWithWhereWithoutDiscussion_board_subscriptionInput = {\n    where?: discussion_board_thread_tagWhereInput\n    data: XOR<discussion_board_thread_tagUpdateWithoutDiscussion_board_subscriptionInput, discussion_board_thread_tagUncheckedUpdateWithoutDiscussion_board_subscriptionInput>\n  }\n\n  export type discussion_board_thread_tagUpdateWithoutDiscussion_board_subscriptionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    thread?: discussion_board_threadUpdateOneRequiredWithoutDiscussion_board_thread_tagNestedInput\n    tag_category?: discussion_board_tag_categoryUpdateOneRequiredWithoutDiscussion_board_thread_tagNestedInput\n  }\n\n  export type discussion_board_thread_tagUncheckedUpdateWithoutDiscussion_board_subscriptionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    thread_id?: StringFieldUpdateOperationsInput | string\n    tag_id?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_postUpsertWithoutDiscussion_board_subscriptionInput = {\n    update: XOR<discussion_board_postUpdateWithoutDiscussion_board_subscriptionInput, discussion_board_postUncheckedUpdateWithoutDiscussion_board_subscriptionInput>\n    create: XOR<discussion_board_postCreateWithoutDiscussion_board_subscriptionInput, discussion_board_postUncheckedCreateWithoutDiscussion_board_subscriptionInput>\n    where?: discussion_board_postWhereInput\n  }\n\n  export type discussion_board_postUpdateToOneWithWhereWithoutDiscussion_board_subscriptionInput = {\n    where?: discussion_board_postWhereInput\n    data: XOR<discussion_board_postUpdateWithoutDiscussion_board_subscriptionInput, discussion_board_postUncheckedUpdateWithoutDiscussion_board_subscriptionInput>\n  }\n\n  export type discussion_board_postUpdateWithoutDiscussion_board_subscriptionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    thread?: discussion_board_threadUpdateOneRequiredWithoutDiscussion_board_postNestedInput\n    author_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_postNestedInput\n    parent_post?: discussion_board_postUpdateOneWithoutRecursiveNestedInput\n    recursive?: discussion_board_postUpdateManyWithoutParent_postNestedInput\n    discussion_board_comment?: discussion_board_commentUpdateManyWithoutPostNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutPostNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutPostNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutPostNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutPostNestedInput\n    discussion_board_report?: discussion_board_reportUpdateManyWithoutPostNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutPostNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutPostNestedInput\n  }\n\n  export type discussion_board_postUncheckedUpdateWithoutDiscussion_board_subscriptionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    thread_id?: StringFieldUpdateOperationsInput | string\n    author_user_id?: StringFieldUpdateOperationsInput | string\n    parent_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recursive?: discussion_board_postUncheckedUpdateManyWithoutParent_postNestedInput\n    discussion_board_comment?: discussion_board_commentUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_report?: discussion_board_reportUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutPostNestedInput\n  }\n\n  export type discussion_board_commentUpsertWithoutDiscussion_board_subscriptionInput = {\n    update: XOR<discussion_board_commentUpdateWithoutDiscussion_board_subscriptionInput, discussion_board_commentUncheckedUpdateWithoutDiscussion_board_subscriptionInput>\n    create: XOR<discussion_board_commentCreateWithoutDiscussion_board_subscriptionInput, discussion_board_commentUncheckedCreateWithoutDiscussion_board_subscriptionInput>\n    where?: discussion_board_commentWhereInput\n  }\n\n  export type discussion_board_commentUpdateToOneWithWhereWithoutDiscussion_board_subscriptionInput = {\n    where?: discussion_board_commentWhereInput\n    data: XOR<discussion_board_commentUpdateWithoutDiscussion_board_subscriptionInput, discussion_board_commentUncheckedUpdateWithoutDiscussion_board_subscriptionInput>\n  }\n\n  export type discussion_board_commentUpdateWithoutDiscussion_board_subscriptionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    post?: discussion_board_postUpdateOneRequiredWithoutDiscussion_board_commentNestedInput\n    author_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_commentNestedInput\n    parent_comment?: discussion_board_commentUpdateOneWithoutRecursiveNestedInput\n    recursive?: discussion_board_commentUpdateManyWithoutParent_commentNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutCommentNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutCommentNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutCommentNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutCommentNestedInput\n    discussion_board_report?: discussion_board_reportUpdateManyWithoutCommentNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutCommentNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutCommentNestedInput\n  }\n\n  export type discussion_board_commentUncheckedUpdateWithoutDiscussion_board_subscriptionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    author_user_id?: StringFieldUpdateOperationsInput | string\n    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recursive?: discussion_board_commentUncheckedUpdateManyWithoutParent_commentNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_report?: discussion_board_reportUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutCommentNestedInput\n  }\n\n  export type discussion_board_usersCreateWithoutDiscussion_board_report_of_reported_user_idInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    discussion_board_admins?: discussion_board_adminsCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    discussion_board_user_profiles?: discussion_board_user_profilesCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    discussion_board_user_settings?: discussion_board_user_settingsCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    discussion_board_thread?: discussion_board_threadCreateNestedManyWithoutCreator_userInput\n    discussion_board_post?: discussion_board_postCreateNestedManyWithoutAuthor_userInput\n    discussion_board_comment?: discussion_board_commentCreateNestedManyWithoutAuthor_userInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutUserInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutUserInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutUserInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutRecipient_userInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutUserInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportCreateNestedManyWithoutReporting_userInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutUserInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logCreateNestedManyWithoutActorInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logCreateNestedManyWithoutAffected_userInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutUserInput\n    discussion_board_ban?: discussion_board_banCreateNestedManyWithoutUserInput\n    discussion_board_user_activity?: discussion_board_user_activityCreateNestedOneWithoutDiscussion_board_userInput\n  }\n\n  export type discussion_board_usersUncheckedCreateWithoutDiscussion_board_report_of_reported_user_idInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUncheckedCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    discussion_board_admins?: discussion_board_adminsUncheckedCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUncheckedCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    discussion_board_user_settings?: discussion_board_user_settingsUncheckedCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    discussion_board_thread?: discussion_board_threadUncheckedCreateNestedManyWithoutCreator_userInput\n    discussion_board_post?: discussion_board_postUncheckedCreateNestedManyWithoutAuthor_userInput\n    discussion_board_comment?: discussion_board_commentUncheckedCreateNestedManyWithoutAuthor_userInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutRecipient_userInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUncheckedCreateNestedManyWithoutReporting_userInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUncheckedCreateNestedManyWithoutActorInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUncheckedCreateNestedManyWithoutAffected_userInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_ban?: discussion_board_banUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_user_activity?: discussion_board_user_activityUncheckedCreateNestedOneWithoutDiscussion_board_userInput\n  }\n\n  export type discussion_board_usersCreateOrConnectWithoutDiscussion_board_report_of_reported_user_idInput = {\n    where: discussion_board_usersWhereUniqueInput\n    create: XOR<discussion_board_usersCreateWithoutDiscussion_board_report_of_reported_user_idInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_report_of_reported_user_idInput>\n  }\n\n  export type discussion_board_usersCreateWithoutDiscussion_board_report_of_reporting_user_idInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    discussion_board_admins?: discussion_board_adminsCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    discussion_board_user_profiles?: discussion_board_user_profilesCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    discussion_board_user_settings?: discussion_board_user_settingsCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    discussion_board_thread?: discussion_board_threadCreateNestedManyWithoutCreator_userInput\n    discussion_board_post?: discussion_board_postCreateNestedManyWithoutAuthor_userInput\n    discussion_board_comment?: discussion_board_commentCreateNestedManyWithoutAuthor_userInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutUserInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutUserInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutUserInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutRecipient_userInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutUserInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportCreateNestedManyWithoutReported_userInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutUserInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logCreateNestedManyWithoutActorInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logCreateNestedManyWithoutAffected_userInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutUserInput\n    discussion_board_ban?: discussion_board_banCreateNestedManyWithoutUserInput\n    discussion_board_user_activity?: discussion_board_user_activityCreateNestedOneWithoutDiscussion_board_userInput\n  }\n\n  export type discussion_board_usersUncheckedCreateWithoutDiscussion_board_report_of_reporting_user_idInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUncheckedCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    discussion_board_admins?: discussion_board_adminsUncheckedCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUncheckedCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    discussion_board_user_settings?: discussion_board_user_settingsUncheckedCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    discussion_board_thread?: discussion_board_threadUncheckedCreateNestedManyWithoutCreator_userInput\n    discussion_board_post?: discussion_board_postUncheckedCreateNestedManyWithoutAuthor_userInput\n    discussion_board_comment?: discussion_board_commentUncheckedCreateNestedManyWithoutAuthor_userInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutRecipient_userInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUncheckedCreateNestedManyWithoutReported_userInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUncheckedCreateNestedManyWithoutActorInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUncheckedCreateNestedManyWithoutAffected_userInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_ban?: discussion_board_banUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_user_activity?: discussion_board_user_activityUncheckedCreateNestedOneWithoutDiscussion_board_userInput\n  }\n\n  export type discussion_board_usersCreateOrConnectWithoutDiscussion_board_report_of_reporting_user_idInput = {\n    where: discussion_board_usersWhereUniqueInput\n    create: XOR<discussion_board_usersCreateWithoutDiscussion_board_report_of_reporting_user_idInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_report_of_reporting_user_idInput>\n  }\n\n  export type discussion_board_threadCreateWithoutDiscussion_board_reportInput = {\n    id: string\n    title: string\n    body: string\n    is_locked: boolean\n    is_pinned: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    creator_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_threadInput\n    category: discussion_board_thread_categoryCreateNestedOneWithoutDiscussion_board_threadInput\n    discussion_board_post?: discussion_board_postCreateNestedManyWithoutThreadInput\n    discussion_board_thread_tag?: discussion_board_thread_tagCreateNestedManyWithoutThreadInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityCreateNestedOneWithoutThreadInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutThreadInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutThreadInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutThreadInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutThreadInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutThreadInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutThreadInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutThreadInput\n    discussion_board_thread_stats?: discussion_board_thread_statsCreateNestedOneWithoutDiscussion_board_threadInput\n  }\n\n  export type discussion_board_threadUncheckedCreateWithoutDiscussion_board_reportInput = {\n    id: string\n    creator_user_id: string\n    category_id: string\n    title: string\n    body: string\n    is_locked: boolean\n    is_pinned: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_post?: discussion_board_postUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_thread_tag?: discussion_board_thread_tagUncheckedCreateNestedManyWithoutThreadInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUncheckedCreateNestedOneWithoutThreadInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUncheckedCreateNestedOneWithoutDiscussion_board_threadInput\n  }\n\n  export type discussion_board_threadCreateOrConnectWithoutDiscussion_board_reportInput = {\n    where: discussion_board_threadWhereUniqueInput\n    create: XOR<discussion_board_threadCreateWithoutDiscussion_board_reportInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_reportInput>\n  }\n\n  export type discussion_board_postCreateWithoutDiscussion_board_reportInput = {\n    id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    thread: discussion_board_threadCreateNestedOneWithoutDiscussion_board_postInput\n    author_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_postInput\n    parent_post?: discussion_board_postCreateNestedOneWithoutRecursiveInput\n    recursive?: discussion_board_postCreateNestedManyWithoutParent_postInput\n    discussion_board_comment?: discussion_board_commentCreateNestedManyWithoutPostInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutPostInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutPostInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutPostInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutPostInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutPostInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutPostInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutPostInput\n  }\n\n  export type discussion_board_postUncheckedCreateWithoutDiscussion_board_reportInput = {\n    id: string\n    thread_id: string\n    author_user_id: string\n    parent_post_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    recursive?: discussion_board_postUncheckedCreateNestedManyWithoutParent_postInput\n    discussion_board_comment?: discussion_board_commentUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutPostInput\n  }\n\n  export type discussion_board_postCreateOrConnectWithoutDiscussion_board_reportInput = {\n    where: discussion_board_postWhereUniqueInput\n    create: XOR<discussion_board_postCreateWithoutDiscussion_board_reportInput, discussion_board_postUncheckedCreateWithoutDiscussion_board_reportInput>\n  }\n\n  export type discussion_board_commentCreateWithoutDiscussion_board_reportInput = {\n    id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    post: discussion_board_postCreateNestedOneWithoutDiscussion_board_commentInput\n    author_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_commentInput\n    parent_comment?: discussion_board_commentCreateNestedOneWithoutRecursiveInput\n    recursive?: discussion_board_commentCreateNestedManyWithoutParent_commentInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutCommentInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutCommentInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutCommentInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutCommentInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutCommentInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutCommentInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutCommentInput\n  }\n\n  export type discussion_board_commentUncheckedCreateWithoutDiscussion_board_reportInput = {\n    id: string\n    post_id: string\n    author_user_id: string\n    parent_comment_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    recursive?: discussion_board_commentUncheckedCreateNestedManyWithoutParent_commentInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutCommentInput\n  }\n\n  export type discussion_board_commentCreateOrConnectWithoutDiscussion_board_reportInput = {\n    where: discussion_board_commentWhereUniqueInput\n    create: XOR<discussion_board_commentCreateWithoutDiscussion_board_reportInput, discussion_board_commentUncheckedCreateWithoutDiscussion_board_reportInput>\n  }\n\n  export type discussion_board_moderator_actionCreateWithoutReportInput = {\n    id: string\n    action_type: string\n    reason: string\n    created_at: Date | string\n    moderator: discussion_board_moderatorsCreateNestedOneWithoutDiscussion_board_moderator_actionInput\n    user?: discussion_board_usersCreateNestedOneWithoutDiscussion_board_moderator_actionInput\n    thread?: discussion_board_threadCreateNestedOneWithoutDiscussion_board_moderator_actionInput\n    post?: discussion_board_postCreateNestedOneWithoutDiscussion_board_moderator_actionInput\n    comment?: discussion_board_commentCreateNestedOneWithoutDiscussion_board_moderator_actionInput\n  }\n\n  export type discussion_board_moderator_actionUncheckedCreateWithoutReportInput = {\n    id: string\n    moderator_id: string\n    user_id?: string | null\n    thread_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    action_type: string\n    reason: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_moderator_actionCreateOrConnectWithoutReportInput = {\n    where: discussion_board_moderator_actionWhereUniqueInput\n    create: XOR<discussion_board_moderator_actionCreateWithoutReportInput, discussion_board_moderator_actionUncheckedCreateWithoutReportInput>\n  }\n\n  export type discussion_board_moderator_actionCreateManyReportInputEnvelope = {\n    data: discussion_board_moderator_actionCreateManyReportInput | discussion_board_moderator_actionCreateManyReportInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_banCreateWithoutReportInput = {\n    id: string\n    ban_type: string\n    reason: string\n    banned_at: Date | string\n    expires_at?: Date | string | null\n    user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_banInput\n    moderator: discussion_board_moderatorsCreateNestedOneWithoutDiscussion_board_banInput\n    warning?: discussion_board_warningCreateNestedOneWithoutDiscussion_board_banInput\n  }\n\n  export type discussion_board_banUncheckedCreateWithoutReportInput = {\n    id: string\n    user_id: string\n    moderator_id: string\n    warning_id?: string | null\n    ban_type: string\n    reason: string\n    banned_at: Date | string\n    expires_at?: Date | string | null\n  }\n\n  export type discussion_board_banCreateOrConnectWithoutReportInput = {\n    where: discussion_board_banWhereUniqueInput\n    create: XOR<discussion_board_banCreateWithoutReportInput, discussion_board_banUncheckedCreateWithoutReportInput>\n  }\n\n  export type discussion_board_banCreateManyReportInputEnvelope = {\n    data: discussion_board_banCreateManyReportInput | discussion_board_banCreateManyReportInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_usersUpsertWithoutDiscussion_board_report_of_reported_user_idInput = {\n    update: XOR<discussion_board_usersUpdateWithoutDiscussion_board_report_of_reported_user_idInput, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_report_of_reported_user_idInput>\n    create: XOR<discussion_board_usersCreateWithoutDiscussion_board_report_of_reported_user_idInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_report_of_reported_user_idInput>\n    where?: discussion_board_usersWhereInput\n  }\n\n  export type discussion_board_usersUpdateToOneWithWhereWithoutDiscussion_board_report_of_reported_user_idInput = {\n    where?: discussion_board_usersWhereInput\n    data: XOR<discussion_board_usersUpdateWithoutDiscussion_board_report_of_reported_user_idInput, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_report_of_reported_user_idInput>\n  }\n\n  export type discussion_board_usersUpdateWithoutDiscussion_board_report_of_reported_user_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput\n    discussion_board_admins?: discussion_board_adminsUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_settings?: discussion_board_user_settingsUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput\n    discussion_board_thread?: discussion_board_threadUpdateManyWithoutCreator_userNestedInput\n    discussion_board_post?: discussion_board_postUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_comment?: discussion_board_commentUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutUserNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutUserNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutUserNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutRecipient_userNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutUserNestedInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUpdateManyWithoutReporting_userNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutUserNestedInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUpdateManyWithoutActorNestedInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUpdateManyWithoutAffected_userNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutUserNestedInput\n    discussion_board_ban?: discussion_board_banUpdateManyWithoutUserNestedInput\n    discussion_board_user_activity?: discussion_board_user_activityUpdateOneWithoutDiscussion_board_userNestedInput\n  }\n\n  export type discussion_board_usersUncheckedUpdateWithoutDiscussion_board_report_of_reported_user_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUncheckedUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput\n    discussion_board_admins?: discussion_board_adminsUncheckedUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUncheckedUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_settings?: discussion_board_user_settingsUncheckedUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput\n    discussion_board_thread?: discussion_board_threadUncheckedUpdateManyWithoutCreator_userNestedInput\n    discussion_board_post?: discussion_board_postUncheckedUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_comment?: discussion_board_commentUncheckedUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutRecipient_userNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUncheckedUpdateManyWithoutReporting_userNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUncheckedUpdateManyWithoutActorNestedInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUncheckedUpdateManyWithoutAffected_userNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_ban?: discussion_board_banUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_user_activity?: discussion_board_user_activityUncheckedUpdateOneWithoutDiscussion_board_userNestedInput\n  }\n\n  export type discussion_board_usersUpsertWithoutDiscussion_board_report_of_reporting_user_idInput = {\n    update: XOR<discussion_board_usersUpdateWithoutDiscussion_board_report_of_reporting_user_idInput, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_report_of_reporting_user_idInput>\n    create: XOR<discussion_board_usersCreateWithoutDiscussion_board_report_of_reporting_user_idInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_report_of_reporting_user_idInput>\n    where?: discussion_board_usersWhereInput\n  }\n\n  export type discussion_board_usersUpdateToOneWithWhereWithoutDiscussion_board_report_of_reporting_user_idInput = {\n    where?: discussion_board_usersWhereInput\n    data: XOR<discussion_board_usersUpdateWithoutDiscussion_board_report_of_reporting_user_idInput, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_report_of_reporting_user_idInput>\n  }\n\n  export type discussion_board_usersUpdateWithoutDiscussion_board_report_of_reporting_user_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput\n    discussion_board_admins?: discussion_board_adminsUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_settings?: discussion_board_user_settingsUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput\n    discussion_board_thread?: discussion_board_threadUpdateManyWithoutCreator_userNestedInput\n    discussion_board_post?: discussion_board_postUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_comment?: discussion_board_commentUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutUserNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutUserNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutUserNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutRecipient_userNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutUserNestedInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUpdateManyWithoutReported_userNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutUserNestedInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUpdateManyWithoutActorNestedInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUpdateManyWithoutAffected_userNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutUserNestedInput\n    discussion_board_ban?: discussion_board_banUpdateManyWithoutUserNestedInput\n    discussion_board_user_activity?: discussion_board_user_activityUpdateOneWithoutDiscussion_board_userNestedInput\n  }\n\n  export type discussion_board_usersUncheckedUpdateWithoutDiscussion_board_report_of_reporting_user_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUncheckedUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput\n    discussion_board_admins?: discussion_board_adminsUncheckedUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUncheckedUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_settings?: discussion_board_user_settingsUncheckedUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput\n    discussion_board_thread?: discussion_board_threadUncheckedUpdateManyWithoutCreator_userNestedInput\n    discussion_board_post?: discussion_board_postUncheckedUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_comment?: discussion_board_commentUncheckedUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutRecipient_userNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUncheckedUpdateManyWithoutReported_userNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUncheckedUpdateManyWithoutActorNestedInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUncheckedUpdateManyWithoutAffected_userNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_ban?: discussion_board_banUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_user_activity?: discussion_board_user_activityUncheckedUpdateOneWithoutDiscussion_board_userNestedInput\n  }\n\n  export type discussion_board_threadUpsertWithoutDiscussion_board_reportInput = {\n    update: XOR<discussion_board_threadUpdateWithoutDiscussion_board_reportInput, discussion_board_threadUncheckedUpdateWithoutDiscussion_board_reportInput>\n    create: XOR<discussion_board_threadCreateWithoutDiscussion_board_reportInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_reportInput>\n    where?: discussion_board_threadWhereInput\n  }\n\n  export type discussion_board_threadUpdateToOneWithWhereWithoutDiscussion_board_reportInput = {\n    where?: discussion_board_threadWhereInput\n    data: XOR<discussion_board_threadUpdateWithoutDiscussion_board_reportInput, discussion_board_threadUncheckedUpdateWithoutDiscussion_board_reportInput>\n  }\n\n  export type discussion_board_threadUpdateWithoutDiscussion_board_reportInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    is_locked?: BoolFieldUpdateOperationsInput | boolean\n    is_pinned?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    creator_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_threadNestedInput\n    category?: discussion_board_thread_categoryUpdateOneRequiredWithoutDiscussion_board_threadNestedInput\n    discussion_board_post?: discussion_board_postUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_tag?: discussion_board_thread_tagUpdateManyWithoutThreadNestedInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUpdateOneWithoutThreadNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutThreadNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutThreadNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutThreadNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutThreadNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutThreadNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutThreadNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUpdateOneWithoutDiscussion_board_threadNestedInput\n  }\n\n  export type discussion_board_threadUncheckedUpdateWithoutDiscussion_board_reportInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    creator_user_id?: StringFieldUpdateOperationsInput | string\n    category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    is_locked?: BoolFieldUpdateOperationsInput | boolean\n    is_pinned?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_post?: discussion_board_postUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_tag?: discussion_board_thread_tagUncheckedUpdateManyWithoutThreadNestedInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUncheckedUpdateOneWithoutThreadNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUncheckedUpdateOneWithoutDiscussion_board_threadNestedInput\n  }\n\n  export type discussion_board_postUpsertWithoutDiscussion_board_reportInput = {\n    update: XOR<discussion_board_postUpdateWithoutDiscussion_board_reportInput, discussion_board_postUncheckedUpdateWithoutDiscussion_board_reportInput>\n    create: XOR<discussion_board_postCreateWithoutDiscussion_board_reportInput, discussion_board_postUncheckedCreateWithoutDiscussion_board_reportInput>\n    where?: discussion_board_postWhereInput\n  }\n\n  export type discussion_board_postUpdateToOneWithWhereWithoutDiscussion_board_reportInput = {\n    where?: discussion_board_postWhereInput\n    data: XOR<discussion_board_postUpdateWithoutDiscussion_board_reportInput, discussion_board_postUncheckedUpdateWithoutDiscussion_board_reportInput>\n  }\n\n  export type discussion_board_postUpdateWithoutDiscussion_board_reportInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    thread?: discussion_board_threadUpdateOneRequiredWithoutDiscussion_board_postNestedInput\n    author_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_postNestedInput\n    parent_post?: discussion_board_postUpdateOneWithoutRecursiveNestedInput\n    recursive?: discussion_board_postUpdateManyWithoutParent_postNestedInput\n    discussion_board_comment?: discussion_board_commentUpdateManyWithoutPostNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutPostNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutPostNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutPostNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutPostNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutPostNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutPostNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutPostNestedInput\n  }\n\n  export type discussion_board_postUncheckedUpdateWithoutDiscussion_board_reportInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    thread_id?: StringFieldUpdateOperationsInput | string\n    author_user_id?: StringFieldUpdateOperationsInput | string\n    parent_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recursive?: discussion_board_postUncheckedUpdateManyWithoutParent_postNestedInput\n    discussion_board_comment?: discussion_board_commentUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutPostNestedInput\n  }\n\n  export type discussion_board_commentUpsertWithoutDiscussion_board_reportInput = {\n    update: XOR<discussion_board_commentUpdateWithoutDiscussion_board_reportInput, discussion_board_commentUncheckedUpdateWithoutDiscussion_board_reportInput>\n    create: XOR<discussion_board_commentCreateWithoutDiscussion_board_reportInput, discussion_board_commentUncheckedCreateWithoutDiscussion_board_reportInput>\n    where?: discussion_board_commentWhereInput\n  }\n\n  export type discussion_board_commentUpdateToOneWithWhereWithoutDiscussion_board_reportInput = {\n    where?: discussion_board_commentWhereInput\n    data: XOR<discussion_board_commentUpdateWithoutDiscussion_board_reportInput, discussion_board_commentUncheckedUpdateWithoutDiscussion_board_reportInput>\n  }\n\n  export type discussion_board_commentUpdateWithoutDiscussion_board_reportInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    post?: discussion_board_postUpdateOneRequiredWithoutDiscussion_board_commentNestedInput\n    author_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_commentNestedInput\n    parent_comment?: discussion_board_commentUpdateOneWithoutRecursiveNestedInput\n    recursive?: discussion_board_commentUpdateManyWithoutParent_commentNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutCommentNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutCommentNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutCommentNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutCommentNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutCommentNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutCommentNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutCommentNestedInput\n  }\n\n  export type discussion_board_commentUncheckedUpdateWithoutDiscussion_board_reportInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    author_user_id?: StringFieldUpdateOperationsInput | string\n    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recursive?: discussion_board_commentUncheckedUpdateManyWithoutParent_commentNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutCommentNestedInput\n  }\n\n  export type discussion_board_moderator_actionUpsertWithWhereUniqueWithoutReportInput = {\n    where: discussion_board_moderator_actionWhereUniqueInput\n    update: XOR<discussion_board_moderator_actionUpdateWithoutReportInput, discussion_board_moderator_actionUncheckedUpdateWithoutReportInput>\n    create: XOR<discussion_board_moderator_actionCreateWithoutReportInput, discussion_board_moderator_actionUncheckedCreateWithoutReportInput>\n  }\n\n  export type discussion_board_moderator_actionUpdateWithWhereUniqueWithoutReportInput = {\n    where: discussion_board_moderator_actionWhereUniqueInput\n    data: XOR<discussion_board_moderator_actionUpdateWithoutReportInput, discussion_board_moderator_actionUncheckedUpdateWithoutReportInput>\n  }\n\n  export type discussion_board_moderator_actionUpdateManyWithWhereWithoutReportInput = {\n    where: discussion_board_moderator_actionScalarWhereInput\n    data: XOR<discussion_board_moderator_actionUpdateManyMutationInput, discussion_board_moderator_actionUncheckedUpdateManyWithoutReportInput>\n  }\n\n  export type discussion_board_banUpsertWithWhereUniqueWithoutReportInput = {\n    where: discussion_board_banWhereUniqueInput\n    update: XOR<discussion_board_banUpdateWithoutReportInput, discussion_board_banUncheckedUpdateWithoutReportInput>\n    create: XOR<discussion_board_banCreateWithoutReportInput, discussion_board_banUncheckedCreateWithoutReportInput>\n  }\n\n  export type discussion_board_banUpdateWithWhereUniqueWithoutReportInput = {\n    where: discussion_board_banWhereUniqueInput\n    data: XOR<discussion_board_banUpdateWithoutReportInput, discussion_board_banUncheckedUpdateWithoutReportInput>\n  }\n\n  export type discussion_board_banUpdateManyWithWhereWithoutReportInput = {\n    where: discussion_board_banScalarWhereInput\n    data: XOR<discussion_board_banUpdateManyMutationInput, discussion_board_banUncheckedUpdateManyWithoutReportInput>\n  }\n\n  export type discussion_board_moderatorsCreateWithoutDiscussion_board_moderator_actionInput = {\n    id: string\n    is_active: boolean\n    assigned_at: Date | string\n    revoked_at?: Date | string | null\n    fk_discussion_board_moderators_user_id_discussion_board_users_id: discussion_board_usersCreateNestedOneWithoutDiscussion_board_moderatorsInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutModeratorInput\n    discussion_board_ban?: discussion_board_banCreateNestedManyWithoutModeratorInput\n    discussion_board_content_abuse_metric?: discussion_board_content_abuse_metricCreateNestedManyWithoutDiscussion_board_moderatorInput\n  }\n\n  export type discussion_board_moderatorsUncheckedCreateWithoutDiscussion_board_moderator_actionInput = {\n    id: string\n    user_id: string\n    is_active: boolean\n    assigned_at: Date | string\n    revoked_at?: Date | string | null\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutModeratorInput\n    discussion_board_ban?: discussion_board_banUncheckedCreateNestedManyWithoutModeratorInput\n    discussion_board_content_abuse_metric?: discussion_board_content_abuse_metricUncheckedCreateNestedManyWithoutDiscussion_board_moderatorInput\n  }\n\n  export type discussion_board_moderatorsCreateOrConnectWithoutDiscussion_board_moderator_actionInput = {\n    where: discussion_board_moderatorsWhereUniqueInput\n    create: XOR<discussion_board_moderatorsCreateWithoutDiscussion_board_moderator_actionInput, discussion_board_moderatorsUncheckedCreateWithoutDiscussion_board_moderator_actionInput>\n  }\n\n  export type discussion_board_usersCreateWithoutDiscussion_board_moderator_actionInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    discussion_board_admins?: discussion_board_adminsCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    discussion_board_user_profiles?: discussion_board_user_profilesCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    discussion_board_user_settings?: discussion_board_user_settingsCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    discussion_board_thread?: discussion_board_threadCreateNestedManyWithoutCreator_userInput\n    discussion_board_post?: discussion_board_postCreateNestedManyWithoutAuthor_userInput\n    discussion_board_comment?: discussion_board_commentCreateNestedManyWithoutAuthor_userInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutUserInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutUserInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutUserInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutRecipient_userInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutUserInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportCreateNestedManyWithoutReported_userInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportCreateNestedManyWithoutReporting_userInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logCreateNestedManyWithoutActorInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logCreateNestedManyWithoutAffected_userInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutUserInput\n    discussion_board_ban?: discussion_board_banCreateNestedManyWithoutUserInput\n    discussion_board_user_activity?: discussion_board_user_activityCreateNestedOneWithoutDiscussion_board_userInput\n  }\n\n  export type discussion_board_usersUncheckedCreateWithoutDiscussion_board_moderator_actionInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUncheckedCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    discussion_board_admins?: discussion_board_adminsUncheckedCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUncheckedCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    discussion_board_user_settings?: discussion_board_user_settingsUncheckedCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    discussion_board_thread?: discussion_board_threadUncheckedCreateNestedManyWithoutCreator_userInput\n    discussion_board_post?: discussion_board_postUncheckedCreateNestedManyWithoutAuthor_userInput\n    discussion_board_comment?: discussion_board_commentUncheckedCreateNestedManyWithoutAuthor_userInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutRecipient_userInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUncheckedCreateNestedManyWithoutReported_userInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUncheckedCreateNestedManyWithoutReporting_userInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUncheckedCreateNestedManyWithoutActorInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUncheckedCreateNestedManyWithoutAffected_userInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_ban?: discussion_board_banUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_user_activity?: discussion_board_user_activityUncheckedCreateNestedOneWithoutDiscussion_board_userInput\n  }\n\n  export type discussion_board_usersCreateOrConnectWithoutDiscussion_board_moderator_actionInput = {\n    where: discussion_board_usersWhereUniqueInput\n    create: XOR<discussion_board_usersCreateWithoutDiscussion_board_moderator_actionInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_moderator_actionInput>\n  }\n\n  export type discussion_board_reportCreateWithoutDiscussion_board_moderator_actionInput = {\n    id: string\n    status: string\n    category: string\n    submitted_at: Date | string\n    resolved_at?: Date | string | null\n    details: string\n    reported_user?: discussion_board_usersCreateNestedOneWithoutDiscussion_board_report_of_reported_user_idInput\n    reporting_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_report_of_reporting_user_idInput\n    thread?: discussion_board_threadCreateNestedOneWithoutDiscussion_board_reportInput\n    post?: discussion_board_postCreateNestedOneWithoutDiscussion_board_reportInput\n    comment?: discussion_board_commentCreateNestedOneWithoutDiscussion_board_reportInput\n    discussion_board_ban?: discussion_board_banCreateNestedManyWithoutReportInput\n  }\n\n  export type discussion_board_reportUncheckedCreateWithoutDiscussion_board_moderator_actionInput = {\n    id: string\n    reported_user_id?: string | null\n    reporting_user_id: string\n    thread_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    status: string\n    category: string\n    submitted_at: Date | string\n    resolved_at?: Date | string | null\n    details: string\n    discussion_board_ban?: discussion_board_banUncheckedCreateNestedManyWithoutReportInput\n  }\n\n  export type discussion_board_reportCreateOrConnectWithoutDiscussion_board_moderator_actionInput = {\n    where: discussion_board_reportWhereUniqueInput\n    create: XOR<discussion_board_reportCreateWithoutDiscussion_board_moderator_actionInput, discussion_board_reportUncheckedCreateWithoutDiscussion_board_moderator_actionInput>\n  }\n\n  export type discussion_board_threadCreateWithoutDiscussion_board_moderator_actionInput = {\n    id: string\n    title: string\n    body: string\n    is_locked: boolean\n    is_pinned: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    creator_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_threadInput\n    category: discussion_board_thread_categoryCreateNestedOneWithoutDiscussion_board_threadInput\n    discussion_board_post?: discussion_board_postCreateNestedManyWithoutThreadInput\n    discussion_board_thread_tag?: discussion_board_thread_tagCreateNestedManyWithoutThreadInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityCreateNestedOneWithoutThreadInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutThreadInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutThreadInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutThreadInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutThreadInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutThreadInput\n    discussion_board_report?: discussion_board_reportCreateNestedManyWithoutThreadInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutThreadInput\n    discussion_board_thread_stats?: discussion_board_thread_statsCreateNestedOneWithoutDiscussion_board_threadInput\n  }\n\n  export type discussion_board_threadUncheckedCreateWithoutDiscussion_board_moderator_actionInput = {\n    id: string\n    creator_user_id: string\n    category_id: string\n    title: string\n    body: string\n    is_locked: boolean\n    is_pinned: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_post?: discussion_board_postUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_thread_tag?: discussion_board_thread_tagUncheckedCreateNestedManyWithoutThreadInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUncheckedCreateNestedOneWithoutThreadInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_report?: discussion_board_reportUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUncheckedCreateNestedOneWithoutDiscussion_board_threadInput\n  }\n\n  export type discussion_board_threadCreateOrConnectWithoutDiscussion_board_moderator_actionInput = {\n    where: discussion_board_threadWhereUniqueInput\n    create: XOR<discussion_board_threadCreateWithoutDiscussion_board_moderator_actionInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_moderator_actionInput>\n  }\n\n  export type discussion_board_postCreateWithoutDiscussion_board_moderator_actionInput = {\n    id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    thread: discussion_board_threadCreateNestedOneWithoutDiscussion_board_postInput\n    author_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_postInput\n    parent_post?: discussion_board_postCreateNestedOneWithoutRecursiveInput\n    recursive?: discussion_board_postCreateNestedManyWithoutParent_postInput\n    discussion_board_comment?: discussion_board_commentCreateNestedManyWithoutPostInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutPostInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutPostInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutPostInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutPostInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutPostInput\n    discussion_board_report?: discussion_board_reportCreateNestedManyWithoutPostInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutPostInput\n  }\n\n  export type discussion_board_postUncheckedCreateWithoutDiscussion_board_moderator_actionInput = {\n    id: string\n    thread_id: string\n    author_user_id: string\n    parent_post_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    recursive?: discussion_board_postUncheckedCreateNestedManyWithoutParent_postInput\n    discussion_board_comment?: discussion_board_commentUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_report?: discussion_board_reportUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutPostInput\n  }\n\n  export type discussion_board_postCreateOrConnectWithoutDiscussion_board_moderator_actionInput = {\n    where: discussion_board_postWhereUniqueInput\n    create: XOR<discussion_board_postCreateWithoutDiscussion_board_moderator_actionInput, discussion_board_postUncheckedCreateWithoutDiscussion_board_moderator_actionInput>\n  }\n\n  export type discussion_board_commentCreateWithoutDiscussion_board_moderator_actionInput = {\n    id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    post: discussion_board_postCreateNestedOneWithoutDiscussion_board_commentInput\n    author_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_commentInput\n    parent_comment?: discussion_board_commentCreateNestedOneWithoutRecursiveInput\n    recursive?: discussion_board_commentCreateNestedManyWithoutParent_commentInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutCommentInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutCommentInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutCommentInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutCommentInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutCommentInput\n    discussion_board_report?: discussion_board_reportCreateNestedManyWithoutCommentInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutCommentInput\n  }\n\n  export type discussion_board_commentUncheckedCreateWithoutDiscussion_board_moderator_actionInput = {\n    id: string\n    post_id: string\n    author_user_id: string\n    parent_comment_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    recursive?: discussion_board_commentUncheckedCreateNestedManyWithoutParent_commentInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_report?: discussion_board_reportUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutCommentInput\n  }\n\n  export type discussion_board_commentCreateOrConnectWithoutDiscussion_board_moderator_actionInput = {\n    where: discussion_board_commentWhereUniqueInput\n    create: XOR<discussion_board_commentCreateWithoutDiscussion_board_moderator_actionInput, discussion_board_commentUncheckedCreateWithoutDiscussion_board_moderator_actionInput>\n  }\n\n  export type discussion_board_moderatorsUpsertWithoutDiscussion_board_moderator_actionInput = {\n    update: XOR<discussion_board_moderatorsUpdateWithoutDiscussion_board_moderator_actionInput, discussion_board_moderatorsUncheckedUpdateWithoutDiscussion_board_moderator_actionInput>\n    create: XOR<discussion_board_moderatorsCreateWithoutDiscussion_board_moderator_actionInput, discussion_board_moderatorsUncheckedCreateWithoutDiscussion_board_moderator_actionInput>\n    where?: discussion_board_moderatorsWhereInput\n  }\n\n  export type discussion_board_moderatorsUpdateToOneWithWhereWithoutDiscussion_board_moderator_actionInput = {\n    where?: discussion_board_moderatorsWhereInput\n    data: XOR<discussion_board_moderatorsUpdateWithoutDiscussion_board_moderator_actionInput, discussion_board_moderatorsUncheckedUpdateWithoutDiscussion_board_moderator_actionInput>\n  }\n\n  export type discussion_board_moderatorsUpdateWithoutDiscussion_board_moderator_actionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    fk_discussion_board_moderators_user_id_discussion_board_users_id?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_moderatorsNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutModeratorNestedInput\n    discussion_board_ban?: discussion_board_banUpdateManyWithoutModeratorNestedInput\n    discussion_board_content_abuse_metric?: discussion_board_content_abuse_metricUpdateManyWithoutDiscussion_board_moderatorNestedInput\n  }\n\n  export type discussion_board_moderatorsUncheckedUpdateWithoutDiscussion_board_moderator_actionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutModeratorNestedInput\n    discussion_board_ban?: discussion_board_banUncheckedUpdateManyWithoutModeratorNestedInput\n    discussion_board_content_abuse_metric?: discussion_board_content_abuse_metricUncheckedUpdateManyWithoutDiscussion_board_moderatorNestedInput\n  }\n\n  export type discussion_board_usersUpsertWithoutDiscussion_board_moderator_actionInput = {\n    update: XOR<discussion_board_usersUpdateWithoutDiscussion_board_moderator_actionInput, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_moderator_actionInput>\n    create: XOR<discussion_board_usersCreateWithoutDiscussion_board_moderator_actionInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_moderator_actionInput>\n    where?: discussion_board_usersWhereInput\n  }\n\n  export type discussion_board_usersUpdateToOneWithWhereWithoutDiscussion_board_moderator_actionInput = {\n    where?: discussion_board_usersWhereInput\n    data: XOR<discussion_board_usersUpdateWithoutDiscussion_board_moderator_actionInput, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_moderator_actionInput>\n  }\n\n  export type discussion_board_usersUpdateWithoutDiscussion_board_moderator_actionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput\n    discussion_board_admins?: discussion_board_adminsUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_settings?: discussion_board_user_settingsUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput\n    discussion_board_thread?: discussion_board_threadUpdateManyWithoutCreator_userNestedInput\n    discussion_board_post?: discussion_board_postUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_comment?: discussion_board_commentUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutUserNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutUserNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutUserNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutRecipient_userNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutUserNestedInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUpdateManyWithoutReported_userNestedInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUpdateManyWithoutReporting_userNestedInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUpdateManyWithoutActorNestedInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUpdateManyWithoutAffected_userNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutUserNestedInput\n    discussion_board_ban?: discussion_board_banUpdateManyWithoutUserNestedInput\n    discussion_board_user_activity?: discussion_board_user_activityUpdateOneWithoutDiscussion_board_userNestedInput\n  }\n\n  export type discussion_board_usersUncheckedUpdateWithoutDiscussion_board_moderator_actionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUncheckedUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput\n    discussion_board_admins?: discussion_board_adminsUncheckedUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUncheckedUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_settings?: discussion_board_user_settingsUncheckedUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput\n    discussion_board_thread?: discussion_board_threadUncheckedUpdateManyWithoutCreator_userNestedInput\n    discussion_board_post?: discussion_board_postUncheckedUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_comment?: discussion_board_commentUncheckedUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutRecipient_userNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUncheckedUpdateManyWithoutReported_userNestedInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUncheckedUpdateManyWithoutReporting_userNestedInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUncheckedUpdateManyWithoutActorNestedInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUncheckedUpdateManyWithoutAffected_userNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_ban?: discussion_board_banUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_user_activity?: discussion_board_user_activityUncheckedUpdateOneWithoutDiscussion_board_userNestedInput\n  }\n\n  export type discussion_board_reportUpsertWithoutDiscussion_board_moderator_actionInput = {\n    update: XOR<discussion_board_reportUpdateWithoutDiscussion_board_moderator_actionInput, discussion_board_reportUncheckedUpdateWithoutDiscussion_board_moderator_actionInput>\n    create: XOR<discussion_board_reportCreateWithoutDiscussion_board_moderator_actionInput, discussion_board_reportUncheckedCreateWithoutDiscussion_board_moderator_actionInput>\n    where?: discussion_board_reportWhereInput\n  }\n\n  export type discussion_board_reportUpdateToOneWithWhereWithoutDiscussion_board_moderator_actionInput = {\n    where?: discussion_board_reportWhereInput\n    data: XOR<discussion_board_reportUpdateWithoutDiscussion_board_moderator_actionInput, discussion_board_reportUncheckedUpdateWithoutDiscussion_board_moderator_actionInput>\n  }\n\n  export type discussion_board_reportUpdateWithoutDiscussion_board_moderator_actionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    category?: StringFieldUpdateOperationsInput | string\n    submitted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    details?: StringFieldUpdateOperationsInput | string\n    reported_user?: discussion_board_usersUpdateOneWithoutDiscussion_board_report_of_reported_user_idNestedInput\n    reporting_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_report_of_reporting_user_idNestedInput\n    thread?: discussion_board_threadUpdateOneWithoutDiscussion_board_reportNestedInput\n    post?: discussion_board_postUpdateOneWithoutDiscussion_board_reportNestedInput\n    comment?: discussion_board_commentUpdateOneWithoutDiscussion_board_reportNestedInput\n    discussion_board_ban?: discussion_board_banUpdateManyWithoutReportNestedInput\n  }\n\n  export type discussion_board_reportUncheckedUpdateWithoutDiscussion_board_moderator_actionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reported_user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reporting_user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    category?: StringFieldUpdateOperationsInput | string\n    submitted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    details?: StringFieldUpdateOperationsInput | string\n    discussion_board_ban?: discussion_board_banUncheckedUpdateManyWithoutReportNestedInput\n  }\n\n  export type discussion_board_threadUpsertWithoutDiscussion_board_moderator_actionInput = {\n    update: XOR<discussion_board_threadUpdateWithoutDiscussion_board_moderator_actionInput, discussion_board_threadUncheckedUpdateWithoutDiscussion_board_moderator_actionInput>\n    create: XOR<discussion_board_threadCreateWithoutDiscussion_board_moderator_actionInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_moderator_actionInput>\n    where?: discussion_board_threadWhereInput\n  }\n\n  export type discussion_board_threadUpdateToOneWithWhereWithoutDiscussion_board_moderator_actionInput = {\n    where?: discussion_board_threadWhereInput\n    data: XOR<discussion_board_threadUpdateWithoutDiscussion_board_moderator_actionInput, discussion_board_threadUncheckedUpdateWithoutDiscussion_board_moderator_actionInput>\n  }\n\n  export type discussion_board_threadUpdateWithoutDiscussion_board_moderator_actionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    is_locked?: BoolFieldUpdateOperationsInput | boolean\n    is_pinned?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    creator_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_threadNestedInput\n    category?: discussion_board_thread_categoryUpdateOneRequiredWithoutDiscussion_board_threadNestedInput\n    discussion_board_post?: discussion_board_postUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_tag?: discussion_board_thread_tagUpdateManyWithoutThreadNestedInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUpdateOneWithoutThreadNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutThreadNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutThreadNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutThreadNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutThreadNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutThreadNestedInput\n    discussion_board_report?: discussion_board_reportUpdateManyWithoutThreadNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUpdateOneWithoutDiscussion_board_threadNestedInput\n  }\n\n  export type discussion_board_threadUncheckedUpdateWithoutDiscussion_board_moderator_actionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    creator_user_id?: StringFieldUpdateOperationsInput | string\n    category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    is_locked?: BoolFieldUpdateOperationsInput | boolean\n    is_pinned?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_post?: discussion_board_postUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_tag?: discussion_board_thread_tagUncheckedUpdateManyWithoutThreadNestedInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUncheckedUpdateOneWithoutThreadNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_report?: discussion_board_reportUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUncheckedUpdateOneWithoutDiscussion_board_threadNestedInput\n  }\n\n  export type discussion_board_postUpsertWithoutDiscussion_board_moderator_actionInput = {\n    update: XOR<discussion_board_postUpdateWithoutDiscussion_board_moderator_actionInput, discussion_board_postUncheckedUpdateWithoutDiscussion_board_moderator_actionInput>\n    create: XOR<discussion_board_postCreateWithoutDiscussion_board_moderator_actionInput, discussion_board_postUncheckedCreateWithoutDiscussion_board_moderator_actionInput>\n    where?: discussion_board_postWhereInput\n  }\n\n  export type discussion_board_postUpdateToOneWithWhereWithoutDiscussion_board_moderator_actionInput = {\n    where?: discussion_board_postWhereInput\n    data: XOR<discussion_board_postUpdateWithoutDiscussion_board_moderator_actionInput, discussion_board_postUncheckedUpdateWithoutDiscussion_board_moderator_actionInput>\n  }\n\n  export type discussion_board_postUpdateWithoutDiscussion_board_moderator_actionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    thread?: discussion_board_threadUpdateOneRequiredWithoutDiscussion_board_postNestedInput\n    author_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_postNestedInput\n    parent_post?: discussion_board_postUpdateOneWithoutRecursiveNestedInput\n    recursive?: discussion_board_postUpdateManyWithoutParent_postNestedInput\n    discussion_board_comment?: discussion_board_commentUpdateManyWithoutPostNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutPostNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutPostNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutPostNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutPostNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutPostNestedInput\n    discussion_board_report?: discussion_board_reportUpdateManyWithoutPostNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutPostNestedInput\n  }\n\n  export type discussion_board_postUncheckedUpdateWithoutDiscussion_board_moderator_actionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    thread_id?: StringFieldUpdateOperationsInput | string\n    author_user_id?: StringFieldUpdateOperationsInput | string\n    parent_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recursive?: discussion_board_postUncheckedUpdateManyWithoutParent_postNestedInput\n    discussion_board_comment?: discussion_board_commentUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_report?: discussion_board_reportUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutPostNestedInput\n  }\n\n  export type discussion_board_commentUpsertWithoutDiscussion_board_moderator_actionInput = {\n    update: XOR<discussion_board_commentUpdateWithoutDiscussion_board_moderator_actionInput, discussion_board_commentUncheckedUpdateWithoutDiscussion_board_moderator_actionInput>\n    create: XOR<discussion_board_commentCreateWithoutDiscussion_board_moderator_actionInput, discussion_board_commentUncheckedCreateWithoutDiscussion_board_moderator_actionInput>\n    where?: discussion_board_commentWhereInput\n  }\n\n  export type discussion_board_commentUpdateToOneWithWhereWithoutDiscussion_board_moderator_actionInput = {\n    where?: discussion_board_commentWhereInput\n    data: XOR<discussion_board_commentUpdateWithoutDiscussion_board_moderator_actionInput, discussion_board_commentUncheckedUpdateWithoutDiscussion_board_moderator_actionInput>\n  }\n\n  export type discussion_board_commentUpdateWithoutDiscussion_board_moderator_actionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    post?: discussion_board_postUpdateOneRequiredWithoutDiscussion_board_commentNestedInput\n    author_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_commentNestedInput\n    parent_comment?: discussion_board_commentUpdateOneWithoutRecursiveNestedInput\n    recursive?: discussion_board_commentUpdateManyWithoutParent_commentNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutCommentNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutCommentNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutCommentNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutCommentNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutCommentNestedInput\n    discussion_board_report?: discussion_board_reportUpdateManyWithoutCommentNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutCommentNestedInput\n  }\n\n  export type discussion_board_commentUncheckedUpdateWithoutDiscussion_board_moderator_actionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    author_user_id?: StringFieldUpdateOperationsInput | string\n    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recursive?: discussion_board_commentUncheckedUpdateManyWithoutParent_commentNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_report?: discussion_board_reportUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutCommentNestedInput\n  }\n\n  export type discussion_board_usersCreateWithoutDiscussion_board_audit_log_of_actor_idInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    discussion_board_admins?: discussion_board_adminsCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    discussion_board_user_profiles?: discussion_board_user_profilesCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    discussion_board_user_settings?: discussion_board_user_settingsCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    discussion_board_thread?: discussion_board_threadCreateNestedManyWithoutCreator_userInput\n    discussion_board_post?: discussion_board_postCreateNestedManyWithoutAuthor_userInput\n    discussion_board_comment?: discussion_board_commentCreateNestedManyWithoutAuthor_userInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutUserInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutUserInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutUserInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutRecipient_userInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutUserInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportCreateNestedManyWithoutReported_userInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportCreateNestedManyWithoutReporting_userInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutUserInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logCreateNestedManyWithoutAffected_userInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutUserInput\n    discussion_board_ban?: discussion_board_banCreateNestedManyWithoutUserInput\n    discussion_board_user_activity?: discussion_board_user_activityCreateNestedOneWithoutDiscussion_board_userInput\n  }\n\n  export type discussion_board_usersUncheckedCreateWithoutDiscussion_board_audit_log_of_actor_idInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUncheckedCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    discussion_board_admins?: discussion_board_adminsUncheckedCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUncheckedCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    discussion_board_user_settings?: discussion_board_user_settingsUncheckedCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    discussion_board_thread?: discussion_board_threadUncheckedCreateNestedManyWithoutCreator_userInput\n    discussion_board_post?: discussion_board_postUncheckedCreateNestedManyWithoutAuthor_userInput\n    discussion_board_comment?: discussion_board_commentUncheckedCreateNestedManyWithoutAuthor_userInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutRecipient_userInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUncheckedCreateNestedManyWithoutReported_userInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUncheckedCreateNestedManyWithoutReporting_userInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUncheckedCreateNestedManyWithoutAffected_userInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_ban?: discussion_board_banUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_user_activity?: discussion_board_user_activityUncheckedCreateNestedOneWithoutDiscussion_board_userInput\n  }\n\n  export type discussion_board_usersCreateOrConnectWithoutDiscussion_board_audit_log_of_actor_idInput = {\n    where: discussion_board_usersWhereUniqueInput\n    create: XOR<discussion_board_usersCreateWithoutDiscussion_board_audit_log_of_actor_idInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_audit_log_of_actor_idInput>\n  }\n\n  export type discussion_board_usersCreateWithoutDiscussion_board_audit_log_of_affected_user_idInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    discussion_board_admins?: discussion_board_adminsCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    discussion_board_user_profiles?: discussion_board_user_profilesCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    discussion_board_user_settings?: discussion_board_user_settingsCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    discussion_board_thread?: discussion_board_threadCreateNestedManyWithoutCreator_userInput\n    discussion_board_post?: discussion_board_postCreateNestedManyWithoutAuthor_userInput\n    discussion_board_comment?: discussion_board_commentCreateNestedManyWithoutAuthor_userInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutUserInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutUserInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutUserInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutRecipient_userInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutUserInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportCreateNestedManyWithoutReported_userInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportCreateNestedManyWithoutReporting_userInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutUserInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logCreateNestedManyWithoutActorInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutUserInput\n    discussion_board_ban?: discussion_board_banCreateNestedManyWithoutUserInput\n    discussion_board_user_activity?: discussion_board_user_activityCreateNestedOneWithoutDiscussion_board_userInput\n  }\n\n  export type discussion_board_usersUncheckedCreateWithoutDiscussion_board_audit_log_of_affected_user_idInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUncheckedCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    discussion_board_admins?: discussion_board_adminsUncheckedCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUncheckedCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    discussion_board_user_settings?: discussion_board_user_settingsUncheckedCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    discussion_board_thread?: discussion_board_threadUncheckedCreateNestedManyWithoutCreator_userInput\n    discussion_board_post?: discussion_board_postUncheckedCreateNestedManyWithoutAuthor_userInput\n    discussion_board_comment?: discussion_board_commentUncheckedCreateNestedManyWithoutAuthor_userInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutRecipient_userInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUncheckedCreateNestedManyWithoutReported_userInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUncheckedCreateNestedManyWithoutReporting_userInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUncheckedCreateNestedManyWithoutActorInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_ban?: discussion_board_banUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_user_activity?: discussion_board_user_activityUncheckedCreateNestedOneWithoutDiscussion_board_userInput\n  }\n\n  export type discussion_board_usersCreateOrConnectWithoutDiscussion_board_audit_log_of_affected_user_idInput = {\n    where: discussion_board_usersWhereUniqueInput\n    create: XOR<discussion_board_usersCreateWithoutDiscussion_board_audit_log_of_affected_user_idInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_audit_log_of_affected_user_idInput>\n  }\n\n  export type discussion_board_usersUpsertWithoutDiscussion_board_audit_log_of_actor_idInput = {\n    update: XOR<discussion_board_usersUpdateWithoutDiscussion_board_audit_log_of_actor_idInput, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_audit_log_of_actor_idInput>\n    create: XOR<discussion_board_usersCreateWithoutDiscussion_board_audit_log_of_actor_idInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_audit_log_of_actor_idInput>\n    where?: discussion_board_usersWhereInput\n  }\n\n  export type discussion_board_usersUpdateToOneWithWhereWithoutDiscussion_board_audit_log_of_actor_idInput = {\n    where?: discussion_board_usersWhereInput\n    data: XOR<discussion_board_usersUpdateWithoutDiscussion_board_audit_log_of_actor_idInput, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_audit_log_of_actor_idInput>\n  }\n\n  export type discussion_board_usersUpdateWithoutDiscussion_board_audit_log_of_actor_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput\n    discussion_board_admins?: discussion_board_adminsUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_settings?: discussion_board_user_settingsUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput\n    discussion_board_thread?: discussion_board_threadUpdateManyWithoutCreator_userNestedInput\n    discussion_board_post?: discussion_board_postUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_comment?: discussion_board_commentUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutUserNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutUserNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutUserNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutRecipient_userNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutUserNestedInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUpdateManyWithoutReported_userNestedInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUpdateManyWithoutReporting_userNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutUserNestedInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUpdateManyWithoutAffected_userNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutUserNestedInput\n    discussion_board_ban?: discussion_board_banUpdateManyWithoutUserNestedInput\n    discussion_board_user_activity?: discussion_board_user_activityUpdateOneWithoutDiscussion_board_userNestedInput\n  }\n\n  export type discussion_board_usersUncheckedUpdateWithoutDiscussion_board_audit_log_of_actor_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUncheckedUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput\n    discussion_board_admins?: discussion_board_adminsUncheckedUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUncheckedUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_settings?: discussion_board_user_settingsUncheckedUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput\n    discussion_board_thread?: discussion_board_threadUncheckedUpdateManyWithoutCreator_userNestedInput\n    discussion_board_post?: discussion_board_postUncheckedUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_comment?: discussion_board_commentUncheckedUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutRecipient_userNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUncheckedUpdateManyWithoutReported_userNestedInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUncheckedUpdateManyWithoutReporting_userNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUncheckedUpdateManyWithoutAffected_userNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_ban?: discussion_board_banUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_user_activity?: discussion_board_user_activityUncheckedUpdateOneWithoutDiscussion_board_userNestedInput\n  }\n\n  export type discussion_board_usersUpsertWithoutDiscussion_board_audit_log_of_affected_user_idInput = {\n    update: XOR<discussion_board_usersUpdateWithoutDiscussion_board_audit_log_of_affected_user_idInput, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_audit_log_of_affected_user_idInput>\n    create: XOR<discussion_board_usersCreateWithoutDiscussion_board_audit_log_of_affected_user_idInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_audit_log_of_affected_user_idInput>\n    where?: discussion_board_usersWhereInput\n  }\n\n  export type discussion_board_usersUpdateToOneWithWhereWithoutDiscussion_board_audit_log_of_affected_user_idInput = {\n    where?: discussion_board_usersWhereInput\n    data: XOR<discussion_board_usersUpdateWithoutDiscussion_board_audit_log_of_affected_user_idInput, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_audit_log_of_affected_user_idInput>\n  }\n\n  export type discussion_board_usersUpdateWithoutDiscussion_board_audit_log_of_affected_user_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput\n    discussion_board_admins?: discussion_board_adminsUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_settings?: discussion_board_user_settingsUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput\n    discussion_board_thread?: discussion_board_threadUpdateManyWithoutCreator_userNestedInput\n    discussion_board_post?: discussion_board_postUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_comment?: discussion_board_commentUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutUserNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutUserNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutUserNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutRecipient_userNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutUserNestedInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUpdateManyWithoutReported_userNestedInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUpdateManyWithoutReporting_userNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutUserNestedInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUpdateManyWithoutActorNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutUserNestedInput\n    discussion_board_ban?: discussion_board_banUpdateManyWithoutUserNestedInput\n    discussion_board_user_activity?: discussion_board_user_activityUpdateOneWithoutDiscussion_board_userNestedInput\n  }\n\n  export type discussion_board_usersUncheckedUpdateWithoutDiscussion_board_audit_log_of_affected_user_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUncheckedUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput\n    discussion_board_admins?: discussion_board_adminsUncheckedUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUncheckedUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_settings?: discussion_board_user_settingsUncheckedUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput\n    discussion_board_thread?: discussion_board_threadUncheckedUpdateManyWithoutCreator_userNestedInput\n    discussion_board_post?: discussion_board_postUncheckedUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_comment?: discussion_board_commentUncheckedUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutRecipient_userNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUncheckedUpdateManyWithoutReported_userNestedInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUncheckedUpdateManyWithoutReporting_userNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUncheckedUpdateManyWithoutActorNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_ban?: discussion_board_banUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_user_activity?: discussion_board_user_activityUncheckedUpdateOneWithoutDiscussion_board_userNestedInput\n  }\n\n  export type discussion_board_usersCreateWithoutDiscussion_board_warningInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    discussion_board_admins?: discussion_board_adminsCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    discussion_board_user_profiles?: discussion_board_user_profilesCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    discussion_board_user_settings?: discussion_board_user_settingsCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    discussion_board_thread?: discussion_board_threadCreateNestedManyWithoutCreator_userInput\n    discussion_board_post?: discussion_board_postCreateNestedManyWithoutAuthor_userInput\n    discussion_board_comment?: discussion_board_commentCreateNestedManyWithoutAuthor_userInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutUserInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutUserInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutUserInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutRecipient_userInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutUserInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportCreateNestedManyWithoutReported_userInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportCreateNestedManyWithoutReporting_userInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutUserInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logCreateNestedManyWithoutActorInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logCreateNestedManyWithoutAffected_userInput\n    discussion_board_ban?: discussion_board_banCreateNestedManyWithoutUserInput\n    discussion_board_user_activity?: discussion_board_user_activityCreateNestedOneWithoutDiscussion_board_userInput\n  }\n\n  export type discussion_board_usersUncheckedCreateWithoutDiscussion_board_warningInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUncheckedCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    discussion_board_admins?: discussion_board_adminsUncheckedCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUncheckedCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    discussion_board_user_settings?: discussion_board_user_settingsUncheckedCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    discussion_board_thread?: discussion_board_threadUncheckedCreateNestedManyWithoutCreator_userInput\n    discussion_board_post?: discussion_board_postUncheckedCreateNestedManyWithoutAuthor_userInput\n    discussion_board_comment?: discussion_board_commentUncheckedCreateNestedManyWithoutAuthor_userInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutRecipient_userInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUncheckedCreateNestedManyWithoutReported_userInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUncheckedCreateNestedManyWithoutReporting_userInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUncheckedCreateNestedManyWithoutActorInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUncheckedCreateNestedManyWithoutAffected_userInput\n    discussion_board_ban?: discussion_board_banUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_user_activity?: discussion_board_user_activityUncheckedCreateNestedOneWithoutDiscussion_board_userInput\n  }\n\n  export type discussion_board_usersCreateOrConnectWithoutDiscussion_board_warningInput = {\n    where: discussion_board_usersWhereUniqueInput\n    create: XOR<discussion_board_usersCreateWithoutDiscussion_board_warningInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_warningInput>\n  }\n\n  export type discussion_board_moderatorsCreateWithoutDiscussion_board_warningInput = {\n    id: string\n    is_active: boolean\n    assigned_at: Date | string\n    revoked_at?: Date | string | null\n    fk_discussion_board_moderators_user_id_discussion_board_users_id: discussion_board_usersCreateNestedOneWithoutDiscussion_board_moderatorsInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutModeratorInput\n    discussion_board_ban?: discussion_board_banCreateNestedManyWithoutModeratorInput\n    discussion_board_content_abuse_metric?: discussion_board_content_abuse_metricCreateNestedManyWithoutDiscussion_board_moderatorInput\n  }\n\n  export type discussion_board_moderatorsUncheckedCreateWithoutDiscussion_board_warningInput = {\n    id: string\n    user_id: string\n    is_active: boolean\n    assigned_at: Date | string\n    revoked_at?: Date | string | null\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutModeratorInput\n    discussion_board_ban?: discussion_board_banUncheckedCreateNestedManyWithoutModeratorInput\n    discussion_board_content_abuse_metric?: discussion_board_content_abuse_metricUncheckedCreateNestedManyWithoutDiscussion_board_moderatorInput\n  }\n\n  export type discussion_board_moderatorsCreateOrConnectWithoutDiscussion_board_warningInput = {\n    where: discussion_board_moderatorsWhereUniqueInput\n    create: XOR<discussion_board_moderatorsCreateWithoutDiscussion_board_warningInput, discussion_board_moderatorsUncheckedCreateWithoutDiscussion_board_warningInput>\n  }\n\n  export type discussion_board_threadCreateWithoutDiscussion_board_warningInput = {\n    id: string\n    title: string\n    body: string\n    is_locked: boolean\n    is_pinned: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    creator_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_threadInput\n    category: discussion_board_thread_categoryCreateNestedOneWithoutDiscussion_board_threadInput\n    discussion_board_post?: discussion_board_postCreateNestedManyWithoutThreadInput\n    discussion_board_thread_tag?: discussion_board_thread_tagCreateNestedManyWithoutThreadInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityCreateNestedOneWithoutThreadInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutThreadInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutThreadInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutThreadInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutThreadInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutThreadInput\n    discussion_board_report?: discussion_board_reportCreateNestedManyWithoutThreadInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutThreadInput\n    discussion_board_thread_stats?: discussion_board_thread_statsCreateNestedOneWithoutDiscussion_board_threadInput\n  }\n\n  export type discussion_board_threadUncheckedCreateWithoutDiscussion_board_warningInput = {\n    id: string\n    creator_user_id: string\n    category_id: string\n    title: string\n    body: string\n    is_locked: boolean\n    is_pinned: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_post?: discussion_board_postUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_thread_tag?: discussion_board_thread_tagUncheckedCreateNestedManyWithoutThreadInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUncheckedCreateNestedOneWithoutThreadInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_report?: discussion_board_reportUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUncheckedCreateNestedOneWithoutDiscussion_board_threadInput\n  }\n\n  export type discussion_board_threadCreateOrConnectWithoutDiscussion_board_warningInput = {\n    where: discussion_board_threadWhereUniqueInput\n    create: XOR<discussion_board_threadCreateWithoutDiscussion_board_warningInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_warningInput>\n  }\n\n  export type discussion_board_postCreateWithoutDiscussion_board_warningInput = {\n    id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    thread: discussion_board_threadCreateNestedOneWithoutDiscussion_board_postInput\n    author_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_postInput\n    parent_post?: discussion_board_postCreateNestedOneWithoutRecursiveInput\n    recursive?: discussion_board_postCreateNestedManyWithoutParent_postInput\n    discussion_board_comment?: discussion_board_commentCreateNestedManyWithoutPostInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutPostInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutPostInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutPostInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutPostInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutPostInput\n    discussion_board_report?: discussion_board_reportCreateNestedManyWithoutPostInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutPostInput\n  }\n\n  export type discussion_board_postUncheckedCreateWithoutDiscussion_board_warningInput = {\n    id: string\n    thread_id: string\n    author_user_id: string\n    parent_post_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    recursive?: discussion_board_postUncheckedCreateNestedManyWithoutParent_postInput\n    discussion_board_comment?: discussion_board_commentUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_report?: discussion_board_reportUncheckedCreateNestedManyWithoutPostInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutPostInput\n  }\n\n  export type discussion_board_postCreateOrConnectWithoutDiscussion_board_warningInput = {\n    where: discussion_board_postWhereUniqueInput\n    create: XOR<discussion_board_postCreateWithoutDiscussion_board_warningInput, discussion_board_postUncheckedCreateWithoutDiscussion_board_warningInput>\n  }\n\n  export type discussion_board_commentCreateWithoutDiscussion_board_warningInput = {\n    id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    post: discussion_board_postCreateNestedOneWithoutDiscussion_board_commentInput\n    author_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_commentInput\n    parent_comment?: discussion_board_commentCreateNestedOneWithoutRecursiveInput\n    recursive?: discussion_board_commentCreateNestedManyWithoutParent_commentInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutCommentInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutCommentInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutCommentInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutCommentInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutCommentInput\n    discussion_board_report?: discussion_board_reportCreateNestedManyWithoutCommentInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutCommentInput\n  }\n\n  export type discussion_board_commentUncheckedCreateWithoutDiscussion_board_warningInput = {\n    id: string\n    post_id: string\n    author_user_id: string\n    parent_comment_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    recursive?: discussion_board_commentUncheckedCreateNestedManyWithoutParent_commentInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_report?: discussion_board_reportUncheckedCreateNestedManyWithoutCommentInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutCommentInput\n  }\n\n  export type discussion_board_commentCreateOrConnectWithoutDiscussion_board_warningInput = {\n    where: discussion_board_commentWhereUniqueInput\n    create: XOR<discussion_board_commentCreateWithoutDiscussion_board_warningInput, discussion_board_commentUncheckedCreateWithoutDiscussion_board_warningInput>\n  }\n\n  export type discussion_board_banCreateWithoutWarningInput = {\n    id: string\n    ban_type: string\n    reason: string\n    banned_at: Date | string\n    expires_at?: Date | string | null\n    user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_banInput\n    moderator: discussion_board_moderatorsCreateNestedOneWithoutDiscussion_board_banInput\n    report?: discussion_board_reportCreateNestedOneWithoutDiscussion_board_banInput\n  }\n\n  export type discussion_board_banUncheckedCreateWithoutWarningInput = {\n    id: string\n    user_id: string\n    moderator_id: string\n    report_id?: string | null\n    ban_type: string\n    reason: string\n    banned_at: Date | string\n    expires_at?: Date | string | null\n  }\n\n  export type discussion_board_banCreateOrConnectWithoutWarningInput = {\n    where: discussion_board_banWhereUniqueInput\n    create: XOR<discussion_board_banCreateWithoutWarningInput, discussion_board_banUncheckedCreateWithoutWarningInput>\n  }\n\n  export type discussion_board_banCreateManyWarningInputEnvelope = {\n    data: discussion_board_banCreateManyWarningInput | discussion_board_banCreateManyWarningInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussion_board_usersUpsertWithoutDiscussion_board_warningInput = {\n    update: XOR<discussion_board_usersUpdateWithoutDiscussion_board_warningInput, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_warningInput>\n    create: XOR<discussion_board_usersCreateWithoutDiscussion_board_warningInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_warningInput>\n    where?: discussion_board_usersWhereInput\n  }\n\n  export type discussion_board_usersUpdateToOneWithWhereWithoutDiscussion_board_warningInput = {\n    where?: discussion_board_usersWhereInput\n    data: XOR<discussion_board_usersUpdateWithoutDiscussion_board_warningInput, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_warningInput>\n  }\n\n  export type discussion_board_usersUpdateWithoutDiscussion_board_warningInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput\n    discussion_board_admins?: discussion_board_adminsUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_settings?: discussion_board_user_settingsUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput\n    discussion_board_thread?: discussion_board_threadUpdateManyWithoutCreator_userNestedInput\n    discussion_board_post?: discussion_board_postUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_comment?: discussion_board_commentUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutUserNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutUserNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutUserNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutRecipient_userNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutUserNestedInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUpdateManyWithoutReported_userNestedInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUpdateManyWithoutReporting_userNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutUserNestedInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUpdateManyWithoutActorNestedInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUpdateManyWithoutAffected_userNestedInput\n    discussion_board_ban?: discussion_board_banUpdateManyWithoutUserNestedInput\n    discussion_board_user_activity?: discussion_board_user_activityUpdateOneWithoutDiscussion_board_userNestedInput\n  }\n\n  export type discussion_board_usersUncheckedUpdateWithoutDiscussion_board_warningInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUncheckedUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput\n    discussion_board_admins?: discussion_board_adminsUncheckedUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUncheckedUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_settings?: discussion_board_user_settingsUncheckedUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput\n    discussion_board_thread?: discussion_board_threadUncheckedUpdateManyWithoutCreator_userNestedInput\n    discussion_board_post?: discussion_board_postUncheckedUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_comment?: discussion_board_commentUncheckedUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutRecipient_userNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUncheckedUpdateManyWithoutReported_userNestedInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUncheckedUpdateManyWithoutReporting_userNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUncheckedUpdateManyWithoutActorNestedInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUncheckedUpdateManyWithoutAffected_userNestedInput\n    discussion_board_ban?: discussion_board_banUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_user_activity?: discussion_board_user_activityUncheckedUpdateOneWithoutDiscussion_board_userNestedInput\n  }\n\n  export type discussion_board_moderatorsUpsertWithoutDiscussion_board_warningInput = {\n    update: XOR<discussion_board_moderatorsUpdateWithoutDiscussion_board_warningInput, discussion_board_moderatorsUncheckedUpdateWithoutDiscussion_board_warningInput>\n    create: XOR<discussion_board_moderatorsCreateWithoutDiscussion_board_warningInput, discussion_board_moderatorsUncheckedCreateWithoutDiscussion_board_warningInput>\n    where?: discussion_board_moderatorsWhereInput\n  }\n\n  export type discussion_board_moderatorsUpdateToOneWithWhereWithoutDiscussion_board_warningInput = {\n    where?: discussion_board_moderatorsWhereInput\n    data: XOR<discussion_board_moderatorsUpdateWithoutDiscussion_board_warningInput, discussion_board_moderatorsUncheckedUpdateWithoutDiscussion_board_warningInput>\n  }\n\n  export type discussion_board_moderatorsUpdateWithoutDiscussion_board_warningInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    fk_discussion_board_moderators_user_id_discussion_board_users_id?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_moderatorsNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutModeratorNestedInput\n    discussion_board_ban?: discussion_board_banUpdateManyWithoutModeratorNestedInput\n    discussion_board_content_abuse_metric?: discussion_board_content_abuse_metricUpdateManyWithoutDiscussion_board_moderatorNestedInput\n  }\n\n  export type discussion_board_moderatorsUncheckedUpdateWithoutDiscussion_board_warningInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutModeratorNestedInput\n    discussion_board_ban?: discussion_board_banUncheckedUpdateManyWithoutModeratorNestedInput\n    discussion_board_content_abuse_metric?: discussion_board_content_abuse_metricUncheckedUpdateManyWithoutDiscussion_board_moderatorNestedInput\n  }\n\n  export type discussion_board_threadUpsertWithoutDiscussion_board_warningInput = {\n    update: XOR<discussion_board_threadUpdateWithoutDiscussion_board_warningInput, discussion_board_threadUncheckedUpdateWithoutDiscussion_board_warningInput>\n    create: XOR<discussion_board_threadCreateWithoutDiscussion_board_warningInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_warningInput>\n    where?: discussion_board_threadWhereInput\n  }\n\n  export type discussion_board_threadUpdateToOneWithWhereWithoutDiscussion_board_warningInput = {\n    where?: discussion_board_threadWhereInput\n    data: XOR<discussion_board_threadUpdateWithoutDiscussion_board_warningInput, discussion_board_threadUncheckedUpdateWithoutDiscussion_board_warningInput>\n  }\n\n  export type discussion_board_threadUpdateWithoutDiscussion_board_warningInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    is_locked?: BoolFieldUpdateOperationsInput | boolean\n    is_pinned?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    creator_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_threadNestedInput\n    category?: discussion_board_thread_categoryUpdateOneRequiredWithoutDiscussion_board_threadNestedInput\n    discussion_board_post?: discussion_board_postUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_tag?: discussion_board_thread_tagUpdateManyWithoutThreadNestedInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUpdateOneWithoutThreadNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutThreadNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutThreadNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutThreadNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutThreadNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutThreadNestedInput\n    discussion_board_report?: discussion_board_reportUpdateManyWithoutThreadNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUpdateOneWithoutDiscussion_board_threadNestedInput\n  }\n\n  export type discussion_board_threadUncheckedUpdateWithoutDiscussion_board_warningInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    creator_user_id?: StringFieldUpdateOperationsInput | string\n    category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    is_locked?: BoolFieldUpdateOperationsInput | boolean\n    is_pinned?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_post?: discussion_board_postUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_tag?: discussion_board_thread_tagUncheckedUpdateManyWithoutThreadNestedInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUncheckedUpdateOneWithoutThreadNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_report?: discussion_board_reportUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUncheckedUpdateOneWithoutDiscussion_board_threadNestedInput\n  }\n\n  export type discussion_board_postUpsertWithoutDiscussion_board_warningInput = {\n    update: XOR<discussion_board_postUpdateWithoutDiscussion_board_warningInput, discussion_board_postUncheckedUpdateWithoutDiscussion_board_warningInput>\n    create: XOR<discussion_board_postCreateWithoutDiscussion_board_warningInput, discussion_board_postUncheckedCreateWithoutDiscussion_board_warningInput>\n    where?: discussion_board_postWhereInput\n  }\n\n  export type discussion_board_postUpdateToOneWithWhereWithoutDiscussion_board_warningInput = {\n    where?: discussion_board_postWhereInput\n    data: XOR<discussion_board_postUpdateWithoutDiscussion_board_warningInput, discussion_board_postUncheckedUpdateWithoutDiscussion_board_warningInput>\n  }\n\n  export type discussion_board_postUpdateWithoutDiscussion_board_warningInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    thread?: discussion_board_threadUpdateOneRequiredWithoutDiscussion_board_postNestedInput\n    author_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_postNestedInput\n    parent_post?: discussion_board_postUpdateOneWithoutRecursiveNestedInput\n    recursive?: discussion_board_postUpdateManyWithoutParent_postNestedInput\n    discussion_board_comment?: discussion_board_commentUpdateManyWithoutPostNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutPostNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutPostNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutPostNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutPostNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutPostNestedInput\n    discussion_board_report?: discussion_board_reportUpdateManyWithoutPostNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutPostNestedInput\n  }\n\n  export type discussion_board_postUncheckedUpdateWithoutDiscussion_board_warningInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    thread_id?: StringFieldUpdateOperationsInput | string\n    author_user_id?: StringFieldUpdateOperationsInput | string\n    parent_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recursive?: discussion_board_postUncheckedUpdateManyWithoutParent_postNestedInput\n    discussion_board_comment?: discussion_board_commentUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_report?: discussion_board_reportUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutPostNestedInput\n  }\n\n  export type discussion_board_commentUpsertWithoutDiscussion_board_warningInput = {\n    update: XOR<discussion_board_commentUpdateWithoutDiscussion_board_warningInput, discussion_board_commentUncheckedUpdateWithoutDiscussion_board_warningInput>\n    create: XOR<discussion_board_commentCreateWithoutDiscussion_board_warningInput, discussion_board_commentUncheckedCreateWithoutDiscussion_board_warningInput>\n    where?: discussion_board_commentWhereInput\n  }\n\n  export type discussion_board_commentUpdateToOneWithWhereWithoutDiscussion_board_warningInput = {\n    where?: discussion_board_commentWhereInput\n    data: XOR<discussion_board_commentUpdateWithoutDiscussion_board_warningInput, discussion_board_commentUncheckedUpdateWithoutDiscussion_board_warningInput>\n  }\n\n  export type discussion_board_commentUpdateWithoutDiscussion_board_warningInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    post?: discussion_board_postUpdateOneRequiredWithoutDiscussion_board_commentNestedInput\n    author_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_commentNestedInput\n    parent_comment?: discussion_board_commentUpdateOneWithoutRecursiveNestedInput\n    recursive?: discussion_board_commentUpdateManyWithoutParent_commentNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutCommentNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutCommentNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutCommentNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutCommentNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutCommentNestedInput\n    discussion_board_report?: discussion_board_reportUpdateManyWithoutCommentNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutCommentNestedInput\n  }\n\n  export type discussion_board_commentUncheckedUpdateWithoutDiscussion_board_warningInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    author_user_id?: StringFieldUpdateOperationsInput | string\n    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recursive?: discussion_board_commentUncheckedUpdateManyWithoutParent_commentNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_report?: discussion_board_reportUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutCommentNestedInput\n  }\n\n  export type discussion_board_banUpsertWithWhereUniqueWithoutWarningInput = {\n    where: discussion_board_banWhereUniqueInput\n    update: XOR<discussion_board_banUpdateWithoutWarningInput, discussion_board_banUncheckedUpdateWithoutWarningInput>\n    create: XOR<discussion_board_banCreateWithoutWarningInput, discussion_board_banUncheckedCreateWithoutWarningInput>\n  }\n\n  export type discussion_board_banUpdateWithWhereUniqueWithoutWarningInput = {\n    where: discussion_board_banWhereUniqueInput\n    data: XOR<discussion_board_banUpdateWithoutWarningInput, discussion_board_banUncheckedUpdateWithoutWarningInput>\n  }\n\n  export type discussion_board_banUpdateManyWithWhereWithoutWarningInput = {\n    where: discussion_board_banScalarWhereInput\n    data: XOR<discussion_board_banUpdateManyMutationInput, discussion_board_banUncheckedUpdateManyWithoutWarningInput>\n  }\n\n  export type discussion_board_usersCreateWithoutDiscussion_board_banInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    discussion_board_admins?: discussion_board_adminsCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    discussion_board_user_profiles?: discussion_board_user_profilesCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    discussion_board_user_settings?: discussion_board_user_settingsCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    discussion_board_thread?: discussion_board_threadCreateNestedManyWithoutCreator_userInput\n    discussion_board_post?: discussion_board_postCreateNestedManyWithoutAuthor_userInput\n    discussion_board_comment?: discussion_board_commentCreateNestedManyWithoutAuthor_userInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutUserInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutUserInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutUserInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutRecipient_userInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutUserInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportCreateNestedManyWithoutReported_userInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportCreateNestedManyWithoutReporting_userInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutUserInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logCreateNestedManyWithoutActorInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logCreateNestedManyWithoutAffected_userInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutUserInput\n    discussion_board_user_activity?: discussion_board_user_activityCreateNestedOneWithoutDiscussion_board_userInput\n  }\n\n  export type discussion_board_usersUncheckedCreateWithoutDiscussion_board_banInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUncheckedCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    discussion_board_admins?: discussion_board_adminsUncheckedCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUncheckedCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    discussion_board_user_settings?: discussion_board_user_settingsUncheckedCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    discussion_board_thread?: discussion_board_threadUncheckedCreateNestedManyWithoutCreator_userInput\n    discussion_board_post?: discussion_board_postUncheckedCreateNestedManyWithoutAuthor_userInput\n    discussion_board_comment?: discussion_board_commentUncheckedCreateNestedManyWithoutAuthor_userInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutRecipient_userInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUncheckedCreateNestedManyWithoutReported_userInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUncheckedCreateNestedManyWithoutReporting_userInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUncheckedCreateNestedManyWithoutActorInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUncheckedCreateNestedManyWithoutAffected_userInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_user_activity?: discussion_board_user_activityUncheckedCreateNestedOneWithoutDiscussion_board_userInput\n  }\n\n  export type discussion_board_usersCreateOrConnectWithoutDiscussion_board_banInput = {\n    where: discussion_board_usersWhereUniqueInput\n    create: XOR<discussion_board_usersCreateWithoutDiscussion_board_banInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_banInput>\n  }\n\n  export type discussion_board_moderatorsCreateWithoutDiscussion_board_banInput = {\n    id: string\n    is_active: boolean\n    assigned_at: Date | string\n    revoked_at?: Date | string | null\n    fk_discussion_board_moderators_user_id_discussion_board_users_id: discussion_board_usersCreateNestedOneWithoutDiscussion_board_moderatorsInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutModeratorInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutModeratorInput\n    discussion_board_content_abuse_metric?: discussion_board_content_abuse_metricCreateNestedManyWithoutDiscussion_board_moderatorInput\n  }\n\n  export type discussion_board_moderatorsUncheckedCreateWithoutDiscussion_board_banInput = {\n    id: string\n    user_id: string\n    is_active: boolean\n    assigned_at: Date | string\n    revoked_at?: Date | string | null\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutModeratorInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutModeratorInput\n    discussion_board_content_abuse_metric?: discussion_board_content_abuse_metricUncheckedCreateNestedManyWithoutDiscussion_board_moderatorInput\n  }\n\n  export type discussion_board_moderatorsCreateOrConnectWithoutDiscussion_board_banInput = {\n    where: discussion_board_moderatorsWhereUniqueInput\n    create: XOR<discussion_board_moderatorsCreateWithoutDiscussion_board_banInput, discussion_board_moderatorsUncheckedCreateWithoutDiscussion_board_banInput>\n  }\n\n  export type discussion_board_warningCreateWithoutDiscussion_board_banInput = {\n    id: string\n    reason: string\n    issued_at: Date | string\n    user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_warningInput\n    moderator: discussion_board_moderatorsCreateNestedOneWithoutDiscussion_board_warningInput\n    thread?: discussion_board_threadCreateNestedOneWithoutDiscussion_board_warningInput\n    post?: discussion_board_postCreateNestedOneWithoutDiscussion_board_warningInput\n    comment?: discussion_board_commentCreateNestedOneWithoutDiscussion_board_warningInput\n  }\n\n  export type discussion_board_warningUncheckedCreateWithoutDiscussion_board_banInput = {\n    id: string\n    user_id: string\n    moderator_id: string\n    thread_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    reason: string\n    issued_at: Date | string\n  }\n\n  export type discussion_board_warningCreateOrConnectWithoutDiscussion_board_banInput = {\n    where: discussion_board_warningWhereUniqueInput\n    create: XOR<discussion_board_warningCreateWithoutDiscussion_board_banInput, discussion_board_warningUncheckedCreateWithoutDiscussion_board_banInput>\n  }\n\n  export type discussion_board_reportCreateWithoutDiscussion_board_banInput = {\n    id: string\n    status: string\n    category: string\n    submitted_at: Date | string\n    resolved_at?: Date | string | null\n    details: string\n    reported_user?: discussion_board_usersCreateNestedOneWithoutDiscussion_board_report_of_reported_user_idInput\n    reporting_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_report_of_reporting_user_idInput\n    thread?: discussion_board_threadCreateNestedOneWithoutDiscussion_board_reportInput\n    post?: discussion_board_postCreateNestedOneWithoutDiscussion_board_reportInput\n    comment?: discussion_board_commentCreateNestedOneWithoutDiscussion_board_reportInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutReportInput\n  }\n\n  export type discussion_board_reportUncheckedCreateWithoutDiscussion_board_banInput = {\n    id: string\n    reported_user_id?: string | null\n    reporting_user_id: string\n    thread_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    status: string\n    category: string\n    submitted_at: Date | string\n    resolved_at?: Date | string | null\n    details: string\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutReportInput\n  }\n\n  export type discussion_board_reportCreateOrConnectWithoutDiscussion_board_banInput = {\n    where: discussion_board_reportWhereUniqueInput\n    create: XOR<discussion_board_reportCreateWithoutDiscussion_board_banInput, discussion_board_reportUncheckedCreateWithoutDiscussion_board_banInput>\n  }\n\n  export type discussion_board_usersUpsertWithoutDiscussion_board_banInput = {\n    update: XOR<discussion_board_usersUpdateWithoutDiscussion_board_banInput, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_banInput>\n    create: XOR<discussion_board_usersCreateWithoutDiscussion_board_banInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_banInput>\n    where?: discussion_board_usersWhereInput\n  }\n\n  export type discussion_board_usersUpdateToOneWithWhereWithoutDiscussion_board_banInput = {\n    where?: discussion_board_usersWhereInput\n    data: XOR<discussion_board_usersUpdateWithoutDiscussion_board_banInput, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_banInput>\n  }\n\n  export type discussion_board_usersUpdateWithoutDiscussion_board_banInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput\n    discussion_board_admins?: discussion_board_adminsUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_settings?: discussion_board_user_settingsUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput\n    discussion_board_thread?: discussion_board_threadUpdateManyWithoutCreator_userNestedInput\n    discussion_board_post?: discussion_board_postUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_comment?: discussion_board_commentUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutUserNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutUserNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutUserNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutRecipient_userNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutUserNestedInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUpdateManyWithoutReported_userNestedInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUpdateManyWithoutReporting_userNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutUserNestedInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUpdateManyWithoutActorNestedInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUpdateManyWithoutAffected_userNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutUserNestedInput\n    discussion_board_user_activity?: discussion_board_user_activityUpdateOneWithoutDiscussion_board_userNestedInput\n  }\n\n  export type discussion_board_usersUncheckedUpdateWithoutDiscussion_board_banInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUncheckedUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput\n    discussion_board_admins?: discussion_board_adminsUncheckedUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUncheckedUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_settings?: discussion_board_user_settingsUncheckedUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput\n    discussion_board_thread?: discussion_board_threadUncheckedUpdateManyWithoutCreator_userNestedInput\n    discussion_board_post?: discussion_board_postUncheckedUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_comment?: discussion_board_commentUncheckedUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutRecipient_userNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUncheckedUpdateManyWithoutReported_userNestedInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUncheckedUpdateManyWithoutReporting_userNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUncheckedUpdateManyWithoutActorNestedInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUncheckedUpdateManyWithoutAffected_userNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_user_activity?: discussion_board_user_activityUncheckedUpdateOneWithoutDiscussion_board_userNestedInput\n  }\n\n  export type discussion_board_moderatorsUpsertWithoutDiscussion_board_banInput = {\n    update: XOR<discussion_board_moderatorsUpdateWithoutDiscussion_board_banInput, discussion_board_moderatorsUncheckedUpdateWithoutDiscussion_board_banInput>\n    create: XOR<discussion_board_moderatorsCreateWithoutDiscussion_board_banInput, discussion_board_moderatorsUncheckedCreateWithoutDiscussion_board_banInput>\n    where?: discussion_board_moderatorsWhereInput\n  }\n\n  export type discussion_board_moderatorsUpdateToOneWithWhereWithoutDiscussion_board_banInput = {\n    where?: discussion_board_moderatorsWhereInput\n    data: XOR<discussion_board_moderatorsUpdateWithoutDiscussion_board_banInput, discussion_board_moderatorsUncheckedUpdateWithoutDiscussion_board_banInput>\n  }\n\n  export type discussion_board_moderatorsUpdateWithoutDiscussion_board_banInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    fk_discussion_board_moderators_user_id_discussion_board_users_id?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_moderatorsNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutModeratorNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutModeratorNestedInput\n    discussion_board_content_abuse_metric?: discussion_board_content_abuse_metricUpdateManyWithoutDiscussion_board_moderatorNestedInput\n  }\n\n  export type discussion_board_moderatorsUncheckedUpdateWithoutDiscussion_board_banInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutModeratorNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutModeratorNestedInput\n    discussion_board_content_abuse_metric?: discussion_board_content_abuse_metricUncheckedUpdateManyWithoutDiscussion_board_moderatorNestedInput\n  }\n\n  export type discussion_board_warningUpsertWithoutDiscussion_board_banInput = {\n    update: XOR<discussion_board_warningUpdateWithoutDiscussion_board_banInput, discussion_board_warningUncheckedUpdateWithoutDiscussion_board_banInput>\n    create: XOR<discussion_board_warningCreateWithoutDiscussion_board_banInput, discussion_board_warningUncheckedCreateWithoutDiscussion_board_banInput>\n    where?: discussion_board_warningWhereInput\n  }\n\n  export type discussion_board_warningUpdateToOneWithWhereWithoutDiscussion_board_banInput = {\n    where?: discussion_board_warningWhereInput\n    data: XOR<discussion_board_warningUpdateWithoutDiscussion_board_banInput, discussion_board_warningUncheckedUpdateWithoutDiscussion_board_banInput>\n  }\n\n  export type discussion_board_warningUpdateWithoutDiscussion_board_banInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_warningNestedInput\n    moderator?: discussion_board_moderatorsUpdateOneRequiredWithoutDiscussion_board_warningNestedInput\n    thread?: discussion_board_threadUpdateOneWithoutDiscussion_board_warningNestedInput\n    post?: discussion_board_postUpdateOneWithoutDiscussion_board_warningNestedInput\n    comment?: discussion_board_commentUpdateOneWithoutDiscussion_board_warningNestedInput\n  }\n\n  export type discussion_board_warningUncheckedUpdateWithoutDiscussion_board_banInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    moderator_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_reportUpsertWithoutDiscussion_board_banInput = {\n    update: XOR<discussion_board_reportUpdateWithoutDiscussion_board_banInput, discussion_board_reportUncheckedUpdateWithoutDiscussion_board_banInput>\n    create: XOR<discussion_board_reportCreateWithoutDiscussion_board_banInput, discussion_board_reportUncheckedCreateWithoutDiscussion_board_banInput>\n    where?: discussion_board_reportWhereInput\n  }\n\n  export type discussion_board_reportUpdateToOneWithWhereWithoutDiscussion_board_banInput = {\n    where?: discussion_board_reportWhereInput\n    data: XOR<discussion_board_reportUpdateWithoutDiscussion_board_banInput, discussion_board_reportUncheckedUpdateWithoutDiscussion_board_banInput>\n  }\n\n  export type discussion_board_reportUpdateWithoutDiscussion_board_banInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    category?: StringFieldUpdateOperationsInput | string\n    submitted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    details?: StringFieldUpdateOperationsInput | string\n    reported_user?: discussion_board_usersUpdateOneWithoutDiscussion_board_report_of_reported_user_idNestedInput\n    reporting_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_report_of_reporting_user_idNestedInput\n    thread?: discussion_board_threadUpdateOneWithoutDiscussion_board_reportNestedInput\n    post?: discussion_board_postUpdateOneWithoutDiscussion_board_reportNestedInput\n    comment?: discussion_board_commentUpdateOneWithoutDiscussion_board_reportNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutReportNestedInput\n  }\n\n  export type discussion_board_reportUncheckedUpdateWithoutDiscussion_board_banInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reported_user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reporting_user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    category?: StringFieldUpdateOperationsInput | string\n    submitted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    details?: StringFieldUpdateOperationsInput | string\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutReportNestedInput\n  }\n\n  export type discussion_board_threadCreateWithoutDiscussion_board_thread_statsInput = {\n    id: string\n    title: string\n    body: string\n    is_locked: boolean\n    is_pinned: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    creator_user: discussion_board_usersCreateNestedOneWithoutDiscussion_board_threadInput\n    category: discussion_board_thread_categoryCreateNestedOneWithoutDiscussion_board_threadInput\n    discussion_board_post?: discussion_board_postCreateNestedManyWithoutThreadInput\n    discussion_board_thread_tag?: discussion_board_thread_tagCreateNestedManyWithoutThreadInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityCreateNestedOneWithoutThreadInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutThreadInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutThreadInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutThreadInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutThreadInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutThreadInput\n    discussion_board_report?: discussion_board_reportCreateNestedManyWithoutThreadInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutThreadInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutThreadInput\n  }\n\n  export type discussion_board_threadUncheckedCreateWithoutDiscussion_board_thread_statsInput = {\n    id: string\n    creator_user_id: string\n    category_id: string\n    title: string\n    body: string\n    is_locked: boolean\n    is_pinned: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_post?: discussion_board_postUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_thread_tag?: discussion_board_thread_tagUncheckedCreateNestedManyWithoutThreadInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUncheckedCreateNestedOneWithoutThreadInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_report?: discussion_board_reportUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutThreadInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutThreadInput\n  }\n\n  export type discussion_board_threadCreateOrConnectWithoutDiscussion_board_thread_statsInput = {\n    where: discussion_board_threadWhereUniqueInput\n    create: XOR<discussion_board_threadCreateWithoutDiscussion_board_thread_statsInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_thread_statsInput>\n  }\n\n  export type discussion_board_threadUpsertWithoutDiscussion_board_thread_statsInput = {\n    update: XOR<discussion_board_threadUpdateWithoutDiscussion_board_thread_statsInput, discussion_board_threadUncheckedUpdateWithoutDiscussion_board_thread_statsInput>\n    create: XOR<discussion_board_threadCreateWithoutDiscussion_board_thread_statsInput, discussion_board_threadUncheckedCreateWithoutDiscussion_board_thread_statsInput>\n    where?: discussion_board_threadWhereInput\n  }\n\n  export type discussion_board_threadUpdateToOneWithWhereWithoutDiscussion_board_thread_statsInput = {\n    where?: discussion_board_threadWhereInput\n    data: XOR<discussion_board_threadUpdateWithoutDiscussion_board_thread_statsInput, discussion_board_threadUncheckedUpdateWithoutDiscussion_board_thread_statsInput>\n  }\n\n  export type discussion_board_threadUpdateWithoutDiscussion_board_thread_statsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    is_locked?: BoolFieldUpdateOperationsInput | boolean\n    is_pinned?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    creator_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_threadNestedInput\n    category?: discussion_board_thread_categoryUpdateOneRequiredWithoutDiscussion_board_threadNestedInput\n    discussion_board_post?: discussion_board_postUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_tag?: discussion_board_thread_tagUpdateManyWithoutThreadNestedInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUpdateOneWithoutThreadNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutThreadNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutThreadNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutThreadNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutThreadNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutThreadNestedInput\n    discussion_board_report?: discussion_board_reportUpdateManyWithoutThreadNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutThreadNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutThreadNestedInput\n  }\n\n  export type discussion_board_threadUncheckedUpdateWithoutDiscussion_board_thread_statsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    creator_user_id?: StringFieldUpdateOperationsInput | string\n    category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    is_locked?: BoolFieldUpdateOperationsInput | boolean\n    is_pinned?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_post?: discussion_board_postUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_tag?: discussion_board_thread_tagUncheckedUpdateManyWithoutThreadNestedInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUncheckedUpdateOneWithoutThreadNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_report?: discussion_board_reportUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutThreadNestedInput\n  }\n\n  export type discussion_board_usersCreateWithoutDiscussion_board_user_activityInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    discussion_board_admins?: discussion_board_adminsCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    discussion_board_user_profiles?: discussion_board_user_profilesCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    discussion_board_user_settings?: discussion_board_user_settingsCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    discussion_board_thread?: discussion_board_threadCreateNestedManyWithoutCreator_userInput\n    discussion_board_post?: discussion_board_postCreateNestedManyWithoutAuthor_userInput\n    discussion_board_comment?: discussion_board_commentCreateNestedManyWithoutAuthor_userInput\n    discussion_board_vote?: discussion_board_voteCreateNestedManyWithoutUserInput\n    discussion_board_reaction?: discussion_board_reactionCreateNestedManyWithoutUserInput\n    discussion_board_bookmark?: discussion_board_bookmarkCreateNestedManyWithoutUserInput\n    discussion_board_notification?: discussion_board_notificationCreateNestedManyWithoutRecipient_userInput\n    discussion_board_subscription?: discussion_board_subscriptionCreateNestedManyWithoutUserInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportCreateNestedManyWithoutReported_userInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportCreateNestedManyWithoutReporting_userInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutUserInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logCreateNestedManyWithoutActorInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logCreateNestedManyWithoutAffected_userInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutUserInput\n    discussion_board_ban?: discussion_board_banCreateNestedManyWithoutUserInput\n  }\n\n  export type discussion_board_usersUncheckedCreateWithoutDiscussion_board_user_activityInput = {\n    id: string\n    username: string\n    email: string\n    password_hash: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUncheckedCreateNestedOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idInput\n    discussion_board_admins?: discussion_board_adminsUncheckedCreateNestedOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUncheckedCreateNestedOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idInput\n    discussion_board_user_settings?: discussion_board_user_settingsUncheckedCreateNestedOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idInput\n    discussion_board_thread?: discussion_board_threadUncheckedCreateNestedManyWithoutCreator_userInput\n    discussion_board_post?: discussion_board_postUncheckedCreateNestedManyWithoutAuthor_userInput\n    discussion_board_comment?: discussion_board_commentUncheckedCreateNestedManyWithoutAuthor_userInput\n    discussion_board_vote?: discussion_board_voteUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_notification?: discussion_board_notificationUncheckedCreateNestedManyWithoutRecipient_userInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUncheckedCreateNestedManyWithoutReported_userInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUncheckedCreateNestedManyWithoutReporting_userInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUncheckedCreateNestedManyWithoutActorInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUncheckedCreateNestedManyWithoutAffected_userInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutUserInput\n    discussion_board_ban?: discussion_board_banUncheckedCreateNestedManyWithoutUserInput\n  }\n\n  export type discussion_board_usersCreateOrConnectWithoutDiscussion_board_user_activityInput = {\n    where: discussion_board_usersWhereUniqueInput\n    create: XOR<discussion_board_usersCreateWithoutDiscussion_board_user_activityInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_user_activityInput>\n  }\n\n  export type discussion_board_usersUpsertWithoutDiscussion_board_user_activityInput = {\n    update: XOR<discussion_board_usersUpdateWithoutDiscussion_board_user_activityInput, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_user_activityInput>\n    create: XOR<discussion_board_usersCreateWithoutDiscussion_board_user_activityInput, discussion_board_usersUncheckedCreateWithoutDiscussion_board_user_activityInput>\n    where?: discussion_board_usersWhereInput\n  }\n\n  export type discussion_board_usersUpdateToOneWithWhereWithoutDiscussion_board_user_activityInput = {\n    where?: discussion_board_usersWhereInput\n    data: XOR<discussion_board_usersUpdateWithoutDiscussion_board_user_activityInput, discussion_board_usersUncheckedUpdateWithoutDiscussion_board_user_activityInput>\n  }\n\n  export type discussion_board_usersUpdateWithoutDiscussion_board_user_activityInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput\n    discussion_board_admins?: discussion_board_adminsUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_settings?: discussion_board_user_settingsUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput\n    discussion_board_thread?: discussion_board_threadUpdateManyWithoutCreator_userNestedInput\n    discussion_board_post?: discussion_board_postUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_comment?: discussion_board_commentUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutUserNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutUserNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutUserNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutRecipient_userNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutUserNestedInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUpdateManyWithoutReported_userNestedInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUpdateManyWithoutReporting_userNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutUserNestedInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUpdateManyWithoutActorNestedInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUpdateManyWithoutAffected_userNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutUserNestedInput\n    discussion_board_ban?: discussion_board_banUpdateManyWithoutUserNestedInput\n  }\n\n  export type discussion_board_usersUncheckedUpdateWithoutDiscussion_board_user_activityInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderators?: discussion_board_moderatorsUncheckedUpdateOneWithoutFk_discussion_board_moderators_user_id_discussion_board_users_idNestedInput\n    discussion_board_admins?: discussion_board_adminsUncheckedUpdateOneWithoutFk_discussion_board_admins_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_profiles?: discussion_board_user_profilesUncheckedUpdateOneWithoutFk_discussion_board_user_profiles_user_id_discussion_board_users_idNestedInput\n    discussion_board_user_settings?: discussion_board_user_settingsUncheckedUpdateOneWithoutFk_discussion_board_user_settings_user_id_discussion_board_users_idNestedInput\n    discussion_board_thread?: discussion_board_threadUncheckedUpdateManyWithoutCreator_userNestedInput\n    discussion_board_post?: discussion_board_postUncheckedUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_comment?: discussion_board_commentUncheckedUpdateManyWithoutAuthor_userNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutRecipient_userNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_report_of_reported_user_id?: discussion_board_reportUncheckedUpdateManyWithoutReported_userNestedInput\n    discussion_board_report_of_reporting_user_id?: discussion_board_reportUncheckedUpdateManyWithoutReporting_userNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_audit_log_of_actor_id?: discussion_board_audit_logUncheckedUpdateManyWithoutActorNestedInput\n    discussion_board_audit_log_of_affected_user_id?: discussion_board_audit_logUncheckedUpdateManyWithoutAffected_userNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutUserNestedInput\n    discussion_board_ban?: discussion_board_banUncheckedUpdateManyWithoutUserNestedInput\n  }\n\n  export type discussion_board_moderatorsCreateWithoutDiscussion_board_content_abuse_metricInput = {\n    id: string\n    is_active: boolean\n    assigned_at: Date | string\n    revoked_at?: Date | string | null\n    fk_discussion_board_moderators_user_id_discussion_board_users_id: discussion_board_usersCreateNestedOneWithoutDiscussion_board_moderatorsInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionCreateNestedManyWithoutModeratorInput\n    discussion_board_warning?: discussion_board_warningCreateNestedManyWithoutModeratorInput\n    discussion_board_ban?: discussion_board_banCreateNestedManyWithoutModeratorInput\n  }\n\n  export type discussion_board_moderatorsUncheckedCreateWithoutDiscussion_board_content_abuse_metricInput = {\n    id: string\n    user_id: string\n    is_active: boolean\n    assigned_at: Date | string\n    revoked_at?: Date | string | null\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedCreateNestedManyWithoutModeratorInput\n    discussion_board_warning?: discussion_board_warningUncheckedCreateNestedManyWithoutModeratorInput\n    discussion_board_ban?: discussion_board_banUncheckedCreateNestedManyWithoutModeratorInput\n  }\n\n  export type discussion_board_moderatorsCreateOrConnectWithoutDiscussion_board_content_abuse_metricInput = {\n    where: discussion_board_moderatorsWhereUniqueInput\n    create: XOR<discussion_board_moderatorsCreateWithoutDiscussion_board_content_abuse_metricInput, discussion_board_moderatorsUncheckedCreateWithoutDiscussion_board_content_abuse_metricInput>\n  }\n\n  export type discussion_board_moderatorsUpsertWithoutDiscussion_board_content_abuse_metricInput = {\n    update: XOR<discussion_board_moderatorsUpdateWithoutDiscussion_board_content_abuse_metricInput, discussion_board_moderatorsUncheckedUpdateWithoutDiscussion_board_content_abuse_metricInput>\n    create: XOR<discussion_board_moderatorsCreateWithoutDiscussion_board_content_abuse_metricInput, discussion_board_moderatorsUncheckedCreateWithoutDiscussion_board_content_abuse_metricInput>\n    where?: discussion_board_moderatorsWhereInput\n  }\n\n  export type discussion_board_moderatorsUpdateToOneWithWhereWithoutDiscussion_board_content_abuse_metricInput = {\n    where?: discussion_board_moderatorsWhereInput\n    data: XOR<discussion_board_moderatorsUpdateWithoutDiscussion_board_content_abuse_metricInput, discussion_board_moderatorsUncheckedUpdateWithoutDiscussion_board_content_abuse_metricInput>\n  }\n\n  export type discussion_board_moderatorsUpdateWithoutDiscussion_board_content_abuse_metricInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    fk_discussion_board_moderators_user_id_discussion_board_users_id?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_moderatorsNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutModeratorNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutModeratorNestedInput\n    discussion_board_ban?: discussion_board_banUpdateManyWithoutModeratorNestedInput\n  }\n\n  export type discussion_board_moderatorsUncheckedUpdateWithoutDiscussion_board_content_abuse_metricInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    assigned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutModeratorNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutModeratorNestedInput\n    discussion_board_ban?: discussion_board_banUncheckedUpdateManyWithoutModeratorNestedInput\n  }\n\n  export type discussion_board_threadCreateManyCreator_userInput = {\n    id: string\n    category_id: string\n    title: string\n    body: string\n    is_locked: boolean\n    is_pinned: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type discussion_board_postCreateManyAuthor_userInput = {\n    id: string\n    thread_id: string\n    parent_post_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type discussion_board_commentCreateManyAuthor_userInput = {\n    id: string\n    post_id: string\n    parent_comment_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type discussion_board_voteCreateManyUserInput = {\n    id: string\n    thread_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    direction: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_reactionCreateManyUserInput = {\n    id: string\n    thread_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    reaction_type: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_bookmarkCreateManyUserInput = {\n    id: string\n    thread_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    created_at: Date | string\n  }\n\n  export type discussion_board_notificationCreateManyRecipient_userInput = {\n    id: string\n    thread_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    notification_type: string\n    is_read: boolean\n    channel: string\n    created_at: Date | string\n    delivered_at?: Date | string | null\n  }\n\n  export type discussion_board_subscriptionCreateManyUserInput = {\n    id: string\n    thread_id?: string | null\n    tag_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    channel: string\n    created_at: Date | string\n    expires_at?: Date | string | null\n  }\n\n  export type discussion_board_reportCreateManyReported_userInput = {\n    id: string\n    reporting_user_id: string\n    thread_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    status: string\n    category: string\n    submitted_at: Date | string\n    resolved_at?: Date | string | null\n    details: string\n  }\n\n  export type discussion_board_reportCreateManyReporting_userInput = {\n    id: string\n    reported_user_id?: string | null\n    thread_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    status: string\n    category: string\n    submitted_at: Date | string\n    resolved_at?: Date | string | null\n    details: string\n  }\n\n  export type discussion_board_moderator_actionCreateManyUserInput = {\n    id: string\n    moderator_id: string\n    report_id?: string | null\n    thread_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    action_type: string\n    reason: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_audit_logCreateManyActorInput = {\n    id: string\n    affected_user_id?: string | null\n    entity_type: string\n    entity_id: string\n    action: string\n    details: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_audit_logCreateManyAffected_userInput = {\n    id: string\n    actor_id: string\n    entity_type: string\n    entity_id: string\n    action: string\n    details: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_warningCreateManyUserInput = {\n    id: string\n    moderator_id: string\n    thread_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    reason: string\n    issued_at: Date | string\n  }\n\n  export type discussion_board_banCreateManyUserInput = {\n    id: string\n    moderator_id: string\n    warning_id?: string | null\n    report_id?: string | null\n    ban_type: string\n    reason: string\n    banned_at: Date | string\n    expires_at?: Date | string | null\n  }\n\n  export type discussion_board_threadUpdateWithoutCreator_userInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    is_locked?: BoolFieldUpdateOperationsInput | boolean\n    is_pinned?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    category?: discussion_board_thread_categoryUpdateOneRequiredWithoutDiscussion_board_threadNestedInput\n    discussion_board_post?: discussion_board_postUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_tag?: discussion_board_thread_tagUpdateManyWithoutThreadNestedInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUpdateOneWithoutThreadNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutThreadNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutThreadNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutThreadNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutThreadNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutThreadNestedInput\n    discussion_board_report?: discussion_board_reportUpdateManyWithoutThreadNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutThreadNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUpdateOneWithoutDiscussion_board_threadNestedInput\n  }\n\n  export type discussion_board_threadUncheckedUpdateWithoutCreator_userInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    is_locked?: BoolFieldUpdateOperationsInput | boolean\n    is_pinned?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_post?: discussion_board_postUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_tag?: discussion_board_thread_tagUncheckedUpdateManyWithoutThreadNestedInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUncheckedUpdateOneWithoutThreadNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_report?: discussion_board_reportUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUncheckedUpdateOneWithoutDiscussion_board_threadNestedInput\n  }\n\n  export type discussion_board_threadUncheckedUpdateManyWithoutCreator_userInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    is_locked?: BoolFieldUpdateOperationsInput | boolean\n    is_pinned?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_postUpdateWithoutAuthor_userInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    thread?: discussion_board_threadUpdateOneRequiredWithoutDiscussion_board_postNestedInput\n    parent_post?: discussion_board_postUpdateOneWithoutRecursiveNestedInput\n    recursive?: discussion_board_postUpdateManyWithoutParent_postNestedInput\n    discussion_board_comment?: discussion_board_commentUpdateManyWithoutPostNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutPostNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutPostNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutPostNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutPostNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutPostNestedInput\n    discussion_board_report?: discussion_board_reportUpdateManyWithoutPostNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutPostNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutPostNestedInput\n  }\n\n  export type discussion_board_postUncheckedUpdateWithoutAuthor_userInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    thread_id?: StringFieldUpdateOperationsInput | string\n    parent_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recursive?: discussion_board_postUncheckedUpdateManyWithoutParent_postNestedInput\n    discussion_board_comment?: discussion_board_commentUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_report?: discussion_board_reportUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutPostNestedInput\n  }\n\n  export type discussion_board_postUncheckedUpdateManyWithoutAuthor_userInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    thread_id?: StringFieldUpdateOperationsInput | string\n    parent_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_commentUpdateWithoutAuthor_userInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    post?: discussion_board_postUpdateOneRequiredWithoutDiscussion_board_commentNestedInput\n    parent_comment?: discussion_board_commentUpdateOneWithoutRecursiveNestedInput\n    recursive?: discussion_board_commentUpdateManyWithoutParent_commentNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutCommentNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutCommentNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutCommentNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutCommentNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutCommentNestedInput\n    discussion_board_report?: discussion_board_reportUpdateManyWithoutCommentNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutCommentNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutCommentNestedInput\n  }\n\n  export type discussion_board_commentUncheckedUpdateWithoutAuthor_userInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recursive?: discussion_board_commentUncheckedUpdateManyWithoutParent_commentNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_report?: discussion_board_reportUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutCommentNestedInput\n  }\n\n  export type discussion_board_commentUncheckedUpdateManyWithoutAuthor_userInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_voteUpdateWithoutUserInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    direction?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    thread?: discussion_board_threadUpdateOneWithoutDiscussion_board_voteNestedInput\n    post?: discussion_board_postUpdateOneWithoutDiscussion_board_voteNestedInput\n    comment?: discussion_board_commentUpdateOneWithoutDiscussion_board_voteNestedInput\n  }\n\n  export type discussion_board_voteUncheckedUpdateWithoutUserInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    direction?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_voteUncheckedUpdateManyWithoutUserInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    direction?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_reactionUpdateWithoutUserInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reaction_type?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    thread?: discussion_board_threadUpdateOneWithoutDiscussion_board_reactionNestedInput\n    post?: discussion_board_postUpdateOneWithoutDiscussion_board_reactionNestedInput\n    comment?: discussion_board_commentUpdateOneWithoutDiscussion_board_reactionNestedInput\n  }\n\n  export type discussion_board_reactionUncheckedUpdateWithoutUserInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reaction_type?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_reactionUncheckedUpdateManyWithoutUserInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reaction_type?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_bookmarkUpdateWithoutUserInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    thread?: discussion_board_threadUpdateOneWithoutDiscussion_board_bookmarkNestedInput\n    post?: discussion_board_postUpdateOneWithoutDiscussion_board_bookmarkNestedInput\n    comment?: discussion_board_commentUpdateOneWithoutDiscussion_board_bookmarkNestedInput\n  }\n\n  export type discussion_board_bookmarkUncheckedUpdateWithoutUserInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_bookmarkUncheckedUpdateManyWithoutUserInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_notificationUpdateWithoutRecipient_userInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    notification_type?: StringFieldUpdateOperationsInput | string\n    is_read?: BoolFieldUpdateOperationsInput | boolean\n    channel?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    delivered_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    thread?: discussion_board_threadUpdateOneWithoutDiscussion_board_notificationNestedInput\n    post?: discussion_board_postUpdateOneWithoutDiscussion_board_notificationNestedInput\n    comment?: discussion_board_commentUpdateOneWithoutDiscussion_board_notificationNestedInput\n  }\n\n  export type discussion_board_notificationUncheckedUpdateWithoutRecipient_userInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    notification_type?: StringFieldUpdateOperationsInput | string\n    is_read?: BoolFieldUpdateOperationsInput | boolean\n    channel?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    delivered_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_notificationUncheckedUpdateManyWithoutRecipient_userInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    notification_type?: StringFieldUpdateOperationsInput | string\n    is_read?: BoolFieldUpdateOperationsInput | boolean\n    channel?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    delivered_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_subscriptionUpdateWithoutUserInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    channel?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    thread?: discussion_board_threadUpdateOneWithoutDiscussion_board_subscriptionNestedInput\n    tag?: discussion_board_thread_tagUpdateOneWithoutDiscussion_board_subscriptionNestedInput\n    post?: discussion_board_postUpdateOneWithoutDiscussion_board_subscriptionNestedInput\n    comment?: discussion_board_commentUpdateOneWithoutDiscussion_board_subscriptionNestedInput\n  }\n\n  export type discussion_board_subscriptionUncheckedUpdateWithoutUserInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    tag_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    channel?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_subscriptionUncheckedUpdateManyWithoutUserInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    tag_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    channel?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_reportUpdateWithoutReported_userInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    category?: StringFieldUpdateOperationsInput | string\n    submitted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    details?: StringFieldUpdateOperationsInput | string\n    reporting_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_report_of_reporting_user_idNestedInput\n    thread?: discussion_board_threadUpdateOneWithoutDiscussion_board_reportNestedInput\n    post?: discussion_board_postUpdateOneWithoutDiscussion_board_reportNestedInput\n    comment?: discussion_board_commentUpdateOneWithoutDiscussion_board_reportNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutReportNestedInput\n    discussion_board_ban?: discussion_board_banUpdateManyWithoutReportNestedInput\n  }\n\n  export type discussion_board_reportUncheckedUpdateWithoutReported_userInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reporting_user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    category?: StringFieldUpdateOperationsInput | string\n    submitted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    details?: StringFieldUpdateOperationsInput | string\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutReportNestedInput\n    discussion_board_ban?: discussion_board_banUncheckedUpdateManyWithoutReportNestedInput\n  }\n\n  export type discussion_board_reportUncheckedUpdateManyWithoutReported_userInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reporting_user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    category?: StringFieldUpdateOperationsInput | string\n    submitted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    details?: StringFieldUpdateOperationsInput | string\n  }\n\n  export type discussion_board_reportUpdateWithoutReporting_userInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    category?: StringFieldUpdateOperationsInput | string\n    submitted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    details?: StringFieldUpdateOperationsInput | string\n    reported_user?: discussion_board_usersUpdateOneWithoutDiscussion_board_report_of_reported_user_idNestedInput\n    thread?: discussion_board_threadUpdateOneWithoutDiscussion_board_reportNestedInput\n    post?: discussion_board_postUpdateOneWithoutDiscussion_board_reportNestedInput\n    comment?: discussion_board_commentUpdateOneWithoutDiscussion_board_reportNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutReportNestedInput\n    discussion_board_ban?: discussion_board_banUpdateManyWithoutReportNestedInput\n  }\n\n  export type discussion_board_reportUncheckedUpdateWithoutReporting_userInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reported_user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    category?: StringFieldUpdateOperationsInput | string\n    submitted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    details?: StringFieldUpdateOperationsInput | string\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutReportNestedInput\n    discussion_board_ban?: discussion_board_banUncheckedUpdateManyWithoutReportNestedInput\n  }\n\n  export type discussion_board_reportUncheckedUpdateManyWithoutReporting_userInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reported_user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    category?: StringFieldUpdateOperationsInput | string\n    submitted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    details?: StringFieldUpdateOperationsInput | string\n  }\n\n  export type discussion_board_moderator_actionUpdateWithoutUserInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    action_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    moderator?: discussion_board_moderatorsUpdateOneRequiredWithoutDiscussion_board_moderator_actionNestedInput\n    report?: discussion_board_reportUpdateOneWithoutDiscussion_board_moderator_actionNestedInput\n    thread?: discussion_board_threadUpdateOneWithoutDiscussion_board_moderator_actionNestedInput\n    post?: discussion_board_postUpdateOneWithoutDiscussion_board_moderator_actionNestedInput\n    comment?: discussion_board_commentUpdateOneWithoutDiscussion_board_moderator_actionNestedInput\n  }\n\n  export type discussion_board_moderator_actionUncheckedUpdateWithoutUserInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    moderator_id?: StringFieldUpdateOperationsInput | string\n    report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_moderator_actionUncheckedUpdateManyWithoutUserInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    moderator_id?: StringFieldUpdateOperationsInput | string\n    report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_audit_logUpdateWithoutActorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    entity_type?: StringFieldUpdateOperationsInput | string\n    entity_id?: StringFieldUpdateOperationsInput | string\n    action?: StringFieldUpdateOperationsInput | string\n    details?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    affected_user?: discussion_board_usersUpdateOneWithoutDiscussion_board_audit_log_of_affected_user_idNestedInput\n  }\n\n  export type discussion_board_audit_logUncheckedUpdateWithoutActorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    affected_user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    entity_type?: StringFieldUpdateOperationsInput | string\n    entity_id?: StringFieldUpdateOperationsInput | string\n    action?: StringFieldUpdateOperationsInput | string\n    details?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_audit_logUncheckedUpdateManyWithoutActorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    affected_user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    entity_type?: StringFieldUpdateOperationsInput | string\n    entity_id?: StringFieldUpdateOperationsInput | string\n    action?: StringFieldUpdateOperationsInput | string\n    details?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_audit_logUpdateWithoutAffected_userInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    entity_type?: StringFieldUpdateOperationsInput | string\n    entity_id?: StringFieldUpdateOperationsInput | string\n    action?: StringFieldUpdateOperationsInput | string\n    details?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    actor?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_audit_log_of_actor_idNestedInput\n  }\n\n  export type discussion_board_audit_logUncheckedUpdateWithoutAffected_userInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_id?: StringFieldUpdateOperationsInput | string\n    entity_type?: StringFieldUpdateOperationsInput | string\n    entity_id?: StringFieldUpdateOperationsInput | string\n    action?: StringFieldUpdateOperationsInput | string\n    details?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_audit_logUncheckedUpdateManyWithoutAffected_userInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_id?: StringFieldUpdateOperationsInput | string\n    entity_type?: StringFieldUpdateOperationsInput | string\n    entity_id?: StringFieldUpdateOperationsInput | string\n    action?: StringFieldUpdateOperationsInput | string\n    details?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_warningUpdateWithoutUserInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    moderator?: discussion_board_moderatorsUpdateOneRequiredWithoutDiscussion_board_warningNestedInput\n    thread?: discussion_board_threadUpdateOneWithoutDiscussion_board_warningNestedInput\n    post?: discussion_board_postUpdateOneWithoutDiscussion_board_warningNestedInput\n    comment?: discussion_board_commentUpdateOneWithoutDiscussion_board_warningNestedInput\n    discussion_board_ban?: discussion_board_banUpdateManyWithoutWarningNestedInput\n  }\n\n  export type discussion_board_warningUncheckedUpdateWithoutUserInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    moderator_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussion_board_ban?: discussion_board_banUncheckedUpdateManyWithoutWarningNestedInput\n  }\n\n  export type discussion_board_warningUncheckedUpdateManyWithoutUserInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    moderator_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_banUpdateWithoutUserInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    ban_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    banned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    moderator?: discussion_board_moderatorsUpdateOneRequiredWithoutDiscussion_board_banNestedInput\n    warning?: discussion_board_warningUpdateOneWithoutDiscussion_board_banNestedInput\n    report?: discussion_board_reportUpdateOneWithoutDiscussion_board_banNestedInput\n  }\n\n  export type discussion_board_banUncheckedUpdateWithoutUserInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    moderator_id?: StringFieldUpdateOperationsInput | string\n    warning_id?: NullableStringFieldUpdateOperationsInput | string | null\n    report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    ban_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    banned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_banUncheckedUpdateManyWithoutUserInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    moderator_id?: StringFieldUpdateOperationsInput | string\n    warning_id?: NullableStringFieldUpdateOperationsInput | string | null\n    report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    ban_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    banned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_moderator_actionCreateManyModeratorInput = {\n    id: string\n    user_id?: string | null\n    report_id?: string | null\n    thread_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    action_type: string\n    reason: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_warningCreateManyModeratorInput = {\n    id: string\n    user_id: string\n    thread_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    reason: string\n    issued_at: Date | string\n  }\n\n  export type discussion_board_banCreateManyModeratorInput = {\n    id: string\n    user_id: string\n    warning_id?: string | null\n    report_id?: string | null\n    ban_type: string\n    reason: string\n    banned_at: Date | string\n    expires_at?: Date | string | null\n  }\n\n  export type discussion_board_content_abuse_metricCreateManyDiscussion_board_moderatorInput = {\n    id: string\n    date: string\n    abuse_type: string\n    flagged_count: number\n    auto_hidden_count: number\n    escalation_count: number\n    false_positive_count: number\n    avg_resolution_time_minutes: number\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussion_board_moderator_actionUpdateWithoutModeratorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    action_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    user?: discussion_board_usersUpdateOneWithoutDiscussion_board_moderator_actionNestedInput\n    report?: discussion_board_reportUpdateOneWithoutDiscussion_board_moderator_actionNestedInput\n    thread?: discussion_board_threadUpdateOneWithoutDiscussion_board_moderator_actionNestedInput\n    post?: discussion_board_postUpdateOneWithoutDiscussion_board_moderator_actionNestedInput\n    comment?: discussion_board_commentUpdateOneWithoutDiscussion_board_moderator_actionNestedInput\n  }\n\n  export type discussion_board_moderator_actionUncheckedUpdateWithoutModeratorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_moderator_actionUncheckedUpdateManyWithoutModeratorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_warningUpdateWithoutModeratorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_warningNestedInput\n    thread?: discussion_board_threadUpdateOneWithoutDiscussion_board_warningNestedInput\n    post?: discussion_board_postUpdateOneWithoutDiscussion_board_warningNestedInput\n    comment?: discussion_board_commentUpdateOneWithoutDiscussion_board_warningNestedInput\n    discussion_board_ban?: discussion_board_banUpdateManyWithoutWarningNestedInput\n  }\n\n  export type discussion_board_warningUncheckedUpdateWithoutModeratorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussion_board_ban?: discussion_board_banUncheckedUpdateManyWithoutWarningNestedInput\n  }\n\n  export type discussion_board_warningUncheckedUpdateManyWithoutModeratorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_banUpdateWithoutModeratorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    ban_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    banned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_banNestedInput\n    warning?: discussion_board_warningUpdateOneWithoutDiscussion_board_banNestedInput\n    report?: discussion_board_reportUpdateOneWithoutDiscussion_board_banNestedInput\n  }\n\n  export type discussion_board_banUncheckedUpdateWithoutModeratorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    warning_id?: NullableStringFieldUpdateOperationsInput | string | null\n    report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    ban_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    banned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_banUncheckedUpdateManyWithoutModeratorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    warning_id?: NullableStringFieldUpdateOperationsInput | string | null\n    report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    ban_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    banned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_content_abuse_metricUpdateWithoutDiscussion_board_moderatorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    date?: StringFieldUpdateOperationsInput | string\n    abuse_type?: StringFieldUpdateOperationsInput | string\n    flagged_count?: IntFieldUpdateOperationsInput | number\n    auto_hidden_count?: IntFieldUpdateOperationsInput | number\n    escalation_count?: IntFieldUpdateOperationsInput | number\n    false_positive_count?: IntFieldUpdateOperationsInput | number\n    avg_resolution_time_minutes?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_content_abuse_metricUncheckedUpdateWithoutDiscussion_board_moderatorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    date?: StringFieldUpdateOperationsInput | string\n    abuse_type?: StringFieldUpdateOperationsInput | string\n    flagged_count?: IntFieldUpdateOperationsInput | number\n    auto_hidden_count?: IntFieldUpdateOperationsInput | number\n    escalation_count?: IntFieldUpdateOperationsInput | number\n    false_positive_count?: IntFieldUpdateOperationsInput | number\n    avg_resolution_time_minutes?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_content_abuse_metricUncheckedUpdateManyWithoutDiscussion_board_moderatorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    date?: StringFieldUpdateOperationsInput | string\n    abuse_type?: StringFieldUpdateOperationsInput | string\n    flagged_count?: IntFieldUpdateOperationsInput | number\n    auto_hidden_count?: IntFieldUpdateOperationsInput | number\n    escalation_count?: IntFieldUpdateOperationsInput | number\n    false_positive_count?: IntFieldUpdateOperationsInput | number\n    avg_resolution_time_minutes?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_postCreateManyThreadInput = {\n    id: string\n    author_user_id: string\n    parent_post_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type discussion_board_thread_tagCreateManyThreadInput = {\n    id: string\n    tag_id: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_voteCreateManyThreadInput = {\n    id: string\n    user_id: string\n    post_id?: string | null\n    comment_id?: string | null\n    direction: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_reactionCreateManyThreadInput = {\n    id: string\n    user_id: string\n    post_id?: string | null\n    comment_id?: string | null\n    reaction_type: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_bookmarkCreateManyThreadInput = {\n    id: string\n    user_id: string\n    post_id?: string | null\n    comment_id?: string | null\n    created_at: Date | string\n  }\n\n  export type discussion_board_notificationCreateManyThreadInput = {\n    id: string\n    recipient_user_id: string\n    post_id?: string | null\n    comment_id?: string | null\n    notification_type: string\n    is_read: boolean\n    channel: string\n    created_at: Date | string\n    delivered_at?: Date | string | null\n  }\n\n  export type discussion_board_subscriptionCreateManyThreadInput = {\n    id: string\n    user_id: string\n    tag_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    channel: string\n    created_at: Date | string\n    expires_at?: Date | string | null\n  }\n\n  export type discussion_board_reportCreateManyThreadInput = {\n    id: string\n    reported_user_id?: string | null\n    reporting_user_id: string\n    post_id?: string | null\n    comment_id?: string | null\n    status: string\n    category: string\n    submitted_at: Date | string\n    resolved_at?: Date | string | null\n    details: string\n  }\n\n  export type discussion_board_moderator_actionCreateManyThreadInput = {\n    id: string\n    moderator_id: string\n    user_id?: string | null\n    report_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    action_type: string\n    reason: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_warningCreateManyThreadInput = {\n    id: string\n    user_id: string\n    moderator_id: string\n    post_id?: string | null\n    comment_id?: string | null\n    reason: string\n    issued_at: Date | string\n  }\n\n  export type discussion_board_postUpdateWithoutThreadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    author_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_postNestedInput\n    parent_post?: discussion_board_postUpdateOneWithoutRecursiveNestedInput\n    recursive?: discussion_board_postUpdateManyWithoutParent_postNestedInput\n    discussion_board_comment?: discussion_board_commentUpdateManyWithoutPostNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutPostNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutPostNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutPostNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutPostNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutPostNestedInput\n    discussion_board_report?: discussion_board_reportUpdateManyWithoutPostNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutPostNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutPostNestedInput\n  }\n\n  export type discussion_board_postUncheckedUpdateWithoutThreadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    author_user_id?: StringFieldUpdateOperationsInput | string\n    parent_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recursive?: discussion_board_postUncheckedUpdateManyWithoutParent_postNestedInput\n    discussion_board_comment?: discussion_board_commentUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_report?: discussion_board_reportUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutPostNestedInput\n  }\n\n  export type discussion_board_postUncheckedUpdateManyWithoutThreadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    author_user_id?: StringFieldUpdateOperationsInput | string\n    parent_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_thread_tagUpdateWithoutThreadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    tag_category?: discussion_board_tag_categoryUpdateOneRequiredWithoutDiscussion_board_thread_tagNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutTagNestedInput\n  }\n\n  export type discussion_board_thread_tagUncheckedUpdateWithoutThreadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    tag_id?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutTagNestedInput\n  }\n\n  export type discussion_board_thread_tagUncheckedUpdateManyWithoutThreadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    tag_id?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_voteUpdateWithoutThreadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    direction?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_voteNestedInput\n    post?: discussion_board_postUpdateOneWithoutDiscussion_board_voteNestedInput\n    comment?: discussion_board_commentUpdateOneWithoutDiscussion_board_voteNestedInput\n  }\n\n  export type discussion_board_voteUncheckedUpdateWithoutThreadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    direction?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_voteUncheckedUpdateManyWithoutThreadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    direction?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_reactionUpdateWithoutThreadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reaction_type?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_reactionNestedInput\n    post?: discussion_board_postUpdateOneWithoutDiscussion_board_reactionNestedInput\n    comment?: discussion_board_commentUpdateOneWithoutDiscussion_board_reactionNestedInput\n  }\n\n  export type discussion_board_reactionUncheckedUpdateWithoutThreadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reaction_type?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_reactionUncheckedUpdateManyWithoutThreadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reaction_type?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_bookmarkUpdateWithoutThreadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_bookmarkNestedInput\n    post?: discussion_board_postUpdateOneWithoutDiscussion_board_bookmarkNestedInput\n    comment?: discussion_board_commentUpdateOneWithoutDiscussion_board_bookmarkNestedInput\n  }\n\n  export type discussion_board_bookmarkUncheckedUpdateWithoutThreadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_bookmarkUncheckedUpdateManyWithoutThreadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_notificationUpdateWithoutThreadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    notification_type?: StringFieldUpdateOperationsInput | string\n    is_read?: BoolFieldUpdateOperationsInput | boolean\n    channel?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    delivered_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recipient_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_notificationNestedInput\n    post?: discussion_board_postUpdateOneWithoutDiscussion_board_notificationNestedInput\n    comment?: discussion_board_commentUpdateOneWithoutDiscussion_board_notificationNestedInput\n  }\n\n  export type discussion_board_notificationUncheckedUpdateWithoutThreadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    recipient_user_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    notification_type?: StringFieldUpdateOperationsInput | string\n    is_read?: BoolFieldUpdateOperationsInput | boolean\n    channel?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    delivered_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_notificationUncheckedUpdateManyWithoutThreadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    recipient_user_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    notification_type?: StringFieldUpdateOperationsInput | string\n    is_read?: BoolFieldUpdateOperationsInput | boolean\n    channel?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    delivered_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_subscriptionUpdateWithoutThreadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    channel?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_subscriptionNestedInput\n    tag?: discussion_board_thread_tagUpdateOneWithoutDiscussion_board_subscriptionNestedInput\n    post?: discussion_board_postUpdateOneWithoutDiscussion_board_subscriptionNestedInput\n    comment?: discussion_board_commentUpdateOneWithoutDiscussion_board_subscriptionNestedInput\n  }\n\n  export type discussion_board_subscriptionUncheckedUpdateWithoutThreadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    tag_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    channel?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_subscriptionUncheckedUpdateManyWithoutThreadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    tag_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    channel?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_reportUpdateWithoutThreadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    category?: StringFieldUpdateOperationsInput | string\n    submitted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    details?: StringFieldUpdateOperationsInput | string\n    reported_user?: discussion_board_usersUpdateOneWithoutDiscussion_board_report_of_reported_user_idNestedInput\n    reporting_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_report_of_reporting_user_idNestedInput\n    post?: discussion_board_postUpdateOneWithoutDiscussion_board_reportNestedInput\n    comment?: discussion_board_commentUpdateOneWithoutDiscussion_board_reportNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutReportNestedInput\n    discussion_board_ban?: discussion_board_banUpdateManyWithoutReportNestedInput\n  }\n\n  export type discussion_board_reportUncheckedUpdateWithoutThreadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reported_user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reporting_user_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    category?: StringFieldUpdateOperationsInput | string\n    submitted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    details?: StringFieldUpdateOperationsInput | string\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutReportNestedInput\n    discussion_board_ban?: discussion_board_banUncheckedUpdateManyWithoutReportNestedInput\n  }\n\n  export type discussion_board_reportUncheckedUpdateManyWithoutThreadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reported_user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reporting_user_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    category?: StringFieldUpdateOperationsInput | string\n    submitted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    details?: StringFieldUpdateOperationsInput | string\n  }\n\n  export type discussion_board_moderator_actionUpdateWithoutThreadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    action_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    moderator?: discussion_board_moderatorsUpdateOneRequiredWithoutDiscussion_board_moderator_actionNestedInput\n    user?: discussion_board_usersUpdateOneWithoutDiscussion_board_moderator_actionNestedInput\n    report?: discussion_board_reportUpdateOneWithoutDiscussion_board_moderator_actionNestedInput\n    post?: discussion_board_postUpdateOneWithoutDiscussion_board_moderator_actionNestedInput\n    comment?: discussion_board_commentUpdateOneWithoutDiscussion_board_moderator_actionNestedInput\n  }\n\n  export type discussion_board_moderator_actionUncheckedUpdateWithoutThreadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    moderator_id?: StringFieldUpdateOperationsInput | string\n    user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_moderator_actionUncheckedUpdateManyWithoutThreadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    moderator_id?: StringFieldUpdateOperationsInput | string\n    user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_warningUpdateWithoutThreadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_warningNestedInput\n    moderator?: discussion_board_moderatorsUpdateOneRequiredWithoutDiscussion_board_warningNestedInput\n    post?: discussion_board_postUpdateOneWithoutDiscussion_board_warningNestedInput\n    comment?: discussion_board_commentUpdateOneWithoutDiscussion_board_warningNestedInput\n    discussion_board_ban?: discussion_board_banUpdateManyWithoutWarningNestedInput\n  }\n\n  export type discussion_board_warningUncheckedUpdateWithoutThreadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    moderator_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussion_board_ban?: discussion_board_banUncheckedUpdateManyWithoutWarningNestedInput\n  }\n\n  export type discussion_board_warningUncheckedUpdateManyWithoutThreadInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    moderator_id?: StringFieldUpdateOperationsInput | string\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_postCreateManyParent_postInput = {\n    id: string\n    thread_id: string\n    author_user_id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type discussion_board_commentCreateManyPostInput = {\n    id: string\n    author_user_id: string\n    parent_comment_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type discussion_board_voteCreateManyPostInput = {\n    id: string\n    user_id: string\n    thread_id?: string | null\n    comment_id?: string | null\n    direction: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_reactionCreateManyPostInput = {\n    id: string\n    user_id: string\n    thread_id?: string | null\n    comment_id?: string | null\n    reaction_type: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_bookmarkCreateManyPostInput = {\n    id: string\n    user_id: string\n    thread_id?: string | null\n    comment_id?: string | null\n    created_at: Date | string\n  }\n\n  export type discussion_board_notificationCreateManyPostInput = {\n    id: string\n    recipient_user_id: string\n    thread_id?: string | null\n    comment_id?: string | null\n    notification_type: string\n    is_read: boolean\n    channel: string\n    created_at: Date | string\n    delivered_at?: Date | string | null\n  }\n\n  export type discussion_board_subscriptionCreateManyPostInput = {\n    id: string\n    user_id: string\n    thread_id?: string | null\n    tag_id?: string | null\n    comment_id?: string | null\n    channel: string\n    created_at: Date | string\n    expires_at?: Date | string | null\n  }\n\n  export type discussion_board_reportCreateManyPostInput = {\n    id: string\n    reported_user_id?: string | null\n    reporting_user_id: string\n    thread_id?: string | null\n    comment_id?: string | null\n    status: string\n    category: string\n    submitted_at: Date | string\n    resolved_at?: Date | string | null\n    details: string\n  }\n\n  export type discussion_board_moderator_actionCreateManyPostInput = {\n    id: string\n    moderator_id: string\n    user_id?: string | null\n    report_id?: string | null\n    thread_id?: string | null\n    comment_id?: string | null\n    action_type: string\n    reason: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_warningCreateManyPostInput = {\n    id: string\n    user_id: string\n    moderator_id: string\n    thread_id?: string | null\n    comment_id?: string | null\n    reason: string\n    issued_at: Date | string\n  }\n\n  export type discussion_board_postUpdateWithoutParent_postInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    thread?: discussion_board_threadUpdateOneRequiredWithoutDiscussion_board_postNestedInput\n    author_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_postNestedInput\n    recursive?: discussion_board_postUpdateManyWithoutParent_postNestedInput\n    discussion_board_comment?: discussion_board_commentUpdateManyWithoutPostNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutPostNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutPostNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutPostNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutPostNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutPostNestedInput\n    discussion_board_report?: discussion_board_reportUpdateManyWithoutPostNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutPostNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutPostNestedInput\n  }\n\n  export type discussion_board_postUncheckedUpdateWithoutParent_postInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    thread_id?: StringFieldUpdateOperationsInput | string\n    author_user_id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recursive?: discussion_board_postUncheckedUpdateManyWithoutParent_postNestedInput\n    discussion_board_comment?: discussion_board_commentUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_report?: discussion_board_reportUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutPostNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutPostNestedInput\n  }\n\n  export type discussion_board_postUncheckedUpdateManyWithoutParent_postInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    thread_id?: StringFieldUpdateOperationsInput | string\n    author_user_id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_commentUpdateWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    author_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_commentNestedInput\n    parent_comment?: discussion_board_commentUpdateOneWithoutRecursiveNestedInput\n    recursive?: discussion_board_commentUpdateManyWithoutParent_commentNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutCommentNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutCommentNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutCommentNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutCommentNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutCommentNestedInput\n    discussion_board_report?: discussion_board_reportUpdateManyWithoutCommentNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutCommentNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutCommentNestedInput\n  }\n\n  export type discussion_board_commentUncheckedUpdateWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    author_user_id?: StringFieldUpdateOperationsInput | string\n    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recursive?: discussion_board_commentUncheckedUpdateManyWithoutParent_commentNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_report?: discussion_board_reportUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutCommentNestedInput\n  }\n\n  export type discussion_board_commentUncheckedUpdateManyWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    author_user_id?: StringFieldUpdateOperationsInput | string\n    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_voteUpdateWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    direction?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_voteNestedInput\n    thread?: discussion_board_threadUpdateOneWithoutDiscussion_board_voteNestedInput\n    comment?: discussion_board_commentUpdateOneWithoutDiscussion_board_voteNestedInput\n  }\n\n  export type discussion_board_voteUncheckedUpdateWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    direction?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_voteUncheckedUpdateManyWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    direction?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_reactionUpdateWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reaction_type?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_reactionNestedInput\n    thread?: discussion_board_threadUpdateOneWithoutDiscussion_board_reactionNestedInput\n    comment?: discussion_board_commentUpdateOneWithoutDiscussion_board_reactionNestedInput\n  }\n\n  export type discussion_board_reactionUncheckedUpdateWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reaction_type?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_reactionUncheckedUpdateManyWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reaction_type?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_bookmarkUpdateWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_bookmarkNestedInput\n    thread?: discussion_board_threadUpdateOneWithoutDiscussion_board_bookmarkNestedInput\n    comment?: discussion_board_commentUpdateOneWithoutDiscussion_board_bookmarkNestedInput\n  }\n\n  export type discussion_board_bookmarkUncheckedUpdateWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_bookmarkUncheckedUpdateManyWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_notificationUpdateWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    notification_type?: StringFieldUpdateOperationsInput | string\n    is_read?: BoolFieldUpdateOperationsInput | boolean\n    channel?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    delivered_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recipient_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_notificationNestedInput\n    thread?: discussion_board_threadUpdateOneWithoutDiscussion_board_notificationNestedInput\n    comment?: discussion_board_commentUpdateOneWithoutDiscussion_board_notificationNestedInput\n  }\n\n  export type discussion_board_notificationUncheckedUpdateWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    recipient_user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    notification_type?: StringFieldUpdateOperationsInput | string\n    is_read?: BoolFieldUpdateOperationsInput | boolean\n    channel?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    delivered_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_notificationUncheckedUpdateManyWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    recipient_user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    notification_type?: StringFieldUpdateOperationsInput | string\n    is_read?: BoolFieldUpdateOperationsInput | boolean\n    channel?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    delivered_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_subscriptionUpdateWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    channel?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_subscriptionNestedInput\n    thread?: discussion_board_threadUpdateOneWithoutDiscussion_board_subscriptionNestedInput\n    tag?: discussion_board_thread_tagUpdateOneWithoutDiscussion_board_subscriptionNestedInput\n    comment?: discussion_board_commentUpdateOneWithoutDiscussion_board_subscriptionNestedInput\n  }\n\n  export type discussion_board_subscriptionUncheckedUpdateWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    tag_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    channel?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_subscriptionUncheckedUpdateManyWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    tag_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    channel?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_reportUpdateWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    category?: StringFieldUpdateOperationsInput | string\n    submitted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    details?: StringFieldUpdateOperationsInput | string\n    reported_user?: discussion_board_usersUpdateOneWithoutDiscussion_board_report_of_reported_user_idNestedInput\n    reporting_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_report_of_reporting_user_idNestedInput\n    thread?: discussion_board_threadUpdateOneWithoutDiscussion_board_reportNestedInput\n    comment?: discussion_board_commentUpdateOneWithoutDiscussion_board_reportNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutReportNestedInput\n    discussion_board_ban?: discussion_board_banUpdateManyWithoutReportNestedInput\n  }\n\n  export type discussion_board_reportUncheckedUpdateWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reported_user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reporting_user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    category?: StringFieldUpdateOperationsInput | string\n    submitted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    details?: StringFieldUpdateOperationsInput | string\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutReportNestedInput\n    discussion_board_ban?: discussion_board_banUncheckedUpdateManyWithoutReportNestedInput\n  }\n\n  export type discussion_board_reportUncheckedUpdateManyWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reported_user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reporting_user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    category?: StringFieldUpdateOperationsInput | string\n    submitted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    details?: StringFieldUpdateOperationsInput | string\n  }\n\n  export type discussion_board_moderator_actionUpdateWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    action_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    moderator?: discussion_board_moderatorsUpdateOneRequiredWithoutDiscussion_board_moderator_actionNestedInput\n    user?: discussion_board_usersUpdateOneWithoutDiscussion_board_moderator_actionNestedInput\n    report?: discussion_board_reportUpdateOneWithoutDiscussion_board_moderator_actionNestedInput\n    thread?: discussion_board_threadUpdateOneWithoutDiscussion_board_moderator_actionNestedInput\n    comment?: discussion_board_commentUpdateOneWithoutDiscussion_board_moderator_actionNestedInput\n  }\n\n  export type discussion_board_moderator_actionUncheckedUpdateWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    moderator_id?: StringFieldUpdateOperationsInput | string\n    user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_moderator_actionUncheckedUpdateManyWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    moderator_id?: StringFieldUpdateOperationsInput | string\n    user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_warningUpdateWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_warningNestedInput\n    moderator?: discussion_board_moderatorsUpdateOneRequiredWithoutDiscussion_board_warningNestedInput\n    thread?: discussion_board_threadUpdateOneWithoutDiscussion_board_warningNestedInput\n    comment?: discussion_board_commentUpdateOneWithoutDiscussion_board_warningNestedInput\n    discussion_board_ban?: discussion_board_banUpdateManyWithoutWarningNestedInput\n  }\n\n  export type discussion_board_warningUncheckedUpdateWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    moderator_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussion_board_ban?: discussion_board_banUncheckedUpdateManyWithoutWarningNestedInput\n  }\n\n  export type discussion_board_warningUncheckedUpdateManyWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    moderator_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_commentCreateManyParent_commentInput = {\n    id: string\n    post_id: string\n    author_user_id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type discussion_board_voteCreateManyCommentInput = {\n    id: string\n    user_id: string\n    thread_id?: string | null\n    post_id?: string | null\n    direction: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_reactionCreateManyCommentInput = {\n    id: string\n    user_id: string\n    thread_id?: string | null\n    post_id?: string | null\n    reaction_type: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_bookmarkCreateManyCommentInput = {\n    id: string\n    user_id: string\n    thread_id?: string | null\n    post_id?: string | null\n    created_at: Date | string\n  }\n\n  export type discussion_board_notificationCreateManyCommentInput = {\n    id: string\n    recipient_user_id: string\n    thread_id?: string | null\n    post_id?: string | null\n    notification_type: string\n    is_read: boolean\n    channel: string\n    created_at: Date | string\n    delivered_at?: Date | string | null\n  }\n\n  export type discussion_board_subscriptionCreateManyCommentInput = {\n    id: string\n    user_id: string\n    thread_id?: string | null\n    tag_id?: string | null\n    post_id?: string | null\n    channel: string\n    created_at: Date | string\n    expires_at?: Date | string | null\n  }\n\n  export type discussion_board_reportCreateManyCommentInput = {\n    id: string\n    reported_user_id?: string | null\n    reporting_user_id: string\n    thread_id?: string | null\n    post_id?: string | null\n    status: string\n    category: string\n    submitted_at: Date | string\n    resolved_at?: Date | string | null\n    details: string\n  }\n\n  export type discussion_board_moderator_actionCreateManyCommentInput = {\n    id: string\n    moderator_id: string\n    user_id?: string | null\n    report_id?: string | null\n    thread_id?: string | null\n    post_id?: string | null\n    action_type: string\n    reason: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_warningCreateManyCommentInput = {\n    id: string\n    user_id: string\n    moderator_id: string\n    thread_id?: string | null\n    post_id?: string | null\n    reason: string\n    issued_at: Date | string\n  }\n\n  export type discussion_board_commentUpdateWithoutParent_commentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    post?: discussion_board_postUpdateOneRequiredWithoutDiscussion_board_commentNestedInput\n    author_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_commentNestedInput\n    recursive?: discussion_board_commentUpdateManyWithoutParent_commentNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutCommentNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutCommentNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutCommentNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutCommentNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutCommentNestedInput\n    discussion_board_report?: discussion_board_reportUpdateManyWithoutCommentNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutCommentNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutCommentNestedInput\n  }\n\n  export type discussion_board_commentUncheckedUpdateWithoutParent_commentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    author_user_id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recursive?: discussion_board_commentUncheckedUpdateManyWithoutParent_commentNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_report?: discussion_board_reportUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutCommentNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutCommentNestedInput\n  }\n\n  export type discussion_board_commentUncheckedUpdateManyWithoutParent_commentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    author_user_id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_voteUpdateWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    direction?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_voteNestedInput\n    thread?: discussion_board_threadUpdateOneWithoutDiscussion_board_voteNestedInput\n    post?: discussion_board_postUpdateOneWithoutDiscussion_board_voteNestedInput\n  }\n\n  export type discussion_board_voteUncheckedUpdateWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    direction?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_voteUncheckedUpdateManyWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    direction?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_reactionUpdateWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reaction_type?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_reactionNestedInput\n    thread?: discussion_board_threadUpdateOneWithoutDiscussion_board_reactionNestedInput\n    post?: discussion_board_postUpdateOneWithoutDiscussion_board_reactionNestedInput\n  }\n\n  export type discussion_board_reactionUncheckedUpdateWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reaction_type?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_reactionUncheckedUpdateManyWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reaction_type?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_bookmarkUpdateWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_bookmarkNestedInput\n    thread?: discussion_board_threadUpdateOneWithoutDiscussion_board_bookmarkNestedInput\n    post?: discussion_board_postUpdateOneWithoutDiscussion_board_bookmarkNestedInput\n  }\n\n  export type discussion_board_bookmarkUncheckedUpdateWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_bookmarkUncheckedUpdateManyWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_notificationUpdateWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    notification_type?: StringFieldUpdateOperationsInput | string\n    is_read?: BoolFieldUpdateOperationsInput | boolean\n    channel?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    delivered_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recipient_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_notificationNestedInput\n    thread?: discussion_board_threadUpdateOneWithoutDiscussion_board_notificationNestedInput\n    post?: discussion_board_postUpdateOneWithoutDiscussion_board_notificationNestedInput\n  }\n\n  export type discussion_board_notificationUncheckedUpdateWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    recipient_user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    notification_type?: StringFieldUpdateOperationsInput | string\n    is_read?: BoolFieldUpdateOperationsInput | boolean\n    channel?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    delivered_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_notificationUncheckedUpdateManyWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    recipient_user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    notification_type?: StringFieldUpdateOperationsInput | string\n    is_read?: BoolFieldUpdateOperationsInput | boolean\n    channel?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    delivered_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_subscriptionUpdateWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    channel?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_subscriptionNestedInput\n    thread?: discussion_board_threadUpdateOneWithoutDiscussion_board_subscriptionNestedInput\n    tag?: discussion_board_thread_tagUpdateOneWithoutDiscussion_board_subscriptionNestedInput\n    post?: discussion_board_postUpdateOneWithoutDiscussion_board_subscriptionNestedInput\n  }\n\n  export type discussion_board_subscriptionUncheckedUpdateWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    tag_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    channel?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_subscriptionUncheckedUpdateManyWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    tag_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    channel?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_reportUpdateWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    category?: StringFieldUpdateOperationsInput | string\n    submitted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    details?: StringFieldUpdateOperationsInput | string\n    reported_user?: discussion_board_usersUpdateOneWithoutDiscussion_board_report_of_reported_user_idNestedInput\n    reporting_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_report_of_reporting_user_idNestedInput\n    thread?: discussion_board_threadUpdateOneWithoutDiscussion_board_reportNestedInput\n    post?: discussion_board_postUpdateOneWithoutDiscussion_board_reportNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutReportNestedInput\n    discussion_board_ban?: discussion_board_banUpdateManyWithoutReportNestedInput\n  }\n\n  export type discussion_board_reportUncheckedUpdateWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reported_user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reporting_user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    category?: StringFieldUpdateOperationsInput | string\n    submitted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    details?: StringFieldUpdateOperationsInput | string\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutReportNestedInput\n    discussion_board_ban?: discussion_board_banUncheckedUpdateManyWithoutReportNestedInput\n  }\n\n  export type discussion_board_reportUncheckedUpdateManyWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reported_user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reporting_user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    category?: StringFieldUpdateOperationsInput | string\n    submitted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    details?: StringFieldUpdateOperationsInput | string\n  }\n\n  export type discussion_board_moderator_actionUpdateWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    action_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    moderator?: discussion_board_moderatorsUpdateOneRequiredWithoutDiscussion_board_moderator_actionNestedInput\n    user?: discussion_board_usersUpdateOneWithoutDiscussion_board_moderator_actionNestedInput\n    report?: discussion_board_reportUpdateOneWithoutDiscussion_board_moderator_actionNestedInput\n    thread?: discussion_board_threadUpdateOneWithoutDiscussion_board_moderator_actionNestedInput\n    post?: discussion_board_postUpdateOneWithoutDiscussion_board_moderator_actionNestedInput\n  }\n\n  export type discussion_board_moderator_actionUncheckedUpdateWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    moderator_id?: StringFieldUpdateOperationsInput | string\n    user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_moderator_actionUncheckedUpdateManyWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    moderator_id?: StringFieldUpdateOperationsInput | string\n    user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_warningUpdateWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_warningNestedInput\n    moderator?: discussion_board_moderatorsUpdateOneRequiredWithoutDiscussion_board_warningNestedInput\n    thread?: discussion_board_threadUpdateOneWithoutDiscussion_board_warningNestedInput\n    post?: discussion_board_postUpdateOneWithoutDiscussion_board_warningNestedInput\n    discussion_board_ban?: discussion_board_banUpdateManyWithoutWarningNestedInput\n  }\n\n  export type discussion_board_warningUncheckedUpdateWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    moderator_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussion_board_ban?: discussion_board_banUncheckedUpdateManyWithoutWarningNestedInput\n  }\n\n  export type discussion_board_warningUncheckedUpdateManyWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    moderator_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    issued_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_subscriptionCreateManyTagInput = {\n    id: string\n    user_id: string\n    thread_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    channel: string\n    created_at: Date | string\n    expires_at?: Date | string | null\n  }\n\n  export type discussion_board_subscriptionUpdateWithoutTagInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    channel?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_subscriptionNestedInput\n    thread?: discussion_board_threadUpdateOneWithoutDiscussion_board_subscriptionNestedInput\n    post?: discussion_board_postUpdateOneWithoutDiscussion_board_subscriptionNestedInput\n    comment?: discussion_board_commentUpdateOneWithoutDiscussion_board_subscriptionNestedInput\n  }\n\n  export type discussion_board_subscriptionUncheckedUpdateWithoutTagInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    channel?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_subscriptionUncheckedUpdateManyWithoutTagInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    channel?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_threadCreateManyCategoryInput = {\n    id: string\n    creator_user_id: string\n    title: string\n    body: string\n    is_locked: boolean\n    is_pinned: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type discussion_board_threadUpdateWithoutCategoryInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    is_locked?: BoolFieldUpdateOperationsInput | boolean\n    is_pinned?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    creator_user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_threadNestedInput\n    discussion_board_post?: discussion_board_postUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_tag?: discussion_board_thread_tagUpdateManyWithoutThreadNestedInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUpdateOneWithoutThreadNestedInput\n    discussion_board_vote?: discussion_board_voteUpdateManyWithoutThreadNestedInput\n    discussion_board_reaction?: discussion_board_reactionUpdateManyWithoutThreadNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUpdateManyWithoutThreadNestedInput\n    discussion_board_notification?: discussion_board_notificationUpdateManyWithoutThreadNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutThreadNestedInput\n    discussion_board_report?: discussion_board_reportUpdateManyWithoutThreadNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUpdateManyWithoutThreadNestedInput\n    discussion_board_warning?: discussion_board_warningUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUpdateOneWithoutDiscussion_board_threadNestedInput\n  }\n\n  export type discussion_board_threadUncheckedUpdateWithoutCategoryInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    creator_user_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    is_locked?: BoolFieldUpdateOperationsInput | boolean\n    is_pinned?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussion_board_post?: discussion_board_postUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_tag?: discussion_board_thread_tagUncheckedUpdateManyWithoutThreadNestedInput\n    mv_discussion_thread_activity?: mv_discussion_thread_activityUncheckedUpdateOneWithoutThreadNestedInput\n    discussion_board_vote?: discussion_board_voteUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_reaction?: discussion_board_reactionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_bookmark?: discussion_board_bookmarkUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_notification?: discussion_board_notificationUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_report?: discussion_board_reportUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_moderator_action?: discussion_board_moderator_actionUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_warning?: discussion_board_warningUncheckedUpdateManyWithoutThreadNestedInput\n    discussion_board_thread_stats?: discussion_board_thread_statsUncheckedUpdateOneWithoutDiscussion_board_threadNestedInput\n  }\n\n  export type discussion_board_threadUncheckedUpdateManyWithoutCategoryInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    creator_user_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    is_locked?: BoolFieldUpdateOperationsInput | boolean\n    is_pinned?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_thread_tagCreateManyTag_categoryInput = {\n    id: string\n    thread_id: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_thread_tagUpdateWithoutTag_categoryInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    thread?: discussion_board_threadUpdateOneRequiredWithoutDiscussion_board_thread_tagNestedInput\n    discussion_board_subscription?: discussion_board_subscriptionUpdateManyWithoutTagNestedInput\n  }\n\n  export type discussion_board_thread_tagUncheckedUpdateWithoutTag_categoryInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    thread_id?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussion_board_subscription?: discussion_board_subscriptionUncheckedUpdateManyWithoutTagNestedInput\n  }\n\n  export type discussion_board_thread_tagUncheckedUpdateManyWithoutTag_categoryInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    thread_id?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_moderator_actionCreateManyReportInput = {\n    id: string\n    moderator_id: string\n    user_id?: string | null\n    thread_id?: string | null\n    post_id?: string | null\n    comment_id?: string | null\n    action_type: string\n    reason: string\n    created_at: Date | string\n  }\n\n  export type discussion_board_banCreateManyReportInput = {\n    id: string\n    user_id: string\n    moderator_id: string\n    warning_id?: string | null\n    ban_type: string\n    reason: string\n    banned_at: Date | string\n    expires_at?: Date | string | null\n  }\n\n  export type discussion_board_moderator_actionUpdateWithoutReportInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    action_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    moderator?: discussion_board_moderatorsUpdateOneRequiredWithoutDiscussion_board_moderator_actionNestedInput\n    user?: discussion_board_usersUpdateOneWithoutDiscussion_board_moderator_actionNestedInput\n    thread?: discussion_board_threadUpdateOneWithoutDiscussion_board_moderator_actionNestedInput\n    post?: discussion_board_postUpdateOneWithoutDiscussion_board_moderator_actionNestedInput\n    comment?: discussion_board_commentUpdateOneWithoutDiscussion_board_moderator_actionNestedInput\n  }\n\n  export type discussion_board_moderator_actionUncheckedUpdateWithoutReportInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    moderator_id?: StringFieldUpdateOperationsInput | string\n    user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_moderator_actionUncheckedUpdateManyWithoutReportInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    moderator_id?: StringFieldUpdateOperationsInput | string\n    user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    thread_id?: NullableStringFieldUpdateOperationsInput | string | null\n    post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussion_board_banUpdateWithoutReportInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    ban_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    banned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_banNestedInput\n    moderator?: discussion_board_moderatorsUpdateOneRequiredWithoutDiscussion_board_banNestedInput\n    warning?: discussion_board_warningUpdateOneWithoutDiscussion_board_banNestedInput\n  }\n\n  export type discussion_board_banUncheckedUpdateWithoutReportInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    moderator_id?: StringFieldUpdateOperationsInput | string\n    warning_id?: NullableStringFieldUpdateOperationsInput | string | null\n    ban_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    banned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_banUncheckedUpdateManyWithoutReportInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    moderator_id?: StringFieldUpdateOperationsInput | string\n    warning_id?: NullableStringFieldUpdateOperationsInput | string | null\n    ban_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    banned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_banCreateManyWarningInput = {\n    id: string\n    user_id: string\n    moderator_id: string\n    report_id?: string | null\n    ban_type: string\n    reason: string\n    banned_at: Date | string\n    expires_at?: Date | string | null\n  }\n\n  export type discussion_board_banUpdateWithoutWarningInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    ban_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    banned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    user?: discussion_board_usersUpdateOneRequiredWithoutDiscussion_board_banNestedInput\n    moderator?: discussion_board_moderatorsUpdateOneRequiredWithoutDiscussion_board_banNestedInput\n    report?: discussion_board_reportUpdateOneWithoutDiscussion_board_banNestedInput\n  }\n\n  export type discussion_board_banUncheckedUpdateWithoutWarningInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    moderator_id?: StringFieldUpdateOperationsInput | string\n    report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    ban_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    banned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussion_board_banUncheckedUpdateManyWithoutWarningInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    moderator_id?: StringFieldUpdateOperationsInput | string\n    report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    ban_type?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    banned_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n\n\n  /**\n   * Batch Payload for updateMany & deleteMany & createMany\n   */\n\n  export type BatchPayload = {\n    count: number\n  }\n\n  /**\n   * DMMF\n   */\n  export const dmmf: runtime.BaseDMMF\n}",
        "node_modules/.prisma/client/runtime/index-browser.d.ts": "declare class AnyNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\ndeclare type Args<T, F extends Operation> = T extends {\r\n    [K: symbol]: {\r\n        types: {\r\n            operations: {\r\n                [K in F]: {\r\n                    args: any;\r\n                };\r\n            };\r\n        };\r\n    };\r\n} ? T[symbol]['types']['operations'][F]['args'] : any;\r\n\r\ndeclare class DbNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\nexport declare function Decimal(n: Decimal.Value): Decimal;\r\n\r\nexport declare namespace Decimal {\r\n    export type Constructor = typeof Decimal;\r\n    export type Instance = Decimal;\r\n    export type Rounding = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8;\r\n    export type Modulo = Rounding | 9;\r\n    export type Value = string | number | Decimal;\r\n\r\n    // http://mikemcl.github.io/decimal.js/#constructor-properties\r\n    export interface Config {\r\n        precision?: number;\r\n        rounding?: Rounding;\r\n        toExpNeg?: number;\r\n        toExpPos?: number;\r\n        minE?: number;\r\n        maxE?: number;\r\n        crypto?: boolean;\r\n        modulo?: Modulo;\r\n        defaults?: boolean;\r\n    }\r\n}\r\n\r\nexport declare class Decimal {\r\n    readonly d: number[];\r\n    readonly e: number;\r\n    readonly s: number;\r\n\r\n    constructor(n: Decimal.Value);\r\n\r\n    absoluteValue(): Decimal;\r\n    abs(): Decimal;\r\n\r\n    ceil(): Decimal;\r\n\r\n    clampedTo(min: Decimal.Value, max: Decimal.Value): Decimal;\r\n    clamp(min: Decimal.Value, max: Decimal.Value): Decimal;\r\n\r\n    comparedTo(n: Decimal.Value): number;\r\n    cmp(n: Decimal.Value): number;\r\n\r\n    cosine(): Decimal;\r\n    cos(): Decimal;\r\n\r\n    cubeRoot(): Decimal;\r\n    cbrt(): Decimal;\r\n\r\n    decimalPlaces(): number;\r\n    dp(): number;\r\n\r\n    dividedBy(n: Decimal.Value): Decimal;\r\n    div(n: Decimal.Value): Decimal;\r\n\r\n    dividedToIntegerBy(n: Decimal.Value): Decimal;\r\n    divToInt(n: Decimal.Value): Decimal;\r\n\r\n    equals(n: Decimal.Value): boolean;\r\n    eq(n: Decimal.Value): boolean;\r\n\r\n    floor(): Decimal;\r\n\r\n    greaterThan(n: Decimal.Value): boolean;\r\n    gt(n: Decimal.Value): boolean;\r\n\r\n    greaterThanOrEqualTo(n: Decimal.Value): boolean;\r\n    gte(n: Decimal.Value): boolean;\r\n\r\n    hyperbolicCosine(): Decimal;\r\n    cosh(): Decimal;\r\n\r\n    hyperbolicSine(): Decimal;\r\n    sinh(): Decimal;\r\n\r\n    hyperbolicTangent(): Decimal;\r\n    tanh(): Decimal;\r\n\r\n    inverseCosine(): Decimal;\r\n    acos(): Decimal;\r\n\r\n    inverseHyperbolicCosine(): Decimal;\r\n    acosh(): Decimal;\r\n\r\n    inverseHyperbolicSine(): Decimal;\r\n    asinh(): Decimal;\r\n\r\n    inverseHyperbolicTangent(): Decimal;\r\n    atanh(): Decimal;\r\n\r\n    inverseSine(): Decimal;\r\n    asin(): Decimal;\r\n\r\n    inverseTangent(): Decimal;\r\n    atan(): Decimal;\r\n\r\n    isFinite(): boolean;\r\n\r\n    isInteger(): boolean;\r\n    isInt(): boolean;\r\n\r\n    isNaN(): boolean;\r\n\r\n    isNegative(): boolean;\r\n    isNeg(): boolean;\r\n\r\n    isPositive(): boolean;\r\n    isPos(): boolean;\r\n\r\n    isZero(): boolean;\r\n\r\n    lessThan(n: Decimal.Value): boolean;\r\n    lt(n: Decimal.Value): boolean;\r\n\r\n    lessThanOrEqualTo(n: Decimal.Value): boolean;\r\n    lte(n: Decimal.Value): boolean;\r\n\r\n    logarithm(n?: Decimal.Value): Decimal;\r\n    log(n?: Decimal.Value): Decimal;\r\n\r\n    minus(n: Decimal.Value): Decimal;\r\n    sub(n: Decimal.Value): Decimal;\r\n\r\n    modulo(n: Decimal.Value): Decimal;\r\n    mod(n: Decimal.Value): Decimal;\r\n\r\n    naturalExponential(): Decimal;\r\n    exp(): Decimal;\r\n\r\n    naturalLogarithm(): Decimal;\r\n    ln(): Decimal;\r\n\r\n    negated(): Decimal;\r\n    neg(): Decimal;\r\n\r\n    plus(n: Decimal.Value): Decimal;\r\n    add(n: Decimal.Value): Decimal;\r\n\r\n    precision(includeZeros?: boolean): number;\r\n    sd(includeZeros?: boolean): number;\r\n\r\n    round(): Decimal;\r\n\r\n    sine() : Decimal;\r\n    sin() : Decimal;\r\n\r\n    squareRoot(): Decimal;\r\n    sqrt(): Decimal;\r\n\r\n    tangent() : Decimal;\r\n    tan() : Decimal;\r\n\r\n    times(n: Decimal.Value): Decimal;\r\n    mul(n: Decimal.Value) : Decimal;\r\n\r\n    toBinary(significantDigits?: number): string;\r\n    toBinary(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toDecimalPlaces(decimalPlaces?: number): Decimal;\r\n    toDecimalPlaces(decimalPlaces: number, rounding: Decimal.Rounding): Decimal;\r\n    toDP(decimalPlaces?: number): Decimal;\r\n    toDP(decimalPlaces: number, rounding: Decimal.Rounding): Decimal;\r\n\r\n    toExponential(decimalPlaces?: number): string;\r\n    toExponential(decimalPlaces: number, rounding: Decimal.Rounding): string;\r\n\r\n    toFixed(decimalPlaces?: number): string;\r\n    toFixed(decimalPlaces: number, rounding: Decimal.Rounding): string;\r\n\r\n    toFraction(max_denominator?: Decimal.Value): Decimal[];\r\n\r\n    toHexadecimal(significantDigits?: number): string;\r\n    toHexadecimal(significantDigits: number, rounding: Decimal.Rounding): string;\r\n    toHex(significantDigits?: number): string;\r\n    toHex(significantDigits: number, rounding?: Decimal.Rounding): string;\r\n\r\n    toJSON(): string;\r\n\r\n    toNearest(n: Decimal.Value, rounding?: Decimal.Rounding): Decimal;\r\n\r\n    toNumber(): number;\r\n\r\n    toOctal(significantDigits?: number): string;\r\n    toOctal(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toPower(n: Decimal.Value): Decimal;\r\n    pow(n: Decimal.Value): Decimal;\r\n\r\n    toPrecision(significantDigits?: number): string;\r\n    toPrecision(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toSignificantDigits(significantDigits?: number): Decimal;\r\n    toSignificantDigits(significantDigits: number, rounding: Decimal.Rounding): Decimal;\r\n    toSD(significantDigits?: number): Decimal;\r\n    toSD(significantDigits: number, rounding: Decimal.Rounding): Decimal;\r\n\r\n    toString(): string;\r\n\r\n    truncated(): Decimal;\r\n    trunc(): Decimal;\r\n\r\n    valueOf(): string;\r\n\r\n    static abs(n: Decimal.Value): Decimal;\r\n    static acos(n: Decimal.Value): Decimal;\r\n    static acosh(n: Decimal.Value): Decimal;\r\n    static add(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static asin(n: Decimal.Value): Decimal;\r\n    static asinh(n: Decimal.Value): Decimal;\r\n    static atan(n: Decimal.Value): Decimal;\r\n    static atanh(n: Decimal.Value): Decimal;\r\n    static atan2(y: Decimal.Value, x: Decimal.Value): Decimal;\r\n    static cbrt(n: Decimal.Value): Decimal;\r\n    static ceil(n: Decimal.Value): Decimal;\r\n    static clamp(n: Decimal.Value, min: Decimal.Value, max: Decimal.Value): Decimal;\r\n    static clone(object?: Decimal.Config): Decimal.Constructor;\r\n    static config(object: Decimal.Config): Decimal.Constructor;\r\n    static cos(n: Decimal.Value): Decimal;\r\n    static cosh(n: Decimal.Value): Decimal;\r\n    static div(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static exp(n: Decimal.Value): Decimal;\r\n    static floor(n: Decimal.Value): Decimal;\r\n    static hypot(...n: Decimal.Value[]): Decimal;\r\n    static isDecimal(object: any): object is Decimal;\r\n    static ln(n: Decimal.Value): Decimal;\r\n    static log(n: Decimal.Value, base?: Decimal.Value): Decimal;\r\n    static log2(n: Decimal.Value): Decimal;\r\n    static log10(n: Decimal.Value): Decimal;\r\n    static max(...n: Decimal.Value[]): Decimal;\r\n    static min(...n: Decimal.Value[]): Decimal;\r\n    static mod(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static mul(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static noConflict(): Decimal.Constructor;   // Browser only\r\n    static pow(base: Decimal.Value, exponent: Decimal.Value): Decimal;\r\n    static random(significantDigits?: number): Decimal;\r\n    static round(n: Decimal.Value): Decimal;\r\n    static set(object: Decimal.Config): Decimal.Constructor;\r\n    static sign(n: Decimal.Value): number;\r\n    static sin(n: Decimal.Value): Decimal;\r\n    static sinh(n: Decimal.Value): Decimal;\r\n    static sqrt(n: Decimal.Value): Decimal;\r\n    static sub(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static sum(...n: Decimal.Value[]): Decimal;\r\n    static tan(n: Decimal.Value): Decimal;\r\n    static tanh(n: Decimal.Value): Decimal;\r\n    static trunc(n: Decimal.Value): Decimal;\r\n\r\n    static readonly default?: Decimal.Constructor;\r\n    static readonly Decimal?: Decimal.Constructor;\r\n\r\n    static readonly precision: number;\r\n    static readonly rounding: Decimal.Rounding;\r\n    static readonly toExpNeg: number;\r\n    static readonly toExpPos: number;\r\n    static readonly minE: number;\r\n    static readonly maxE: number;\r\n    static readonly crypto: boolean;\r\n    static readonly modulo: Decimal.Modulo;\r\n\r\n    static readonly ROUND_UP: 0;\r\n    static readonly ROUND_DOWN: 1;\r\n    static readonly ROUND_CEIL: 2;\r\n    static readonly ROUND_FLOOR: 3;\r\n    static readonly ROUND_HALF_UP: 4;\r\n    static readonly ROUND_HALF_DOWN: 5;\r\n    static readonly ROUND_HALF_EVEN: 6;\r\n    static readonly ROUND_HALF_CEIL: 7;\r\n    static readonly ROUND_HALF_FLOOR: 8;\r\n    static readonly EUCLID: 9;\r\n}\r\n\r\ndeclare type Exact<A, W> = (A extends unknown ? (W extends A ? {\r\n    [K in keyof A]: Exact<A[K], W[K]>;\r\n} : W) : never) | (A extends Narrowable ? A : never);\r\n\r\nexport declare function getRuntime(): GetRuntimeOutput;\r\n\r\ndeclare type GetRuntimeOutput = {\r\n    id: RuntimeName;\r\n    prettyName: string;\r\n    isEdge: boolean;\r\n};\r\n\r\ndeclare class JsonNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\n/**\r\n * Generates more strict variant of an enum which, unlike regular enum,\r\n * throws on non-existing property access. This can be useful in following situations:\r\n * - we have an API, that accepts both `undefined` and `SomeEnumType` as an input\r\n * - enum values are generated dynamically from DMMF.\r\n *\r\n * In that case, if using normal enums and no compile-time typechecking, using non-existing property\r\n * will result in `undefined` value being used, which will be accepted. Using strict enum\r\n * in this case will help to have a runtime exception, telling you that you are probably doing something wrong.\r\n *\r\n * Note: if you need to check for existence of a value in the enum you can still use either\r\n * `in` operator or `hasOwnProperty` function.\r\n *\r\n * @param definition\r\n * @returns\r\n */\r\nexport declare function makeStrictEnum<T extends Record<PropertyKey, string | number>>(definition: T): T;\r\n\r\ndeclare type Narrowable = string | number | bigint | boolean | [];\r\n\r\ndeclare class NullTypesEnumValue extends ObjectEnumValue {\r\n    _getNamespace(): string;\r\n}\r\n\r\n/**\r\n * Base class for unique values of object-valued enums.\r\n */\r\ndeclare abstract class ObjectEnumValue {\r\n    constructor(arg?: symbol);\r\n    abstract _getNamespace(): string;\r\n    _getName(): string;\r\n    toString(): string;\r\n}\r\n\r\nexport declare const objectEnumValues: {\r\n    classes: {\r\n        DbNull: typeof DbNull;\r\n        JsonNull: typeof JsonNull;\r\n        AnyNull: typeof AnyNull;\r\n    };\r\n    instances: {\r\n        DbNull: DbNull;\r\n        JsonNull: JsonNull;\r\n        AnyNull: AnyNull;\r\n    };\r\n};\r\n\r\ndeclare type Operation = 'findFirst' | 'findFirstOrThrow' | 'findUnique' | 'findUniqueOrThrow' | 'findMany' | 'create' | 'createMany' | 'createManyAndReturn' | 'update' | 'updateMany' | 'updateManyAndReturn' | 'upsert' | 'delete' | 'deleteMany' | 'aggregate' | 'count' | 'groupBy' | '$queryRaw' | '$executeRaw' | '$queryRawUnsafe' | '$executeRawUnsafe' | 'findRaw' | 'aggregateRaw' | '$runCommandRaw';\r\n\r\ndeclare namespace Public {\r\n    export {\r\n        validator\r\n    }\r\n}\r\nexport { Public }\r\n\r\ndeclare type RuntimeName = 'workerd' | 'deno' | 'netlify' | 'node' | 'bun' | 'edge-light' | '';\r\n\r\ndeclare function validator<V>(): <S>(select: Exact<S, V>) => S;\r\n\r\ndeclare function validator<C, M extends Exclude<keyof C, `$${string}`>, O extends keyof C[M] & Operation>(client: C, model: M, operation: O): <S>(select: Exact<S, Args<C[M], O>>) => S;\r\n\r\ndeclare function validator<C, M extends Exclude<keyof C, `$${string}`>, O extends keyof C[M] & Operation, P extends keyof Args<C[M], O>>(client: C, model: M, operation: O, prop: P): <S>(select: Exact<S, Args<C[M], O>[P]>) => S;\r\n\r\nexport { }\r\n",
        "node_modules/.prisma/client/runtime/library.d.ts": "/**\r\n * @param this\r\n */\r\ndeclare function $extends(this: Client, extension: ExtensionArgs | ((client: Client) => Client)): Client;\r\n\r\ndeclare type AccelerateEngineConfig = {\r\n    inlineSchema: EngineConfig['inlineSchema'];\r\n    inlineSchemaHash: EngineConfig['inlineSchemaHash'];\r\n    env: EngineConfig['env'];\r\n    generator?: {\r\n        previewFeatures: string[];\r\n    };\r\n    inlineDatasources: EngineConfig['inlineDatasources'];\r\n    overrideDatasources: EngineConfig['overrideDatasources'];\r\n    clientVersion: EngineConfig['clientVersion'];\r\n    engineVersion: EngineConfig['engineVersion'];\r\n    logEmitter: EngineConfig['logEmitter'];\r\n    logQueries?: EngineConfig['logQueries'];\r\n    logLevel?: EngineConfig['logLevel'];\r\n    tracingHelper: EngineConfig['tracingHelper'];\r\n    accelerateUtils?: AccelerateUtils;\r\n};\r\n\r\ndeclare type AccelerateUtils = EngineConfig['accelerateUtils'];\r\n\r\nexport declare type Action = keyof typeof DMMF_2.ModelAction | 'executeRaw' | 'queryRaw' | 'runCommandRaw';\r\n\r\ndeclare type ActiveConnectorType = Exclude<ConnectorType, 'postgres' | 'prisma+postgres'>;\r\n\r\n/**\r\n * An interface that exposes some basic information about the\r\n * adapter like its name and provider type.\r\n */\r\ndeclare interface AdapterInfo {\r\n    readonly provider: Provider;\r\n    readonly adapterName: (typeof officialPrismaAdapters)[number] | (string & {});\r\n}\r\n\r\nexport declare type Aggregate = '_count' | '_max' | '_min' | '_avg' | '_sum';\r\n\r\nexport declare type AllModelsToStringIndex<TypeMap extends TypeMapDef, Args extends Record<string, any>, K extends PropertyKey> = Args extends {\r\n    [P in K]: {\r\n        $allModels: infer AllModels;\r\n    };\r\n} ? {\r\n    [P in K]: Record<TypeMap['meta']['modelProps'], AllModels>;\r\n} : {};\r\n\r\ndeclare class AnyNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\nexport declare type ApplyOmit<T, OmitConfig> = Compute<{\r\n    [K in keyof T as OmitValue<OmitConfig, K> extends true ? never : K]: T[K];\r\n}>;\r\n\r\nexport declare type Args<T, F extends Operation> = T extends {\r\n    [K: symbol]: {\r\n        types: {\r\n            operations: {\r\n                [K in F]: {\r\n                    args: any;\r\n                };\r\n            };\r\n        };\r\n    };\r\n} ? T[symbol]['types']['operations'][F]['args'] : any;\r\n\r\nexport declare type Args_3<T, F extends Operation> = Args<T, F>;\r\n\r\n/**\r\n * Original `quaint::ValueType` enum tag from Prisma's `quaint`.\r\n * Query arguments marked with this type are sanitized before being sent to the database.\r\n * Notice while a query argument may be `null`, `ArgType` is guaranteed to be defined.\r\n */\r\ndeclare type ArgType = 'Int32' | 'Int64' | 'Float' | 'Double' | 'Text' | 'Enum' | 'EnumArray' | 'Bytes' | 'Boolean' | 'Char' | 'Array' | 'Numeric' | 'Json' | 'Xml' | 'Uuid' | 'DateTime' | 'Date' | 'Time' | 'Unknown';\r\n\r\n/**\r\n * Attributes is a map from string to attribute values.\r\n *\r\n * Note: only the own enumerable keys are counted as valid attribute keys.\r\n */\r\ndeclare interface Attributes {\r\n    [attributeKey: string]: AttributeValue | undefined;\r\n}\r\n\r\n/**\r\n * Attribute values may be any non-nullish primitive value except an object.\r\n *\r\n * null or undefined attribute values are invalid and will result in undefined behavior.\r\n */\r\ndeclare type AttributeValue = string | number | boolean | Array<null | undefined | string> | Array<null | undefined | number> | Array<null | undefined | boolean>;\r\n\r\nexport declare type BaseDMMF = {\r\n    readonly datamodel: Omit<DMMF_2.Datamodel, 'indexes'>;\r\n};\r\n\r\ndeclare type BatchArgs = {\r\n    queries: BatchQuery[];\r\n    transaction?: {\r\n        isolationLevel?: IsolationLevel;\r\n    };\r\n};\r\n\r\ndeclare type BatchInternalParams = {\r\n    requests: RequestParams[];\r\n    customDataProxyFetch?: CustomDataProxyFetch;\r\n};\r\n\r\ndeclare type BatchQuery = {\r\n    model: string | undefined;\r\n    operation: string;\r\n    args: JsArgs | RawQueryArgs;\r\n};\r\n\r\ndeclare type BatchQueryEngineResult<T> = QueryEngineResultData<T> | Error;\r\n\r\ndeclare type BatchQueryOptionsCb = (args: BatchQueryOptionsCbArgs) => Promise<any>;\r\n\r\ndeclare type BatchQueryOptionsCbArgs = {\r\n    args: BatchArgs;\r\n    query: (args: BatchArgs, __internalParams?: BatchInternalParams) => Promise<unknown[]>;\r\n    __internalParams: BatchInternalParams;\r\n};\r\n\r\ndeclare type BatchResponse = MultiBatchResponse | CompactedBatchResponse;\r\n\r\ndeclare type BatchTransactionOptions = {\r\n    isolationLevel?: IsolationLevel;\r\n};\r\n\r\ndeclare interface BinaryTargetsEnvValue {\r\n    fromEnvVar: string | null;\r\n    value: string;\r\n    native?: boolean;\r\n}\r\n\r\nexport declare type Call<F extends Fn, P> = (F & {\r\n    params: P;\r\n})['returns'];\r\n\r\ndeclare interface CallSite {\r\n    getLocation(): LocationInFile | null;\r\n}\r\n\r\nexport declare type Cast<A, W> = A extends W ? A : W;\r\n\r\ndeclare type Client = ReturnType<typeof getPrismaClient> extends new () => infer T ? T : never;\r\n\r\nexport declare type ClientArg = {\r\n    [MethodName in string]: unknown;\r\n};\r\n\r\nexport declare type ClientArgs = {\r\n    client: ClientArg;\r\n};\r\n\r\nexport declare type ClientBuiltInProp = keyof DynamicClientExtensionThisBuiltin<never, never, never>;\r\n\r\nexport declare type ClientOptionDef = undefined | {\r\n    [K in string]: any;\r\n};\r\n\r\nexport declare type ClientOtherOps = {\r\n    $queryRaw<T = unknown>(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise<T>;\r\n    $queryRawTyped<T>(query: TypedSql<unknown[], T>): PrismaPromise<T[]>;\r\n    $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): PrismaPromise<T>;\r\n    $executeRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise<number>;\r\n    $executeRawUnsafe(query: string, ...values: any[]): PrismaPromise<number>;\r\n    $runCommandRaw(command: InputJsonObject): PrismaPromise<JsonObject>;\r\n};\r\n\r\ndeclare type ColumnType = (typeof ColumnTypeEnum)[keyof typeof ColumnTypeEnum];\r\n\r\ndeclare const ColumnTypeEnum: {\r\n    readonly Int32: 0;\r\n    readonly Int64: 1;\r\n    readonly Float: 2;\r\n    readonly Double: 3;\r\n    readonly Numeric: 4;\r\n    readonly Boolean: 5;\r\n    readonly Character: 6;\r\n    readonly Text: 7;\r\n    readonly Date: 8;\r\n    readonly Time: 9;\r\n    readonly DateTime: 10;\r\n    readonly Json: 11;\r\n    readonly Enum: 12;\r\n    readonly Bytes: 13;\r\n    readonly Set: 14;\r\n    readonly Uuid: 15;\r\n    readonly Int32Array: 64;\r\n    readonly Int64Array: 65;\r\n    readonly FloatArray: 66;\r\n    readonly DoubleArray: 67;\r\n    readonly NumericArray: 68;\r\n    readonly BooleanArray: 69;\r\n    readonly CharacterArray: 70;\r\n    readonly TextArray: 71;\r\n    readonly DateArray: 72;\r\n    readonly TimeArray: 73;\r\n    readonly DateTimeArray: 74;\r\n    readonly JsonArray: 75;\r\n    readonly EnumArray: 76;\r\n    readonly BytesArray: 77;\r\n    readonly UuidArray: 78;\r\n    readonly UnknownNumber: 128;\r\n};\r\n\r\ndeclare type CompactedBatchResponse = {\r\n    type: 'compacted';\r\n    plan: object;\r\n    arguments: Record<string, {}>[];\r\n    nestedSelection: string[];\r\n    keys: string[];\r\n    expectNonEmpty: boolean;\r\n};\r\n\r\ndeclare type CompilerWasmLoadingConfig = {\r\n    /**\r\n     * WASM-bindgen runtime for corresponding module\r\n     */\r\n    getRuntime: () => Promise<{\r\n        __wbg_set_wasm(exports: unknown): void;\r\n        QueryCompiler: QueryCompilerConstructor;\r\n    }>;\r\n    /**\r\n     * Loads the raw wasm module for the wasm compiler engine. This configuration is\r\n     * generated specifically for each type of client, eg. Node.js client and Edge\r\n     * clients will have different implementations.\r\n     * @remarks this is a callback on purpose, we only load the wasm if needed.\r\n     * @remarks only used by ClientEngine\r\n     */\r\n    getQueryCompilerWasmModule: () => Promise<unknown>;\r\n};\r\n\r\nexport declare type Compute<T> = T extends Function ? T : {\r\n    [K in keyof T]: T[K];\r\n} & unknown;\r\n\r\nexport declare type ComputeDeep<T> = T extends Function ? T : {\r\n    [K in keyof T]: ComputeDeep<T[K]>;\r\n} & unknown;\r\n\r\ndeclare type ComputedField = {\r\n    name: string;\r\n    needs: string[];\r\n    compute: ResultArgsFieldCompute;\r\n};\r\n\r\ndeclare type ComputedFieldsMap = {\r\n    [fieldName: string]: ComputedField;\r\n};\r\n\r\ndeclare type ConnectionInfo = {\r\n    schemaName?: string;\r\n    maxBindValues?: number;\r\n};\r\n\r\ndeclare type ConnectorType = 'mysql' | 'mongodb' | 'sqlite' | 'postgresql' | 'postgres' | 'prisma+postgres' | 'sqlserver' | 'cockroachdb';\r\n\r\ndeclare interface Context {\r\n    /**\r\n     * Get a value from the context.\r\n     *\r\n     * @param key key which identifies a context value\r\n     */\r\n    getValue(key: symbol): unknown;\r\n    /**\r\n     * Create a new context which inherits from this context and has\r\n     * the given key set to the given value.\r\n     *\r\n     * @param key context key for which to set the value\r\n     * @param value value to set for the given key\r\n     */\r\n    setValue(key: symbol, value: unknown): Context;\r\n    /**\r\n     * Return a new context which inherits from this context but does\r\n     * not contain a value for the given key.\r\n     *\r\n     * @param key context key for which to clear a value\r\n     */\r\n    deleteValue(key: symbol): Context;\r\n}\r\n\r\ndeclare type Context_2<T> = T extends {\r\n    [K: symbol]: {\r\n        ctx: infer C;\r\n    };\r\n} ? C & T & {\r\n    /**\r\n     * @deprecated Use `$name` instead.\r\n     */\r\n    name?: string;\r\n    $name?: string;\r\n    $parent?: unknown;\r\n} : T & {\r\n    /**\r\n     * @deprecated Use `$name` instead.\r\n     */\r\n    name?: string;\r\n    $name?: string;\r\n    $parent?: unknown;\r\n};\r\n\r\nexport declare type Count<O> = {\r\n    [K in keyof O]: Count<number>;\r\n} & {};\r\n\r\nexport declare function createParam(name: string): Param<unknown, string>;\r\n\r\n/**\r\n * Custom fetch function for `DataProxyEngine`.\r\n *\r\n * We can't use the actual type of `globalThis.fetch` because this will result\r\n * in API Extractor referencing Node.js type definitions in the `.d.ts` bundle\r\n * for the client runtime. We can only use such types in internal types that\r\n * don't end up exported anywhere.\r\n\r\n * It's also not possible to write a definition of `fetch` that would accept the\r\n * actual `fetch` function from different environments such as Node.js and\r\n * Cloudflare Workers (with their extensions to `RequestInit` and `Response`).\r\n * `fetch` is used in both covariant and contravariant positions in\r\n * `CustomDataProxyFetch`, making it invariant, so we need the exact same type.\r\n * Even if we removed the argument and left `fetch` in covariant position only,\r\n * then for an extension-supplied function to be assignable to `customDataProxyFetch`,\r\n * the platform-specific (or custom) `fetch` function needs to be assignable\r\n * to our `fetch` definition. This, in turn, requires the third-party `Response`\r\n * to be a subtype of our `Response` (which is not a problem, we could declare\r\n * a minimal `Response` type that only includes what we use) *and* requires the\r\n * third-party `RequestInit` to be a supertype of our `RequestInit` (i.e. we\r\n * have to declare all properties any `RequestInit` implementation in existence\r\n * could possibly have), which is not possible.\r\n *\r\n * Since `@prisma/extension-accelerate` redefines the type of\r\n * `__internalParams.customDataProxyFetch` to its own type anyway (probably for\r\n * exactly this reason), our definition is never actually used and is completely\r\n * ignored, so it doesn't matter, and we can just use `unknown` as the type of\r\n * `fetch` here.\r\n */\r\ndeclare type CustomDataProxyFetch = (fetch: unknown) => unknown;\r\n\r\ndeclare class DataLoader<T = unknown> {\r\n    private options;\r\n    batches: {\r\n        [key: string]: Job[];\r\n    };\r\n    private tickActive;\r\n    constructor(options: DataLoaderOptions<T>);\r\n    request(request: T): Promise<any>;\r\n    private dispatchBatches;\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\ndeclare type DataLoaderOptions<T> = {\r\n    singleLoader: (request: T) => Promise<any>;\r\n    batchLoader: (request: T[]) => Promise<any[]>;\r\n    batchBy: (request: T) => string | undefined;\r\n    batchOrder: (requestA: T, requestB: T) => number;\r\n};\r\n\r\ndeclare type Datamodel = ReadonlyDeep_2<{\r\n    models: Model[];\r\n    enums: DatamodelEnum[];\r\n    types: Model[];\r\n    indexes: Index[];\r\n}>;\r\n\r\ndeclare type DatamodelEnum = ReadonlyDeep_2<{\r\n    name: string;\r\n    values: EnumValue[];\r\n    dbName?: string | null;\r\n    documentation?: string;\r\n}>;\r\n\r\ndeclare function datamodelEnumToSchemaEnum(datamodelEnum: DatamodelEnum): SchemaEnum;\r\n\r\ndeclare type Datasource = {\r\n    url?: string;\r\n};\r\n\r\ndeclare type Datasources = {\r\n    [name in string]: Datasource;\r\n};\r\n\r\ndeclare class DbNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\nexport declare const Debug: typeof debugCreate & {\r\n    enable(namespace: any): void;\r\n    disable(): any;\r\n    enabled(namespace: string): boolean;\r\n    log: (...args: string[]) => void;\r\n    formatters: {};\r\n};\r\n\r\n/**\r\n * Create a new debug instance with the given namespace.\r\n *\r\n * @example\r\n * ```ts\r\n * import Debug from '@prisma/debug'\r\n * const debug = Debug('prisma:client')\r\n * debug('Hello World')\r\n * ```\r\n */\r\ndeclare function debugCreate(namespace: string): ((...args: any[]) => void) & {\r\n    color: string;\r\n    enabled: boolean;\r\n    namespace: string;\r\n    log: (...args: string[]) => void;\r\n    extend: () => void;\r\n};\r\n\r\nexport declare function Decimal(n: Decimal.Value): Decimal;\r\n\r\nexport declare namespace Decimal {\r\n    export type Constructor = typeof Decimal;\r\n    export type Instance = Decimal;\r\n    export type Rounding = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8;\r\n    export type Modulo = Rounding | 9;\r\n    export type Value = string | number | Decimal;\r\n\r\n    // http://mikemcl.github.io/decimal.js/#constructor-properties\r\n    export interface Config {\r\n        precision?: number;\r\n        rounding?: Rounding;\r\n        toExpNeg?: number;\r\n        toExpPos?: number;\r\n        minE?: number;\r\n        maxE?: number;\r\n        crypto?: boolean;\r\n        modulo?: Modulo;\r\n        defaults?: boolean;\r\n    }\r\n}\r\n\r\nexport declare class Decimal {\r\n    readonly d: number[];\r\n    readonly e: number;\r\n    readonly s: number;\r\n\r\n    constructor(n: Decimal.Value);\r\n\r\n    absoluteValue(): Decimal;\r\n    abs(): Decimal;\r\n\r\n    ceil(): Decimal;\r\n\r\n    clampedTo(min: Decimal.Value, max: Decimal.Value): Decimal;\r\n    clamp(min: Decimal.Value, max: Decimal.Value): Decimal;\r\n\r\n    comparedTo(n: Decimal.Value): number;\r\n    cmp(n: Decimal.Value): number;\r\n\r\n    cosine(): Decimal;\r\n    cos(): Decimal;\r\n\r\n    cubeRoot(): Decimal;\r\n    cbrt(): Decimal;\r\n\r\n    decimalPlaces(): number;\r\n    dp(): number;\r\n\r\n    dividedBy(n: Decimal.Value): Decimal;\r\n    div(n: Decimal.Value): Decimal;\r\n\r\n    dividedToIntegerBy(n: Decimal.Value): Decimal;\r\n    divToInt(n: Decimal.Value): Decimal;\r\n\r\n    equals(n: Decimal.Value): boolean;\r\n    eq(n: Decimal.Value): boolean;\r\n\r\n    floor(): Decimal;\r\n\r\n    greaterThan(n: Decimal.Value): boolean;\r\n    gt(n: Decimal.Value): boolean;\r\n\r\n    greaterThanOrEqualTo(n: Decimal.Value): boolean;\r\n    gte(n: Decimal.Value): boolean;\r\n\r\n    hyperbolicCosine(): Decimal;\r\n    cosh(): Decimal;\r\n\r\n    hyperbolicSine(): Decimal;\r\n    sinh(): Decimal;\r\n\r\n    hyperbolicTangent(): Decimal;\r\n    tanh(): Decimal;\r\n\r\n    inverseCosine(): Decimal;\r\n    acos(): Decimal;\r\n\r\n    inverseHyperbolicCosine(): Decimal;\r\n    acosh(): Decimal;\r\n\r\n    inverseHyperbolicSine(): Decimal;\r\n    asinh(): Decimal;\r\n\r\n    inverseHyperbolicTangent(): Decimal;\r\n    atanh(): Decimal;\r\n\r\n    inverseSine(): Decimal;\r\n    asin(): Decimal;\r\n\r\n    inverseTangent(): Decimal;\r\n    atan(): Decimal;\r\n\r\n    isFinite(): boolean;\r\n\r\n    isInteger(): boolean;\r\n    isInt(): boolean;\r\n\r\n    isNaN(): boolean;\r\n\r\n    isNegative(): boolean;\r\n    isNeg(): boolean;\r\n\r\n    isPositive(): boolean;\r\n    isPos(): boolean;\r\n\r\n    isZero(): boolean;\r\n\r\n    lessThan(n: Decimal.Value): boolean;\r\n    lt(n: Decimal.Value): boolean;\r\n\r\n    lessThanOrEqualTo(n: Decimal.Value): boolean;\r\n    lte(n: Decimal.Value): boolean;\r\n\r\n    logarithm(n?: Decimal.Value): Decimal;\r\n    log(n?: Decimal.Value): Decimal;\r\n\r\n    minus(n: Decimal.Value): Decimal;\r\n    sub(n: Decimal.Value): Decimal;\r\n\r\n    modulo(n: Decimal.Value): Decimal;\r\n    mod(n: Decimal.Value): Decimal;\r\n\r\n    naturalExponential(): Decimal;\r\n    exp(): Decimal;\r\n\r\n    naturalLogarithm(): Decimal;\r\n    ln(): Decimal;\r\n\r\n    negated(): Decimal;\r\n    neg(): Decimal;\r\n\r\n    plus(n: Decimal.Value): Decimal;\r\n    add(n: Decimal.Value): Decimal;\r\n\r\n    precision(includeZeros?: boolean): number;\r\n    sd(includeZeros?: boolean): number;\r\n\r\n    round(): Decimal;\r\n\r\n    sine() : Decimal;\r\n    sin() : Decimal;\r\n\r\n    squareRoot(): Decimal;\r\n    sqrt(): Decimal;\r\n\r\n    tangent() : Decimal;\r\n    tan() : Decimal;\r\n\r\n    times(n: Decimal.Value): Decimal;\r\n    mul(n: Decimal.Value) : Decimal;\r\n\r\n    toBinary(significantDigits?: number): string;\r\n    toBinary(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toDecimalPlaces(decimalPlaces?: number): Decimal;\r\n    toDecimalPlaces(decimalPlaces: number, rounding: Decimal.Rounding): Decimal;\r\n    toDP(decimalPlaces?: number): Decimal;\r\n    toDP(decimalPlaces: number, rounding: Decimal.Rounding): Decimal;\r\n\r\n    toExponential(decimalPlaces?: number): string;\r\n    toExponential(decimalPlaces: number, rounding: Decimal.Rounding): string;\r\n\r\n    toFixed(decimalPlaces?: number): string;\r\n    toFixed(decimalPlaces: number, rounding: Decimal.Rounding): string;\r\n\r\n    toFraction(max_denominator?: Decimal.Value): Decimal[];\r\n\r\n    toHexadecimal(significantDigits?: number): string;\r\n    toHexadecimal(significantDigits: number, rounding: Decimal.Rounding): string;\r\n    toHex(significantDigits?: number): string;\r\n    toHex(significantDigits: number, rounding?: Decimal.Rounding): string;\r\n\r\n    toJSON(): string;\r\n\r\n    toNearest(n: Decimal.Value, rounding?: Decimal.Rounding): Decimal;\r\n\r\n    toNumber(): number;\r\n\r\n    toOctal(significantDigits?: number): string;\r\n    toOctal(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toPower(n: Decimal.Value): Decimal;\r\n    pow(n: Decimal.Value): Decimal;\r\n\r\n    toPrecision(significantDigits?: number): string;\r\n    toPrecision(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toSignificantDigits(significantDigits?: number): Decimal;\r\n    toSignificantDigits(significantDigits: number, rounding: Decimal.Rounding): Decimal;\r\n    toSD(significantDigits?: number): Decimal;\r\n    toSD(significantDigits: number, rounding: Decimal.Rounding): Decimal;\r\n\r\n    toString(): string;\r\n\r\n    truncated(): Decimal;\r\n    trunc(): Decimal;\r\n\r\n    valueOf(): string;\r\n\r\n    static abs(n: Decimal.Value): Decimal;\r\n    static acos(n: Decimal.Value): Decimal;\r\n    static acosh(n: Decimal.Value): Decimal;\r\n    static add(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static asin(n: Decimal.Value): Decimal;\r\n    static asinh(n: Decimal.Value): Decimal;\r\n    static atan(n: Decimal.Value): Decimal;\r\n    static atanh(n: Decimal.Value): Decimal;\r\n    static atan2(y: Decimal.Value, x: Decimal.Value): Decimal;\r\n    static cbrt(n: Decimal.Value): Decimal;\r\n    static ceil(n: Decimal.Value): Decimal;\r\n    static clamp(n: Decimal.Value, min: Decimal.Value, max: Decimal.Value): Decimal;\r\n    static clone(object?: Decimal.Config): Decimal.Constructor;\r\n    static config(object: Decimal.Config): Decimal.Constructor;\r\n    static cos(n: Decimal.Value): Decimal;\r\n    static cosh(n: Decimal.Value): Decimal;\r\n    static div(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static exp(n: Decimal.Value): Decimal;\r\n    static floor(n: Decimal.Value): Decimal;\r\n    static hypot(...n: Decimal.Value[]): Decimal;\r\n    static isDecimal(object: any): object is Decimal;\r\n    static ln(n: Decimal.Value): Decimal;\r\n    static log(n: Decimal.Value, base?: Decimal.Value): Decimal;\r\n    static log2(n: Decimal.Value): Decimal;\r\n    static log10(n: Decimal.Value): Decimal;\r\n    static max(...n: Decimal.Value[]): Decimal;\r\n    static min(...n: Decimal.Value[]): Decimal;\r\n    static mod(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static mul(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static noConflict(): Decimal.Constructor;   // Browser only\r\n    static pow(base: Decimal.Value, exponent: Decimal.Value): Decimal;\r\n    static random(significantDigits?: number): Decimal;\r\n    static round(n: Decimal.Value): Decimal;\r\n    static set(object: Decimal.Config): Decimal.Constructor;\r\n    static sign(n: Decimal.Value): number;\r\n    static sin(n: Decimal.Value): Decimal;\r\n    static sinh(n: Decimal.Value): Decimal;\r\n    static sqrt(n: Decimal.Value): Decimal;\r\n    static sub(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static sum(...n: Decimal.Value[]): Decimal;\r\n    static tan(n: Decimal.Value): Decimal;\r\n    static tanh(n: Decimal.Value): Decimal;\r\n    static trunc(n: Decimal.Value): Decimal;\r\n\r\n    static readonly default?: Decimal.Constructor;\r\n    static readonly Decimal?: Decimal.Constructor;\r\n\r\n    static readonly precision: number;\r\n    static readonly rounding: Decimal.Rounding;\r\n    static readonly toExpNeg: number;\r\n    static readonly toExpPos: number;\r\n    static readonly minE: number;\r\n    static readonly maxE: number;\r\n    static readonly crypto: boolean;\r\n    static readonly modulo: Decimal.Modulo;\r\n\r\n    static readonly ROUND_UP: 0;\r\n    static readonly ROUND_DOWN: 1;\r\n    static readonly ROUND_CEIL: 2;\r\n    static readonly ROUND_FLOOR: 3;\r\n    static readonly ROUND_HALF_UP: 4;\r\n    static readonly ROUND_HALF_DOWN: 5;\r\n    static readonly ROUND_HALF_EVEN: 6;\r\n    static readonly ROUND_HALF_CEIL: 7;\r\n    static readonly ROUND_HALF_FLOOR: 8;\r\n    static readonly EUCLID: 9;\r\n}\r\n\r\n/**\r\n * Interface for any Decimal.js-like library\r\n * Allows us to accept Decimal.js from different\r\n * versions and some compatible alternatives\r\n */\r\nexport declare interface DecimalJsLike {\r\n    d: number[];\r\n    e: number;\r\n    s: number;\r\n    toFixed(): string;\r\n}\r\n\r\nexport declare type DefaultArgs = InternalArgs<{}, {}, {}, {}>;\r\n\r\nexport declare type DefaultSelection<Payload extends OperationPayload, Args = {}, GlobalOmitOptions = {}> = Args extends {\r\n    omit: infer LocalOmit;\r\n} ? ApplyOmit<UnwrapPayload<{\r\n    default: Payload;\r\n}>['default'], PatchFlat<LocalOmit, ExtractGlobalOmit<GlobalOmitOptions, Uncapitalize<Payload['name']>>>> : ApplyOmit<UnwrapPayload<{\r\n    default: Payload;\r\n}>['default'], ExtractGlobalOmit<GlobalOmitOptions, Uncapitalize<Payload['name']>>>;\r\n\r\nexport declare function defineDmmfProperty(target: object, runtimeDataModel: RuntimeDataModel): void;\r\n\r\ndeclare function defineExtension(ext: ExtensionArgs | ((client: Client) => Client)): (client: Client) => Client;\r\n\r\ndeclare const denylist: readonly [\"$connect\", \"$disconnect\", \"$on\", \"$transaction\", \"$use\", \"$extends\"];\r\n\r\ndeclare type Deprecation = ReadonlyDeep_2<{\r\n    sinceVersion: string;\r\n    reason: string;\r\n    plannedRemovalVersion?: string;\r\n}>;\r\n\r\ndeclare type DeserializedResponse = Array<Record<string, unknown>>;\r\n\r\nexport declare function deserializeJsonResponse(result: unknown): unknown;\r\n\r\nexport declare function deserializeRawResult(response: RawResponse): DeserializedResponse;\r\n\r\nexport declare type DevTypeMapDef = {\r\n    meta: {\r\n        modelProps: string;\r\n    };\r\n    model: {\r\n        [Model in PropertyKey]: {\r\n            [Operation in PropertyKey]: DevTypeMapFnDef;\r\n        };\r\n    };\r\n    other: {\r\n        [Operation in PropertyKey]: DevTypeMapFnDef;\r\n    };\r\n};\r\n\r\nexport declare type DevTypeMapFnDef = {\r\n    args: any;\r\n    result: any;\r\n    payload: OperationPayload;\r\n};\r\n\r\nexport declare namespace DMMF {\r\n    export {\r\n        datamodelEnumToSchemaEnum,\r\n        Document_2 as Document,\r\n        Mappings,\r\n        OtherOperationMappings,\r\n        DatamodelEnum,\r\n        SchemaEnum,\r\n        EnumValue,\r\n        Datamodel,\r\n        uniqueIndex,\r\n        PrimaryKey,\r\n        Model,\r\n        FieldKind,\r\n        FieldNamespace,\r\n        FieldLocation,\r\n        Field,\r\n        FieldDefault,\r\n        FieldDefaultScalar,\r\n        Index,\r\n        IndexType,\r\n        IndexField,\r\n        SortOrder,\r\n        Schema,\r\n        Query,\r\n        QueryOutput,\r\n        TypeRef,\r\n        InputTypeRef,\r\n        SchemaArg,\r\n        OutputType,\r\n        SchemaField,\r\n        OutputTypeRef,\r\n        Deprecation,\r\n        InputType,\r\n        FieldRefType,\r\n        FieldRefAllowType,\r\n        ModelMapping,\r\n        ModelAction\r\n    }\r\n}\r\n\r\ndeclare namespace DMMF_2 {\r\n    export {\r\n        datamodelEnumToSchemaEnum,\r\n        Document_2 as Document,\r\n        Mappings,\r\n        OtherOperationMappings,\r\n        DatamodelEnum,\r\n        SchemaEnum,\r\n        EnumValue,\r\n        Datamodel,\r\n        uniqueIndex,\r\n        PrimaryKey,\r\n        Model,\r\n        FieldKind,\r\n        FieldNamespace,\r\n        FieldLocation,\r\n        Field,\r\n        FieldDefault,\r\n        FieldDefaultScalar,\r\n        Index,\r\n        IndexType,\r\n        IndexField,\r\n        SortOrder,\r\n        Schema,\r\n        Query,\r\n        QueryOutput,\r\n        TypeRef,\r\n        InputTypeRef,\r\n        SchemaArg,\r\n        OutputType,\r\n        SchemaField,\r\n        OutputTypeRef,\r\n        Deprecation,\r\n        InputType,\r\n        FieldRefType,\r\n        FieldRefAllowType,\r\n        ModelMapping,\r\n        ModelAction\r\n    }\r\n}\r\n\r\nexport declare function dmmfToRuntimeDataModel(dmmfDataModel: DMMF_2.Datamodel): RuntimeDataModel;\r\n\r\ndeclare type Document_2 = ReadonlyDeep_2<{\r\n    datamodel: Datamodel;\r\n    schema: Schema;\r\n    mappings: Mappings;\r\n}>;\r\n\r\n/**\r\n * A generic driver adapter factory that allows the user to instantiate a\r\n * driver adapter. The query and result types are specific to the adapter.\r\n */\r\ndeclare interface DriverAdapterFactory<Query, Result> extends AdapterInfo {\r\n    /**\r\n     * Instantiate a driver adapter.\r\n     */\r\n    connect(): Promise<Queryable<Query, Result>>;\r\n}\r\n\r\n/** Client */\r\nexport declare type DynamicClientExtensionArgs<C_, TypeMap extends TypeMapDef, TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>> = {\r\n    [P in keyof C_]: unknown;\r\n} & {\r\n    [K: symbol]: {\r\n        ctx: Optional<DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>, ITXClientDenyList> & {\r\n            $parent: Optional<DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>, ITXClientDenyList>;\r\n        };\r\n    };\r\n};\r\n\r\nexport declare type DynamicClientExtensionThis<TypeMap extends TypeMapDef, TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>> = {\r\n    [P in keyof ExtArgs['client']]: Return<ExtArgs['client'][P]>;\r\n} & {\r\n    [P in Exclude<TypeMap['meta']['modelProps'], keyof ExtArgs['client']>]: DynamicModelExtensionThis<TypeMap, ModelKey<TypeMap, P>, ExtArgs>;\r\n} & {\r\n    [P in Exclude<keyof TypeMap['other']['operations'], keyof ExtArgs['client']>]: P extends keyof ClientOtherOps ? ClientOtherOps[P] : never;\r\n} & {\r\n    [P in Exclude<ClientBuiltInProp, keyof ExtArgs['client']>]: DynamicClientExtensionThisBuiltin<TypeMap, TypeMapCb, ExtArgs>[P];\r\n} & {\r\n    [K: symbol]: {\r\n        types: TypeMap['other'];\r\n    };\r\n};\r\n\r\nexport declare type DynamicClientExtensionThisBuiltin<TypeMap extends TypeMapDef, TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>> = {\r\n    $extends: ExtendsHook<'extends', TypeMapCb, ExtArgs, Call<TypeMapCb, {\r\n        extArgs: ExtArgs;\r\n    }>>;\r\n    $transaction<P extends PrismaPromise<any>[]>(arg: [...P], options?: {\r\n        isolationLevel?: TypeMap['meta']['txIsolationLevel'];\r\n    }): Promise<UnwrapTuple<P>>;\r\n    $transaction<R>(fn: (client: Omit<DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>, ITXClientDenyList>) => Promise<R>, options?: {\r\n        maxWait?: number;\r\n        timeout?: number;\r\n        isolationLevel?: TypeMap['meta']['txIsolationLevel'];\r\n    }): Promise<R>;\r\n    $disconnect(): Promise<void>;\r\n    $connect(): Promise<void>;\r\n};\r\n\r\n/** Model */\r\nexport declare type DynamicModelExtensionArgs<M_, TypeMap extends TypeMapDef, TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>> = {\r\n    [K in keyof M_]: K extends '$allModels' ? {\r\n        [P in keyof M_[K]]?: unknown;\r\n    } & {\r\n        [K: symbol]: {};\r\n    } : K extends TypeMap['meta']['modelProps'] ? {\r\n        [P in keyof M_[K]]?: unknown;\r\n    } & {\r\n        [K: symbol]: {\r\n            ctx: DynamicModelExtensionThis<TypeMap, ModelKey<TypeMap, K>, ExtArgs> & {\r\n                $parent: DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>;\r\n            } & {\r\n                $name: ModelKey<TypeMap, K>;\r\n            } & {\r\n                /**\r\n                 * @deprecated Use `$name` instead.\r\n                 */\r\n                name: ModelKey<TypeMap, K>;\r\n            };\r\n        };\r\n    } : never;\r\n};\r\n\r\nexport declare type DynamicModelExtensionFluentApi<TypeMap extends TypeMapDef, M extends PropertyKey, P extends PropertyKey, Null> = {\r\n    [K in keyof TypeMap['model'][M]['payload']['objects']]: <A>(args?: Exact<A, Path<TypeMap['model'][M]['operations'][P]['args']['select'], [K]>>) => PrismaPromise<Path<DynamicModelExtensionFnResultBase<TypeMap, M, {\r\n        select: {\r\n            [P in K]: A;\r\n        };\r\n    }, P>, [K]> | Null> & DynamicModelExtensionFluentApi<TypeMap, (TypeMap['model'][M]['payload']['objects'][K] & {})['name'], P, Null | Select<TypeMap['model'][M]['payload']['objects'][K], null>>;\r\n};\r\n\r\nexport declare type DynamicModelExtensionFnResult<TypeMap extends TypeMapDef, M extends PropertyKey, A, P extends PropertyKey, Null> = P extends FluentOperation ? DynamicModelExtensionFluentApi<TypeMap, M, P, Null> & PrismaPromise<DynamicModelExtensionFnResultBase<TypeMap, M, A, P> | Null> : PrismaPromise<DynamicModelExtensionFnResultBase<TypeMap, M, A, P>>;\r\n\r\nexport declare type DynamicModelExtensionFnResultBase<TypeMap extends TypeMapDef, M extends PropertyKey, A, P extends PropertyKey> = GetResult<TypeMap['model'][M]['payload'], A, P & Operation, TypeMap['globalOmitOptions']>;\r\n\r\nexport declare type DynamicModelExtensionFnResultNull<P extends PropertyKey> = P extends 'findUnique' | 'findFirst' ? null : never;\r\n\r\nexport declare type DynamicModelExtensionOperationFn<TypeMap extends TypeMapDef, M extends PropertyKey, P extends PropertyKey> = {} extends TypeMap['model'][M]['operations'][P]['args'] ? <A extends TypeMap['model'][M]['operations'][P]['args']>(args?: Exact<A, TypeMap['model'][M]['operations'][P]['args']>) => DynamicModelExtensionFnResult<TypeMap, M, A, P, DynamicModelExtensionFnResultNull<P>> : <A extends TypeMap['model'][M]['operations'][P]['args']>(args: Exact<A, TypeMap['model'][M]['operations'][P]['args']>) => DynamicModelExtensionFnResult<TypeMap, M, A, P, DynamicModelExtensionFnResultNull<P>>;\r\n\r\nexport declare type DynamicModelExtensionThis<TypeMap extends TypeMapDef, M extends PropertyKey, ExtArgs extends Record<string, any>> = {\r\n    [P in keyof ExtArgs['model'][Uncapitalize<M & string>]]: Return<ExtArgs['model'][Uncapitalize<M & string>][P]>;\r\n} & {\r\n    [P in Exclude<keyof TypeMap['model'][M]['operations'], keyof ExtArgs['model'][Uncapitalize<M & string>]>]: DynamicModelExtensionOperationFn<TypeMap, M, P>;\r\n} & {\r\n    [P in Exclude<'fields', keyof ExtArgs['model'][Uncapitalize<M & string>]>]: TypeMap['model'][M]['fields'];\r\n} & {\r\n    [K: symbol]: {\r\n        types: TypeMap['model'][M];\r\n    };\r\n};\r\n\r\n/** Query */\r\nexport declare type DynamicQueryExtensionArgs<Q_, TypeMap extends TypeMapDef> = {\r\n    [K in keyof Q_]: K extends '$allOperations' ? (args: {\r\n        model?: string;\r\n        operation: string;\r\n        args: any;\r\n        query: (args: any) => PrismaPromise<any>;\r\n    }) => Promise<any> : K extends '$allModels' ? {\r\n        [P in keyof Q_[K] | keyof TypeMap['model'][keyof TypeMap['model']]['operations'] | '$allOperations']?: P extends '$allOperations' ? DynamicQueryExtensionCb<TypeMap, 'model', keyof TypeMap['model'], keyof TypeMap['model'][keyof TypeMap['model']]['operations']> : P extends keyof TypeMap['model'][keyof TypeMap['model']]['operations'] ? DynamicQueryExtensionCb<TypeMap, 'model', keyof TypeMap['model'], P> : never;\r\n    } : K extends TypeMap['meta']['modelProps'] ? {\r\n        [P in keyof Q_[K] | keyof TypeMap['model'][ModelKey<TypeMap, K>]['operations'] | '$allOperations']?: P extends '$allOperations' ? DynamicQueryExtensionCb<TypeMap, 'model', ModelKey<TypeMap, K>, keyof TypeMap['model'][ModelKey<TypeMap, K>]['operations']> : P extends keyof TypeMap['model'][ModelKey<TypeMap, K>]['operations'] ? DynamicQueryExtensionCb<TypeMap, 'model', ModelKey<TypeMap, K>, P> : never;\r\n    } : K extends keyof TypeMap['other']['operations'] ? DynamicQueryExtensionCb<[TypeMap], 0, 'other', K> : never;\r\n};\r\n\r\nexport declare type DynamicQueryExtensionCb<TypeMap extends TypeMapDef, _0 extends PropertyKey, _1 extends PropertyKey, _2 extends PropertyKey> = <A extends DynamicQueryExtensionCbArgs<TypeMap, _0, _1, _2>>(args: A) => Promise<TypeMap[_0][_1][_2]['result']>;\r\n\r\nexport declare type DynamicQueryExtensionCbArgs<TypeMap extends TypeMapDef, _0 extends PropertyKey, _1 extends PropertyKey, _2 extends PropertyKey> = (_1 extends unknown ? _2 extends unknown ? {\r\n    args: DynamicQueryExtensionCbArgsArgs<TypeMap, _0, _1, _2>;\r\n    model: _0 extends 0 ? undefined : _1;\r\n    operation: _2;\r\n    query: <A extends DynamicQueryExtensionCbArgsArgs<TypeMap, _0, _1, _2>>(args: A) => PrismaPromise<TypeMap[_0][_1]['operations'][_2]['result']>;\r\n} : never : never) & {\r\n    query: (args: DynamicQueryExtensionCbArgsArgs<TypeMap, _0, _1, _2>) => PrismaPromise<TypeMap[_0][_1]['operations'][_2]['result']>;\r\n};\r\n\r\nexport declare type DynamicQueryExtensionCbArgsArgs<TypeMap extends TypeMapDef, _0 extends PropertyKey, _1 extends PropertyKey, _2 extends PropertyKey> = _2 extends '$queryRaw' | '$executeRaw' ? Sql : TypeMap[_0][_1]['operations'][_2]['args'];\r\n\r\n/** Result */\r\nexport declare type DynamicResultExtensionArgs<R_, TypeMap extends TypeMapDef> = {\r\n    [K in keyof R_]: {\r\n        [P in keyof R_[K]]?: {\r\n            needs?: DynamicResultExtensionNeeds<TypeMap, ModelKey<TypeMap, K>, R_[K][P]>;\r\n            compute(data: DynamicResultExtensionData<TypeMap, ModelKey<TypeMap, K>, R_[K][P]>): any;\r\n        };\r\n    };\r\n};\r\n\r\nexport declare type DynamicResultExtensionData<TypeMap extends TypeMapDef, M extends PropertyKey, S> = GetFindResult<TypeMap['model'][M]['payload'], {\r\n    select: S;\r\n}, {}>;\r\n\r\nexport declare type DynamicResultExtensionNeeds<TypeMap extends TypeMapDef, M extends PropertyKey, S> = {\r\n    [K in keyof S]: K extends keyof TypeMap['model'][M]['payload']['scalars'] ? S[K] : never;\r\n} & {\r\n    [N in keyof TypeMap['model'][M]['payload']['scalars']]?: boolean;\r\n};\r\n\r\n/**\r\n * Placeholder value for \"no text\".\r\n */\r\nexport declare const empty: Sql;\r\n\r\nexport declare type EmptyToUnknown<T> = T;\r\n\r\ndeclare interface Engine<InteractiveTransactionPayload = unknown> {\r\n    /** The name of the engine. This is meant to be consumed externally */\r\n    readonly name: string;\r\n    onBeforeExit(callback: () => Promise<void>): void;\r\n    start(): Promise<void>;\r\n    stop(): Promise<void>;\r\n    version(forceRun?: boolean): Promise<string> | string;\r\n    request<T>(query: JsonQuery, options: RequestOptions<InteractiveTransactionPayload>): Promise<QueryEngineResultData<T>>;\r\n    requestBatch<T>(queries: JsonQuery[], options: RequestBatchOptions<InteractiveTransactionPayload>): Promise<BatchQueryEngineResult<T>[]>;\r\n    transaction(action: 'start', headers: Transaction_2.TransactionHeaders, options: Transaction_2.Options): Promise<Transaction_2.InteractiveTransactionInfo<unknown>>;\r\n    transaction(action: 'commit', headers: Transaction_2.TransactionHeaders, info: Transaction_2.InteractiveTransactionInfo<unknown>): Promise<void>;\r\n    transaction(action: 'rollback', headers: Transaction_2.TransactionHeaders, info: Transaction_2.InteractiveTransactionInfo<unknown>): Promise<void>;\r\n    metrics(options: MetricsOptionsJson): Promise<Metrics>;\r\n    metrics(options: MetricsOptionsPrometheus): Promise<string>;\r\n    applyPendingMigrations(): Promise<void>;\r\n}\r\n\r\ndeclare interface EngineConfig {\r\n    cwd: string;\r\n    dirname: string;\r\n    enableDebugLogs?: boolean;\r\n    allowTriggerPanic?: boolean;\r\n    prismaPath?: string;\r\n    generator?: GeneratorConfig;\r\n    /**\r\n     * @remarks this field is used internally by Policy, do not rename or remove\r\n     */\r\n    overrideDatasources: Datasources;\r\n    showColors?: boolean;\r\n    logQueries?: boolean;\r\n    logLevel?: 'info' | 'warn';\r\n    env: Record<string, string>;\r\n    flags?: string[];\r\n    clientVersion: string;\r\n    engineVersion: string;\r\n    previewFeatures?: string[];\r\n    engineEndpoint?: string;\r\n    activeProvider?: string;\r\n    logEmitter: LogEmitter;\r\n    transactionOptions: Transaction_2.Options;\r\n    /**\r\n     * Instance of a Driver Adapter, e.g., like one provided by `@prisma/adapter-planetscale`.\r\n     * If set, this is only used in the library engine, and all queries would be performed through it,\r\n     * rather than Prisma's Rust drivers.\r\n     * @remarks only used by LibraryEngine.ts\r\n     */\r\n    adapter?: SqlDriverAdapterFactory;\r\n    /**\r\n     * The contents of the schema encoded into a string\r\n     */\r\n    inlineSchema: string;\r\n    /**\r\n     * The contents of the datasource url saved in a string\r\n     * @remarks only used by DataProxyEngine.ts\r\n     * @remarks this field is used internally by Policy, do not rename or remove\r\n     */\r\n    inlineDatasources: GetPrismaClientConfig['inlineDatasources'];\r\n    /**\r\n     * The string hash that was produced for a given schema\r\n     * @remarks only used by DataProxyEngine.ts\r\n     */\r\n    inlineSchemaHash: string;\r\n    /**\r\n     * The helper for interaction with OTEL tracing\r\n     * @remarks enabling is determined by the client and @prisma/instrumentation package\r\n     */\r\n    tracingHelper: TracingHelper;\r\n    /**\r\n     * Information about whether we have not found a schema.prisma file in the\r\n     * default location, and that we fell back to finding the schema.prisma file\r\n     * in the current working directory. This usually means it has been bundled.\r\n     */\r\n    isBundled?: boolean;\r\n    /**\r\n     * Web Assembly module loading configuration\r\n     */\r\n    engineWasm?: EngineWasmLoadingConfig;\r\n    compilerWasm?: CompilerWasmLoadingConfig;\r\n    /**\r\n     * Allows Accelerate to use runtime utilities from the client. These are\r\n     * necessary for the AccelerateEngine to function correctly.\r\n     */\r\n    accelerateUtils?: {\r\n        resolveDatasourceUrl: typeof resolveDatasourceUrl;\r\n        getBatchRequestPayload: typeof getBatchRequestPayload;\r\n        prismaGraphQLToJSError: typeof prismaGraphQLToJSError;\r\n        PrismaClientUnknownRequestError: typeof PrismaClientUnknownRequestError;\r\n        PrismaClientInitializationError: typeof PrismaClientInitializationError;\r\n        PrismaClientKnownRequestError: typeof PrismaClientKnownRequestError;\r\n        debug: (...args: any[]) => void;\r\n        engineVersion: string;\r\n        clientVersion: string;\r\n    };\r\n}\r\n\r\ndeclare type EngineEvent<E extends EngineEventType> = E extends QueryEventType ? QueryEvent : LogEvent;\r\n\r\ndeclare type EngineEventType = QueryEventType | LogEventType;\r\n\r\ndeclare type EngineSpan = {\r\n    id: EngineSpanId;\r\n    parentId: string | null;\r\n    name: string;\r\n    startTime: HrTime;\r\n    endTime: HrTime;\r\n    kind: EngineSpanKind;\r\n    attributes?: Record<string, unknown>;\r\n    links?: EngineSpanId[];\r\n};\r\n\r\ndeclare type EngineSpanId = string;\r\n\r\ndeclare type EngineSpanKind = 'client' | 'internal';\r\n\r\ndeclare type EngineWasmLoadingConfig = {\r\n    /**\r\n     * WASM-bindgen runtime for corresponding module\r\n     */\r\n    getRuntime: () => Promise<{\r\n        __wbg_set_wasm(exports: unknown): void;\r\n        QueryEngine: QueryEngineConstructor;\r\n    }>;\r\n    /**\r\n     * Loads the raw wasm module for the wasm query engine. This configuration is\r\n     * generated specifically for each type of client, eg. Node.js client and Edge\r\n     * clients will have different implementations.\r\n     * @remarks this is a callback on purpose, we only load the wasm if needed.\r\n     * @remarks only used by LibraryEngine\r\n     */\r\n    getQueryEngineWasmModule: () => Promise<unknown>;\r\n};\r\n\r\ndeclare type EnumValue = ReadonlyDeep_2<{\r\n    name: string;\r\n    dbName: string | null;\r\n}>;\r\n\r\ndeclare type EnvPaths = {\r\n    rootEnvPath: string | null;\r\n    schemaEnvPath: string | undefined;\r\n};\r\n\r\ndeclare interface EnvValue {\r\n    fromEnvVar: null | string;\r\n    value: null | string;\r\n}\r\n\r\nexport declare type Equals<A, B> = (<T>() => T extends A ? 1 : 2) extends (<T>() => T extends B ? 1 : 2) ? 1 : 0;\r\n\r\ndeclare type Error_2 = {\r\n    kind: 'GenericJs';\r\n    id: number;\r\n} | {\r\n    kind: 'UnsupportedNativeDataType';\r\n    type: string;\r\n} | {\r\n    kind: 'InvalidIsolationLevel';\r\n    level: string;\r\n} | {\r\n    kind: 'LengthMismatch';\r\n    column?: string;\r\n} | {\r\n    kind: 'UniqueConstraintViolation';\r\n    fields: string[];\r\n} | {\r\n    kind: 'NullConstraintViolation';\r\n    fields: string[];\r\n} | {\r\n    kind: 'ForeignKeyConstraintViolation';\r\n    constraint?: {\r\n        fields: string[];\r\n    } | {\r\n        index: string;\r\n    } | {\r\n        foreignKey: {};\r\n    };\r\n} | {\r\n    kind: 'DatabaseDoesNotExist';\r\n    db?: string;\r\n} | {\r\n    kind: 'DatabaseAlreadyExists';\r\n    db?: string;\r\n} | {\r\n    kind: 'DatabaseAccessDenied';\r\n    db?: string;\r\n} | {\r\n    kind: 'AuthenticationFailed';\r\n    user?: string;\r\n} | {\r\n    kind: 'TransactionWriteConflict';\r\n} | {\r\n    kind: 'TableDoesNotExist';\r\n    table?: string;\r\n} | {\r\n    kind: 'ColumnNotFound';\r\n    column?: string;\r\n} | {\r\n    kind: 'TooManyConnections';\r\n    cause: string;\r\n} | {\r\n    kind: 'SocketTimeout';\r\n} | {\r\n    kind: 'postgres';\r\n    code: string;\r\n    severity: string;\r\n    message: string;\r\n    detail: string | undefined;\r\n    column: string | undefined;\r\n    hint: string | undefined;\r\n} | {\r\n    kind: 'mysql';\r\n    code: number;\r\n    message: string;\r\n    state: string;\r\n} | {\r\n    kind: 'sqlite';\r\n    /**\r\n     * Sqlite extended error code: https://www.sqlite.org/rescode.html\r\n     */\r\n    extendedCode: number;\r\n    message: string;\r\n};\r\n\r\ndeclare type ErrorCapturingFunction<T> = T extends (...args: infer A) => Promise<infer R> ? (...args: A) => Promise<Result_4<ErrorCapturingInterface<R>>> : T extends (...args: infer A) => infer R ? (...args: A) => Result_4<ErrorCapturingInterface<R>> : T;\r\n\r\ndeclare type ErrorCapturingInterface<T> = {\r\n    [K in keyof T]: ErrorCapturingFunction<T[K]>;\r\n};\r\n\r\ndeclare interface ErrorCapturingSqlDriverAdapter extends ErrorCapturingInterface<SqlDriverAdapter> {\r\n    readonly errorRegistry: ErrorRegistry;\r\n}\r\n\r\ndeclare type ErrorFormat = 'pretty' | 'colorless' | 'minimal';\r\n\r\ndeclare type ErrorRecord = {\r\n    error: unknown;\r\n};\r\n\r\ndeclare interface ErrorRegistry {\r\n    consumeError(id: number): ErrorRecord | undefined;\r\n}\r\n\r\ndeclare interface ErrorWithBatchIndex {\r\n    batchRequestIdx?: number;\r\n}\r\n\r\ndeclare type EventCallback<E extends ExtendedEventType> = [E] extends ['beforeExit'] ? () => Promise<void> : [E] extends [LogLevel] ? (event: EngineEvent<E>) => void : never;\r\n\r\nexport declare type Exact<A, W> = (A extends unknown ? (W extends A ? {\r\n    [K in keyof A]: Exact<A[K], W[K]>;\r\n} : W) : never) | (A extends Narrowable ? A : never);\r\n\r\n/**\r\n * Defines Exception.\r\n *\r\n * string or an object with one of (message or name or code) and optional stack\r\n */\r\ndeclare type Exception = ExceptionWithCode | ExceptionWithMessage | ExceptionWithName | string;\r\n\r\ndeclare interface ExceptionWithCode {\r\n    code: string | number;\r\n    name?: string;\r\n    message?: string;\r\n    stack?: string;\r\n}\r\n\r\ndeclare interface ExceptionWithMessage {\r\n    code?: string | number;\r\n    message: string;\r\n    name?: string;\r\n    stack?: string;\r\n}\r\n\r\ndeclare interface ExceptionWithName {\r\n    code?: string | number;\r\n    message?: string;\r\n    name: string;\r\n    stack?: string;\r\n}\r\n\r\ndeclare type ExtendedEventType = LogLevel | 'beforeExit';\r\n\r\ndeclare type ExtendedSpanOptions = SpanOptions & {\r\n    /** The name of the span */\r\n    name: string;\r\n    internal?: boolean;\r\n    middleware?: boolean;\r\n    /** Whether it propagates context (?=true) */\r\n    active?: boolean;\r\n    /** The context to append the span to */\r\n    context?: Context;\r\n};\r\n\r\n/** $extends, defineExtension */\r\nexport declare interface ExtendsHook<Variant extends 'extends' | 'define', TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>, TypeMap extends TypeMapDef = Call<TypeMapCb, {\r\n    extArgs: ExtArgs;\r\n}>> {\r\n    extArgs: ExtArgs;\r\n    <R_ extends {\r\n        [K in TypeMap['meta']['modelProps'] | '$allModels']?: unknown;\r\n    }, R, M_ extends {\r\n        [K in TypeMap['meta']['modelProps'] | '$allModels']?: unknown;\r\n    }, M, Q_ extends {\r\n        [K in TypeMap['meta']['modelProps'] | '$allModels' | keyof TypeMap['other']['operations'] | '$allOperations']?: unknown;\r\n    }, C_ extends {\r\n        [K in string]?: unknown;\r\n    }, C, Args extends InternalArgs = InternalArgs<R, M, {}, C>, MergedArgs extends InternalArgs = MergeExtArgs<TypeMap, ExtArgs, Args>>(extension: ((client: DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>) => {\r\n        $extends: {\r\n            extArgs: Args;\r\n        };\r\n    }) | {\r\n        name?: string;\r\n        query?: DynamicQueryExtensionArgs<Q_, TypeMap>;\r\n        result?: DynamicResultExtensionArgs<R_, TypeMap> & R;\r\n        model?: DynamicModelExtensionArgs<M_, TypeMap, TypeMapCb, ExtArgs> & M;\r\n        client?: DynamicClientExtensionArgs<C_, TypeMap, TypeMapCb, ExtArgs> & C;\r\n    }): {\r\n        extends: DynamicClientExtensionThis<Call<TypeMapCb, {\r\n            extArgs: MergedArgs;\r\n        }>, TypeMapCb, MergedArgs>;\r\n        define: (client: any) => {\r\n            $extends: {\r\n                extArgs: Args;\r\n            };\r\n        };\r\n    }[Variant];\r\n}\r\n\r\nexport declare type ExtensionArgs = Optional<RequiredExtensionArgs>;\r\n\r\ndeclare namespace Extensions {\r\n    export {\r\n        defineExtension,\r\n        getExtensionContext\r\n    }\r\n}\r\nexport { Extensions }\r\n\r\ndeclare namespace Extensions_2 {\r\n    export {\r\n        InternalArgs,\r\n        DefaultArgs,\r\n        GetPayloadResultExtensionKeys,\r\n        GetPayloadResultExtensionObject,\r\n        GetPayloadResult,\r\n        GetSelect,\r\n        GetOmit,\r\n        DynamicQueryExtensionArgs,\r\n        DynamicQueryExtensionCb,\r\n        DynamicQueryExtensionCbArgs,\r\n        DynamicQueryExtensionCbArgsArgs,\r\n        DynamicResultExtensionArgs,\r\n        DynamicResultExtensionNeeds,\r\n        DynamicResultExtensionData,\r\n        DynamicModelExtensionArgs,\r\n        DynamicModelExtensionThis,\r\n        DynamicModelExtensionOperationFn,\r\n        DynamicModelExtensionFnResult,\r\n        DynamicModelExtensionFnResultBase,\r\n        DynamicModelExtensionFluentApi,\r\n        DynamicModelExtensionFnResultNull,\r\n        DynamicClientExtensionArgs,\r\n        DynamicClientExtensionThis,\r\n        ClientBuiltInProp,\r\n        DynamicClientExtensionThisBuiltin,\r\n        ExtendsHook,\r\n        MergeExtArgs,\r\n        AllModelsToStringIndex,\r\n        TypeMapDef,\r\n        DevTypeMapDef,\r\n        DevTypeMapFnDef,\r\n        ClientOptionDef,\r\n        ClientOtherOps,\r\n        TypeMapCbDef,\r\n        ModelKey,\r\n        RequiredExtensionArgs as UserArgs\r\n    }\r\n}\r\n\r\nexport declare type ExtractGlobalOmit<Options, ModelName extends string> = Options extends {\r\n    omit: {\r\n        [K in ModelName]: infer GlobalOmit;\r\n    };\r\n} ? GlobalOmit : {};\r\n\r\ndeclare type Field = ReadonlyDeep_2<{\r\n    kind: FieldKind;\r\n    name: string;\r\n    isRequired: boolean;\r\n    isList: boolean;\r\n    isUnique: boolean;\r\n    isId: boolean;\r\n    isReadOnly: boolean;\r\n    isGenerated?: boolean;\r\n    isUpdatedAt?: boolean;\r\n    /**\r\n     * Describes the data type in the same the way it is defined in the Prisma schema:\r\n     * BigInt, Boolean, Bytes, DateTime, Decimal, Float, Int, JSON, String, $ModelName\r\n     */\r\n    type: string;\r\n    /**\r\n     * Native database type, if specified.\r\n     * For example, `@db.VarChar(191)` is encoded as `['VarChar', ['191']]`,\r\n     * `@db.Text` is encoded as `['Text', []]`.\r\n     */\r\n    nativeType?: [string, string[]] | null;\r\n    dbName?: string | null;\r\n    hasDefaultValue: boolean;\r\n    default?: FieldDefault | FieldDefaultScalar | FieldDefaultScalar[];\r\n    relationFromFields?: string[];\r\n    relationToFields?: string[];\r\n    relationOnDelete?: string;\r\n    relationOnUpdate?: string;\r\n    relationName?: string;\r\n    documentation?: string;\r\n}>;\r\n\r\ndeclare type FieldDefault = ReadonlyDeep_2<{\r\n    name: string;\r\n    args: Array<string | number>;\r\n}>;\r\n\r\ndeclare type FieldDefaultScalar = string | boolean | number;\r\n\r\ndeclare type FieldKind = 'scalar' | 'object' | 'enum' | 'unsupported';\r\n\r\ndeclare type FieldLocation = 'scalar' | 'inputObjectTypes' | 'outputObjectTypes' | 'enumTypes' | 'fieldRefTypes';\r\n\r\ndeclare type FieldNamespace = 'model' | 'prisma';\r\n\r\n/**\r\n * A reference to a specific field of a specific model\r\n */\r\nexport declare interface FieldRef<Model, FieldType> {\r\n    readonly modelName: Model;\r\n    readonly name: string;\r\n    readonly typeName: FieldType;\r\n    readonly isList: boolean;\r\n}\r\n\r\ndeclare type FieldRefAllowType = TypeRef<'scalar' | 'enumTypes'>;\r\n\r\ndeclare type FieldRefType = ReadonlyDeep_2<{\r\n    name: string;\r\n    allowTypes: FieldRefAllowType[];\r\n    fields: SchemaArg[];\r\n}>;\r\n\r\ndeclare type FluentOperation = 'findUnique' | 'findUniqueOrThrow' | 'findFirst' | 'findFirstOrThrow' | 'create' | 'update' | 'upsert' | 'delete';\r\n\r\nexport declare interface Fn<Params = unknown, Returns = unknown> {\r\n    params: Params;\r\n    returns: Returns;\r\n}\r\n\r\ndeclare interface GeneratorConfig {\r\n    name: string;\r\n    output: EnvValue | null;\r\n    isCustomOutput?: boolean;\r\n    provider: EnvValue;\r\n    config: {\r\n        /** `output` is a reserved name and will only be available directly at `generator.output` */\r\n        output?: never;\r\n        /** `provider` is a reserved name and will only be available directly at `generator.provider` */\r\n        provider?: never;\r\n        /** `binaryTargets` is a reserved name and will only be available directly at `generator.binaryTargets` */\r\n        binaryTargets?: never;\r\n        /** `previewFeatures` is a reserved name and will only be available directly at `generator.previewFeatures` */\r\n        previewFeatures?: never;\r\n    } & {\r\n        [key: string]: string | string[] | undefined;\r\n    };\r\n    binaryTargets: BinaryTargetsEnvValue[];\r\n    previewFeatures: string[];\r\n    envPaths?: EnvPaths;\r\n    sourceFilePath: string;\r\n}\r\n\r\nexport declare type GetAggregateResult<P extends OperationPayload, A> = {\r\n    [K in keyof A as K extends Aggregate ? K : never]: K extends '_count' ? A[K] extends true ? number : Count<A[K]> : {\r\n        [J in keyof A[K] & string]: P['scalars'][J] | null;\r\n    };\r\n};\r\n\r\ndeclare function getBatchRequestPayload(batch: JsonQuery[], transaction?: TransactionOptions_3<unknown>): QueryEngineBatchRequest;\r\n\r\nexport declare type GetBatchResult = {\r\n    count: number;\r\n};\r\n\r\nexport declare type GetCountResult<A> = A extends {\r\n    select: infer S;\r\n} ? (S extends true ? number : Count<S>) : number;\r\n\r\ndeclare function getExtensionContext<T>(that: T): Context_2<T>;\r\n\r\nexport declare type GetFindResult<P extends OperationPayload, A, GlobalOmitOptions> = Equals<A, any> extends 1 ? DefaultSelection<P, A, GlobalOmitOptions> : A extends {\r\n    select: infer S extends object;\r\n} & Record<string, unknown> | {\r\n    include: infer I extends object;\r\n} & Record<string, unknown> ? {\r\n    [K in keyof S | keyof I as (S & I)[K] extends false | undefined | Skip | null ? never : K]: (S & I)[K] extends object ? P extends SelectablePayloadFields<K, (infer O)[]> ? O extends OperationPayload ? GetFindResult<O, (S & I)[K], GlobalOmitOptions>[] : never : P extends SelectablePayloadFields<K, infer O | null> ? O extends OperationPayload ? GetFindResult<O, (S & I)[K], GlobalOmitOptions> | SelectField<P, K> & null : never : K extends '_count' ? Count<GetFindResult<P, (S & I)[K], GlobalOmitOptions>> : never : P extends SelectablePayloadFields<K, (infer O)[]> ? O extends OperationPayload ? DefaultSelection<O, {}, GlobalOmitOptions>[] : never : P extends SelectablePayloadFields<K, infer O | null> ? O extends OperationPayload ? DefaultSelection<O, {}, GlobalOmitOptions> | SelectField<P, K> & null : never : P extends {\r\n        scalars: {\r\n            [k in K]: infer O;\r\n        };\r\n    } ? O : K extends '_count' ? Count<P['objects']> : never;\r\n} & (A extends {\r\n    include: any;\r\n} & Record<string, unknown> ? DefaultSelection<P, A & {\r\n    omit: A['omit'];\r\n}, GlobalOmitOptions> : unknown) : DefaultSelection<P, A, GlobalOmitOptions>;\r\n\r\nexport declare type GetGroupByResult<P extends OperationPayload, A> = A extends {\r\n    by: string[];\r\n} ? Array<GetAggregateResult<P, A> & {\r\n    [K in A['by'][number]]: P['scalars'][K];\r\n}> : A extends {\r\n    by: string;\r\n} ? Array<GetAggregateResult<P, A> & {\r\n    [K in A['by']]: P['scalars'][K];\r\n}> : {}[];\r\n\r\nexport declare type GetOmit<BaseKeys extends string, R extends InternalArgs['result'][string], ExtraType = never> = {\r\n    [K in (string extends keyof R ? never : keyof R) | BaseKeys]?: boolean | ExtraType;\r\n};\r\n\r\nexport declare type GetPayloadResult<Base extends Record<any, any>, R extends InternalArgs['result'][string]> = Omit<Base, GetPayloadResultExtensionKeys<R>> & GetPayloadResultExtensionObject<R>;\r\n\r\nexport declare type GetPayloadResultExtensionKeys<R extends InternalArgs['result'][string], KR extends keyof R = string extends keyof R ? never : keyof R> = KR;\r\n\r\nexport declare type GetPayloadResultExtensionObject<R extends InternalArgs['result'][string]> = {\r\n    [K in GetPayloadResultExtensionKeys<R>]: R[K] extends () => {\r\n        compute: (...args: any) => infer C;\r\n    } ? C : never;\r\n};\r\n\r\nexport declare function getPrismaClient(config: GetPrismaClientConfig): {\r\n    new (optionsArg?: PrismaClientOptions): {\r\n        _originalClient: any;\r\n        _runtimeDataModel: RuntimeDataModel;\r\n        _requestHandler: RequestHandler;\r\n        _connectionPromise?: Promise<any> | undefined;\r\n        _disconnectionPromise?: Promise<any> | undefined;\r\n        _engineConfig: EngineConfig;\r\n        _accelerateEngineConfig: AccelerateEngineConfig;\r\n        _clientVersion: string;\r\n        _errorFormat: ErrorFormat;\r\n        _tracingHelper: TracingHelper;\r\n        _middlewares: MiddlewareHandler<QueryMiddleware>;\r\n        _previewFeatures: string[];\r\n        _activeProvider: string;\r\n        _globalOmit?: GlobalOmitOptions | undefined;\r\n        _extensions: MergedExtensionsList;\r\n        /**\r\n         * @remarks This is used internally by Policy, do not rename or remove\r\n         */\r\n        _engine: Engine;\r\n        /**\r\n         * A fully constructed/applied Client that references the parent\r\n         * PrismaClient. This is used for Client extensions only.\r\n         */\r\n        _appliedParent: any;\r\n        _createPrismaPromise: PrismaPromiseFactory;\r\n        /**\r\n         * Hook a middleware into the client\r\n         * @param middleware to hook\r\n         */\r\n        $use(middleware: QueryMiddleware): void;\r\n        $on<E extends ExtendedEventType>(eventType: E, callback: EventCallback<E>): any;\r\n        $connect(): Promise<void>;\r\n        /**\r\n         * Disconnect from the database\r\n         */\r\n        $disconnect(): Promise<void>;\r\n        /**\r\n         * Executes a raw query and always returns a number\r\n         */\r\n        $executeRawInternal(transaction: PrismaPromiseTransaction | undefined, clientMethod: string, args: RawQueryArgs, middlewareArgsMapper?: MiddlewareArgsMapper<unknown, unknown>): Promise<number>;\r\n        /**\r\n         * Executes a raw query provided through a safe tag function\r\n         * @see https://github.com/prisma/prisma/issues/7142\r\n         *\r\n         * @param query\r\n         * @param values\r\n         * @returns\r\n         */\r\n        $executeRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Unsafe counterpart of `$executeRaw` that is susceptible to SQL injections\r\n         * @see https://github.com/prisma/prisma/issues/7142\r\n         *\r\n         * @param query\r\n         * @param values\r\n         * @returns\r\n         */\r\n        $executeRawUnsafe(query: string, ...values: RawValue[]): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Executes a raw command only for MongoDB\r\n         *\r\n         * @param command\r\n         * @returns\r\n         */\r\n        $runCommandRaw(command: Record<string, JsInputValue>): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Executes a raw query and returns selected data\r\n         */\r\n        $queryRawInternal(transaction: PrismaPromiseTransaction | undefined, clientMethod: string, args: RawQueryArgs, middlewareArgsMapper?: MiddlewareArgsMapper<unknown, unknown>): Promise<any>;\r\n        /**\r\n         * Executes a raw query provided through a safe tag function\r\n         * @see https://github.com/prisma/prisma/issues/7142\r\n         *\r\n         * @param query\r\n         * @param values\r\n         * @returns\r\n         */\r\n        $queryRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Counterpart to $queryRaw, that returns strongly typed results\r\n         * @param typedSql\r\n         */\r\n        $queryRawTyped(typedSql: UnknownTypedSql): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Unsafe counterpart of `$queryRaw` that is susceptible to SQL injections\r\n         * @see https://github.com/prisma/prisma/issues/7142\r\n         *\r\n         * @param query\r\n         * @param values\r\n         * @returns\r\n         */\r\n        $queryRawUnsafe(query: string, ...values: RawValue[]): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Execute a batch of requests in a transaction\r\n         * @param requests\r\n         * @param options\r\n         */\r\n        _transactionWithArray({ promises, options, }: {\r\n            promises: Array<PrismaPromise_2<any>>;\r\n            options?: BatchTransactionOptions;\r\n        }): Promise<any>;\r\n        /**\r\n         * Perform a long-running transaction\r\n         * @param callback\r\n         * @param options\r\n         * @returns\r\n         */\r\n        _transactionWithCallback({ callback, options, }: {\r\n            callback: (client: Client) => Promise<unknown>;\r\n            options?: TransactionOptions_2;\r\n        }): Promise<unknown>;\r\n        _createItxClient(transaction: PrismaPromiseInteractiveTransaction): Client;\r\n        /**\r\n         * Execute queries within a transaction\r\n         * @param input a callback or a query list\r\n         * @param options to set timeouts (callback)\r\n         * @returns\r\n         */\r\n        $transaction(input: any, options?: any): Promise<any>;\r\n        /**\r\n         * Runs the middlewares over params before executing a request\r\n         * @param internalParams\r\n         * @returns\r\n         */\r\n        _request(internalParams: InternalRequestParams): Promise<any>;\r\n        _executeRequest({ args, clientMethod, dataPath, callsite, action, model, argsMapper, transaction, unpacker, otelParentCtx, customDataProxyFetch, }: InternalRequestParams): Promise<any>;\r\n        $metrics: MetricsClient;\r\n        /**\r\n         * Shortcut for checking a preview flag\r\n         * @param feature preview flag\r\n         * @returns\r\n         */\r\n        _hasPreviewFlag(feature: string): boolean;\r\n        $applyPendingMigrations(): Promise<void>;\r\n        $extends: typeof $extends;\r\n        readonly [Symbol.toStringTag]: string;\r\n    };\r\n};\r\n\r\n/**\r\n * Config that is stored into the generated client. When the generated client is\r\n * loaded, this same config is passed to {@link getPrismaClient} which creates a\r\n * closure with that config around a non-instantiated [[PrismaClient]].\r\n */\r\nexport declare type GetPrismaClientConfig = {\r\n    runtimeDataModel: RuntimeDataModel;\r\n    generator?: GeneratorConfig;\r\n    relativeEnvPaths?: {\r\n        rootEnvPath?: string | null;\r\n        schemaEnvPath?: string | null;\r\n    };\r\n    relativePath: string;\r\n    dirname: string;\r\n    clientVersion: string;\r\n    engineVersion: string;\r\n    datasourceNames: string[];\r\n    activeProvider: ActiveConnectorType;\r\n    /**\r\n     * The contents of the schema encoded into a string\r\n     * @remarks only used for the purpose of data proxy\r\n     */\r\n    inlineSchema: string;\r\n    /**\r\n     * A special env object just for the data proxy edge runtime.\r\n     * Allows bundlers to inject their own env variables (Vercel).\r\n     * Allows platforms to declare global variables as env (Workers).\r\n     * @remarks only used for the purpose of data proxy\r\n     */\r\n    injectableEdgeEnv?: () => LoadedEnv;\r\n    /**\r\n     * The contents of the datasource url saved in a string.\r\n     * This can either be an env var name or connection string.\r\n     * It is needed by the client to connect to the Data Proxy.\r\n     * @remarks only used for the purpose of data proxy\r\n     */\r\n    inlineDatasources: {\r\n        [name in string]: {\r\n            url: EnvValue;\r\n        };\r\n    };\r\n    /**\r\n     * The string hash that was produced for a given schema\r\n     * @remarks only used for the purpose of data proxy\r\n     */\r\n    inlineSchemaHash: string;\r\n    /**\r\n     * A marker to indicate that the client was not generated via `prisma\r\n     * generate` but was generated via `generate --postinstall` script instead.\r\n     * @remarks used to error for Vercel/Netlify for schema caching issues\r\n     */\r\n    postinstall?: boolean;\r\n    /**\r\n     * Information about the CI where the Prisma Client has been generated. The\r\n     * name of the CI environment is stored at generation time because CI\r\n     * information is not always available at runtime. Moreover, the edge client\r\n     * has no notion of environment variables, so this works around that.\r\n     * @remarks used to error for Vercel/Netlify for schema caching issues\r\n     */\r\n    ciName?: string;\r\n    /**\r\n     * Information about whether we have not found a schema.prisma file in the\r\n     * default location, and that we fell back to finding the schema.prisma file\r\n     * in the current working directory. This usually means it has been bundled.\r\n     */\r\n    isBundled?: boolean;\r\n    /**\r\n     * A boolean that is `false` when the client was generated with --no-engine. At\r\n     * runtime, this means the client will be bound to be using the Data Proxy.\r\n     */\r\n    copyEngine?: boolean;\r\n    /**\r\n     * Optional wasm loading configuration\r\n     */\r\n    engineWasm?: EngineWasmLoadingConfig;\r\n    compilerWasm?: CompilerWasmLoadingConfig;\r\n};\r\n\r\nexport declare type GetResult<Payload extends OperationPayload, Args, OperationName extends Operation = 'findUniqueOrThrow', GlobalOmitOptions = {}> = {\r\n    findUnique: GetFindResult<Payload, Args, GlobalOmitOptions> | null;\r\n    findUniqueOrThrow: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    findFirst: GetFindResult<Payload, Args, GlobalOmitOptions> | null;\r\n    findFirstOrThrow: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    findMany: GetFindResult<Payload, Args, GlobalOmitOptions>[];\r\n    create: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    createMany: GetBatchResult;\r\n    createManyAndReturn: GetFindResult<Payload, Args, GlobalOmitOptions>[];\r\n    update: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    updateMany: GetBatchResult;\r\n    updateManyAndReturn: GetFindResult<Payload, Args, GlobalOmitOptions>[];\r\n    upsert: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    delete: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    deleteMany: GetBatchResult;\r\n    aggregate: GetAggregateResult<Payload, Args>;\r\n    count: GetCountResult<Args>;\r\n    groupBy: GetGroupByResult<Payload, Args>;\r\n    $queryRaw: unknown;\r\n    $queryRawTyped: unknown;\r\n    $executeRaw: number;\r\n    $queryRawUnsafe: unknown;\r\n    $executeRawUnsafe: number;\r\n    $runCommandRaw: JsonObject;\r\n    findRaw: JsonObject;\r\n    aggregateRaw: JsonObject;\r\n}[OperationName];\r\n\r\nexport declare function getRuntime(): GetRuntimeOutput;\r\n\r\ndeclare type GetRuntimeOutput = {\r\n    id: RuntimeName;\r\n    prettyName: string;\r\n    isEdge: boolean;\r\n};\r\n\r\nexport declare type GetSelect<Base extends Record<any, any>, R extends InternalArgs['result'][string], KR extends keyof R = string extends keyof R ? never : keyof R> = {\r\n    [K in KR | keyof Base]?: K extends KR ? boolean : Base[K];\r\n};\r\n\r\ndeclare type GlobalOmitOptions = {\r\n    [modelName: string]: {\r\n        [fieldName: string]: boolean;\r\n    };\r\n};\r\n\r\ndeclare type HandleErrorParams = {\r\n    args: JsArgs;\r\n    error: any;\r\n    clientMethod: string;\r\n    callsite?: CallSite;\r\n    transaction?: PrismaPromiseTransaction;\r\n    modelName?: string;\r\n    globalOmit?: GlobalOmitOptions;\r\n};\r\n\r\ndeclare type HrTime = [number, number];\r\n\r\n/**\r\n * Defines High-Resolution Time.\r\n *\r\n * The first number, HrTime[0], is UNIX Epoch time in seconds since 00:00:00 UTC on 1 January 1970.\r\n * The second number, HrTime[1], represents the partial second elapsed since Unix Epoch time represented by first number in nanoseconds.\r\n * For example, 2021-01-01T12:30:10.150Z in UNIX Epoch time in milliseconds is represented as 1609504210150.\r\n * The first number is calculated by converting and truncating the Epoch time in milliseconds to seconds:\r\n * HrTime[0] = Math.trunc(1609504210150 / 1000) = 1609504210.\r\n * The second number is calculated by converting the digits after the decimal point of the subtraction, (1609504210150 / 1000) - HrTime[0], to nanoseconds:\r\n * HrTime[1] = Number((1609504210.150 - HrTime[0]).toFixed(9)) * 1e9 = 150000000.\r\n * This is represented in HrTime format as [1609504210, 150000000].\r\n */\r\ndeclare type HrTime_2 = [number, number];\r\n\r\ndeclare type Index = ReadonlyDeep_2<{\r\n    model: string;\r\n    type: IndexType;\r\n    isDefinedOnField: boolean;\r\n    name?: string;\r\n    dbName?: string;\r\n    algorithm?: string;\r\n    clustered?: boolean;\r\n    fields: IndexField[];\r\n}>;\r\n\r\ndeclare type IndexField = ReadonlyDeep_2<{\r\n    name: string;\r\n    sortOrder?: SortOrder;\r\n    length?: number;\r\n    operatorClass?: string;\r\n}>;\r\n\r\ndeclare type IndexType = 'id' | 'normal' | 'unique' | 'fulltext';\r\n\r\n/**\r\n * Matches a JSON array.\r\n * Unlike \\`JsonArray\\`, readonly arrays are assignable to this type.\r\n */\r\nexport declare interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {\r\n}\r\n\r\n/**\r\n * Matches a JSON object.\r\n * Unlike \\`JsonObject\\`, this type allows undefined and read-only properties.\r\n */\r\nexport declare type InputJsonObject = {\r\n    readonly [Key in string]?: InputJsonValue | null;\r\n};\r\n\r\n/**\r\n * Matches any valid value that can be used as an input for operations like\r\n * create and update as the value of a JSON field. Unlike \\`JsonValue\\`, this\r\n * type allows read-only arrays and read-only object properties and disallows\r\n * \\`null\\` at the top level.\r\n *\r\n * \\`null\\` cannot be used as the value of a JSON field because its meaning\r\n * would be ambiguous. Use \\`Prisma.JsonNull\\` to store the JSON null value or\r\n * \\`Prisma.DbNull\\` to clear the JSON value and set the field to the database\r\n * NULL value instead.\r\n *\r\n * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values\r\n */\r\nexport declare type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | {\r\n    toJSON(): unknown;\r\n};\r\n\r\ndeclare type InputType = ReadonlyDeep_2<{\r\n    name: string;\r\n    constraints: {\r\n        maxNumFields: number | null;\r\n        minNumFields: number | null;\r\n        fields?: string[];\r\n    };\r\n    meta?: {\r\n        source?: string;\r\n        grouping?: string;\r\n    };\r\n    fields: SchemaArg[];\r\n}>;\r\n\r\ndeclare type InputTypeRef = TypeRef<'scalar' | 'inputObjectTypes' | 'enumTypes' | 'fieldRefTypes'>;\r\n\r\ndeclare type InteractiveTransactionInfo<Payload = unknown> = {\r\n    /**\r\n     * Transaction ID returned by the query engine.\r\n     */\r\n    id: string;\r\n    /**\r\n     * Arbitrary payload the meaning of which depends on the `Engine` implementation.\r\n     * For example, `DataProxyEngine` needs to associate different API endpoints with transactions.\r\n     * In `LibraryEngine` and `BinaryEngine` it is currently not used.\r\n     */\r\n    payload: Payload;\r\n};\r\n\r\ndeclare type InteractiveTransactionOptions<Payload> = Transaction_2.InteractiveTransactionInfo<Payload>;\r\n\r\nexport declare type InternalArgs<R = {\r\n    [K in string]: {\r\n        [K in string]: unknown;\r\n    };\r\n}, M = {\r\n    [K in string]: {\r\n        [K in string]: unknown;\r\n    };\r\n}, Q = {\r\n    [K in string]: {\r\n        [K in string]: unknown;\r\n    };\r\n}, C = {\r\n    [K in string]: unknown;\r\n}> = {\r\n    result: {\r\n        [K in keyof R]: {\r\n            [P in keyof R[K]]: () => R[K][P];\r\n        };\r\n    };\r\n    model: {\r\n        [K in keyof M]: {\r\n            [P in keyof M[K]]: () => M[K][P];\r\n        };\r\n    };\r\n    query: {\r\n        [K in keyof Q]: {\r\n            [P in keyof Q[K]]: () => Q[K][P];\r\n        };\r\n    };\r\n    client: {\r\n        [K in keyof C]: () => C[K];\r\n    };\r\n};\r\n\r\ndeclare type InternalRequestParams = {\r\n    /**\r\n     * The original client method being called.\r\n     * Even though the rootField / operation can be changed,\r\n     * this method stays as it is, as it's what the user's\r\n     * code looks like\r\n     */\r\n    clientMethod: string;\r\n    /**\r\n     * Name of js model that triggered the request. Might be used\r\n     * for warnings or error messages\r\n     */\r\n    jsModelName?: string;\r\n    callsite?: CallSite;\r\n    transaction?: PrismaPromiseTransaction;\r\n    unpacker?: Unpacker;\r\n    otelParentCtx?: Context;\r\n    /** Used to \"desugar\" a user input into an \"expanded\" one */\r\n    argsMapper?: (args?: UserArgs_2) => UserArgs_2;\r\n    /** Used to convert args for middleware and back */\r\n    middlewareArgsMapper?: MiddlewareArgsMapper<unknown, unknown>;\r\n    /** Used for Accelerate client extension via Data Proxy */\r\n    customDataProxyFetch?: CustomDataProxyFetch;\r\n} & Omit<QueryMiddlewareParams, 'runInTransaction'>;\r\n\r\ndeclare type IsolationLevel = 'READ UNCOMMITTED' | 'READ COMMITTED' | 'REPEATABLE READ' | 'SNAPSHOT' | 'SERIALIZABLE';\r\n\r\ndeclare function isSkip(value: unknown): value is Skip;\r\n\r\nexport declare function isTypedSql(value: unknown): value is UnknownTypedSql;\r\n\r\nexport declare type ITXClientDenyList = (typeof denylist)[number];\r\n\r\nexport declare const itxClientDenyList: readonly (string | symbol)[];\r\n\r\ndeclare interface Job {\r\n    resolve: (data: any) => void;\r\n    reject: (data: any) => void;\r\n    request: any;\r\n}\r\n\r\n/**\r\n * Create a SQL query for a list of values.\r\n */\r\nexport declare function join(values: readonly RawValue[], separator?: string, prefix?: string, suffix?: string): Sql;\r\n\r\nexport declare type JsArgs = {\r\n    select?: Selection_2;\r\n    include?: Selection_2;\r\n    omit?: Omission;\r\n    [argName: string]: JsInputValue;\r\n};\r\n\r\nexport declare type JsInputValue = null | undefined | string | number | boolean | bigint | Uint8Array | Date | DecimalJsLike | ObjectEnumValue | RawParameters | JsonConvertible | FieldRef<string, unknown> | JsInputValue[] | Skip | {\r\n    [key: string]: JsInputValue;\r\n};\r\n\r\ndeclare type JsonArgumentValue = number | string | boolean | null | RawTaggedValue | JsonArgumentValue[] | {\r\n    [key: string]: JsonArgumentValue;\r\n};\r\n\r\n/**\r\n * From https://github.com/sindresorhus/type-fest/\r\n * Matches a JSON array.\r\n */\r\nexport declare interface JsonArray extends Array<JsonValue> {\r\n}\r\n\r\nexport declare type JsonBatchQuery = {\r\n    batch: JsonQuery[];\r\n    transaction?: {\r\n        isolationLevel?: IsolationLevel;\r\n    };\r\n};\r\n\r\nexport declare interface JsonConvertible {\r\n    toJSON(): unknown;\r\n}\r\n\r\ndeclare type JsonFieldSelection = {\r\n    arguments?: Record<string, JsonArgumentValue> | RawTaggedValue;\r\n    selection: JsonSelectionSet;\r\n};\r\n\r\ndeclare class JsonNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\n/**\r\n * From https://github.com/sindresorhus/type-fest/\r\n * Matches a JSON object.\r\n * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from.\r\n */\r\nexport declare type JsonObject = {\r\n    [Key in string]?: JsonValue;\r\n};\r\n\r\nexport declare type JsonQuery = {\r\n    modelName?: string;\r\n    action: JsonQueryAction;\r\n    query: JsonFieldSelection;\r\n};\r\n\r\ndeclare type JsonQueryAction = 'findUnique' | 'findUniqueOrThrow' | 'findFirst' | 'findFirstOrThrow' | 'findMany' | 'createOne' | 'createMany' | 'createManyAndReturn' | 'updateOne' | 'updateMany' | 'updateManyAndReturn' | 'deleteOne' | 'deleteMany' | 'upsertOne' | 'aggregate' | 'groupBy' | 'executeRaw' | 'queryRaw' | 'runCommandRaw' | 'findRaw' | 'aggregateRaw';\r\n\r\ndeclare type JsonSelectionSet = {\r\n    $scalars?: boolean;\r\n    $composites?: boolean;\r\n} & {\r\n    [fieldName: string]: boolean | JsonFieldSelection;\r\n};\r\n\r\n/**\r\n * From https://github.com/sindresorhus/type-fest/\r\n * Matches any valid JSON value.\r\n */\r\nexport declare type JsonValue = string | number | boolean | JsonObject | JsonArray | null;\r\n\r\nexport declare type JsOutputValue = null | string | number | boolean | bigint | Uint8Array | Date | Decimal | JsOutputValue[] | {\r\n    [key: string]: JsOutputValue;\r\n};\r\n\r\nexport declare type JsPromise<T> = Promise<T> & {};\r\n\r\ndeclare type KnownErrorParams = {\r\n    code: string;\r\n    clientVersion: string;\r\n    meta?: Record<string, unknown>;\r\n    batchRequestIdx?: number;\r\n};\r\n\r\n/**\r\n * A pointer from the current {@link Span} to another span in the same trace or\r\n * in a different trace.\r\n * Few examples of Link usage.\r\n * 1. Batch Processing: A batch of elements may contain elements associated\r\n *    with one or more traces/spans. Since there can only be one parent\r\n *    SpanContext, Link is used to keep reference to SpanContext of all\r\n *    elements in the batch.\r\n * 2. Public Endpoint: A SpanContext in incoming client request on a public\r\n *    endpoint is untrusted from service provider perspective. In such case it\r\n *    is advisable to start a new trace with appropriate sampling decision.\r\n *    However, it is desirable to associate incoming SpanContext to new trace\r\n *    initiated on service provider side so two traces (from Client and from\r\n *    Service Provider) can be correlated.\r\n */\r\ndeclare interface Link {\r\n    /** The {@link SpanContext} of a linked span. */\r\n    context: SpanContext;\r\n    /** A set of {@link SpanAttributes} on the link. */\r\n    attributes?: SpanAttributes;\r\n    /** Count of attributes of the link that were dropped due to collection limits */\r\n    droppedAttributesCount?: number;\r\n}\r\n\r\ndeclare type LoadedEnv = {\r\n    message?: string;\r\n    parsed: {\r\n        [x: string]: string;\r\n    };\r\n} | undefined;\r\n\r\ndeclare type LocationInFile = {\r\n    fileName: string;\r\n    lineNumber: number | null;\r\n    columnNumber: number | null;\r\n};\r\n\r\ndeclare type LogDefinition = {\r\n    level: LogLevel;\r\n    emit: 'stdout' | 'event';\r\n};\r\n\r\n/**\r\n * Typings for the events we emit.\r\n *\r\n * @remarks\r\n * If this is updated, our edge runtime shim needs to be updated as well.\r\n */\r\ndeclare type LogEmitter = {\r\n    on<E extends EngineEventType>(event: E, listener: (event: EngineEvent<E>) => void): LogEmitter;\r\n    emit(event: QueryEventType, payload: QueryEvent): boolean;\r\n    emit(event: LogEventType, payload: LogEvent): boolean;\r\n};\r\n\r\ndeclare type LogEvent = {\r\n    timestamp: Date;\r\n    message: string;\r\n    target: string;\r\n};\r\n\r\ndeclare type LogEventType = 'info' | 'warn' | 'error';\r\n\r\ndeclare type LogLevel = 'info' | 'query' | 'warn' | 'error';\r\n\r\n/**\r\n * Generates more strict variant of an enum which, unlike regular enum,\r\n * throws on non-existing property access. This can be useful in following situations:\r\n * - we have an API, that accepts both `undefined` and `SomeEnumType` as an input\r\n * - enum values are generated dynamically from DMMF.\r\n *\r\n * In that case, if using normal enums and no compile-time typechecking, using non-existing property\r\n * will result in `undefined` value being used, which will be accepted. Using strict enum\r\n * in this case will help to have a runtime exception, telling you that you are probably doing something wrong.\r\n *\r\n * Note: if you need to check for existence of a value in the enum you can still use either\r\n * `in` operator or `hasOwnProperty` function.\r\n *\r\n * @param definition\r\n * @returns\r\n */\r\nexport declare function makeStrictEnum<T extends Record<PropertyKey, string | number>>(definition: T): T;\r\n\r\nexport declare function makeTypedQueryFactory(sql: string): (...values: any[]) => TypedSql<any[], unknown>;\r\n\r\ndeclare type Mappings = ReadonlyDeep_2<{\r\n    modelOperations: ModelMapping[];\r\n    otherOperations: {\r\n        read: string[];\r\n        write: string[];\r\n    };\r\n}>;\r\n\r\n/**\r\n * Class that holds the list of all extensions, applied to particular instance,\r\n * as well as resolved versions of the components that need to apply on\r\n * different levels. Main idea of this class: avoid re-resolving as much of the\r\n * stuff as possible when new extensions are added while also delaying the\r\n * resolve until the point it is actually needed. For example, computed fields\r\n * of the model won't be resolved unless the model is actually queried. Neither\r\n * adding extensions with `client` component only cause other components to\r\n * recompute.\r\n */\r\ndeclare class MergedExtensionsList {\r\n    private head?;\r\n    private constructor();\r\n    static empty(): MergedExtensionsList;\r\n    static single(extension: ExtensionArgs): MergedExtensionsList;\r\n    isEmpty(): boolean;\r\n    append(extension: ExtensionArgs): MergedExtensionsList;\r\n    getAllComputedFields(dmmfModelName: string): ComputedFieldsMap | undefined;\r\n    getAllClientExtensions(): ClientArg | undefined;\r\n    getAllModelExtensions(dmmfModelName: string): ModelArg | undefined;\r\n    getAllQueryCallbacks(jsModelName: string, operation: string): any;\r\n    getAllBatchQueryCallbacks(): BatchQueryOptionsCb[];\r\n}\r\n\r\nexport declare type MergeExtArgs<TypeMap extends TypeMapDef, ExtArgs extends Record<any, any>, Args extends Record<any, any>> = ComputeDeep<ExtArgs & Args & AllModelsToStringIndex<TypeMap, Args, 'result'> & AllModelsToStringIndex<TypeMap, Args, 'model'>>;\r\n\r\nexport declare type Metric<T> = {\r\n    key: string;\r\n    value: T;\r\n    labels: Record<string, string>;\r\n    description: string;\r\n};\r\n\r\nexport declare type MetricHistogram = {\r\n    buckets: MetricHistogramBucket[];\r\n    sum: number;\r\n    count: number;\r\n};\r\n\r\nexport declare type MetricHistogramBucket = [maxValue: number, count: number];\r\n\r\nexport declare type Metrics = {\r\n    counters: Metric<number>[];\r\n    gauges: Metric<number>[];\r\n    histograms: Metric<MetricHistogram>[];\r\n};\r\n\r\nexport declare class MetricsClient {\r\n    private _client;\r\n    constructor(client: Client);\r\n    /**\r\n     * Returns all metrics gathered up to this point in prometheus format.\r\n     * Result of this call can be exposed directly to prometheus scraping endpoint\r\n     *\r\n     * @param options\r\n     * @returns\r\n     */\r\n    prometheus(options?: MetricsOptions): Promise<string>;\r\n    /**\r\n     * Returns all metrics gathered up to this point in prometheus format.\r\n     *\r\n     * @param options\r\n     * @returns\r\n     */\r\n    json(options?: MetricsOptions): Promise<Metrics>;\r\n}\r\n\r\ndeclare type MetricsOptions = {\r\n    /**\r\n     * Labels to add to every metrics in key-value format\r\n     */\r\n    globalLabels?: Record<string, string>;\r\n};\r\n\r\ndeclare type MetricsOptionsCommon = {\r\n    globalLabels?: Record<string, string>;\r\n};\r\n\r\ndeclare type MetricsOptionsJson = {\r\n    format: 'json';\r\n} & MetricsOptionsCommon;\r\n\r\ndeclare type MetricsOptionsPrometheus = {\r\n    format: 'prometheus';\r\n} & MetricsOptionsCommon;\r\n\r\ndeclare type MiddlewareArgsMapper<RequestArgs, MiddlewareArgs> = {\r\n    requestArgsToMiddlewareArgs(requestArgs: RequestArgs): MiddlewareArgs;\r\n    middlewareArgsToRequestArgs(middlewareArgs: MiddlewareArgs): RequestArgs;\r\n};\r\n\r\ndeclare class MiddlewareHandler<M extends Function> {\r\n    private _middlewares;\r\n    use(middleware: M): void;\r\n    get(id: number): M | undefined;\r\n    has(id: number): boolean;\r\n    length(): number;\r\n}\r\n\r\ndeclare type Model = ReadonlyDeep_2<{\r\n    name: string;\r\n    dbName: string | null;\r\n    schema: string | null;\r\n    fields: Field[];\r\n    uniqueFields: string[][];\r\n    uniqueIndexes: uniqueIndex[];\r\n    documentation?: string;\r\n    primaryKey: PrimaryKey | null;\r\n    isGenerated?: boolean;\r\n}>;\r\n\r\ndeclare enum ModelAction {\r\n    findUnique = \"findUnique\",\r\n    findUniqueOrThrow = \"findUniqueOrThrow\",\r\n    findFirst = \"findFirst\",\r\n    findFirstOrThrow = \"findFirstOrThrow\",\r\n    findMany = \"findMany\",\r\n    create = \"create\",\r\n    createMany = \"createMany\",\r\n    createManyAndReturn = \"createManyAndReturn\",\r\n    update = \"update\",\r\n    updateMany = \"updateMany\",\r\n    updateManyAndReturn = \"updateManyAndReturn\",\r\n    upsert = \"upsert\",\r\n    delete = \"delete\",\r\n    deleteMany = \"deleteMany\",\r\n    groupBy = \"groupBy\",\r\n    count = \"count\",// TODO: count does not actually exist in DMMF\r\n    aggregate = \"aggregate\",\r\n    findRaw = \"findRaw\",\r\n    aggregateRaw = \"aggregateRaw\"\r\n}\r\n\r\nexport declare type ModelArg = {\r\n    [MethodName in string]: unknown;\r\n};\r\n\r\nexport declare type ModelArgs = {\r\n    model: {\r\n        [ModelName in string]: ModelArg;\r\n    };\r\n};\r\n\r\nexport declare type ModelKey<TypeMap extends TypeMapDef, M extends PropertyKey> = M extends keyof TypeMap['model'] ? M : Capitalize<M & string>;\r\n\r\ndeclare type ModelMapping = ReadonlyDeep_2<{\r\n    model: string;\r\n    plural: string;\r\n    findUnique?: string | null;\r\n    findUniqueOrThrow?: string | null;\r\n    findFirst?: string | null;\r\n    findFirstOrThrow?: string | null;\r\n    findMany?: string | null;\r\n    create?: string | null;\r\n    createMany?: string | null;\r\n    createManyAndReturn?: string | null;\r\n    update?: string | null;\r\n    updateMany?: string | null;\r\n    updateManyAndReturn?: string | null;\r\n    upsert?: string | null;\r\n    delete?: string | null;\r\n    deleteMany?: string | null;\r\n    aggregate?: string | null;\r\n    groupBy?: string | null;\r\n    count?: string | null;\r\n    findRaw?: string | null;\r\n    aggregateRaw?: string | null;\r\n}>;\r\n\r\nexport declare type ModelQueryOptionsCb = (args: ModelQueryOptionsCbArgs) => Promise<any>;\r\n\r\nexport declare type ModelQueryOptionsCbArgs = {\r\n    model: string;\r\n    operation: string;\r\n    args: JsArgs;\r\n    query: (args: JsArgs) => Promise<unknown>;\r\n};\r\n\r\ndeclare type MultiBatchResponse = {\r\n    type: 'multi';\r\n    plans: object[];\r\n};\r\n\r\nexport declare type NameArgs = {\r\n    name?: string;\r\n};\r\n\r\nexport declare type Narrow<A> = {\r\n    [K in keyof A]: A[K] extends Function ? A[K] : Narrow<A[K]>;\r\n} | (A extends Narrowable ? A : never);\r\n\r\nexport declare type Narrowable = string | number | bigint | boolean | [];\r\n\r\nexport declare type NeverToUnknown<T> = [T] extends [never] ? unknown : T;\r\n\r\ndeclare class NullTypesEnumValue extends ObjectEnumValue {\r\n    _getNamespace(): string;\r\n}\r\n\r\n/**\r\n * Base class for unique values of object-valued enums.\r\n */\r\nexport declare abstract class ObjectEnumValue {\r\n    constructor(arg?: symbol);\r\n    abstract _getNamespace(): string;\r\n    _getName(): string;\r\n    toString(): string;\r\n}\r\n\r\nexport declare const objectEnumValues: {\r\n    classes: {\r\n        DbNull: typeof DbNull;\r\n        JsonNull: typeof JsonNull;\r\n        AnyNull: typeof AnyNull;\r\n    };\r\n    instances: {\r\n        DbNull: DbNull;\r\n        JsonNull: JsonNull;\r\n        AnyNull: AnyNull;\r\n    };\r\n};\r\n\r\ndeclare const officialPrismaAdapters: readonly [\"@prisma/adapter-planetscale\", \"@prisma/adapter-neon\", \"@prisma/adapter-libsql\", \"@prisma/adapter-d1\", \"@prisma/adapter-pg\", \"@prisma/adapter-pg-worker\"];\r\n\r\nexport declare type Omission = Record<string, boolean | Skip>;\r\n\r\ndeclare type Omit_2<T, K extends string | number | symbol> = {\r\n    [P in keyof T as P extends K ? never : P]: T[P];\r\n};\r\nexport { Omit_2 as Omit }\r\n\r\nexport declare type OmitValue<Omit, Key> = Key extends keyof Omit ? Omit[Key] : false;\r\n\r\nexport declare type Operation = 'findFirst' | 'findFirstOrThrow' | 'findUnique' | 'findUniqueOrThrow' | 'findMany' | 'create' | 'createMany' | 'createManyAndReturn' | 'update' | 'updateMany' | 'updateManyAndReturn' | 'upsert' | 'delete' | 'deleteMany' | 'aggregate' | 'count' | 'groupBy' | '$queryRaw' | '$executeRaw' | '$queryRawUnsafe' | '$executeRawUnsafe' | 'findRaw' | 'aggregateRaw' | '$runCommandRaw';\r\n\r\nexport declare type OperationPayload = {\r\n    name: string;\r\n    scalars: {\r\n        [ScalarName in string]: unknown;\r\n    };\r\n    objects: {\r\n        [ObjectName in string]: unknown;\r\n    };\r\n    composites: {\r\n        [CompositeName in string]: unknown;\r\n    };\r\n};\r\n\r\nexport declare type Optional<O, K extends keyof any = keyof O> = {\r\n    [P in K & keyof O]?: O[P];\r\n} & {\r\n    [P in Exclude<keyof O, K>]: O[P];\r\n};\r\n\r\nexport declare type OptionalFlat<T> = {\r\n    [K in keyof T]?: T[K];\r\n};\r\n\r\nexport declare type OptionalKeys<O> = {\r\n    [K in keyof O]-?: {} extends Pick_2<O, K> ? K : never;\r\n}[keyof O];\r\n\r\ndeclare type Options = {\r\n    clientVersion: string;\r\n};\r\n\r\nexport declare type Or<A extends 1 | 0, B extends 1 | 0> = {\r\n    0: {\r\n        0: 0;\r\n        1: 1;\r\n    };\r\n    1: {\r\n        0: 1;\r\n        1: 1;\r\n    };\r\n}[A][B];\r\n\r\ndeclare type OtherOperationMappings = ReadonlyDeep_2<{\r\n    read: string[];\r\n    write: string[];\r\n}>;\r\n\r\ndeclare type OutputType = ReadonlyDeep_2<{\r\n    name: string;\r\n    fields: SchemaField[];\r\n}>;\r\n\r\ndeclare type OutputTypeRef = TypeRef<'scalar' | 'outputObjectTypes' | 'enumTypes'>;\r\n\r\nexport declare function Param<$Type, $Value extends string>(name: $Value): Param<$Type, $Value>;\r\n\r\nexport declare type Param<out $Type, $Value extends string> = {\r\n    readonly name: $Value;\r\n};\r\n\r\nexport declare type PatchFlat<O1, O2> = O1 & Omit_2<O2, keyof O1>;\r\n\r\nexport declare type Path<O, P, Default = never> = O extends unknown ? P extends [infer K, ...infer R] ? K extends keyof O ? Path<O[K], R> : Default : O : never;\r\n\r\nexport declare type Payload<T, F extends Operation = never> = T extends {\r\n    [K: symbol]: {\r\n        types: {\r\n            payload: any;\r\n        };\r\n    };\r\n} ? T[symbol]['types']['payload'] : any;\r\n\r\nexport declare type PayloadToResult<P, O extends Record_2<any, any> = RenameAndNestPayloadKeys<P>> = {\r\n    [K in keyof O]?: O[K][K] extends any[] ? PayloadToResult<O[K][K][number]>[] : O[K][K] extends object ? PayloadToResult<O[K][K]> : O[K][K];\r\n};\r\n\r\ndeclare type Pick_2<T, K extends string | number | symbol> = {\r\n    [P in keyof T as P extends K ? P : never]: T[P];\r\n};\r\nexport { Pick_2 as Pick }\r\n\r\ndeclare type PrimaryKey = ReadonlyDeep_2<{\r\n    name: string | null;\r\n    fields: string[];\r\n}>;\r\n\r\nexport declare class PrismaClientInitializationError extends Error {\r\n    clientVersion: string;\r\n    errorCode?: string;\r\n    retryable?: boolean;\r\n    constructor(message: string, clientVersion: string, errorCode?: string);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\nexport declare class PrismaClientKnownRequestError extends Error implements ErrorWithBatchIndex {\r\n    code: string;\r\n    meta?: Record<string, unknown>;\r\n    clientVersion: string;\r\n    batchRequestIdx?: number;\r\n    constructor(message: string, { code, clientVersion, meta, batchRequestIdx }: KnownErrorParams);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\nexport declare type PrismaClientOptions = {\r\n    /**\r\n     * Overwrites the primary datasource url from your schema.prisma file\r\n     */\r\n    datasourceUrl?: string;\r\n    /**\r\n     * Instance of a Driver Adapter, e.g., like one provided by `@prisma/adapter-planetscale.\r\n     */\r\n    adapter?: SqlDriverAdapterFactory | null;\r\n    /**\r\n     * Overwrites the datasource url from your schema.prisma file\r\n     */\r\n    datasources?: Datasources;\r\n    /**\r\n     * @default \"colorless\"\r\n     */\r\n    errorFormat?: ErrorFormat;\r\n    /**\r\n     * The default values for Transaction options\r\n     * maxWait ?= 2000\r\n     * timeout ?= 5000\r\n     */\r\n    transactionOptions?: Transaction_2.Options;\r\n    /**\r\n     * @example\r\n     * \\`\\`\\`\r\n     * // Defaults to stdout\r\n     * log: ['query', 'info', 'warn']\r\n     *\r\n     * // Emit as events\r\n     * log: [\r\n     *  { emit: 'stdout', level: 'query' },\r\n     *  { emit: 'stdout', level: 'info' },\r\n     *  { emit: 'stdout', level: 'warn' }\r\n     * ]\r\n     * \\`\\`\\`\r\n     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).\r\n     */\r\n    log?: Array<LogLevel | LogDefinition>;\r\n    omit?: GlobalOmitOptions;\r\n    /**\r\n     * @internal\r\n     * You probably don't want to use this. \\`__internal\\` is used by internal tooling.\r\n     */\r\n    __internal?: {\r\n        debug?: boolean;\r\n        engine?: {\r\n            cwd?: string;\r\n            binaryPath?: string;\r\n            endpoint?: string;\r\n            allowTriggerPanic?: boolean;\r\n        };\r\n        /** This can be used for testing purposes */\r\n        configOverride?: (config: GetPrismaClientConfig) => GetPrismaClientConfig;\r\n    };\r\n};\r\n\r\nexport declare class PrismaClientRustPanicError extends Error {\r\n    clientVersion: string;\r\n    constructor(message: string, clientVersion: string);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\nexport declare class PrismaClientUnknownRequestError extends Error implements ErrorWithBatchIndex {\r\n    clientVersion: string;\r\n    batchRequestIdx?: number;\r\n    constructor(message: string, { clientVersion, batchRequestIdx }: UnknownErrorParams);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\nexport declare class PrismaClientValidationError extends Error {\r\n    name: string;\r\n    clientVersion: string;\r\n    constructor(message: string, { clientVersion }: Options);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\ndeclare function prismaGraphQLToJSError({ error, user_facing_error }: RequestError, clientVersion: string, activeProvider: string): PrismaClientKnownRequestError | PrismaClientUnknownRequestError;\r\n\r\ndeclare type PrismaOperationSpec<TArgs, TAction = string> = {\r\n    args: TArgs;\r\n    action: TAction;\r\n    model: string;\r\n};\r\n\r\nexport declare interface PrismaPromise<T> extends Promise<T> {\r\n    [Symbol.toStringTag]: 'PrismaPromise';\r\n}\r\n\r\n/**\r\n * Prisma's `Promise` that is backwards-compatible. All additions on top of the\r\n * original `Promise` are optional so that it can be backwards-compatible.\r\n * @see [[createPrismaPromise]]\r\n */\r\ndeclare interface PrismaPromise_2<TResult, TSpec extends PrismaOperationSpec<unknown> = any> extends Promise<TResult> {\r\n    get spec(): TSpec;\r\n    /**\r\n     * Extension of the original `.then` function\r\n     * @param onfulfilled same as regular promises\r\n     * @param onrejected same as regular promises\r\n     * @param transaction transaction options\r\n     */\r\n    then<R1 = TResult, R2 = never>(onfulfilled?: (value: TResult) => R1 | PromiseLike<R1>, onrejected?: (error: unknown) => R2 | PromiseLike<R2>, transaction?: PrismaPromiseTransaction): Promise<R1 | R2>;\r\n    /**\r\n     * Extension of the original `.catch` function\r\n     * @param onrejected same as regular promises\r\n     * @param transaction transaction options\r\n     */\r\n    catch<R = never>(onrejected?: ((reason: any) => R | PromiseLike<R>) | undefined | null, transaction?: PrismaPromiseTransaction): Promise<TResult | R>;\r\n    /**\r\n     * Extension of the original `.finally` function\r\n     * @param onfinally same as regular promises\r\n     * @param transaction transaction options\r\n     */\r\n    finally(onfinally?: (() => void) | undefined | null, transaction?: PrismaPromiseTransaction): Promise<TResult>;\r\n    /**\r\n     * Called when executing a batch of regular tx\r\n     * @param transaction transaction options for batch tx\r\n     */\r\n    requestTransaction?(transaction: PrismaPromiseBatchTransaction): PromiseLike<unknown>;\r\n}\r\n\r\ndeclare type PrismaPromiseBatchTransaction = {\r\n    kind: 'batch';\r\n    id: number;\r\n    isolationLevel?: IsolationLevel;\r\n    index: number;\r\n    lock: PromiseLike<void>;\r\n};\r\n\r\ndeclare type PrismaPromiseCallback = (transaction?: PrismaPromiseTransaction) => Promise<unknown>;\r\n\r\n/**\r\n * Creates a [[PrismaPromise]]. It is Prisma's implementation of `Promise` which\r\n * is essentially a proxy for `Promise`. All the transaction-compatible client\r\n * methods return one, this allows for pre-preparing queries without executing\r\n * them until `.then` is called. It's the foundation of Prisma's query batching.\r\n * @param callback that will be wrapped within our promise implementation\r\n * @see [[PrismaPromise]]\r\n * @returns\r\n */\r\ndeclare type PrismaPromiseFactory = <T extends PrismaOperationSpec<unknown>>(callback: PrismaPromiseCallback, op?: T) => PrismaPromise_2<unknown>;\r\n\r\ndeclare type PrismaPromiseInteractiveTransaction<PayloadType = unknown> = {\r\n    kind: 'itx';\r\n    id: string;\r\n    payload: PayloadType;\r\n};\r\n\r\ndeclare type PrismaPromiseTransaction<PayloadType = unknown> = PrismaPromiseBatchTransaction | PrismaPromiseInteractiveTransaction<PayloadType>;\r\n\r\nexport declare const PrivateResultType: unique symbol;\r\n\r\ndeclare type Provider = 'mysql' | 'postgres' | 'sqlite';\r\n\r\ndeclare namespace Public {\r\n    export {\r\n        validator\r\n    }\r\n}\r\nexport { Public }\r\n\r\ndeclare namespace Public_2 {\r\n    export {\r\n        Args,\r\n        Result,\r\n        Payload,\r\n        PrismaPromise,\r\n        Operation,\r\n        Exact\r\n    }\r\n}\r\n\r\ndeclare type Query = ReadonlyDeep_2<{\r\n    name: string;\r\n    args: SchemaArg[];\r\n    output: QueryOutput;\r\n}>;\r\n\r\ndeclare interface Queryable<Query, Result> extends AdapterInfo {\r\n    /**\r\n     * Execute a query and return its result.\r\n     */\r\n    queryRaw(params: Query): Promise<Result>;\r\n    /**\r\n     * Execute a query and return the number of affected rows.\r\n     */\r\n    executeRaw(params: Query): Promise<number>;\r\n}\r\n\r\ndeclare type QueryCompiler = {\r\n    compile(request: string): string;\r\n    compileBatch(batchRequest: string): BatchResponse;\r\n};\r\n\r\ndeclare interface QueryCompilerConstructor {\r\n    new (options: QueryCompilerOptions): QueryCompiler;\r\n}\r\n\r\ndeclare type QueryCompilerOptions = {\r\n    datamodel: string;\r\n    provider: Provider;\r\n    connectionInfo: ConnectionInfo;\r\n};\r\n\r\ndeclare type QueryEngineBatchGraphQLRequest = {\r\n    batch: QueryEngineRequest[];\r\n    transaction?: boolean;\r\n    isolationLevel?: IsolationLevel;\r\n};\r\n\r\ndeclare type QueryEngineBatchRequest = QueryEngineBatchGraphQLRequest | JsonBatchQuery;\r\n\r\ndeclare type QueryEngineConfig = {\r\n    datamodel: string;\r\n    configDir: string;\r\n    logQueries: boolean;\r\n    ignoreEnvVarErrors: boolean;\r\n    datasourceOverrides: Record<string, string>;\r\n    env: Record<string, string | undefined>;\r\n    logLevel: QueryEngineLogLevel;\r\n    engineProtocol: QueryEngineProtocol;\r\n    enableTracing: boolean;\r\n};\r\n\r\ndeclare interface QueryEngineConstructor {\r\n    new (config: QueryEngineConfig, logger: (log: string) => void, adapter?: ErrorCapturingSqlDriverAdapter): QueryEngineInstance;\r\n}\r\n\r\ndeclare type QueryEngineInstance = {\r\n    connect(headers: string, requestId: string): Promise<void>;\r\n    disconnect(headers: string, requestId: string): Promise<void>;\r\n    /**\r\n     * @param requestStr JSON.stringified `QueryEngineRequest | QueryEngineBatchRequest`\r\n     * @param headersStr JSON.stringified `QueryEngineRequestHeaders`\r\n     */\r\n    query(requestStr: string, headersStr: string, transactionId: string | undefined, requestId: string): Promise<string>;\r\n    sdlSchema?(): Promise<string>;\r\n    startTransaction(options: string, traceHeaders: string, requestId: string): Promise<string>;\r\n    commitTransaction(id: string, traceHeaders: string, requestId: string): Promise<string>;\r\n    rollbackTransaction(id: string, traceHeaders: string, requestId: string): Promise<string>;\r\n    metrics?(options: string): Promise<string>;\r\n    applyPendingMigrations?(): Promise<void>;\r\n    trace(requestId: string): Promise<string | null>;\r\n};\r\n\r\ndeclare type QueryEngineLogLevel = 'trace' | 'debug' | 'info' | 'warn' | 'error' | 'off';\r\n\r\ndeclare type QueryEngineProtocol = 'graphql' | 'json';\r\n\r\ndeclare type QueryEngineRequest = {\r\n    query: string;\r\n    variables: Object;\r\n};\r\n\r\ndeclare type QueryEngineResultData<T> = {\r\n    data: T;\r\n};\r\n\r\ndeclare type QueryEvent = {\r\n    timestamp: Date;\r\n    query: string;\r\n    params: string;\r\n    duration: number;\r\n    target: string;\r\n};\r\n\r\ndeclare type QueryEventType = 'query';\r\n\r\ndeclare type QueryIntrospectionBuiltinType = 'int' | 'bigint' | 'float' | 'double' | 'string' | 'enum' | 'bytes' | 'bool' | 'char' | 'decimal' | 'json' | 'xml' | 'uuid' | 'datetime' | 'date' | 'time' | 'int-array' | 'bigint-array' | 'float-array' | 'double-array' | 'string-array' | 'char-array' | 'bytes-array' | 'bool-array' | 'decimal-array' | 'json-array' | 'xml-array' | 'uuid-array' | 'datetime-array' | 'date-array' | 'time-array' | 'null' | 'unknown';\r\n\r\ndeclare type QueryMiddleware = (params: QueryMiddlewareParams, next: (params: QueryMiddlewareParams) => Promise<unknown>) => Promise<unknown>;\r\n\r\ndeclare type QueryMiddlewareParams = {\r\n    /** The model this is executed on */\r\n    model?: string;\r\n    /** The action that is being handled */\r\n    action: Action;\r\n    /** TODO what is this */\r\n    dataPath: string[];\r\n    /** TODO what is this */\r\n    runInTransaction: boolean;\r\n    args?: UserArgs_2;\r\n};\r\n\r\nexport declare type QueryOptions = {\r\n    query: {\r\n        [ModelName in string]: {\r\n            [ModelAction in string]: ModelQueryOptionsCb;\r\n        } | QueryOptionsCb;\r\n    };\r\n};\r\n\r\nexport declare type QueryOptionsCb = (args: QueryOptionsCbArgs) => Promise<any>;\r\n\r\nexport declare type QueryOptionsCbArgs = {\r\n    model?: string;\r\n    operation: string;\r\n    args: JsArgs | RawQueryArgs;\r\n    query: (args: JsArgs | RawQueryArgs) => Promise<unknown>;\r\n};\r\n\r\ndeclare type QueryOutput = ReadonlyDeep_2<{\r\n    name: string;\r\n    isRequired: boolean;\r\n    isList: boolean;\r\n}>;\r\n\r\n/**\r\n * Create raw SQL statement.\r\n */\r\nexport declare function raw(value: string): Sql;\r\n\r\nexport declare type RawParameters = {\r\n    __prismaRawParameters__: true;\r\n    values: string;\r\n};\r\n\r\nexport declare type RawQueryArgs = Sql | UnknownTypedSql | [query: string, ...values: RawValue[]];\r\n\r\ndeclare type RawResponse = {\r\n    columns: string[];\r\n    types: QueryIntrospectionBuiltinType[];\r\n    rows: unknown[][];\r\n};\r\n\r\ndeclare type RawTaggedValue = {\r\n    $type: 'Raw';\r\n    value: unknown;\r\n};\r\n\r\n/**\r\n * Supported value or SQL instance.\r\n */\r\nexport declare type RawValue = Value | Sql;\r\n\r\nexport declare type ReadonlyDeep<T> = {\r\n    readonly [K in keyof T]: ReadonlyDeep<T[K]>;\r\n};\r\n\r\ndeclare type ReadonlyDeep_2<O> = {\r\n    +readonly [K in keyof O]: ReadonlyDeep_2<O[K]>;\r\n};\r\n\r\ndeclare type Record_2<T extends string | number | symbol, U> = {\r\n    [P in T]: U;\r\n};\r\nexport { Record_2 as Record }\r\n\r\nexport declare type RenameAndNestPayloadKeys<P> = {\r\n    [K in keyof P as K extends 'scalars' | 'objects' | 'composites' ? keyof P[K] : never]: P[K];\r\n};\r\n\r\ndeclare type RequestBatchOptions<InteractiveTransactionPayload> = {\r\n    transaction?: TransactionOptions_3<InteractiveTransactionPayload>;\r\n    traceparent?: string;\r\n    numTry?: number;\r\n    containsWrite: boolean;\r\n    customDataProxyFetch?: CustomDataProxyFetch;\r\n};\r\n\r\ndeclare interface RequestError {\r\n    error: string;\r\n    user_facing_error: {\r\n        is_panic: boolean;\r\n        message: string;\r\n        meta?: Record<string, unknown>;\r\n        error_code?: string;\r\n        batch_request_idx?: number;\r\n    };\r\n}\r\n\r\ndeclare class RequestHandler {\r\n    client: Client;\r\n    dataloader: DataLoader<RequestParams>;\r\n    private logEmitter?;\r\n    constructor(client: Client, logEmitter?: LogEmitter);\r\n    request(params: RequestParams): Promise<any>;\r\n    mapQueryEngineResult({ dataPath, unpacker }: RequestParams, response: QueryEngineResultData<any>): any;\r\n    /**\r\n     * Handles the error and logs it, logging the error is done synchronously waiting for the event\r\n     * handlers to finish.\r\n     */\r\n    handleAndLogRequestError(params: HandleErrorParams): never;\r\n    handleRequestError({ error, clientMethod, callsite, transaction, args, modelName, globalOmit, }: HandleErrorParams): never;\r\n    sanitizeMessage(message: any): any;\r\n    unpack(data: unknown, dataPath: string[], unpacker?: Unpacker): any;\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\ndeclare type RequestOptions<InteractiveTransactionPayload> = {\r\n    traceparent?: string;\r\n    numTry?: number;\r\n    interactiveTransaction?: InteractiveTransactionOptions<InteractiveTransactionPayload>;\r\n    isWrite: boolean;\r\n    customDataProxyFetch?: CustomDataProxyFetch;\r\n};\r\n\r\ndeclare type RequestParams = {\r\n    modelName?: string;\r\n    action: Action;\r\n    protocolQuery: JsonQuery;\r\n    dataPath: string[];\r\n    clientMethod: string;\r\n    callsite?: CallSite;\r\n    transaction?: PrismaPromiseTransaction;\r\n    extensions: MergedExtensionsList;\r\n    args?: any;\r\n    headers?: Record<string, string>;\r\n    unpacker?: Unpacker;\r\n    otelParentCtx?: Context;\r\n    otelChildCtx?: Context;\r\n    globalOmit?: GlobalOmitOptions;\r\n    customDataProxyFetch?: CustomDataProxyFetch;\r\n};\r\n\r\ndeclare type RequiredExtensionArgs = NameArgs & ResultArgs & ModelArgs & ClientArgs & QueryOptions;\r\nexport { RequiredExtensionArgs }\r\nexport { RequiredExtensionArgs as UserArgs }\r\n\r\nexport declare type RequiredKeys<O> = {\r\n    [K in keyof O]-?: {} extends Pick_2<O, K> ? never : K;\r\n}[keyof O];\r\n\r\ndeclare function resolveDatasourceUrl({ inlineDatasources, overrideDatasources, env, clientVersion, }: {\r\n    inlineDatasources: GetPrismaClientConfig['inlineDatasources'];\r\n    overrideDatasources: Datasources;\r\n    env: Record<string, string | undefined>;\r\n    clientVersion: string;\r\n}): string;\r\n\r\nexport declare type Result<T, A, F extends Operation> = T extends {\r\n    [K: symbol]: {\r\n        types: {\r\n            payload: any;\r\n        };\r\n    };\r\n} ? GetResult<T[symbol]['types']['payload'], A, F> : GetResult<{\r\n    composites: {};\r\n    objects: {};\r\n    scalars: {};\r\n    name: '';\r\n}, {}, F>;\r\n\r\nexport declare type Result_2<T, A, F extends Operation> = Result<T, A, F>;\r\n\r\ndeclare namespace Result_3 {\r\n    export {\r\n        Count,\r\n        GetFindResult,\r\n        SelectablePayloadFields,\r\n        SelectField,\r\n        DefaultSelection,\r\n        UnwrapPayload,\r\n        ApplyOmit,\r\n        OmitValue,\r\n        GetCountResult,\r\n        Aggregate,\r\n        GetAggregateResult,\r\n        GetBatchResult,\r\n        GetGroupByResult,\r\n        GetResult,\r\n        ExtractGlobalOmit\r\n    }\r\n}\r\n\r\ndeclare type Result_4<T> = {\r\n    map<U>(fn: (value: T) => U): Result_4<U>;\r\n    flatMap<U>(fn: (value: T) => Result_4<U>): Result_4<U>;\r\n} & ({\r\n    readonly ok: true;\r\n    readonly value: T;\r\n} | {\r\n    readonly ok: false;\r\n    readonly error: Error_2;\r\n});\r\n\r\nexport declare type ResultArg = {\r\n    [FieldName in string]: ResultFieldDefinition;\r\n};\r\n\r\nexport declare type ResultArgs = {\r\n    result: {\r\n        [ModelName in string]: ResultArg;\r\n    };\r\n};\r\n\r\nexport declare type ResultArgsFieldCompute = (model: any) => unknown;\r\n\r\nexport declare type ResultFieldDefinition = {\r\n    needs?: {\r\n        [FieldName in string]: boolean;\r\n    };\r\n    compute: ResultArgsFieldCompute;\r\n};\r\n\r\nexport declare type Return<T> = T extends (...args: any[]) => infer R ? R : T;\r\n\r\nexport declare type RuntimeDataModel = {\r\n    readonly models: Record<string, RuntimeModel>;\r\n    readonly enums: Record<string, RuntimeEnum>;\r\n    readonly types: Record<string, RuntimeModel>;\r\n};\r\n\r\ndeclare type RuntimeEnum = Omit<DMMF_2.DatamodelEnum, 'name'>;\r\n\r\ndeclare type RuntimeModel = Omit<DMMF_2.Model, 'name'>;\r\n\r\ndeclare type RuntimeName = 'workerd' | 'deno' | 'netlify' | 'node' | 'bun' | 'edge-light' | '';\r\n\r\ndeclare type Schema = ReadonlyDeep_2<{\r\n    rootQueryType?: string;\r\n    rootMutationType?: string;\r\n    inputObjectTypes: {\r\n        model?: InputType[];\r\n        prisma: InputType[];\r\n    };\r\n    outputObjectTypes: {\r\n        model: OutputType[];\r\n        prisma: OutputType[];\r\n    };\r\n    enumTypes: {\r\n        model?: SchemaEnum[];\r\n        prisma: SchemaEnum[];\r\n    };\r\n    fieldRefTypes: {\r\n        prisma?: FieldRefType[];\r\n    };\r\n}>;\r\n\r\ndeclare type SchemaArg = ReadonlyDeep_2<{\r\n    name: string;\r\n    comment?: string;\r\n    isNullable: boolean;\r\n    isRequired: boolean;\r\n    inputTypes: InputTypeRef[];\r\n    deprecation?: Deprecation;\r\n}>;\r\n\r\ndeclare type SchemaEnum = ReadonlyDeep_2<{\r\n    name: string;\r\n    values: string[];\r\n}>;\r\n\r\ndeclare type SchemaField = ReadonlyDeep_2<{\r\n    name: string;\r\n    isNullable?: boolean;\r\n    outputType: OutputTypeRef;\r\n    args: SchemaArg[];\r\n    deprecation?: Deprecation;\r\n    documentation?: string;\r\n}>;\r\n\r\nexport declare type Select<T, U> = T extends U ? T : never;\r\n\r\nexport declare type SelectablePayloadFields<K extends PropertyKey, O> = {\r\n    objects: {\r\n        [k in K]: O;\r\n    };\r\n} | {\r\n    composites: {\r\n        [k in K]: O;\r\n    };\r\n};\r\n\r\nexport declare type SelectField<P extends SelectablePayloadFields<any, any>, K extends PropertyKey> = P extends {\r\n    objects: Record<K, any>;\r\n} ? P['objects'][K] : P extends {\r\n    composites: Record<K, any>;\r\n} ? P['composites'][K] : never;\r\n\r\ndeclare type Selection_2 = Record<string, boolean | Skip | JsArgs>;\r\nexport { Selection_2 as Selection }\r\n\r\nexport declare function serializeJsonQuery({ modelName, action, args, runtimeDataModel, extensions, callsite, clientMethod, errorFormat, clientVersion, previewFeatures, globalOmit, }: SerializeParams): JsonQuery;\r\n\r\ndeclare type SerializeParams = {\r\n    runtimeDataModel: RuntimeDataModel;\r\n    modelName?: string;\r\n    action: Action;\r\n    args?: JsArgs;\r\n    extensions?: MergedExtensionsList;\r\n    callsite?: CallSite;\r\n    clientMethod: string;\r\n    clientVersion: string;\r\n    errorFormat: ErrorFormat;\r\n    previewFeatures: string[];\r\n    globalOmit?: GlobalOmitOptions;\r\n};\r\n\r\ndeclare class Skip {\r\n    constructor(param?: symbol);\r\n    ifUndefined<T>(value: T | undefined): T | Skip;\r\n}\r\n\r\nexport declare const skip: Skip;\r\n\r\ndeclare type SortOrder = 'asc' | 'desc';\r\n\r\n/**\r\n * An interface that represents a span. A span represents a single operation\r\n * within a trace. Examples of span might include remote procedure calls or a\r\n * in-process function calls to sub-components. A Trace has a single, top-level\r\n * \"root\" Span that in turn may have zero or more child Spans, which in turn\r\n * may have children.\r\n *\r\n * Spans are created by the {@link Tracer.startSpan} method.\r\n */\r\ndeclare interface Span {\r\n    /**\r\n     * Returns the {@link SpanContext} object associated with this Span.\r\n     *\r\n     * Get an immutable, serializable identifier for this span that can be used\r\n     * to create new child spans. Returned SpanContext is usable even after the\r\n     * span ends.\r\n     *\r\n     * @returns the SpanContext object associated with this Span.\r\n     */\r\n    spanContext(): SpanContext;\r\n    /**\r\n     * Sets an attribute to the span.\r\n     *\r\n     * Sets a single Attribute with the key and value passed as arguments.\r\n     *\r\n     * @param key the key for this attribute.\r\n     * @param value the value for this attribute. Setting a value null or\r\n     *              undefined is invalid and will result in undefined behavior.\r\n     */\r\n    setAttribute(key: string, value: SpanAttributeValue): this;\r\n    /**\r\n     * Sets attributes to the span.\r\n     *\r\n     * @param attributes the attributes that will be added.\r\n     *                   null or undefined attribute values\r\n     *                   are invalid and will result in undefined behavior.\r\n     */\r\n    setAttributes(attributes: SpanAttributes): this;\r\n    /**\r\n     * Adds an event to the Span.\r\n     *\r\n     * @param name the name of the event.\r\n     * @param [attributesOrStartTime] the attributes that will be added; these are\r\n     *     associated with this event. Can be also a start time\r\n     *     if type is {@type TimeInput} and 3rd param is undefined\r\n     * @param [startTime] start time of the event.\r\n     */\r\n    addEvent(name: string, attributesOrStartTime?: SpanAttributes | TimeInput, startTime?: TimeInput): this;\r\n    /**\r\n     * Adds a single link to the span.\r\n     *\r\n     * Links added after the creation will not affect the sampling decision.\r\n     * It is preferred span links be added at span creation.\r\n     *\r\n     * @param link the link to add.\r\n     */\r\n    addLink(link: Link): this;\r\n    /**\r\n     * Adds multiple links to the span.\r\n     *\r\n     * Links added after the creation will not affect the sampling decision.\r\n     * It is preferred span links be added at span creation.\r\n     *\r\n     * @param links the links to add.\r\n     */\r\n    addLinks(links: Link[]): this;\r\n    /**\r\n     * Sets a status to the span. If used, this will override the default Span\r\n     * status. Default is {@link SpanStatusCode.UNSET}. SetStatus overrides the value\r\n     * of previous calls to SetStatus on the Span.\r\n     *\r\n     * @param status the SpanStatus to set.\r\n     */\r\n    setStatus(status: SpanStatus): this;\r\n    /**\r\n     * Updates the Span name.\r\n     *\r\n     * This will override the name provided via {@link Tracer.startSpan}.\r\n     *\r\n     * Upon this update, any sampling behavior based on Span name will depend on\r\n     * the implementation.\r\n     *\r\n     * @param name the Span name.\r\n     */\r\n    updateName(name: string): this;\r\n    /**\r\n     * Marks the end of Span execution.\r\n     *\r\n     * Call to End of a Span MUST not have any effects on child spans. Those may\r\n     * still be running and can be ended later.\r\n     *\r\n     * Do not return `this`. The Span generally should not be used after it\r\n     * is ended so chaining is not desired in this context.\r\n     *\r\n     * @param [endTime] the time to set as Span's end time. If not provided,\r\n     *     use the current time as the span's end time.\r\n     */\r\n    end(endTime?: TimeInput): void;\r\n    /**\r\n     * Returns the flag whether this span will be recorded.\r\n     *\r\n     * @returns true if this Span is active and recording information like events\r\n     *     with the `AddEvent` operation and attributes using `setAttributes`.\r\n     */\r\n    isRecording(): boolean;\r\n    /**\r\n     * Sets exception as a span event\r\n     * @param exception the exception the only accepted values are string or Error\r\n     * @param [time] the time to set as Span's event time. If not provided,\r\n     *     use the current time.\r\n     */\r\n    recordException(exception: Exception, time?: TimeInput): void;\r\n}\r\n\r\n/**\r\n * @deprecated please use {@link Attributes}\r\n */\r\ndeclare type SpanAttributes = Attributes;\r\n\r\n/**\r\n * @deprecated please use {@link AttributeValue}\r\n */\r\ndeclare type SpanAttributeValue = AttributeValue;\r\n\r\ndeclare type SpanCallback<R> = (span?: Span, context?: Context) => R;\r\n\r\n/**\r\n * A SpanContext represents the portion of a {@link Span} which must be\r\n * serialized and propagated along side of a {@link Baggage}.\r\n */\r\ndeclare interface SpanContext {\r\n    /**\r\n     * The ID of the trace that this span belongs to. It is worldwide unique\r\n     * with practically sufficient probability by being made as 16 randomly\r\n     * generated bytes, encoded as a 32 lowercase hex characters corresponding to\r\n     * 128 bits.\r\n     */\r\n    traceId: string;\r\n    /**\r\n     * The ID of the Span. It is globally unique with practically sufficient\r\n     * probability by being made as 8 randomly generated bytes, encoded as a 16\r\n     * lowercase hex characters corresponding to 64 bits.\r\n     */\r\n    spanId: string;\r\n    /**\r\n     * Only true if the SpanContext was propagated from a remote parent.\r\n     */\r\n    isRemote?: boolean;\r\n    /**\r\n     * Trace flags to propagate.\r\n     *\r\n     * It is represented as 1 byte (bitmap). Bit to represent whether trace is\r\n     * sampled or not. When set, the least significant bit documents that the\r\n     * caller may have recorded trace data. A caller who does not record trace\r\n     * data out-of-band leaves this flag unset.\r\n     *\r\n     * see {@link TraceFlags} for valid flag values.\r\n     */\r\n    traceFlags: number;\r\n    /**\r\n     * Tracing-system-specific info to propagate.\r\n     *\r\n     * The tracestate field value is a `list` as defined below. The `list` is a\r\n     * series of `list-members` separated by commas `,`, and a list-member is a\r\n     * key/value pair separated by an equals sign `=`. Spaces and horizontal tabs\r\n     * surrounding `list-members` are ignored. There can be a maximum of 32\r\n     * `list-members` in a `list`.\r\n     * More Info: https://www.w3.org/TR/trace-context/#tracestate-field\r\n     *\r\n     * Examples:\r\n     *     Single tracing system (generic format):\r\n     *         tracestate: rojo=00f067aa0ba902b7\r\n     *     Multiple tracing systems (with different formatting):\r\n     *         tracestate: rojo=00f067aa0ba902b7,congo=t61rcWkgMzE\r\n     */\r\n    traceState?: TraceState;\r\n}\r\n\r\ndeclare enum SpanKind {\r\n    /** Default value. Indicates that the span is used internally. */\r\n    INTERNAL = 0,\r\n    /**\r\n     * Indicates that the span covers server-side handling of an RPC or other\r\n     * remote request.\r\n     */\r\n    SERVER = 1,\r\n    /**\r\n     * Indicates that the span covers the client-side wrapper around an RPC or\r\n     * other remote request.\r\n     */\r\n    CLIENT = 2,\r\n    /**\r\n     * Indicates that the span describes producer sending a message to a\r\n     * broker. Unlike client and server, there is no direct critical path latency\r\n     * relationship between producer and consumer spans.\r\n     */\r\n    PRODUCER = 3,\r\n    /**\r\n     * Indicates that the span describes consumer receiving a message from a\r\n     * broker. Unlike client and server, there is no direct critical path latency\r\n     * relationship between producer and consumer spans.\r\n     */\r\n    CONSUMER = 4\r\n}\r\n\r\n/**\r\n * Options needed for span creation\r\n */\r\ndeclare interface SpanOptions {\r\n    /**\r\n     * The SpanKind of a span\r\n     * @default {@link SpanKind.INTERNAL}\r\n     */\r\n    kind?: SpanKind;\r\n    /** A span's attributes */\r\n    attributes?: SpanAttributes;\r\n    /** {@link Link}s span to other spans */\r\n    links?: Link[];\r\n    /** A manually specified start time for the created `Span` object. */\r\n    startTime?: TimeInput;\r\n    /** The new span should be a root span. (Ignore parent from context). */\r\n    root?: boolean;\r\n}\r\n\r\ndeclare interface SpanStatus {\r\n    /** The status code of this message. */\r\n    code: SpanStatusCode;\r\n    /** A developer-facing error message. */\r\n    message?: string;\r\n}\r\n\r\n/**\r\n * An enumeration of status codes.\r\n */\r\ndeclare enum SpanStatusCode {\r\n    /**\r\n     * The default status.\r\n     */\r\n    UNSET = 0,\r\n    /**\r\n     * The operation has been validated by an Application developer or\r\n     * Operator to have completed successfully.\r\n     */\r\n    OK = 1,\r\n    /**\r\n     * The operation contains an error.\r\n     */\r\n    ERROR = 2\r\n}\r\n\r\n/**\r\n * A SQL instance can be nested within each other to build SQL strings.\r\n */\r\nexport declare class Sql {\r\n    readonly values: Value[];\r\n    readonly strings: string[];\r\n    constructor(rawStrings: readonly string[], rawValues: readonly RawValue[]);\r\n    get sql(): string;\r\n    get statement(): string;\r\n    get text(): string;\r\n    inspect(): {\r\n        sql: string;\r\n        statement: string;\r\n        text: string;\r\n        values: unknown[];\r\n    };\r\n}\r\n\r\ndeclare interface SqlDriverAdapter extends SqlQueryable {\r\n    /**\r\n     * Execute multiple SQL statements separated by semicolon.\r\n     */\r\n    executeScript(script: string): Promise<void>;\r\n    /**\r\n     * Start new transaction.\r\n     */\r\n    startTransaction(isolationLevel?: IsolationLevel): Promise<Transaction>;\r\n    /**\r\n     * Optional method that returns extra connection info\r\n     */\r\n    getConnectionInfo?(): ConnectionInfo;\r\n    /**\r\n     * Dispose of the connection and release any resources.\r\n     */\r\n    dispose(): Promise<void>;\r\n}\r\n\r\nexport declare interface SqlDriverAdapterFactory extends DriverAdapterFactory<SqlQuery, SqlResultSet> {\r\n    connect(): Promise<SqlDriverAdapter>;\r\n}\r\n\r\ndeclare type SqlQuery = {\r\n    sql: string;\r\n    args: Array<unknown>;\r\n    argTypes: Array<ArgType>;\r\n};\r\n\r\ndeclare interface SqlQueryable extends Queryable<SqlQuery, SqlResultSet> {\r\n}\r\n\r\ndeclare interface SqlResultSet {\r\n    /**\r\n     * List of column types appearing in a database query, in the same order as `columnNames`.\r\n     * They are used within the Query Engine to convert values from JS to Quaint values.\r\n     */\r\n    columnTypes: Array<ColumnType>;\r\n    /**\r\n     * List of column names appearing in a database query, in the same order as `columnTypes`.\r\n     */\r\n    columnNames: Array<string>;\r\n    /**\r\n     * List of rows retrieved from a database query.\r\n     * Each row is a list of values, whose length matches `columnNames` and `columnTypes`.\r\n     */\r\n    rows: Array<Array<unknown>>;\r\n    /**\r\n     * The last ID of an `INSERT` statement, if any.\r\n     * This is required for `AUTO_INCREMENT` columns in databases based on MySQL and SQLite.\r\n     */\r\n    lastInsertId?: string;\r\n}\r\n\r\n/**\r\n * Create a SQL object from a template string.\r\n */\r\nexport declare function sqltag(strings: readonly string[], ...values: readonly RawValue[]): Sql;\r\n\r\n/**\r\n * Defines TimeInput.\r\n *\r\n * hrtime, epoch milliseconds, performance.now() or Date\r\n */\r\ndeclare type TimeInput = HrTime_2 | number | Date;\r\n\r\nexport declare type ToTuple<T> = T extends any[] ? T : [T];\r\n\r\ndeclare interface TraceState {\r\n    /**\r\n     * Create a new TraceState which inherits from this TraceState and has the\r\n     * given key set.\r\n     * The new entry will always be added in the front of the list of states.\r\n     *\r\n     * @param key key of the TraceState entry.\r\n     * @param value value of the TraceState entry.\r\n     */\r\n    set(key: string, value: string): TraceState;\r\n    /**\r\n     * Return a new TraceState which inherits from this TraceState but does not\r\n     * contain the given key.\r\n     *\r\n     * @param key the key for the TraceState entry to be removed.\r\n     */\r\n    unset(key: string): TraceState;\r\n    /**\r\n     * Returns the value to which the specified key is mapped, or `undefined` if\r\n     * this map contains no mapping for the key.\r\n     *\r\n     * @param key with which the specified value is to be associated.\r\n     * @returns the value to which the specified key is mapped, or `undefined` if\r\n     *     this map contains no mapping for the key.\r\n     */\r\n    get(key: string): string | undefined;\r\n    /**\r\n     * Serializes the TraceState to a `list` as defined below. The `list` is a\r\n     * series of `list-members` separated by commas `,`, and a list-member is a\r\n     * key/value pair separated by an equals sign `=`. Spaces and horizontal tabs\r\n     * surrounding `list-members` are ignored. There can be a maximum of 32\r\n     * `list-members` in a `list`.\r\n     *\r\n     * @returns the serialized string.\r\n     */\r\n    serialize(): string;\r\n}\r\n\r\ndeclare interface TracingHelper {\r\n    isEnabled(): boolean;\r\n    getTraceParent(context?: Context): string;\r\n    dispatchEngineSpans(spans: EngineSpan[]): void;\r\n    getActiveContext(): Context | undefined;\r\n    runInChildSpan<R>(nameOrOptions: string | ExtendedSpanOptions, callback: SpanCallback<R>): R;\r\n}\r\n\r\ndeclare interface Transaction extends AdapterInfo, SqlQueryable {\r\n    /**\r\n     * Transaction options.\r\n     */\r\n    readonly options: TransactionOptions;\r\n    /**\r\n     * Commit the transaction.\r\n     */\r\n    commit(): Promise<void>;\r\n    /**\r\n     * Roll back the transaction.\r\n     */\r\n    rollback(): Promise<void>;\r\n}\r\n\r\ndeclare namespace Transaction_2 {\r\n    export {\r\n        TransactionOptions_2 as Options,\r\n        InteractiveTransactionInfo,\r\n        TransactionHeaders\r\n    }\r\n}\r\n\r\ndeclare type TransactionHeaders = {\r\n    traceparent?: string;\r\n};\r\n\r\ndeclare type TransactionOptions = {\r\n    usePhantomQuery: boolean;\r\n};\r\n\r\ndeclare type TransactionOptions_2 = {\r\n    maxWait?: number;\r\n    timeout?: number;\r\n    isolationLevel?: IsolationLevel;\r\n};\r\n\r\ndeclare type TransactionOptions_3<InteractiveTransactionPayload> = {\r\n    kind: 'itx';\r\n    options: InteractiveTransactionOptions<InteractiveTransactionPayload>;\r\n} | {\r\n    kind: 'batch';\r\n    options: BatchTransactionOptions;\r\n};\r\n\r\nexport declare class TypedSql<Values extends readonly unknown[], Result> {\r\n    [PrivateResultType]: Result;\r\n    constructor(sql: string, values: Values);\r\n    get sql(): string;\r\n    get values(): Values;\r\n}\r\n\r\nexport declare type TypeMapCbDef = Fn<{\r\n    extArgs: InternalArgs;\r\n}, TypeMapDef>;\r\n\r\n/** Shared */\r\nexport declare type TypeMapDef = Record<any, any>;\r\n\r\ndeclare type TypeRef<AllowedLocations extends FieldLocation> = {\r\n    isList: boolean;\r\n    type: string;\r\n    location: AllowedLocations;\r\n    namespace?: FieldNamespace;\r\n};\r\n\r\ndeclare namespace Types {\r\n    export {\r\n        Result_3 as Result,\r\n        Extensions_2 as Extensions,\r\n        Utils,\r\n        Public_2 as Public,\r\n        isSkip,\r\n        Skip,\r\n        skip,\r\n        UnknownTypedSql,\r\n        OperationPayload as Payload\r\n    }\r\n}\r\nexport { Types }\r\n\r\ndeclare type uniqueIndex = ReadonlyDeep_2<{\r\n    name: string;\r\n    fields: string[];\r\n}>;\r\n\r\ndeclare type UnknownErrorParams = {\r\n    clientVersion: string;\r\n    batchRequestIdx?: number;\r\n};\r\n\r\nexport declare type UnknownTypedSql = TypedSql<unknown[], unknown>;\r\n\r\ndeclare type Unpacker = (data: any) => any;\r\n\r\nexport declare type UnwrapPayload<P> = {} extends P ? unknown : {\r\n    [K in keyof P]: P[K] extends {\r\n        scalars: infer S;\r\n        composites: infer C;\r\n    }[] ? Array<S & UnwrapPayload<C>> : P[K] extends {\r\n        scalars: infer S;\r\n        composites: infer C;\r\n    } | null ? S & UnwrapPayload<C> | Select<P[K], null> : never;\r\n};\r\n\r\nexport declare type UnwrapPromise<P> = P extends Promise<infer R> ? R : P;\r\n\r\nexport declare type UnwrapTuple<Tuple extends readonly unknown[]> = {\r\n    [K in keyof Tuple]: K extends `${number}` ? Tuple[K] extends PrismaPromise<infer X> ? X : UnwrapPromise<Tuple[K]> : UnwrapPromise<Tuple[K]>;\r\n};\r\n\r\n/**\r\n * Input that flows from the user into the Client.\r\n */\r\ndeclare type UserArgs_2 = any;\r\n\r\ndeclare namespace Utils {\r\n    export {\r\n        EmptyToUnknown,\r\n        NeverToUnknown,\r\n        PatchFlat,\r\n        Omit_2 as Omit,\r\n        Pick_2 as Pick,\r\n        ComputeDeep,\r\n        Compute,\r\n        OptionalFlat,\r\n        ReadonlyDeep,\r\n        Narrowable,\r\n        Narrow,\r\n        Exact,\r\n        Cast,\r\n        Record_2 as Record,\r\n        UnwrapPromise,\r\n        UnwrapTuple,\r\n        Path,\r\n        Fn,\r\n        Call,\r\n        RequiredKeys,\r\n        OptionalKeys,\r\n        Optional,\r\n        Return,\r\n        ToTuple,\r\n        RenameAndNestPayloadKeys,\r\n        PayloadToResult,\r\n        Select,\r\n        Equals,\r\n        Or,\r\n        JsPromise\r\n    }\r\n}\r\n\r\ndeclare function validator<V>(): <S>(select: Exact<S, V>) => S;\r\n\r\ndeclare function validator<C, M extends Exclude<keyof C, `$${string}`>, O extends keyof C[M] & Operation>(client: C, model: M, operation: O): <S>(select: Exact<S, Args<C[M], O>>) => S;\r\n\r\ndeclare function validator<C, M extends Exclude<keyof C, `$${string}`>, O extends keyof C[M] & Operation, P extends keyof Args<C[M], O>>(client: C, model: M, operation: O, prop: P): <S>(select: Exact<S, Args<C[M], O>[P]>) => S;\r\n\r\n/**\r\n * Values supported by SQL engine.\r\n */\r\nexport declare type Value = unknown;\r\n\r\nexport declare function warnEnvConflicts(envPaths: any): void;\r\n\r\nexport declare const warnOnce: (key: string, message: string, ...args: unknown[]) => void;\r\n\r\nexport { }\r\n",
        "node_modules/.prisma/client/wasm.d.ts": "export * from \"./index\"",
        "node_modules/@prisma/client/index.d.ts": "export * from '.prisma/client/default'"
      },
      "document": "# Prisma Markdown\n\n> Generated by [`prisma-markdown`](https://github.com/samchon/prisma-markdown)\n\n- [Core](#core)\n- [Discussion](#discussion)\n- [Engagement](#engagement)\n- [Moderation](#moderation)\n- [Analytics](#analytics)\n- [Utility](#utility)\n- [default](#default)\n\n## Core\n\n```mermaid\nerDiagram\n\"discussion_board_users\" {\n  String id PK\n  String username UK\n  String email UK\n  String password_hash\n  Boolean is_active\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"discussion_board_guests\" {\n  String id PK\n  String session_id\n  String ip_address\n  String user_agent \"nullable\"\n  DateTime accessed_at\n}\n\"discussion_board_moderators\" {\n  String id PK\n  String user_id FK,UK\n  Boolean is_active\n  DateTime assigned_at\n  DateTime revoked_at \"nullable\"\n}\n\"discussion_board_admins\" {\n  String id PK\n  String user_id FK,UK\n  Boolean is_active\n  DateTime assigned_at\n  DateTime revoked_at \"nullable\"\n}\n\"discussion_board_user_profiles\" {\n  String id PK\n  String user_id FK,UK\n  String display_name \"nullable\"\n  String(80000) avatar_url \"nullable\"\n  String bio \"nullable\"\n  String badges \"nullable\"\n}\n\"discussion_board_user_settings\" {\n  String id PK\n  String user_id FK,UK\n  Boolean notification_email\n  Boolean notification_in_app\n  String accessibility_mode \"nullable\"\n  String display_density \"nullable\"\n}\n\"discussion_board_moderators\" |o--|| \"discussion_board_users\" : fk_discussion_board_moderators_user_id_discussion_board_users_id\n\"discussion_board_admins\" |o--|| \"discussion_board_users\" : fk_discussion_board_admins_user_id_discussion_board_users_id\n\"discussion_board_user_profiles\" |o--|| \"discussion_board_users\" : fk_discussion_board_user_profiles_user_id_discussion_board_users_id\n\"discussion_board_user_settings\" |o--|| \"discussion_board_users\" : fk_discussion_board_user_settings_user_id_discussion_board_users_id\n```\n\n### `discussion_board_users`\n\nUser Accounts - This implements the requirement for individual user accounts, supporting registration, authentication, and all user-related auditability. \n\nProvides foundational user representation for all feature requirements involving user actions (posts, comments, votes, favorites, reports). Maintains full 3NF compliance by storing only atomic user identity attributes, with all other aspects normalized into related tables. For example, user display data and settings are not stored here but in dedicated profile/settings tables.\n\nKey relationships: Connects to [discussion_board_user_profiles](#discussion_board_user_profiles), [discussion_board_user_settings](#discussion_board_user_settings), thread/posts/comments. \nSpecial behaviors: Uniqueness enforced on email/username; supports audit trails without calculated fields.\n\nProperties as follows:\n\n- `id`\n  > Primary Key - Implements unique identification per user.\n  > Ensures 1NF and 3NF by uniquely identifying each user record. All business relationships and entity references use this UUID.\n  > For example, a user's posts or profile will reference this id.\n- `username`\n  > Username - Implements unique, human-friendly identifier for sign-in and public presence. Satisfies requirement for user authentication and personalized identifiers.\n  > Maintains 3NF by storing as atomic value; not duplicated elsewhere. For example, used to mention users in threads.\n- `email`\n  > Email - Implements unique login credential and notification address, required for registration, password recovery, and business operations involving communication.\n  > Ensures 3NF and security compliance by isolating PII to core user record. Format validated as email. For example, delivery of account recovery links or notifications.\n- `password_hash`\n  > Password Hash - Implements security requirements for credential storage.\n  > Contains only the securely hashed password, never the raw value. Maintains 3NF by being strictly an atomic credential. For example, used on authentication attempt checks.\n- `is_active`\n  > Active Flag - Supports account enable/disable flow as required by admin/moderation policies.\n  > Maintains normalization (3NF) by not encoding user status elsewhere. For example, a suspended user is marked inactive here.\n- `created_at`\n  > Created Timestamp - Represents the time of user registration. Implements requirement for audit trail and account lifecycle analysis.\n  > Atomic, non-calculated field in strict 3NF. Example: find all accounts registered in a given period.\n- `updated_at`\n  > Last Updated Timestamp - Tracks last mutation of user record (e.g., profile update, password change).\n  > Fulfills audit, compliance, and operational needs. Normalized, atomic. Used for detecting recently changed accounts.\n- `deleted_at`\n  > Soft Delete Timestamp - Implements requirement for recoverable account deletion.\n  > Nullable. When set, the user is logically deleted for compliance or user-right-to-be-forgotten scenarios. No denormalization.\n\n### `discussion_board_guests`\n\nGuest Access Logs - Implements the requirement to record unauthenticated/guest accesses per compliance and analytics goals. \nStores only atomic guest event records; does not duplicate user account data. Maintains 3NF: each row is a simple access instance, not historical aggregation.\nKey relationships: No foreign keys to the users table; all-inbound guest access.\nSpecial behaviors: Used only for analytic/compliance reporting; not authentication.\n\nProperties as follows:\n\n- `id`: Primary Key - Uniquely identifies a guest log record. 1NF and 3NF by strict atomic reference.\n- `session_id`: Session Identifier - Supports tracking unique anonymous accesses (session cookies or device id). Implements analytics requirements for guest activity. 3NF by atomicity. Example: Counting unique guests per day.\n- `ip_address`: IP Address - Logs guest's origin IP for compliance, abuse tracking, and analytics. 3NF compliance; not duplicated elsewhere. Ex: Used in abuse response.\n- `user_agent`: User Agent - Logs browser/device for guest session; optional for additional analytics. Stays atomic and complies with 3NF.\n- `accessed_at`: Timestamp of Access - Enforces audit requirements; strictly atomic. Usage: Analytics, abuse tracing, auditing guest surges.\n\n### `discussion_board_moderators`\n\nModerator Roles - This model implements the requirement for moderator user assignment, privilege tracking, and role audit. \nRepresents the logical bridge between core user record and their moderator status, maintaining 3NF by not duplicating user identity or other profile information. For example, a user is assigned moderator status by being present in this table.\nKey relationships: FK to [discussion_board_users](#discussion_board_users), logs all who have or have had moderator role.\nSpecial behaviors: Historical tracking (active, demoted) possible without denormalization.\n\nProperties as follows:\n\n- `id`: Primary Key - Unique per moderator assignment record; strictly atomic and 3NF.\n- `user_id`: Foreign Key to User - Indicates which user is/was assigned as a moderator. Enforces role membership as normalized, not duplicated data. Enforced 1:N relationship: one user can have zero or one moderator assignments.\n- `is_active`: Moderator Active Flag - Indicates whether the user currently holds moderator privileges. Implements requirement for role suspension, auditing role status history. Maintains normalization by not storing redundant role data elsewhere.\n- `assigned_at`: Timestamp of Role Assignment - Tracks when user was assigned moderator role. 3NF: pure atomic audit value.\n- `revoked_at`: Timestamp of Role Revocation - Implements tracking for demoted/expired moderator roles, for compliance, audit, and operational review. Nullable, stays 3NF.\n\n### `discussion_board_admins`\n\nAdministrator Roles - Implements explicit administrator account linkage for full-system privileges, as required for configuration, user management, and audit purposes. 3NF: role assignment not duplicating user record.\n\nKey relationships: Links to [discussion_board_users](#discussion_board_users) (user account), supports operational distinction between admins and other roles.\nSpecial behaviors: Admin privileges conferred strictly by row existence, supporting audit via assigned_at/revoked_at.\n\nProperties as follows:\n\n- `id`: Primary Key - Unique per admin record, ensures atomic audit trail of admin privilege granting/revoking.\n- `user_id`: User Foreign Key - The user granted admin privileges. Maintains normalization: admin status never duplicated in other tables.\n- `is_active`: Admin Status Flag - States whether admin privileges currently apply. Implements requirement for manageability and operational security controls.\n- `assigned_at`: Grant Timestamp - When privileges were activated. Maintains 3NF: atomic, unambiguous role tracking.\n- `revoked_at`: Revoked Timestamp - Supports audit/review of former admins, and system security compliance. Nullable, no denormalized roll-ups.\n\n### `discussion_board_user_profiles`\n\nUser Profiles - Implements the requirement for extended, public-facing user information, as distinct from credentials. \nSupports profile fields (display name, avatar, bio, badges) and community metrics, strictly normalized and not duplicating data from users or settings. 3NF guaranteed: one profile per user, no pre-computed/aggregated fields stored here. Ex: upvote totals in views only.\n\nKey relationships: FK to [discussion_board_users](#discussion_board_users), exactly one per user.\nSpecial behaviors: Updates do not affect credentials or privacy settings.\n\nProperties as follows:\n\n- `id`: Primary Key - Unique for each profile, used for linking profile data to user. Ensures record atomicity.\n- `user_id`: User Foreign Key - Connects profile data precisely to its user account. Enforces 1:1 user-profile mapping.\n- `display_name`: Display Name - Optional, user-customizable nickname for display. 3NF atomic field; example: public boards may show only this.\n- `avatar_url`: Avatar URI - Optional, image URL for profile picture. Maintains normalization; avatar is not stored in user, settings, or duplicated elsewhere.\n- `bio`: User Biography - Optional, free-form text for interests, expertise or statements. 3NF: non-aggregated, not used for computation.\n- `badges`: User Badges - Optional, serialized badge list. 3NF, atomic per user (badge aggregation handled in materialized views as needed). Example: Displaying earned badges.\n\n### `discussion_board_user_settings`\n\nUser Settings - Implements private, user-specific preferences and configuration (notification opt-in, accessibility, display, etc.). Normalized to ensure no redundant storage in user, profile, or role tables. Purely atomic per preference field; no rollups or calculated values.\n\nKey relationships: FK to [discussion_board_users](#discussion_board_users), strictly 1:1 mapping.\nSpecial behaviors: Updating settings does not affect user credentials or profile.\n\nProperties as follows:\n\n- `id`: Primary Key - Single settings record per user. Guarantees atomic, normalized storage without data duplication.\n- `user_id`: User Foreign Key - Connects each settings record uniquely to a user. Guarantees 1:1 mapping.\n- `notification_email`: Email Notification Opt-in - Whether the user wants to receive email notifications. Implements a requirement for user controllable notification preferences; strictly atomic.\n- `notification_in_app`: In-app Notification Opt-in - User choice to receive in-app platform notifications. Normalized; no duplication.\n- `accessibility_mode`: Accessibility Mode Setting - User choice for accessibility features (e.g., 'high_contrast', 'screen_reader'). Null if default. 3NF, atomic setting for UI/UX compliance.\n- `display_density`: Display Density Setting - User preferences for compact or spacious UI layouts. Atomic and normalized.\n\n## Discussion\n\n```mermaid\nerDiagram\n\"discussion_board_thread\" {\n  String id PK\n  String creator_user_id FK\n  String category_id FK\n  String title\n  String body\n  Boolean is_locked\n  Boolean is_pinned\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"discussion_board_post\" {\n  String id PK\n  String thread_id FK\n  String author_user_id FK\n  String parent_post_id FK \"nullable\"\n  String body\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"discussion_board_comment\" {\n  String id PK\n  String post_id FK\n  String author_user_id FK\n  String parent_comment_id FK \"nullable\"\n  String body\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"discussion_board_thread_tag\" {\n  String id PK\n  String thread_id FK\n  String tag_id FK\n  DateTime created_at\n}\n\"discussion_board_thread_category\" {\n  String id PK\n  String code UK\n  String name UK\n  String description \"nullable\"\n  DateTime created_at\n  DateTime updated_at\n}\n\"discussion_board_tag_category\" {\n  String id PK\n  String code UK\n  String name UK\n  String description \"nullable\"\n  DateTime created_at\n  DateTime updated_at\n}\n\"discussion_board_thread\" }o--|| \"discussion_board_thread_category\" : category\n\"discussion_board_post\" }o--|| \"discussion_board_thread\" : thread\n\"discussion_board_post\" }o--o| \"discussion_board_post\" : parent_post\n\"discussion_board_comment\" }o--|| \"discussion_board_post\" : post\n\"discussion_board_comment\" }o--o| \"discussion_board_comment\" : parent_comment\n\"discussion_board_thread_tag\" }o--|| \"discussion_board_thread\" : thread\n\"discussion_board_thread_tag\" }o--|| \"discussion_board_tag_category\" : tag_category\n```\n\n### `discussion_board_thread`\n\n[Thread Entity] - Implements thread management and structure from requirements. Represents a single discussion topic (thread), allows users to initiate topics, and structures posts under a subject. Enforces 3NF by holding only atomic thread details, linking to user and category. No redundant or derived fields.\n- Key relationships: Created by discussion_board_user, assigned to discussion_board_thread_category. Threads have many posts, tags assigned via junction table.\n\nProperties as follows:\n\n- `id`: [Thread unique identifier] - Primary key. Atomic and singular. Used for all thread references.\n- `creator_user_id`: [Thread creator reference] - References thread creator, separating author data from thread content.\n- `category_id`: [Thread category reference] - Links thread to category for filtering/grouping.\n- `title`: [Thread title] - Atomic, non-derived. E.g., 'Election Impact Discussion'.\n- `body`: [Thread body content] - Initial post, atomic, not derived.\n- `is_locked`: [Lock flag] - Thread lock for moderation (true=locked).\n- `is_pinned`: [Pin flag] - Thread highlight at top (true=pinned).\n- `created_at`: [Created timestamp] - Atomic event timestamp.\n- `updated_at`: [Last updated timestamp] - Audit trail support.\n- `deleted_at`: [Deletion timestamp] - Soft deletion for compliance.\n\n### `discussion_board_post`\n\n[Post Entity] - Implements post logic from requirements. Each row represents a post in a thread, including first and replies. 3NF enforced: only atomic fields. Posts reference thread and author, may be parent (for future nesting).\n\nProperties as follows:\n\n- `id`: [Post unique identifier] - Primary key for individual posts.\n- `thread_id`: [Thread reference] - Links post to its parent thread.\n- `author_user_id`: [Author reference] - Author of the post, normalized away from post.\n- `parent_post_id`: [Parent post] - Nullable for top-level; for reply nesting.\n- `body`: [Post content] - Main post text, atomic.\n- `created_at`: [Creation timestamp] - For activity and audit tracking.\n- `updated_at`: [Edit timestamp] - Indicates modification/audit history.\n- `deleted_at`: [Soft delete timestamp] - Compliance/takedown support.\n\n### `discussion_board_comment`\n\n[Comment Entity] - Implements comment/reply requirement. Each row is a single comment. 3NF enforced: each comment is atomic, referencing only its parent post/author/optional parent comment.\n\nProperties as follows:\n\n- `id`: [Comment unique identifier] - Singular reference.\n- `post_id`: [Parent post] - Comment is attached to post.\n- `author_user_id`: [Author reference] - Creator of this comment.\n- `parent_comment_id`: [Parent comment] - Nullable; for replies only.\n- `body`: [Comment body] - Atomic text value.\n- `created_at`: [Created] - Recent activity tracking.\n- `updated_at`: [Updated] - Revision/audit-trail.\n- `deleted_at`: [Soft delete] - Required for moderation.\n\n### `discussion_board_thread_tag`\n\n[Thread Tag Junction Table] - Implements M:N thread-tagging. Junction table only: each row links thread to allowed tag. No tag metadata stored here. Fully normalized (M:N).\n\nProperties as follows:\n\n- `id`: [Junction unique identifier] - PK for junction row.\n- `thread_id`: [Thread FK] - Thread to which tag is assigned.\n- `tag_id`: [Tag FK] - Tag being assigned.\n- `created_at`: [Assignment timestamp] - Tagging operation date.\n\n### `discussion_board_thread_category`\n\n[Thread Category Table] - Implements thread categorization. Each record is a unique, atomic category. No derived values. Used for grouping threads only.\n\nProperties as follows:\n\n- `id`: [Category PK] - Used as FK in threads.\n- `code`: [Category code] - Short, unique code ('economy').\n- `name`: [Category name] - Human-friendly, unique.\n- `description`: [Optional details] - Category description.\n- `created_at`: [Created] - Auditing.\n- `updated_at`: [Updated] - Change/audit tracking.\n\n### `discussion_board_tag_category`\n\n[Tag Category Table] - Master tag list fulfilling tag requirements. Each is atomic, referenced only by ID from thread tags. 3NF maintained: no aggregates or redundant fields.\n\nProperties as follows:\n\n- `id`: [Tag PK] - Unique per tag.\n- `code`: [Tag code] - Unique, short value for tag (e.g. 'gdp', 'inflation').\n- `name`: [Tag name] - UI-friendly.\n- `description`: [Details] - UI/admin usage.\n- `created_at`: [Created] - Audit/ordering.\n- `updated_at`: [Updated] - Change/audit tracking.\n\n## Engagement\n\n```mermaid\nerDiagram\n\"discussion_board_vote\" {\n  String id PK\n  String user_id FK\n  String thread_id FK \"nullable\"\n  String post_id FK \"nullable\"\n  String comment_id FK \"nullable\"\n  String direction\n  DateTime created_at\n}\n\"discussion_board_reaction\" {\n  String id PK\n  String user_id FK\n  String thread_id FK \"nullable\"\n  String post_id FK \"nullable\"\n  String comment_id FK \"nullable\"\n  String reaction_type\n  DateTime created_at\n}\n\"discussion_board_bookmark\" {\n  String id PK\n  String user_id FK\n  String thread_id FK \"nullable\"\n  String post_id FK \"nullable\"\n  String comment_id FK \"nullable\"\n  DateTime created_at\n}\n\"discussion_board_notification\" {\n  String id PK\n  String recipient_user_id FK\n  String thread_id FK \"nullable\"\n  String post_id FK \"nullable\"\n  String comment_id FK \"nullable\"\n  String notification_type\n  Boolean is_read\n  String channel\n  DateTime created_at\n  DateTime delivered_at \"nullable\"\n}\n\"discussion_board_subscription\" {\n  String id PK\n  String user_id FK\n  String thread_id FK \"nullable\"\n  String tag_id FK \"nullable\"\n  String post_id FK \"nullable\"\n  String comment_id FK \"nullable\"\n  String channel\n  DateTime created_at\n  DateTime expires_at \"nullable\"\n}\n```\n\n### `discussion_board_vote`\n\n[Vote Tracking] - This implements the 'Upvote/Downvote' and vote aggregation requirements outlined under 'Content Interaction' in 02_discussion_board_feature_requirements.md. \n\nThis model records every user's voting action (upvote or downvote) on threads, posts, and comments, allowing for tailored, real-time engagement statistics. Maintains 3NF by using atomic fields for all voting events, referencing both the voter and the target entity by normalized foreign keys. For example, when a user upvotes a comment, a new record is inserted specifying the user, target type, and direction. \n\nKey relationships: references the voting user in discussion_board_user and any of discussion_board_thread, discussion_board_post, or discussion_board_comment for the voted content. \nSpecial behaviors: Each user can only vote once per target; direction is strictly controlled; supports both upvotes and downvotes. Duplicate prevention is enforced by a composite unique index on (voter, target_type, target_id).\n\nProperties as follows:\n\n- `id`: [Vote Record Primary Key] - Implements unique identification of every vote operation as required for audit and traceability. This value ensures all vote records remain unique and supports direct lookups. This is fully normalized as it supplies no additional information beside entity identity.\n- `user_id`: [Voting User] - References the user performing the vote according to requirements for audit and user-based tracking. This field allows for querying all votes cast by a particular user and is always required for normalization and referential integrity. For example, counting all upvotes by a user. Not nullable.\n- `thread_id`: [Thread Target] - Refers to the thread being voted on, if applicable, aligning with the need for thread upvote/downvote as in core feature requirements. Enables normalized storage without duplication. Nullable to permit post/comment targets instead.\n- `post_id`: [Post Target] - Refers to a specific post receiving a vote, only set if the target is a post. Implements normalization by storing the reference atomically. Nullable for other vote types.\n- `comment_id`: [Comment Target] - References a comment being voted on, per threaded/nested commentary needs. Only set if the vote applies to a comment. Ensures 3NF by isolating relationships. Nullable for other target types.\n- `direction`: [Vote Direction] - Implements voting direction per 'upvote/downvote' usage. Accepts only 'up' or 'down' as valid values, reflecting the feature requirement. Maintains normalization by storing only atomic values. Used for aggregating vote totals efficiently.\n- `created_at`: [Vote Timestamp] - Records when the vote operation took place in accordance with audit and analytics tracking. Fully normalized, supports temporal queries and audit. For example, to track voting frequency or trends over time.\n\n### `discussion_board_reaction`\n\n[Reaction Log] - Implements the 'Voting & Reactions' and 'Rich Content' feature requirements from 02_discussion_board_feature_requirements.md. \n\nThis model records each user's emoji or symbolic reaction (e.g., emoji, like, disagree) attached to threads, posts, or comments. Fully 3NF: relation links stored atomically, no aggregates or counts in this table. For example, if a user reacts with 'like' to a post, an entry references the user, the post, and the type of reaction. \n\nKey relationships: References user, and one of thread, post, or comment. \nSpecial behaviors: Composite unique index enforces only one reaction of a specific type per user/target; arbitrary duplicate prevention. Used to drive aggregates (in views/materialized views) and for real-time UX feedback.\n\nProperties as follows:\n\n- `id`: [Reaction Primary Key] - Unique identifier for each atomic reaction event. Complies with full normalization principles and supports efficient lookups and audit trails.\n- `user_id`: [Reacting User] - References user account providing the reaction. Required for tracking and personalization. Not nullable for auditability and user-specific features.\n- `thread_id`: [Thread Target] - References target thread if response is at thread level. Nullable if the reaction applies to post or comment.\n- `post_id`: [Post Target] - References post receiving reaction, following atomicity principles. Nullable for thread/comment targets.\n- `comment_id`: [Comment Target] - Used for reactions attached to a comment. Respects normalized data modeling through nullable field.\n- `reaction_type`: [Reaction Type] - Captures the symbolic meaning of the user reaction (e.g., 'like', 'laugh', 'disagree', emoji code). Implements the UI/business requirements for expressive reactions and enables normalized lookup tables in future. For example, records 'like' or 'sad'. Restricts values to atomic symbols only. Not nullable.\n- `created_at`: [Reaction Timestamp] - Records exact time of reaction, enabling both audit/compliance and analytics functions. Fully normalized field supporting sort and filter operations.\n\n### `discussion_board_bookmark`\n\n[User Bookmarking] - Implements the 'Bookmark/Favorite' feature from the 'Content Interaction' section in 02_discussion_board_feature_requirements.md. \n\nAllows users to save threads, posts, or comments for rapid access from their profile dashboards. Model structure maintains 3NF: each bookmark is atomic (user, target), no derived summary stored in this table. For example, when a user bookmarks a thread, one row is inserted per user/thread pair. \n\nKey relationships: Links to user and exactly one type of content. \nSpecial behaviors: Composite unique index to prevent duplicate user/content bookmarks; each bookmark is atomic, supporting efficient bookmarking/unbookmarking.\n\nProperties as follows:\n\n- `id`: [Bookmark Primary Key] - Unique per bookmark, with no derived fields, enabling robust tracking and audit.\n- `user_id`: [Bookmarking User] - The user making the bookmark. Not nullable, as bookmarks must be attributable to a user per requirements.\n- `thread_id`: [Thread Target] - Refers to thread when bookmark targets a whole thread discussion. Nullable for post/comment targeting.\n- `post_id`: [Post Target] - Refers to specific post for more granular bookmarking. Nullable, enabling flexibility in target types.\n- `comment_id`: [Comment Target] - Allows comments as bookmark targets, covering use cases such as referencing a key point. Nullable for thread/post bookmarks.\n- `created_at`: [Bookmark Timestamp] - Stores creation time to provide temporal analytics, audit trails, and personalized bookmark ordering. Atomic field following normalization principles.\n\n### `discussion_board_notification`\n\n[Notifications Log] - Implements notification requirements for alerting users (in-app and email channels) about replies, mentions, moderation actions, etc., as described in the Notifications & Subscriptions features in 02_discussion_board_feature_requirements.md. \n\nEvery notification event is atomic and tied to the recipient and optionally the triggering content. Maintains full normalization by separating each notification event from aggregates or status fields. For example, when a user is mentioned in a thread, a row is inserted with recipient, type, linking to triggering content if needed. \n\nKey relationships: Ties to recipient user and optionally to the related thread/post/comment. \nSpecial behaviors: Non-null constraint on recipient; stores read/unread and delivery details for downstream UI logic. Notification history enables auditing and user controls for opt out, etc.\n\nProperties as follows:\n\n- `id`: [Notification Primary Key] - Atomic identifier supporting notification history, compliance, and lookup. Fulfills normalization requirement for entity-identity separation.\n- `recipient_user_id`: [Recipient User] - Points to the user receiving the notification. Not nullable per notification and user personalization requirements.\n- `thread_id`: [Thread Trigger] - If notification triggered by a thread (e.g., being mentioned, thread activity), link to it. Nullable to generalize for other sources.\n- `post_id`: [Post Trigger] - Refers to originating post if present. Nullable for generic notifications.\n- `comment_id`: [Comment Trigger] - Optionally references comments that triggered notification. Nullable, supporting flexible notification types.\n- `notification_type`: [Notification Type] - Specifies nature of notification (e.g., reply, mention, moderator_action, subscription_digest, etc.), per business requirements. Fully atomic and normalized to allow status/analytics grouping. Not nullable.\n- `is_read`: [Read Status] - Flags whether notification has been acknowledged. Implements user experience requirement for notification badge counts/read indicators. Fully normalized, as only true/false is stored.\n- `channel`: [Notification Channel] - Delivery channel (e.g., 'in_app', 'email'), mapping to platform business logic. Fully normalized and nullable to allow new channel types in future.\n- `created_at`: [Creation Timestamp] - Captures temporal analytics and enables notification sorting; supports full normalization by separating time from any derived status.\n- `delivered_at`: [Delivery Timestamp] - When notification was sent via the chosen channel. Null if not yet delivered (i.e., queue pending). Fully normalized, non-derived field.\n\n### `discussion_board_subscription`\n\n[Notification Subscriptions] - Implements 'Subscribe/Unsubscribe' and alert preferences from Notification & Subscription requirements in 02_discussion_board_feature_requirements.md. \n\nTable records explicit user opt-ins to topics, threads, or tags for notification delivery. Maintains full normalization: each record links subscriber, content, and chosen channel(s), with one row per atomic subscription. For instance, subscribing a user to a thread generates a record referencing the user, thread, and notification channel preferences. No aggregated status (e.g., total subscribers) is denormalized here. \n\nKey relationships: Links user to subscribed content (thread, tag, optionally post/comment for granular alerts). \nSpecial behaviors: Uniqueness constraint prevents duplicate subscriptions to the same channel/source. Supports managing user preferences and batch opt-in/out for analytics and compliance.\n\nProperties as follows:\n\n- `id`: [Subscription Primary Key] - Core unique identifier for tracking a single user/content/channel subscription. Enables efficient lookup and opt-in/out management.\n- `user_id`: [Subscriber] - User who wants to receive notifications about a content/topic. Not nullable as individual opt-in is a requirement; supports user-specific notification feeds.\n- `thread_id`: [Target Thread] - Subscribes to thread-specific notifications. Nullable to allow for tag or post-based subscriptions per requirements.\n- `tag_id`: [Target Tag/Topic] - Allows subscribing to all threads tagged with particular tag. Nullable to support thread or post direct subscription.\n- `post_id`: [Target Post] - For fine-grained notification preference, e.g., replies to a specific post. Nullable for more general subscriptions.\n- `comment_id`: [Target Comment] - For per-comment subscription, supporting granular, event-based notification delivery. Nullable.\n- `channel`: [Subscription Channel] - Indicates chosen notification channel for subscription (e.g., 'in_app', 'email'). Fully normalized as it accommodates one value per field. Not nullable for clarity of delivery logic.\n- `created_at`: [Subscription Creation Timestamp] - Records when subscription was created, supporting analytics, compliance review, and auditing needs. Atomic field, fully normalized.\n- `expires_at`: [Subscription Expiry] - Optional expiry for time-bound subscriptions (e.g., temporary election thread). Nullable for permanent subscriptions. Fully normalized, adhering to business rules.\n\n## Moderation\n\n```mermaid\nerDiagram\n\"discussion_board_report\" {\n  String id PK\n  String reported_user_id FK \"nullable\"\n  String reporting_user_id FK\n  String thread_id FK \"nullable\"\n  String post_id FK \"nullable\"\n  String comment_id FK \"nullable\"\n  String status\n  String category\n  DateTime submitted_at\n  DateTime resolved_at \"nullable\"\n  String details\n}\n\"discussion_board_moderator_action\" {\n  String id PK\n  String moderator_id FK\n  String user_id FK \"nullable\"\n  String report_id FK \"nullable\"\n  String thread_id FK \"nullable\"\n  String post_id FK \"nullable\"\n  String comment_id FK \"nullable\"\n  String action_type\n  String reason\n  DateTime created_at\n}\n\"discussion_board_audit_log\" {\n  String id PK\n  String actor_id FK\n  String affected_user_id FK \"nullable\"\n  String entity_type\n  String entity_id\n  String action\n  String details\n  DateTime created_at\n}\n\"discussion_board_warning\" {\n  String id PK\n  String user_id FK\n  String moderator_id FK\n  String thread_id FK \"nullable\"\n  String post_id FK \"nullable\"\n  String comment_id FK \"nullable\"\n  String reason\n  DateTime issued_at\n}\n\"discussion_board_ban\" {\n  String id PK\n  String user_id FK\n  String moderator_id FK\n  String warning_id FK \"nullable\"\n  String report_id FK \"nullable\"\n  String ban_type\n  String reason\n  DateTime banned_at\n  DateTime expires_at \"nullable\"\n}\n\"discussion_board_moderator_action\" }o--o| \"discussion_board_report\" : report\n\"discussion_board_ban\" }o--o| \"discussion_board_warning\" : warning\n\"discussion_board_ban\" }o--o| \"discussion_board_report\" : report\n```\n\n### `discussion_board_report`\n\n[Report Entity] - This implements the reporting and abuse workflow requirement from section 4 of the feature requirements. Enables users to flag inappropriate content for moderator review, centralizing reports for transparency and action tracking. Maintains 3NF by referencing precise users and content without duplicating user or content data. For example, when a post is flagged as offensive, a record is created here for moderator workflow. \nKey relationships: Links to reported user (optional), reporting user, and polymorphic content (thread/post/comment). Moderators use this to manage abuse workflows. \nSpecial behaviors: Cannot initiate for non-existent content; only one open report per user/content at a time is allowed.\n\nProperties as follows:\n\n- `id`: [Primary Key] - Unique identifier for each report. Implements the entity's uniqueness requirement. Standard UUID, ensures normalization. For example, used as reference in moderation actions.\n- `reported_user_id`: [Offending User FK] - The user reported for abusive content. Enables targeted moderation and disciplinary action. Maintains 3NF by only storing the user reference. For example, a spammer being reported on a post. Nullable for content without registered user (e.g., deleted).\n- `reporting_user_id`: [Reporting User FK] - The user generating the report. Tracks abuse sources and enables accountability. Maintains 3NF as a direct reference. For example, the victim or witness reporting the abuse. Not nullable.\n- `thread_id`: [Thread FK] - Thread being reported, for thread-level abuse. Null for post/comment-level reports. Maintains normalization by referencing rather than duplicating content.\n- `post_id`: [Post FK] - Post being reported, for post-level abuse. Null for thread/comment-level reports. Keeps schema normalized.\n- `comment_id`: [Comment FK] - Comment being reported. Null for thread/post-level reports. Maintains field-level normalization.\n- `status`: [Report Status] - Implements workflow state tracking from moderation requirements. Indicates if a report is 'pending', 'resolved', or 'dismissed'. Normalized (atomic, not derived). For example, status transitions after moderator review. Enum expected in application logic.\n- `category`: [Report Category] - Abuse type such as 'spam', 'harassment', 'off-topic'. Enables analytical grouping and moderator prioritization. Maintains normalization by not repeating explanations—only concise tags. For example, allows dashboard filtering of spam vs. harassment.\n- `submitted_at`: [Report Timestamp] - When abuse was reported. Auditable, normalized, atomic. Used to measure compliance with response time targets.\n- `resolved_at`: [Resolution Timestamp] - When a moderator resolved the report. Atomic, nullable (unresolved when null), keeps schema normalized.\n- `details`: [Report Details] - Freeform explanation from reporter. Fully normalized, as each instance is atomic. For example, a user's description of incident.\n\n### `discussion_board_moderator_action`\n\n[Moderator Action Log] - Implements audit trail for moderator interventions as per Moderation Tools requirements (Section 8). Tracks every moderation event, providing historical accountability and clarity for escalated workflows. Maintains full normalization: stores only atomic reference to affected entities. For example, documenting a post removal or warning issued.\nKey relationships: Linked to moderator, reported user, report, and content (thread/post/comment). Supports analytics and compliance.\nSpecial behaviors: Immutable history (never updated, only appended).\n\nProperties as follows:\n\n- `id`: [Primary Key] - Unique action id for every intervention. Atomic, normalized, for referencing in audits.\n- `moderator_id`: [Moderator FK] - The moderator performing the action. Maintains normalized link for accountability and reports. Not nullable.\n- `user_id`: [User FK] - User affected by the action (could be warned, banned, post deleted). Maintains normalization and supports analytics (e.g., repeat offenders). Nullable for system-level actions.\n- `report_id`: [Report FK] - Direct link to triggering report (if applicable). Enables action-report traceability. Nullable for proactive mod actions (not user-initiated).\n- `thread_id`: [Thread FK] - Thread affected by this action (optional). Maintains normalized reference.\n- `post_id`: [Post FK] - Post affected. Null unless specifically post-level intervention.\n- `comment_id`: [Comment FK] - Comment affected. Nullable, for comment-level moderation only.\n- `action_type`: [Action Type] - Enumerates mod actions such as 'deleted', 'locked', 'warned', 'banned', 'approved', etc. Atomic per row. Application logic enforces allowed set. For example, tracks instance when moderator locks a thread.\n- `reason`: [Moderator Reason] - Justification for action, entered by mod. Fully normalized and atomic per event; clarifies decision context. For example, details why a post was removed.\n- `created_at`: [Timestamp] - Date/time when action occurred. Atomic, 3NF, enables time-based analysis.\n\n### `discussion_board_audit_log`\n\n[Global Audit Log] - Implements operational/audit requirements for compliance (Section 3, Non-Functional). Captures every high-impact admin or moderator change—user status, settings, board config, bans, etc. Designed for transparency and tamper-proof history. 3NF compliance: references changed entity and actor, avoids non-atomic fields. For example, logs every ban, warning, or system setting change.\nKey relationships: Relates to admin/moderator, optionally affected user and system objects.\nSpecial behaviors: Write-only history, never updated (immutable log).\n\nProperties as follows:\n\n- `id`: [Primary Key] - Unique audit entry. Holds atomic record reference. Used for compliance reviews and investigations.\n- `actor_id`: [Actor FK] - User/mod/admin responsible for action. Direct accountability for each logged event. Always populated.\n- `affected_user_id`: [Affected User FK] - User affected by event, if applicable (nullable for system actions). Keeps 3NF, as atomic ref.\n- `entity_type`: [Entity Type] - Indicates what was affected: 'user', 'setting', 'thread', etc. Atomic per log entry. Maintains normalization by not including redundant fields.\n- `entity_id`: [Entity ID] - Universal ID to pair with entity_type for object lookup. Atomic, normalized reference for all logged object types.\n- `action`: [Action] - Verb describing event: 'ban', 'unban', 'setting_change', 'delete', etc. 3NF compliance, only single type per row.\n- `details`: [Details] - Optional, atomic, freeform field allowing extra commentary for audits. Example: rationale behind a setting change.\n- `created_at`: [Timestamp] - When audit entry recorded. Atomic, supports time-based filtering.\n\n### `discussion_board_warning`\n\n[Warning Entity] - Implements user warning workflow, supporting progressive discipline before bans. Complies with feature requirement for moderation and sanction history (Section 8). Ensures warnings are structured, individually reference mod and user, and retained for audit. Maintains 3NF: only links, never duplicates, user or mod info. E.g., user warned for offensive content, with one row per event.\nKey relationships: Directly linked to moderator and user; optionally references related content.\nSpecial behaviors: Sequential warnings tracked for progressive moderation.\n\nProperties as follows:\n\n- `id`: [Primary Key] - Unique id per warning. Enables audit traceability, atomic field. Used to reference a particular warning for bans/escalation.\n- `user_id`: [User FK] - The warned user. Maintains normalization by referencing only. For example, a user accumulating multiple warnings.\n- `moderator_id`: [Moderator FK] - Mod issuing warning, ensures accountability and supports progressive discipline audit. Not nullable.\n- `thread_id`: [Thread FK] - The thread which triggered the warning (if relevant). Normalized, optional.\n- `post_id`: [Post FK] - The post triggering the warning, if relevant. Maintained as atomic/optional.\n- `comment_id`: [Comment FK] - Focused on content-related warnings. Maintains normalization, optional.\n- `reason`: [Warning Reason] - Moderator-issued specific reason. 3NF compliance, atomic string. E.g., citing violation category.\n- `issued_at`: [Issued Timestamp] - When warning was given. Enables time-based moderation analytics and is normalized per event.\n\n### `discussion_board_ban`\n\n[Ban Entity] - Implements account ban/suspension workflow per moderation and compliance requirements. Tracks bans (temporary, permanent) individually. Strict 3NF: only links to user, moderator, triggering action or report. For example, permanent ban for repeat abuse.\nKey relationships: Points to user, moderator, optional warning or report triggering the ban. Used by system for access control/state changes.\nSpecial behaviors: Bans are never updated, only created (history preserved for compliance).\n\nProperties as follows:\n\n- `id`: [Primary Key] - Unique ban record. Used for referencing in audit logs and reversals. Normalization: one row per ban event.\n- `user_id`: [User FK] - Banned user. Normalization: ensures canonical reference; never duplicated user information.\n- `moderator_id`: [Moderator FK] - Moderator responsible for ban/termination. Only references, never duplicates mod identity.\n- `warning_id`: [Warning FK] - Warning event that triggered this ban (if relevant). Null unless escalation. Maintains normalization.\n- `report_id`: [Report FK] - Abuse report that resulted in ban (if relevant). Provides direct traceability and keeps schema normalized.\n- `ban_type`: [Ban Type] - 'temporary' or 'permanent'. Application logic defines allowed enum. Keeps atomic, normalized per ban row.\n- `reason`: [Ban Reason] - Atomic string detailing moderator justification for ban.\n- `banned_at`: [Ban Start] - When ban was applied. For ongoing compliance and system checks.\n- `expires_at`: [Ban Expiry] - Ban end (null if permanent). Keeps type atomic and supports dynamic unbanning.\n\n## Analytics\n\n```mermaid\nerDiagram\n\"discussion_board_thread_stats\" {\n  String id PK\n  String discussion_board_thread_id FK,UK\n  Int post_count\n  Int comment_count\n  Int upvote_count\n  Int downvote_count\n  Int bookmark_count\n  Int abuse_report_count\n  DateTime created_at\n  DateTime updated_at\n}\n\"discussion_board_user_activity\" {\n  String id PK\n  String discussion_board_user_id FK,UK\n  Int threads_authored\n  Int posts_authored\n  Int comments_authored\n  Int upvotes_given\n  Int downvotes_given\n  Int reports_made\n  Int bookmarks_created\n  DateTime created_at\n  DateTime updated_at\n}\n\"discussion_board_content_abuse_metric\" {\n  String id PK\n  String moderator_id FK \"nullable\"\n  String date\n  String abuse_type\n  Int flagged_count\n  Int auto_hidden_count\n  Int escalation_count\n  Int false_positive_count\n  Int avg_resolution_time_minutes\n  DateTime created_at\n  DateTime updated_at\n}\n```\n\n### `discussion_board_thread_stats`\n\nThread Statistics - This implements the thread analytics and performance tracking requirement from the requirements document (see 'Analytics Dashboard', 'Content Quality Metrics', and 'Trending Topics' features). \n\nProvides essential storage for per-thread statistics such as the number of posts, comments, upvotes, downvotes, bookmarks, and abuse reports. Maintains 3NF by separating out aggregate/thread-level metrics from the main thread/post tables, avoiding redundancy or transitive dependencies. For example, this table is queried to highlight trending threads on dashboards or to trigger moderation review if abuse counts spike.\n\nKey relationships: references each thread (discussion_board_thread_id) directly; thread stats may be joined with user, moderator, or content abuse metric tables for advanced reporting. \nSpecial behaviors: Statistics are updated through dedicated service logic and batch jobs; all values reset if threads are deleted. No calculated fields here—pre-calculation is only allowed in mv_ materialized views for reporting snapshots.\n\nProperties as follows:\n\n- `id`\n  > Primary Key - Implements unique, stable identification for each thread statistics record.\n  >\n  > Uniquely identifies statistics per thread. Ensures normalization as the single-row-per-thread record anchor. Example: Used as the foreign key reference from other analytic or reporting systems.\n- `discussion_board_thread_id`\n  > Thread Reference - Implements the mapping from statistics to the corresponding thread.\n  >\n  > Connects per-thread statistics to its primary discussion thread. Enforces normalization and referential integrity: every set of stats must belong to a valid thread. Example: When calculating trending topics, stats are filtered/grouped by this association. Constraint: Unique per thread.\n- `post_count`\n  > Post Count - Implements tracking of total posts per thread.\n  >\n  > Atomic and normalized: not derived, just incremented via logic. Example: Used for ranking or showing thread activity level.\n- `comment_count`\n  > Comment Count - Implements tracking of comment volume per thread.\n  >\n  > Normalized, not computed from joins—only incremented or decremented on comment add/delete. For example, used to quickly filter threads with high participation.\n- `upvote_count`\n  > Upvote Count - Implements part of engagement analytics per thread.\n  >\n  > Atomic, directly updated, not derived from votes table. Used for popularity display and filters. Normalized and non-redundant.\n- `downvote_count`\n  > Downvote Count - Complements engagement analytics, enables controversial thread detection.\n  >\n  > Atomic field, directly maintained—not computed on the fly or denormalized from votes. Used in sort/filter, supports normalization by not including aggregate scores elsewhere.\n- `bookmark_count`\n  > Bookmark Count - Tracks unique user bookmarks for this thread.\n  >\n  > Atomic integer, normalized: no redundant storage in user or thread tables. Helps power user feed and favorites lists.\n- `abuse_report_count`\n  > Abuse Report Count - Implements monitoring/reporting for moderation triggers.\n  >\n  > Atomic, not computed; updated as users report content. For example, threads hitting a certain threshold show up in moderation dashboards. Supports auditing and quality control without polluting main business records.\n- `created_at`\n  > Created At Timestamp - Implements record origination tracking.\n  >\n  > Atomic timestamp, supports audit, migration, and compliance. Example: Used by analytics for time-based trends.\n- `updated_at`\n  > Updated At Timestamp - Implements update tracking for stats changes.\n  >\n  > Ensures all stats edits are tracked and assists with synchronization/auditing. Required for compliant analytics and consistent service behavior.\n\n### `discussion_board_user_activity`\n\nUser Activity Metrics - This implements the 'Profile Activity Feed' and user engagement analytics features (see 'User Profiles & Activity', 'Analytics Dashboard').\n\nStores usage statistics for each user including counts of threads authored, comments, upvotes/downvotes made, reports submitted, and bookmarks created. 3NF compliant by having ONLY activity metrics per user—no denormalized data. For example, this table feeds user reputation calculations and enables profile activity views.\n\nKey relationships: references discussion_board_user, discussion_board_user_profile for detailed join queries. Used by moderators/admins to assess user activity patterns. Special behaviors: Reset or anonymize activity counts for deleted/deactivated users as part of privacy compliance.\n\nProperties as follows:\n\n- `id`\n  > Primary Key - Uniquely identifies each user activity metrics record.\n  >\n  > Guarantees one-to-one mapping with user entity for their aggregated metrics. 3NF: no derived data here—core activity metrics only.\n- `discussion_board_user_id`\n  > User Reference - Links metrics to an individual user account.\n  >\n  > Supports referential integrity and 3NF: all metrics are for a real, valid user only. Example: Used when building profile dashboards or leaderboard features.\n- `threads_authored`\n  > Threads Authored - Counts threads created by this user.\n  >\n  > Atomic, not derived elsewhere. Used in calculating engagement or reputation features.\n- `posts_authored`\n  > Posts Authored - Number of initial posts (not comments) started by the user.\n  >\n  > Maintains normalization—no redundancy with thread or post tables.\n- `comments_authored`\n  > Comments Authored - Tracks comment participation for this user.\n  >\n  > Atomic value, 3NF compliant. Used in moderation, reputation calculations, and personalized analytics.\n- `upvotes_given`\n  > Upvotes Given - Number of times the user upvoted a thread or comment.\n  >\n  > Normalization: never derived, direct update only. Enables analysis of engagement and supports anti-abuse monitoring.\n- `downvotes_given`\n  > Downvotes Given - Number of downvote actions performed by user.\n  >\n  > Atomic and non-redundant. Used for abuse pattern analysis and community flavor metrics.\n- `reports_made`\n  > Reports Made - Total reports submitted by user for abusive/inappropriate content.\n  >\n  > Enables anti-abuse metrics, moderation insights, and potential restrictions for frequent false reporters. 3NF: only original counts are stored.\n- `bookmarks_created`\n  > Bookmarks Created - Tracks count of bookmarks a user has made.\n  >\n  > Atomic field for UX features like favorites. Complies with normalization—bookmarks data not duplicated here.\n- `created_at`\n  > Created At Timestamp - When the activity metrics record was created.\n  >\n  > Supports audit and traceability for compliance and analytics.\n- `updated_at`\n  > Updated At Timestamp - Last time user metrics were updated.\n  >\n  > Required for synchronization, analytics workflows, and audit trail features.\n\n### `discussion_board_content_abuse_metric`\n\nContent Abuse Metrics - Implements the monitoring and metric-tracking requirements for abusive, spammy, or otherwise policy-violating activities (see Non-Functional: Security, Moderation & Abuse Prevention, and Analytics Dashboard requirements).\n\nTracks per-day metrics for flagged posts, abuse types, resolution times, auto-hides, moderator escalations, and false positive rates. Maintains 3NF by keeping only atomic, event-driven counts—no derived aggregates or flags. Example: Used by moderators and system analysts to determine policy needs, spot abuse trends, and audit moderator efficiency.\n\nKey relationships: Optionally references moderator for moderator-action mapping. Special behaviors: All time fields are UTC-normalized; no calculated fields—historical snapshots for trends must use mv_ tables.\n\nProperties as follows:\n\n- `id`\n  > Primary Key - Unique identifier for each metric record, one per day+category.\n  >\n  > Ensures uniqueness for each set of abuse metrics tracked, supporting 3NF and compliance.\n- `moderator_id`\n  > Moderator Reference - If applicable, links the metrics to a specific moderator for escalation/resolution mapping.\n  >\n  > 3NF: Foreign key nullable—some metrics may not involve a moderator (e.g., automated actions).\n- `date`\n  > Metric Date - Calendar day for which these metrics are tracked. Stored as ISO date string in yyyy-mm-dd format due to Prisma/JSON schema type constraints.\n  >\n  > Helps enforce normalized per-day storage. Example usage: plotting abuse events over time.\n- `abuse_type`\n  > Abuse Type - String field categorizing abuse/spam type for the metric row (e.g., spam, hate_speech, offensive_language, off_topic, etc.).\n  >\n  > Maintains atomic (non-derived) data, supports normalization. Later analytics may perform grouping or pivoting on this field.\n- `flagged_count`\n  > Flagged Count - Number of posts/comments flagged as abusive for this type/date.\n  >\n  > Atomic, not calculated. Example: Input into moderation alerts, compliance or escalation triggers.\n- `auto_hidden_count`\n  > Auto Hidden Count - Number of posts/comments that were auto-hidden by policy on this date/type.\n  >\n  > Enables monitoring of automated moderation effectiveness and supports normalization by centralizing such stats here only.\n- `escalation_count`: Escalation Count - Metric for abuse events escalated to a moderator or admin.\n- `false_positive_count`\n  > False Positive Count - Number of flagged events later cleared as false positives.\n  >\n  > Atomic and normalized; only tracked here, not in user or content tables. For example, helps track the impact of moderation improvements or AI upgrades.\n- `avg_resolution_time_minutes`\n  > Average Resolution Time (Minutes) - Time spent (mean) to resolve, measured in minutes.\n  >\n  > Atomic metric, supports moderation workflow optimization. Normalized: full timestamps elsewhere, metric-only here. Used in dashboard averages and efficiency reports.\n- `created_at`\n  > Created At Timestamp - Origination time of this metric record.\n  >\n  > Ensures compliance, allows for backfill/audit. Supports time-based analytics for abuse detection improvements.\n- `updated_at`\n  > Updated At Timestamp - When this record was last updated.\n  >\n  > Used for auditing statistics and ETL workflows in analytics pipelines.\n\n## Utility\n\n```mermaid\nerDiagram\n\"discussion_board_setting\" {\n  String id PK\n  String key UK\n  String value\n  String description \"nullable\"\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"discussion_board_system_config\" {\n  String id PK\n  String key\n  String value\n  String description \"nullable\"\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n```\n\n### `discussion_board_setting`\n\n[Platform Configuration] - This implements the global platform and board-level settings requirement detailed in the feature, security, and privacy sections of the requirements analysis report (see 02_discussion_board_feature_requirements.md, 03_discussion_board_nonfunctional_and_operational_requirements.md). \n\nThis model enables administrators to store and manage mutable configuration values that affect discussion board functionality, presentation, and enforcement of rules—such as registration policy, default privacy, feature toggles (like post editing, image uploads), and branding. Maintains strict 3NF normalization by storing only atomic configuration entries, each identified by a symbolic key. No settings are duplicated, and all relations to system config (for default inheritance) are managed externally. For example, to toggle whether new threads require approval, a setting with key 'require_thread_approval' can be set to true or false. \n\nKey relationships: Should be referenced by system components enforcing runtime behavior; no hard foreign keys to application-level models (stateless coupling).\nSpecial behaviors: Uniqueness by 'key' is enforced. Deletion disables the setting but doesn't remove its value (for audit).\n\nProperties as follows:\n\n- `id`\n  > [Unique Setting Key] - Implements the unique identification requirement for persistent board settings.\n  > Business meaning: Each setting must be addressable, auditable and updatable atomically. Ensures normalization by using a UUID-based identifier, aligning with best practices for distributed systems.\n  > For example, to update the 'default_thread_sort' behavior, the corresponding setting row is addressed via this field.\n- `key`\n  > [Setting Key] - Implements symbolic addressing of each configuration aspect as required for modularity and feature toggling (see system configuration requirements).\n  > Business meaning: Allows individual settings (like 'allow_file_uploads', 'enable_external_login') to be toggled/queried atomically. Ensures strict normalization as each entry is uniquely keyed and non-redundant. For example, 'require_email_verification' represents the signup policy toggle.\n- `value`\n  > [Atomic Value] - Stores the configuration value as required for runtime lookups and mutation.\n  > Business meaning: Enables flexible value types (as string), supporting boolean, number, JSON-stringified objects where needed. Remains normalized as all values are atomic and not derived; interpretation is handled in business logic. Example usage: 'false' for 'require_thread_approval' disables moderation queue for threads.\n- `description`\n  > [Human-Readable Description] - Implements administrator tooling and auditability requirements.\n  > Business meaning: Provides context about the setting’s effect and usage, supporting maintainability and transparency. For example, \"If true, moderators must approve every new thread.\" This is atomic and ensures no duplicated documentation.\n  > Nullable, as not all settings require verbose descriptions.\n- `created_at`\n  > [Creation Timestamp] - Supports audit trail, compliance, and troubleshooting workflows (03_discussion_board_nonfunctional_and_operational_requirements.md).\n  > Business meaning: Allows admins to audit when this setting was introduced. Ensures normalization as the timestamp is intrinsic to the row, not derived. Example: Used in audit reporting to trace config changes over time.\n- `updated_at`\n  > [Last Update Timestamp] - Tracks when the setting was modified, supporting audit logs and compliance.\n  > Business meaning: Used to verify when a given setting was last changed, e.g. for privacy compliance or rollback. Maintains normalization as this field is not computed from others.\n  > Example: On toggling 'allow_external_sharing', this gets refreshed automatically.\n- `deleted_at`\n  > [Soft-Delete Marker] - Implements the logical deletion audit and recovery requirement (nonfunctional section on compliance, disaster recovery).\n  > Business meaning: Marks a setting as inactive rather than physically deleting, supporting rollback and postmortem.\n  > Ensures normalization by storing row state atomically. Example: Disabled settings can be referenced for rollback or audit purposes.\n\n### `discussion_board_system_config`\n\n[System-wide Default Configuration] - This implements the requirement for global, default system configuration (see section on configuration inheritance and compliance, 03_discussion_board_nonfunctional_and_operational_requirements.md).\n\nThis model provides a single authoritative set of configuration values, typically set by the system owner, which cascade as defaults for all board-level settings unless overridden in discussion_board_setting. Maintains 3NF by holding atomic config fields only—no computed values or redundancies. For example, setting the system-wide default for 'max_upload_size' and 'invite_policy'.\n\nKey relationships: Not directly referenced by board instances or users (stateless), but queried by system logic to resolve runtime policies for all boards.\nSpecial behaviors: Only one row should exist at a time in most deployments; multiple configs used for versioning, which should be enforced by application/business logic outside DB.\n\nProperties as follows:\n\n- `id`\n  > [System Config Unique ID] - Implements the need for identifying each system-wide configuration set (for versioning, audit, or recovery).\n  > Business meaning: Allows referencing, updating, or rolling back changes atomically. Maintains normalization as an atomic UUID not derived from other fields. For example, on full platform config migration, a new row is inserted and old one marked deleted.\n- `key`\n  > [Configuration Key] - Names the specific configuration point in the system, as per requirement for admin-driven, symbolic settings.\n  > Business meaning: Flexible to store any system-level default (such as 'default_privacy_level' or 'max_upload_size_bytes'). Strict normalization: every configuration item is atomic, logical grouping is by application logic. Example: Setting 'enable_registration' to allow/disallow new accounts.\n- `value`\n  > [Atomic Value] - The actual value for the specified config key. May be used as a string, boolean, numeric, or JSON-stringified object by external logic.\n  > Business meaning: Enables maximum runtime flexibility (see dynamic config requirement) without denormalization—all values stored atomically as string. For example, storing '100' as the default threads-per-page setting.\n- `description`\n  > [Description] - Explains what the configuration controls for admin context, as required for nonfunctional requirements on maintainability and transparency.\n  > Business meaning: Helps admins understand system default values. Nullable (not all settings need documentation). Maintains normalization—each row documents one config point. Example: 'Default limit for file attachment size, in bytes.'\n- `created_at`\n  > [Creation Timestamp] - Records when this configuration entry was created, supporting compliance and configuration audit trails.\n  > Business meaning: Used for recovery and forensic tracking of policy changes. Strictly normalized—atomic to the row. Example: Auditing how system-wide spam filter rules evolved.\n- `updated_at`\n  > [Update Timestamp] - Tracks updates, enabling controlled config changes and auditing (see disaster recovery and compliance requirements).\n  > Business meaning: Ensures that admins can investigate when key system defaults last changed. Not computed/derived from other fields, maintaining strict normalization.\n- `deleted_at`\n  > [Soft-Delete Marker] - Implements requirements for auditability and rollback in global config management.\n  > Business meaning: Instead of being dropped, obsolete configs are softly deleted by setting this field, preserving history for compliance. Nullable for active rows. For example, marking outdated 'default_notification_email_policy'.\n\n## default\n\n```mermaid\nerDiagram\n\"mv_discussion_thread_activity\" {\n  String id PK\n  String thread_id FK,UK\n  Int reply_count\n  DateTime last_posted_at \"nullable\"\n  String participant_user_ids \"nullable\"\n}\n```\n\n### `mv_discussion_thread_activity`\n\n[Materialized View: Thread Activity] - Implements denormalized aggregate/reporting requirements for threads. Contains precomputed fields like reply_count for high-performance dashboards; these are omitted from base tables to enforce normalization.\n\nProperties as follows:\n\n- `id`: [Materialized view PK] - Identifies unique thread activity row.\n- `thread_id`: [Thread reference] - 1:1 to thread.id for aggregate metrics.\n- `reply_count`: [Aggregate] - Precomputed in materialization process.\n- `last_posted_at`: [Denormalized timestamp] - Recent post.\n- `participant_user_ids`: [Participant IDs] - Denormalized string, analytics only.\n",
      "diagrams": {
        "Core": "```mermaid\nerDiagram\n\"discussion_board_users\" {\n  String id PK\n  String username UK\n  String email UK\n  String password_hash\n  Boolean is_active\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"discussion_board_guests\" {\n  String id PK\n  String session_id\n  String ip_address\n  String user_agent \"nullable\"\n  DateTime accessed_at\n}\n\"discussion_board_moderators\" {\n  String id PK\n  String user_id FK,UK\n  Boolean is_active\n  DateTime assigned_at\n  DateTime revoked_at \"nullable\"\n}\n\"discussion_board_admins\" {\n  String id PK\n  String user_id FK,UK\n  Boolean is_active\n  DateTime assigned_at\n  DateTime revoked_at \"nullable\"\n}\n\"discussion_board_user_profiles\" {\n  String id PK\n  String user_id FK,UK\n  String display_name \"nullable\"\n  String(80000) avatar_url \"nullable\"\n  String bio \"nullable\"\n  String badges \"nullable\"\n}\n\"discussion_board_user_settings\" {\n  String id PK\n  String user_id FK,UK\n  Boolean notification_email\n  Boolean notification_in_app\n  String accessibility_mode \"nullable\"\n  String display_density \"nullable\"\n}\n\"discussion_board_moderators\" |o--|| \"discussion_board_users\" : fk_discussion_board_moderators_user_id_discussion_board_users_id\n\"discussion_board_admins\" |o--|| \"discussion_board_users\" : fk_discussion_board_admins_user_id_discussion_board_users_id\n\"discussion_board_user_profiles\" |o--|| \"discussion_board_users\" : fk_discussion_board_user_profiles_user_id_discussion_board_users_id\n\"discussion_board_user_settings\" |o--|| \"discussion_board_users\" : fk_discussion_board_user_settings_user_id_discussion_board_users_id\n```",
        "Discussion": "```mermaid\nerDiagram\n\"discussion_board_thread\" {\n  String id PK\n  String creator_user_id FK\n  String category_id FK\n  String title\n  String body\n  Boolean is_locked\n  Boolean is_pinned\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"discussion_board_post\" {\n  String id PK\n  String thread_id FK\n  String author_user_id FK\n  String parent_post_id FK \"nullable\"\n  String body\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"discussion_board_comment\" {\n  String id PK\n  String post_id FK\n  String author_user_id FK\n  String parent_comment_id FK \"nullable\"\n  String body\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"discussion_board_thread_tag\" {\n  String id PK\n  String thread_id FK\n  String tag_id FK\n  DateTime created_at\n}\n\"discussion_board_thread_category\" {\n  String id PK\n  String code UK\n  String name UK\n  String description \"nullable\"\n  DateTime created_at\n  DateTime updated_at\n}\n\"discussion_board_tag_category\" {\n  String id PK\n  String code UK\n  String name UK\n  String description \"nullable\"\n  DateTime created_at\n  DateTime updated_at\n}\n\"discussion_board_thread\" }o--|| \"discussion_board_thread_category\" : category\n\"discussion_board_post\" }o--|| \"discussion_board_thread\" : thread\n\"discussion_board_post\" }o--o| \"discussion_board_post\" : parent_post\n\"discussion_board_comment\" }o--|| \"discussion_board_post\" : post\n\"discussion_board_comment\" }o--o| \"discussion_board_comment\" : parent_comment\n\"discussion_board_thread_tag\" }o--|| \"discussion_board_thread\" : thread\n\"discussion_board_thread_tag\" }o--|| \"discussion_board_tag_category\" : tag_category\n```",
        "Engagement": "```mermaid\nerDiagram\n\"discussion_board_vote\" {\n  String id PK\n  String user_id FK\n  String thread_id FK \"nullable\"\n  String post_id FK \"nullable\"\n  String comment_id FK \"nullable\"\n  String direction\n  DateTime created_at\n}\n\"discussion_board_reaction\" {\n  String id PK\n  String user_id FK\n  String thread_id FK \"nullable\"\n  String post_id FK \"nullable\"\n  String comment_id FK \"nullable\"\n  String reaction_type\n  DateTime created_at\n}\n\"discussion_board_bookmark\" {\n  String id PK\n  String user_id FK\n  String thread_id FK \"nullable\"\n  String post_id FK \"nullable\"\n  String comment_id FK \"nullable\"\n  DateTime created_at\n}\n\"discussion_board_notification\" {\n  String id PK\n  String recipient_user_id FK\n  String thread_id FK \"nullable\"\n  String post_id FK \"nullable\"\n  String comment_id FK \"nullable\"\n  String notification_type\n  Boolean is_read\n  String channel\n  DateTime created_at\n  DateTime delivered_at \"nullable\"\n}\n\"discussion_board_subscription\" {\n  String id PK\n  String user_id FK\n  String thread_id FK \"nullable\"\n  String tag_id FK \"nullable\"\n  String post_id FK \"nullable\"\n  String comment_id FK \"nullable\"\n  String channel\n  DateTime created_at\n  DateTime expires_at \"nullable\"\n}\n```",
        "Moderation": "```mermaid\nerDiagram\n\"discussion_board_report\" {\n  String id PK\n  String reported_user_id FK \"nullable\"\n  String reporting_user_id FK\n  String thread_id FK \"nullable\"\n  String post_id FK \"nullable\"\n  String comment_id FK \"nullable\"\n  String status\n  String category\n  DateTime submitted_at\n  DateTime resolved_at \"nullable\"\n  String details\n}\n\"discussion_board_moderator_action\" {\n  String id PK\n  String moderator_id FK\n  String user_id FK \"nullable\"\n  String report_id FK \"nullable\"\n  String thread_id FK \"nullable\"\n  String post_id FK \"nullable\"\n  String comment_id FK \"nullable\"\n  String action_type\n  String reason\n  DateTime created_at\n}\n\"discussion_board_audit_log\" {\n  String id PK\n  String actor_id FK\n  String affected_user_id FK \"nullable\"\n  String entity_type\n  String entity_id\n  String action\n  String details\n  DateTime created_at\n}\n\"discussion_board_warning\" {\n  String id PK\n  String user_id FK\n  String moderator_id FK\n  String thread_id FK \"nullable\"\n  String post_id FK \"nullable\"\n  String comment_id FK \"nullable\"\n  String reason\n  DateTime issued_at\n}\n\"discussion_board_ban\" {\n  String id PK\n  String user_id FK\n  String moderator_id FK\n  String warning_id FK \"nullable\"\n  String report_id FK \"nullable\"\n  String ban_type\n  String reason\n  DateTime banned_at\n  DateTime expires_at \"nullable\"\n}\n\"discussion_board_moderator_action\" }o--o| \"discussion_board_report\" : report\n\"discussion_board_ban\" }o--o| \"discussion_board_warning\" : warning\n\"discussion_board_ban\" }o--o| \"discussion_board_report\" : report\n```",
        "Analytics": "```mermaid\nerDiagram\n\"discussion_board_thread_stats\" {\n  String id PK\n  String discussion_board_thread_id FK,UK\n  Int post_count\n  Int comment_count\n  Int upvote_count\n  Int downvote_count\n  Int bookmark_count\n  Int abuse_report_count\n  DateTime created_at\n  DateTime updated_at\n}\n\"discussion_board_user_activity\" {\n  String id PK\n  String discussion_board_user_id FK,UK\n  Int threads_authored\n  Int posts_authored\n  Int comments_authored\n  Int upvotes_given\n  Int downvotes_given\n  Int reports_made\n  Int bookmarks_created\n  DateTime created_at\n  DateTime updated_at\n}\n\"discussion_board_content_abuse_metric\" {\n  String id PK\n  String moderator_id FK \"nullable\"\n  String date\n  String abuse_type\n  Int flagged_count\n  Int auto_hidden_count\n  Int escalation_count\n  Int false_positive_count\n  Int avg_resolution_time_minutes\n  DateTime created_at\n  DateTime updated_at\n}\n```",
        "Utility": "```mermaid\nerDiagram\n\"discussion_board_setting\" {\n  String id PK\n  String key UK\n  String value\n  String description \"nullable\"\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"discussion_board_system_config\" {\n  String id PK\n  String key\n  String value\n  String description \"nullable\"\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n```",
        "default": "```mermaid\nerDiagram\n\"mv_discussion_thread_activity\" {\n  String id PK\n  String thread_id FK,UK\n  Int reply_count\n  DateTime last_posted_at \"nullable\"\n  String participant_user_ids \"nullable\"\n}\n```"
      }
    },
    "step": 0
  }
]